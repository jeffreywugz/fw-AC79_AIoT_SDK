In archive main.or32:

DNSCommon.o:     file format elf32-dv10


Disassembly of section .text:

00000000 <_putVal32>:
_putVal32():
       0:	10 32       	P2 = R0;
       2:	82 c6 41 81 	R0 = R1 >> 0x18;
       6:	10 9b       	B[P2] = R0;
       8:	82 c6 81 81 	R0 = R1 >> 0x10;
       c:	90 e6 01 00 	B[P2 + 0x1] = R0;
      10:	82 c6 c1 81 	R0 = R1 >> 0x8;
      14:	90 e6 02 00 	B[P2 + 0x2] = R0;
      18:	42 30       	R0 = P2;
      1a:	91 e6 03 00 	B[P2 + 0x3] = R1;
      1e:	20 64       	R0 += 0x4;		/* (  4) */
      20:	10 00       	RTS;
	...

00000024 <_mDNSv4AddrIsRFC1918>:
_mDNSv4AddrIsRFC1918():
      24:	10 32       	P2 = R0;
      26:	51 60       	R1 = 0xa (X);		/*		R1=0xa( 10) */
      28:	10 99       	R0 = B[P2] (Z);
      2a:	08 08       	CC = R0 == R1;
      2c:	13 18       	IF CC JUMP 0x52 <_mDNSv4AddrIsRFC1918+0x2e>;
      2e:	21 e1 ac 00 	R1 = 0xac (X);		/*		R1=0xac(172) */
      32:	08 08       	CC = R0 == R1;
      34:	09 14       	IF !CC JUMP 0x46 <_mDNSv4AddrIsRFC1918+0x22> (BP);
      36:	91 e4 01 00 	R1 = B[P2 + 0x1] (Z);
      3a:	20 e1 f0 00 	R0 = 0xf0 (X);		/*		R0=0xf0(240) */
      3e:	01 54       	R0 = R1 & R0;
      40:	81 60       	R1 = 0x10 (X);		/*		R1=0x10( 16) */
      42:	08 08       	CC = R0 == R1;
      44:	07 1c       	IF CC JUMP 0x52 <_mDNSv4AddrIsRFC1918+0x2e> (BP);
      46:	81 e1 c0 a8 	R1 = 0xa8c0 (Z);		/*		R1=0xa8c0(43200) */
      4a:	10 95       	R0 = W[P2] (Z);
      4c:	08 08       	CC = R0 == R1;
      4e:	00 02       	R0 = CC;
      50:	02 20       	JUMP.S 0x54 <_mDNSv4AddrIsRFC1918+0x30>;
      52:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
      54:	10 00       	RTS;
	...

00000058 <_GetFirstActiveInterface>:
_GetFirstActiveInterface():
      58:	03 20       	JUMP.S 0x5e <_GetFirstActiveInterface+0x6>;
      5a:	10 32       	P2 = R0;
      5c:	10 91       	R0 = [P2];
      5e:	00 0c       	CC = R0 == 0x0;
      60:	06 1c       	IF CC JUMP 0x6c <_GetFirstActiveInterface+0x14> (BP);
      62:	10 32       	P2 = R0;
      64:	91 e4 04 00 	R1 = B[P2 + 0x4] (Z);
      68:	01 0c       	CC = R1 == 0x0;
      6a:	f8 1f       	IF CC JUMP 0x5a <_GetFirstActiveInterface+0x2> (BP);
      6c:	10 00       	RTS;
	...

00000070 <_GetNextActiveInterfaceID>:
_GetNextActiveInterfaceID():
      70:	10 32       	P2 = R0;
      72:	67 01       	[--SP] = RETS;
      74:	a6 6f       	SP += -0xc;		/* (-12) */
      76:	10 91       	R0 = [P2];
      78:	ff e3 f0 ff 	CALL 0x58 <_GetFirstActiveInterface>;
      7c:	10 32       	P2 = R0;
      7e:	42 0c       	CC = P2 == 0x0;
      80:	04 1c       	IF CC JUMP 0x88 <_GetNextActiveInterfaceID+0x18> (BP);
      82:	10 e4 10 05 	R0 = [P2 + 0x1440];
      86:	02 20       	JUMP.S 0x8a <_GetNextActiveInterfaceID+0x1a>;
      88:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
      8a:	66 6c       	SP += 0xc;		/* ( 12) */
      8c:	27 01       	RETS = [SP++];
      8e:	10 00       	RTS;

00000090 <_NumCacheRecordsForInterfaceID>:
_NumCacheRecordsForInterfaceID():
      90:	10 32       	P2 = R0;
      92:	c5 04       	[--SP] = (P5:5);
      94:	2d e1 5c 01 	P5 = 0x15c (X);		/*		P5=0x15c(348) */
      98:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
      9a:	28 e1 f3 01 	P0 = 0x1f3 (X);		/*		P0=0x1f3(499) */
      9e:	6a 5b       	P5 = P2 + P5;
      a0:	b2 e0 13 00 	LSETUP(0xa4 <_NumCacheRecordsForInterfaceID+0x14>, 0xc6 <_NumCacheRecordsForInterfaceID+0x36>) LC1 = P0;
      a4:	6a 90       	P2 = [P5++];
      a6:	0e 20       	JUMP.S 0xc2 <_NumCacheRecordsForInterfaceID+0x32>;
      a8:	00 00       	NOP;
      aa:	91 ac       	P1 = [P2 + 0x8];
      ac:	08 20       	JUMP.S 0xbc <_NumCacheRecordsForInterfaceID+0x2c>;
      ae:	00 00       	NOP;
      b0:	ca a1       	R2 = [P1 + 0x1c];
      b2:	0a 08       	CC = R2 == R1;
      b4:	10 30       	R2 = R0;
      b6:	0a 64       	R2 += 0x1;		/* (  1) */
      b8:	02 07       	IF CC R0 = R2;
      ba:	49 91       	P1 = [P1];
      bc:	41 0c       	CC = P1 == 0x0;
      be:	f8 17       	IF !CC JUMP 0xae <_NumCacheRecordsForInterfaceID+0x1e> (BP);
      c0:	52 91       	P2 = [P2];
      c2:	42 0c       	CC = P2 == 0x0;
      c4:	f2 17       	IF !CC JUMP 0xa8 <_NumCacheRecordsForInterfaceID+0x18> (BP);
      c6:	00 00       	NOP;
      c8:	85 04       	(P5:5) = [SP++];
      ca:	10 00       	RTS;

000000cc <_mDNSRandom>:
_mDNSRandom():
      cc:	e4 05       	[--SP] = (R7:4, P5:4);
      ce:	67 01       	[--SP] = RETS;
      d0:	a6 6f       	SP += -0xc;		/* (-12) */
      d2:	28 30       	R5 = R0;
      d4:	0f 60       	R7 = 0x1 (X);		/*		R7=0x1(  1) */
      d6:	03 20       	JUMP.S 0xdc <_mDNSRandom+0x10>;
      d8:	0f 4f       	R7 <<= 0x1;
      da:	07 4a       	BITSET (R7, 0x0);		/* bit  0 */
      dc:	af 09       	CC = R7 < R5 (IU);
      de:	fd 1f       	IF CC JUMP 0xd8 <_mDNSRandom+0xc> (BP);
      e0:	4d e1 00 00 	P5.H = 0x0;		/* (  0)	P5=0x15c */
      e4:	4c e1 00 00 	P4.H = 0x0;		/* (  0)	P4=0x0 <_putVal32> */
      e8:	0d e1 04 00 	P5.L = 0x4;		/* (  4)	P5=0x4 */
      ec:	ae 60       	R6 = 0x15 (X);		/*		R6=0x15( 21) */
      ee:	0c e1 00 00 	P4.L = 0x0;		/* (  0)	P4=0x0 <_putVal32> */
      f2:	0c 60       	R4 = 0x1 (X);		/*		R4=0x1(  1) */
      f4:	28 91       	R0 = [P5];
      f6:	00 0c       	CC = R0 == 0x0;
      f8:	0d 14       	IF !CC JUMP 0x112 <_mDNSRandom+0x46> (BP);
      fa:	ff e3 83 ff 	CALL 0x0 <_putVal32>;
      fe:	21 e1 64 00 	R1 = 0x64 (X);		/*		R1=0x64(100) */
     102:	f0 40       	R0 *= R6;
     104:	f9 67       	R1 += -0x1;		/* ( -1) */
     106:	4a 43       	R2 = R1.B (Z);
     108:	08 64       	R0 += 0x1;		/* (  1) */
     10a:	02 0c       	CC = R2 == 0x0;
     10c:	fb 17       	IF !CC JUMP 0x102 <_mDNSRandom+0x36> (BP);
     10e:	20 93       	[P4] = R0;
     110:	2c 93       	[P5] = R4;
     112:	20 91       	R0 = [P4];
     114:	f0 40       	R0 *= R6;
     116:	08 64       	R0 += 0x1;		/* (  1) */
     118:	20 93       	[P4] = R0;
     11a:	07 54       	R0 = R7 & R0;
     11c:	28 0a       	CC = R0 <= R5 (IU);
     11e:	eb 17       	IF !CC JUMP 0xf4 <_mDNSRandom+0x28> (BP);
     120:	66 6c       	SP += 0xc;		/* ( 12) */
     122:	27 01       	RETS = [SP++];
     124:	a4 05       	(R7:4, P5:4) = [SP++];
     126:	10 00       	RTS;

00000128 <_mDNSSameAddress>:
_mDNSSameAddress():
     128:	10 32       	P2 = R0;
     12a:	09 32       	P1 = R1;
     12c:	10 91       	R0 = [P2];
     12e:	09 91       	R1 = [P1];
     130:	08 08       	CC = R0 == R1;
     132:	1d 14       	IF !CC JUMP 0x16c <_mDNSSameAddress+0x44> (BP);
     134:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
     136:	08 08       	CC = R0 == R1;
     138:	06 18       	IF CC JUMP 0x144 <_mDNSSameAddress+0x1c>;
     13a:	31 60       	R1 = 0x6 (X);		/*		R1=0x6(  6) */
     13c:	08 08       	CC = R0 == R1;
     13e:	06 18       	IF CC JUMP 0x14a <_mDNSSameAddress+0x22>;
     140:	00 0c       	CC = R0 == 0x0;
     142:	13 20       	JUMP.S 0x168 <_mDNSSameAddress+0x40>;
     144:	51 a0       	R1 = [P2 + 0x4];
     146:	48 a0       	R0 = [P1 + 0x4];
     148:	0f 20       	JUMP.S 0x166 <_mDNSSameAddress+0x3e>;
     14a:	51 a0       	R1 = [P2 + 0x4];
     14c:	48 a0       	R0 = [P1 + 0x4];
     14e:	01 08       	CC = R1 == R0;
     150:	0e 14       	IF !CC JUMP 0x16c <_mDNSSameAddress+0x44> (BP);
     152:	91 a0       	R1 = [P2 + 0x8];
     154:	88 a0       	R0 = [P1 + 0x8];
     156:	01 08       	CC = R1 == R0;
     158:	0a 14       	IF !CC JUMP 0x16c <_mDNSSameAddress+0x44> (BP);
     15a:	d1 a0       	R1 = [P2 + 0xc];
     15c:	c8 a0       	R0 = [P1 + 0xc];
     15e:	01 08       	CC = R1 == R0;
     160:	06 14       	IF !CC JUMP 0x16c <_mDNSSameAddress+0x44> (BP);
     162:	11 a1       	R1 = [P2 + 0x10];
     164:	08 a1       	R0 = [P1 + 0x10];
     166:	01 08       	CC = R1 == R0;
     168:	00 02       	R0 = CC;
     16a:	02 20       	JUMP.S 0x16e <_mDNSSameAddress+0x46>;
     16c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     16e:	10 00       	RTS;

00000170 <_mDNSAddrIsDNSMulticast>:
_mDNSAddrIsDNSMulticast():
     170:	10 32       	P2 = R0;
     172:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
     174:	10 91       	R0 = [P2];
     176:	08 08       	CC = R0 == R1;
     178:	05 18       	IF CC JUMP 0x182 <_mDNSAddrIsDNSMulticast+0x12>;
     17a:	31 60       	R1 = 0x6 (X);		/*		R1=0x6(  6) */
     17c:	08 08       	CC = R0 == R1;
     17e:	1e 14       	IF !CC JUMP 0x1ba <_mDNSAddrIsDNSMulticast+0x4a> (BP);
     180:	08 20       	JUMP.S 0x190 <_mDNSAddrIsDNSMulticast+0x20>;
     182:	51 a0       	R1 = [P2 + 0x4];
     184:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_putVal32> */
     188:	0a e1 4c 01 	P2.L = 0x14c;		/* (332)	P2=0x14c */
     18c:	50 a0       	R0 = [P2 + 0x4];
     18e:	13 20       	JUMP.S 0x1b4 <_mDNSAddrIsDNSMulticast+0x44>;
     190:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x0 <_putVal32> */
     194:	09 e1 60 01 	P1.L = 0x160;		/* (352)	P1=0x160 */
     198:	51 a0       	R1 = [P2 + 0x4];
     19a:	48 a0       	R0 = [P1 + 0x4];
     19c:	01 08       	CC = R1 == R0;
     19e:	0e 14       	IF !CC JUMP 0x1ba <_mDNSAddrIsDNSMulticast+0x4a> (BP);
     1a0:	91 a0       	R1 = [P2 + 0x8];
     1a2:	88 a0       	R0 = [P1 + 0x8];
     1a4:	01 08       	CC = R1 == R0;
     1a6:	0a 14       	IF !CC JUMP 0x1ba <_mDNSAddrIsDNSMulticast+0x4a> (BP);
     1a8:	d1 a0       	R1 = [P2 + 0xc];
     1aa:	c8 a0       	R0 = [P1 + 0xc];
     1ac:	01 08       	CC = R1 == R0;
     1ae:	06 14       	IF !CC JUMP 0x1ba <_mDNSAddrIsDNSMulticast+0x4a> (BP);
     1b0:	11 a1       	R1 = [P2 + 0x10];
     1b2:	08 a1       	R0 = [P1 + 0x10];
     1b4:	01 08       	CC = R1 == R0;
     1b6:	00 02       	R0 = CC;
     1b8:	02 20       	JUMP.S 0x1bc <_mDNSAddrIsDNSMulticast+0x4c>;
     1ba:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     1bc:	10 00       	RTS;
	...

000001c0 <_SameDomainLabel>:
_SameDomainLabel():
     1c0:	10 32       	P2 = R0;
     1c2:	70 05       	[--SP] = (R7:6);
     1c4:	fa 61       	R2 = 0x3f (X);		/*		R2=0x3f( 63) */
     1c6:	17 99       	R7 = B[P2] (Z);
     1c8:	17 09       	CC = R7 <= R2;
     1ca:	27 14       	IF !CC JUMP 0x218 <_SameDomainLabel+0x58> (BP);
     1cc:	11 32       	P2 = R1;
     1ce:	12 99       	R2 = B[P2] (Z);
     1d0:	17 08       	CC = R7 == R2;
     1d2:	23 14       	IF !CC JUMP 0x218 <_SameDomainLabel+0x58> (BP);
     1d4:	09 32       	P1 = R1;
     1d6:	00 32       	P0 = R0;
     1d8:	02 68       	P2 = 0x0 (X);		/*		P2=0x0(  0) */
     1da:	26 e1 bf ff 	R6 = -0x41 (X);		/*		R6=0xffffffbf(-65) */
     1de:	c9 60       	R1 = 0x19 (X);		/*		R1=0x19( 25) */
     1e0:	09 6c       	P1 += 0x1;		/* (  1) */
     1e2:	08 6c       	P0 += 0x1;		/* (  1) */
     1e4:	15 20       	JUMP.S 0x20e <_SameDomainLabel+0x4e>;
     1e6:	00 00       	NOP;
     1e8:	43 98       	R3 = B[P0++] (X);
     1ea:	33 50       	R0 = R3 + R6;
     1ec:	40 43       	R0 = R0.B (Z);
     1ee:	08 0a       	CC = R0 <= R1 (IU);
     1f0:	03 30       	R0 = R3;
     1f2:	00 65       	R0 += 0x20;		/* ( 32) */
     1f4:	4a 98       	R2 = B[P1++] (X);
     1f6:	18 07       	IF CC R3 = R0;
     1f8:	32 50       	R0 = R2 + R6;
     1fa:	40 43       	R0 = R0.B (Z);
     1fc:	08 0a       	CC = R0 <= R1 (IU);
     1fe:	02 30       	R0 = R2;
     200:	00 65       	R0 += 0x20;		/* ( 32) */
     202:	10 07       	IF CC R2 = R0;
     204:	5b 43       	R3 = R3.B (Z);
     206:	52 43       	R2 = R2.B (Z);
     208:	13 08       	CC = R3 == R2;
     20a:	07 10       	IF !CC JUMP 0x218 <_SameDomainLabel+0x58>;
     20c:	0a 6c       	P2 += 0x1;		/* (  1) */
     20e:	52 30       	R2 = P2;
     210:	ba 08       	CC = R2 < R7;
     212:	ea 1f       	IF CC JUMP 0x1e6 <_SameDomainLabel+0x26> (BP);
     214:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
     216:	02 20       	JUMP.S 0x21a <_SameDomainLabel+0x5a>;
     218:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     21a:	30 05       	(R7:6) = [SP++];
     21c:	10 00       	RTS;
	...

00000220 <_SameDomainName>:
_SameDomainName():
     220:	10 32       	P2 = R0;
     222:	fc 05       	[--SP] = (R7:7, P5:4);
     224:	67 01       	[--SP] = RETS;
     226:	2c e1 00 01 	P4 = 0x100 (X);		/*		P4=0x100(256) */
     22a:	a6 6f       	SP += -0xc;		/* (-12) */
     22c:	29 32       	P5 = R1;
     22e:	22 5b       	P4 = P2 + P4;
     230:	11 20       	JUMP.S 0x252 <_SameDomainName+0x32>;
     232:	7f 43       	R7 = R7.B (Z);
     234:	0f 64       	R7 += 0x1;		/* (  1) */
     236:	f8 51       	R7 = R0 + R7;
     238:	4c 30       	R1 = P4;
     23a:	39 0a       	CC = R1 <= R7 (IU);
     23c:	15 18       	IF CC JUMP 0x266 <_SameDomainName+0x46>;
     23e:	4d 30       	R1 = P5;
     240:	ff e3 c0 ff 	CALL 0x1c0 <_SameDomainLabel>;
     244:	00 0c       	CC = R0 == 0x0;
     246:	10 1c       	IF CC JUMP 0x266 <_SameDomainName+0x46> (BP);
     248:	07 30       	R0 = R7;
     24a:	29 99       	R1 = B[P5] (Z);
     24c:	09 64       	R1 += 0x1;		/* (  1) */
     24e:	11 32       	P2 = R1;
     250:	55 5b       	P5 = P5 + P2;
     252:	10 32       	P2 = R0;
     254:	57 99       	R7 = B[P2] (X);
     256:	79 43       	R1 = R7.B (Z);
     258:	01 0c       	CC = R1 == 0x0;
     25a:	ec 17       	IF !CC JUMP 0x232 <_SameDomainName+0x12> (BP);
     25c:	29 99       	R1 = B[P5] (Z);
     25e:	01 0c       	CC = R1 == 0x0;
     260:	e9 17       	IF !CC JUMP 0x232 <_SameDomainName+0x12> (BP);
     262:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
     264:	02 20       	JUMP.S 0x268 <_SameDomainName+0x48>;
     266:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     268:	66 6c       	SP += 0xc;		/* ( 12) */
     26a:	27 01       	RETS = [SP++];
     26c:	bc 05       	(R7:7, P5:4) = [SP++];
     26e:	10 00       	RTS;

00000270 <_IsLocalDomain>:
_IsLocalDomain():
     270:	70 05       	[--SP] = (R7:6);
     272:	67 01       	[--SP] = RETS;
     274:	10 32       	P2 = R0;
     276:	a6 6f       	SP += -0xc;		/* (-12) */
     278:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
     27a:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
     27c:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
     27e:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
     280:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     282:	09 20       	JUMP.S 0x294 <_IsLocalDomain+0x24>;
     284:	0b 32       	P1 = R3;
     286:	3e 30       	R7 = R6;
     288:	32 30       	R6 = R2;
     28a:	11 30       	R2 = R1;
     28c:	08 30       	R1 = R0;
     28e:	09 6c       	P1 += 0x1;		/* (  1) */
     290:	42 30       	R0 = P2;
     292:	8a 5a       	P2 = P2 + P1;
     294:	13 99       	R3 = B[P2] (Z);
     296:	03 0c       	CC = R3 == 0x0;
     298:	f6 17       	IF !CC JUMP 0x284 <_IsLocalDomain+0x14> (BP);
     29a:	00 0c       	CC = R0 == 0x0;
     29c:	09 18       	IF CC JUMP 0x2ae <_IsLocalDomain+0x3e>;
     29e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_putVal32>(  0) */
     2a2:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_putVal32>(  0) */
     2a6:	ff e3 bd ff 	CALL 0x220 <_SameDomainName>;
     2aa:	00 0c       	CC = R0 == 0x0;
     2ac:	36 10       	IF !CC JUMP 0x318 <_IsLocalDomain+0xa8>;
     2ae:	06 0c       	CC = R6 == 0x0;
     2b0:	0a 18       	IF CC JUMP 0x2c4 <_IsLocalDomain+0x54>;
     2b2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_putVal32>(  0) */
     2b6:	06 30       	R0 = R6;
     2b8:	01 e1 08 00 	R1.L = 0x8;		/* (  8)	R1=0x8(  8) */
     2bc:	ff e3 b2 ff 	CALL 0x220 <_SameDomainName>;
     2c0:	00 0c       	CC = R0 == 0x0;
     2c2:	2b 10       	IF !CC JUMP 0x318 <_IsLocalDomain+0xa8>;
     2c4:	07 0c       	CC = R7 == 0x0;
     2c6:	27 18       	IF CC JUMP 0x314 <_IsLocalDomain+0xa4>;
     2c8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x8(  8) */
     2cc:	07 30       	R0 = R7;
     2ce:	01 e1 20 00 	R1.L = 0x20;		/* ( 32)	R1=0x20( 32) */
     2d2:	ff e3 a7 ff 	CALL 0x220 <_SameDomainName>;
     2d6:	00 0c       	CC = R0 == 0x0;
     2d8:	20 10       	IF !CC JUMP 0x318 <_IsLocalDomain+0xa8>;
     2da:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x20( 32) */
     2de:	07 30       	R0 = R7;
     2e0:	01 e1 30 00 	R1.L = 0x30;		/* ( 48)	R1=0x30( 48) */
     2e4:	ff e3 9e ff 	CALL 0x220 <_SameDomainName>;
     2e8:	00 0c       	CC = R0 == 0x0;
     2ea:	17 10       	IF !CC JUMP 0x318 <_IsLocalDomain+0xa8>;
     2ec:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x30( 48) */
     2f0:	07 30       	R0 = R7;
     2f2:	01 e1 40 00 	R1.L = 0x40;		/* ( 64)	R1=0x40( 64) */
     2f6:	ff e3 95 ff 	CALL 0x220 <_SameDomainName>;
     2fa:	00 0c       	CC = R0 == 0x0;
     2fc:	0e 10       	IF !CC JUMP 0x318 <_IsLocalDomain+0xa8>;
     2fe:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x40( 64) */
     302:	07 30       	R0 = R7;
     304:	01 e1 50 00 	R1.L = 0x50;		/* ( 80)	R1=0x50( 80) */
     308:	ff e3 8c ff 	CALL 0x220 <_SameDomainName>;
     30c:	00 0c       	CC = R0 == 0x0;
     30e:	00 02       	R0 = CC;
     310:	00 4b       	BITTGL (R0, 0x0);		/* bit  0 */
     312:	04 20       	JUMP.S 0x31a <_IsLocalDomain+0xaa>;
     314:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     316:	02 20       	JUMP.S 0x31a <_IsLocalDomain+0xaa>;
     318:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
     31a:	66 6c       	SP += 0xc;		/* ( 12) */
     31c:	27 01       	RETS = [SP++];
     31e:	30 05       	(R7:6) = [SP++];
     320:	10 00       	RTS;
	...

00000324 <_LastLabel>:
_LastLabel():
     324:	10 32       	P2 = R0;
     326:	05 20       	JUMP.S 0x330 <_LastLabel+0xc>;
     328:	09 32       	P1 = R1;
     32a:	42 30       	R0 = P2;
     32c:	09 6c       	P1 += 0x1;		/* (  1) */
     32e:	8a 5a       	P2 = P2 + P1;
     330:	11 99       	R1 = B[P2] (Z);
     332:	01 0c       	CC = R1 == 0x0;
     334:	fa 17       	IF !CC JUMP 0x328 <_LastLabel+0x4> (BP);
     336:	10 00       	RTS;

00000338 <_DomainNameLengthLimit>:
_DomainNameLengthLimit():
     338:	10 32       	P2 = R0;
     33a:	fb 61       	R3 = 0x3f (X);		/*		R3=0x3f( 63) */
     33c:	0a 20       	JUMP.S 0x350 <_DomainNameLengthLimit+0x18>;
     33e:	02 0c       	CC = R2 == 0x0;
     340:	05 14       	IF !CC JUMP 0x34a <_DomainNameLengthLimit+0x12> (BP);
     342:	4a 30       	R1 = P2;
     344:	01 52       	R0 = R1 - R0;
     346:	08 64       	R0 += 0x1;		/* (  1) */
     348:	0c 20       	JUMP.S 0x360 <_DomainNameLengthLimit+0x28>;
     34a:	0a 32       	P1 = R2;
     34c:	09 6c       	P1 += 0x1;		/* (  1) */
     34e:	8a 5a       	P2 = P2 + P1;
     350:	52 30       	R2 = P2;
     352:	8a 09       	CC = R2 < R1 (IU);
     354:	04 14       	IF !CC JUMP 0x35c <_DomainNameLengthLimit+0x24> (BP);
     356:	12 99       	R2 = B[P2] (Z);
     358:	1a 0a       	CC = R2 <= R3 (IU);
     35a:	f2 1f       	IF CC JUMP 0x33e <_DomainNameLengthLimit+0x6> (BP);
     35c:	20 e1 01 01 	R0 = 0x101 (X);		/*		R0=0x101(257) */
     360:	10 00       	RTS;
	...

00000364 <_SameDomainNameCS>:
_SameDomainNameCS():
     364:	60 05       	[--SP] = (R7:4);
     366:	67 01       	[--SP] = RETS;
     368:	31 30       	R6 = R1;
     36a:	25 e1 00 01 	R5 = 0x100 (X);		/*		R5=0x100(256) */
     36e:	a6 6f       	SP += -0xc;		/* (-12) */
     370:	68 50       	R1 = R0 + R5;
     372:	38 30       	R7 = R0;
     374:	ff e3 e2 ff 	CALL 0x338 <_DomainNameLengthLimit>;
     378:	20 30       	R4 = R0;
     37a:	6e 50       	R1 = R6 + R5;
     37c:	06 30       	R0 = R6;
     37e:	ff e3 dd ff 	CALL 0x338 <_DomainNameLengthLimit>;
     382:	e2 42       	R2 = R4.L (Z);
     384:	2a 0a       	CC = R2 <= R5 (IU);
     386:	0c 14       	IF !CC JUMP 0x39e <_SameDomainNameCS+0x3a> (BP);
     388:	c0 42       	R0 = R0.L (Z);
     38a:	02 08       	CC = R2 == R0;
     38c:	09 14       	IF !CC JUMP 0x39e <_SameDomainNameCS+0x3a> (BP);
     38e:	07 30       	R0 = R7;
     390:	0e 30       	R1 = R6;
     392:	ff e3 37 fe 	CALL 0x0 <_putVal32>;
     396:	00 0c       	CC = R0 == 0x0;
     398:	00 02       	R0 = CC;
     39a:	00 4b       	BITTGL (R0, 0x0);		/* bit  0 */
     39c:	02 20       	JUMP.S 0x3a0 <_SameDomainNameCS+0x3c>;
     39e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     3a0:	66 6c       	SP += 0xc;		/* ( 12) */
     3a2:	27 01       	RETS = [SP++];
     3a4:	20 05       	(R7:4) = [SP++];
     3a6:	10 00       	RTS;

000003a8 <_CompressedDomainNameLength>:
_CompressedDomainNameLength():
     3a8:	ed 05       	[--SP] = (R7:5, P5:5);
     3aa:	29 32       	P5 = R1;
     3ac:	67 01       	[--SP] = RETS;
     3ae:	86 6f       	SP += -0x10;		/* (-16) */
     3b0:	30 30       	R6 = R0;
     3b2:	38 30       	R7 = R0;
     3b4:	45 0c       	CC = P5 == 0x0;
     3b6:	20 1c       	IF CC JUMP 0x3f6 <_CompressedDomainNameLength+0x4e> (BP);
     3b8:	28 99       	R0 = B[P5] (Z);
     3ba:	00 0c       	CC = R0 == 0x0;
     3bc:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     3be:	a8 07       	IF CC P5 = R0;
     3c0:	1b 20       	JUMP.S 0x3f6 <_CompressedDomainNameLength+0x4e>;
     3c2:	f9 61       	R1 = 0x3f (X);		/*		R1=0x3f( 63) */
     3c4:	08 0a       	CC = R0 <= R1 (IU);
     3c6:	25 10       	IF !CC JUMP 0x410 <_CompressedDomainNameLength+0x68>;
     3c8:	b0 e4 0f 00 	R0 = B[SP + 0xf] (Z);
     3cc:	08 02       	CC = R0;
     3ce:	0b 18       	IF CC JUMP 0x3e4 <_CompressedDomainNameLength+0x3c>;
     3d0:	07 30       	R0 = R7;
     3d2:	4d 30       	R1 = P5;
     3d4:	ff e3 26 ff 	CALL 0x220 <_SameDomainName>;
     3d8:	00 0c       	CC = R0 == 0x0;
     3da:	05 1c       	IF CC JUMP 0x3e4 <_CompressedDomainNameLength+0x3c> (BP);
     3dc:	f7 53       	R7 = R7 - R6;
     3de:	07 30       	R0 = R7;
     3e0:	10 64       	R0 += 0x2;		/* (  2) */
     3e2:	19 20       	JUMP.S 0x414 <_CompressedDomainNameLength+0x6c>;
     3e4:	6d 43       	R5 = R5.B (Z);
     3e6:	0d 64       	R5 += 0x1;		/* (  1) */
     3e8:	ef 51       	R7 = R7 + R5;
     3ea:	37 52       	R0 = R7 - R6;
     3ec:	21 e1 ff 00 	R1 = 0xff (X);		/*		R1=0xff(255) */
     3f0:	08 09       	CC = R0 <= R1;
     3f2:	06 1c       	IF CC JUMP 0x3fe <_CompressedDomainNameLength+0x56> (BP);
     3f4:	0e 20       	JUMP.S 0x410 <_CompressedDomainNameLength+0x68>;
     3f6:	45 0c       	CC = P5 == 0x0;
     3f8:	00 02       	R0 = CC;
     3fa:	b0 e6 0f 00 	B[SP + 0xf] = R0;
     3fe:	17 32       	P2 = R7;
     400:	55 99       	R5 = B[P2] (X);
     402:	68 43       	R0 = R5.B (Z);
     404:	00 0c       	CC = R0 == 0x0;
     406:	de 17       	IF !CC JUMP 0x3c2 <_CompressedDomainNameLength+0x1a> (BP);
     408:	f7 53       	R7 = R7 - R6;
     40a:	07 30       	R0 = R7;
     40c:	08 64       	R0 += 0x1;		/* (  1) */
     40e:	03 20       	JUMP.S 0x414 <_CompressedDomainNameLength+0x6c>;
     410:	20 e1 01 01 	R0 = 0x101 (X);		/*		R0=0x101(257) */
     414:	86 6c       	SP += 0x10;		/* ( 16) */
     416:	27 01       	RETS = [SP++];
     418:	ad 05       	(R7:5, P5:5) = [SP++];
     41a:	10 00       	RTS;

0000041c <_CountLabels>:
_CountLabels():
     41c:	10 32       	P2 = R0;
     41e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     420:	05 20       	JUMP.S 0x42a <_CountLabels+0xe>;
     422:	09 32       	P1 = R1;
     424:	08 64       	R0 += 0x1;		/* (  1) */
     426:	09 6c       	P1 += 0x1;		/* (  1) */
     428:	8a 5a       	P2 = P2 + P1;
     42a:	11 99       	R1 = B[P2] (Z);
     42c:	01 0c       	CC = R1 == 0x0;
     42e:	fa 17       	IF !CC JUMP 0x422 <_CountLabels+0x6> (BP);
     430:	10 00       	RTS;
	...

00000434 <_SkipLeadingLabels>:
_SkipLeadingLabels():
     434:	11 32       	P2 = R1;
     436:	81 0c       	CC = R1 < 0x0;
     438:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
     43a:	0a 6c       	P2 += 0x1;		/* (  1) */
     43c:	91 07       	IF CC P2 = R1;
     43e:	b3 e0 0b 20 	LSETUP(0x444 <_SkipLeadingLabels+0x10>, 0x454 <_SkipLeadingLabels+0x20>) LC1 = P2;
     442:	09 20       	JUMP.S 0x454 <_SkipLeadingLabels+0x20>;
     444:	08 32       	P1 = R0;
     446:	09 99       	R1 = B[P1] (Z);
     448:	01 0c       	CC = R1 == 0x0;
     44a:	06 18       	IF CC JUMP 0x456 <_SkipLeadingLabels+0x22>;
     44c:	09 32       	P1 = R1;
     44e:	09 6c       	P1 += 0x1;		/* (  1) */
     450:	49 30       	R1 = P1;
     452:	08 50       	R0 = R0 + R1;
     454:	00 00       	NOP;
     456:	10 00       	RTS;

00000458 <_AppendLiteralLabelString>:
_AppendLiteralLabelString():
     458:	f5 05       	[--SP] = (R7:6, P5:5);
     45a:	31 30       	R6 = R1;
     45c:	67 01       	[--SP] = RETS;
     45e:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
     462:	38 30       	R7 = R0;
     464:	48 50       	R1 = R0 + R1;
     466:	a6 6f       	SP += -0xc;		/* (-12) */
     468:	ff e3 68 ff 	CALL 0x338 <_DomainNameLengthLimit>;
     46c:	c0 42       	R0 = R0.L (Z);
     46e:	f8 67       	R0 += -0x1;		/* ( -1) */
     470:	47 50       	R1 = R7 + R0;
     472:	11 32       	P2 = R1;
     474:	23 e1 40 00 	R3 = 0x40 (X);		/*		R3=0x40( 64) */
     478:	22 e1 ff 00 	R2 = 0xff (X);		/*		R2=0xff(255) */
     47c:	d9 50       	R3 = R1 + R3;
     47e:	97 50       	R2 = R7 + R2;
     480:	13 0a       	CC = R3 <= R2 (IU);
     482:	ab 07       	IF CC P5 = R3;
     484:	aa 06       	IF !CC P5 = R2;
     486:	0a 6c       	P2 += 0x1;		/* (  1) */
     488:	0e 32       	P1 = R6;
     48a:	02 20       	JUMP.S 0x48e <_AppendLiteralLabelString+0x36>;
     48c:	16 9a       	B[P2++] = R6;
     48e:	41 32       	P0 = P1;
     490:	4e 98       	R6 = B[P1++] (X);
     492:	32 43       	R2 = R6.B (X);
     494:	02 0c       	CC = R2 == 0x0;
     496:	03 18       	IF CC JUMP 0x49c <_AppendLiteralLabelString+0x44>;
     498:	ea 09       	CC = P2 < P5 (IU);
     49a:	f9 1f       	IF CC JUMP 0x48c <_AppendLiteralLabelString+0x34> (BP);
     49c:	c7 51       	R7 = R7 + R0;
     49e:	0f 32       	P1 = R7;
     4a0:	42 30       	R0 = P2;
     4a2:	c9 43       	R1 =~ R1;
     4a4:	48 50       	R1 = R0 + R1;
     4a6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     4a8:	09 9b       	B[P1] = R1;
     4aa:	10 9b       	B[P2] = R0;
     4ac:	40 99       	R0 = B[P0] (X);
     4ae:	00 0c       	CC = R0 == 0x0;
     4b0:	04 10       	IF !CC JUMP 0x4b8 <_AppendLiteralLabelString+0x60>;
     4b2:	42 30       	R0 = P2;
     4b4:	08 64       	R0 += 0x1;		/* (  1) */
     4b6:	02 20       	JUMP.S 0x4ba <_AppendLiteralLabelString+0x62>;
     4b8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     4ba:	66 6c       	SP += 0xc;		/* ( 12) */
     4bc:	27 01       	RETS = [SP++];
     4be:	b5 05       	(R7:6, P5:5) = [SP++];
     4c0:	10 00       	RTS;
	...

000004c4 <_AppendDNSNameString>:
_AppendDNSNameString():
     4c4:	e5 05       	[--SP] = (R7:4, P5:5);
     4c6:	31 30       	R6 = R1;
     4c8:	67 01       	[--SP] = RETS;
     4ca:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
     4ce:	38 30       	R7 = R0;
     4d0:	a6 6f       	SP += -0xc;		/* (-12) */
     4d2:	48 50       	R1 = R0 + R1;
     4d4:	ff e3 32 ff 	CALL 0x338 <_DomainNameLengthLimit>;
     4d8:	0f 32       	P1 = R7;
     4da:	c0 42       	R0 = R0.L (Z);
     4dc:	f8 67       	R0 += -0x1;		/* ( -1) */
     4de:	28 e1 ff 00 	P0 = 0xff (X);		/*		P0=0xff(255) */
     4e2:	07 50       	R0 = R7 + R0;
     4e4:	01 5a       	P0 = P1 + P0;
     4e6:	16 32       	P2 = R6;
     4e8:	30 e1 0a 00 	I0 = 0xa (X);		/*		I0=0xa( 10) */
     4ec:	32 e1 64 00 	I2 = 0x64 (X);		/*		I2=0x64(100) */
     4f0:	54 20       	JUMP.S 0x598 <_AppendDNSNameString+0xd4>;
     4f2:	72 61       	R2 = 0x2e (X);		/*		R2=0x2e( 46) */
     4f4:	11 08       	CC = R1 == R2;
     4f6:	04 18       	IF CC JUMP 0x4fe <_AppendDNSNameString+0x3a>;
     4f8:	08 32       	P1 = R0;
     4fa:	09 6c       	P1 += 0x1;		/* (  1) */
     4fc:	39 20       	JUMP.S 0x56e <_AppendDNSNameString+0xaa>;
     4fe:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x100(256) */
     502:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     504:	01 e1 60 00 	R1.L = 0x60;		/* ( 96)	R1=0x60( 96) */
     508:	16 30       	R2 = R6;
     50a:	ff e3 7b fd 	CALL 0x0 <_putVal32>;
     50e:	53 20       	JUMP.S 0x5b4 <_AppendDNSNameString+0xf0>;
     510:	59 43       	R1 = R3.B (Z);
     512:	24 e1 5c 00 	R4 = 0x5c (X);		/*		R4=0x5c( 92) */
     516:	0a 6c       	P2 += 0x1;		/* (  1) */
     518:	21 08       	CC = R1 == R4;
     51a:	29 14       	IF !CC JUMP 0x56c <_AppendDNSNameString+0xa8> (BP);
     51c:	53 99       	R3 = B[P2] (X);
     51e:	57 98       	R7 = B[P2++] (X);
     520:	0f 30       	R1 = R7;
     522:	81 66       	R1 += -0x30;		/* (-48) */
     524:	49 43       	R1 = R1.B (Z);
     526:	4d 60       	R5 = 0x9 (X);		/*		R5=0x9(  9) */
     528:	29 0a       	CC = R1 <= R5 (IU);
     52a:	21 14       	IF !CC JUMP 0x56c <_AppendDNSNameString+0xa8> (BP);
     52c:	52 99       	R2 = B[P2] (X);
     52e:	0a 30       	R1 = R2;
     530:	81 66       	R1 += -0x30;		/* (-48) */
     532:	49 43       	R1 = R1.B (Z);
     534:	29 0a       	CC = R1 <= R5 (IU);
     536:	1b 14       	IF !CC JUMP 0x56c <_AppendDNSNameString+0xa8> (BP);
     538:	95 e5 01 00 	R5 = B[P2 + 0x1] (X);
     53c:	0d 30       	R1 = R5;
     53e:	81 66       	R1 += -0x30;		/* (-48) */
     540:	49 43       	R1 = R1.B (Z);
     542:	4c 60       	R4 = 0x9 (X);		/*		R4=0x9(  9) */
     544:	21 0a       	CC = R1 <= R4 (IU);
     546:	13 14       	IF !CC JUMP 0x56c <_AppendDNSNameString+0xa8> (BP);
     548:	12 43       	R2 = R2.B (X);
     54a:	88 30       	R1 = I0;
     54c:	82 66       	R2 += -0x30;		/* (-48) */
     54e:	ca 40       	R2 *= R1;
     550:	39 43       	R1 = R7.B (X);
     552:	81 66       	R1 += -0x30;		/* (-48) */
     554:	a2 30       	R4 = I2;
     556:	2d 43       	R5 = R5.B (X);
     558:	e1 40       	R1 *= R4;
     55a:	85 66       	R5 += -0x30;		/* (-48) */
     55c:	95 50       	R2 = R5 + R2;
     55e:	4a 50       	R1 = R2 + R1;
     560:	25 e1 ff 00 	R5 = 0xff (X);		/*		R5=0xff(255) */
     564:	29 09       	CC = R1 <= R5;
     566:	03 14       	IF !CC JUMP 0x56c <_AppendDNSNameString+0xa8> (BP);
     568:	19 30       	R3 = R1;
     56a:	12 6c       	P2 += 0x2;		/* (  2) */
     56c:	0b 9a       	B[P1++] = R3;
     56e:	53 99       	R3 = B[P2] (X);
     570:	19 43       	R1 = R3.B (X);
     572:	01 0c       	CC = R1 == 0x0;
     574:	07 18       	IF CC JUMP 0x582 <_AppendDNSNameString+0xbe>;
     576:	77 61       	R7 = 0x2e (X);		/*		R7=0x2e( 46) */
     578:	39 08       	CC = R1 == R7;
     57a:	22 18       	IF CC JUMP 0x5be <_AppendDNSNameString+0xfa>;
     57c:	c1 09       	CC = P1 < P0 (IU);
     57e:	c9 1f       	IF CC JUMP 0x510 <_AppendDNSNameString+0x4c> (BP);
     580:	1f 20       	JUMP.S 0x5be <_AppendDNSNameString+0xfa>;
     582:	51 30       	R2 = P1;
     584:	42 52       	R1 = R2 - R0;
     586:	24 e1 40 00 	R4 = 0x40 (X);		/*		R4=0x40( 64) */
     58a:	21 09       	CC = R1 <= R4;
     58c:	14 10       	IF !CC JUMP 0x5b4 <_AppendDNSNameString+0xf0>;
     58e:	28 32       	P5 = R0;
     590:	c1 43       	R1 =~ R0;
     592:	4a 50       	R1 = R2 + R1;
     594:	41 30       	R0 = P1;
     596:	29 9b       	B[P5] = R1;
     598:	51 99       	R1 = B[P2] (X);
     59a:	01 0c       	CC = R1 == 0x0;
     59c:	04 18       	IF CC JUMP 0x5a4 <_AppendDNSNameString+0xe0>;
     59e:	50 30       	R2 = P0;
     5a0:	90 09       	CC = R0 < R2 (IU);
     5a2:	a8 1f       	IF CC JUMP 0x4f2 <_AppendDNSNameString+0x2e> (BP);
     5a4:	08 32       	P1 = R0;
     5a6:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
     5a8:	09 9b       	B[P1] = R1;
     5aa:	51 99       	R1 = B[P2] (X);
     5ac:	01 0c       	CC = R1 == 0x0;
     5ae:	03 10       	IF !CC JUMP 0x5b4 <_AppendDNSNameString+0xf0>;
     5b0:	08 64       	R0 += 0x1;		/* (  1) */
     5b2:	02 20       	JUMP.S 0x5b6 <_AppendDNSNameString+0xf2>;
     5b4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     5b6:	66 6c       	SP += 0xc;		/* ( 12) */
     5b8:	27 01       	RETS = [SP++];
     5ba:	a5 05       	(R7:4, P5:5) = [SP++];
     5bc:	10 00       	RTS;
     5be:	0a 6c       	P2 += 0x1;		/* (  1) */
     5c0:	e1 2f       	JUMP.S 0x582 <_AppendDNSNameString+0xbe>;
	...

000005c4 <_AppendDomainLabel>:
_AppendDomainLabel():
     5c4:	f5 05       	[--SP] = (R7:6, P5:5);
     5c6:	29 32       	P5 = R1;
     5c8:	26 e1 00 01 	R6 = 0x100 (X);		/*		R6=0x100(256) */
     5cc:	67 01       	[--SP] = RETS;
     5ce:	b0 51       	R6 = R0 + R6;
     5d0:	0e 30       	R1 = R6;
     5d2:	a6 6f       	SP += -0xc;		/* (-12) */
     5d4:	38 30       	R7 = R0;
     5d6:	ff e3 b1 fe 	CALL 0x338 <_DomainNameLengthLimit>;
     5da:	29 99       	R1 = B[P5] (Z);
     5dc:	fa 61       	R2 = 0x3f (X);		/*		R2=0x3f( 63) */
     5de:	11 0a       	CC = R1 <= R2 (IU);
     5e0:	1a 14       	IF !CC JUMP 0x614 <_AppendDomainLabel+0x50> (BP);
     5e2:	c0 42       	R0 = R0.L (Z);
     5e4:	f8 67       	R0 += -0x1;		/* ( -1) */
     5e6:	07 50       	R0 = R7 + R0;
     5e8:	09 32       	P1 = R1;
     5ea:	10 32       	P2 = R0;
     5ec:	11 6c       	P1 += 0x2;		/* (  2) */
     5ee:	4a 5a       	P1 = P2 + P1;
     5f0:	41 30       	R0 = P1;
     5f2:	86 09       	CC = R6 < R0 (IU);
     5f4:	10 18       	IF CC JUMP 0x614 <_AppendDomainLabel+0x50>;
     5f6:	4d 32       	P1 = P5;
     5f8:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
     5fa:	05 20       	JUMP.S 0x604 <_AppendDomainLabel+0x40>;
     5fc:	09 64       	R1 += 0x1;		/* (  1) */
     5fe:	4a 98       	R2 = B[P1++] (X);
     600:	12 9b       	B[P2] = R2;
     602:	10 32       	P2 = R0;
     604:	28 99       	R0 = B[P5] (Z);
     606:	01 09       	CC = R1 <= R0;
     608:	42 30       	R0 = P2;
     60a:	08 64       	R0 += 0x1;		/* (  1) */
     60c:	f8 1f       	IF CC JUMP 0x5fc <_AppendDomainLabel+0x38> (BP);
     60e:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
     610:	11 9b       	B[P2] = R1;
     612:	02 20       	JUMP.S 0x616 <_AppendDomainLabel+0x52>;
     614:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     616:	66 6c       	SP += 0xc;		/* ( 12) */
     618:	27 01       	RETS = [SP++];
     61a:	b5 05       	(R7:6, P5:5) = [SP++];
     61c:	10 00       	RTS;
	...

00000620 <_AppendDomainName>:
_AppendDomainName():
     620:	70 05       	[--SP] = (R7:6);
     622:	31 30       	R6 = R1;
     624:	67 01       	[--SP] = RETS;
     626:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
     62a:	38 30       	R7 = R0;
     62c:	48 50       	R1 = R0 + R1;
     62e:	a6 6f       	SP += -0xc;		/* (-12) */
     630:	ff e3 84 fe 	CALL 0x338 <_DomainNameLengthLimit>;
     634:	c0 42       	R0 = R0.L (Z);
     636:	f8 67       	R0 += -0x1;		/* ( -1) */
     638:	07 50       	R0 = R7 + R0;
     63a:	10 32       	P2 = R0;
     63c:	20 e1 ff 00 	R0 = 0xff (X);		/*		R0=0xff(255) */
     640:	c7 51       	R7 = R7 + R0;
     642:	0e 32       	P1 = R6;
     644:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
     646:	13 20       	JUMP.S 0x66c <_AppendDomainName+0x4c>;
     648:	00 32       	P0 = R0;
     64a:	08 6c       	P0 += 0x1;		/* (  1) */
     64c:	02 5a       	P0 = P2 + P0;
     64e:	40 30       	R0 = P0;
     650:	87 09       	CC = R7 < R0 (IU);
     652:	11 18       	IF CC JUMP 0x674 <_AppendDomainName+0x54>;
     654:	41 32       	P0 = P1;
     656:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     658:	04 20       	JUMP.S 0x660 <_AppendDomainName+0x40>;
     65a:	08 64       	R0 += 0x1;		/* (  1) */
     65c:	42 98       	R2 = B[P0++] (X);
     65e:	12 9a       	B[P2++] = R2;
     660:	0a 99       	R2 = B[P1] (Z);
     662:	10 09       	CC = R0 <= R2;
     664:	fb 1f       	IF CC JUMP 0x65a <_AppendDomainName+0x3a> (BP);
     666:	00 32       	P0 = R0;
     668:	11 9b       	B[P2] = R1;
     66a:	41 5a       	P1 = P1 + P0;
     66c:	08 99       	R0 = B[P1] (Z);
     66e:	00 0c       	CC = R0 == 0x0;
     670:	ec 17       	IF !CC JUMP 0x648 <_AppendDomainName+0x28> (BP);
     672:	02 20       	JUMP.S 0x676 <_AppendDomainName+0x56>;
     674:	02 68       	P2 = 0x0 (X);		/*		P2=0x0(  0) */
     676:	66 6c       	SP += 0xc;		/* ( 12) */
     678:	27 01       	RETS = [SP++];
     67a:	42 30       	R0 = P2;
     67c:	30 05       	(R7:6) = [SP++];
     67e:	10 00       	RTS;

00000680 <_MakeDomainLabelFromLiteralString>:
_MakeDomainLabelFromLiteralString():
     680:	08 32       	P1 = R0;
     682:	22 e1 40 00 	R2 = 0x40 (X);		/*		R2=0x40( 64) */
     686:	12 32       	P2 = R2;
     688:	01 32       	P0 = R1;
     68a:	d0 50       	R3 = R0 + R2;
     68c:	09 6c       	P1 += 0x1;		/* (  1) */
     68e:	49 30       	R1 = P1;
     690:	19 0a       	CC = R1 <= R3 (IU);
     692:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
     694:	c5 04       	[--SP] = (P5:5);
     696:	91 06       	IF !CC P2 = R1;
     698:	b3 e0 09 20 	LSETUP(0x69e <_MakeDomainLabelFromLiteralString+0x1e>, 0x6aa <_MakeDomainLabelFromLiteralString+0x2a>) LC1 = P2;
     69c:	02 20       	JUMP.S 0x6a0 <_MakeDomainLabelFromLiteralString+0x20>;
     69e:	09 9a       	B[P1++] = R1;
     6a0:	68 32       	P5 = P0;
     6a2:	41 98       	R1 = B[P0++] (X);
     6a4:	0a 43       	R2 = R1.B (X);
     6a6:	02 0c       	CC = R2 == 0x0;
     6a8:	02 18       	IF CC JUMP 0x6ac <_MakeDomainLabelFromLiteralString+0x2c>;
     6aa:	00 00       	NOP;
     6ac:	10 32       	P2 = R0;
     6ae:	c1 43       	R1 =~ R0;
     6b0:	51 30       	R2 = P1;
     6b2:	4a 50       	R1 = R2 + R1;
     6b4:	11 9b       	B[P2] = R1;
     6b6:	68 99       	R0 = B[P5] (X);
     6b8:	00 0c       	CC = R0 == 0x0;
     6ba:	00 02       	R0 = CC;
     6bc:	85 04       	(P5:5) = [SP++];
     6be:	10 00       	RTS;

000006c0 <_MakeDomainNameFromDNSNameString>:
_MakeDomainNameFromDNSNameString():
     6c0:	10 32       	P2 = R0;
     6c2:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
     6c4:	12 9b       	B[P2] = R2;
     6c6:	ff e2 ff fe 	JUMP.L 0x4c4 <_AppendDNSNameString>;
	...

000006cc <_ConvertDomainLabelToCString_withescape>:
_ConvertDomainLabelToCString_withescape():
     6cc:	e3 05       	[--SP] = (R7:4, P5:3);
     6ce:	20 32       	P4 = R0;
     6d0:	00 e8 07 00 	LINK 0x1c;		/* (28) */
     6d4:	29 32       	P5 = R1;
     6d6:	f9 61       	R1 = 0x3f (X);		/*		R1=0x3f( 63) */
     6d8:	32 30       	R6 = R2;
     6da:	20 98       	R0 = B[P4++] (Z);
     6dc:	08 32       	P1 = R0;
     6de:	08 0a       	CC = R0 <= R1 (IU);
     6e0:	8c 5a       	P2 = P4 + P1;
     6e2:	44 1c       	IF CC JUMP 0x76a <_ConvertDomainLabelToCString_withescape+0x9e> (BP);
     6e4:	4f 20       	JUMP.S 0x782 <_ConvertDomainLabelToCString_withescape+0xb6>;
     6e6:	b0 e4 1b 00 	R0 = B[SP + 0x1b] (Z);
     6ea:	65 98       	R5 = B[P4++] (X);
     6ec:	08 02       	CC = R0;
     6ee:	3c 1c       	IF CC JUMP 0x766 <_ConvertDomainLabelToCString_withescape+0x9a> (BP);
     6f0:	6f 43       	R7 = R5.B (Z);
     6f2:	71 61       	R1 = 0x2e (X);		/*		R1=0x2e( 46) */
     6f4:	0f 08       	CC = R7 == R1;
     6f6:	03 18       	IF CC JUMP 0x6fc <_ConvertDomainLabelToCString_withescape+0x30>;
     6f8:	27 08       	CC = R7 == R4;
     6fa:	03 14       	IF !CC JUMP 0x700 <_ConvertDomainLabelToCString_withescape+0x34> (BP);
     6fc:	2e 9a       	B[P5++] = R6;
     6fe:	34 20       	JUMP.S 0x766 <_ConvertDomainLabelToCString_withescape+0x9a>;
     700:	00 61       	R0 = 0x20 (X);		/*		R0=0x20( 32) */
     702:	07 0a       	CC = R7 <= R0 (IU);
     704:	31 14       	IF !CC JUMP 0x766 <_ConvertDomainLabelToCString_withescape+0x9a> (BP);
     706:	5d 32       	P3 = P5;
     708:	1e 9a       	B[P3++] = R6;
     70a:	ab e6 01 00 	B[P5 + 0x1] = R3;
     70e:	41 e1 cc cc 	R1.H = 0xcccc;		/* (-13108)	R1=0xcccc002e(-859045842) */
     712:	f3 b0       	[SP + 0xc] = R3;
     714:	32 bd       	[SP + 0x10] = P2;
     716:	01 e1 cd cc 	R1.L = 0xcccd;		/* (-13107)	R1=0xcccccccd(-858993459) */
     71a:	07 30       	R0 = R7;
     71c:	ff e3 72 fc 	CALL 0x0 <_putVal32>;
     720:	82 c6 e8 8b 	R5 = R0 >> 0x3;
     724:	6a 43       	R2 = R5.B (Z);
     726:	41 e1 cc cc 	R1.H = 0xcccc;		/* (-13108)	R1=0xcccccccd(-858993459) */
     72a:	02 30       	R0 = R2;
     72c:	01 e1 cd cc 	R1.L = 0xcccd;		/* (-13107)	R1=0xcccccccd(-858993459) */
     730:	72 b1       	[SP + 0x14] = R2;
     732:	ff e3 67 fc 	CALL 0x0 <_putVal32>;
     736:	4f 30       	R1 = FP;
     738:	18 4e       	R0 >>= 0x3;
     73a:	c8 40       	R0 *= R1;
     73c:	72 a1       	R2 = [SP + 0x14];
     73e:	02 52       	R0 = R2 - R0;
     740:	80 65       	R0 += 0x30;		/* ( 48) */
     742:	98 e6 01 00 	B[P3 + 0x1] = R0;
     746:	41 e1 cc cc 	R1.H = 0xcccc;		/* (-13108)	R1=0xcccccccd(-858993459) */
     74a:	07 30       	R0 = R7;
     74c:	01 e1 cd cc 	R1.L = 0xcccd;		/* (-13107)	R1=0xcccccccd(-858993459) */
     750:	ff e3 58 fc 	CALL 0x0 <_putVal32>;
     754:	47 30       	R0 = FP;
     756:	c5 40       	R5 *= R0;
     758:	6b 32       	P5 = P3;
     75a:	0d 6c       	P5 += 0x1;		/* (  1) */
     75c:	6f 53       	R5 = R7 - R5;
     75e:	0d 6c       	P5 += 0x1;		/* (  1) */
     760:	85 65       	R5 += 0x30;		/* ( 48) */
     762:	32 ad       	P2 = [SP + 0x10];
     764:	f3 a0       	R3 = [SP + 0xc];
     766:	2d 9a       	B[P5++] = R5;
     768:	08 20       	JUMP.S 0x778 <_ConvertDomainLabelToCString_withescape+0xac>;
     76a:	14 43       	R4 = R2.B (X);
     76c:	04 0c       	CC = R4 == 0x0;
     76e:	00 02       	R0 = CC;
     770:	b0 e6 1b 00 	B[SP + 0x1b] = R0;
     774:	83 61       	R3 = 0x30 (X);		/*		R3=0x30( 48) */
     776:	57 68       	FP = 0xa (X);		/*		FP=0xa( 10) */
     778:	d4 09       	CC = P4 < P2 (IU);
     77a:	b6 1f       	IF CC JUMP 0x6e6 <_ConvertDomainLabelToCString_withescape+0x1a> (BP);
     77c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     77e:	28 9b       	B[P5] = R0;
     780:	02 20       	JUMP.S 0x784 <_ConvertDomainLabelToCString_withescape+0xb8>;
     782:	05 68       	P5 = 0x0 (X);		/*		P5=0x0(  0) */
     784:	e6 6c       	SP += 0x1c;		/* ( 28) */
     786:	77 90       	FP = [SP++];
     788:	45 30       	R0 = P5;
     78a:	27 01       	RETS = [SP++];
     78c:	a3 05       	(R7:4, P5:3) = [SP++];
     78e:	10 00       	RTS;

00000790 <_ConvertDomainNameToCString_withescape>:
_ConvertDomainNameToCString_withescape():
     790:	f4 05       	[--SP] = (R7:6, P5:4);
     792:	28 32       	P5 = R0;
     794:	67 01       	[--SP] = RETS;
     796:	2c e1 00 01 	P4 = 0x100 (X);		/*		P4=0x100(256) */
     79a:	a6 6f       	SP += -0xc;		/* (-12) */
     79c:	11 32       	P2 = R1;
     79e:	28 99       	R0 = B[P5] (Z);
     7a0:	32 30       	R6 = R2;
     7a2:	25 5b       	P4 = P5 + P4;
     7a4:	00 0c       	CC = R0 == 0x0;
     7a6:	17 14       	IF !CC JUMP 0x7d4 <_ConvertDomainNameToCString_withescape+0x44> (BP);
     7a8:	70 61       	R0 = 0x2e (X);		/*		R0=0x2e( 46) */
     7aa:	10 9a       	B[P2++] = R0;
     7ac:	14 20       	JUMP.S 0x7d4 <_ConvertDomainNameToCString_withescape+0x44>;
     7ae:	08 32       	P1 = R0;
     7b0:	09 6c       	P1 += 0x1;		/* (  1) */
     7b2:	4d 5a       	P1 = P5 + P1;
     7b4:	4c 0a       	CC = P4 <= P1 (IU);
     7b6:	18 18       	IF CC JUMP 0x7e6 <_ConvertDomainNameToCString_withescape+0x56>;
     7b8:	45 30       	R0 = P5;
     7ba:	4a 30       	R1 = P2;
     7bc:	16 30       	R2 = R6;
     7be:	ff e3 87 ff 	CALL 0x6cc <_ConvertDomainLabelToCString_withescape>;
     7c2:	00 0c       	CC = R0 == 0x0;
     7c4:	12 1c       	IF CC JUMP 0x7e8 <_ConvertDomainNameToCString_withescape+0x58> (BP);
     7c6:	29 99       	R1 = B[P5] (Z);
     7c8:	09 64       	R1 += 0x1;		/* (  1) */
     7ca:	11 32       	P2 = R1;
     7cc:	55 5b       	P5 = P5 + P2;
     7ce:	10 32       	P2 = R0;
     7d0:	17 9a       	B[P2++] = R7;
     7d2:	02 20       	JUMP.S 0x7d6 <_ConvertDomainNameToCString_withescape+0x46>;
     7d4:	77 61       	R7 = 0x2e (X);		/*		R7=0x2e( 46) */
     7d6:	28 99       	R0 = B[P5] (Z);
     7d8:	00 0c       	CC = R0 == 0x0;
     7da:	ea 17       	IF !CC JUMP 0x7ae <_ConvertDomainNameToCString_withescape+0x1e> (BP);
     7dc:	42 30       	R0 = P2;
     7de:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
     7e0:	08 64       	R0 += 0x1;		/* (  1) */
     7e2:	11 9a       	B[P2++] = R1;
     7e4:	02 20       	JUMP.S 0x7e8 <_ConvertDomainNameToCString_withescape+0x58>;
     7e6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     7e8:	66 6c       	SP += 0xc;		/* ( 12) */
     7ea:	27 01       	RETS = [SP++];
     7ec:	b4 05       	(R7:6, P5:4) = [SP++];
     7ee:	10 00       	RTS;

000007f0 <_ConvertUTF8PstringToRFC1034HostLabel>:
_ConvertUTF8PstringToRFC1034HostLabel():
     7f0:	10 32       	P2 = R0;
     7f2:	f3 05       	[--SP] = (R7:6, P5:3);
     7f4:	29 32       	P5 = R1;
     7f6:	4f 01       	[--SP] = FP;
     7f8:	08 32       	P1 = R0;
     7fa:	11 99       	R1 = B[P2] (Z);
     7fc:	09 64       	R1 += 0x1;		/* (  1) */
     7fe:	48 50       	R1 = R0 + R1;
     800:	39 32       	FP = R1;
     802:	2a e1 40 00 	P2 = 0x40 (X);		/*		P2=0x40( 64) */
     806:	95 5a       	P2 = P5 + P2;
     808:	45 32       	P0 = P5;
     80a:	21 32       	P4 = R1;
     80c:	08 6c       	P0 += 0x1;		/* (  1) */
     80e:	42 34       	I0 = P2;
     810:	09 6c       	P1 += 0x1;		/* (  1) */
     812:	50 32       	P2 = P0;
     814:	27 e1 bf ff 	R7 = -0x41 (X);		/*		R7=0xffffffbf(-65) */
     818:	23 e1 9f ff 	R3 = -0x61 (X);		/*		R3=0xffffff9f(-97) */
     81c:	ff 6f       	FP += -0x1;		/* ( -1) */
     81e:	69 61       	R1 = 0x2d (X);		/*		R1=0x2d( 45) */
     820:	3d 20       	JUMP.S 0x89a <_ConvertUTF8PstringToRFC1034HostLabel+0xaa>;
     822:	3e 61       	R6 = 0x27 (X);		/*		R6=0x27( 39) */
     824:	4a 99       	R2 = B[P1] (X);
     826:	50 43       	R0 = R2.B (Z);
     828:	30 08       	CC = R0 == R6;
     82a:	37 18       	IF CC JUMP 0x898 <_ConvertUTF8PstringToRFC1034HostLabel+0xa8>;
     82c:	59 32       	P3 = P1;
     82e:	13 6c       	P3 += 0x2;		/* (  2) */
     830:	e3 09       	CC = P3 < P4 (IU);
     832:	11 14       	IF !CC JUMP 0x854 <_ConvertUTF8PstringToRFC1034HostLabel+0x64> (BP);
     834:	26 e1 e2 00 	R6 = 0xe2 (X);		/*		R6=0xe2(226) */
     838:	30 08       	CC = R0 == R6;
     83a:	0d 14       	IF !CC JUMP 0x854 <_ConvertUTF8PstringToRFC1034HostLabel+0x64> (BP);
     83c:	88 e4 01 00 	R0 = B[P1 + 0x1] (Z);
     840:	26 e1 80 00 	R6 = 0x80 (X);		/*		R6=0x80(128) */
     844:	30 08       	CC = R0 == R6;
     846:	07 14       	IF !CC JUMP 0x854 <_ConvertUTF8PstringToRFC1034HostLabel+0x64> (BP);
     848:	18 99       	R0 = B[P3] (Z);
     84a:	ce 64       	R6 += 0x19;		/* ( 25) */
     84c:	30 08       	CC = R0 == R6;
     84e:	03 14       	IF !CC JUMP 0x854 <_ConvertUTF8PstringToRFC1034HostLabel+0x64> (BP);
     850:	19 6c       	P1 += 0x3;		/* (  3) */
     852:	24 20       	JUMP.S 0x89a <_ConvertUTF8PstringToRFC1034HostLabel+0xaa>;
     854:	98 32       	P3 = I0;
     856:	da 09       	CC = P2 < P3 (IU);
     858:	20 14       	IF !CC JUMP 0x898 <_ConvertUTF8PstringToRFC1034HostLabel+0xa8> (BP);
     85a:	3a 50       	R0 = R2 + R7;
     85c:	40 43       	R0 = R0.B (Z);
     85e:	ce 60       	R6 = 0x19 (X);		/*		R6=0x19( 25) */
     860:	30 0a       	CC = R0 <= R6 (IU);
     862:	13 1c       	IF CC JUMP 0x888 <_ConvertUTF8PstringToRFC1034HostLabel+0x98> (BP);
     864:	1a 50       	R0 = R2 + R3;
     866:	40 43       	R0 = R0.B (Z);
     868:	30 0a       	CC = R0 <= R6 (IU);
     86a:	0f 1c       	IF CC JUMP 0x888 <_ConvertUTF8PstringToRFC1034HostLabel+0x98> (BP);
     86c:	02 30       	R0 = R2;
     86e:	80 66       	R0 += -0x30;		/* (-48) */
     870:	40 43       	R0 = R0.B (Z);
     872:	4e 60       	R6 = 0x9 (X);		/*		R6=0x9(  9) */
     874:	30 0a       	CC = R0 <= R6 (IU);
     876:	09 1c       	IF CC JUMP 0x888 <_ConvertUTF8PstringToRFC1034HostLabel+0x98> (BP);
     878:	42 0a       	CC = P2 <= P0 (IU);
     87a:	0f 1c       	IF CC JUMP 0x898 <_ConvertUTF8PstringToRFC1034HostLabel+0xa8> (BP);
     87c:	f9 09       	CC = P1 < FP (IU);
     87e:	07 14       	IF !CC JUMP 0x88c <_ConvertUTF8PstringToRFC1034HostLabel+0x9c> (BP);
     880:	50 43       	R0 = R2.B (Z);
     882:	6e 61       	R6 = 0x2d (X);		/*		R6=0x2d( 45) */
     884:	30 08       	CC = R0 == R6;
     886:	03 14       	IF !CC JUMP 0x88c <_ConvertUTF8PstringToRFC1034HostLabel+0x9c> (BP);
     888:	12 9a       	B[P2++] = R2;
     88a:	07 20       	JUMP.S 0x898 <_ConvertUTF8PstringToRFC1034HostLabel+0xa8>;
     88c:	6a 61       	R2 = 0x2d (X);		/*		R2=0x2d( 45) */
     88e:	90 e4 ff ff 	R0 = B[P2 + -0x1] (Z);
     892:	10 08       	CC = R0 == R2;
     894:	02 18       	IF CC JUMP 0x898 <_ConvertUTF8PstringToRFC1034HostLabel+0xa8>;
     896:	11 9a       	B[P2++] = R1;
     898:	09 6c       	P1 += 0x1;		/* (  1) */
     89a:	e1 09       	CC = P1 < P4 (IU);
     89c:	c3 1f       	IF CC JUMP 0x822 <_ConvertUTF8PstringToRFC1034HostLabel+0x32> (BP);
     89e:	6e 61       	R6 = 0x2d (X);		/*		R6=0x2d( 45) */
     8a0:	02 20       	JUMP.S 0x8a4 <_ConvertUTF8PstringToRFC1034HostLabel+0xb4>;
     8a2:	11 32       	P2 = R1;
     8a4:	42 0a       	CC = P2 <= P0 (IU);
     8a6:	07 1c       	IF CC JUMP 0x8b4 <_ConvertUTF8PstringToRFC1034HostLabel+0xc4> (BP);
     8a8:	4a 30       	R1 = P2;
     8aa:	f9 67       	R1 += -0x1;		/* ( -1) */
     8ac:	90 e4 ff ff 	R0 = B[P2 + -0x1] (Z);
     8b0:	30 08       	CC = R0 == R6;
     8b2:	f8 1f       	IF CC JUMP 0x8a2 <_ConvertUTF8PstringToRFC1034HostLabel+0xb2> (BP);
     8b4:	77 90       	FP = [SP++];
     8b6:	02 44       	P2 -= P0;
     8b8:	42 30       	R0 = P2;
     8ba:	28 9b       	B[P5] = R0;
     8bc:	b3 05       	(R7:6, P5:3) = [SP++];
     8be:	10 00       	RTS;

000008c0 <_ConstructServiceName>:
_ConstructServiceName():
     8c0:	e3 05       	[--SP] = (R7:4, P5:3);
     8c2:	19 32       	P3 = R1;
     8c4:	00 e8 06 00 	LINK 0x18;		/* (24) */
     8c8:	28 30       	R5 = R0;
     8ca:	2a 32       	P5 = R2;
     8cc:	37 e5 12 00 	FP = [SP + 0x48];
     8d0:	20 32       	P4 = R0;
     8d2:	43 0c       	CC = P3 == 0x0;
     8d4:	53 14       	IF !CC JUMP 0x97a <_ConstructServiceName+0xba> (BP);
     8d6:	45 0c       	CC = P5 == 0x0;
     8d8:	61 1c       	IF CC JUMP 0x99a <_ConstructServiceName+0xda> (BP);
     8da:	f1 61       	R1 = 0x3e (X);		/*		R1=0x3e( 62) */
     8dc:	6a 99       	R2 = B[P5] (X);
     8de:	02 30       	R0 = R2;
     8e0:	f8 67       	R0 += -0x1;		/* ( -1) */
     8e2:	40 43       	R0 = R0.B (Z);
     8e4:	08 0a       	CC = R0 <= R1 (IU);
     8e6:	5a 14       	IF !CC JUMP 0x99a <_ConstructServiceName+0xda> (BP);
     8e8:	52 43       	R2 = R2.B (Z);
     8ea:	12 32       	P2 = R2;
     8ec:	f3 61       	R3 = 0x3e (X);		/*		R3=0x3e( 62) */
     8ee:	0a 6c       	P2 += 0x1;		/* (  1) */
     8f0:	55 5a       	P1 = P5 + P2;
     8f2:	48 99       	R0 = B[P1] (X);
     8f4:	08 30       	R1 = R0;
     8f6:	f9 67       	R1 += -0x1;		/* ( -1) */
     8f8:	49 43       	R1 = R1.B (Z);
     8fa:	19 0a       	CC = R1 <= R3 (IU);
     8fc:	4f 14       	IF !CC JUMP 0x99a <_ConstructServiceName+0xda> (BP);
     8fe:	40 43       	R0 = R0.B (Z);
     900:	08 64       	R0 += 0x1;		/* (  1) */
     902:	18 32       	P3 = R0;
     904:	19 5a       	P0 = P1 + P3;
     906:	40 99       	R0 = B[P0] (X);
     908:	08 30       	R1 = R0;
     90a:	f9 67       	R1 += -0x1;		/* ( -1) */
     90c:	49 43       	R1 = R1.B (Z);
     90e:	19 0a       	CC = R1 <= R3 (IU);
     910:	45 14       	IF !CC JUMP 0x99a <_ConstructServiceName+0xda> (BP);
     912:	40 43       	R0 = R0.B (Z);
     914:	18 32       	P3 = R0;
     916:	18 5a       	P0 = P0 + P3;
     918:	80 e4 01 00 	R0 = B[P0 + 0x1] (Z);
     91c:	00 0c       	CC = R0 == 0x0;
     91e:	3e 14       	IF !CC JUMP 0x99a <_ConstructServiceName+0xda> (BP);
     920:	45 30       	R0 = P5;
     922:	45 32       	P0 = P5;
     924:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
     926:	09 64       	R1 += 0x1;		/* (  1) */
     928:	43 98       	R3 = B[P0++] (X);
     92a:	23 9a       	B[P4++] = R3;
     92c:	11 09       	CC = R1 <= R2;
     92e:	fc 1f       	IF CC JUMP 0x926 <_ConstructServiceName+0x66> (BP);
     930:	05 32       	P0 = R5;
     932:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
     934:	69 32       	P5 = P1;
     936:	10 5b       	P4 = P0 + P2;
     938:	54 32       	P2 = P4;
     93a:	11 9a       	B[P2++] = R1;
     93c:	21 e1 5f 00 	R1 = 0x5f (X);		/*		R1=0x5f( 95) */
     940:	a1 e6 01 00 	B[P4 + 0x1] = R1;
     944:	21 e1 73 00 	R1 = 0x73 (X);		/*		R1=0x73(115) */
     948:	91 e6 01 00 	B[P2 + 0x1] = R1;
     94c:	42 32       	P0 = P2;
     94e:	08 6c       	P0 += 0x1;		/* (  1) */
     950:	21 e1 75 00 	R1 = 0x75 (X);		/*		R1=0x75(117) */
     954:	81 e6 01 00 	B[P0 + 0x1] = R1;
     958:	12 6c       	P2 += 0x2;		/* (  2) */
     95a:	21 e1 62 00 	R1 = 0x62 (X);		/*		R1=0x62( 98) */
     95e:	91 e6 01 00 	B[P2 + 0x1] = R1;
     962:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x62( 98) */
     966:	7a 30       	R7 = P2;
     968:	01 e1 0c 02 	R1.L = 0x20c;		/* (524)	R1=0x20c(524) */
     96c:	0f 64       	R7 += 0x1;		/* (  1) */
     96e:	ff e3 59 fc 	CALL 0x220 <_SameDomainName>;
     972:	00 0c       	CC = R0 == 0x0;
     974:	0f 64       	R7 += 0x1;		/* (  1) */
     976:	a7 07       	IF CC P4 = R7;
     978:	11 20       	JUMP.S 0x99a <_ConstructServiceName+0xda>;
     97a:	00 00       	NOP;
     97c:	19 99       	R1 = B[P3] (Z);
     97e:	01 0c       	CC = R1 == 0x0;
     980:	0d 18       	IF CC JUMP 0x99a <_ConstructServiceName+0xda>;
     982:	f8 61       	R0 = 0x3f (X);		/*		R0=0x3f( 63) */
     984:	01 09       	CC = R1 <= R0;
     986:	bf 14       	IF !CC JUMP 0xb04 <_ConstructServiceName+0x244> (BP);
     988:	53 32       	P2 = P3;
     98a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     98c:	04 20       	JUMP.S 0x994 <_ConstructServiceName+0xd4>;
     98e:	08 64       	R0 += 0x1;		/* (  1) */
     990:	52 98       	R2 = B[P2++] (X);
     992:	22 9a       	B[P4++] = R2;
     994:	08 09       	CC = R0 <= R1;
     996:	fc 1f       	IF CC JUMP 0x98e <_ConstructServiceName+0xce> (BP);
     998:	05 20       	JUMP.S 0x9a2 <_ConstructServiceName+0xe2>;
     99a:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x0 <_putVal32> */
     99e:	0b e1 24 02 	P3.L = 0x224;		/* (548)	P3=0x224 */
     9a2:	6c 99       	R4 = B[P5] (X);
     9a4:	66 43       	R6 = R4.B (Z);
     9a6:	3e 30       	R7 = R6;
     9a8:	f7 67       	R7 += -0x2;		/* ( -2) */
     9aa:	71 60       	R1 = 0xe (X);		/*		R1=0xe( 14) */
     9ac:	0f 0a       	CC = R7 <= R1 (IU);
     9ae:	1a 1c       	IF CC JUMP 0x9e2 <_ConstructServiceName+0x122> (BP);
     9b0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xe( 14) */
     9b4:	f5 bc       	[SP + 0xc] = P5;
     9b6:	37 bd       	[SP + 0x10] = FP;
     9b8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     9ba:	01 e1 28 02 	R1.L = 0x228;		/* (552)	R1=0x228(552) */
     9be:	53 30       	R2 = P3;
     9c0:	ff e3 20 fb 	CALL 0x0 <_putVal32>;
     9c4:	eb 61       	R3 = 0x3d (X);		/*		R3=0x3d( 61) */
     9c6:	1f 0a       	CC = R7 <= R3 (IU);
     9c8:	ca 14       	IF !CC JUMP 0xb5c <_ConstructServiceName+0x29c> (BP);
     9ca:	87 60       	R7 = 0x10 (X);		/*		R7=0x10( 16) */
     9cc:	3e 09       	CC = R6 <= R7;
     9ce:	0a 18       	IF CC JUMP 0x9e2 <_ConstructServiceName+0x122>;
     9d0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x228(552) */
     9d4:	47 30       	R0 = FP;
     9d6:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_putVal32>(  0) */
     9da:	ff e3 23 fc 	CALL 0x220 <_SameDomainName>;
     9de:	00 0c       	CC = R0 == 0x0;
     9e0:	be 1c       	IF CC JUMP 0xb5c <_ConstructServiceName+0x29c> (BP);
     9e2:	21 e1 5f 00 	R1 = 0x5f (X);		/*		R1=0x5f( 95) */
     9e6:	a8 e4 01 00 	R0 = B[P5 + 0x1] (Z);
     9ea:	08 08       	CC = R0 == R1;
     9ec:	91 10       	IF !CC JUMP 0xb0e <_ConstructServiceName+0x24e>;
     9ee:	55 32       	P2 = P5;
     9f0:	12 6c       	P2 += 0x2;		/* (  2) */
     9f2:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
     9f4:	23 e1 bf ff 	R3 = -0x41 (X);		/*		R3=0xffffffbf(-65) */
     9f8:	22 e1 9f ff 	R2 = -0x61 (X);		/*		R2=0xffffff9f(-97) */
     9fc:	c8 68       	P0 = 0x19 (X);		/*		P0=0x19( 25) */
     9fe:	51 98       	R1 = B[P2++] (X);
     a00:	d9 51       	R7 = R1 + R3;
     a02:	7f 43       	R7 = R7.B (Z);
     a04:	0f 32       	P1 = R7;
     a06:	41 0a       	CC = P1 <= P0 (IU);
     a08:	18 1c       	IF CC JUMP 0xa38 <_ConstructServiceName+0x178> (BP);
     a0a:	d1 51       	R7 = R1 + R2;
     a0c:	7f 43       	R7 = R7.B (Z);
     a0e:	0f 32       	P1 = R7;
     a10:	41 0a       	CC = P1 <= P0 (IU);
     a12:	13 1c       	IF CC JUMP 0xa38 <_ConstructServiceName+0x178> (BP);
     a14:	39 30       	R7 = R1;
     a16:	87 66       	R7 += -0x30;		/* (-48) */
     a18:	7f 43       	R7 = R7.B (Z);
     a1a:	0f 32       	P1 = R7;
     a1c:	48 68       	P0 = 0x9 (X);		/*		P0=0x9(  9) */
     a1e:	41 0a       	CC = P1 <= P0 (IU);
     a20:	0c 1c       	IF CC JUMP 0xa38 <_ConstructServiceName+0x178> (BP);
     a22:	49 43       	R1 = R1.B (Z);
     a24:	6f 61       	R7 = 0x2d (X);		/*		R7=0x2d( 45) */
     a26:	39 08       	CC = R1 == R7;
     a28:	04 18       	IF CC JUMP 0xa30 <_ConstructServiceName+0x170>;
     a2a:	97 65       	R7 += 0x32;		/* ( 50) */
     a2c:	39 08       	CC = R1 == R7;
     a2e:	75 10       	IF !CC JUMP 0xb18 <_ConstructServiceName+0x258>;
     a30:	10 0c       	CC = R0 == 0x2;
     a32:	73 18       	IF CC JUMP 0xb18 <_ConstructServiceName+0x258>;
     a34:	b0 08       	CC = R0 < R6;
     a36:	71 10       	IF !CC JUMP 0xb18 <_ConstructServiceName+0x258>;
     a38:	08 64       	R0 += 0x1;		/* (  1) */
     a3a:	30 09       	CC = R0 <= R6;
     a3c:	e0 1f       	IF CC JUMP 0x9fc <_ConstructServiceName+0x13c> (BP);
     a3e:	4d 32       	P1 = P5;
     a40:	54 32       	P2 = P4;
     a42:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     a44:	08 64       	R0 += 0x1;		/* (  1) */
     a46:	49 98       	R1 = B[P1++] (X);
     a48:	11 9a       	B[P2++] = R1;
     a4a:	30 09       	CC = R0 <= R6;
     a4c:	fc 1f       	IF CC JUMP 0xa44 <_ConstructServiceName+0x184> (BP);
     a4e:	64 43       	R4 = R4.B (Z);
     a50:	14 32       	P2 = R4;
     a52:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
     a54:	0a 6c       	P2 += 0x1;		/* (  1) */
     a56:	14 5b       	P4 = P4 + P2;
     a58:	95 5a       	P2 = P5 + P2;
     a5a:	10 99       	R0 = B[P2] (Z);
     a5c:	08 08       	CC = R0 == R1;
     a5e:	62 14       	IF !CC JUMP 0xb22 <_ConstructServiceName+0x262> (BP);
     a60:	23 e1 5f 00 	R3 = 0x5f (X);		/*		R3=0x5f( 95) */
     a64:	90 e4 01 00 	R0 = B[P2 + 0x1] (Z);
     a68:	18 08       	CC = R0 == R3;
     a6a:	5c 14       	IF !CC JUMP 0xb22 <_ConstructServiceName+0x262> (BP);
     a6c:	27 e1 75 00 	R7 = 0x75 (X);		/*		R7=0x75(117) */
     a70:	90 e5 02 00 	R0 = B[P2 + 0x2] (X);
     a74:	28 4a       	BITSET (R0, 0x5);		/* bit  5 */
     a76:	40 43       	R0 = R0.B (Z);
     a78:	38 08       	CC = R0 == R7;
     a7a:	09 14       	IF !CC JUMP 0xa8c <_ConstructServiceName+0x1cc> (BP);
     a7c:	90 e5 03 00 	R0 = B[P2 + 0x3] (X);
     a80:	28 4a       	BITSET (R0, 0x5);		/* bit  5 */
     a82:	40 43       	R0 = R0.B (Z);
     a84:	21 e1 64 00 	R1 = 0x64 (X);		/*		R1=0x64(100) */
     a88:	08 08       	CC = R0 == R1;
     a8a:	0c 20       	JUMP.S 0xaa2 <_ConstructServiceName+0x1e2>;
     a8c:	23 e1 74 00 	R3 = 0x74 (X);		/*		R3=0x74(116) */
     a90:	18 08       	CC = R0 == R3;
     a92:	48 14       	IF !CC JUMP 0xb22 <_ConstructServiceName+0x262> (BP);
     a94:	27 e1 63 00 	R7 = 0x63 (X);		/*		R7=0x63( 99) */
     a98:	90 e5 03 00 	R0 = B[P2 + 0x3] (X);
     a9c:	28 4a       	BITSET (R0, 0x5);		/* bit  5 */
     a9e:	40 43       	R0 = R0.B (Z);
     aa0:	38 08       	CC = R0 == R7;
     aa2:	40 14       	IF !CC JUMP 0xb22 <_ConstructServiceName+0x262> (BP);
     aa4:	21 e1 70 00 	R1 = 0x70 (X);		/*		R1=0x70 <_GetNextActiveInterfaceID>(112) */
     aa8:	90 e5 04 00 	R0 = B[P2 + 0x4] (X);
     aac:	28 4a       	BITSET (R0, 0x5);		/* bit  5 */
     aae:	40 43       	R0 = R0.B (Z);
     ab0:	08 08       	CC = R0 == R1;
     ab2:	38 10       	IF !CC JUMP 0xb22 <_ConstructServiceName+0x262>;
     ab4:	42 30       	R0 = P2;
     ab6:	54 30       	R2 = P4;
     ab8:	29 68       	P1 = 0x5 (X);		/*		P1=0x5(  5) */
     aba:	b2 e0 07 10 	LSETUP(0xabe <_ConstructServiceName+0x1fe>, 0xac8 <_ConstructServiceName+0x208>) LC1 = P1;
     abe:	00 32       	P0 = R0;
     ac0:	08 64       	R0 += 0x1;		/* (  1) */
     ac2:	41 98       	R1 = B[P0++] (X);
     ac4:	02 32       	P0 = R2;
     ac6:	0a 64       	R2 += 0x1;		/* (  1) */
     ac8:	01 9a       	B[P0++] = R1;
     aca:	90 e4 05 00 	R0 = B[P2 + 0x5] (Z);
     ace:	00 0c       	CC = R0 == 0x0;
     ad0:	2e 14       	IF !CC JUMP 0xb2c <_ConstructServiceName+0x26c> (BP);
     ad2:	a0 e6 05 00 	B[P4 + 0x5] = R0;
     ad6:	38 99       	R0 = B[FP] (Z);
     ad8:	00 0c       	CC = R0 == 0x0;
     ada:	2e 18       	IF CC JUMP 0xb36 <_ConstructServiceName+0x276>;
     adc:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x70 <_GetNextActiveInterfaceID>(112) */
     ae0:	47 30       	R0 = FP;
     ae2:	01 e1 bc 02 	R1.L = 0x2bc;		/* (700)	R1=0x2bc(700) */
     ae6:	ff e3 9d fb 	CALL 0x220 <_SameDomainName>;
     aea:	00 0c       	CC = R0 == 0x0;
     aec:	2a 10       	IF !CC JUMP 0xb40 <_ConstructServiceName+0x280>;
     aee:	05 30       	R0 = R5;
     af0:	4f 30       	R1 = FP;
     af2:	ff e3 97 fd 	CALL 0x620 <_AppendDomainName>;
     af6:	00 0c       	CC = R0 == 0x0;
     af8:	33 14       	IF !CC JUMP 0xb5e <_ConstructServiceName+0x29e> (BP);
     afa:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0xff9f(65439) */
     afe:	02 e1 f4 01 	R2.L = 0x1f4;		/* (500)	R2=0x1f4(500) */
     b02:	23 20       	JUMP.S 0xb48 <_ConstructServiceName+0x288>;
     b04:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x1f4(500) */
     b08:	02 e1 98 00 	R2.L = 0x98;		/* (152)	R2=0x98(152) */
     b0c:	1e 20       	JUMP.S 0xb48 <_ConstructServiceName+0x288>;
     b0e:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x98(152) */
     b12:	02 e1 b8 00 	R2.L = 0xb8;		/* (184)	R2=0xb8(184) */
     b16:	19 20       	JUMP.S 0xb48 <_ConstructServiceName+0x288>;
     b18:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0xb8(184) */
     b1c:	02 e1 f0 00 	R2.L = 0xf0;		/* (240)	R2=0xf0(240) */
     b20:	14 20       	JUMP.S 0xb48 <_ConstructServiceName+0x288>;
     b22:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0xf0(240) */
     b26:	02 e1 3c 01 	R2.L = 0x13c;		/* (316)	R2=0x13c(316) */
     b2a:	0f 20       	JUMP.S 0xb48 <_ConstructServiceName+0x288>;
     b2c:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x13c(316) */
     b30:	02 e1 6c 01 	R2.L = 0x16c;		/* (364)	R2=0x16c(364) */
     b34:	0a 20       	JUMP.S 0xb48 <_ConstructServiceName+0x288>;
     b36:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x16c(364) */
     b3a:	02 e1 94 01 	R2.L = 0x194;		/* (404)	R2=0x194(404) */
     b3e:	05 20       	JUMP.S 0xb48 <_ConstructServiceName+0x288>;
     b40:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x194(404) */
     b44:	02 e1 b8 01 	R2.L = 0x1b8;		/* (440)	R2=0x1b8(440) */
     b48:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2bc(700) */
     b4c:	f3 bc       	[SP + 0xc] = P3;
     b4e:	35 bd       	[SP + 0x10] = P5;
     b50:	77 bd       	[SP + 0x14] = FP;
     b52:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     b54:	01 e1 c8 02 	R1.L = 0x2c8;		/* (712)	R1=0x2c8(712) */
     b58:	ff e3 54 fa 	CALL 0x0 <_putVal32>;
     b5c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     b5e:	c6 6c       	SP += 0x18;		/* ( 24) */
     b60:	77 90       	FP = [SP++];
     b62:	27 01       	RETS = [SP++];
     b64:	a3 05       	(R7:4, P5:3) = [SP++];
     b66:	10 00       	RTS;

00000b68 <_DeconstructServiceName>:
_DeconstructServiceName():
     b68:	10 32       	P2 = R0;
     b6a:	fc 05       	[--SP] = (R7:7, P5:4);
     b6c:	2c e1 00 01 	P4 = 0x100 (X);		/*		P4=0x100(256) */
     b70:	50 99       	R0 = B[P2] (X);
     b72:	47 43       	R7 = R0.B (Z);
     b74:	22 5b       	P4 = P2 + P4;
     b76:	07 0c       	CC = R7 == 0x0;
     b78:	80 18       	IF CC JUMP 0xc78 <_DeconstructServiceName+0x110>;
     b7a:	fb 61       	R3 = 0x3f (X);		/*		R3=0x3f( 63) */
     b7c:	1f 09       	CC = R7 <= R3;
     b7e:	7d 10       	IF !CC JUMP 0xc78 <_DeconstructServiceName+0x110>;
     b80:	01 32       	P0 = R1;
     b82:	4a 32       	P1 = P2;
     b84:	03 60       	R3 = 0x0 (X);		/*		R3=0x0(  0) */
     b86:	0b 64       	R3 += 0x1;		/* (  1) */
     b88:	49 98       	R1 = B[P1++] (X);
     b8a:	01 9a       	B[P0++] = R1;
     b8c:	3b 09       	CC = R3 <= R7;
     b8e:	fc 1f       	IF CC JUMP 0xb86 <_DeconstructServiceName+0x1e> (BP);
     b90:	40 43       	R0 = R0.B (Z);
     b92:	08 64       	R0 += 0x1;		/* (  1) */
     b94:	08 32       	P1 = R0;
     b96:	8a 5a       	P2 = P2 + P1;
     b98:	50 99       	R0 = B[P2] (X);
     b9a:	43 43       	R3 = R0.B (Z);
     b9c:	03 0c       	CC = R3 == 0x0;
     b9e:	6d 18       	IF CC JUMP 0xc78 <_DeconstructServiceName+0x110>;
     ba0:	f9 61       	R1 = 0x3f (X);		/*		R1=0x3f( 63) */
     ba2:	0b 09       	CC = R3 <= R1;
     ba4:	6a 14       	IF !CC JUMP 0xc78 <_DeconstructServiceName+0x110> (BP);
     ba6:	27 e1 5f 00 	R7 = 0x5f (X);		/*		R7=0x5f( 95) */
     baa:	91 e4 01 00 	R1 = B[P2 + 0x1] (Z);
     bae:	39 08       	CC = R1 == R7;
     bb0:	64 14       	IF !CC JUMP 0xc78 <_DeconstructServiceName+0x110> (BP);
     bb2:	02 32       	P0 = R2;
     bb4:	4a 32       	P1 = P2;
     bb6:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
     bb8:	09 64       	R1 += 0x1;		/* (  1) */
     bba:	4f 98       	R7 = B[P1++] (X);
     bbc:	07 9a       	B[P0++] = R7;
     bbe:	19 09       	CC = R1 <= R3;
     bc0:	fc 1f       	IF CC JUMP 0xbb8 <_DeconstructServiceName+0x50> (BP);
     bc2:	40 43       	R0 = R0.B (Z);
     bc4:	08 64       	R0 += 0x1;		/* (  1) */
     bc6:	08 32       	P1 = R0;
     bc8:	82 50       	R2 = R2 + R0;
     bca:	8a 5a       	P2 = P2 + P1;
     bcc:	10 99       	R0 = B[P2] (Z);
     bce:	00 0c       	CC = R0 == 0x0;
     bd0:	54 18       	IF CC JUMP 0xc78 <_DeconstructServiceName+0x110>;
     bd2:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
     bd4:	08 08       	CC = R0 == R1;
     bd6:	51 14       	IF !CC JUMP 0xc78 <_DeconstructServiceName+0x110> (BP);
     bd8:	90 e4 01 00 	R0 = B[P2 + 0x1] (Z);
     bdc:	23 e1 5f 00 	R3 = 0x5f (X);		/*		R3=0x5f( 95) */
     be0:	18 08       	CC = R0 == R3;
     be2:	4b 14       	IF !CC JUMP 0xc78 <_DeconstructServiceName+0x110> (BP);
     be4:	90 e5 02 00 	R0 = B[P2 + 0x2] (X);
     be8:	28 4a       	BITSET (R0, 0x5);		/* bit  5 */
     bea:	40 43       	R0 = R0.B (Z);
     bec:	27 e1 75 00 	R7 = 0x75 (X);		/*		R7=0x75(117) */
     bf0:	38 08       	CC = R0 == R7;
     bf2:	09 14       	IF !CC JUMP 0xc04 <_DeconstructServiceName+0x9c> (BP);
     bf4:	90 e5 03 00 	R0 = B[P2 + 0x3] (X);
     bf8:	28 4a       	BITSET (R0, 0x5);		/* bit  5 */
     bfa:	40 43       	R0 = R0.B (Z);
     bfc:	21 e1 64 00 	R1 = 0x64 (X);		/*		R1=0x64(100) */
     c00:	08 08       	CC = R0 == R1;
     c02:	0c 20       	JUMP.S 0xc1a <_DeconstructServiceName+0xb2>;
     c04:	23 e1 74 00 	R3 = 0x74 (X);		/*		R3=0x74(116) */
     c08:	18 08       	CC = R0 == R3;
     c0a:	37 14       	IF !CC JUMP 0xc78 <_DeconstructServiceName+0x110> (BP);
     c0c:	90 e5 03 00 	R0 = B[P2 + 0x3] (X);
     c10:	28 4a       	BITSET (R0, 0x5);		/* bit  5 */
     c12:	40 43       	R0 = R0.B (Z);
     c14:	27 e1 63 00 	R7 = 0x63 (X);		/*		R7=0x63( 99) */
     c18:	38 08       	CC = R0 == R7;
     c1a:	2f 14       	IF !CC JUMP 0xc78 <_DeconstructServiceName+0x110> (BP);
     c1c:	90 e5 04 00 	R0 = B[P2 + 0x4] (X);
     c20:	28 4a       	BITSET (R0, 0x5);		/* bit  5 */
     c22:	40 43       	R0 = R0.B (Z);
     c24:	21 e1 70 00 	R1 = 0x70 (X);		/*		R1=0x70 <_GetNextActiveInterfaceID>(112) */
     c28:	08 08       	CC = R0 == R1;
     c2a:	27 14       	IF !CC JUMP 0xc78 <_DeconstructServiceName+0x110> (BP);
     c2c:	6a 32       	P5 = P2;
     c2e:	02 32       	P0 = R2;
     c30:	29 68       	P1 = 0x5 (X);		/*		P1=0x5(  5) */
     c32:	b2 e0 03 10 	LSETUP(0xc36 <_DeconstructServiceName+0xce>, 0xc38 <_DeconstructServiceName+0xd0>) LC1 = P1;
     c36:	68 98       	R0 = B[P5++] (X);
     c38:	00 9a       	B[P0++] = R0;
     c3a:	0a 32       	P1 = R2;
     c3c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     c3e:	2a 6c       	P2 += 0x5;		/* (  5) */
     c40:	88 e6 05 00 	B[P1 + 0x5] = R0;
     c44:	b1 ad       	P1 = [SP + 0x18];
     c46:	13 20       	JUMP.S 0xc6c <_DeconstructServiceName+0x104>;
     c48:	f9 61       	R1 = 0x3f (X);		/*		R1=0x3f( 63) */
     c4a:	08 09       	CC = R0 <= R1;
     c4c:	16 10       	IF !CC JUMP 0xc78 <_DeconstructServiceName+0x110>;
     c4e:	00 32       	P0 = R0;
     c50:	10 6c       	P0 += 0x2;		/* (  2) */
     c52:	02 5a       	P0 = P2 + P0;
     c54:	44 0a       	CC = P4 <= P0 (IU);
     c56:	11 18       	IF CC JUMP 0xc78 <_DeconstructServiceName+0x110>;
     c58:	42 32       	P0 = P2;
     c5a:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
     c5c:	05 20       	JUMP.S 0xc66 <_DeconstructServiceName+0xfe>;
     c5e:	00 00       	NOP;
     c60:	42 98       	R2 = B[P0++] (X);
     c62:	0a 9a       	B[P1++] = R2;
     c64:	09 64       	R1 += 0x1;		/* (  1) */
     c66:	50 32       	P2 = P0;
     c68:	01 09       	CC = R1 <= R0;
     c6a:	fa 1f       	IF CC JUMP 0xc5e <_DeconstructServiceName+0xf6> (BP);
     c6c:	10 99       	R0 = B[P2] (Z);
     c6e:	00 0c       	CC = R0 == 0x0;
     c70:	ec 17       	IF !CC JUMP 0xc48 <_DeconstructServiceName+0xe0> (BP);
     c72:	08 9b       	B[P1] = R0;
     c74:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
     c76:	02 20       	JUMP.S 0xc7a <_DeconstructServiceName+0x112>;
     c78:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     c7a:	bc 05       	(R7:7, P5:4) = [SP++];
     c7c:	10 00       	RTS;
	...

00000c80 <_TruncateUTF8ToLength>:
_TruncateUTF8ToLength():
     c80:	60 05       	[--SP] = (R7:4);
     c82:	11 0a       	CC = R1 <= R2 (IU);
     c84:	3e 18       	IF CC JUMP 0xd00 <_TruncateUTF8ToLength+0x80>;
     c86:	d0 50       	R3 = R0 + R2;
     c88:	03 32       	P0 = R3;
     c8a:	3a 30       	R7 = R2;
     c8c:	0f 64       	R7 += 0x1;		/* (  1) */
     c8e:	8f 09       	CC = R7 < R1 (IU);
     c90:	43 99       	R3 = B[P0] (X);
     c92:	05 14       	IF !CC JUMP 0xc9c <_TruncateUTF8ToLength+0x1c> (BP);
     c94:	f8 51       	R7 = R0 + R7;
     c96:	17 32       	P2 = R7;
     c98:	57 99       	R7 = B[P2] (X);
     c9a:	03 20       	JUMP.S 0xca0 <_TruncateUTF8ToLength+0x20>;
     c9c:	27 e1 b0 ff 	R7 = -0x50 (X);		/*		R7=0xffffffb0(-80) */
     ca0:	12 32       	P2 = R2;
     ca2:	08 32       	P1 = R0;
     ca4:	0a 30       	R1 = R2;
     ca6:	25 e1 c0 00 	R5 = 0xc0 (X);		/*		R5=0xc0(192) */
     caa:	26 e1 f0 00 	R6 = 0xf0 (X);		/*		R6=0xf0(240) */
     cae:	fa 6f       	P2 += -0x1;		/* ( -1) */
     cb0:	91 5a       	P2 = P1 + P2;
     cb2:	28 e1 80 00 	P0 = 0x80 (X);		/*		P0=0x80(128) */
     cb6:	1c 20       	JUMP.S 0xcee <_TruncateUTF8ToLength+0x6e>;
     cb8:	5a 43       	R2 = R3.B (Z);
     cba:	2a 55       	R4 = R2 & R5;
     cbc:	0c 32       	P1 = R4;
     cbe:	24 e1 ed 00 	R4 = 0xed (X);		/*		R4=0xed(237) */
     cc2:	22 08       	CC = R2 == R4;
     cc4:	07 14       	IF !CC JUMP 0xcd2 <_TruncateUTF8ToLength+0x52> (BP);
     cc6:	22 e1 b0 00 	R2 = 0xb0 (X);		/*		R2=0xb0(176) */
     cca:	fe 55       	R7 = R6 & R7;
     ccc:	17 08       	CC = R7 == R2;
     cce:	02 02       	R2 = CC;
     cd0:	02 20       	JUMP.S 0xcd4 <_TruncateUTF8ToLength+0x54>;
     cd2:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
     cd4:	41 08       	CC = P1 == P0;
     cd6:	09 18       	IF CC JUMP 0xce8 <_TruncateUTF8ToLength+0x68>;
     cd8:	02 0c       	CC = R2 == 0x0;
     cda:	07 14       	IF !CC JUMP 0xce8 <_TruncateUTF8ToLength+0x68> (BP);
     cdc:	11 32       	P2 = R1;
     cde:	08 32       	P1 = R0;
     ce0:	02 61       	R2 = 0x20 (X);		/*		R2=0x20( 32) */
     ce2:	fa 6f       	P2 += -0x1;		/* ( -1) */
     ce4:	91 5a       	P2 = P1 + P2;
     ce6:	08 20       	JUMP.S 0xcf6 <_TruncateUTF8ToLength+0x76>;
     ce8:	3b 30       	R7 = R3;
     cea:	f9 67       	R1 += -0x1;		/* ( -1) */
     cec:	d3 98       	R3 = B[P2--] (X);
     cee:	01 0c       	CC = R1 == 0x0;
     cf0:	e4 17       	IF !CC JUMP 0xcb8 <_TruncateUTF8ToLength+0x38> (BP);
     cf2:	f5 2f       	JUMP.S 0xcdc <_TruncateUTF8ToLength+0x5c>;
     cf4:	f9 67       	R1 += -0x1;		/* ( -1) */
     cf6:	01 0c       	CC = R1 == 0x0;
     cf8:	04 1c       	IF CC JUMP 0xd00 <_TruncateUTF8ToLength+0x80> (BP);
     cfa:	90 98       	R0 = B[P2--] (Z);
     cfc:	10 0a       	CC = R0 <= R2 (IU);
     cfe:	fb 1f       	IF CC JUMP 0xcf4 <_TruncateUTF8ToLength+0x74> (BP);
     d00:	01 30       	R0 = R1;
     d02:	20 05       	(R7:4) = [SP++];
     d04:	10 00       	RTS;
	...

00000d08 <_LabelContainsSuffix>:
_LabelContainsSuffix():
     d08:	10 32       	P2 = R0;
     d0a:	01 0c       	CC = R1 == 0x0;
     d0c:	10 99       	R0 = B[P2] (Z);
     d0e:	c1 42       	R1 = R0.L (Z);
     d10:	2b 1c       	IF CC JUMP 0xd66 <_LabelContainsSuffix+0x5e> (BP);
     d12:	19 0e       	CC = R1 <= 0x3 (IU);
     d14:	47 18       	IF CC JUMP 0xda2 <_LabelContainsSuffix+0x9a>;
     d16:	01 32       	P0 = R1;
     d18:	4a 61       	R2 = 0x29 (X);		/*		R2=0x29( 41) */
     d1a:	42 5a       	P1 = P2 + P0;
     d1c:	09 99       	R1 = B[P1] (Z);
     d1e:	11 08       	CC = R1 == R2;
     d20:	41 14       	IF !CC JUMP 0xda2 <_LabelContainsSuffix+0x9a> (BP);
     d22:	f8 67       	R0 += -0x1;		/* ( -1) */
     d24:	c1 42       	R1 = R0.L (Z);
     d26:	09 32       	P1 = R1;
     d28:	4a 60       	R2 = 0x9 (X);		/*		R2=0x9(  9) */
     d2a:	4a 5a       	P1 = P2 + P1;
     d2c:	49 99       	R1 = B[P1] (X);
     d2e:	81 66       	R1 += -0x30;		/* (-48) */
     d30:	49 43       	R1 = R1.B (Z);
     d32:	11 0a       	CC = R1 <= R2 (IU);
     d34:	37 10       	IF !CC JUMP 0xda2 <_LabelContainsSuffix+0x9a>;
     d36:	4a 60       	R2 = 0x9 (X);		/*		R2=0x9(  9) */
     d38:	f8 67       	R0 += -0x1;		/* ( -1) */
     d3a:	c1 42       	R1 = R0.L (Z);
     d3c:	11 0c       	CC = R1 == 0x2;
     d3e:	08 1c       	IF CC JUMP 0xd4e <_LabelContainsSuffix+0x46> (BP);
     d40:	01 32       	P0 = R1;
     d42:	42 5a       	P1 = P2 + P0;
     d44:	49 99       	R1 = B[P1] (X);
     d46:	81 66       	R1 += -0x30;		/* (-48) */
     d48:	49 43       	R1 = R1.B (Z);
     d4a:	11 0a       	CC = R1 <= R2 (IU);
     d4c:	f6 1f       	IF CC JUMP 0xd38 <_LabelContainsSuffix+0x30> (BP);
     d4e:	c0 42       	R0 = R0.L (Z);
     d50:	00 32       	P0 = R0;
     d52:	41 61       	R1 = 0x28 (X);		/*		R1=0x28( 40) */
     d54:	82 5a       	P2 = P2 + P0;
     d56:	10 99       	R0 = B[P2] (Z);
     d58:	08 08       	CC = R0 == R1;
     d5a:	24 14       	IF !CC JUMP 0xda2 <_LabelContainsSuffix+0x9a> (BP);
     d5c:	90 e4 ff ff 	R0 = B[P2 + -0x1] (Z);
     d60:	02 61       	R2 = 0x20 (X);		/*		R2=0x20( 32) */
     d62:	10 08       	CC = R0 == R2;
     d64:	1d 20       	JUMP.S 0xd9e <_LabelContainsSuffix+0x96>;
     d66:	09 0e       	CC = R1 <= 0x1 (IU);
     d68:	1d 18       	IF CC JUMP 0xda2 <_LabelContainsSuffix+0x9a>;
     d6a:	01 32       	P0 = R1;
     d6c:	4a 60       	R2 = 0x9 (X);		/*		R2=0x9(  9) */
     d6e:	42 5a       	P1 = P2 + P0;
     d70:	49 99       	R1 = B[P1] (X);
     d72:	81 66       	R1 += -0x30;		/* (-48) */
     d74:	49 43       	R1 = R1.B (Z);
     d76:	11 0a       	CC = R1 <= R2 (IU);
     d78:	15 10       	IF !CC JUMP 0xda2 <_LabelContainsSuffix+0x9a>;
     d7a:	4a 60       	R2 = 0x9 (X);		/*		R2=0x9(  9) */
     d7c:	f8 67       	R0 += -0x1;		/* ( -1) */
     d7e:	c1 42       	R1 = R0.L (Z);
     d80:	11 0e       	CC = R1 <= 0x2 (IU);
     d82:	08 1c       	IF CC JUMP 0xd92 <_LabelContainsSuffix+0x8a> (BP);
     d84:	01 32       	P0 = R1;
     d86:	42 5a       	P1 = P2 + P0;
     d88:	49 99       	R1 = B[P1] (X);
     d8a:	81 66       	R1 += -0x30;		/* (-48) */
     d8c:	49 43       	R1 = R1.B (Z);
     d8e:	11 0a       	CC = R1 <= R2 (IU);
     d90:	f6 1f       	IF CC JUMP 0xd7c <_LabelContainsSuffix+0x74> (BP);
     d92:	c0 42       	R0 = R0.L (Z);
     d94:	00 32       	P0 = R0;
     d96:	69 61       	R1 = 0x2d (X);		/*		R1=0x2d( 45) */
     d98:	82 5a       	P2 = P2 + P0;
     d9a:	10 99       	R0 = B[P2] (Z);
     d9c:	08 08       	CC = R0 == R1;
     d9e:	00 02       	R0 = CC;
     da0:	02 20       	JUMP.S 0xda4 <_LabelContainsSuffix+0x9c>;
     da2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     da4:	10 00       	RTS;
	...

00000da8 <_RemoveLabelSuffix>:
_RemoveLabelSuffix():
     da8:	e5 05       	[--SP] = (R7:4, P5:5);
     daa:	10 32       	P2 = R0;
     dac:	01 0c       	CC = R1 == 0x0;
     dae:	0d 1c       	IF CC JUMP 0xdc8 <_RemoveLabelSuffix+0x20> (BP);
     db0:	50 99       	R0 = B[P2] (X);
     db2:	42 43       	R2 = R0.B (Z);
     db4:	02 0c       	CC = R2 == 0x0;
     db6:	09 1c       	IF CC JUMP 0xdc8 <_RemoveLabelSuffix+0x20> (BP);
     db8:	02 32       	P0 = R2;
     dba:	4b 61       	R3 = 0x29 (X);		/*		R3=0x29( 41) */
     dbc:	42 5a       	P1 = P2 + P0;
     dbe:	0a 99       	R2 = B[P1] (Z);
     dc0:	1a 08       	CC = R2 == R3;
     dc2:	03 14       	IF !CC JUMP 0xdc8 <_RemoveLabelSuffix+0x20> (BP);
     dc4:	f8 67       	R0 += -0x1;		/* ( -1) */
     dc6:	10 9b       	B[P2] = R0;
     dc8:	0f 60       	R7 = 0x1 (X);		/*		R7=0x1(  1) */
     dca:	01 68       	P1 = 0x0 (X);		/*		P1=0x0(  0) */
     dcc:	56 60       	R6 = 0xa (X);		/*		R6=0xa( 10) */
     dce:	4c 60       	R4 = 0x9 (X);		/*		R4=0x9(  9) */
     dd0:	09 20       	JUMP.S 0xde2 <_RemoveLabelSuffix+0x3a>;
     dd2:	52 43       	R2 = R2.B (Z);
     dd4:	82 66       	R2 += -0x30;		/* (-48) */
     dd6:	fa 40       	R2 *= R7;
     dd8:	02 32       	P0 = R2;
     dda:	f7 40       	R7 *= R6;
     ddc:	fb 67       	R3 += -0x1;		/* ( -1) */
     dde:	41 5a       	P1 = P1 + P0;
     de0:	13 9b       	B[P2] = R3;
     de2:	53 99       	R3 = B[P2] (X);
     de4:	58 43       	R0 = R3.B (Z);
     de6:	28 32       	P5 = R0;
     de8:	2a 5a       	P0 = P2 + P5;
     dea:	42 99       	R2 = B[P0] (X);
     dec:	2a 30       	R5 = R2;
     dee:	85 66       	R5 += -0x30;		/* (-48) */
     df0:	6d 43       	R5 = R5.B (Z);
     df2:	25 0a       	CC = R5 <= R4 (IU);
     df4:	ef 1f       	IF CC JUMP 0xdd2 <_RemoveLabelSuffix+0x2a> (BP);
     df6:	01 0c       	CC = R1 == 0x0;
     df8:	0e 1c       	IF CC JUMP 0xe14 <_RemoveLabelSuffix+0x6c> (BP);
     dfa:	08 0e       	CC = R0 <= 0x1 (IU);
     dfc:	14 18       	IF CC JUMP 0xe24 <_RemoveLabelSuffix+0x7c>;
     dfe:	52 43       	R2 = R2.B (Z);
     e00:	40 61       	R0 = 0x28 (X);		/*		R0=0x28( 40) */
     e02:	02 08       	CC = R2 == R0;
     e04:	10 14       	IF !CC JUMP 0xe24 <_RemoveLabelSuffix+0x7c> (BP);
     e06:	80 e4 ff ff 	R0 = B[P0 + -0x1] (Z);
     e0a:	01 61       	R1 = 0x20 (X);		/*		R1=0x20( 32) */
     e0c:	08 08       	CC = R0 == R1;
     e0e:	0b 14       	IF !CC JUMP 0xe24 <_RemoveLabelSuffix+0x7c> (BP);
     e10:	f3 67       	R3 += -0x2;		/* ( -2) */
     e12:	08 20       	JUMP.S 0xe22 <_RemoveLabelSuffix+0x7a>;
     e14:	00 0c       	CC = R0 == 0x0;
     e16:	07 18       	IF CC JUMP 0xe24 <_RemoveLabelSuffix+0x7c>;
     e18:	52 43       	R2 = R2.B (Z);
     e1a:	6c 61       	R4 = 0x2d (X);		/*		R4=0x2d( 45) */
     e1c:	22 08       	CC = R2 == R4;
     e1e:	03 14       	IF !CC JUMP 0xe24 <_RemoveLabelSuffix+0x7c> (BP);
     e20:	fb 67       	R3 += -0x1;		/* ( -1) */
     e22:	13 9b       	B[P2] = R3;
     e24:	41 30       	R0 = P1;
     e26:	a5 05       	(R7:4, P5:5) = [SP++];
     e28:	10 00       	RTS;
	...

00000e2c <_AppendLabelSuffix>:
_AppendLabelSuffix():
     e2c:	ec 05       	[--SP] = (R7:5, P5:4);
     e2e:	67 01       	[--SP] = RETS;
     e30:	a6 6f       	SP += -0xc;		/* (-12) */
     e32:	28 32       	P5 = R0;
     e34:	31 30       	R6 = R1;
     e36:	2a 30       	R5 = R2;
     e38:	02 0c       	CC = R2 == 0x0;
     e3a:	09 14       	IF !CC JUMP 0xe4c <_AppendLabelSuffix+0x20> (BP);
     e3c:	12 60       	R2 = 0x2 (X);		/*		R2=0x2(  2) */
     e3e:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
     e40:	51 60       	R1 = 0xa (X);		/*		R1=0xa( 10) */
     e42:	4a 68       	P2 = 0x9 (X);		/*		P2=0x9(  9) */
     e44:	14 20       	JUMP.S 0xe6c <_AppendLabelSuffix+0x40>;
     e46:	f8 67       	R0 += -0x1;		/* ( -1) */
     e48:	28 9b       	B[P5] = R0;
     e4a:	02 20       	JUMP.S 0xe4e <_AppendLabelSuffix+0x22>;
     e4c:	02 61       	R2 = 0x20 (X);		/*		R2=0x20( 32) */
     e4e:	68 99       	R0 = B[P5] (X);
     e50:	41 43       	R1 = R0.B (Z);
     e52:	11 32       	P2 = R1;
     e54:	95 5a       	P2 = P5 + P2;
     e56:	11 99       	R1 = B[P2] (Z);
     e58:	11 08       	CC = R1 == R2;
     e5a:	f6 1f       	IF CC JUMP 0xe46 <_AppendLabelSuffix+0x1a> (BP);
     e5c:	22 60       	R2 = 0x4 (X);		/*		R2=0x4(  4) */
     e5e:	f0 2f       	JUMP.S 0xe3e <_AppendLabelSuffix+0x12>;
     e60:	0a 64       	R2 += 0x1;		/* (  1) */
     e62:	fa 6f       	P2 += -0x1;		/* ( -1) */
     e64:	42 0c       	CC = P2 == 0x0;
     e66:	02 10       	IF !CC JUMP 0xe6a <_AppendLabelSuffix+0x3e>;
     e68:	07 20       	JUMP.S 0xe76 <_AppendLabelSuffix+0x4a>;
     e6a:	07 30       	R0 = R7;
     e6c:	38 30       	R7 = R0;
     e6e:	cf 40       	R7 *= R1;
     e70:	be 09       	CC = R6 < R7 (IU);
     e72:	f7 17       	IF !CC JUMP 0xe60 <_AppendLabelSuffix+0x34> (BP);
     e74:	38 30       	R7 = R0;
     e76:	fb 61       	R3 = 0x3f (X);		/*		R3=0x3f( 63) */
     e78:	45 30       	R0 = P5;
     e7a:	29 99       	R1 = B[P5] (Z);
     e7c:	08 64       	R0 += 0x1;		/* (  1) */
     e7e:	93 52       	R2 = R3 - R2;
     e80:	ff e3 00 ff 	CALL 0xc80 <_TruncateUTF8ToLength>;
     e84:	28 9b       	B[P5] = R0;
     e86:	05 0c       	CC = R5 == 0x0;
     e88:	08 64       	R0 += 0x1;		/* (  1) */
     e8a:	0f 1c       	IF CC JUMP 0xea8 <_AppendLabelSuffix+0x7c> (BP);
     e8c:	28 9b       	B[P5] = R0;
     e8e:	40 43       	R0 = R0.B (Z);
     e90:	08 32       	P1 = R0;
     e92:	00 61       	R0 = 0x20 (X);		/*		R0=0x20( 32) */
     e94:	8d 5a       	P2 = P5 + P1;
     e96:	10 9b       	B[P2] = R0;
     e98:	68 99       	R0 = B[P5] (X);
     e9a:	08 64       	R0 += 0x1;		/* (  1) */
     e9c:	28 9b       	B[P5] = R0;
     e9e:	40 43       	R0 = R0.B (Z);
     ea0:	08 32       	P1 = R0;
     ea2:	40 61       	R0 = 0x28 (X);		/*		R0=0x28( 40) */
     ea4:	8d 5a       	P2 = P5 + P1;
     ea6:	06 20       	JUMP.S 0xeb2 <_AppendLabelSuffix+0x86>;
     ea8:	28 9b       	B[P5] = R0;
     eaa:	40 43       	R0 = R0.B (Z);
     eac:	08 32       	P1 = R0;
     eae:	68 61       	R0 = 0x2d (X);		/*		R0=0x2d( 45) */
     eb0:	8d 5a       	P2 = P5 + P1;
     eb2:	10 9b       	B[P2] = R0;
     eb4:	1b 20       	JUMP.S 0xeea <_AppendLabelSuffix+0xbe>;
     eb6:	0f 30       	R1 = R7;
     eb8:	68 99       	R0 = B[P5] (X);
     eba:	08 64       	R0 += 0x1;		/* (  1) */
     ebc:	28 9b       	B[P5] = R0;
     ebe:	40 43       	R0 = R0.B (Z);
     ec0:	20 32       	P4 = R0;
     ec2:	06 30       	R0 = R6;
     ec4:	ff e3 9e f8 	CALL 0x0 <_putVal32>;
     ec8:	80 65       	R0 += 0x30;		/* ( 48) */
     eca:	0f 30       	R1 = R7;
     ecc:	25 5b       	P4 = P5 + P4;
     ece:	20 9b       	B[P4] = R0;
     ed0:	06 30       	R0 = R6;
     ed2:	ff e3 97 f8 	CALL 0x0 <_putVal32>;
     ed6:	30 30       	R6 = R0;
     ed8:	41 e1 cc cc 	R1.H = 0xcccc;		/* (-13108)	R1=0xcccc000a(-859045878) */
     edc:	07 30       	R0 = R7;
     ede:	01 e1 cd cc 	R1.L = 0xcccd;		/* (-13107)	R1=0xcccccccd(-858993459) */
     ee2:	ff e3 8f f8 	CALL 0x0 <_putVal32>;
     ee6:	82 c6 e8 8f 	R7 = R0 >> 0x3;
     eea:	07 0c       	CC = R7 == 0x0;
     eec:	e5 17       	IF !CC JUMP 0xeb6 <_AppendLabelSuffix+0x8a> (BP);
     eee:	05 0c       	CC = R5 == 0x0;
     ef0:	09 1c       	IF CC JUMP 0xf02 <_AppendLabelSuffix+0xd6> (BP);
     ef2:	68 99       	R0 = B[P5] (X);
     ef4:	08 64       	R0 += 0x1;		/* (  1) */
     ef6:	28 9b       	B[P5] = R0;
     ef8:	40 43       	R0 = R0.B (Z);
     efa:	10 32       	P2 = R0;
     efc:	48 61       	R0 = 0x29 (X);		/*		R0=0x29( 41) */
     efe:	55 5b       	P5 = P5 + P2;
     f00:	28 9b       	B[P5] = R0;
     f02:	66 6c       	SP += 0xc;		/* ( 12) */
     f04:	27 01       	RETS = [SP++];
     f06:	ac 05       	(R7:5, P5:4) = [SP++];
     f08:	10 00       	RTS;
	...

00000f0c <_IncrementLabelSuffix>:
_IncrementLabelSuffix():
     f0c:	68 05       	[--SP] = (R7:5);
     f0e:	67 01       	[--SP] = RETS;
     f10:	a6 6f       	SP += -0xc;		/* (-12) */
     f12:	38 30       	R7 = R0;
     f14:	31 30       	R6 = R1;
     f16:	ff e3 f9 fe 	CALL 0xd08 <_LabelContainsSuffix>;
     f1a:	00 0c       	CC = R0 == 0x0;
     f1c:	14 1c       	IF CC JUMP 0xf44 <_IncrementLabelSuffix+0x38> (BP);
     f1e:	07 30       	R0 = R7;
     f20:	0e 30       	R1 = R6;
     f22:	ff e3 43 ff 	CALL 0xda8 <_RemoveLabelSuffix>;
     f26:	00 0c       	CC = R0 == 0x0;
     f28:	0e 18       	IF CC JUMP 0xf44 <_IncrementLabelSuffix+0x38>;
     f2a:	49 60       	R1 = 0x9 (X);		/*		R1=0x9(  9) */
     f2c:	28 30       	R5 = R0;
     f2e:	08 0a       	CC = R0 <= R1 (IU);
     f30:	0d 64       	R5 += 0x1;		/* (  1) */
     f32:	03 10       	IF !CC JUMP 0xf38 <_IncrementLabelSuffix+0x2c>;
     f34:	0d 30       	R1 = R5;
     f36:	08 20       	JUMP.S 0xf46 <_IncrementLabelSuffix+0x3a>;
     f38:	20 e1 63 00 	R0 = 0x63 (X);		/*		R0=0x63( 99) */
     f3c:	ff e3 c8 f8 	CALL 0xcc <_mDNSRandom>;
     f40:	45 50       	R1 = R5 + R0;
     f42:	02 20       	JUMP.S 0xf46 <_IncrementLabelSuffix+0x3a>;
     f44:	11 60       	R1 = 0x2 (X);		/*		R1=0x2(  2) */
     f46:	66 6c       	SP += 0xc;		/* ( 12) */
     f48:	27 01       	RETS = [SP++];
     f4a:	07 30       	R0 = R7;
     f4c:	16 30       	R2 = R6;
     f4e:	28 05       	(R7:5) = [SP++];
     f50:	ff e2 6e ff 	JUMP.L 0xe2c <_AppendLabelSuffix>;

00000f54 <_mDNS_SetupResourceRecord>:
_mDNS_SetupResourceRecord():
     f54:	e3 05       	[--SP] = (R7:4, P5:3);
     f56:	00 e8 04 00 	LINK 0x10;		/* (16) */
     f5a:	28 32       	P5 = R0;
     f5c:	2a 30       	R5 = R2;
     f5e:	b0 e5 48 00 	R0 = B[SP + 0x48] (X);
     f62:	21 32       	P4 = R1;
     f64:	74 e5 20 00 	R4 = W[SP + 0x40] (X);
     f68:	37 e4 11 00 	R7 = [SP + 0x44];
     f6c:	18 32       	P3 = R0;
     f6e:	36 e4 13 00 	R6 = [SP + 0x4c];
     f72:	37 e5 14 00 	FP = [SP + 0x50];
     f76:	32 e4 15 00 	R2 = [SP + 0x54];
     f7a:	35 0c       	CC = R5 == -0x2;
     f7c:	0c 14       	IF !CC JUMP 0xf94 <_mDNS_SetupResourceRecord+0x40> (BP);
     f7e:	16 0c       	CC = R6 == 0x2;
     f80:	2b 1c       	IF CC JUMP 0xfd6 <_mDNS_SetupResourceRecord+0x82> (BP);
     f82:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2(  2) */
     f86:	36 e6 10 00 	[SP + 0x40] = R6;
     f8a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     f8c:	01 e1 f0 02 	R1.L = 0x2f0;		/* (752)	R1=0x2f0(752) */
     f90:	f2 63       	R2 = -0x2 (X);		/*		R2=0xfffffffe( -2) */
     f92:	1c 20       	JUMP.S 0xfca <_mDNS_SetupResourceRecord+0x76>;
     f94:	25 0c       	CC = R5 == -0x4;
     f96:	0c 14       	IF !CC JUMP 0xfae <_mDNS_SetupResourceRecord+0x5a> (BP);
     f98:	1e 0c       	CC = R6 == 0x3;
     f9a:	1e 1c       	IF CC JUMP 0xfd6 <_mDNS_SetupResourceRecord+0x82> (BP);
     f9c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2f0(752) */
     fa0:	36 e6 10 00 	[SP + 0x40] = R6;
     fa4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     fa6:	01 e1 54 03 	R1.L = 0x354;		/* (852)	R1=0x354(852) */
     faa:	e2 63       	R2 = -0x4 (X);		/*		R2=0xfffffffc( -4) */
     fac:	0f 20       	JUMP.S 0xfca <_mDNS_SetupResourceRecord+0x76>;
     fae:	05 0c       	CC = R5 == 0x0;
     fb0:	13 14       	IF !CC JUMP 0xfd6 <_mDNS_SetupResourceRecord+0x82> (BP);
     fb2:	06 30       	R0 = R6;
     fb4:	f0 67       	R0 += -0x2;		/* ( -2) */
     fb6:	08 0e       	CC = R0 <= 0x1 (IU);
     fb8:	0f 14       	IF !CC JUMP 0xfd6 <_mDNS_SetupResourceRecord+0x82> (BP);
     fba:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x354(852) */
     fbe:	36 e6 10 00 	[SP + 0x40] = R6;
     fc2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     fc4:	01 e1 b0 03 	R1.L = 0x3b0;		/* (944)	R1=0x3b0(944) */
     fc8:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
     fca:	86 6c       	SP += 0x10;		/* ( 16) */
     fcc:	77 90       	FP = [SP++];
     fce:	27 01       	RETS = [SP++];
     fd0:	a3 05       	(R7:4, P5:3) = [SP++];
     fd2:	ff e2 17 f8 	JUMP.L 0x0 <_putVal32>;
     fd6:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x9 */
     fda:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_putVal32> */
     fde:	11 91       	R1 = [P2];
     fe0:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
     fe2:	f2 b0       	[SP + 0xc] = R2;
     fe4:	40 e1 ff 7f 	R0.H = 0x7fff;		/* (32767)	R0=0x7fffffff(2147483647) */
     fe8:	ff e3 0c f8 	CALL 0x0 <_putVal32>;
     fec:	07 0a       	CC = R7 <= R0 (IU);
     fee:	f2 a0       	R2 = [SP + 0xc];
     ff0:	11 14       	IF !CC JUMP 0x1012 <_mDNS_SetupResourceRecord+0xbe> (BP);
     ff2:	07 0c       	CC = R7 == 0x0;
     ff4:	13 14       	IF !CC JUMP 0x101a <_mDNS_SetupResourceRecord+0xc6> (BP);
     ff6:	e0 42       	R0 = R4.L (Z);
     ff8:	08 0c       	CC = R0 == 0x1;
     ffa:	0e 18       	IF CC JUMP 0x1016 <_mDNS_SetupResourceRecord+0xc2>;
     ffc:	e1 60       	R1 = 0x1c (X);		/*		R1=0x1c( 28) */
     ffe:	08 08       	CC = R0 == R1;
    1000:	0b 18       	IF CC JUMP 0x1016 <_mDNS_SetupResourceRecord+0xc2>;
    1002:	09 61       	R1 = 0x21 (X);		/*		R1=0x21( 33) */
    1004:	08 08       	CC = R0 == R1;
    1006:	20 e1 78 00 	R0 = 0x78 (X);		/*		R0=0x78(120) */
    100a:	27 e1 94 11 	R7 = 0x1194 (X);		/*		R7=0x1194(4500) */
    100e:	38 07       	IF CC R7 = R0;
    1010:	05 20       	JUMP.S 0x101a <_mDNS_SetupResourceRecord+0xc6>;
    1012:	38 30       	R7 = R0;
    1014:	03 20       	JUMP.S 0x101a <_mDNS_SetupResourceRecord+0xc6>;
    1016:	27 e1 78 00 	R7 = 0x78 (X);		/*		R7=0x78(120) */
    101a:	43 30       	R0 = P3;
    101c:	a8 e6 04 00 	B[P5 + 0x4] = R0;
    1020:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    1022:	2a e1 68 01 	P2 = 0x168 (X);		/*		P2=0x168(360) */
    1026:	28 b5       	W[P5 + 0x8] = R0;
    1028:	95 5a       	P2 = P5 + P2;
    102a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    102c:	ed b1       	[P5 + 0x1c] = R5;
    102e:	2a be       	[P5 + 0x20] = P2;
    1030:	ec b4       	W[P5 + 0x6] = R4;
    1032:	ef b0       	[P5 + 0xc] = R7;
    1034:	a8 b2       	[P5 + 0x28] = R0;
    1036:	44 0c       	CC = P4 == 0x0;
    1038:	03 18       	IF CC JUMP 0x103e <_mDNS_SetupResourceRecord+0xea>;
    103a:	6c be       	[P5 + 0x24] = P4;
    103c:	09 20       	JUMP.S 0x104e <_mDNS_SetupResourceRecord+0xfa>;
    103e:	2a e1 68 02 	P2 = 0x268 (X);		/*		P2=0x268(616) */
    1042:	95 5a       	P2 = P5 + P2;
    1044:	20 e1 08 01 	R0 = 0x108 (X);		/*		R0=0x108(264) */
    1048:	6a be       	[P5 + 0x24] = P2;
    104a:	68 e6 34 01 	W[P5 + 0x268] = R0;
    104e:	2a e1 48 00 	P2 = 0x48 (X);		/*		P2=0x48( 72) */
    1052:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    1054:	05 60       	R5 = 0x0 (X);		/*		R5=0x0(  0) */
    1056:	95 5a       	P2 = P5 + P2;
    1058:	2a e6 10 00 	[P5 + 0x40] = R2;
    105c:	ef bf       	[P5 + 0x3c] = FP;
    105e:	ef b2       	[P5 + 0x2c] = R7;
    1060:	2f b3       	[P5 + 0x30] = R7;
    1062:	6f b3       	[P5 + 0x34] = R7;
    1064:	af b3       	[P5 + 0x38] = R7;
    1066:	ad e6 44 00 	B[P5 + 0x44] = R5;
    106a:	ad e6 45 00 	B[P5 + 0x45] = R5;
    106e:	ad e6 46 00 	B[P5 + 0x46] = R5;
    1072:	42 30       	R0 = P2;
    1074:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    1076:	e2 60       	R2 = 0x1c (X);		/*		R2=0x1c( 28) */
    1078:	ff e3 c4 f7 	CALL 0x0 <_putVal32>;
    107c:	2a e1 64 00 	P2 = 0x64 (X);		/*		P2=0x64(100) */
    1080:	95 5a       	P2 = P5 + P2;
    1082:	42 30       	R0 = P2;
    1084:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    1086:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
    1088:	ff e3 bc f7 	CALL 0x0 <_putVal32>;
    108c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    108e:	29 a2       	R1 = [P5 + 0x20];
    1090:	2a e1 04 01 	P2 = 0x104 (X);		/*		P2=0x104(260) */
    1094:	68 e6 7a 00 	W[P5 + 0xf4] = R0;
    1098:	29 e6 3e 00 	[P5 + 0xf8] = R1;
    109c:	68 e6 aa 00 	W[P5 + 0x154] = R0;
    10a0:	68 e6 ab 00 	W[P5 + 0x156] = R0;
    10a4:	68 e6 ac 00 	W[P5 + 0x158] = R0;
    10a8:	95 5a       	P2 = P5 + P2;
    10aa:	2f e6 1e 00 	[P5 + 0x78] = R7;
    10ae:	2f e6 1f 00 	[P5 + 0x7c] = R7;
    10b2:	2e e6 20 00 	[P5 + 0x80] = R6;
    10b6:	2f e6 39 00 	[P5 + 0xe4] = R7;
    10ba:	2f e6 3a 00 	[P5 + 0xe8] = R7;
    10be:	2f e6 3b 00 	[P5 + 0xec] = R7;
    10c2:	2f e6 3c 00 	[P5 + 0xf0] = R7;
    10c6:	2f e6 3f 00 	[P5 + 0xfc] = R7;
    10ca:	2f e6 40 00 	[P5 + 0x100] = R7;
    10ce:	2f e6 57 00 	[P5 + 0x15c] = R7;
    10d2:	2f e6 58 00 	[P5 + 0x160] = R7;
    10d6:	2f e6 59 00 	[P5 + 0x164] = R7;
    10da:	42 30       	R0 = P2;
    10dc:	e1 61       	R1 = 0x3c (X);		/*		R1=0x3c( 60) */
    10de:	ff e3 91 f7 	CALL 0x0 <_putVal32>;
    10e2:	86 6c       	SP += 0x10;		/* ( 16) */
    10e4:	77 90       	FP = [SP++];
    10e6:	2f e6 50 00 	[P5 + 0x140] = R7;
    10ea:	2f e6 51 00 	[P5 + 0x144] = R7;
    10ee:	ad e6 68 01 	B[P5 + 0x168] = R5;
    10f2:	27 01       	RETS = [SP++];
    10f4:	a3 05       	(R7:4, P5:3) = [SP++];
    10f6:	10 00       	RTS;

000010f8 <_mDNS_SetupQuestion>:
_mDNS_SetupQuestion():
    10f8:	f5 05       	[--SP] = (R7:6, P5:5);
    10fa:	28 32       	P5 = R0;
    10fc:	67 01       	[--SP] = RETS;
    10fe:	2a e1 1c 01 	P2 = 0x11c (X);		/*		P2=0x11c(284) */
    1102:	a6 6f       	SP += -0xc;		/* (-12) */
    1104:	3a 30       	R7 = R2;
    1106:	95 5a       	P2 = P5 + P2;
    1108:	29 e6 46 00 	[P5 + 0x118] = R1;
    110c:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
    110e:	42 30       	R0 = P2;
    1110:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    1112:	76 e5 14 00 	R6 = W[SP + 0x28] (X);
    1116:	ff e3 75 f7 	CALL 0x0 <_putVal32>;
    111a:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    111e:	4f 50       	R1 = R7 + R1;
    1120:	07 30       	R0 = R7;
    1122:	ff e3 0b f9 	CALL 0x338 <_DomainNameLengthLimit>;
    1126:	c2 42       	R2 = R0.L (Z);
    1128:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    112c:	02 0a       	CC = R2 <= R0 (IU);
    112e:	09 14       	IF !CC JUMP 0x1140 <_mDNS_SetupQuestion+0x48> (BP);
    1130:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    1134:	95 5a       	P2 = P5 + P2;
    1136:	42 30       	R0 = P2;
    1138:	0f 30       	R1 = R7;
    113a:	ff e3 63 f7 	CALL 0x0 <_putVal32>;
    113e:	04 20       	JUMP.S 0x1146 <_mDNS_SetupQuestion+0x4e>;
    1140:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1142:	a8 e6 34 01 	B[P5 + 0x134] = R0;
    1146:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    1148:	68 e6 1b 01 	W[P5 + 0x236] = R0;
    114c:	f0 42       	R0 = R6.L (Z);
    114e:	61 60       	R1 = 0xc (X);		/*		R1=0xc( 12) */
    1150:	08 08       	CC = R0 == R1;
    1152:	00 02       	R0 = CC;
    1154:	28 e6 8e 00 	[P5 + 0x238] = R0;
    1158:	6e e6 1a 01 	W[P5 + 0x234] = R6;
    115c:	60 60       	R0 = 0xc (X);		/*		R0=0xc( 12) */
    115e:	86 59       	R6 = R6 ^ R0;
    1160:	06 c4 30 8c 	R6 = ABS R6 (V);
    1164:	b6 43       	R6 = -R6;
    1166:	7e 49       	CC = BITTST (R6, 0xf);		/* bit 15 */
    1168:	00 02       	R0 = CC;
    116a:	28 e6 8f 00 	[P5 + 0x23c] = R0;
    116e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1170:	28 e6 90 00 	[P5 + 0x240] = R0;
    1174:	28 e6 91 00 	[P5 + 0x244] = R0;
    1178:	28 e6 92 00 	[P5 + 0x248] = R0;
    117c:	28 e6 93 00 	[P5 + 0x24c] = R0;
    1180:	28 e6 96 00 	[P5 + 0x258] = R0;
    1184:	f0 a2       	R0 = [SP + 0x2c];
    1186:	28 e6 97 00 	[P5 + 0x25c] = R0;
    118a:	30 a3       	R0 = [SP + 0x30];
    118c:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    118e:	66 6c       	SP += 0xc;		/* ( 12) */
    1190:	27 01       	RETS = [SP++];
    1192:	a9 e6 52 02 	B[P5 + 0x252] = R1;
    1196:	a9 e6 53 02 	B[P5 + 0x253] = R1;
    119a:	a9 e6 50 02 	B[P5 + 0x250] = R1;
    119e:	a9 e6 51 02 	B[P5 + 0x251] = R1;
    11a2:	28 e6 98 00 	[P5 + 0x260] = R0;
    11a6:	b5 05       	(R7:6, P5:5) = [SP++];
    11a8:	10 00       	RTS;
	...

000011ac <_SameRDataBody>:
_SameRDataBody():
    11ac:	10 32       	P2 = R0;
    11ae:	c3 04       	[--SP] = (P5:3);
    11b0:	29 32       	P5 = R1;
    11b2:	67 01       	[--SP] = RETS;
    11b4:	90 60       	R0 = 0x12 (X);		/*		R0=0x12( 18) */
    11b6:	11 ae       	P1 = [P2 + 0x20];
    11b8:	51 a4       	R1 = W[P2 + 0x2] (Z);
    11ba:	a6 6f       	SP += -0xc;		/* (-12) */
    11bc:	1a 32       	P3 = R2;
    11be:	61 32       	P4 = P1;
    11c0:	24 6c       	P4 += 0x4;		/* (  4) */
    11c2:	01 08       	CC = R1 == R0;
    11c4:	53 18       	IF CC JUMP 0x126a <_SameRDataBody+0xbe>;
    11c6:	01 0a       	CC = R1 <= R0 (IU);
    11c8:	13 14       	IF !CC JUMP 0x11ee <_SameRDataBody+0x42> (BP);
    11ca:	32 60       	R2 = 0x6 (X);		/*		R2=0x6(  6) */
    11cc:	11 08       	CC = R1 == R2;
    11ce:	2f 18       	IF CC JUMP 0x122c <_SameRDataBody+0x80>;
    11d0:	31 0e       	CC = R1 <= 0x6 (IU);
    11d2:	05 14       	IF !CC JUMP 0x11dc <_SameRDataBody+0x30> (BP);
    11d4:	11 0c       	CC = R1 == 0x2;
    11d6:	24 18       	IF CC JUMP 0x121e <_SameRDataBody+0x72>;
    11d8:	28 60       	R0 = 0x5 (X);		/*		R0=0x5(  5) */
    11da:	20 20       	JUMP.S 0x121a <_SameRDataBody+0x6e>;
    11dc:	7a 60       	R2 = 0xf (X);		/*		R2=0xf( 15) */
    11de:	11 08       	CC = R1 == R2;
    11e0:	45 18       	IF CC JUMP 0x126a <_SameRDataBody+0xbe>;
    11e2:	88 60       	R0 = 0x11 (X);		/*		R0=0x11( 17) */
    11e4:	01 08       	CC = R1 == R0;
    11e6:	4b 18       	IF CC JUMP 0x127c <_SameRDataBody+0xd0>;
    11e8:	62 60       	R2 = 0xc (X);		/*		R2=0xc( 12) */
    11ea:	11 08       	CC = R1 == R2;
    11ec:	18 20       	JUMP.S 0x121c <_SameRDataBody+0x70>;
    11ee:	20 61       	R0 = 0x24 (X);		/*		R0=0x24( 36) */
    11f0:	01 08       	CC = R1 == R0;
    11f2:	3c 18       	IF CC JUMP 0x126a <_SameRDataBody+0xbe>;
    11f4:	01 0a       	CC = R1 <= R0 (IU);
    11f6:	0b 14       	IF !CC JUMP 0x120c <_SameRDataBody+0x60> (BP);
    11f8:	d2 60       	R2 = 0x1a (X);		/*		R2=0x1a( 26) */
    11fa:	11 08       	CC = R1 == R2;
    11fc:	48 18       	IF CC JUMP 0x128c <_SameRDataBody+0xe0>;
    11fe:	08 61       	R0 = 0x21 (X);		/*		R0=0x21( 33) */
    1200:	01 08       	CC = R1 == R0;
    1202:	57 18       	IF CC JUMP 0x12b0 <_SameRDataBody+0x104>;
    1204:	aa 60       	R2 = 0x15 (X);		/*		R2=0x15( 21) */
    1206:	11 08       	CC = R1 == R2;
    1208:	69 14       	IF !CC JUMP 0x12da <_SameRDataBody+0x12e> (BP);
    120a:	30 20       	JUMP.S 0x126a <_SameRDataBody+0xbe>;
    120c:	48 61       	R0 = 0x29 (X);		/*		R0=0x29( 41) */
    120e:	01 08       	CC = R1 == R0;
    1210:	6d 18       	IF CC JUMP 0x12ea <_SameRDataBody+0x13e>;
    1212:	7a 61       	R2 = 0x2f (X);		/*		R2=0x2f( 47) */
    1214:	11 08       	CC = R1 == R2;
    1216:	5e 18       	IF CC JUMP 0x12d2 <_SameRDataBody+0x126>;
    1218:	38 61       	R0 = 0x27 (X);		/*		R0=0x27( 39) */
    121a:	01 08       	CC = R1 == R0;
    121c:	5f 14       	IF !CC JUMP 0x12da <_SameRDataBody+0x12e> (BP);
    121e:	66 6c       	SP += 0xc;		/* ( 12) */
    1220:	27 01       	RETS = [SP++];
    1222:	44 30       	R0 = P4;
    1224:	4d 30       	R1 = P5;
    1226:	83 04       	(P5:3) = [SP++];
    1228:	ff e2 fc f7 	JUMP.L 0x220 <_SameDomainName>;
    122c:	21 e4 80 00 	R1 = [P4 + 0x200];
    1230:	28 e4 80 00 	R0 = [P5 + 0x200];
    1234:	01 08       	CC = R1 == R0;
    1236:	5a 14       	IF !CC JUMP 0x12ea <_SameRDataBody+0x13e> (BP);
    1238:	21 e4 81 00 	R1 = [P4 + 0x204];
    123c:	28 e4 81 00 	R0 = [P5 + 0x204];
    1240:	01 08       	CC = R1 == R0;
    1242:	54 14       	IF !CC JUMP 0x12ea <_SameRDataBody+0x13e> (BP);
    1244:	21 e4 82 00 	R1 = [P4 + 0x208];
    1248:	28 e4 82 00 	R0 = [P5 + 0x208];
    124c:	01 08       	CC = R1 == R0;
    124e:	4e 14       	IF !CC JUMP 0x12ea <_SameRDataBody+0x13e> (BP);
    1250:	21 e4 83 00 	R1 = [P4 + 0x20c];
    1254:	28 e4 83 00 	R0 = [P5 + 0x20c];
    1258:	01 08       	CC = R1 == R0;
    125a:	48 14       	IF !CC JUMP 0x12ea <_SameRDataBody+0x13e> (BP);
    125c:	21 e4 84 00 	R1 = [P4 + 0x210];
    1260:	28 e4 84 00 	R0 = [P5 + 0x210];
    1264:	01 08       	CC = R1 == R0;
    1266:	42 14       	IF !CC JUMP 0x12ea <_SameRDataBody+0x13e> (BP);
    1268:	0a 20       	JUMP.S 0x127c <_SameRDataBody+0xd0>;
    126a:	89 a4       	R1 = W[P1 + 0x4] (Z);
    126c:	28 95       	R0 = W[P5] (Z);
    126e:	01 08       	CC = R1 == R0;
    1270:	3d 14       	IF !CC JUMP 0x12ea <_SameRDataBody+0x13e> (BP);
    1272:	44 30       	R0 = P4;
    1274:	4d 30       	R1 = P5;
    1276:	10 64       	R0 += 0x2;		/* (  2) */
    1278:	11 64       	R1 += 0x2;		/* (  2) */
    127a:	27 20       	JUMP.S 0x12c8 <_SameRDataBody+0x11c>;
    127c:	44 30       	R0 = P4;
    127e:	4d 30       	R1 = P5;
    1280:	63 00       	CALL (P3);
    1282:	00 0c       	CC = R0 == 0x0;
    1284:	33 1c       	IF CC JUMP 0x12ea <_SameRDataBody+0x13e> (BP);
    1286:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    128a:	0e 20       	JUMP.S 0x12a6 <_SameRDataBody+0xfa>;
    128c:	89 a4       	R1 = W[P1 + 0x4] (Z);
    128e:	28 95       	R0 = W[P5] (Z);
    1290:	01 08       	CC = R1 == R0;
    1292:	2c 14       	IF !CC JUMP 0x12ea <_SameRDataBody+0x13e> (BP);
    1294:	41 30       	R0 = P1;
    1296:	4d 30       	R1 = P5;
    1298:	30 64       	R0 += 0x6;		/* (  6) */
    129a:	11 64       	R1 += 0x2;		/* (  2) */
    129c:	63 00       	CALL (P3);
    129e:	00 0c       	CC = R0 == 0x0;
    12a0:	25 1c       	IF CC JUMP 0x12ea <_SameRDataBody+0x13e> (BP);
    12a2:	21 e1 02 01 	R1 = 0x102 (X);		/*		R1=0x102(258) */
    12a6:	54 30       	R2 = P4;
    12a8:	0a 50       	R0 = R2 + R1;
    12aa:	55 30       	R2 = P5;
    12ac:	4a 50       	R1 = R2 + R1;
    12ae:	0d 20       	JUMP.S 0x12c8 <_SameRDataBody+0x11c>;
    12b0:	49 a0       	R1 = [P1 + 0x4];
    12b2:	28 91       	R0 = [P5];
    12b4:	01 08       	CC = R1 == R0;
    12b6:	1a 14       	IF !CC JUMP 0x12ea <_SameRDataBody+0x13e> (BP);
    12b8:	a1 a4       	R1 = W[P4 + 0x4] (Z);
    12ba:	a8 a4       	R0 = W[P5 + 0x4] (Z);
    12bc:	01 08       	CC = R1 == R0;
    12be:	16 14       	IF !CC JUMP 0x12ea <_SameRDataBody+0x13e> (BP);
    12c0:	41 30       	R0 = P1;
    12c2:	4d 30       	R1 = P5;
    12c4:	50 64       	R0 += 0xa;		/* ( 10) */
    12c6:	31 64       	R1 += 0x6;		/* (  6) */
    12c8:	63 00       	CALL (P3);
    12ca:	00 0c       	CC = R0 == 0x0;
    12cc:	00 02       	R0 = CC;
    12ce:	00 4b       	BITTGL (R0, 0x0);		/* bit  0 */
    12d0:	0e 20       	JUMP.S 0x12ec <_SameRDataBody+0x140>;
    12d2:	44 30       	R0 = P4;
    12d4:	4d 30       	R1 = P5;
    12d6:	02 61       	R2 = 0x20 (X);		/*		R2=0x20( 32) */
    12d8:	04 20       	JUMP.S 0x12e0 <_SameRDataBody+0x134>;
    12da:	44 30       	R0 = P4;
    12dc:	92 a5       	R2 = W[P2 + 0xc] (Z);
    12de:	4d 30       	R1 = P5;
    12e0:	66 6c       	SP += 0xc;		/* ( 12) */
    12e2:	27 01       	RETS = [SP++];
    12e4:	83 04       	(P5:3) = [SP++];
    12e6:	ff e2 8d f6 	JUMP.L 0x0 <_putVal32>;
    12ea:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    12ec:	66 6c       	SP += 0xc;		/* ( 12) */
    12ee:	27 01       	RETS = [SP++];
    12f0:	83 04       	(P5:3) = [SP++];
    12f2:	10 00       	RTS;

000012f4 <_SameNameRecordAnswersQuestion>:
_SameNameRecordAnswersQuestion():
    12f4:	10 32       	P2 = R0;
    12f6:	c5 04       	[--SP] = (P5:5);
    12f8:	67 01       	[--SP] = RETS;
    12fa:	86 6f       	SP += -0x10;		/* (-16) */
    12fc:	09 32       	P1 = R1;
    12fe:	92 a1       	R2 = [P2 + 0x18];
    1300:	32 0c       	CC = R2 == -0x2;
    1302:	03 18       	IF CC JUMP 0x1308 <_SameNameRecordAnswersQuestion+0x14>;
    1304:	22 0c       	CC = R2 == -0x4;
    1306:	0c 14       	IF !CC JUMP 0x131e <_SameNameRecordAnswersQuestion+0x2a> (BP);
    1308:	08 e4 46 00 	R0 = [P1 + 0x118];
    130c:	f0 b0       	[SP + 0xc] = R0;
    130e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x102(258) */
    1312:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1314:	01 e1 14 04 	R1.L = 0x414;		/* (1044)	R1=0x414(1044) */
    1318:	ff e3 74 f6 	CALL 0x0 <_putVal32>;
    131c:	43 20       	JUMP.S 0x13a2 <_SameNameRecordAnswersQuestion+0xae>;
    131e:	02 0c       	CC = R2 == 0x0;
    1320:	0a 1c       	IF CC JUMP 0x1334 <_SameNameRecordAnswersQuestion+0x40> (BP);
    1322:	08 e4 46 00 	R0 = [P1 + 0x118];
    1326:	00 0c       	CC = R0 == 0x0;
    1328:	0c 18       	IF CC JUMP 0x1340 <_SameNameRecordAnswersQuestion+0x4c>;
    132a:	30 0c       	CC = R0 == -0x2;
    132c:	0a 18       	IF CC JUMP 0x1340 <_SameNameRecordAnswersQuestion+0x4c>;
    132e:	02 08       	CC = R2 == R0;
    1330:	39 14       	IF !CC JUMP 0x13a2 <_SameNameRecordAnswersQuestion+0xae> (BP);
    1332:	07 20       	JUMP.S 0x1340 <_SameNameRecordAnswersQuestion+0x4c>;
    1334:	00 00       	NOP;
    1336:	51 a2       	R1 = [P2 + 0x24];
    1338:	08 e4 32 00 	R0 = [P1 + 0xc8];
    133c:	01 08       	CC = R1 == R0;
    133e:	04 20       	JUMP.S 0x1346 <_SameNameRecordAnswersQuestion+0x52>;
    1340:	48 e4 99 00 	R0 = W[P1 + 0x132] (Z);
    1344:	00 0c       	CC = R0 == 0x0;
    1346:	2e 14       	IF !CC JUMP 0x13a2 <_SameNameRecordAnswersQuestion+0xae> (BP);
    1348:	28 60       	R0 = 0x5 (X);		/*		R0=0x5(  5) */
    134a:	51 a4       	R1 = W[P2 + 0x2] (Z);
    134c:	01 08       	CC = R1 == R0;
    134e:	1f 1c       	IF CC JUMP 0x138c <_SameNameRecordAnswersQuestion+0x98> (BP);
    1350:	48 e4 1a 01 	R0 = W[P1 + 0x234] (Z);
    1354:	01 08       	CC = R1 == R0;
    1356:	1b 18       	IF CC JUMP 0x138c <_SameNameRecordAnswersQuestion+0x98>;
    1358:	22 e1 ff 00 	R2 = 0xff (X);		/*		R2=0xff(255) */
    135c:	10 08       	CC = R0 == R2;
    135e:	17 18       	IF CC JUMP 0x138c <_SameNameRecordAnswersQuestion+0x98>;
    1360:	7a 61       	R2 = 0x2f (X);		/*		R2=0x2f( 47) */
    1362:	11 08       	CC = R1 == R2;
    1364:	1f 14       	IF !CC JUMP 0x13a2 <_SameNameRecordAnswersQuestion+0xae> (BP);
    1366:	21 e1 fe 00 	R1 = 0xfe (X);		/*		R1=0xfe(254) */
    136a:	08 0a       	CC = R0 <= R1 (IU);
    136c:	1b 10       	IF !CC JUMP 0x13a2 <_SameNameRecordAnswersQuestion+0xae>;
    136e:	82 c6 e8 83 	R1 = R0 >> 0x3;
    1372:	29 32       	P5 = R1;
    1374:	39 60       	R1 = 0x7 (X);		/*		R1=0x7(  7) */
    1376:	10 ae       	P0 = [P2 + 0x20];
    1378:	08 54       	R0 = R0 & R1;
    137a:	21 e1 80 00 	R1 = 0x80 (X);		/*		R1=0x80(128) */
    137e:	01 40       	R1 >>>= R0;
    1380:	28 5a       	P0 = P0 + P5;
    1382:	82 e4 04 00 	R2 = B[P0 + 0x4] (Z);
    1386:	4a 54       	R1 = R2 & R1;
    1388:	01 0c       	CC = R1 == 0x0;
    138a:	0c 14       	IF !CC JUMP 0x13a2 <_SameNameRecordAnswersQuestion+0xae> (BP);
    138c:	00 00       	NOP;
    138e:	91 a4       	R1 = W[P2 + 0x4] (Z);
    1390:	48 e4 1b 01 	R0 = W[P1 + 0x236] (Z);
    1394:	01 08       	CC = R1 == R0;
    1396:	08 18       	IF CC JUMP 0x13a6 <_SameNameRecordAnswersQuestion+0xb2>;
    1398:	21 e1 ff 00 	R1 = 0xff (X);		/*		R1=0xff(255) */
    139c:	08 08       	CC = R0 == R1;
    139e:	00 02       	R0 = CC;
    13a0:	04 20       	JUMP.S 0x13a8 <_SameNameRecordAnswersQuestion+0xb4>;
    13a2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    13a4:	02 20       	JUMP.S 0x13a8 <_SameNameRecordAnswersQuestion+0xb4>;
    13a6:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    13a8:	86 6c       	SP += 0x10;		/* ( 16) */
    13aa:	27 01       	RETS = [SP++];
    13ac:	85 04       	(P5:5) = [SP++];
    13ae:	10 00       	RTS;

000013b0 <_ResourceRecordAnswersQuestion>:
_ResourceRecordAnswersQuestion():
    13b0:	10 32       	P2 = R0;
    13b2:	c5 04       	[--SP] = (P5:5);
    13b4:	67 01       	[--SP] = RETS;
    13b6:	86 6f       	SP += -0x10;		/* (-16) */
    13b8:	09 32       	P1 = R1;
    13ba:	92 a1       	R2 = [P2 + 0x18];
    13bc:	32 0c       	CC = R2 == -0x2;
    13be:	03 18       	IF CC JUMP 0x13c4 <_ResourceRecordAnswersQuestion+0x14>;
    13c0:	22 0c       	CC = R2 == -0x4;
    13c2:	0c 14       	IF !CC JUMP 0x13da <_ResourceRecordAnswersQuestion+0x2a> (BP);
    13c4:	08 e4 46 00 	R0 = [P1 + 0x118];
    13c8:	f0 b0       	[SP + 0xc] = R0;
    13ca:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xff(255) */
    13ce:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    13d0:	01 e1 70 04 	R1.L = 0x470;		/* (1136)	R1=0x470(1136) */
    13d4:	ff e3 16 f6 	CALL 0x0 <_putVal32>;
    13d8:	51 20       	JUMP.S 0x147a <_ResourceRecordAnswersQuestion+0xca>;
    13da:	02 0c       	CC = R2 == 0x0;
    13dc:	0a 1c       	IF CC JUMP 0x13f0 <_ResourceRecordAnswersQuestion+0x40> (BP);
    13de:	08 e4 46 00 	R0 = [P1 + 0x118];
    13e2:	00 0c       	CC = R0 == 0x0;
    13e4:	0c 18       	IF CC JUMP 0x13fc <_ResourceRecordAnswersQuestion+0x4c>;
    13e6:	30 0c       	CC = R0 == -0x2;
    13e8:	0a 18       	IF CC JUMP 0x13fc <_ResourceRecordAnswersQuestion+0x4c>;
    13ea:	02 08       	CC = R2 == R0;
    13ec:	47 14       	IF !CC JUMP 0x147a <_ResourceRecordAnswersQuestion+0xca> (BP);
    13ee:	07 20       	JUMP.S 0x13fc <_ResourceRecordAnswersQuestion+0x4c>;
    13f0:	00 00       	NOP;
    13f2:	51 a2       	R1 = [P2 + 0x24];
    13f4:	08 e4 32 00 	R0 = [P1 + 0xc8];
    13f8:	01 08       	CC = R1 == R0;
    13fa:	04 20       	JUMP.S 0x1402 <_ResourceRecordAnswersQuestion+0x52>;
    13fc:	48 e4 99 00 	R0 = W[P1 + 0x132] (Z);
    1400:	00 0c       	CC = R0 == 0x0;
    1402:	3c 14       	IF !CC JUMP 0x147a <_ResourceRecordAnswersQuestion+0xca> (BP);
    1404:	28 60       	R0 = 0x5 (X);		/*		R0=0x5(  5) */
    1406:	51 a4       	R1 = W[P2 + 0x2] (Z);
    1408:	01 08       	CC = R1 == R0;
    140a:	1f 1c       	IF CC JUMP 0x1448 <_ResourceRecordAnswersQuestion+0x98> (BP);
    140c:	48 e4 1a 01 	R0 = W[P1 + 0x234] (Z);
    1410:	01 08       	CC = R1 == R0;
    1412:	1b 18       	IF CC JUMP 0x1448 <_ResourceRecordAnswersQuestion+0x98>;
    1414:	22 e1 ff 00 	R2 = 0xff (X);		/*		R2=0xff(255) */
    1418:	10 08       	CC = R0 == R2;
    141a:	17 18       	IF CC JUMP 0x1448 <_ResourceRecordAnswersQuestion+0x98>;
    141c:	7a 61       	R2 = 0x2f (X);		/*		R2=0x2f( 47) */
    141e:	11 08       	CC = R1 == R2;
    1420:	2d 14       	IF !CC JUMP 0x147a <_ResourceRecordAnswersQuestion+0xca> (BP);
    1422:	21 e1 fe 00 	R1 = 0xfe (X);		/*		R1=0xfe(254) */
    1426:	08 0a       	CC = R0 <= R1 (IU);
    1428:	29 10       	IF !CC JUMP 0x147a <_ResourceRecordAnswersQuestion+0xca>;
    142a:	82 c6 e8 83 	R1 = R0 >> 0x3;
    142e:	29 32       	P5 = R1;
    1430:	39 60       	R1 = 0x7 (X);		/*		R1=0x7(  7) */
    1432:	10 ae       	P0 = [P2 + 0x20];
    1434:	08 54       	R0 = R0 & R1;
    1436:	21 e1 80 00 	R1 = 0x80 (X);		/*		R1=0x80(128) */
    143a:	01 40       	R1 >>>= R0;
    143c:	28 5a       	P0 = P0 + P5;
    143e:	82 e4 04 00 	R2 = B[P0 + 0x4] (Z);
    1442:	4a 54       	R1 = R2 & R1;
    1444:	01 0c       	CC = R1 == 0x0;
    1446:	1a 14       	IF !CC JUMP 0x147a <_ResourceRecordAnswersQuestion+0xca> (BP);
    1448:	00 00       	NOP;
    144a:	91 a4       	R1 = W[P2 + 0x4] (Z);
    144c:	48 e4 1b 01 	R0 = W[P1 + 0x236] (Z);
    1450:	01 08       	CC = R1 == R0;
    1452:	05 18       	IF CC JUMP 0x145c <_ResourceRecordAnswersQuestion+0xac>;
    1454:	21 e1 ff 00 	R1 = 0xff (X);		/*		R1=0xff(255) */
    1458:	08 08       	CC = R0 == R1;
    145a:	10 14       	IF !CC JUMP 0x147a <_ResourceRecordAnswersQuestion+0xca> (BP);
    145c:	11 a1       	R1 = [P2 + 0x10];
    145e:	48 a0       	R0 = [P1 + 0x4];
    1460:	01 08       	CC = R1 == R0;
    1462:	0c 14       	IF !CC JUMP 0x147a <_ResourceRecordAnswersQuestion+0xca> (BP);
    1464:	d0 a1       	R0 = [P2 + 0x1c];
    1466:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    146a:	91 5a       	P2 = P1 + P2;
    146c:	4a 30       	R1 = P2;
    146e:	ff e3 d9 f6 	CALL 0x220 <_SameDomainName>;
    1472:	00 0c       	CC = R0 == 0x0;
    1474:	00 02       	R0 = CC;
    1476:	00 4b       	BITTGL (R0, 0x0);		/* bit  0 */
    1478:	02 20       	JUMP.S 0x147c <_ResourceRecordAnswersQuestion+0xcc>;
    147a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    147c:	86 6c       	SP += 0x10;		/* ( 16) */
    147e:	27 01       	RETS = [SP++];
    1480:	85 04       	(P5:5) = [SP++];
    1482:	10 00       	RTS;

00001484 <_LocalOnlyRecordAnswersQuestion>:
_LocalOnlyRecordAnswersQuestion():
    1484:	10 32       	P2 = R0;
    1486:	c5 04       	[--SP] = (P5:5);
    1488:	67 01       	[--SP] = RETS;
    148a:	a6 6f       	SP += -0xc;		/* (-12) */
    148c:	09 32       	P1 = R1;
    148e:	12 e4 20 00 	R2 = [P2 + 0x80];
    1492:	0a 0e       	CC = R2 <= 0x1 (IU);
    1494:	0a 14       	IF !CC JUMP 0x14a8 <_LocalOnlyRecordAnswersQuestion+0x24> (BP);
    1496:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xff(255) */
    149a:	12 a2       	R2 = [P2 + 0x20];
    149c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    149e:	01 e1 d0 04 	R1.L = 0x4d0;		/* (1232)	R1=0x4d0(1232) */
    14a2:	ff e3 af f5 	CALL 0x0 <_putVal32>;
    14a6:	52 20       	JUMP.S 0x154a <_LocalOnlyRecordAnswersQuestion+0xc6>;
    14a8:	00 00       	NOP;
    14aa:	d1 a1       	R1 = [P2 + 0x1c];
    14ac:	01 0c       	CC = R1 == 0x0;
    14ae:	0b 1c       	IF CC JUMP 0x14c4 <_LocalOnlyRecordAnswersQuestion+0x40> (BP);
    14b0:	08 e4 46 00 	R0 = [P1 + 0x118];
    14b4:	00 0c       	CC = R0 == 0x0;
    14b6:	07 18       	IF CC JUMP 0x14c4 <_LocalOnlyRecordAnswersQuestion+0x40>;
    14b8:	30 0c       	CC = R0 == -0x2;
    14ba:	05 18       	IF CC JUMP 0x14c4 <_LocalOnlyRecordAnswersQuestion+0x40>;
    14bc:	28 0c       	CC = R0 == -0x3;
    14be:	03 18       	IF CC JUMP 0x14c4 <_LocalOnlyRecordAnswersQuestion+0x40>;
    14c0:	01 08       	CC = R1 == R0;
    14c2:	44 14       	IF !CC JUMP 0x154a <_LocalOnlyRecordAnswersQuestion+0xc6> (BP);
    14c4:	12 0c       	CC = R2 == 0x2;
    14c6:	07 18       	IF CC JUMP 0x14d4 <_LocalOnlyRecordAnswersQuestion+0x50>;
    14c8:	01 0c       	CC = R1 == 0x0;
    14ca:	05 1c       	IF CC JUMP 0x14d4 <_LocalOnlyRecordAnswersQuestion+0x50> (BP);
    14cc:	48 e4 99 00 	R0 = W[P1 + 0x132] (Z);
    14d0:	00 0c       	CC = R0 == 0x0;
    14d2:	3c 14       	IF !CC JUMP 0x154a <_LocalOnlyRecordAnswersQuestion+0xc6> (BP);
    14d4:	28 60       	R0 = 0x5 (X);		/*		R0=0x5(  5) */
    14d6:	d1 a4       	R1 = W[P2 + 0x6] (Z);
    14d8:	01 08       	CC = R1 == R0;
    14da:	1f 1c       	IF CC JUMP 0x1518 <_LocalOnlyRecordAnswersQuestion+0x94> (BP);
    14dc:	48 e4 1a 01 	R0 = W[P1 + 0x234] (Z);
    14e0:	01 08       	CC = R1 == R0;
    14e2:	1b 18       	IF CC JUMP 0x1518 <_LocalOnlyRecordAnswersQuestion+0x94>;
    14e4:	22 e1 ff 00 	R2 = 0xff (X);		/*		R2=0xff(255) */
    14e8:	10 08       	CC = R0 == R2;
    14ea:	17 18       	IF CC JUMP 0x1518 <_LocalOnlyRecordAnswersQuestion+0x94>;
    14ec:	7a 61       	R2 = 0x2f (X);		/*		R2=0x2f( 47) */
    14ee:	11 08       	CC = R1 == R2;
    14f0:	2d 14       	IF !CC JUMP 0x154a <_LocalOnlyRecordAnswersQuestion+0xc6> (BP);
    14f2:	21 e1 fe 00 	R1 = 0xfe (X);		/*		R1=0xfe(254) */
    14f6:	08 0a       	CC = R0 <= R1 (IU);
    14f8:	29 10       	IF !CC JUMP 0x154a <_LocalOnlyRecordAnswersQuestion+0xc6>;
    14fa:	82 c6 e8 83 	R1 = R0 >> 0x3;
    14fe:	29 32       	P5 = R1;
    1500:	39 60       	R1 = 0x7 (X);		/*		R1=0x7(  7) */
    1502:	50 ae       	P0 = [P2 + 0x24];
    1504:	08 54       	R0 = R0 & R1;
    1506:	21 e1 80 00 	R1 = 0x80 (X);		/*		R1=0x80(128) */
    150a:	01 40       	R1 >>>= R0;
    150c:	28 5a       	P0 = P0 + P5;
    150e:	82 e4 04 00 	R2 = B[P0 + 0x4] (Z);
    1512:	4a 54       	R1 = R2 & R1;
    1514:	01 0c       	CC = R1 == 0x0;
    1516:	1a 14       	IF !CC JUMP 0x154a <_LocalOnlyRecordAnswersQuestion+0xc6> (BP);
    1518:	00 00       	NOP;
    151a:	11 a5       	R1 = W[P2 + 0x8] (Z);
    151c:	48 e4 1b 01 	R0 = W[P1 + 0x236] (Z);
    1520:	01 08       	CC = R1 == R0;
    1522:	05 18       	IF CC JUMP 0x152c <_LocalOnlyRecordAnswersQuestion+0xa8>;
    1524:	21 e1 ff 00 	R1 = 0xff (X);		/*		R1=0xff(255) */
    1528:	08 08       	CC = R0 == R1;
    152a:	10 14       	IF !CC JUMP 0x154a <_LocalOnlyRecordAnswersQuestion+0xc6> (BP);
    152c:	51 a1       	R1 = [P2 + 0x14];
    152e:	48 a0       	R0 = [P1 + 0x4];
    1530:	01 08       	CC = R1 == R0;
    1532:	0c 14       	IF !CC JUMP 0x154a <_LocalOnlyRecordAnswersQuestion+0xc6> (BP);
    1534:	10 a2       	R0 = [P2 + 0x20];
    1536:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    153a:	91 5a       	P2 = P1 + P2;
    153c:	4a 30       	R1 = P2;
    153e:	ff e3 71 f6 	CALL 0x220 <_SameDomainName>;
    1542:	00 0c       	CC = R0 == 0x0;
    1544:	00 02       	R0 = CC;
    1546:	00 4b       	BITTGL (R0, 0x0);		/* bit  0 */
    1548:	02 20       	JUMP.S 0x154c <_LocalOnlyRecordAnswersQuestion+0xc8>;
    154a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    154c:	66 6c       	SP += 0xc;		/* ( 12) */
    154e:	27 01       	RETS = [SP++];
    1550:	85 04       	(P5:5) = [SP++];
    1552:	10 00       	RTS;

00001554 <_AnyTypeRecordAnswersQuestion>:
_AnyTypeRecordAnswersQuestion():
    1554:	10 32       	P2 = R0;
    1556:	67 01       	[--SP] = RETS;
    1558:	86 6f       	SP += -0x10;		/* (-16) */
    155a:	09 32       	P1 = R1;
    155c:	92 a1       	R2 = [P2 + 0x18];
    155e:	32 0c       	CC = R2 == -0x2;
    1560:	03 18       	IF CC JUMP 0x1566 <_AnyTypeRecordAnswersQuestion+0x12>;
    1562:	22 0c       	CC = R2 == -0x4;
    1564:	0c 14       	IF !CC JUMP 0x157c <_AnyTypeRecordAnswersQuestion+0x28> (BP);
    1566:	08 e4 46 00 	R0 = [P1 + 0x118];
    156a:	f0 b0       	[SP + 0xc] = R0;
    156c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xff(255) */
    1570:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1572:	01 e1 20 05 	R1.L = 0x520;		/* (1312)	R1=0x520(1312) */
    1576:	ff e3 45 f5 	CALL 0x0 <_putVal32>;
    157a:	2e 20       	JUMP.S 0x15d6 <_AnyTypeRecordAnswersQuestion+0x82>;
    157c:	02 0c       	CC = R2 == 0x0;
    157e:	0a 1c       	IF CC JUMP 0x1592 <_AnyTypeRecordAnswersQuestion+0x3e> (BP);
    1580:	08 e4 46 00 	R0 = [P1 + 0x118];
    1584:	00 0c       	CC = R0 == 0x0;
    1586:	0c 18       	IF CC JUMP 0x159e <_AnyTypeRecordAnswersQuestion+0x4a>;
    1588:	30 0c       	CC = R0 == -0x2;
    158a:	0a 18       	IF CC JUMP 0x159e <_AnyTypeRecordAnswersQuestion+0x4a>;
    158c:	02 08       	CC = R2 == R0;
    158e:	24 14       	IF !CC JUMP 0x15d6 <_AnyTypeRecordAnswersQuestion+0x82> (BP);
    1590:	07 20       	JUMP.S 0x159e <_AnyTypeRecordAnswersQuestion+0x4a>;
    1592:	00 00       	NOP;
    1594:	51 a2       	R1 = [P2 + 0x24];
    1596:	08 e4 32 00 	R0 = [P1 + 0xc8];
    159a:	01 08       	CC = R1 == R0;
    159c:	04 20       	JUMP.S 0x15a4 <_AnyTypeRecordAnswersQuestion+0x50>;
    159e:	48 e4 99 00 	R0 = W[P1 + 0x132] (Z);
    15a2:	00 0c       	CC = R0 == 0x0;
    15a4:	19 14       	IF !CC JUMP 0x15d6 <_AnyTypeRecordAnswersQuestion+0x82> (BP);
    15a6:	91 a4       	R1 = W[P2 + 0x4] (Z);
    15a8:	48 e4 1b 01 	R0 = W[P1 + 0x236] (Z);
    15ac:	01 08       	CC = R1 == R0;
    15ae:	05 18       	IF CC JUMP 0x15b8 <_AnyTypeRecordAnswersQuestion+0x64>;
    15b0:	21 e1 ff 00 	R1 = 0xff (X);		/*		R1=0xff(255) */
    15b4:	08 08       	CC = R0 == R1;
    15b6:	10 14       	IF !CC JUMP 0x15d6 <_AnyTypeRecordAnswersQuestion+0x82> (BP);
    15b8:	11 a1       	R1 = [P2 + 0x10];
    15ba:	48 a0       	R0 = [P1 + 0x4];
    15bc:	01 08       	CC = R1 == R0;
    15be:	0c 14       	IF !CC JUMP 0x15d6 <_AnyTypeRecordAnswersQuestion+0x82> (BP);
    15c0:	d0 a1       	R0 = [P2 + 0x1c];
    15c2:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    15c6:	91 5a       	P2 = P1 + P2;
    15c8:	4a 30       	R1 = P2;
    15ca:	ff e3 2b f6 	CALL 0x220 <_SameDomainName>;
    15ce:	00 0c       	CC = R0 == 0x0;
    15d0:	00 02       	R0 = CC;
    15d2:	00 4b       	BITTGL (R0, 0x0);		/* bit  0 */
    15d4:	02 20       	JUMP.S 0x15d8 <_AnyTypeRecordAnswersQuestion+0x84>;
    15d6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    15d8:	86 6c       	SP += 0x10;		/* ( 16) */
    15da:	27 01       	RETS = [SP++];
    15dc:	10 00       	RTS;
	...

000015e0 <_ResourceRecordAnswersUnicastResponse>:
_ResourceRecordAnswersUnicastResponse():
    15e0:	10 32       	P2 = R0;
    15e2:	c5 04       	[--SP] = (P5:5);
    15e4:	67 01       	[--SP] = RETS;
    15e6:	09 32       	P1 = R1;
    15e8:	a6 6f       	SP += -0xc;		/* (-12) */
    15ea:	91 a1       	R1 = [P2 + 0x18];
    15ec:	01 0c       	CC = R1 == 0x0;
    15ee:	0b 1c       	IF CC JUMP 0x1604 <_ResourceRecordAnswersUnicastResponse+0x24> (BP);
    15f0:	08 e4 46 00 	R0 = [P1 + 0x118];
    15f4:	00 0c       	CC = R0 == 0x0;
    15f6:	03 18       	IF CC JUMP 0x15fc <_ResourceRecordAnswersUnicastResponse+0x1c>;
    15f8:	01 08       	CC = R1 == R0;
    15fa:	40 14       	IF !CC JUMP 0x167a <_ResourceRecordAnswersUnicastResponse+0x9a> (BP);
    15fc:	48 e4 99 00 	R0 = W[P1 + 0x132] (Z);
    1600:	00 0c       	CC = R0 == 0x0;
    1602:	3c 14       	IF !CC JUMP 0x167a <_ResourceRecordAnswersUnicastResponse+0x9a> (BP);
    1604:	28 60       	R0 = 0x5 (X);		/*		R0=0x5(  5) */
    1606:	51 a4       	R1 = W[P2 + 0x2] (Z);
    1608:	01 08       	CC = R1 == R0;
    160a:	1f 1c       	IF CC JUMP 0x1648 <_ResourceRecordAnswersUnicastResponse+0x68> (BP);
    160c:	48 e4 1a 01 	R0 = W[P1 + 0x234] (Z);
    1610:	01 08       	CC = R1 == R0;
    1612:	1b 18       	IF CC JUMP 0x1648 <_ResourceRecordAnswersUnicastResponse+0x68>;
    1614:	22 e1 ff 00 	R2 = 0xff (X);		/*		R2=0xff(255) */
    1618:	10 08       	CC = R0 == R2;
    161a:	17 18       	IF CC JUMP 0x1648 <_ResourceRecordAnswersUnicastResponse+0x68>;
    161c:	7a 61       	R2 = 0x2f (X);		/*		R2=0x2f( 47) */
    161e:	11 08       	CC = R1 == R2;
    1620:	2d 14       	IF !CC JUMP 0x167a <_ResourceRecordAnswersUnicastResponse+0x9a> (BP);
    1622:	21 e1 fe 00 	R1 = 0xfe (X);		/*		R1=0xfe(254) */
    1626:	08 0a       	CC = R0 <= R1 (IU);
    1628:	29 10       	IF !CC JUMP 0x167a <_ResourceRecordAnswersUnicastResponse+0x9a>;
    162a:	82 c6 e8 83 	R1 = R0 >> 0x3;
    162e:	29 32       	P5 = R1;
    1630:	39 60       	R1 = 0x7 (X);		/*		R1=0x7(  7) */
    1632:	10 ae       	P0 = [P2 + 0x20];
    1634:	08 54       	R0 = R0 & R1;
    1636:	21 e1 80 00 	R1 = 0x80 (X);		/*		R1=0x80(128) */
    163a:	01 40       	R1 >>>= R0;
    163c:	28 5a       	P0 = P0 + P5;
    163e:	82 e4 04 00 	R2 = B[P0 + 0x4] (Z);
    1642:	4a 54       	R1 = R2 & R1;
    1644:	01 0c       	CC = R1 == 0x0;
    1646:	1a 14       	IF !CC JUMP 0x167a <_ResourceRecordAnswersUnicastResponse+0x9a> (BP);
    1648:	00 00       	NOP;
    164a:	91 a4       	R1 = W[P2 + 0x4] (Z);
    164c:	48 e4 1b 01 	R0 = W[P1 + 0x236] (Z);
    1650:	01 08       	CC = R1 == R0;
    1652:	05 18       	IF CC JUMP 0x165c <_ResourceRecordAnswersUnicastResponse+0x7c>;
    1654:	21 e1 ff 00 	R1 = 0xff (X);		/*		R1=0xff(255) */
    1658:	08 08       	CC = R0 == R1;
    165a:	10 14       	IF !CC JUMP 0x167a <_ResourceRecordAnswersUnicastResponse+0x9a> (BP);
    165c:	11 a1       	R1 = [P2 + 0x10];
    165e:	48 a0       	R0 = [P1 + 0x4];
    1660:	01 08       	CC = R1 == R0;
    1662:	0c 14       	IF !CC JUMP 0x167a <_ResourceRecordAnswersUnicastResponse+0x9a> (BP);
    1664:	d0 a1       	R0 = [P2 + 0x1c];
    1666:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    166a:	91 5a       	P2 = P1 + P2;
    166c:	4a 30       	R1 = P2;
    166e:	ff e3 d9 f5 	CALL 0x220 <_SameDomainName>;
    1672:	00 0c       	CC = R0 == 0x0;
    1674:	00 02       	R0 = CC;
    1676:	00 4b       	BITTGL (R0, 0x0);		/* bit  0 */
    1678:	02 20       	JUMP.S 0x167c <_ResourceRecordAnswersUnicastResponse+0x9c>;
    167a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    167c:	66 6c       	SP += 0xc;		/* ( 12) */
    167e:	27 01       	RETS = [SP++];
    1680:	85 04       	(P5:5) = [SP++];
    1682:	10 00       	RTS;

00001684 <_GetRDLength>:
_GetRDLength():
    1684:	10 32       	P2 = R0;
    1686:	68 05       	[--SP] = (R7:5);
    1688:	67 01       	[--SP] = RETS;
    168a:	a6 6f       	SP += -0xc;		/* (-12) */
    168c:	01 0c       	CC = R1 == 0x0;
    168e:	11 ae       	P1 = [P2 + 0x20];
    1690:	03 1c       	IF CC JUMP 0x1696 <_GetRDLength+0x12> (BP);
    1692:	d7 a1       	R7 = [P2 + 0x1c];
    1694:	02 20       	JUMP.S 0x1698 <_GetRDLength+0x14>;
    1696:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    1698:	90 a4       	R0 = W[P2 + 0x4] (Z);
    169a:	22 e1 ff 00 	R2 = 0xff (X);		/*		R2=0xff(255) */
    169e:	10 08       	CC = R0 == R2;
    16a0:	b5 18       	IF CC JUMP 0x180a <_GetRDLength+0x186>;
    16a2:	71 30       	R6 = P1;
    16a4:	a0 60       	R0 = 0x14 (X);		/*		R0=0x14( 20) */
    16a6:	26 64       	R6 += 0x4;		/* (  4) */
    16a8:	52 a4       	R2 = W[P2 + 0x2] (Z);
    16aa:	02 0a       	CC = R2 <= R0 (IU);
    16ac:	27 14       	IF !CC JUMP 0x16fa <_GetRDLength+0x76> (BP);
    16ae:	98 60       	R0 = 0x13 (X);		/*		R0=0x13( 19) */
    16b0:	82 09       	CC = R2 < R0 (IU);
    16b2:	ac 14       	IF !CC JUMP 0x180a <_GetRDLength+0x186> (BP);
    16b4:	60 60       	R0 = 0xc (X);		/*		R0=0xc( 12) */
    16b6:	02 08       	CC = R2 == R0;
    16b8:	44 18       	IF CC JUMP 0x1740 <_GetRDLength+0xbc>;
    16ba:	02 0a       	CC = R2 <= R0 (IU);
    16bc:	0e 14       	IF !CC JUMP 0x16d8 <_GetRDLength+0x54> (BP);
    16be:	28 60       	R0 = 0x5 (X);		/*		R0=0x5(  5) */
    16c0:	02 08       	CC = R2 == R0;
    16c2:	3f 18       	IF CC JUMP 0x1740 <_GetRDLength+0xbc>;
    16c4:	2a 0e       	CC = R2 <= 0x5 (IU);
    16c6:	05 14       	IF !CC JUMP 0x16d0 <_GetRDLength+0x4c> (BP);
    16c8:	0a 0c       	CC = R2 == 0x1;
    16ca:	39 18       	IF CC JUMP 0x173c <_GetRDLength+0xb8>;
    16cc:	12 0c       	CC = R2 == 0x2;
    16ce:	35 20       	JUMP.S 0x1738 <_GetRDLength+0xb4>;
    16d0:	30 60       	R0 = 0x6 (X);		/*		R0=0x6(  6) */
    16d2:	02 08       	CC = R2 == R0;
    16d4:	9b 14       	IF !CC JUMP 0x180a <_GetRDLength+0x186> (BP);
    16d6:	3c 20       	JUMP.S 0x174e <_GetRDLength+0xca>;
    16d8:	80 60       	R0 = 0x10 (X);		/*		R0=0x10( 16) */
    16da:	02 08       	CC = R2 == R0;
    16dc:	97 18       	IF CC JUMP 0x180a <_GetRDLength+0x186>;
    16de:	02 0a       	CC = R2 <= R0 (IU);
    16e0:	06 14       	IF !CC JUMP 0x16ec <_GetRDLength+0x68> (BP);
    16e2:	68 60       	R0 = 0xd (X);		/*		R0=0xd( 13) */
    16e4:	02 08       	CC = R2 == R0;
    16e6:	43 18       	IF CC JUMP 0x176c <_GetRDLength+0xe8>;
    16e8:	78 60       	R0 = 0xf (X);		/*		R0=0xf( 15) */
    16ea:	05 20       	JUMP.S 0x16f4 <_GetRDLength+0x70>;
    16ec:	88 60       	R0 = 0x11 (X);		/*		R0=0x11( 17) */
    16ee:	02 08       	CC = R2 == R0;
    16f0:	4f 18       	IF CC JUMP 0x178e <_GetRDLength+0x10a>;
    16f2:	90 60       	R0 = 0x12 (X);		/*		R0=0x12( 18) */
    16f4:	02 08       	CC = R2 == R0;
    16f6:	8a 14       	IF !CC JUMP 0x180a <_GetRDLength+0x186> (BP);
    16f8:	45 20       	JUMP.S 0x1782 <_GetRDLength+0xfe>;
    16fa:	20 61       	R0 = 0x24 (X);		/*		R0=0x24( 36) */
    16fc:	02 08       	CC = R2 == R0;
    16fe:	42 18       	IF CC JUMP 0x1782 <_GetRDLength+0xfe>;
    1700:	02 0a       	CC = R2 <= R0 (IU);
    1702:	14 14       	IF !CC JUMP 0x172a <_GetRDLength+0xa6> (BP);
    1704:	e0 60       	R0 = 0x1c (X);		/*		R0=0x1c( 28) */
    1706:	02 08       	CC = R2 == R0;
    1708:	84 18       	IF CC JUMP 0x1810 <_GetRDLength+0x18c>;
    170a:	02 0a       	CC = R2 <= R0 (IU);
    170c:	08 14       	IF !CC JUMP 0x171c <_GetRDLength+0x98> (BP);
    170e:	a8 60       	R0 = 0x15 (X);		/*		R0=0x15( 21) */
    1710:	02 08       	CC = R2 == R0;
    1712:	38 18       	IF CC JUMP 0x1782 <_GetRDLength+0xfe>;
    1714:	d0 60       	R0 = 0x1a (X);		/*		R0=0x1a( 26) */
    1716:	02 08       	CC = R2 == R0;
    1718:	79 14       	IF !CC JUMP 0x180a <_GetRDLength+0x186> (BP);
    171a:	47 20       	JUMP.S 0x17a8 <_GetRDLength+0x124>;
    171c:	e8 60       	R0 = 0x1d (X);		/*		R0=0x1d( 29) */
    171e:	02 08       	CC = R2 == R0;
    1720:	75 18       	IF CC JUMP 0x180a <_GetRDLength+0x186>;
    1722:	08 61       	R0 = 0x21 (X);		/*		R0=0x21( 33) */
    1724:	02 08       	CC = R2 == R0;
    1726:	72 14       	IF !CC JUMP 0x180a <_GetRDLength+0x186> (BP);
    1728:	50 20       	JUMP.S 0x17c8 <_GetRDLength+0x144>;
    172a:	78 61       	R0 = 0x2f (X);		/*		R0=0x2f( 47) */
    172c:	02 08       	CC = R2 == R0;
    172e:	54 18       	IF CC JUMP 0x17d6 <_GetRDLength+0x152>;
    1730:	02 0a       	CC = R2 <= R0 (IU);
    1732:	6c 14       	IF !CC JUMP 0x180a <_GetRDLength+0x186> (BP);
    1734:	38 61       	R0 = 0x27 (X);		/*		R0=0x27( 39) */
    1736:	02 08       	CC = R2 == R0;
    1738:	69 14       	IF !CC JUMP 0x180a <_GetRDLength+0x186> (BP);
    173a:	03 20       	JUMP.S 0x1740 <_GetRDLength+0xbc>;
    173c:	20 60       	R0 = 0x4 (X);		/*		R0=0x4(  4) */
    173e:	6a 20       	JUMP.S 0x1812 <_GetRDLength+0x18e>;
    1740:	66 6c       	SP += 0xc;		/* ( 12) */
    1742:	27 01       	RETS = [SP++];
    1744:	06 30       	R0 = R6;
    1746:	0f 30       	R1 = R7;
    1748:	28 05       	(R7:5) = [SP++];
    174a:	ff e2 2f f6 	JUMP.L 0x3a8 <_CompressedDomainNameLength>;
    174e:	0f 30       	R1 = R7;
    1750:	06 30       	R0 = R6;
    1752:	ff e3 2b f6 	CALL 0x3a8 <_CompressedDomainNameLength>;
    1756:	28 30       	R5 = R0;
    1758:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    175c:	06 50       	R0 = R6 + R0;
    175e:	0f 30       	R1 = R7;
    1760:	ff e3 24 f6 	CALL 0x3a8 <_CompressedDomainNameLength>;
    1764:	45 51       	R5 = R5 + R0;
    1766:	05 30       	R0 = R5;
    1768:	a0 64       	R0 += 0x14;		/* ( 20) */
    176a:	54 20       	JUMP.S 0x1812 <_GetRDLength+0x18e>;
    176c:	89 e4 04 00 	R1 = B[P1 + 0x4] (Z);
    1770:	11 32       	P2 = R1;
    1772:	0e 32       	P1 = R6;
    1774:	48 43       	R0 = R1.B (Z);
    1776:	10 64       	R0 += 0x2;		/* (  2) */
    1778:	91 5a       	P2 = P1 + P2;
    177a:	91 e4 01 00 	R1 = B[P2 + 0x1] (Z);
    177e:	08 50       	R0 = R0 + R1;
    1780:	49 20       	JUMP.S 0x1812 <_GetRDLength+0x18e>;
    1782:	06 30       	R0 = R6;
    1784:	0f 30       	R1 = R7;
    1786:	10 64       	R0 += 0x2;		/* (  2) */
    1788:	ff e3 10 f6 	CALL 0x3a8 <_CompressedDomainNameLength>;
    178c:	1c 20       	JUMP.S 0x17c4 <_GetRDLength+0x140>;
    178e:	0f 30       	R1 = R7;
    1790:	06 30       	R0 = R6;
    1792:	ff e3 0b f6 	CALL 0x3a8 <_CompressedDomainNameLength>;
    1796:	28 30       	R5 = R0;
    1798:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    179c:	06 50       	R0 = R6 + R0;
    179e:	0f 30       	R1 = R7;
    17a0:	ff e3 04 f6 	CALL 0x3a8 <_CompressedDomainNameLength>;
    17a4:	28 50       	R0 = R0 + R5;
    17a6:	36 20       	JUMP.S 0x1812 <_GetRDLength+0x18e>;
    17a8:	41 30       	R0 = P1;
    17aa:	0f 30       	R1 = R7;
    17ac:	30 64       	R0 += 0x6;		/* (  6) */
    17ae:	ff e3 fd f5 	CALL 0x3a8 <_CompressedDomainNameLength>;
    17b2:	28 30       	R5 = R0;
    17b4:	20 e1 02 01 	R0 = 0x102 (X);		/*		R0=0x102(258) */
    17b8:	06 50       	R0 = R6 + R0;
    17ba:	0f 30       	R1 = R7;
    17bc:	ff e3 f6 f5 	CALL 0x3a8 <_CompressedDomainNameLength>;
    17c0:	45 51       	R5 = R5 + R0;
    17c2:	05 30       	R0 = R5;
    17c4:	10 64       	R0 += 0x2;		/* (  2) */
    17c6:	26 20       	JUMP.S 0x1812 <_GetRDLength+0x18e>;
    17c8:	41 30       	R0 = P1;
    17ca:	50 64       	R0 += 0xa;		/* ( 10) */
    17cc:	0f 30       	R1 = R7;
    17ce:	ff e3 ed f5 	CALL 0x3a8 <_CompressedDomainNameLength>;
    17d2:	30 64       	R0 += 0x6;		/* (  6) */
    17d4:	1f 20       	JUMP.S 0x1812 <_GetRDLength+0x18e>;
    17d6:	19 6d       	P1 += 0x23;		/* ( 35) */
    17d8:	07 61       	R7 = 0x20 (X);		/*		R7=0x20( 32) */
    17da:	00 69       	P0 = 0x20 (X);		/*		P0=0x20( 32) */
    17dc:	b2 e0 05 00 	LSETUP(0x17e0 <_GetRDLength+0x15c>, 0x17e6 <_GetRDLength+0x162>) LC1 = P0;
    17e0:	88 98       	R0 = B[P1--] (Z);
    17e2:	00 0c       	CC = R0 == 0x0;
    17e4:	02 10       	IF !CC JUMP 0x17e8 <_GetRDLength+0x164>;
    17e6:	ff 67       	R7 += -0x1;		/* ( -1) */
    17e8:	01 0c       	CC = R1 == 0x0;
    17ea:	08 14       	IF !CC JUMP 0x17fa <_GetRDLength+0x176> (BP);
    17ec:	d0 a1       	R0 = [P2 + 0x1c];
    17ee:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    17f2:	48 50       	R1 = R0 + R1;
    17f4:	ff e3 a2 f5 	CALL 0x338 <_DomainNameLengthLimit>;
    17f8:	02 20       	JUMP.S 0x17fc <_GetRDLength+0x178>;
    17fa:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    17fc:	07 0c       	CC = R7 == 0x0;
    17fe:	03 18       	IF CC JUMP 0x1804 <_GetRDLength+0x180>;
    1800:	17 64       	R7 += 0x2;		/* (  2) */
    1802:	02 20       	JUMP.S 0x1806 <_GetRDLength+0x182>;
    1804:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    1806:	07 50       	R0 = R7 + R0;
    1808:	05 20       	JUMP.S 0x1812 <_GetRDLength+0x18e>;
    180a:	00 00       	NOP;
    180c:	90 a9       	R0 = W[P2 + 0xc] (X);
    180e:	02 20       	JUMP.S 0x1812 <_GetRDLength+0x18e>;
    1810:	80 60       	R0 = 0x10 (X);		/*		R0=0x10( 16) */
    1812:	66 6c       	SP += 0xc;		/* ( 12) */
    1814:	27 01       	RETS = [SP++];
    1816:	28 05       	(R7:5) = [SP++];
    1818:	10 00       	RTS;
	...

0000181c <_ValidateRData>:
_ValidateRData():
    181c:	78 05       	[--SP] = (R7:7);
    181e:	f8 67       	R0 += -0x1;		/* ( -1) */
    1820:	67 01       	[--SP] = RETS;
    1822:	c0 42       	R0 = R0.L (Z);
    1824:	03 61       	R3 = 0x20 (X);		/*		R3=0x20( 32) */
    1826:	a6 6f       	SP += -0xc;		/* (-12) */
    1828:	18 0a       	CC = R0 <= R3 (IU);
    182a:	50 14       	IF !CC JUMP 0x18ca <_ValidateRData+0xae> (BP);
    182c:	00 32       	P0 = R0;
    182e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    1832:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_putVal32> */
    1836:	82 5e       	P2 = P2 + (P0 << 0x2);
    1838:	52 91       	P2 = [P2];
    183a:	52 00       	JUMP (P2);
    183c:	c9 42       	R1 = R1.L (Z);
    183e:	20 60       	R0 = 0x4 (X);		/*		R0=0x4(  4) */
    1840:	23 20       	JUMP.S 0x1886 <_ValidateRData+0x6a>;
    1842:	cf 42       	R7 = R1.L (Z);
    1844:	0f 30       	R1 = R7;
    1846:	02 30       	R0 = R2;
    1848:	21 64       	R1 += 0x4;		/* (  4) */
    184a:	4a 50       	R1 = R2 + R1;
    184c:	20 64       	R0 += 0x4;		/* (  4) */
    184e:	ff e3 75 f5 	CALL 0x338 <_DomainNameLengthLimit>;
    1852:	c0 42       	R0 = R0.L (Z);
    1854:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    1858:	08 0a       	CC = R0 <= R1 (IU);
    185a:	3a 14       	IF !CC JUMP 0x18ce <_ValidateRData+0xb2> (BP);
    185c:	34 20       	JUMP.S 0x18c4 <_ValidateRData+0xa8>;
    185e:	c9 42       	R1 = R1.L (Z);
    1860:	01 0c       	CC = R1 == 0x0;
    1862:	36 18       	IF CC JUMP 0x18ce <_ValidateRData+0xb2>;
    1864:	12 32       	P2 = R2;
    1866:	21 64       	R1 += 0x4;		/* (  4) */
    1868:	4a 50       	R1 = R2 + R1;
    186a:	09 32       	P1 = R1;
    186c:	22 6c       	P2 += 0x4;		/* (  4) */
    186e:	06 20       	JUMP.S 0x187a <_ValidateRData+0x5e>;
    1870:	00 00       	NOP;
    1872:	10 99       	R0 = B[P2] (Z);
    1874:	08 64       	R0 += 0x1;		/* (  1) */
    1876:	00 32       	P0 = R0;
    1878:	82 5a       	P2 = P2 + P0;
    187a:	ca 09       	CC = P2 < P1 (IU);
    187c:	fa 1f       	IF CC JUMP 0x1870 <_ValidateRData+0x54> (BP);
    187e:	4a 08       	CC = P2 == P1;
    1880:	23 20       	JUMP.S 0x18c6 <_ValidateRData+0xaa>;
    1882:	c9 42       	R1 = R1.L (Z);
    1884:	80 60       	R0 = 0x10 (X);		/*		R0=0x10( 16) */
    1886:	01 08       	CC = R1 == R0;
    1888:	1f 20       	JUMP.S 0x18c6 <_ValidateRData+0xaa>;
    188a:	cf 42       	R7 = R1.L (Z);
    188c:	0f 30       	R1 = R7;
    188e:	02 30       	R0 = R2;
    1890:	21 64       	R1 += 0x4;		/* (  4) */
    1892:	4a 50       	R1 = R2 + R1;
    1894:	30 64       	R0 += 0x6;		/* (  6) */
    1896:	ff e3 51 f5 	CALL 0x338 <_DomainNameLengthLimit>;
    189a:	c0 42       	R0 = R0.L (Z);
    189c:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    18a0:	08 0a       	CC = R0 <= R1 (IU);
    18a2:	16 14       	IF !CC JUMP 0x18ce <_ValidateRData+0xb2> (BP);
    18a4:	10 64       	R0 += 0x2;		/* (  2) */
    18a6:	0f 20       	JUMP.S 0x18c4 <_ValidateRData+0xa8>;
    18a8:	cf 42       	R7 = R1.L (Z);
    18aa:	0f 30       	R1 = R7;
    18ac:	02 30       	R0 = R2;
    18ae:	21 64       	R1 += 0x4;		/* (  4) */
    18b0:	50 64       	R0 += 0xa;		/* ( 10) */
    18b2:	4a 50       	R1 = R2 + R1;
    18b4:	ff e3 42 f5 	CALL 0x338 <_DomainNameLengthLimit>;
    18b8:	c0 42       	R0 = R0.L (Z);
    18ba:	23 e1 00 01 	R3 = 0x100 (X);		/*		R3=0x100(256) */
    18be:	18 0a       	CC = R0 <= R3 (IU);
    18c0:	07 14       	IF !CC JUMP 0x18ce <_ValidateRData+0xb2> (BP);
    18c2:	30 64       	R0 += 0x6;		/* (  6) */
    18c4:	07 08       	CC = R7 == R0;
    18c6:	00 02       	R0 = CC;
    18c8:	04 20       	JUMP.S 0x18d0 <_ValidateRData+0xb4>;
    18ca:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    18cc:	02 20       	JUMP.S 0x18d0 <_ValidateRData+0xb4>;
    18ce:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    18d0:	66 6c       	SP += 0xc;		/* ( 12) */
    18d2:	27 01       	RETS = [SP++];
    18d4:	38 05       	(R7:7) = [SP++];
    18d6:	10 00       	RTS;

000018d8 <_InitializeDNSMessage>:
_InitializeDNSMessage():
    18d8:	10 32       	P2 = R0;
    18da:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    18dc:	11 97       	W[P2] = R1;
    18de:	52 b4       	W[P2 + 0x2] = R2;
    18e0:	90 b4       	W[P2 + 0x4] = R0;
    18e2:	d0 b4       	W[P2 + 0x6] = R0;
    18e4:	10 b5       	W[P2 + 0x8] = R0;
    18e6:	50 b5       	W[P2 + 0xa] = R0;
    18e8:	10 00       	RTS;
	...

000018ec <_FindCompressionPointer>:
_FindCompressionPointer():
    18ec:	e3 05       	[--SP] = (R7:4, P5:3);
    18ee:	22 32       	P4 = R2;
    18f0:	10 32       	P2 = R0;
    18f2:	4f 01       	[--SP] = FP;
    18f4:	20 99       	R0 = B[P4] (Z);
    18f6:	00 0c       	CC = R0 == 0x0;
    18f8:	4e 1c       	IF CC JUMP 0x1994 <_FindCompressionPointer+0xa8> (BP);
    18fa:	c2 43       	R2 =~ R0;
    18fc:	91 50       	R2 = R1 + R2;
    18fe:	2a 32       	P5 = R2;
    1900:	30 30       	R6 = R0;
    1902:	ff 61       	R7 = 0x3f (X);		/*		R7=0x3f( 63) */
    1904:	44 20       	JUMP.S 0x198c <_FindCompressionPointer+0xa0>;
    1906:	00 00       	NOP;
    1908:	aa 98       	R2 = B[P5--] (Z);
    190a:	32 08       	CC = R2 == R6;
    190c:	40 14       	IF !CC JUMP 0x198c <_FindCompressionPointer+0xa0> (BP);
    190e:	ab e4 02 00 	R3 = B[P5 + 0x2] (Z);
    1912:	a2 e4 01 00 	R2 = B[P4 + 0x1] (Z);
    1916:	13 08       	CC = R3 == R2;
    1918:	3a 10       	IF !CC JUMP 0x198c <_FindCompressionPointer+0xa0>;
    191a:	08 32       	P1 = R0;
    191c:	44 32       	P0 = P4;
    191e:	2b 20       	JUMP.S 0x1974 <_FindCompressionPointer+0x88>;
    1920:	1b 32       	P3 = R3;
    1922:	3d 98       	R5 = B[FP++] (Z);
    1924:	0b 64       	R3 += 0x1;		/* (  1) */
    1926:	1c 98       	R4 = B[P3++] (Z);
    1928:	2c 08       	CC = R4 == R5;
    192a:	31 10       	IF !CC JUMP 0x198c <_FindCompressionPointer+0xa0>;
    192c:	0a 64       	R2 += 0x1;		/* (  1) */
    192e:	a8 30       	R5 = I0;
    1930:	2a 09       	CC = R2 <= R5;
    1932:	f7 1f       	IF CC JUMP 0x1920 <_FindCompressionPointer+0x34> (BP);
    1934:	34 20       	JUMP.S 0x199c <_FindCompressionPointer+0xb0>;
    1936:	00 00       	NOP;
    1938:	0a 99       	R2 = B[P1] (Z);
    193a:	02 0c       	CC = R2 == 0x0;
    193c:	28 14       	IF !CC JUMP 0x198c <_FindCompressionPointer+0xa0> (BP);
    193e:	2c 20       	JUMP.S 0x1996 <_FindCompressionPointer+0xaa>;
    1940:	0a 99       	R2 = B[P1] (Z);
    1942:	fb 61       	R3 = 0x3f (X);		/*		R3=0x3f( 63) */
    1944:	1a 0a       	CC = R2 <= R3 (IU);
    1946:	17 1c       	IF CC JUMP 0x1974 <_FindCompressionPointer+0x88> (BP);
    1948:	25 e1 bf 00 	R5 = 0xbf (X);		/*		R5=0xbf(191) */
    194c:	2a 0a       	CC = R2 <= R5 (IU);
    194e:	1f 18       	IF CC JUMP 0x198c <_FindCompressionPointer+0xa0>;
    1950:	59 30       	R3 = P1;
    1952:	0b 64       	R3 += 0x1;		/* (  1) */
    1954:	8b 09       	CC = R3 < R1 (IU);
    1956:	1b 14       	IF !CC JUMP 0x198c <_FindCompressionPointer+0xa0> (BP);
    1958:	ba 54       	R2 = R2 & R7;
    195a:	42 4f       	R2 <<= 0x8;
    195c:	8b e4 01 00 	R3 = B[P1 + 0x1] (Z);
    1960:	da 50       	R3 = R2 + R3;
    1962:	1b 32       	P3 = R3;
    1964:	da 5a       	P3 = P2 + P3;
    1966:	d9 09       	CC = P1 < P3 (IU);
    1968:	12 1c       	IF CC JUMP 0x198c <_FindCompressionPointer+0xa0> (BP);
    196a:	fb 61       	R3 = 0x3f (X);		/*		R3=0x3f( 63) */
    196c:	1a 99       	R2 = B[P3] (Z);
    196e:	1a 0a       	CC = R2 <= R3 (IU);
    1970:	0e 14       	IF !CC JUMP 0x198c <_FindCompressionPointer+0xa0> (BP);
    1972:	4b 32       	P1 = P3;
    1974:	00 00       	NOP;
    1976:	05 99       	R5 = B[P0] (Z);
    1978:	1d 32       	P3 = R5;
    197a:	d9 5b       	FP = P1 + P3;
    197c:	57 30       	R2 = FP;
    197e:	11 0a       	CC = R1 <= R2 (IU);
    1980:	06 18       	IF CC JUMP 0x198c <_FindCompressionPointer+0xa0>;
    1982:	59 30       	R3 = P1;
    1984:	78 32       	FP = P0;
    1986:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    1988:	05 34       	I0 = R5;
    198a:	d2 2f       	JUMP.S 0x192e <_FindCompressionPointer+0x42>;
    198c:	45 30       	R0 = P5;
    198e:	52 30       	R2 = P2;
    1990:	90 09       	CC = R0 < R2 (IU);
    1992:	ba 17       	IF !CC JUMP 0x1906 <_FindCompressionPointer+0x1a> (BP);
    1994:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1996:	77 90       	FP = [SP++];
    1998:	a3 05       	(R7:4, P5:3) = [SP++];
    199a:	10 00       	RTS;
    199c:	98 32       	P3 = I0;
    199e:	0b 6c       	P3 += 0x1;		/* (  1) */
    19a0:	18 5a       	P0 = P0 + P3;
    19a2:	02 99       	R2 = B[P0] (Z);
    19a4:	59 5a       	P1 = P1 + P3;
    19a6:	02 0c       	CC = R2 == 0x0;
    19a8:	c7 1f       	IF CC JUMP 0x1936 <_FindCompressionPointer+0x4a> (BP);
    19aa:	cb 2f       	JUMP.S 0x1940 <_FindCompressionPointer+0x54>;

000019ac <_putDomainNameAsLabels>:
_putDomainNameAsLabels():
    19ac:	e3 05       	[--SP] = (R7:4, P5:3);
    19ae:	00 e8 06 00 	LINK 0x18;		/* (24) */
    19b2:	29 32       	P5 = R1;
    19b4:	37 e5 12 00 	FP = [SP + 0x48];
    19b8:	20 30       	R4 = R0;
    19ba:	23 e1 00 01 	R3 = 0x100 (X);		/*		R3=0x100(256) */
    19be:	2a 30       	R5 = R2;
    19c0:	47 30       	R0 = FP;
    19c2:	d8 50       	R3 = R0 + R3;
    19c4:	45 0c       	CC = P5 == 0x0;
    19c6:	0a 14       	IF !CC JUMP 0x19da <_putDomainNameAsLabels+0x2e> (BP);
    19c8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x100(256) */
    19cc:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    19ce:	01 e1 7c 05 	R1.L = 0x57c;		/* (1404)	R1=0x57c(1404) */
    19d2:	57 30       	R2 = FP;
    19d4:	ff e3 16 f3 	CALL 0x0 <_putVal32>;
    19d8:	62 20       	JUMP.S 0x1a9c <_putDomainNameAsLabels+0xf0>;
    19da:	00 00       	NOP;
    19dc:	38 99       	R0 = B[FP] (Z);
    19de:	00 0c       	CC = R0 == 0x0;
    19e0:	05 14       	IF !CC JUMP 0x19ea <_putDomainNameAsLabels+0x3e> (BP);
    19e2:	91 09       	CC = R1 < R2 (IU);
    19e4:	5b 10       	IF !CC JUMP 0x1a9a <_putDomainNameAsLabels+0xee>;
    19e6:	21 32       	P4 = R1;
    19e8:	55 20       	JUMP.S 0x1a92 <_putDomainNameAsLabels+0xe6>;
    19ea:	04 0c       	CC = R4 == 0x0;
    19ec:	00 02       	R0 = CC;
    19ee:	5f 32       	P3 = FP;
    19f0:	21 32       	P4 = R1;
    19f2:	b0 e6 17 00 	B[SP + 0x17] = R0;
    19f6:	f8 61       	R0 = 0x3f (X);		/*		R0=0x3f( 63) */
    19f8:	5e 99       	R6 = B[P3] (X);
    19fa:	77 43       	R7 = R6.B (Z);
    19fc:	07 0a       	CC = R7 <= R0 (IU);
    19fe:	07 1c       	IF CC JUMP 0x1a0c <_putDomainNameAsLabels+0x60> (BP);
    1a00:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x57c(1404) */
    1a04:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1a06:	01 e1 a4 05 	R1.L = 0x5a4;		/* (1444)	R1=0x5a4(1444) */
    1a0a:	0c 20       	JUMP.S 0x1a22 <_putDomainNameAsLabels+0x76>;
    1a0c:	17 32       	P2 = R7;
    1a0e:	0a 6c       	P2 += 0x1;		/* (  1) */
    1a10:	53 5a       	P1 = P3 + P2;
    1a12:	41 30       	R0 = P1;
    1a14:	03 0a       	CC = R3 <= R0 (IU);
    1a16:	0a 14       	IF !CC JUMP 0x1a2a <_putDomainNameAsLabels+0x7e> (BP);
    1a18:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5a4(1444) */
    1a1c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1a1e:	01 e1 dc 05 	R1.L = 0x5dc;		/* (1500)	R1=0x5dc(1500) */
    1a22:	57 30       	R2 = FP;
    1a24:	ff e3 ee f2 	CALL 0x0 <_putVal32>;
    1a28:	39 20       	JUMP.S 0x1a9a <_putDomainNameAsLabels+0xee>;
    1a2a:	b0 e4 17 00 	R0 = B[SP + 0x17] (Z);
    1a2e:	08 02       	CC = R0;
    1a30:	1b 18       	IF CC JUMP 0x1a66 <_putDomainNameAsLabels+0xba>;
    1a32:	33 b1       	[SP + 0x10] = R3;
    1a34:	f2 bc       	[SP + 0xc] = P2;
    1a36:	04 30       	R0 = R4;
    1a38:	4d 30       	R1 = P5;
    1a3a:	53 30       	R2 = P3;
    1a3c:	ff e3 58 ff 	CALL 0x18ec <_FindCompressionPointer>;
    1a40:	00 0c       	CC = R0 == 0x0;
    1a42:	33 a1       	R3 = [SP + 0x10];
    1a44:	f2 ac       	P2 = [SP + 0xc];
    1a46:	10 1c       	IF CC JUMP 0x1a66 <_putDomainNameAsLabels+0xba> (BP);
    1a48:	4c 30       	R1 = P4;
    1a4a:	11 64       	R1 += 0x2;		/* (  2) */
    1a4c:	8d 09       	CC = R5 < R1 (IU);
    1a4e:	26 1c       	IF CC JUMP 0x1a9a <_putDomainNameAsLabels+0xee> (BP);
    1a50:	20 53       	R4 = R0 - R4;
    1a52:	e0 42       	R0 = R4.L (Z);
    1a54:	40 4e       	R0 >>= 0x8;
    1a56:	01 62       	R1 = -0x40 (X);		/*		R1=0xffffffc0(-64) */
    1a58:	6c 32       	P5 = P4;
    1a5a:	08 56       	R0 = R0 | R1;
    1a5c:	28 9a       	B[P5++] = R0;
    1a5e:	a4 e6 01 00 	B[P4 + 0x1] = R4;
    1a62:	0d 6c       	P5 += 0x1;		/* (  1) */
    1a64:	1c 20       	JUMP.S 0x1a9c <_putDomainNameAsLabels+0xf0>;
    1a66:	94 5a       	P2 = P4 + P2;
    1a68:	42 30       	R0 = P2;
    1a6a:	05 0a       	CC = R5 <= R0 (IU);
    1a6c:	17 18       	IF CC JUMP 0x1a9a <_putDomainNameAsLabels+0xee>;
    1a6e:	26 9a       	B[P4++] = R6;
    1a70:	0b 6c       	P3 += 0x1;		/* (  1) */
    1a72:	4b 32       	P1 = P3;
    1a74:	54 32       	P2 = P4;
    1a76:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1a78:	76 43       	R6 = R6.B (Z);
    1a7a:	04 20       	JUMP.S 0x1a82 <_putDomainNameAsLabels+0xd6>;
    1a7c:	08 64       	R0 += 0x1;		/* (  1) */
    1a7e:	49 98       	R1 = B[P1++] (X);
    1a80:	11 9a       	B[P2++] = R1;
    1a82:	b0 08       	CC = R0 < R6;
    1a84:	fc 1f       	IF CC JUMP 0x1a7c <_putDomainNameAsLabels+0xd0> (BP);
    1a86:	17 32       	P2 = R7;
    1a88:	d3 5a       	P3 = P3 + P2;
    1a8a:	18 99       	R0 = B[P3] (Z);
    1a8c:	14 5b       	P4 = P4 + P2;
    1a8e:	00 0c       	CC = R0 == 0x0;
    1a90:	b3 17       	IF !CC JUMP 0x19f6 <_putDomainNameAsLabels+0x4a> (BP);
    1a92:	6c 32       	P5 = P4;
    1a94:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1a96:	28 9a       	B[P5++] = R0;
    1a98:	02 20       	JUMP.S 0x1a9c <_putDomainNameAsLabels+0xf0>;
    1a9a:	05 68       	P5 = 0x0 (X);		/*		P5=0x0(  0) */
    1a9c:	c6 6c       	SP += 0x18;		/* ( 24) */
    1a9e:	77 90       	FP = [SP++];
    1aa0:	45 30       	R0 = P5;
    1aa2:	27 01       	RETS = [SP++];
    1aa4:	a3 05       	(R7:4, P5:3) = [SP++];
    1aa6:	10 00       	RTS;

00001aa8 <_putRData>:
_putRData():
    1aa8:	eb 05       	[--SP] = (R7:5, P5:3);
    1aaa:	00 e8 04 00 	LINK 0x10;		/* (16) */
    1aae:	f4 af       	P4 = [SP + 0x3c];
    1ab0:	18 32       	P3 = R0;
    1ab2:	39 32       	FP = R1;
    1ab4:	a1 60       	R1 = 0x14 (X);		/*		R1=0x14( 20) */
    1ab6:	22 ae       	P2 = [P4 + 0x20];
    1ab8:	60 a4       	R0 = W[P4 + 0x2] (Z);
    1aba:	3a 30       	R7 = R2;
    1abc:	08 0a       	CC = R0 <= R1 (IU);
    1abe:	6a 32       	P5 = P2;
    1ac0:	25 6c       	P5 += 0x4;		/* (  4) */
    1ac2:	2c 14       	IF !CC JUMP 0x1b1a <_putRData+0x72> (BP);
    1ac4:	9a 60       	R2 = 0x13 (X);		/*		R2=0x13( 19) */
    1ac6:	90 09       	CC = R0 < R2 (IU);
    1ac8:	a6 14       	IF !CC JUMP 0x1c14 <_putRData+0x16c> (BP);
    1aca:	63 60       	R3 = 0xc (X);		/*		R3=0xc( 12) */
    1acc:	18 08       	CC = R0 == R3;
    1ace:	6e 18       	IF CC JUMP 0x1baa <_putRData+0x102>;
    1ad0:	18 0a       	CC = R0 <= R3 (IU);
    1ad2:	12 14       	IF !CC JUMP 0x1af6 <_putRData+0x4e> (BP);
    1ad4:	29 60       	R1 = 0x5 (X);		/*		R1=0x5(  5) */
    1ad6:	08 08       	CC = R0 == R1;
    1ad8:	69 18       	IF CC JUMP 0x1baa <_putRData+0x102>;
    1ada:	28 0e       	CC = R0 <= 0x5 (IU);
    1adc:	07 14       	IF !CC JUMP 0x1aea <_putRData+0x42> (BP);
    1ade:	08 0c       	CC = R0 == 0x1;
    1ae0:	49 18       	IF CC JUMP 0x1b72 <_putRData+0xca>;
    1ae2:	10 0c       	CC = R0 == 0x2;
    1ae4:	02 18       	IF CC JUMP 0x1ae8 <_putRData+0x40>;
    1ae6:	07 22       	JUMP.S 0x1ef4 <_putRData+0x44c>;
    1ae8:	61 20       	JUMP.S 0x1baa <_putRData+0x102>;
    1aea:	32 60       	R2 = 0x6 (X);		/*		R2=0x6(  6) */
    1aec:	10 08       	CC = R0 == R2;
    1aee:	62 18       	IF CC JUMP 0x1bb2 <_putRData+0x10a>;
    1af0:	53 60       	R3 = 0xa (X);		/*		R3=0xa( 10) */
    1af2:	18 08       	CC = R0 == R3;
    1af4:	3d 20       	JUMP.S 0x1b6e <_putRData+0xc6>;
    1af6:	81 60       	R1 = 0x10 (X);		/*		R1=0x10( 16) */
    1af8:	08 08       	CC = R0 == R1;
    1afa:	8d 18       	IF CC JUMP 0x1c14 <_putRData+0x16c>;
    1afc:	08 0a       	CC = R0 <= R1 (IU);
    1afe:	07 14       	IF !CC JUMP 0x1b0c <_putRData+0x64> (BP);
    1b00:	6a 60       	R2 = 0xd (X);		/*		R2=0xd( 13) */
    1b02:	10 08       	CC = R0 == R2;
    1b04:	88 18       	IF CC JUMP 0x1c14 <_putRData+0x16c>;
    1b06:	7b 60       	R3 = 0xf (X);		/*		R3=0xf( 15) */
    1b08:	18 08       	CC = R0 == R3;
    1b0a:	06 20       	JUMP.S 0x1b16 <_putRData+0x6e>;
    1b0c:	89 60       	R1 = 0x11 (X);		/*		R1=0x11( 17) */
    1b0e:	08 08       	CC = R0 == R1;
    1b10:	9d 18       	IF CC JUMP 0x1c4a <_putRData+0x1a2>;
    1b12:	92 60       	R2 = 0x12 (X);		/*		R2=0x12( 18) */
    1b14:	10 08       	CC = R0 == R2;
    1b16:	ef 15       	IF !CC JUMP 0x1ef4 <_putRData+0x44c> (BP);
    1b18:	8a 20       	JUMP.S 0x1c2c <_putRData+0x184>;
    1b1a:	23 61       	R3 = 0x24 (X);		/*		R3=0x24( 36) */
    1b1c:	18 08       	CC = R0 == R3;
    1b1e:	87 18       	IF CC JUMP 0x1c2c <_putRData+0x184>;
    1b20:	18 0a       	CC = R0 <= R3 (IU);
    1b22:	14 14       	IF !CC JUMP 0x1b4a <_putRData+0xa2> (BP);
    1b24:	e1 60       	R1 = 0x1c (X);		/*		R1=0x1c( 28) */
    1b26:	08 08       	CC = R0 == R1;
    1b28:	b9 18       	IF CC JUMP 0x1c9a <_putRData+0x1f2>;
    1b2a:	08 0a       	CC = R0 <= R1 (IU);
    1b2c:	08 14       	IF !CC JUMP 0x1b3c <_putRData+0x94> (BP);
    1b2e:	aa 60       	R2 = 0x15 (X);		/*		R2=0x15( 21) */
    1b30:	10 08       	CC = R0 == R2;
    1b32:	7d 18       	IF CC JUMP 0x1c2c <_putRData+0x184>;
    1b34:	d3 60       	R3 = 0x1a (X);		/*		R3=0x1a( 26) */
    1b36:	18 08       	CC = R0 == R3;
    1b38:	de 15       	IF !CC JUMP 0x1ef4 <_putRData+0x44c> (BP);
    1b3a:	94 20       	JUMP.S 0x1c62 <_putRData+0x1ba>;
    1b3c:	e9 60       	R1 = 0x1d (X);		/*		R1=0x1d( 29) */
    1b3e:	08 08       	CC = R0 == R1;
    1b40:	6a 18       	IF CC JUMP 0x1c14 <_putRData+0x16c>;
    1b42:	0a 61       	R2 = 0x21 (X);		/*		R2=0x21( 33) */
    1b44:	10 08       	CC = R0 == R2;
    1b46:	d7 15       	IF !CC JUMP 0x1ef4 <_putRData+0x44c> (BP);
    1b48:	b8 20       	JUMP.S 0x1cb8 <_putRData+0x210>;
    1b4a:	7b 61       	R3 = 0x2f (X);		/*		R3=0x2f( 47) */
    1b4c:	18 08       	CC = R0 == R3;
    1b4e:	a8 19       	IF CC JUMP 0x1e9e <_putRData+0x3f6>;
    1b50:	18 0a       	CC = R0 <= R3 (IU);
    1b52:	08 14       	IF !CC JUMP 0x1b62 <_putRData+0xba> (BP);
    1b54:	39 61       	R1 = 0x27 (X);		/*		R1=0x27( 39) */
    1b56:	08 08       	CC = R0 == R1;
    1b58:	29 18       	IF CC JUMP 0x1baa <_putRData+0x102>;
    1b5a:	4a 61       	R2 = 0x29 (X);		/*		R2=0x29( 41) */
    1b5c:	10 08       	CC = R0 == R2;
    1b5e:	cb 15       	IF !CC JUMP 0x1ef4 <_putRData+0x44c> (BP);
    1b60:	d9 20       	JUMP.S 0x1d12 <_putRData+0x26a>;
    1b62:	8b 61       	R3 = 0x31 (X);		/*		R3=0x31( 49) */
    1b64:	18 08       	CC = R0 == R3;
    1b66:	57 18       	IF CC JUMP 0x1c14 <_putRData+0x16c>;
    1b68:	21 e1 fa 00 	R1 = 0xfa (X);		/*		R1=0xfa(250) */
    1b6c:	08 08       	CC = R0 == R1;
    1b6e:	c3 15       	IF !CC JUMP 0x1ef4 <_putRData+0x44c> (BP);
    1b70:	52 20       	JUMP.S 0x1c14 <_putRData+0x16c>;
    1b72:	a0 a5       	R0 = W[P4 + 0xc] (Z);
    1b74:	22 60       	R2 = 0x4 (X);		/*		R2=0x4(  4) */
    1b76:	10 08       	CC = R0 == R2;
    1b78:	cb 15       	IF !CC JUMP 0x1f0e <_putRData+0x466> (BP);
    1b7a:	47 30       	R0 = FP;
    1b7c:	20 64       	R0 += 0x4;		/* (  4) */
    1b7e:	87 09       	CC = R7 < R0 (IU);
    1b80:	c7 1d       	IF CC JUMP 0x1f0e <_putRData+0x466> (BP);
    1b82:	90 e5 04 00 	R0 = B[P2 + 0x4] (X);
    1b86:	57 32       	P2 = FP;
    1b88:	10 9a       	B[P2++] = R0;
    1b8a:	a8 e5 01 00 	R0 = B[P5 + 0x1] (X);
    1b8e:	b8 e6 01 00 	B[FP + 0x1] = R0;
    1b92:	a8 e5 02 00 	R0 = B[P5 + 0x2] (X);
    1b96:	90 e6 01 00 	B[P2 + 0x1] = R0;
    1b9a:	62 32       	P4 = P2;
    1b9c:	0c 6c       	P4 += 0x1;		/* (  1) */
    1b9e:	a8 e5 03 00 	R0 = B[P5 + 0x3] (X);
    1ba2:	a0 e6 01 00 	B[P4 + 0x1] = R0;
    1ba6:	14 6c       	P4 += 0x2;		/* (  2) */
    1ba8:	b4 21       	JUMP.S 0x1f10 <_putRData+0x468>;
    1baa:	f5 bf       	[SP + 0x3c] = P5;
    1bac:	43 30       	R0 = P3;
    1bae:	4f 30       	R1 = FP;
    1bb0:	aa 20       	JUMP.S 0x1d04 <_putRData+0x25c>;
    1bb2:	f5 bc       	[SP + 0xc] = P5;
    1bb4:	43 30       	R0 = P3;
    1bb6:	4f 30       	R1 = FP;
    1bb8:	17 30       	R2 = R7;
    1bba:	ff e3 f9 fe 	CALL 0x19ac <_putDomainNameAsLabels>;
    1bbe:	20 32       	P4 = R0;
    1bc0:	44 0c       	CC = P4 == 0x0;
    1bc2:	a7 1d       	IF CC JUMP 0x1f10 <_putRData+0x468> (BP);
    1bc4:	2a e1 00 01 	P2 = 0x100 (X);		/*		P2=0x100(256) */
    1bc8:	95 5a       	P2 = P5 + P2;
    1bca:	4c 30       	R1 = P4;
    1bcc:	f2 bc       	[SP + 0xc] = P2;
    1bce:	43 30       	R0 = P3;
    1bd0:	17 30       	R2 = R7;
    1bd2:	ff e3 ed fe 	CALL 0x19ac <_putDomainNameAsLabels>;
    1bd6:	20 32       	P4 = R0;
    1bd8:	44 0c       	CC = P4 == 0x0;
    1bda:	9b 1d       	IF CC JUMP 0x1f10 <_putRData+0x468> (BP);
    1bdc:	a0 64       	R0 += 0x14;		/* ( 20) */
    1bde:	87 09       	CC = R7 < R0 (IU);
    1be0:	97 1d       	IF CC JUMP 0x1f0e <_putRData+0x466> (BP);
    1be2:	29 e4 80 00 	R1 = [P5 + 0x200];
    1be6:	44 30       	R0 = P4;
    1be8:	ff e3 0c f2 	CALL 0x0 <_putVal32>;
    1bec:	29 e4 81 00 	R1 = [P5 + 0x204];
    1bf0:	ff e3 08 f2 	CALL 0x0 <_putVal32>;
    1bf4:	29 e4 82 00 	R1 = [P5 + 0x208];
    1bf8:	ff e3 04 f2 	CALL 0x0 <_putVal32>;
    1bfc:	29 e4 83 00 	R1 = [P5 + 0x20c];
    1c00:	ff e3 00 f2 	CALL 0x0 <_putVal32>;
    1c04:	86 6c       	SP += 0x10;		/* ( 16) */
    1c06:	77 90       	FP = [SP++];
    1c08:	29 e4 84 00 	R1 = [P5 + 0x210];
    1c0c:	27 01       	RETS = [SP++];
    1c0e:	ab 05       	(R7:5, P5:3) = [SP++];
    1c10:	ff e2 f8 f1 	JUMP.L 0x0 <_putVal32>;
    1c14:	5f 30       	R3 = FP;
    1c16:	a2 a5       	R2 = W[P4 + 0xc] (Z);
    1c18:	13 50       	R0 = R3 + R2;
    1c1a:	87 09       	CC = R7 < R0 (IU);
    1c1c:	79 1d       	IF CC JUMP 0x1f0e <_putRData+0x466> (BP);
    1c1e:	47 30       	R0 = FP;
    1c20:	4d 30       	R1 = P5;
    1c22:	ff e3 ef f1 	CALL 0x0 <_putVal32>;
    1c26:	a0 a5       	R0 = W[P4 + 0xc] (Z);
    1c28:	20 32       	P4 = R0;
    1c2a:	70 21       	JUMP.S 0x1f0a <_putRData+0x462>;
    1c2c:	47 30       	R0 = FP;
    1c2e:	18 64       	R0 += 0x3;		/* (  3) */
    1c30:	87 09       	CC = R7 < R0 (IU);
    1c32:	6e 1d       	IF CC JUMP 0x1f0e <_putRData+0x466> (BP);
    1c34:	91 e5 05 00 	R1 = B[P2 + 0x5] (X);
    1c38:	90 a8       	R0 = W[P2 + 0x4] (X);
    1c3a:	39 9b       	B[FP] = R1;
    1c3c:	b8 e6 01 00 	B[FP + 0x1] = R0;
    1c40:	4f 30       	R1 = FP;
    1c42:	15 6c       	P5 += 0x2;		/* (  2) */
    1c44:	11 64       	R1 += 0x2;		/* (  2) */
    1c46:	f5 bf       	[SP + 0x3c] = P5;
    1c48:	5d 20       	JUMP.S 0x1d02 <_putRData+0x25a>;
    1c4a:	f5 bc       	[SP + 0xc] = P5;
    1c4c:	43 30       	R0 = P3;
    1c4e:	4f 30       	R1 = FP;
    1c50:	17 30       	R2 = R7;
    1c52:	ff e3 ad fe 	CALL 0x19ac <_putDomainNameAsLabels>;
    1c56:	20 32       	P4 = R0;
    1c58:	44 0c       	CC = P4 == 0x0;
    1c5a:	5b 19       	IF CC JUMP 0x1f10 <_putRData+0x468>;
    1c5c:	2a e1 00 01 	P2 = 0x100 (X);		/*		P2=0x100(256) */
    1c60:	18 20       	JUMP.S 0x1c90 <_putRData+0x1e8>;
    1c62:	47 30       	R0 = FP;
    1c64:	28 64       	R0 += 0x5;		/* (  5) */
    1c66:	87 09       	CC = R7 < R0 (IU);
    1c68:	53 1d       	IF CC JUMP 0x1f0e <_putRData+0x466> (BP);
    1c6a:	90 a8       	R0 = W[P2 + 0x4] (X);
    1c6c:	91 e5 05 00 	R1 = B[P2 + 0x5] (X);
    1c70:	39 9b       	B[FP] = R1;
    1c72:	b8 e6 01 00 	B[FP + 0x1] = R0;
    1c76:	32 6c       	P2 += 0x6;		/* (  6) */
    1c78:	4f 30       	R1 = FP;
    1c7a:	11 64       	R1 += 0x2;		/* (  2) */
    1c7c:	f2 bc       	[SP + 0xc] = P2;
    1c7e:	43 30       	R0 = P3;
    1c80:	17 30       	R2 = R7;
    1c82:	ff e3 95 fe 	CALL 0x19ac <_putDomainNameAsLabels>;
    1c86:	20 32       	P4 = R0;
    1c88:	44 0c       	CC = P4 == 0x0;
    1c8a:	43 19       	IF CC JUMP 0x1f10 <_putRData+0x468>;
    1c8c:	2a e1 02 01 	P2 = 0x102 (X);		/*		P2=0x102(258) */
    1c90:	55 5b       	P5 = P5 + P2;
    1c92:	f5 bf       	[SP + 0x3c] = P5;
    1c94:	43 30       	R0 = P3;
    1c96:	4c 30       	R1 = P4;
    1c98:	36 20       	JUMP.S 0x1d04 <_putRData+0x25c>;
    1c9a:	a0 a5       	R0 = W[P4 + 0xc] (Z);
    1c9c:	81 60       	R1 = 0x10 (X);		/*		R1=0x10( 16) */
    1c9e:	08 08       	CC = R0 == R1;
    1ca0:	37 15       	IF !CC JUMP 0x1f0e <_putRData+0x466> (BP);
    1ca2:	67 32       	P4 = FP;
    1ca4:	84 6c       	P4 += 0x10;		/* ( 16) */
    1ca6:	54 30       	R2 = P4;
    1ca8:	3a 0a       	CC = R2 <= R7 (IU);
    1caa:	32 15       	IF !CC JUMP 0x1f0e <_putRData+0x466> (BP);
    1cac:	47 30       	R0 = FP;
    1cae:	4d 30       	R1 = P5;
    1cb0:	82 60       	R2 = 0x10 (X);		/*		R2=0x10( 16) */
    1cb2:	ff e3 a7 f1 	CALL 0x0 <_putVal32>;
    1cb6:	2d 21       	JUMP.S 0x1f10 <_putRData+0x468>;
    1cb8:	47 30       	R0 = FP;
    1cba:	38 64       	R0 += 0x7;		/* (  7) */
    1cbc:	87 09       	CC = R7 < R0 (IU);
    1cbe:	28 1d       	IF CC JUMP 0x1f0e <_putRData+0x466> (BP);
    1cc0:	90 e5 05 00 	R0 = B[P2 + 0x5] (X);
    1cc4:	4f 32       	P1 = FP;
    1cc6:	08 9a       	B[P1++] = R0;
    1cc8:	90 e5 04 00 	R0 = B[P2 + 0x4] (X);
    1ccc:	b8 e6 01 00 	B[FP + 0x1] = R0;
    1cd0:	a8 e5 03 00 	R0 = B[P5 + 0x3] (X);
    1cd4:	88 e6 01 00 	B[P1 + 0x1] = R0;
    1cd8:	61 32       	P4 = P1;
    1cda:	a8 e5 02 00 	R0 = B[P5 + 0x2] (X);
    1cde:	0c 6c       	P4 += 0x1;		/* (  1) */
    1ce0:	a0 e6 01 00 	B[P4 + 0x1] = R0;
    1ce4:	44 32       	P0 = P4;
    1ce6:	a8 e5 04 00 	R0 = B[P5 + 0x4] (X);
    1cea:	08 6c       	P0 += 0x1;		/* (  1) */
    1cec:	80 e6 01 00 	B[P0 + 0x1] = R0;
    1cf0:	19 6c       	P1 += 0x3;		/* (  3) */
    1cf2:	a8 e5 05 00 	R0 = B[P5 + 0x5] (X);
    1cf6:	88 e6 01 00 	B[P1 + 0x1] = R0;
    1cfa:	49 30       	R1 = P1;
    1cfc:	52 6c       	P2 += 0xa;		/* ( 10) */
    1cfe:	11 64       	R1 += 0x2;		/* (  2) */
    1d00:	f2 bf       	[SP + 0x3c] = P2;
    1d02:	43 30       	R0 = P3;
    1d04:	86 6c       	SP += 0x10;		/* ( 16) */
    1d06:	77 90       	FP = [SP++];
    1d08:	17 30       	R2 = R7;
    1d0a:	27 01       	RETS = [SP++];
    1d0c:	ab 05       	(R7:5, P5:3) = [SP++];
    1d0e:	ff e2 4f fe 	JUMP.L 0x19ac <_putDomainNameAsLabels>;
    1d12:	a6 a5       	R6 = W[P4 + 0xc] (Z);
    1d14:	5d 30       	R3 = P5;
    1d16:	b3 51       	R6 = R3 + R6;
    1d18:	5d 32       	P3 = P5;
    1d1a:	55 32       	P2 = P5;
    1d1c:	00 68       	P0 = 0x0 (X);		/*		P0=0x0(  0) */
    1d1e:	92 60       	R2 = 0x12 (X);		/*		R2=0x12( 18) */
    1d20:	61 60       	R1 = 0xc (X);		/*		R1=0xc( 12) */
    1d22:	20 20       	JUMP.S 0x1d62 <_putRData+0x2ba>;
    1d24:	00 00       	NOP;
    1d26:	10 95       	R0 = W[P2] (Z);
    1d28:	08 0c       	CC = R0 == 0x1;
    1d2a:	10 18       	IF CC JUMP 0x1d4a <_putRData+0x2a2>;
    1d2c:	10 0c       	CC = R0 == 0x2;
    1d2e:	10 18       	IF CC JUMP 0x1d4e <_putRData+0x2a6>;
    1d30:	23 60       	R3 = 0x4 (X);		/*		R3=0x4(  4) */
    1d32:	18 08       	CC = R0 == R3;
    1d34:	0f 14       	IF !CC JUMP 0x1d52 <_putRData+0x2aa> (BP);
    1d36:	93 a0       	R3 = [P2 + 0x8];
    1d38:	10 a1       	R0 = [P2 + 0x10];
    1d3a:	03 08       	CC = R3 == R0;
    1d3c:	10 14       	IF !CC JUMP 0x1d5c <_putRData+0x2b4> (BP);
    1d3e:	93 a5       	R3 = W[P2 + 0xc] (Z);
    1d40:	90 a6       	R0 = W[P2 + 0x14] (Z);
    1d42:	03 08       	CC = R3 == R0;
    1d44:	89 07       	IF CC P1 = R1;
    1d46:	8a 06       	IF !CC P1 = R2;
    1d48:	0b 20       	JUMP.S 0x1d5e <_putRData+0x2b6>;
    1d4a:	b1 68       	P1 = 0x16 (X);		/*		P1=0x16( 22) */
    1d4c:	09 20       	JUMP.S 0x1d5e <_putRData+0x2b6>;
    1d4e:	41 68       	P1 = 0x8 (X);		/*		P1=0x8(  8) */
    1d50:	07 20       	JUMP.S 0x1d5e <_putRData+0x2b6>;
    1d52:	49 e1 01 00 	P1.H = 0x1;		/* (  1)	P1=0x10008 */
    1d56:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x10000 */
    1d5a:	02 20       	JUMP.S 0x1d5e <_putRData+0x2b6>;
    1d5c:	91 68       	P1 = 0x12 (X);		/*		P1=0x12( 18) */
    1d5e:	08 5a       	P0 = P0 + P1;
    1d60:	02 6d       	P2 += 0x20;		/* ( 32) */
    1d62:	42 30       	R0 = P2;
    1d64:	b0 09       	CC = R0 < R6 (IU);
    1d66:	df 1f       	IF CC JUMP 0x1d24 <_putRData+0x27c> (BP);
    1d68:	07 5a       	P0 = FP + P0;
    1d6a:	48 30       	R1 = P0;
    1d6c:	8f 09       	CC = R7 < R1 (IU);
    1d6e:	05 18       	IF CC JUMP 0x1d78 <_putRData+0x2d0>;
    1d70:	67 32       	P4 = FP;
    1d72:	97 60       	R7 = 0x12 (X);		/*		R7=0x12( 18) */
    1d74:	65 60       	R5 = 0xc (X);		/*		R5=0xc( 12) */
    1d76:	90 20       	JUMP.S 0x1e96 <_putRData+0x3ee>;
    1d78:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xc( 12) */
    1d7c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1d7e:	01 e1 10 06 	R1.L = 0x610;		/* (1552)	R1=0x610(1552) */
    1d82:	ff e3 3f f1 	CALL 0x0 <_putVal32>;
    1d86:	c4 20       	JUMP.S 0x1f0e <_putRData+0x466>;
    1d88:	00 00       	NOP;
    1d8a:	18 95       	R0 = W[P3] (Z);
    1d8c:	c1 42       	R1 = R0.L (Z);
    1d8e:	09 0c       	CC = R1 == 0x1;
    1d90:	10 18       	IF CC JUMP 0x1db0 <_putRData+0x308>;
    1d92:	11 0c       	CC = R1 == 0x2;
    1d94:	10 18       	IF CC JUMP 0x1db4 <_putRData+0x30c>;
    1d96:	22 60       	R2 = 0x4 (X);		/*		R2=0x4(  4) */
    1d98:	11 08       	CC = R1 == R2;
    1d9a:	0f 14       	IF !CC JUMP 0x1db8 <_putRData+0x310> (BP);
    1d9c:	9a a0       	R2 = [P3 + 0x8];
    1d9e:	19 a1       	R1 = [P3 + 0x10];
    1da0:	0a 08       	CC = R2 == R1;
    1da2:	10 14       	IF !CC JUMP 0x1dc2 <_putRData+0x31a> (BP);
    1da4:	9a a5       	R2 = W[P3 + 0xc] (Z);
    1da6:	99 a6       	R1 = W[P3 + 0x14] (Z);
    1da8:	0a 08       	CC = R2 == R1;
    1daa:	ad 07       	IF CC P5 = R5;
    1dac:	af 06       	IF !CC P5 = R7;
    1dae:	0b 20       	JUMP.S 0x1dc4 <_putRData+0x31c>;
    1db0:	b5 68       	P5 = 0x16 (X);		/*		P5=0x16( 22) */
    1db2:	09 20       	JUMP.S 0x1dc4 <_putRData+0x31c>;
    1db4:	45 68       	P5 = 0x8 (X);		/*		P5=0x8(  8) */
    1db6:	07 20       	JUMP.S 0x1dc4 <_putRData+0x31c>;
    1db8:	4d e1 01 00 	P5.H = 0x1;		/* (  1)	P5=0x10008 */
    1dbc:	0d e1 00 00 	P5.L = 0x0;		/* (  0)	P5=0x10000 */
    1dc0:	02 20       	JUMP.S 0x1dc4 <_putRData+0x31c>;
    1dc2:	95 68       	P5 = 0x12 (X);		/*		P5=0x12( 18) */
    1dc4:	a0 e6 01 00 	B[P4 + 0x1] = R0;
    1dc8:	c1 42       	R1 = R0.L (Z);
    1dca:	41 4e       	R1 >>= 0x8;
    1dcc:	45 30       	R0 = P5;
    1dce:	21 9b       	B[P4] = R1;
    1dd0:	e0 67       	R0 += -0x4;		/* ( -4) */
    1dd2:	c1 42       	R1 = R0.L (Z);
    1dd4:	7c 32       	FP = P4;
    1dd6:	41 4e       	R1 >>= 0x8;
    1dd8:	a1 e6 02 00 	B[P4 + 0x2] = R1;
    1ddc:	17 6c       	FP += 0x2;		/* (  2) */
    1dde:	b8 e6 01 00 	B[FP + 0x1] = R0;
    1de2:	18 95       	R0 = W[P3] (Z);
    1de4:	24 6c       	P4 += 0x4;		/* (  4) */
    1de6:	10 0c       	CC = R0 == 0x2;
    1de8:	2a 18       	IF CC JUMP 0x1e3c <_putRData+0x394>;
    1dea:	23 60       	R3 = 0x4 (X);		/*		R3=0x4(  4) */
    1dec:	18 08       	CC = R0 == R3;
    1dee:	2d 18       	IF CC JUMP 0x1e48 <_putRData+0x3a0>;
    1df0:	08 0c       	CC = R0 == 0x1;
    1df2:	51 14       	IF !CC JUMP 0x1e94 <_putRData+0x3ec> (BP);
    1df4:	98 a8       	R0 = W[P3 + 0x4] (X);
    1df6:	99 e5 05 00 	R1 = B[P3 + 0x5] (X);
    1dfa:	b9 e6 02 00 	B[FP + 0x2] = R1;
    1dfe:	a0 e6 01 00 	B[P4 + 0x1] = R0;
    1e02:	d8 a8       	R0 = W[P3 + 0x6] (X);
    1e04:	99 e5 07 00 	R1 = B[P3 + 0x7] (X);
    1e08:	6c 32       	P5 = P4;
    1e0a:	a1 e6 02 00 	B[P4 + 0x2] = R1;
    1e0e:	15 6c       	P5 += 0x2;		/* (  2) */
    1e10:	a8 e6 01 00 	B[P5 + 0x1] = R0;
    1e14:	18 a9       	R0 = W[P3 + 0x8] (X);
    1e16:	99 e5 09 00 	R1 = B[P3 + 0x9] (X);
    1e1a:	55 32       	P2 = P5;
    1e1c:	12 6c       	P2 += 0x2;		/* (  2) */
    1e1e:	a9 e6 02 00 	B[P5 + 0x2] = R1;
    1e22:	90 e6 01 00 	B[P2 + 0x1] = R0;
    1e26:	42 30       	R0 = P2;
    1e28:	4b 30       	R1 = P3;
    1e2a:	10 64       	R0 += 0x2;		/* (  2) */
    1e2c:	61 64       	R1 += 0xc;		/* ( 12) */
    1e2e:	42 60       	R2 = 0x8 (X);		/*		R2=0x8(  8) */
    1e30:	ff e3 e8 f0 	CALL 0x0 <_putVal32>;
    1e34:	45 30       	R0 = P5;
    1e36:	60 64       	R0 += 0xc;		/* ( 12) */
    1e38:	59 a1       	R1 = [P3 + 0x14];
    1e3a:	03 20       	JUMP.S 0x1e40 <_putRData+0x398>;
    1e3c:	59 a0       	R1 = [P3 + 0x4];
    1e3e:	44 30       	R0 = P4;
    1e40:	ff e3 e0 f0 	CALL 0x0 <_putVal32>;
    1e44:	20 32       	P4 = R0;
    1e46:	27 20       	JUMP.S 0x1e94 <_putRData+0x3ec>;
    1e48:	98 e5 04 00 	R0 = B[P3 + 0x4] (X);
    1e4c:	b8 e6 02 00 	B[FP + 0x2] = R0;
    1e50:	98 e5 05 00 	R0 = B[P3 + 0x5] (X);
    1e54:	b8 e6 03 00 	B[FP + 0x3] = R0;
    1e58:	47 30       	R0 = FP;
    1e5a:	4b 30       	R1 = P3;
    1e5c:	20 64       	R0 += 0x4;		/* (  4) */
    1e5e:	41 64       	R1 += 0x8;		/* (  8) */
    1e60:	32 60       	R2 = 0x6 (X);		/*		R2=0x6(  6) */
    1e62:	ff e3 cf f0 	CALL 0x0 <_putVal32>;
    1e66:	67 32       	P4 = FP;
    1e68:	8a 68       	P2 = 0x11 (X);		/*		P2=0x11( 17) */
    1e6a:	54 6c       	P4 += 0xa;		/* ( 10) */
    1e6c:	55 09       	CC = P5 <= P2;
    1e6e:	13 1c       	IF CC JUMP 0x1e94 <_putRData+0x3ec> (BP);
    1e70:	4b 30       	R1 = P3;
    1e72:	44 30       	R0 = P4;
    1e74:	81 64       	R1 += 0x10;		/* ( 16) */
    1e76:	32 60       	R2 = 0x6 (X);		/*		R2=0x6(  6) */
    1e78:	ff e3 c4 f0 	CALL 0x0 <_putVal32>;
    1e7c:	92 68       	P2 = 0x12 (X);		/*		P2=0x12( 18) */
    1e7e:	34 6c       	P4 += 0x6;		/* (  6) */
    1e80:	55 08       	CC = P5 == P2;
    1e82:	09 1c       	IF CC JUMP 0x1e94 <_putRData+0x3ec> (BP);
    1e84:	75 6f       	P5 += -0x12;		/* (-18) */
    1e86:	4b 30       	R1 = P3;
    1e88:	44 30       	R0 = P4;
    1e8a:	c1 64       	R1 += 0x18;		/* ( 24) */
    1e8c:	55 30       	R2 = P5;
    1e8e:	ff e3 b9 f0 	CALL 0x0 <_putVal32>;
    1e92:	2c 5b       	P4 = P4 + P5;
    1e94:	03 6d       	P3 += 0x20;		/* ( 32) */
    1e96:	43 30       	R0 = P3;
    1e98:	b0 09       	CC = R0 < R6 (IU);
    1e9a:	77 1f       	IF CC JUMP 0x1d88 <_putRData+0x2e0> (BP);
    1e9c:	3a 20       	JUMP.S 0x1f10 <_putRData+0x468>;
    1e9e:	1a 6d       	P2 += 0x23;		/* ( 35) */
    1ea0:	06 61       	R6 = 0x20 (X);		/*		R6=0x20( 32) */
    1ea2:	01 69       	P1 = 0x20 (X);		/*		P1=0x20( 32) */
    1ea4:	b2 e0 05 10 	LSETUP(0x1ea8 <_putRData+0x400>, 0x1eae <_putRData+0x406>) LC1 = P1;
    1ea8:	90 98       	R0 = B[P2--] (Z);
    1eaa:	00 0c       	CC = R0 == 0x0;
    1eac:	02 14       	IF !CC JUMP 0x1eb0 <_putRData+0x408> (BP);
    1eae:	fe 67       	R6 += -0x1;		/* ( -1) */
    1eb0:	00 00       	NOP;
    1eb2:	e0 a1       	R0 = [P4 + 0x1c];
    1eb4:	f0 b0       	[SP + 0xc] = R0;
    1eb6:	43 30       	R0 = P3;
    1eb8:	4f 30       	R1 = FP;
    1eba:	17 30       	R2 = R7;
    1ebc:	ff e3 78 fd 	CALL 0x19ac <_putDomainNameAsLabels>;
    1ec0:	20 32       	P4 = R0;
    1ec2:	44 0c       	CC = P4 == 0x0;
    1ec4:	26 18       	IF CC JUMP 0x1f10 <_putRData+0x468>;
    1ec6:	06 0c       	CC = R6 == 0x0;
    1ec8:	24 1c       	IF CC JUMP 0x1f10 <_putRData+0x468> (BP);
    1eca:	16 32       	P2 = R6;
    1ecc:	12 6c       	P2 += 0x2;		/* (  2) */
    1ece:	94 5a       	P2 = P4 + P2;
    1ed0:	42 30       	R0 = P2;
    1ed2:	87 09       	CC = R7 < R0 (IU);
    1ed4:	1d 18       	IF CC JUMP 0x1f0e <_putRData+0x466>;
    1ed6:	54 32       	P2 = P4;
    1ed8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1eda:	10 9a       	B[P2++] = R0;
    1edc:	a6 e6 01 00 	B[P4 + 0x1] = R6;
    1ee0:	62 32       	P4 = P2;
    1ee2:	0c 6c       	P4 += 0x1;		/* (  1) */
    1ee4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1ee6:	04 20       	JUMP.S 0x1eee <_putRData+0x446>;
    1ee8:	08 64       	R0 += 0x1;		/* (  1) */
    1eea:	69 98       	R1 = B[P5++] (X);
    1eec:	21 9a       	B[P4++] = R1;
    1eee:	b0 08       	CC = R0 < R6;
    1ef0:	fc 1f       	IF CC JUMP 0x1ee8 <_putRData+0x440> (BP);
    1ef2:	0f 20       	JUMP.S 0x1f10 <_putRData+0x468>;
    1ef4:	4f 30       	R1 = FP;
    1ef6:	a2 a5       	R2 = W[P4 + 0xc] (Z);
    1ef8:	11 50       	R0 = R1 + R2;
    1efa:	87 09       	CC = R7 < R0 (IU);
    1efc:	09 1c       	IF CC JUMP 0x1f0e <_putRData+0x466> (BP);
    1efe:	47 30       	R0 = FP;
    1f00:	4d 30       	R1 = P5;
    1f02:	ff e3 7f f0 	CALL 0x0 <_putVal32>;
    1f06:	a2 a5       	R2 = W[P4 + 0xc] (Z);
    1f08:	22 32       	P4 = R2;
    1f0a:	27 5b       	P4 = FP + P4;
    1f0c:	02 20       	JUMP.S 0x1f10 <_putRData+0x468>;
    1f0e:	04 68       	P4 = 0x0 (X);		/*		P4=0x0(  0) */
    1f10:	86 6c       	SP += 0x10;		/* ( 16) */
    1f12:	77 90       	FP = [SP++];
    1f14:	44 30       	R0 = P4;
    1f16:	27 01       	RETS = [SP++];
    1f18:	ab 05       	(R7:5, P5:3) = [SP++];
    1f1a:	10 00       	RTS;

00001f1c <_putQuestion>:
_putQuestion():
    1f1c:	ed 05       	[--SP] = (R7:5, P5:5);
    1f1e:	28 32       	P5 = R0;
    1f20:	67 01       	[--SP] = RETS;
    1f22:	86 6f       	SP += -0x10;		/* (-16) */
    1f24:	30 a3       	R0 = [SP + 0x30];
    1f26:	f0 b0       	[SP + 0xc] = R0;
    1f28:	3a 30       	R7 = R2;
    1f2a:	76 e5 1a 00 	R6 = W[SP + 0x34] (X);
    1f2e:	75 e5 1c 00 	R5 = W[SP + 0x38] (X);
    1f32:	45 30       	R0 = P5;
    1f34:	ff e3 3c fd 	CALL 0x19ac <_putDomainNameAsLabels>;
    1f38:	10 32       	P2 = R0;
    1f3a:	42 0c       	CC = P2 == 0x0;
    1f3c:	13 1c       	IF CC JUMP 0x1f62 <_putQuestion+0x46> (BP);
    1f3e:	20 64       	R0 += 0x4;		/* (  4) */
    1f40:	b8 09       	CC = R0 < R7 (IU);
    1f42:	10 10       	IF !CC JUMP 0x1f62 <_putQuestion+0x46>;
    1f44:	f1 42       	R1 = R6.L (Z);
    1f46:	41 4e       	R1 >>= 0x8;
    1f48:	11 9b       	B[P2] = R1;
    1f4a:	e9 42       	R1 = R5.L (Z);
    1f4c:	41 4e       	R1 >>= 0x8;
    1f4e:	96 e6 01 00 	B[P2 + 0x1] = R6;
    1f52:	91 e6 02 00 	B[P2 + 0x2] = R1;
    1f56:	95 e6 03 00 	B[P2 + 0x3] = R5;
    1f5a:	a9 a8       	R1 = W[P5 + 0x4] (X);
    1f5c:	09 64       	R1 += 0x1;		/* (  1) */
    1f5e:	a9 b4       	W[P5 + 0x4] = R1;
    1f60:	02 20       	JUMP.S 0x1f64 <_putQuestion+0x48>;
    1f62:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1f64:	86 6c       	SP += 0x10;		/* ( 16) */
    1f66:	27 01       	RETS = [SP++];
    1f68:	ad 05       	(R7:5, P5:5) = [SP++];
    1f6a:	10 00       	RTS;

00001f6c <_putZone>:
_putZone():
    1f6c:	f5 05       	[--SP] = (R7:6, P5:5);
    1f6e:	28 32       	P5 = R0;
    1f70:	67 01       	[--SP] = RETS;
    1f72:	86 6f       	SP += -0x10;		/* (-16) */
    1f74:	f0 a2       	R0 = [SP + 0x2c];
    1f76:	f0 b0       	[SP + 0xc] = R0;
    1f78:	3a 30       	R7 = R2;
    1f7a:	76 e5 18 00 	R6 = W[SP + 0x30] (X);
    1f7e:	45 30       	R0 = P5;
    1f80:	ff e3 16 fd 	CALL 0x19ac <_putDomainNameAsLabels>;
    1f84:	00 0c       	CC = R0 == 0x0;
    1f86:	1b 1c       	IF CC JUMP 0x1fbc <_putZone+0x50> (BP);
    1f88:	08 30       	R1 = R0;
    1f8a:	21 64       	R1 += 0x4;		/* (  4) */
    1f8c:	8f 09       	CC = R7 < R1 (IU);
    1f8e:	16 18       	IF CC JUMP 0x1fba <_putZone+0x4e>;
    1f90:	10 32       	P2 = R0;
    1f92:	08 32       	P1 = R0;
    1f94:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    1f96:	11 9a       	B[P2++] = R1;
    1f98:	31 60       	R1 = 0x6 (X);		/*		R1=0x6(  6) */
    1f9a:	89 e6 01 00 	B[P1 + 0x1] = R1;
    1f9e:	96 e6 01 00 	B[P2 + 0x1] = R6;
    1fa2:	4a 32       	P1 = P2;
    1fa4:	f6 42       	R6 = R6.L (Z);
    1fa6:	09 6c       	P1 += 0x1;		/* (  1) */
    1fa8:	46 4e       	R6 >>= 0x8;
    1faa:	8e e6 01 00 	B[P1 + 0x1] = R6;
    1fae:	a9 a8       	R1 = W[P5 + 0x4] (X);
    1fb0:	41 30       	R0 = P1;
    1fb2:	09 64       	R1 += 0x1;		/* (  1) */
    1fb4:	10 64       	R0 += 0x2;		/* (  2) */
    1fb6:	a9 b4       	W[P5 + 0x4] = R1;
    1fb8:	02 20       	JUMP.S 0x1fbc <_putZone+0x50>;
    1fba:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1fbc:	86 6c       	SP += 0x10;		/* ( 16) */
    1fbe:	27 01       	RETS = [SP++];
    1fc0:	b5 05       	(R7:6, P5:5) = [SP++];
    1fc2:	10 00       	RTS;

00001fc4 <_putPrereqNameNotInUse>:
_putPrereqNameNotInUse():
    1fc4:	e4 05       	[--SP] = (R7:4, P5:4);
    1fc6:	67 01       	[--SP] = RETS;
    1fc8:	29 e1 68 fc 	P1 = -0x398 (X);		/*		P1=0xfffffc68(-920) */
    1fcc:	38 30       	R7 = R0;
    1fce:	8e 5b       	SP = SP + P1;
    1fd0:	20 e1 ff 00 	R0 = 0xff (X);		/*		R0=0xff(255) */
    1fd4:	b0 b5       	W[SP + 0xc] = R0;
    1fd6:	20 e1 94 11 	R0 = 0x1194 (X);		/*		R0=0x1194(4500) */
    1fda:	30 b1       	[SP + 0x10] = R0;
    1fdc:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1fde:	66 32       	P4 = SP;
    1fe0:	b0 b1       	[SP + 0x18] = R0;
    1fe2:	f0 b1       	[SP + 0x1c] = R0;
    1fe4:	30 b2       	[SP + 0x20] = R0;
    1fe6:	29 32       	P5 = R1;
    1fe8:	22 30       	R4 = R2;
    1fea:	24 6d       	P4 += 0x24;		/* ( 36) */
    1fec:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
    1fee:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    1ff0:	44 30       	R0 = P4;
    1ff2:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    1ff4:	35 e4 f0 00 	R5 = [SP + 0x3c0];
    1ff8:	b6 e6 14 00 	B[SP + 0x14] = R6;
    1ffc:	ff e3 ac f7 	CALL 0xf54 <_mDNS_SetupResourceRecord>;
    2000:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    2004:	4f 50       	R1 = R7 + R1;
    2006:	07 30       	R0 = R7;
    2008:	ff e3 98 f1 	CALL 0x338 <_DomainNameLengthLimit>;
    200c:	c2 42       	R2 = R0.L (Z);
    200e:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    2012:	02 0a       	CC = R2 <= R0 (IU);
    2014:	09 14       	IF !CC JUMP 0x2026 <_putPrereqNameNotInUse+0x62> (BP);
    2016:	4e 30       	R1 = SP;
    2018:	23 e1 8c 01 	R3 = 0x18c (X);		/*		R3=0x18c(396) */
    201c:	19 50       	R0 = R1 + R3;
    201e:	0f 30       	R1 = R7;
    2020:	ff e3 f0 ef 	CALL 0x0 <_putVal32>;
    2024:	03 20       	JUMP.S 0x202a <_putPrereqNameNotInUse+0x66>;
    2026:	b6 e6 8c 01 	B[SP + 0x18c] = R6;
    202a:	20 e1 ff 00 	R0 = 0xff (X);		/*		R0=0xff(255) */
    202e:	70 e6 15 00 	W[SP + 0x2a] = R0;
    2032:	20 e1 fe 00 	R0 = 0xfe (X);		/*		R0=0xfe(254) */
    2036:	70 e6 16 00 	W[SP + 0x2c] = R0;
    203a:	30 e4 11 00 	R0 = [SP + 0x44];
    203e:	f0 b0       	[SP + 0xc] = R0;
    2040:	45 30       	R0 = P5;
    2042:	0c 30       	R1 = R4;
    2044:	15 30       	R2 = R5;
    2046:	ff e3 b3 fc 	CALL 0x19ac <_putDomainNameAsLabels>;
    204a:	10 32       	P2 = R0;
    204c:	42 0c       	CC = P2 == 0x0;
    204e:	24 1c       	IF CC JUMP 0x2096 <_putPrereqNameNotInUse+0xd2> (BP);
    2050:	50 64       	R0 += 0xa;		/* ( 10) */
    2052:	28 0a       	CC = R0 <= R5 (IU);
    2054:	21 10       	IF !CC JUMP 0x2096 <_putPrereqNameNotInUse+0xd2>;
    2056:	b1 e5 2b 00 	R1 = B[SP + 0x2b] (X);
    205a:	11 9b       	B[P2] = R1;
    205c:	b1 e5 2a 00 	R1 = B[SP + 0x2a] (X);
    2060:	91 e6 01 00 	B[P2 + 0x1] = R1;
    2064:	b1 e5 2d 00 	R1 = B[SP + 0x2d] (X);
    2068:	91 e6 02 00 	B[P2 + 0x2] = R1;
    206c:	b1 e5 2c 00 	R1 = B[SP + 0x2c] (X);
    2070:	91 e6 03 00 	B[P2 + 0x3] = R1;
    2074:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    2076:	91 e6 07 00 	B[P2 + 0x7] = R1;
    207a:	91 e6 06 00 	B[P2 + 0x6] = R1;
    207e:	91 e6 05 00 	B[P2 + 0x5] = R1;
    2082:	91 e6 04 00 	B[P2 + 0x4] = R1;
    2086:	91 e6 09 00 	B[P2 + 0x9] = R1;
    208a:	91 e6 08 00 	B[P2 + 0x8] = R1;
    208e:	e9 a8       	R1 = W[P5 + 0x6] (X);
    2090:	09 64       	R1 += 0x1;		/* (  1) */
    2092:	e9 b4       	W[P5 + 0x6] = R1;
    2094:	02 20       	JUMP.S 0x2098 <_putPrereqNameNotInUse+0xd4>;
    2096:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2098:	29 e1 98 03 	P1 = 0x398 (X);		/*		P1=0x398(920) */
    209c:	8e 5b       	SP = SP + P1;
    209e:	27 01       	RETS = [SP++];
    20a0:	a4 05       	(R7:4, P5:4) = [SP++];
    20a2:	10 00       	RTS;

000020a4 <_putDeleteRRSetWithLimit>:
_putDeleteRRSetWithLimit():
    20a4:	f5 05       	[--SP] = (R7:6, P5:5);
    20a6:	67 01       	[--SP] = RETS;
    20a8:	86 6f       	SP += -0x10;		/* (-16) */
    20aa:	37 a3       	R7 = [SP + 0x30];
    20ac:	f2 b0       	[SP + 0xc] = R2;
    20ae:	28 32       	P5 = R0;
    20b0:	76 e5 16 00 	R6 = W[SP + 0x2c] (X);
    20b4:	17 30       	R2 = R7;
    20b6:	ff e3 7b fc 	CALL 0x19ac <_putDomainNameAsLabels>;
    20ba:	10 32       	P2 = R0;
    20bc:	42 0c       	CC = P2 == 0x0;
    20be:	1f 1c       	IF CC JUMP 0x20fc <_putDeleteRRSetWithLimit+0x58> (BP);
    20c0:	50 64       	R0 += 0xa;		/* ( 10) */
    20c2:	b8 09       	CC = R0 < R7 (IU);
    20c4:	1c 10       	IF !CC JUMP 0x20fc <_putDeleteRRSetWithLimit+0x58>;
    20c6:	f1 42       	R1 = R6.L (Z);
    20c8:	41 4e       	R1 >>= 0x8;
    20ca:	11 9b       	B[P2] = R1;
    20cc:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    20ce:	fa 63       	R2 = -0x1 (X);		/*		R2=0xffffffff( -1) */
    20d0:	96 e6 01 00 	B[P2 + 0x1] = R6;
    20d4:	91 e6 02 00 	B[P2 + 0x2] = R1;
    20d8:	92 e6 03 00 	B[P2 + 0x3] = R2;
    20dc:	91 e6 07 00 	B[P2 + 0x7] = R1;
    20e0:	91 e6 06 00 	B[P2 + 0x6] = R1;
    20e4:	91 e6 05 00 	B[P2 + 0x5] = R1;
    20e8:	91 e6 04 00 	B[P2 + 0x4] = R1;
    20ec:	91 e6 09 00 	B[P2 + 0x9] = R1;
    20f0:	91 e6 08 00 	B[P2 + 0x8] = R1;
    20f4:	29 a9       	R1 = W[P5 + 0x8] (X);
    20f6:	09 64       	R1 += 0x1;		/* (  1) */
    20f8:	29 b5       	W[P5 + 0x8] = R1;
    20fa:	02 20       	JUMP.S 0x20fe <_putDeleteRRSetWithLimit+0x5a>;
    20fc:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    20fe:	86 6c       	SP += 0x10;		/* ( 16) */
    2100:	27 01       	RETS = [SP++];
    2102:	b5 05       	(R7:6, P5:5) = [SP++];
    2104:	10 00       	RTS;
	...

00002108 <_putDeleteAllRRSets>:
_putDeleteAllRRSets():
    2108:	fd 05       	[--SP] = (R7:7, P5:5);
    210a:	28 32       	P5 = R0;
    210c:	67 01       	[--SP] = RETS;
    210e:	86 6f       	SP += -0x10;		/* (-16) */
    2110:	2a e1 f8 22 	P2 = 0x22f8 (X);		/*		P2=0x22f8(8952) */
    2114:	f2 b0       	[SP + 0xc] = R2;
    2116:	95 5a       	P2 = P5 + P2;
    2118:	7a 30       	R7 = P2;
    211a:	52 30       	R2 = P2;
    211c:	ff e3 48 fc 	CALL 0x19ac <_putDomainNameAsLabels>;
    2120:	10 32       	P2 = R0;
    2122:	42 0c       	CC = P2 == 0x0;
    2124:	1d 1c       	IF CC JUMP 0x215e <_putDeleteAllRRSets+0x56> (BP);
    2126:	50 64       	R0 += 0xa;		/* ( 10) */
    2128:	b8 09       	CC = R0 < R7 (IU);
    212a:	1a 10       	IF !CC JUMP 0x215e <_putDeleteAllRRSets+0x56>;
    212c:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    212e:	fa 63       	R2 = -0x1 (X);		/*		R2=0xffffffff( -1) */
    2130:	11 9b       	B[P2] = R1;
    2132:	92 e6 01 00 	B[P2 + 0x1] = R2;
    2136:	91 e6 02 00 	B[P2 + 0x2] = R1;
    213a:	92 e6 03 00 	B[P2 + 0x3] = R2;
    213e:	91 e6 07 00 	B[P2 + 0x7] = R1;
    2142:	91 e6 06 00 	B[P2 + 0x6] = R1;
    2146:	91 e6 05 00 	B[P2 + 0x5] = R1;
    214a:	91 e6 04 00 	B[P2 + 0x4] = R1;
    214e:	91 e6 09 00 	B[P2 + 0x9] = R1;
    2152:	91 e6 08 00 	B[P2 + 0x8] = R1;
    2156:	29 a9       	R1 = W[P5 + 0x8] (X);
    2158:	09 64       	R1 += 0x1;		/* (  1) */
    215a:	29 b5       	W[P5 + 0x8] = R1;
    215c:	02 20       	JUMP.S 0x2160 <_putDeleteAllRRSets+0x58>;
    215e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2160:	86 6c       	SP += 0x10;		/* ( 16) */
    2162:	27 01       	RETS = [SP++];
    2164:	bd 05       	(R7:7, P5:5) = [SP++];
    2166:	10 00       	RTS;

00002168 <_DomainNameHashValue>:
_DomainNameHashValue():
    2168:	70 05       	[--SP] = (R7:6);
    216a:	10 32       	P2 = R0;
    216c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    216e:	27 e1 bf ff 	R7 = -0x41 (X);		/*		R7=0xffffffbf(-65) */
    2172:	16 20       	JUMP.S 0x219e <_DomainNameHashValue+0x36>;
    2174:	ba 50       	R2 = R2 + R7;
    2176:	52 43       	R2 = R2.B (Z);
    2178:	ce 60       	R6 = 0x19 (X);		/*		R6=0x19( 25) */
    217a:	32 0a       	CC = R2 <= R6 (IU);
    217c:	02 14       	IF !CC JUMP 0x2180 <_DomainNameHashValue+0x18> (BP);
    217e:	01 65       	R1 += 0x20;		/* ( 32) */
    2180:	bb 50       	R2 = R3 + R7;
    2182:	52 43       	R2 = R2.B (Z);
    2184:	ce 60       	R6 = 0x19 (X);		/*		R6=0x19( 25) */
    2186:	41 4f       	R1 <<= 0x8;
    2188:	32 0a       	CC = R2 <= R6 (IU);
    218a:	5b 43       	R3 = R3.B (Z);
    218c:	02 14       	IF !CC JUMP 0x2190 <_DomainNameHashValue+0x28> (BP);
    218e:	03 65       	R3 += 0x20;		/* ( 32) */
    2190:	4b 56       	R1 = R3 | R1;
    2192:	01 50       	R0 = R1 + R0;
    2194:	82 c6 18 82 	R1 = R0 << 0x3;
    2198:	e8 4e       	R0 >>= 0x1d;
    219a:	08 56       	R0 = R0 | R1;
    219c:	12 6c       	P2 += 0x2;		/* (  2) */
    219e:	52 99       	R2 = B[P2] (X);
    21a0:	51 43       	R1 = R2.B (Z);
    21a2:	01 0c       	CC = R1 == 0x0;
    21a4:	10 1c       	IF CC JUMP 0x21c4 <_DomainNameHashValue+0x5c> (BP);
    21a6:	93 e5 01 00 	R3 = B[P2 + 0x1] (X);
    21aa:	5e 43       	R6 = R3.B (Z);
    21ac:	06 0c       	CC = R6 == 0x0;
    21ae:	e3 17       	IF !CC JUMP 0x2174 <_DomainNameHashValue+0xc> (BP);
    21b0:	23 e1 bf ff 	R3 = -0x41 (X);		/*		R3=0xffffffbf(-65) */
    21b4:	9a 50       	R2 = R2 + R3;
    21b6:	52 43       	R2 = R2.B (Z);
    21b8:	cb 60       	R3 = 0x19 (X);		/*		R3=0x19( 25) */
    21ba:	1a 0a       	CC = R2 <= R3 (IU);
    21bc:	02 14       	IF !CC JUMP 0x21c0 <_DomainNameHashValue+0x58> (BP);
    21be:	01 65       	R1 += 0x20;		/* ( 32) */
    21c0:	41 4f       	R1 <<= 0x8;
    21c2:	08 50       	R0 = R0 + R1;
    21c4:	30 05       	(R7:6) = [SP++];
    21c6:	10 00       	RTS;

000021c8 <_RDataHashValue>:
_RDataHashValue():
    21c8:	10 32       	P2 = R0;
    21ca:	fc 05       	[--SP] = (R7:7, P5:4);
    21cc:	67 01       	[--SP] = RETS;
    21ce:	90 60       	R0 = 0x12 (X);		/*		R0=0x12( 18) */
    21d0:	a6 6f       	SP += -0xc;		/* (-12) */
    21d2:	13 a2       	R3 = [P2 + 0x20];
    21d4:	2b 32       	P5 = R3;
    21d6:	51 a4       	R1 = W[P2 + 0x2] (Z);
    21d8:	92 a9       	R2 = W[P2 + 0xc] (X);
    21da:	01 08       	CC = R1 == R0;
    21dc:	25 6c       	P5 += 0x4;		/* (  4) */
    21de:	4b 18       	IF CC JUMP 0x2274 <_RDataHashValue+0xac>;
    21e0:	01 0a       	CC = R1 <= R0 (IU);
    21e2:	12 14       	IF !CC JUMP 0x2206 <_RDataHashValue+0x3e> (BP);
    21e4:	30 60       	R0 = 0x6 (X);		/*		R0=0x6(  6) */
    21e6:	01 08       	CC = R1 == R0;
    21e8:	2b 18       	IF CC JUMP 0x223e <_RDataHashValue+0x76>;
    21ea:	31 0e       	CC = R1 <= 0x6 (IU);
    21ec:	05 14       	IF !CC JUMP 0x21f6 <_RDataHashValue+0x2e> (BP);
    21ee:	11 0c       	CC = R1 == 0x2;
    21f0:	25 18       	IF CC JUMP 0x223a <_RDataHashValue+0x72>;
    21f2:	28 60       	R0 = 0x5 (X);		/*		R0=0x5(  5) */
    21f4:	1f 20       	JUMP.S 0x2232 <_RDataHashValue+0x6a>;
    21f6:	78 60       	R0 = 0xf (X);		/*		R0=0xf( 15) */
    21f8:	01 08       	CC = R1 == R0;
    21fa:	3d 18       	IF CC JUMP 0x2274 <_RDataHashValue+0xac>;
    21fc:	88 60       	R0 = 0x11 (X);		/*		R0=0x11( 17) */
    21fe:	01 08       	CC = R1 == R0;
    2200:	3d 18       	IF CC JUMP 0x227a <_RDataHashValue+0xb2>;
    2202:	60 60       	R0 = 0xc (X);		/*		R0=0xc( 12) */
    2204:	17 20       	JUMP.S 0x2232 <_RDataHashValue+0x6a>;
    2206:	20 61       	R0 = 0x24 (X);		/*		R0=0x24( 36) */
    2208:	01 08       	CC = R1 == R0;
    220a:	35 18       	IF CC JUMP 0x2274 <_RDataHashValue+0xac>;
    220c:	01 0a       	CC = R1 <= R0 (IU);
    220e:	0b 14       	IF !CC JUMP 0x2224 <_RDataHashValue+0x5c> (BP);
    2210:	d0 60       	R0 = 0x1a (X);		/*		R0=0x1a( 26) */
    2212:	01 08       	CC = R1 == R0;
    2214:	3a 18       	IF CC JUMP 0x2288 <_RDataHashValue+0xc0>;
    2216:	08 61       	R0 = 0x21 (X);		/*		R0=0x21( 33) */
    2218:	01 08       	CC = R1 == R0;
    221a:	44 18       	IF CC JUMP 0x22a2 <_RDataHashValue+0xda>;
    221c:	a8 60       	R0 = 0x15 (X);		/*		R0=0x15( 21) */
    221e:	01 08       	CC = R1 == R0;
    2220:	0b 14       	IF !CC JUMP 0x2236 <_RDataHashValue+0x6e> (BP);
    2222:	29 20       	JUMP.S 0x2274 <_RDataHashValue+0xac>;
    2224:	48 61       	R0 = 0x29 (X);		/*		R0=0x29( 41) */
    2226:	01 08       	CC = R1 == R0;
    2228:	61 18       	IF CC JUMP 0x22ea <_RDataHashValue+0x122>;
    222a:	78 61       	R0 = 0x2f (X);		/*		R0=0x2f( 47) */
    222c:	01 08       	CC = R1 == R0;
    222e:	41 18       	IF CC JUMP 0x22b0 <_RDataHashValue+0xe8>;
    2230:	38 61       	R0 = 0x27 (X);		/*		R0=0x27( 39) */
    2232:	01 08       	CC = R1 == R0;
    2234:	03 18       	IF CC JUMP 0x223a <_RDataHashValue+0x72>;
    2236:	d2 42       	R2 = R2.L (Z);
    2238:	3d 20       	JUMP.S 0x22b2 <_RDataHashValue+0xea>;
    223a:	45 30       	R0 = P5;
    223c:	35 20       	JUMP.S 0x22a6 <_RDataHashValue+0xde>;
    223e:	45 30       	R0 = P5;
    2240:	ff e3 94 ff 	CALL 0x2168 <_DomainNameHashValue>;
    2244:	2a e1 00 01 	P2 = 0x100 (X);		/*		P2=0x100(256) */
    2248:	95 5a       	P2 = P5 + P2;
    224a:	20 32       	P4 = R0;
    224c:	42 30       	R0 = P2;
    224e:	ff e3 8d ff 	CALL 0x2168 <_DomainNameHashValue>;
    2252:	29 e5 82 00 	P1 = [P5 + 0x208];
    2256:	2a e5 81 00 	P2 = [P5 + 0x204];
    225a:	91 5a       	P2 = P1 + P2;
    225c:	29 e5 83 00 	P1 = [P5 + 0x20c];
    2260:	8a 5a       	P2 = P2 + P1;
    2262:	29 e5 84 00 	P1 = [P5 + 0x210];
    2266:	8a 5a       	P2 = P2 + P1;
    2268:	29 e5 80 00 	P1 = [P5 + 0x200];
    226c:	8a 5a       	P2 = P2 + P1;
    226e:	22 5b       	P4 = P2 + P4;
    2270:	4c 30       	R1 = P4;
    2272:	3a 20       	JUMP.S 0x22e6 <_RDataHashValue+0x11e>;
    2274:	45 30       	R0 = P5;
    2276:	10 64       	R0 += 0x2;		/* (  2) */
    2278:	17 20       	JUMP.S 0x22a6 <_RDataHashValue+0xde>;
    227a:	45 30       	R0 = P5;
    227c:	ff e3 76 ff 	CALL 0x2168 <_DomainNameHashValue>;
    2280:	38 30       	R7 = R0;
    2282:	2a e1 00 01 	P2 = 0x100 (X);		/*		P2=0x100(256) */
    2286:	08 20       	JUMP.S 0x2296 <_RDataHashValue+0xce>;
    2288:	03 30       	R0 = R3;
    228a:	30 64       	R0 += 0x6;		/* (  6) */
    228c:	ff e3 6e ff 	CALL 0x2168 <_DomainNameHashValue>;
    2290:	38 30       	R7 = R0;
    2292:	2a e1 02 01 	P2 = 0x102 (X);		/*		P2=0x102(258) */
    2296:	95 5a       	P2 = P5 + P2;
    2298:	42 30       	R0 = P2;
    229a:	ff e3 67 ff 	CALL 0x2168 <_DomainNameHashValue>;
    229e:	38 50       	R0 = R0 + R7;
    22a0:	26 20       	JUMP.S 0x22ec <_RDataHashValue+0x124>;
    22a2:	03 30       	R0 = R3;
    22a4:	50 64       	R0 += 0xa;		/* ( 10) */
    22a6:	66 6c       	SP += 0xc;		/* ( 12) */
    22a8:	27 01       	RETS = [SP++];
    22aa:	bc 05       	(R7:7, P5:4) = [SP++];
    22ac:	ff e2 5e ff 	JUMP.L 0x2168 <_DomainNameHashValue>;
    22b0:	02 61       	R2 = 0x20 (X);		/*		R2=0x20( 32) */
    22b2:	55 32       	P2 = P5;
    22b4:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    22b6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    22b8:	0d 20       	JUMP.S 0x22d2 <_RDataHashValue+0x10a>;
    22ba:	11 64       	R1 += 0x2;		/* (  2) */
    22bc:	17 99       	R7 = B[P2] (Z);
    22be:	93 e4 01 00 	R3 = B[P2 + 0x1] (Z);
    22c2:	47 4f       	R7 <<= 0x8;
    22c4:	df 57       	R7 = R7 | R3;
    22c6:	38 50       	R0 = R0 + R7;
    22c8:	82 c6 18 86 	R3 = R0 << 0x3;
    22cc:	e8 4e       	R0 >>= 0x1d;
    22ce:	18 56       	R0 = R0 | R3;
    22d0:	12 6c       	P2 += 0x2;		/* (  2) */
    22d2:	19 30       	R3 = R1;
    22d4:	0b 64       	R3 += 0x1;		/* (  1) */
    22d6:	93 08       	CC = R3 < R2;
    22d8:	f1 1f       	IF CC JUMP 0x22ba <_RDataHashValue+0xf2> (BP);
    22da:	91 08       	CC = R1 < R2;
    22dc:	08 14       	IF !CC JUMP 0x22ec <_RDataHashValue+0x124> (BP);
    22de:	11 32       	P2 = R1;
    22e0:	55 5b       	P5 = P5 + P2;
    22e2:	29 99       	R1 = B[P5] (Z);
    22e4:	41 4f       	R1 <<= 0x8;
    22e6:	01 50       	R0 = R1 + R0;
    22e8:	02 20       	JUMP.S 0x22ec <_RDataHashValue+0x124>;
    22ea:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    22ec:	66 6c       	SP += 0xc;		/* ( 12) */
    22ee:	27 01       	RETS = [SP++];
    22f0:	bc 05       	(R7:7, P5:4) = [SP++];
    22f2:	10 00       	RTS;

000022f4 <_SetNewRData>:
_SetNewRData():
    22f4:	fd 05       	[--SP] = (R7:7, P5:5);
    22f6:	67 01       	[--SP] = RETS;
    22f8:	a6 6f       	SP += -0xc;		/* (-12) */
    22fa:	28 32       	P5 = R0;
    22fc:	01 0c       	CC = R1 == 0x0;
    22fe:	03 1c       	IF CC JUMP 0x2304 <_SetNewRData+0x10> (BP);
    2300:	29 b2       	[P5 + 0x20] = R1;
    2302:	aa b5       	W[P5 + 0xc] = R2;
    2304:	00 00       	NOP;
    2306:	68 a4       	R0 = W[P5 + 0x2] (Z);
    2308:	10 0c       	CC = R0 == 0x2;
    230a:	0a 18       	IF CC JUMP 0x231e <_SetNewRData+0x2a>;
    230c:	29 60       	R1 = 0x5 (X);		/*		R1=0x5(  5) */
    230e:	08 08       	CC = R0 == R1;
    2310:	07 18       	IF CC JUMP 0x231e <_SetNewRData+0x2a>;
    2312:	61 60       	R1 = 0xc (X);		/*		R1=0xc( 12) */
    2314:	08 08       	CC = R0 == R1;
    2316:	04 18       	IF CC JUMP 0x231e <_SetNewRData+0x2a>;
    2318:	39 61       	R1 = 0x27 (X);		/*		R1=0x27( 39) */
    231a:	08 08       	CC = R0 == R1;
    231c:	04 14       	IF !CC JUMP 0x2324 <_SetNewRData+0x30> (BP);
    231e:	2f a2       	R7 = [P5 + 0x20];
    2320:	27 64       	R7 += 0x4;		/* (  4) */
    2322:	17 20       	JUMP.S 0x2350 <_SetNewRData+0x5c>;
    2324:	79 60       	R1 = 0xf (X);		/*		R1=0xf( 15) */
    2326:	08 08       	CC = R0 == R1;
    2328:	0a 18       	IF CC JUMP 0x233c <_SetNewRData+0x48>;
    232a:	91 60       	R1 = 0x12 (X);		/*		R1=0x12( 18) */
    232c:	08 08       	CC = R0 == R1;
    232e:	07 18       	IF CC JUMP 0x233c <_SetNewRData+0x48>;
    2330:	a9 60       	R1 = 0x15 (X);		/*		R1=0x15( 21) */
    2332:	08 08       	CC = R0 == R1;
    2334:	04 18       	IF CC JUMP 0x233c <_SetNewRData+0x48>;
    2336:	21 61       	R1 = 0x24 (X);		/*		R1=0x24( 36) */
    2338:	08 08       	CC = R0 == R1;
    233a:	04 14       	IF !CC JUMP 0x2342 <_SetNewRData+0x4e> (BP);
    233c:	2f a2       	R7 = [P5 + 0x20];
    233e:	37 64       	R7 += 0x6;		/* (  6) */
    2340:	08 20       	JUMP.S 0x2350 <_SetNewRData+0x5c>;
    2342:	09 61       	R1 = 0x21 (X);		/*		R1=0x21( 33) */
    2344:	08 08       	CC = R0 == R1;
    2346:	04 14       	IF !CC JUMP 0x234e <_SetNewRData+0x5a> (BP);
    2348:	2f a2       	R7 = [P5 + 0x20];
    234a:	57 64       	R7 += 0xa;		/* ( 10) */
    234c:	02 20       	JUMP.S 0x2350 <_SetNewRData+0x5c>;
    234e:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    2350:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    2352:	45 30       	R0 = P5;
    2354:	ff e3 98 f9 	CALL 0x1684 <_GetRDLength>;
    2358:	a8 b5       	W[P5 + 0xc] = R0;
    235a:	45 30       	R0 = P5;
    235c:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    235e:	ff e3 93 f9 	CALL 0x1684 <_GetRDLength>;
    2362:	e8 b5       	W[P5 + 0xe] = R0;
    2364:	07 0c       	CC = R7 == 0x0;
    2366:	05 18       	IF CC JUMP 0x2370 <_SetNewRData+0x7c>;
    2368:	07 30       	R0 = R7;
    236a:	ff e3 ff fe 	CALL 0x2168 <_DomainNameHashValue>;
    236e:	04 20       	JUMP.S 0x2376 <_SetNewRData+0x82>;
    2370:	45 30       	R0 = P5;
    2372:	ff e3 2b ff 	CALL 0x21c8 <_RDataHashValue>;
    2376:	66 6c       	SP += 0xc;		/* ( 12) */
    2378:	27 01       	RETS = [SP++];
    237a:	68 b1       	[P5 + 0x14] = R0;
    237c:	bd 05       	(R7:7, P5:5) = [SP++];
    237e:	10 00       	RTS;

00002380 <_skipDomainName>:
_skipDomainName():
    2380:	60 05       	[--SP] = (R7:4);
    2382:	81 09       	CC = R1 < R0 (IU);
    2384:	31 1c       	IF CC JUMP 0x23e6 <_skipDomainName+0x66> (BP);
    2386:	91 09       	CC = R1 < R2 (IU);
    2388:	2f 10       	IF !CC JUMP 0x23e6 <_skipDomainName+0x66>;
    238a:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
    238c:	24 e1 c0 00 	R4 = 0xc0 (X);		/*		R4=0xc0(192) */
    2390:	11 32       	P2 = R1;
    2392:	00 00       	NOP;
    2394:	55 98       	R5 = B[P2++] (X);
    2396:	6f 43       	R7 = R5.B (Z);
    2398:	42 30       	R0 = P2;
    239a:	07 0c       	CC = R7 == 0x0;
    239c:	26 18       	IF CC JUMP 0x23e8 <_skipDomainName+0x68>;
    239e:	e7 54       	R3 = R7 & R4;
    23a0:	21 e1 40 00 	R1 = 0x40 (X);		/*		R1=0x40( 64) */
    23a4:	0b 08       	CC = R3 == R1;
    23a6:	20 18       	IF CC JUMP 0x23e6 <_skipDomainName+0x66>;
    23a8:	0b 09       	CC = R3 <= R1;
    23aa:	04 14       	IF !CC JUMP 0x23b2 <_skipDomainName+0x32> (BP);
    23ac:	03 0c       	CC = R3 == 0x0;
    23ae:	0b 1c       	IF CC JUMP 0x23c4 <_skipDomainName+0x44> (BP);
    23b0:	f1 2f       	JUMP.S 0x2392 <_skipDomainName+0x12>;
    23b2:	21 e1 80 00 	R1 = 0x80 (X);		/*		R1=0x80(128) */
    23b6:	0b 08       	CC = R3 == R1;
    23b8:	17 18       	IF CC JUMP 0x23e6 <_skipDomainName+0x66>;
    23ba:	21 e1 c0 00 	R1 = 0xc0 (X);		/*		R1=0xc0(192) */
    23be:	0b 08       	CC = R3 == R1;
    23c0:	e9 17       	IF !CC JUMP 0x2392 <_skipDomainName+0x12> (BP);
    23c2:	10 20       	JUMP.S 0x23e2 <_skipDomainName+0x62>;
    23c4:	42 30       	R0 = P2;
    23c6:	78 50       	R1 = R0 + R7;
    23c8:	91 09       	CC = R1 < R2 (IU);
    23ca:	0e 10       	IF !CC JUMP 0x23e6 <_skipDomainName+0x66>;
    23cc:	f0 42       	R0 = R6.L (Z);
    23ce:	08 64       	R0 += 0x1;		/* (  1) */
    23d0:	f8 51       	R7 = R0 + R7;
    23d2:	20 e1 ff 00 	R0 = 0xff (X);		/*		R0=0xff(255) */
    23d6:	07 09       	CC = R7 <= R0;
    23d8:	07 10       	IF !CC JUMP 0x23e6 <_skipDomainName+0x66>;
    23da:	6d 43       	R5 = R5.B (Z);
    23dc:	0d 64       	R5 += 0x1;		/* (  1) */
    23de:	b5 51       	R6 = R5 + R6;
    23e0:	d8 2f       	JUMP.S 0x2390 <_skipDomainName+0x10>;
    23e2:	08 64       	R0 += 0x1;		/* (  1) */
    23e4:	02 20       	JUMP.S 0x23e8 <_skipDomainName+0x68>;
    23e6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    23e8:	20 05       	(R7:4) = [SP++];
    23ea:	10 00       	RTS;

000023ec <_getDomainName>:
_getDomainName():
    23ec:	e4 05       	[--SP] = (R7:4, P5:4);
    23ee:	10 32       	P2 = R0;
    23f0:	09 32       	P1 = R1;
    23f2:	70 ae       	P0 = [SP + 0x24];
    23f4:	2c e1 00 01 	P4 = 0x100 (X);		/*		P4=0x100(256) */
    23f8:	20 5b       	P4 = P0 + P4;
    23fa:	d1 09       	CC = P1 < P2 (IU);
    23fc:	4f 1c       	IF CC JUMP 0x249a <_getDomainName+0xae> (BP);
    23fe:	91 09       	CC = R1 < R2 (IU);
    2400:	4d 10       	IF !CC JUMP 0x249a <_getDomainName+0xae>;
    2402:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2404:	00 9b       	B[P0] = R0;
    2406:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2408:	27 e1 c0 00 	R7 = 0xc0 (X);		/*		R7=0xc0(192) */
    240c:	fc 61       	R4 = 0x3f (X);		/*		R4=0x3f( 63) */
    240e:	30 e1 00 00 	I0 = 0x0 (X);		/*		I0=0x0 <_putVal32>(  0) */
    2412:	00 00       	NOP;
    2414:	4e 98       	R6 = B[P1++] (X);
    2416:	71 43       	R1 = R6.B (Z);
    2418:	01 0c       	CC = R1 == 0x0;
    241a:	3d 18       	IF CC JUMP 0x2494 <_getDomainName+0xa8>;
    241c:	f9 54       	R3 = R1 & R7;
    241e:	25 e1 40 00 	R5 = 0x40 (X);		/*		R5=0x40( 64) */
    2422:	2b 08       	CC = R3 == R5;
    2424:	3b 18       	IF CC JUMP 0x249a <_getDomainName+0xae>;
    2426:	2b 09       	CC = R3 <= R5;
    2428:	04 14       	IF !CC JUMP 0x2430 <_getDomainName+0x44> (BP);
    242a:	03 0c       	CC = R3 == 0x0;
    242c:	0b 1c       	IF CC JUMP 0x2442 <_getDomainName+0x56> (BP);
    242e:	f2 2f       	JUMP.S 0x2412 <_getDomainName+0x26>;
    2430:	26 e1 80 00 	R6 = 0x80 (X);		/*		R6=0x80(128) */
    2434:	33 08       	CC = R3 == R6;
    2436:	32 18       	IF CC JUMP 0x249a <_getDomainName+0xae>;
    2438:	25 e1 c0 00 	R5 = 0xc0 (X);		/*		R5=0xc0(192) */
    243c:	2b 08       	CC = R3 == R5;
    243e:	ea 17       	IF !CC JUMP 0x2412 <_getDomainName+0x26> (BP);
    2440:	17 20       	JUMP.S 0x246e <_getDomainName+0x82>;
    2442:	69 30       	R5 = P1;
    2444:	cd 50       	R3 = R5 + R1;
    2446:	1a 0a       	CC = R2 <= R3 (IU);
    2448:	29 18       	IF CC JUMP 0x249a <_getDomainName+0xae>;
    244a:	29 32       	P5 = R1;
    244c:	0d 6c       	P5 += 0x1;		/* (  1) */
    244e:	68 5b       	P5 = P0 + P5;
    2450:	6c 0a       	CC = P4 <= P5 (IU);
    2452:	24 18       	IF CC JUMP 0x249a <_getDomainName+0xae>;
    2454:	06 9a       	B[P0++] = R6;
    2456:	69 32       	P5 = P1;
    2458:	03 60       	R3 = 0x0 (X);		/*		R3=0x0(  0) */
    245a:	04 20       	JUMP.S 0x2462 <_getDomainName+0x76>;
    245c:	0b 64       	R3 += 0x1;		/* (  1) */
    245e:	6e 98       	R6 = B[P5++] (X);
    2460:	06 9a       	B[P0++] = R6;
    2462:	4d 32       	P1 = P5;
    2464:	8b 08       	CC = R3 < R1;
    2466:	fb 1f       	IF CC JUMP 0x245c <_getDomainName+0x70> (BP);
    2468:	b0 30       	R6 = I0;
    246a:	06 9b       	B[P0] = R6;
    246c:	d3 2f       	JUMP.S 0x2412 <_getDomainName+0x26>;
    246e:	61 54       	R1 = R1 & R4;
    2470:	0b 98       	R3 = B[P1++] (Z);
    2472:	41 4f       	R1 <<= 0x8;
    2474:	59 56       	R1 = R1 | R3;
    2476:	c9 42       	R1 = R1.L (Z);
    2478:	29 32       	P5 = R1;
    247a:	00 0c       	CC = R0 == 0x0;
    247c:	41 07       	IF CC R0 = P1;
    247e:	6a 5a       	P1 = P2 + P5;
    2480:	d1 09       	CC = P1 < P2 (IU);
    2482:	0c 18       	IF CC JUMP 0x249a <_getDomainName+0xae>;
    2484:	49 30       	R1 = P1;
    2486:	91 09       	CC = R1 < R2 (IU);
    2488:	09 14       	IF !CC JUMP 0x249a <_getDomainName+0xae> (BP);
    248a:	09 99       	R1 = B[P1] (Z);
    248c:	79 54       	R1 = R1 & R7;
    248e:	01 0c       	CC = R1 == 0x0;
    2490:	c1 1f       	IF CC JUMP 0x2412 <_getDomainName+0x26> (BP);
    2492:	04 20       	JUMP.S 0x249a <_getDomainName+0xae>;
    2494:	00 0c       	CC = R0 == 0x0;
    2496:	41 07       	IF CC R0 = P1;
    2498:	02 20       	JUMP.S 0x249c <_getDomainName+0xb0>;
    249a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    249c:	a4 05       	(R7:4, P5:4) = [SP++];
    249e:	10 00       	RTS;

000024a0 <_skipResourceRecord>:
_skipResourceRecord():
    24a0:	78 05       	[--SP] = (R7:7);
    24a2:	67 01       	[--SP] = RETS;
    24a4:	a6 6f       	SP += -0xc;		/* (-12) */
    24a6:	3a 30       	R7 = R2;
    24a8:	ff e3 6c ff 	CALL 0x2380 <_skipDomainName>;
    24ac:	10 32       	P2 = R0;
    24ae:	42 0c       	CC = P2 == 0x0;
    24b0:	10 1c       	IF CC JUMP 0x24d0 <_skipResourceRecord+0x30> (BP);
    24b2:	08 30       	R1 = R0;
    24b4:	51 64       	R1 += 0xa;		/* ( 10) */
    24b6:	39 0a       	CC = R1 <= R7 (IU);
    24b8:	0c 14       	IF !CC JUMP 0x24d0 <_skipResourceRecord+0x30> (BP);
    24ba:	90 e4 08 00 	R0 = B[P2 + 0x8] (Z);
    24be:	40 4f       	R0 <<= 0x8;
    24c0:	92 e4 09 00 	R2 = B[P2 + 0x9] (Z);
    24c4:	02 56       	R0 = R2 | R0;
    24c6:	01 50       	R0 = R1 + R0;
    24c8:	38 0a       	CC = R0 <= R7 (IU);
    24ca:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    24cc:	01 06       	IF !CC R0 = R1;
    24ce:	02 20       	JUMP.S 0x24d2 <_skipResourceRecord+0x32>;
    24d0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    24d2:	66 6c       	SP += 0xc;		/* ( 12) */
    24d4:	27 01       	RETS = [SP++];
    24d6:	38 05       	(R7:7) = [SP++];
    24d8:	10 00       	RTS;
	...

000024dc <_skipQuestion>:
_skipQuestion():
    24dc:	78 05       	[--SP] = (R7:7);
    24de:	67 01       	[--SP] = RETS;
    24e0:	a6 6f       	SP += -0xc;		/* (-12) */
    24e2:	3a 30       	R7 = R2;
    24e4:	ff e3 4e ff 	CALL 0x2380 <_skipDomainName>;
    24e8:	00 0c       	CC = R0 == 0x0;
    24ea:	06 1c       	IF CC JUMP 0x24f6 <_skipQuestion+0x1a> (BP);
    24ec:	20 64       	R0 += 0x4;		/* (  4) */
    24ee:	38 0a       	CC = R0 <= R7 (IU);
    24f0:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    24f2:	01 06       	IF !CC R0 = R1;
    24f4:	02 20       	JUMP.S 0x24f8 <_skipQuestion+0x1c>;
    24f6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    24f8:	66 6c       	SP += 0xc;		/* ( 12) */
    24fa:	27 01       	RETS = [SP++];
    24fc:	38 05       	(R7:7) = [SP++];
    24fe:	10 00       	RTS;

00002500 <_getQuestion>:
_getQuestion():
    2500:	eb 05       	[--SP] = (R7:5, P5:3);
    2502:	67 01       	[--SP] = RETS;
    2504:	86 6f       	SP += -0x10;		/* (-16) */
    2506:	f5 af       	P5 = [SP + 0x3c];
    2508:	20 32       	P4 = R0;
    250a:	29 30       	R5 = R1;
    250c:	b7 a3       	R7 = [SP + 0x38];
    250e:	32 30       	R6 = R2;
    2510:	45 30       	R0 = P5;
    2512:	21 e1 64 02 	R1 = 0x264 (X);		/*		R1=0x264(612) */
    2516:	ff e3 75 ed 	CALL 0x0 <_putVal32>;
    251a:	2f e6 46 00 	[P5 + 0x118] = R7;
    251e:	07 0c       	CC = R7 == 0x0;
    2520:	06 14       	IF !CC JUMP 0x252c <_getQuestion+0x2c> (BP);
    2522:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
    2524:	a8 e6 32 01 	B[P5 + 0x132] = R0;
    2528:	a8 e6 33 01 	B[P5 + 0x133] = R0;
    252c:	2b e1 34 01 	P3 = 0x134 (X);		/*		P3=0x134(308) */
    2530:	dd 5a       	P3 = P5 + P3;
    2532:	44 30       	R0 = P4;
    2534:	f3 bc       	[SP + 0xc] = P3;
    2536:	0d 30       	R1 = R5;
    2538:	16 30       	R2 = R6;
    253a:	ff e3 59 ff 	CALL 0x23ec <_getDomainName>;
    253e:	20 32       	P4 = R0;
    2540:	44 0c       	CC = P4 == 0x0;
    2542:	19 1c       	IF CC JUMP 0x2574 <_getQuestion+0x74> (BP);
    2544:	38 30       	R7 = R0;
    2546:	27 64       	R7 += 0x4;		/* (  4) */
    2548:	37 0a       	CC = R7 <= R6 (IU);
    254a:	15 14       	IF !CC JUMP 0x2574 <_getQuestion+0x74> (BP);
    254c:	43 30       	R0 = P3;
    254e:	ff e3 0d fe 	CALL 0x2168 <_DomainNameHashValue>;
    2552:	68 b0       	[P5 + 0x4] = R0;
    2554:	20 99       	R0 = B[P4] (Z);
    2556:	a1 e4 01 00 	R1 = B[P4 + 0x1] (Z);
    255a:	40 4f       	R0 <<= 0x8;
    255c:	08 56       	R0 = R0 | R1;
    255e:	68 e6 1a 01 	W[P5 + 0x234] = R0;
    2562:	a0 e4 02 00 	R0 = B[P4 + 0x2] (Z);
    2566:	a1 e4 03 00 	R1 = B[P4 + 0x3] (Z);
    256a:	40 4f       	R0 <<= 0x8;
    256c:	08 56       	R0 = R0 | R1;
    256e:	68 e6 1b 01 	W[P5 + 0x236] = R0;
    2572:	02 20       	JUMP.S 0x2576 <_getQuestion+0x76>;
    2574:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    2576:	86 6c       	SP += 0x10;		/* ( 16) */
    2578:	07 30       	R0 = R7;
    257a:	27 01       	RETS = [SP++];
    257c:	ab 05       	(R7:5, P5:3) = [SP++];
    257e:	10 00       	RTS;

00002580 <_LocateAnswers>:
_LocateAnswers():
    2580:	f5 05       	[--SP] = (R7:6, P5:5);
    2582:	31 30       	R6 = R1;
    2584:	67 01       	[--SP] = RETS;
    2586:	08 30       	R1 = R0;
    2588:	a6 6f       	SP += -0xc;		/* (-12) */
    258a:	28 32       	P5 = R0;
    258c:	61 64       	R1 += 0xc;		/* ( 12) */
    258e:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    2590:	07 20       	JUMP.S 0x259e <_LocateAnswers+0x1e>;
    2592:	45 30       	R0 = P5;
    2594:	16 30       	R2 = R6;
    2596:	ff e3 a3 ff 	CALL 0x24dc <_skipQuestion>;
    259a:	08 30       	R1 = R0;
    259c:	0f 64       	R7 += 0x1;		/* (  1) */
    259e:	a8 a4       	R0 = W[P5 + 0x4] (Z);
    25a0:	87 08       	CC = R7 < R0;
    25a2:	03 10       	IF !CC JUMP 0x25a8 <_LocateAnswers+0x28>;
    25a4:	01 0c       	CC = R1 == 0x0;
    25a6:	f6 17       	IF !CC JUMP 0x2592 <_LocateAnswers+0x12> (BP);
    25a8:	66 6c       	SP += 0xc;		/* ( 12) */
    25aa:	27 01       	RETS = [SP++];
    25ac:	01 30       	R0 = R1;
    25ae:	b5 05       	(R7:6, P5:5) = [SP++];
    25b0:	10 00       	RTS;
	...

000025b4 <_LocateAuthorities>:
_LocateAuthorities():
    25b4:	f5 05       	[--SP] = (R7:6, P5:5);
    25b6:	67 01       	[--SP] = RETS;
    25b8:	31 30       	R6 = R1;
    25ba:	a6 6f       	SP += -0xc;		/* (-12) */
    25bc:	28 32       	P5 = R0;
    25be:	ff e3 e1 ff 	CALL 0x2580 <_LocateAnswers>;
    25c2:	08 30       	R1 = R0;
    25c4:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    25c6:	07 20       	JUMP.S 0x25d4 <_LocateAuthorities+0x20>;
    25c8:	45 30       	R0 = P5;
    25ca:	16 30       	R2 = R6;
    25cc:	ff e3 6a ff 	CALL 0x24a0 <_skipResourceRecord>;
    25d0:	08 30       	R1 = R0;
    25d2:	0f 64       	R7 += 0x1;		/* (  1) */
    25d4:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    25d6:	87 08       	CC = R7 < R0;
    25d8:	03 10       	IF !CC JUMP 0x25de <_LocateAuthorities+0x2a>;
    25da:	01 0c       	CC = R1 == 0x0;
    25dc:	f6 17       	IF !CC JUMP 0x25c8 <_LocateAuthorities+0x14> (BP);
    25de:	66 6c       	SP += 0xc;		/* ( 12) */
    25e0:	27 01       	RETS = [SP++];
    25e2:	01 30       	R0 = R1;
    25e4:	b5 05       	(R7:6, P5:5) = [SP++];
    25e6:	10 00       	RTS;

000025e8 <_LocateAdditionals>:
_LocateAdditionals():
    25e8:	f5 05       	[--SP] = (R7:6, P5:5);
    25ea:	67 01       	[--SP] = RETS;
    25ec:	31 30       	R6 = R1;
    25ee:	a6 6f       	SP += -0xc;		/* (-12) */
    25f0:	28 32       	P5 = R0;
    25f2:	ff e3 e1 ff 	CALL 0x25b4 <_LocateAuthorities>;
    25f6:	08 30       	R1 = R0;
    25f8:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    25fa:	07 20       	JUMP.S 0x2608 <_LocateAdditionals+0x20>;
    25fc:	45 30       	R0 = P5;
    25fe:	16 30       	R2 = R6;
    2600:	ff e3 50 ff 	CALL 0x24a0 <_skipResourceRecord>;
    2604:	08 30       	R1 = R0;
    2606:	0f 64       	R7 += 0x1;		/* (  1) */
    2608:	28 a5       	R0 = W[P5 + 0x8] (Z);
    260a:	87 08       	CC = R7 < R0;
    260c:	f8 1f       	IF CC JUMP 0x25fc <_LocateAdditionals+0x14> (BP);
    260e:	66 6c       	SP += 0xc;		/* ( 12) */
    2610:	27 01       	RETS = [SP++];
    2612:	01 30       	R0 = R1;
    2614:	b5 05       	(R7:6, P5:5) = [SP++];
    2616:	10 00       	RTS;

00002618 <_LocateOptRR>:
_LocateOptRR():
    2618:	ec 05       	[--SP] = (R7:5, P5:4);
    261a:	2a 30       	R5 = R2;
    261c:	25 32       	P4 = R5;
    261e:	67 01       	[--SP] = RETS;
    2620:	a6 6f       	SP += -0xc;		/* (-12) */
    2622:	28 32       	P5 = R0;
    2624:	31 30       	R6 = R1;
    2626:	ff e3 e1 ff 	CALL 0x25e8 <_LocateAdditionals>;
    262a:	10 32       	P2 = R0;
    262c:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    262e:	5c 6c       	P4 += 0xb;		/* ( 11) */
    2630:	ed 42       	R5 = R5.L (Z);
    2632:	20 20       	JUMP.S 0x2672 <_LocateOptRR+0x5a>;
    2634:	62 5a       	P1 = P2 + P4;
    2636:	41 30       	R0 = P1;
    2638:	86 09       	CC = R6 < R0 (IU);
    263a:	15 1c       	IF CC JUMP 0x2664 <_LocateOptRR+0x4c> (BP);
    263c:	10 99       	R0 = B[P2] (Z);
    263e:	00 0c       	CC = R0 == 0x0;
    2640:	12 14       	IF !CC JUMP 0x2664 <_LocateOptRR+0x4c> (BP);
    2642:	90 e4 01 00 	R0 = B[P2 + 0x1] (Z);
    2646:	00 0c       	CC = R0 == 0x0;
    2648:	0e 14       	IF !CC JUMP 0x2664 <_LocateOptRR+0x4c> (BP);
    264a:	49 61       	R1 = 0x29 (X);		/*		R1=0x29( 41) */
    264c:	90 e4 02 00 	R0 = B[P2 + 0x2] (Z);
    2650:	08 08       	CC = R0 == R1;
    2652:	09 14       	IF !CC JUMP 0x2664 <_LocateOptRR+0x4c> (BP);
    2654:	90 e4 09 00 	R0 = B[P2 + 0x9] (Z);
    2658:	40 4f       	R0 <<= 0x8;
    265a:	91 e4 0a 00 	R1 = B[P2 + 0xa] (Z);
    265e:	08 56       	R0 = R0 | R1;
    2660:	a8 08       	CC = R0 < R5;
    2662:	0e 10       	IF !CC JUMP 0x267e <_LocateOptRR+0x66>;
    2664:	4a 30       	R1 = P2;
    2666:	45 30       	R0 = P5;
    2668:	16 30       	R2 = R6;
    266a:	ff e3 1b ff 	CALL 0x24a0 <_skipResourceRecord>;
    266e:	10 32       	P2 = R0;
    2670:	0f 64       	R7 += 0x1;		/* (  1) */
    2672:	42 0c       	CC = P2 == 0x0;
    2674:	05 1c       	IF CC JUMP 0x267e <_LocateOptRR+0x66> (BP);
    2676:	68 a5       	R0 = W[P5 + 0xa] (Z);
    2678:	87 08       	CC = R7 < R0;
    267a:	dd 1f       	IF CC JUMP 0x2634 <_LocateOptRR+0x1c> (BP);
    267c:	02 68       	P2 = 0x0 (X);		/*		P2=0x0(  0) */
    267e:	66 6c       	SP += 0xc;		/* ( 12) */
    2680:	27 01       	RETS = [SP++];
    2682:	42 30       	R0 = P2;
    2684:	ac 05       	(R7:5, P5:4) = [SP++];
    2686:	10 00       	RTS;

00002688 <_mDNS_Lock_>:
_mDNS_Lock_():
    2688:	f5 05       	[--SP] = (R7:6, P5:5);
    268a:	28 32       	P5 = R0;
    268c:	67 01       	[--SP] = RETS;
    268e:	31 30       	R6 = R1;
    2690:	66 6f       	SP += -0x14;		/* (-20) */
    2692:	ff e3 b7 ec 	CALL 0x0 <_putVal32>;
    2696:	e9 a2       	R1 = [P5 + 0x2c];
    2698:	28 a3       	R0 = [P5 + 0x30];
    269a:	01 08       	CC = R1 == R0;
    269c:	0b 18       	IF CC JUMP 0x26b2 <_mDNS_Lock_+0x2a>;
    269e:	f1 b0       	[SP + 0xc] = R1;
    26a0:	30 b1       	[SP + 0x10] = R0;
    26a2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x29( 41) */
    26a6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    26a8:	01 e1 34 06 	R1.L = 0x634;		/* (1588)	R1=0x634(1588) */
    26ac:	16 30       	R2 = R6;
    26ae:	ff e3 a9 ec 	CALL 0x0 <_putVal32>;
    26b2:	e8 a2       	R0 = [P5 + 0x2c];
    26b4:	00 0c       	CC = R0 == 0x0;
    26b6:	2f e4 37 00 	R7 = [P5 + 0xdc];
    26ba:	13 14       	IF !CC JUMP 0x26e0 <_mDNS_Lock_+0x58> (BP);
    26bc:	07 0c       	CC = R7 == 0x0;
    26be:	1c 1c       	IF CC JUMP 0x26f6 <_mDNS_Lock_+0x6e> (BP);
    26c0:	ff e3 a0 ec 	CALL 0x0 <_putVal32>;
    26c4:	29 e4 36 00 	R1 = [P5 + 0xd8];
    26c8:	08 50       	R0 = R0 + R1;
    26ca:	30 b1       	[SP + 0x10] = R0;
    26cc:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x634(1588) */
    26d0:	f7 b0       	[SP + 0xc] = R7;
    26d2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    26d4:	01 e1 80 06 	R1.L = 0x680;		/* (1664)	R1=0x680 <_MakeDomainLabelFromLiteralString>(1664) */
    26d8:	16 30       	R2 = R6;
    26da:	ff e3 93 ec 	CALL 0x0 <_putVal32>;
    26de:	0c 20       	JUMP.S 0x26f6 <_mDNS_Lock_+0x6e>;
    26e0:	07 0c       	CC = R7 == 0x0;
    26e2:	16 14       	IF !CC JUMP 0x270e <_mDNS_Lock_+0x86> (BP);
    26e4:	f0 b0       	[SP + 0xc] = R0;
    26e6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x680 <_MakeDomainLabelFromLiteralString>(1664) */
    26ea:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    26ec:	01 e1 b0 06 	R1.L = 0x6b0;		/* (1712)	R1=0x6b0(1712) */
    26f0:	16 30       	R2 = R6;
    26f2:	ff e3 87 ec 	CALL 0x0 <_putVal32>;
    26f6:	ff e3 85 ec 	CALL 0x0 <_putVal32>;
    26fa:	29 e4 36 00 	R1 = [P5 + 0xd8];
    26fe:	08 50       	R0 = R0 + R1;
    2700:	28 e6 37 00 	[P5 + 0xdc] = R0;
    2704:	00 0c       	CC = R0 == 0x0;
    2706:	04 14       	IF !CC JUMP 0x270e <_mDNS_Lock_+0x86> (BP);
    2708:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    270a:	28 e6 37 00 	[P5 + 0xdc] = R0;
    270e:	00 00       	NOP;
    2710:	29 e4 38 00 	R1 = [P5 + 0xe0];
    2714:	28 e4 37 00 	R0 = [P5 + 0xdc];
    2718:	01 52       	R0 = R1 - R0;
    271a:	00 0d       	CC = R0 <= 0x0;
    271c:	14 1c       	IF CC JUMP 0x2744 <_mDNS_Lock_+0xbc> (BP);
    271e:	f0 b0       	[SP + 0xc] = R0;
    2720:	16 30       	R2 = R6;
    2722:	29 e4 36 00 	R1 = [P5 + 0xd8];
    2726:	48 50       	R1 = R0 + R1;
    2728:	29 e6 36 00 	[P5 + 0xd8] = R1;
    272c:	31 b1       	[SP + 0x10] = R1;
    272e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x6b0(1712) */
    2732:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2734:	01 e1 ec 06 	R1.L = 0x6ec;		/* (1772)	R1=0x6ec(1772) */
    2738:	ff e3 64 ec 	CALL 0x0 <_putVal32>;
    273c:	28 e4 38 00 	R0 = [P5 + 0xe0];
    2740:	28 e6 37 00 	[P5 + 0xdc] = R0;
    2744:	00 00       	NOP;
    2746:	28 e4 37 00 	R0 = [P5 + 0xdc];
    274a:	28 e6 38 00 	[P5 + 0xe0] = R0;
    274e:	e8 a2       	R0 = [P5 + 0x2c];
    2750:	a6 6c       	SP += 0x14;		/* ( 20) */
    2752:	08 64       	R0 += 0x1;		/* (  1) */
    2754:	27 01       	RETS = [SP++];
    2756:	e8 b2       	[P5 + 0x2c] = R0;
    2758:	b5 05       	(R7:6, P5:5) = [SP++];
    275a:	10 00       	RTS;

0000275c <_mDNS_Unlock_>:
_mDNS_Unlock_():
    275c:	fd 05       	[--SP] = (R7:7, P5:5);
    275e:	28 32       	P5 = R0;
    2760:	39 30       	R7 = R1;
    2762:	67 01       	[--SP] = RETS;
    2764:	66 6f       	SP += -0x14;		/* (-20) */
    2766:	e8 a2       	R0 = [P5 + 0x2c];
    2768:	f8 67       	R0 += -0x1;		/* ( -1) */
    276a:	29 a3       	R1 = [P5 + 0x30];
    276c:	e8 b2       	[P5 + 0x2c] = R0;
    276e:	08 08       	CC = R0 == R1;
    2770:	0b 18       	IF CC JUMP 0x2786 <_mDNS_Unlock_+0x2a>;
    2772:	31 b1       	[SP + 0x10] = R1;
    2774:	f0 b0       	[SP + 0xc] = R0;
    2776:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x6ec(1772) */
    277a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    277c:	01 e1 44 07 	R1.L = 0x744;		/* (1860)	R1=0x744(1860) */
    2780:	17 30       	R2 = R7;
    2782:	ff e3 3f ec 	CALL 0x0 <_putVal32>;
    2786:	e8 a2       	R0 = [P5 + 0x2c];
    2788:	00 0c       	CC = R0 == 0x0;
    278a:	82 14       	IF !CC JUMP 0x288e <_mDNS_Unlock_+0x132> (BP);
    278c:	78 60       	R0 = 0xf (X);		/*		R0=0xf( 15) */
    278e:	2a e4 37 00 	R2 = [P5 + 0xdc];
    2792:	d8 4f       	R0 <<= 0x1b;
    2794:	69 a1       	R1 = [P5 + 0x14];
    2796:	02 50       	R0 = R2 + R0;
    2798:	01 0c       	CC = R1 == 0x0;
    279a:	6b 14       	IF !CC JUMP 0x2870 <_mDNS_Unlock_+0x114> (BP);
    279c:	2a e5 4d 00 	P2 = [P5 + 0x134];
    27a0:	42 0c       	CC = P2 == 0x0;
    27a2:	04 1c       	IF CC JUMP 0x27aa <_mDNS_Unlock_+0x4e> (BP);
    27a4:	90 a0       	R0 = [P2 + 0x8];
    27a6:	00 0c       	CC = R0 == 0x0;
    27a8:	63 1c       	IF CC JUMP 0x286e <_mDNS_Unlock_+0x112> (BP);
    27aa:	00 00       	NOP;
    27ac:	29 e4 50 00 	R1 = [P5 + 0x140];
    27b0:	01 0c       	CC = R1 == 0x0;
    27b2:	5e 14       	IF !CC JUMP 0x286e <_mDNS_Unlock_+0x112> (BP);
    27b4:	2a e5 f4 07 	P2 = [P5 + 0x1fd0];
    27b8:	42 0c       	CC = P2 == 0x0;
    27ba:	07 1c       	IF CC JUMP 0x27c8 <_mDNS_Unlock_+0x6c> (BP);
    27bc:	91 e4 04 00 	R1 = B[P2 + 0x4] (Z);
    27c0:	11 0c       	CC = R1 == 0x2;
    27c2:	56 14       	IF !CC JUMP 0x286e <_mDNS_Unlock_+0x112> (BP);
    27c4:	52 91       	P2 = [P2];
    27c6:	f9 2f       	JUMP.S 0x27b8 <_mDNS_Unlock_+0x5c>;
    27c8:	00 00       	NOP;
    27ca:	29 e4 f6 07 	R1 = [P5 + 0x1fd8];
    27ce:	01 0c       	CC = R1 == 0x0;
    27d0:	4f 14       	IF !CC JUMP 0x286e <_mDNS_Unlock_+0x112> (BP);
    27d2:	29 e4 27 0a 	R1 = [P5 + 0x289c];
    27d6:	01 0c       	CC = R1 == 0x0;
    27d8:	4b 14       	IF !CC JUMP 0x286e <_mDNS_Unlock_+0x112> (BP);
    27da:	a9 e4 14 01 	R1 = B[P5 + 0x114] (Z);
    27de:	01 0c       	CC = R1 == 0x0;
    27e0:	47 14       	IF !CC JUMP 0x286e <_mDNS_Unlock_+0x112> (BP);
    27e2:	29 e4 fb 07 	R1 = [P5 + 0x1fec];
    27e6:	c8 52       	R3 = R0 - R1;
    27e8:	03 0d       	CC = R3 <= 0x0;
    27ea:	08 07       	IF CC R1 = R0;
    27ec:	28 e4 40 00 	R0 = [P5 + 0x100];
    27f0:	c1 52       	R3 = R1 - R0;
    27f2:	03 0d       	CC = R3 <= 0x0;
    27f4:	01 07       	IF CC R0 = R1;
    27f6:	29 e4 fc 07 	R1 = [P5 + 0x1ff0];
    27fa:	01 0c       	CC = R1 == 0x0;
    27fc:	04 1c       	IF CC JUMP 0x2804 <_mDNS_Unlock_+0xa8> (BP);
    27fe:	c8 52       	R3 = R0 - R1;
    2800:	03 0d       	CC = R3 <= 0x0;
    2802:	01 06       	IF !CC R0 = R1;
    2804:	00 00       	NOP;
    2806:	2b e4 3c 00 	R3 = [P5 + 0xf0];
    280a:	58 52       	R1 = R0 - R3;
    280c:	01 0d       	CC = R1 <= 0x0;
    280e:	18 07       	IF CC R3 = R0;
    2810:	29 e4 41 00 	R1 = [P5 + 0x104];
    2814:	0b 52       	R0 = R3 - R1;
    2816:	00 0d       	CC = R0 <= 0x0;
    2818:	0b 07       	IF CC R1 = R3;
    281a:	28 e4 48 00 	R0 = [P5 + 0x120];
    281e:	00 0c       	CC = R0 == 0x0;
    2820:	0b 14       	IF !CC JUMP 0x2836 <_mDNS_Unlock_+0xda> (BP);
    2822:	28 e4 49 00 	R0 = [P5 + 0x124];
    2826:	00 0c       	CC = R0 == 0x0;
    2828:	39 1c       	IF CC JUMP 0x289a <_mDNS_Unlock_+0x13e> (BP);
    282a:	28 e4 4a 00 	R0 = [P5 + 0x128];
    282e:	c1 52       	R3 = R1 - R0;
    2830:	03 0d       	CC = R3 <= 0x0;
    2832:	08 06       	IF !CC R1 = R0;
    2834:	33 20       	JUMP.S 0x289a <_mDNS_Unlock_+0x13e>;
    2836:	c1 52       	R3 = R1 - R0;
    2838:	03 0d       	CC = R3 <= 0x0;
    283a:	01 07       	IF CC R0 = R1;
    283c:	29 e4 3b 00 	R1 = [P5 + 0xec];
    2840:	01 0c       	CC = R1 == 0x0;
    2842:	0d 14       	IF !CC JUMP 0x285c <_mDNS_Unlock_+0x100> (BP);
    2844:	29 e4 3d 00 	R1 = [P5 + 0xf4];
    2848:	c8 52       	R3 = R0 - R1;
    284a:	03 0d       	CC = R3 <= 0x0;
    284c:	08 07       	IF CC R1 = R0;
    284e:	28 e4 3e 00 	R0 = [P5 + 0xf8];
    2852:	c1 52       	R3 = R1 - R0;
    2854:	03 0d       	CC = R3 <= 0x0;
    2856:	01 07       	IF CC R0 = R1;
    2858:	29 e4 3f 00 	R1 = [P5 + 0xfc];
    285c:	c8 52       	R3 = R0 - R1;
    285e:	03 0d       	CC = R3 <= 0x0;
    2860:	08 07       	IF CC R1 = R0;
    2862:	28 e4 4b 00 	R0 = [P5 + 0x12c];
    2866:	c1 52       	R3 = R1 - R0;
    2868:	03 0d       	CC = R3 <= 0x0;
    286a:	01 07       	IF CC R0 = R1;
    286c:	02 20       	JUMP.S 0x2870 <_mDNS_Unlock_+0x114>;
    286e:	02 30       	R0 = R2;
    2870:	28 e6 39 00 	[P5 + 0xe4] = R0;
    2874:	02 0c       	CC = R2 == 0x0;
    2876:	09 14       	IF !CC JUMP 0x2888 <_mDNS_Unlock_+0x12c> (BP);
    2878:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x744(1860) */
    287c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    287e:	01 e1 90 07 	R1.L = 0x790;		/* (1936)	R1=0x790 <_ConvertDomainNameToCString_withescape>(1936) */
    2882:	17 30       	R2 = R7;
    2884:	ff e3 be eb 	CALL 0x0 <_putVal32>;
    2888:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    288a:	28 e6 37 00 	[P5 + 0xdc] = R0;
    288e:	a6 6c       	SP += 0x14;		/* ( 20) */
    2890:	27 01       	RETS = [SP++];
    2892:	45 30       	R0 = P5;
    2894:	bd 05       	(R7:7, P5:5) = [SP++];
    2896:	ff e2 b5 eb 	JUMP.L 0x0 <_putVal32>;
    289a:	01 30       	R0 = R1;
    289c:	d0 2f       	JUMP.S 0x283c <_mDNS_Unlock_+0xe0>;
	...

000028a0 <_mDNS_snprintf>:
_mDNS_snprintf():
    28a0:	67 01       	[--SP] = RETS;
    28a2:	86 6f       	SP += -0x10;		/* (-16) */
    28a4:	5e 30       	R3 = SP;
    28a6:	03 65       	R3 += 0x20;		/* ( 32) */
    28a8:	f3 b0       	[SP + 0xc] = R3;
    28aa:	00 e3 05 00 	CALL 0x28b4 <_mDNS_vsnprintf>;
    28ae:	86 6c       	SP += 0x10;		/* ( 16) */
    28b0:	27 01       	RETS = [SP++];
    28b2:	10 00       	RTS;

000028b4 <_mDNS_vsnprintf>:
_mDNS_vsnprintf():
    28b4:	e3 05       	[--SP] = (R7:4, P5:3);
    28b6:	00 e8 ac 00 	LINK 0x2b0;		/* (688) */
    28ba:	30 e6 b5 00 	[SP + 0x2d4] = R0;
    28be:	32 e6 b7 00 	[SP + 0x2dc] = R2;
    28c2:	34 e5 b8 00 	P4 = [SP + 0x2e0];
    28c6:	01 0c       	CC = R1 == 0x0;
    28c8:	02 14       	IF !CC JUMP 0x28cc <_mDNS_vsnprintf+0x18> (BP);
    28ca:	17 25       	JUMP.S 0x32f8 <_mDNS_vsnprintf+0xa44>;
    28cc:	f9 67       	R1 += -0x1;		/* ( -1) */
    28ce:	31 e6 1b 00 	[SP + 0x6c] = R1;
    28d2:	01 0c       	CC = R1 == 0x0;
    28d4:	02 10       	IF !CC JUMP 0x28d8 <_mDNS_vsnprintf+0x24>;
    28d6:	0b 25       	JUMP.S 0x32ec <_mDNS_vsnprintf+0xa38>;
    28d8:	02 32       	P0 = R2;
    28da:	2a e1 a4 01 	P2 = 0x1a4 (X);		/*		P2=0x1a4(420) */
    28de:	29 e1 78 00 	P1 = 0x78 (X);		/*		P1=0x78(120) */
    28e2:	96 5a       	P2 = SP + P2;
    28e4:	04 60       	R4 = 0x0 (X);		/*		R4=0x0(  0) */
    28e6:	40 99       	R0 = B[P0] (X);
    28e8:	28 e1 76 01 	P0 = 0x176 (X);		/*		P0=0x176(374) */
    28ec:	06 5a       	P0 = SP + P0;
    28ee:	ce 5a       	P3 = SP + P1;
    28f0:	32 e7 14 00 	[SP + 0x50] = P2;
    28f4:	30 e7 13 00 	[SP + 0x4c] = P0;
    28f8:	f6 24       	JUMP.S 0x32e4 <_mDNS_vsnprintf+0xa30>;
    28fa:	29 61       	R1 = 0x25 (X);		/*		R1=0x25( 37) */
    28fc:	08 08       	CC = R0 == R1;
    28fe:	0f 18       	IF CC JUMP 0x291c <_mDNS_vsnprintf+0x68>;
    2900:	0c 64       	R4 += 0x1;		/* (  1) */
    2902:	30 e5 b5 00 	P0 = [SP + 0x2d4];
    2906:	00 9a       	B[P0++] = R0;
    2908:	30 e4 1b 00 	R0 = [SP + 0x6c];
    290c:	30 e7 b5 00 	[SP + 0x2d4] = P0;
    2910:	84 09       	CC = R4 < R0 (IU);
    2912:	02 1c       	IF CC JUMP 0x2916 <_mDNS_vsnprintf+0x62> (BP);
    2914:	ed 24       	JUMP.S 0x32ee <_mDNS_vsnprintf+0xa3a>;
    2916:	34 e7 16 00 	[SP + 0x58] = P4;
    291a:	dd 24       	JUMP.S 0x32d4 <_mDNS_vsnprintf+0xa20>;
    291c:	4e 30       	R1 = SP;
    291e:	22 e1 a4 02 	R2 = 0x2a4 (X);		/*		R2=0x2a4(676) */
    2922:	11 50       	R0 = R1 + R2;
    2924:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    2926:	62 60       	R2 = 0xc (X);		/*		R2=0xc( 12) */
    2928:	ff e3 6c eb 	CALL 0x0 <_putVal32>;
    292c:	31 e5 b7 00 	P1 = [SP + 0x2dc];
    2930:	03 60       	R3 = 0x0 (X);		/*		R3=0x0(  0) */
    2932:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    2934:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2936:	09 6c       	P1 += 0x1;		/* (  1) */
    2938:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    293a:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    293c:	b3 e6 5c 00 	B[SP + 0x5c] = R3;
    2940:	b7 e6 74 00 	B[SP + 0x74] = R7;
    2944:	b0 e6 70 00 	B[SP + 0x70] = R0;
    2948:	0e 20       	JUMP.S 0x2964 <_mDNS_vsnprintf+0xb0>;
    294a:	0b 60       	R3 = 0x1 (X);		/*		R3=0x1(  1) */
    294c:	b3 e6 70 00 	B[SP + 0x70] = R3;
    2950:	0a 20       	JUMP.S 0x2964 <_mDNS_vsnprintf+0xb0>;
    2952:	0f 60       	R7 = 0x1 (X);		/*		R7=0x1(  1) */
    2954:	b7 e6 74 00 	B[SP + 0x74] = R7;
    2958:	06 20       	JUMP.S 0x2964 <_mDNS_vsnprintf+0xb0>;
    295a:	02 61       	R2 = 0x20 (X);		/*		R2=0x20( 32) */
    295c:	04 20       	JUMP.S 0x2964 <_mDNS_vsnprintf+0xb0>;
    295e:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    2960:	b0 e6 5c 00 	B[SP + 0x5c] = R0;
    2964:	51 32       	P2 = P1;
    2966:	4e 98       	R6 = B[P1++] (X);
    2968:	6b 61       	R3 = 0x2d (X);		/*		R3=0x2d( 45) */
    296a:	1e 08       	CC = R6 == R3;
    296c:	ef 1b       	IF CC JUMP 0x294a <_mDNS_vsnprintf+0x96>;
    296e:	5f 61       	R7 = 0x2b (X);		/*		R7=0x2b( 43) */
    2970:	3e 08       	CC = R6 == R7;
    2972:	f0 1b       	IF CC JUMP 0x2952 <_mDNS_vsnprintf+0x9e>;
    2974:	00 61       	R0 = 0x20 (X);		/*		R0=0x20( 32) */
    2976:	06 08       	CC = R6 == R0;
    2978:	f1 1b       	IF CC JUMP 0x295a <_mDNS_vsnprintf+0xa6>;
    297a:	1b 61       	R3 = 0x23 (X);		/*		R3=0x23( 35) */
    297c:	1e 08       	CC = R6 == R3;
    297e:	03 14       	IF !CC JUMP 0x2984 <_mDNS_vsnprintf+0xd0> (BP);
    2980:	09 64       	R1 += 0x1;		/* (  1) */
    2982:	f1 2f       	JUMP.S 0x2964 <_mDNS_vsnprintf+0xb0>;
    2984:	87 61       	R7 = 0x30 (X);		/*		R7=0x30( 48) */
    2986:	3e 08       	CC = R6 == R7;
    2988:	eb 1f       	IF CC JUMP 0x295e <_mDNS_vsnprintf+0xaa> (BP);
    298a:	50 61       	R0 = 0x2a (X);		/*		R0=0x2a( 42) */
    298c:	06 08       	CC = R6 == R0;
    298e:	05 18       	IF CC JUMP 0x2998 <_mDNS_vsnprintf+0xe4>;
    2990:	07 68       	FP = 0x0 (X);		/*		FP=0x0(  0) */
    2992:	50 60       	R0 = 0xa (X);		/*		R0=0xa( 10) */
    2994:	4f 60       	R7 = 0x9 (X);		/*		R7=0x9(  9) */
    2996:	16 20       	JUMP.S 0x29c2 <_mDNS_vsnprintf+0x10e>;
    2998:	5c 30       	R3 = P4;
    299a:	20 91       	R0 = [P4];
    299c:	23 64       	R3 += 0x4;		/* (  4) */
    299e:	80 0c       	CC = R0 < 0x0;
    29a0:	05 14       	IF !CC JUMP 0x29aa <_mDNS_vsnprintf+0xf6> (BP);
    29a2:	0f 60       	R7 = 0x1 (X);		/*		R7=0x1(  1) */
    29a4:	80 43       	R0 = -R0;
    29a6:	b7 e6 70 00 	B[SP + 0x70] = R7;
    29aa:	0a 6c       	P2 += 0x1;		/* (  1) */
    29ac:	38 32       	FP = R0;
    29ae:	56 99       	R6 = B[P2] (X);
    29b0:	23 32       	P4 = R3;
    29b2:	0c 20       	JUMP.S 0x29ca <_mDNS_vsnprintf+0x116>;
    29b4:	5f 30       	R3 = FP;
    29b6:	c3 40       	R3 *= R0;
    29b8:	9e 51       	R6 = R6 + R3;
    29ba:	3e 32       	FP = R6;
    29bc:	0a 6c       	P2 += 0x1;		/* (  1) */
    29be:	4e 98       	R6 = B[P1++] (X);
    29c0:	87 6e       	FP += -0x30;		/* (-48) */
    29c2:	1e 30       	R3 = R6;
    29c4:	83 66       	R3 += -0x30;		/* (-48) */
    29c6:	3b 0a       	CC = R3 <= R7 (IU);
    29c8:	f6 1f       	IF CC JUMP 0x29b4 <_mDNS_vsnprintf+0x100> (BP);
    29ca:	70 61       	R0 = 0x2e (X);		/*		R0=0x2e( 46) */
    29cc:	06 08       	CC = R6 == R0;
    29ce:	26 14       	IF !CC JUMP 0x2a1a <_mDNS_vsnprintf+0x166> (BP);
    29d0:	4a 32       	P1 = P2;
    29d2:	96 e5 01 00 	R6 = B[P2 + 0x1] (X);
    29d6:	53 61       	R3 = 0x2a (X);		/*		R3=0x2a( 42) */
    29d8:	09 6c       	P1 += 0x1;		/* (  1) */
    29da:	1e 08       	CC = R6 == R3;
    29dc:	08 18       	IF CC JUMP 0x29ec <_mDNS_vsnprintf+0x138>;
    29de:	42 32       	P0 = P2;
    29e0:	10 6c       	P0 += 0x2;		/* (  2) */
    29e2:	51 32       	P2 = P1;
    29e4:	05 60       	R5 = 0x0 (X);		/*		R5=0x0(  0) */
    29e6:	50 60       	R0 = 0xa (X);		/*		R0=0xa( 10) */
    29e8:	4f 60       	R7 = 0x9 (X);		/*		R7=0x9(  9) */
    29ea:	10 20       	JUMP.S 0x2a0a <_mDNS_vsnprintf+0x156>;
    29ec:	25 91       	R5 = [P4];
    29ee:	51 32       	P2 = P1;
    29f0:	8e e5 01 00 	R6 = B[P1 + 0x1] (X);
    29f4:	0f 60       	R7 = 0x1 (X);		/*		R7=0x1(  1) */
    29f6:	0a 6c       	P2 += 0x1;		/* (  1) */
    29f8:	24 6c       	P4 += 0x4;		/* (  4) */
    29fa:	b7 e6 68 00 	B[SP + 0x68] = R7;
    29fe:	12 20       	JUMP.S 0x2a22 <_mDNS_vsnprintf+0x16e>;
    2a00:	c5 40       	R5 *= R0;
    2a02:	6e 51       	R5 = R6 + R5;
    2a04:	85 66       	R5 += -0x30;		/* (-48) */
    2a06:	0a 6c       	P2 += 0x1;		/* (  1) */
    2a08:	46 98       	R6 = B[P0++] (X);
    2a0a:	1e 30       	R3 = R6;
    2a0c:	83 66       	R3 += -0x30;		/* (-48) */
    2a0e:	3b 0a       	CC = R3 <= R7 (IU);
    2a10:	f8 1f       	IF CC JUMP 0x2a00 <_mDNS_vsnprintf+0x14c> (BP);
    2a12:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    2a14:	b0 e6 68 00 	B[SP + 0x68] = R0;
    2a18:	05 20       	JUMP.S 0x2a22 <_mDNS_vsnprintf+0x16e>;
    2a1a:	03 60       	R3 = 0x0 (X);		/*		R3=0x0(  0) */
    2a1c:	05 60       	R5 = 0x0 (X);		/*		R5=0x0(  0) */
    2a1e:	b3 e6 68 00 	B[SP + 0x68] = R3;
    2a22:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    2a24:	b3 e5 70 00 	R3 = B[SP + 0x70] (X);
    2a28:	c3 55       	R7 = R3 & R0;
    2a2a:	b3 e5 a4 02 	R3 = B[SP + 0x2a4] (X);
    2a2e:	03 4c       	BITCLR (R3, 0x0);		/* bit  0 */
    2a30:	fb 56       	R3 = R3 | R7;
    2a32:	b7 e5 74 00 	R7 = B[SP + 0x74] (X);
    2a36:	c7 55       	R7 = R7 & R0;
    2a38:	0b 4c       	BITCLR (R3, 0x1);		/* bit  1 */
    2a3a:	0f 4f       	R7 <<= 0x1;
    2a3c:	fb 57       	R7 = R3 | R7;
    2a3e:	b3 e5 5c 00 	R3 = B[SP + 0x5c] (X);
    2a42:	c3 54       	R3 = R3 & R0;
    2a44:	17 4c       	BITCLR (R7, 0x2);		/* bit  2 */
    2a46:	13 4f       	R3 <<= 0x2;
    2a48:	df 56       	R3 = R7 | R3;
    2a4a:	b7 e5 68 00 	R7 = B[SP + 0x68] (X);
    2a4e:	c7 55       	R7 = R7 & R0;
    2a50:	1f 4f       	R7 <<= 0x3;
    2a52:	1b 4c       	BITCLR (R3, 0x3);		/* bit  3 */
    2a54:	fb 56       	R3 = R3 | R7;
    2a56:	b3 e6 a4 02 	B[SP + 0x2a4] = R3;
    2a5a:	c3 54       	R3 = R3 & R0;
    2a5c:	03 48       	CC = !BITTST (R3, 0x0);		/* bit  0 */
    2a5e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2a60:	b3 e5 5c 00 	R3 = B[SP + 0x5c] (X);
    2a64:	18 06       	IF !CC R3 = R0;
    2a66:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    2a68:	b3 e6 5c 00 	B[SP + 0x5c] = R3;
    2a6c:	0a 6c       	P2 += 0x1;		/* (  1) */
    2a6e:	b7 e6 60 00 	B[SP + 0x60] = R7;
    2a72:	b0 e6 64 00 	B[SP + 0x64] = R0;
    2a76:	02 20       	JUMP.S 0x2a7a <_mDNS_vsnprintf+0x1c6>;
    2a78:	0a 6c       	P2 += 0x1;		/* (  1) */
    2a7a:	42 32       	P0 = P2;
    2a7c:	f8 6f       	P0 += -0x1;		/* ( -1) */
    2a7e:	20 e1 69 00 	R0 = 0x69 (X);		/*		R0=0x69(105) */
    2a82:	30 e7 b7 00 	[SP + 0x2dc] = P0;
    2a86:	06 08       	CC = R6 == R0;
    2a88:	4e 18       	IF CC JUMP 0x2b24 <_mDNS_vsnprintf+0x270>;
    2a8a:	06 09       	CC = R6 <= R0;
    2a8c:	21 14       	IF !CC JUMP 0x2ace <_mDNS_vsnprintf+0x21a> (BP);
    2a8e:	23 e1 61 00 	R3 = 0x61 (X);		/*		R3=0x61( 97) */
    2a92:	1e 08       	CC = R6 == R3;
    2a94:	4f 19       	IF CC JUMP 0x2d32 <_mDNS_vsnprintf+0x47e>;
    2a96:	1e 09       	CC = R6 <= R3;
    2a98:	0d 14       	IF !CC JUMP 0x2ab2 <_mDNS_vsnprintf+0x1fe> (BP);
    2a9a:	27 e1 4c 00 	R7 = 0x4c (X);		/*		R7=0x4c( 76) */
    2a9e:	3e 08       	CC = R6 == R7;
    2aa0:	3d 18       	IF CC JUMP 0x2b1a <_mDNS_vsnprintf+0x266>;
    2aa2:	78 67       	R0 += -0x11;		/* (-17) */
    2aa4:	06 08       	CC = R6 == R0;
    2aa6:	f4 19       	IF CC JUMP 0x2e8e <_mDNS_vsnprintf+0x5da>;
    2aa8:	29 61       	R1 = 0x25 (X);		/*		R1=0x25( 37) */
    2aaa:	0e 08       	CC = R6 == R1;
    2aac:	02 18       	IF CC JUMP 0x2ab0 <_mDNS_vsnprintf+0x1fc>;
    2aae:	7b 23       	JUMP.S 0x31a4 <_mDNS_vsnprintf+0x8f0>;
    2ab0:	87 23       	JUMP.S 0x31be <_mDNS_vsnprintf+0x90a>;
    2ab2:	23 e1 64 00 	R3 = 0x64 (X);		/*		R3=0x64(100) */
    2ab6:	1e 08       	CC = R6 == R3;
    2ab8:	36 18       	IF CC JUMP 0x2b24 <_mDNS_vsnprintf+0x270>;
    2aba:	27 e1 68 00 	R7 = 0x68 (X);		/*		R7=0x68(104) */
    2abe:	3e 08       	CC = R6 == R7;
    2ac0:	28 18       	IF CC JUMP 0x2b10 <_mDNS_vsnprintf+0x25c>;
    2ac2:	20 e1 63 00 	R0 = 0x63 (X);		/*		R0=0x63( 99) */
    2ac6:	06 08       	CC = R6 == R0;
    2ac8:	02 18       	IF CC JUMP 0x2acc <_mDNS_vsnprintf+0x218>;
    2aca:	6d 23       	JUMP.S 0x31a4 <_mDNS_vsnprintf+0x8f0>;
    2acc:	4b 22       	JUMP.S 0x2f62 <_mDNS_vsnprintf+0x6ae>;
    2ace:	23 e1 70 00 	R3 = 0x70 (X);		/*		R3=0x70 <_GetNextActiveInterfaceID>(112) */
    2ad2:	1e 08       	CC = R6 == R3;
    2ad4:	d6 19       	IF CC JUMP 0x2e80 <_mDNS_vsnprintf+0x5cc>;
    2ad6:	1e 09       	CC = R6 <= R3;
    2ad8:	0e 14       	IF !CC JUMP 0x2af4 <_mDNS_vsnprintf+0x240> (BP);
    2ada:	27 e1 6e 00 	R7 = 0x6e (X);		/*		R7=0x6e(110) */
    2ade:	3e 08       	CC = R6 == R7;
    2ae0:	02 14       	IF !CC JUMP 0x2ae4 <_mDNS_vsnprintf+0x230> (BP);
    2ae2:	3f 23       	JUMP.S 0x3160 <_mDNS_vsnprintf+0x8ac>;
    2ae4:	3e 09       	CC = R6 <= R7;
    2ae6:	d7 14       	IF !CC JUMP 0x2c94 <_mDNS_vsnprintf+0x3e0> (BP);
    2ae8:	20 e1 6c 00 	R0 = 0x6c (X);		/*		R0=0x6c(108) */
    2aec:	06 08       	CC = R6 == R0;
    2aee:	02 18       	IF CC JUMP 0x2af2 <_mDNS_vsnprintf+0x23e>;
    2af0:	5a 23       	JUMP.S 0x31a4 <_mDNS_vsnprintf+0x8f0>;
    2af2:	14 20       	JUMP.S 0x2b1a <_mDNS_vsnprintf+0x266>;
    2af4:	22 e1 75 00 	R2 = 0x75 (X);		/*		R2=0x75(117) */
    2af8:	16 08       	CC = R6 == R2;
    2afa:	3d 18       	IF CC JUMP 0x2b74 <_mDNS_vsnprintf+0x2c0>;
    2afc:	23 e1 78 00 	R3 = 0x78 (X);		/*		R3=0x78(120) */
    2b00:	1e 08       	CC = R6 == R3;
    2b02:	cb 19       	IF CC JUMP 0x2e98 <_mDNS_vsnprintf+0x5e4>;
    2b04:	27 e1 73 00 	R7 = 0x73 (X);		/*		R7=0x73(115) */
    2b08:	3e 08       	CC = R6 == R7;
    2b0a:	02 18       	IF CC JUMP 0x2b0e <_mDNS_vsnprintf+0x25a>;
    2b0c:	4c 23       	JUMP.S 0x31a4 <_mDNS_vsnprintf+0x8f0>;
    2b0e:	36 22       	JUMP.S 0x2f7a <_mDNS_vsnprintf+0x6c6>;
    2b10:	56 99       	R6 = B[P2] (X);
    2b12:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    2b14:	b0 e6 64 00 	B[SP + 0x64] = R0;
    2b18:	b0 2f       	JUMP.S 0x2a78 <_mDNS_vsnprintf+0x1c4>;
    2b1a:	56 99       	R6 = B[P2] (X);
    2b1c:	0b 60       	R3 = 0x1 (X);		/*		R3=0x1(  1) */
    2b1e:	b3 e6 60 00 	B[SP + 0x60] = R3;
    2b22:	ab 2f       	JUMP.S 0x2a78 <_mDNS_vsnprintf+0x1c4>;
    2b24:	0b 60       	R3 = 0x1 (X);		/*		R3=0x1(  1) */
    2b26:	b7 e5 5c 00 	R7 = B[SP + 0x5c] (X);
    2b2a:	9f 55       	R6 = R7 & R3;
    2b2c:	b7 e5 a4 02 	R7 = B[SP + 0x2a4] (X);
    2b30:	16 4f       	R6 <<= 0x2;
    2b32:	b1 e5 64 00 	R1 = B[SP + 0x64] (X);
    2b36:	17 4c       	BITCLR (R7, 0x2);		/* bit  2 */
    2b38:	f7 57       	R7 = R7 | R6;
    2b3a:	19 54       	R0 = R1 & R3;
    2b3c:	27 4c       	BITCLR (R7, 0x4);		/* bit  4 */
    2b3e:	20 4f       	R0 <<= 0x4;
    2b40:	07 56       	R0 = R7 | R0;
    2b42:	b7 e5 60 00 	R7 = B[SP + 0x60] (X);
    2b46:	5f 54       	R1 = R7 & R3;
    2b48:	28 4c       	BITCLR (R0, 0x5);		/* bit  5 */
    2b4a:	29 4f       	R1 <<= 0x5;
    2b4c:	48 56       	R1 = R0 | R1;
    2b4e:	44 30       	R0 = P4;
    2b50:	20 64       	R0 += 0x4;		/* (  4) */
    2b52:	30 e6 16 00 	[SP + 0x58] = R0;
    2b56:	b1 e6 a4 02 	B[SP + 0x2a4] = R1;
    2b5a:	26 91       	R6 = [P4];
    2b5c:	21 48       	CC = !BITTST (R1, 0x4);		/* bit  4 */
    2b5e:	b0 42       	R0 = R6.L (X);
    2b60:	30 06       	IF !CC R6 = R0;
    2b62:	86 0c       	CC = R6 < 0x0;
    2b64:	04 14       	IF !CC JUMP 0x2b6c <_mDNS_vsnprintf+0x2b8> (BP);
    2b66:	b6 43       	R6 = -R6;
    2b68:	6a 61       	R2 = 0x2d (X);		/*		R2=0x2d( 45) */
    2b6a:	25 20       	JUMP.S 0x2bb4 <_mDNS_vsnprintf+0x300>;
    2b6c:	09 48       	CC = !BITTST (R1, 0x1);		/* bit  1 */
    2b6e:	58 61       	R0 = 0x2b (X);		/*		R0=0x2b( 43) */
    2b70:	10 06       	IF !CC R2 = R0;
    2b72:	21 20       	JUMP.S 0x2bb4 <_mDNS_vsnprintf+0x300>;
    2b74:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
    2b76:	b0 e5 5c 00 	R0 = B[SP + 0x5c] (X);
    2b7a:	d0 55       	R7 = R0 & R2;
    2b7c:	b3 e5 a4 02 	R3 = B[SP + 0x2a4] (X);
    2b80:	b1 e5 64 00 	R1 = B[SP + 0x64] (X);
    2b84:	17 4f       	R7 <<= 0x2;
    2b86:	13 4c       	BITCLR (R3, 0x2);		/* bit  2 */
    2b88:	11 54       	R0 = R1 & R2;
    2b8a:	fb 56       	R3 = R3 | R7;
    2b8c:	23 4c       	BITCLR (R3, 0x4);		/* bit  4 */
    2b8e:	20 4f       	R0 <<= 0x4;
    2b90:	03 56       	R0 = R3 | R0;
    2b92:	b3 e5 60 00 	R3 = B[SP + 0x60] (X);
    2b96:	53 54       	R1 = R3 & R2;
    2b98:	28 4c       	BITCLR (R0, 0x5);		/* bit  5 */
    2b9a:	29 4f       	R1 <<= 0x5;
    2b9c:	48 56       	R1 = R0 | R1;
    2b9e:	44 30       	R0 = P4;
    2ba0:	20 64       	R0 += 0x4;		/* (  4) */
    2ba2:	b1 e6 a4 02 	B[SP + 0x2a4] = R1;
    2ba6:	30 e6 16 00 	[SP + 0x58] = R0;
    2baa:	26 91       	R6 = [P4];
    2bac:	21 48       	CC = !BITTST (R1, 0x4);		/* bit  4 */
    2bae:	02 1c       	IF CC JUMP 0x2bb2 <_mDNS_vsnprintf+0x2fe> (BP);
    2bb0:	f6 42       	R6 = R6.L (Z);
    2bb2:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    2bb4:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    2bb6:	b1 e5 70 00 	R1 = B[SP + 0x70] (X);
    2bba:	b3 e5 a4 02 	R3 = B[SP + 0x2a4] (X);
    2bbe:	c1 55       	R7 = R1 & R0;
    2bc0:	03 4c       	BITCLR (R3, 0x0);		/* bit  0 */
    2bc2:	fb 56       	R3 = R3 | R7;
    2bc4:	b7 e5 74 00 	R7 = B[SP + 0x74] (X);
    2bc8:	47 54       	R1 = R7 & R0;
    2bca:	0b 4c       	BITCLR (R3, 0x1);		/* bit  1 */
    2bcc:	09 4f       	R1 <<= 0x1;
    2bce:	4b 56       	R1 = R3 | R1;
    2bd0:	b3 e5 5c 00 	R3 = B[SP + 0x5c] (X);
    2bd4:	c3 55       	R7 = R3 & R0;
    2bd6:	11 4c       	BITCLR (R1, 0x2);		/* bit  2 */
    2bd8:	17 4f       	R7 <<= 0x2;
    2bda:	f9 57       	R7 = R1 | R7;
    2bdc:	b1 e5 68 00 	R1 = B[SP + 0x68] (X);
    2be0:	c1 54       	R3 = R1 & R0;
    2be2:	1f 4c       	BITCLR (R7, 0x3);		/* bit  3 */
    2be4:	1b 4f       	R3 <<= 0x3;
    2be6:	df 56       	R3 = R7 | R3;
    2be8:	b7 e5 64 00 	R7 = B[SP + 0x64] (X);
    2bec:	47 54       	R1 = R7 & R0;
    2bee:	23 4c       	BITCLR (R3, 0x4);		/* bit  4 */
    2bf0:	21 4f       	R1 <<= 0x4;
    2bf2:	4b 56       	R1 = R3 | R1;
    2bf4:	b3 e5 60 00 	R3 = B[SP + 0x60] (X);
    2bf8:	03 54       	R0 = R3 & R0;
    2bfa:	28 4f       	R0 <<= 0x5;
    2bfc:	29 4c       	BITCLR (R1, 0x5);		/* bit  5 */
    2bfe:	01 56       	R0 = R1 | R0;
    2c00:	b0 e6 a4 02 	B[SP + 0x2a4] = R0;
    2c04:	18 48       	CC = !BITTST (R0, 0x3);		/* bit  3 */
    2c06:	0c 14       	IF !CC JUMP 0x2c1e <_mDNS_vsnprintf+0x36a> (BP);
    2c08:	10 48       	CC = !BITTST (R0, 0x2);		/* bit  2 */
    2c0a:	08 1c       	IF CC JUMP 0x2c1a <_mDNS_vsnprintf+0x366> (BP);
    2c0c:	10 43       	R0 = R2.B (X);
    2c0e:	00 0c       	CC = R0 == 0x0;
    2c10:	04 1c       	IF CC JUMP 0x2c18 <_mDNS_vsnprintf+0x364> (BP);
    2c12:	6f 30       	R5 = FP;
    2c14:	fd 67       	R5 += -0x1;		/* ( -1) */
    2c16:	02 20       	JUMP.S 0x2c1a <_mDNS_vsnprintf+0x366>;
    2c18:	6f 30       	R5 = FP;
    2c1a:	05 0c       	CC = R5 == 0x0;
    2c1c:	06 1c       	IF CC JUMP 0x2c28 <_mDNS_vsnprintf+0x374> (BP);
    2c1e:	27 e1 2b 01 	R7 = 0x12b (X);		/*		R7=0x12b(299) */
    2c22:	3d 0a       	CC = R5 <= R7 (IU);
    2c24:	2f 06       	IF !CC R5 = R7;
    2c26:	02 20       	JUMP.S 0x2c2a <_mDNS_vsnprintf+0x376>;
    2c28:	0d 60       	R5 = 0x1 (X);		/*		R5=0x1(  1) */
    2c2a:	28 e1 a4 01 	P0 = 0x1a4 (X);		/*		P0=0x1a4(420) */
    2c2e:	70 5b       	P5 = P0 + SP;
    2c30:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    2c32:	22 32       	P4 = R2;
    2c34:	1d 20       	JUMP.S 0x2c6e <_mDNS_vsnprintf+0x3ba>;
    2c36:	41 e1 cc cc 	R1.H = 0xcccc;		/* (-13108)	R1=0xcccc0025(-859045851) */
    2c3a:	06 30       	R0 = R6;
    2c3c:	01 e1 cd cc 	R1.L = 0xcccd;		/* (-13107)	R1=0xcccccccd(-858993459) */
    2c40:	ff e3 e0 e9 	CALL 0x0 <_putVal32>;
    2c44:	82 c6 e8 85 	R2 = R0 >> 0x3;
    2c48:	50 60       	R0 = 0xa (X);		/*		R0=0xa( 10) */
    2c4a:	d0 40       	R0 *= R2;
    2c4c:	06 52       	R0 = R6 - R0;
    2c4e:	80 65       	R0 += 0x30;		/* ( 48) */
    2c50:	fd 6f       	P5 += -0x1;		/* ( -1) */
    2c52:	28 9b       	B[P5] = R0;
    2c54:	41 e1 cc cc 	R1.H = 0xcccc;		/* (-13108)	R1=0xcccccccd(-858993459) */
    2c58:	06 30       	R0 = R6;
    2c5a:	32 e6 15 00 	[SP + 0x54] = R2;
    2c5e:	01 e1 cd cc 	R1.L = 0xcccd;		/* (-13107)	R1=0xcccccccd(-858993459) */
    2c62:	ff e3 cf e9 	CALL 0x0 <_putVal32>;
    2c66:	32 e4 15 00 	R2 = [SP + 0x54];
    2c6a:	32 30       	R6 = R2;
    2c6c:	0f 64       	R7 += 0x1;		/* (  1) */
    2c6e:	06 0c       	CC = R6 == 0x0;
    2c70:	e3 17       	IF !CC JUMP 0x2c36 <_mDNS_vsnprintf+0x382> (BP);
    2c72:	05 20       	JUMP.S 0x2c7c <_mDNS_vsnprintf+0x3c8>;
    2c74:	fd 6f       	P5 += -0x1;		/* ( -1) */
    2c76:	28 9b       	B[P5] = R0;
    2c78:	0f 64       	R7 += 0x1;		/* (  1) */
    2c7a:	03 20       	JUMP.S 0x2c80 <_mDNS_vsnprintf+0x3cc>;
    2c7c:	54 30       	R2 = P4;
    2c7e:	80 61       	R0 = 0x30 (X);		/*		R0=0x30( 48) */
    2c80:	af 09       	CC = R7 < R5 (IU);
    2c82:	f9 1f       	IF CC JUMP 0x2c74 <_mDNS_vsnprintf+0x3c0> (BP);
    2c84:	10 43       	R0 = R2.B (X);
    2c86:	00 0c       	CC = R0 == 0x0;
    2c88:	02 10       	IF !CC JUMP 0x2c8c <_mDNS_vsnprintf+0x3d8>;
    2c8a:	b0 22       	JUMP.S 0x31ea <_mDNS_vsnprintf+0x936>;
    2c8c:	fd 6f       	P5 += -0x1;		/* ( -1) */
    2c8e:	2a 9b       	B[P5] = R2;
    2c90:	0f 64       	R7 += 0x1;		/* (  1) */
    2c92:	ac 22       	JUMP.S 0x31ea <_mDNS_vsnprintf+0x936>;
    2c94:	0b 60       	R3 = 0x1 (X);		/*		R3=0x1(  1) */
    2c96:	b0 e5 5c 00 	R0 = B[SP + 0x5c] (X);
    2c9a:	98 55       	R6 = R0 & R3;
    2c9c:	b7 e5 a4 02 	R7 = B[SP + 0x2a4] (X);
    2ca0:	b2 e5 64 00 	R2 = B[SP + 0x64] (X);
    2ca4:	16 4f       	R6 <<= 0x2;
    2ca6:	17 4c       	BITCLR (R7, 0x2);		/* bit  2 */
    2ca8:	1a 54       	R0 = R2 & R3;
    2caa:	f7 57       	R7 = R7 | R6;
    2cac:	27 4c       	BITCLR (R7, 0x4);		/* bit  4 */
    2cae:	20 4f       	R0 <<= 0x4;
    2cb0:	07 56       	R0 = R7 | R0;
    2cb2:	b7 e5 60 00 	R7 = B[SP + 0x60] (X);
    2cb6:	9f 54       	R2 = R7 & R3;
    2cb8:	28 4c       	BITCLR (R0, 0x5);		/* bit  5 */
    2cba:	2a 4f       	R2 <<= 0x5;
    2cbc:	90 56       	R2 = R0 | R2;
    2cbe:	44 30       	R0 = P4;
    2cc0:	20 64       	R0 += 0x4;		/* (  4) */
    2cc2:	b2 e6 a4 02 	B[SP + 0x2a4] = R2;
    2cc6:	30 e6 16 00 	[SP + 0x58] = R0;
    2cca:	20 91       	R0 = [P4];
    2ccc:	22 48       	CC = !BITTST (R2, 0x4);		/* bit  4 */
    2cce:	c3 42       	R3 = R0.L (Z);
    2cd0:	03 06       	IF !CC R0 = R3;
    2cd2:	1a 48       	CC = !BITTST (R2, 0x3);		/* bit  3 */
    2cd4:	05 14       	IF !CC JUMP 0x2cde <_mDNS_vsnprintf+0x42a> (BP);
    2cd6:	12 48       	CC = !BITTST (R2, 0x2);		/* bit  2 */
    2cd8:	6f 06       	IF !CC R5 = FP;
    2cda:	05 0c       	CC = R5 == 0x0;
    2cdc:	06 1c       	IF CC JUMP 0x2ce8 <_mDNS_vsnprintf+0x434> (BP);
    2cde:	22 e1 2b 01 	R2 = 0x12b (X);		/*		R2=0x12b(299) */
    2ce2:	15 0a       	CC = R5 <= R2 (IU);
    2ce4:	2a 06       	IF !CC R5 = R2;
    2ce6:	02 20       	JUMP.S 0x2cea <_mDNS_vsnprintf+0x436>;
    2ce8:	0d 60       	R5 = 0x1 (X);		/*		R5=0x1(  1) */
    2cea:	28 e1 a4 01 	P0 = 0x1a4 (X);		/*		P0=0x1a4(420) */
    2cee:	70 5b       	P5 = P0 + SP;
    2cf0:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    2cf2:	3a 60       	R2 = 0x7 (X);		/*		R2=0x7(  7) */
    2cf4:	07 20       	JUMP.S 0x2d02 <_mDNS_vsnprintf+0x44e>;
    2cf6:	d0 54       	R3 = R0 & R2;
    2cf8:	fd 6f       	P5 += -0x1;		/* ( -1) */
    2cfa:	83 65       	R3 += 0x30;		/* ( 48) */
    2cfc:	2b 9b       	B[P5] = R3;
    2cfe:	18 4e       	R0 >>= 0x3;
    2d00:	0f 64       	R7 += 0x1;		/* (  1) */
    2d02:	00 0c       	CC = R0 == 0x0;
    2d04:	f9 17       	IF !CC JUMP 0x2cf6 <_mDNS_vsnprintf+0x442> (BP);
    2d06:	09 43       	R1 = R1.B (X);
    2d08:	01 0c       	CC = R1 == 0x0;
    2d0a:	10 1c       	IF CC JUMP 0x2d2a <_mDNS_vsnprintf+0x476> (BP);
    2d0c:	07 0c       	CC = R7 == 0x0;
    2d0e:	0e 1c       	IF CC JUMP 0x2d2a <_mDNS_vsnprintf+0x476> (BP);
    2d10:	68 99       	R0 = B[P5] (X);
    2d12:	81 61       	R1 = 0x30 (X);		/*		R1=0x30( 48) */
    2d14:	08 08       	CC = R0 == R1;
    2d16:	0a 18       	IF CC JUMP 0x2d2a <_mDNS_vsnprintf+0x476>;
    2d18:	fd 6f       	P5 += -0x1;		/* ( -1) */
    2d1a:	80 61       	R0 = 0x30 (X);		/*		R0=0x30( 48) */
    2d1c:	28 9b       	B[P5] = R0;
    2d1e:	0f 64       	R7 += 0x1;		/* (  1) */
    2d20:	05 20       	JUMP.S 0x2d2a <_mDNS_vsnprintf+0x476>;
    2d22:	fd 6f       	P5 += -0x1;		/* ( -1) */
    2d24:	28 9b       	B[P5] = R0;
    2d26:	0f 64       	R7 += 0x1;		/* (  1) */
    2d28:	02 20       	JUMP.S 0x2d2c <_mDNS_vsnprintf+0x478>;
    2d2a:	80 61       	R0 = 0x30 (X);		/*		R0=0x30( 48) */
    2d2c:	af 09       	CC = R7 < R5 (IU);
    2d2e:	fa 1f       	IF CC JUMP 0x2d22 <_mDNS_vsnprintf+0x46e> (BP);
    2d30:	5d 22       	JUMP.S 0x31ea <_mDNS_vsnprintf+0x936>;
    2d32:	62 91       	P2 = [P4];
    2d34:	54 30       	R2 = P4;
    2d36:	22 64       	R2 += 0x4;		/* (  4) */
    2d38:	32 e6 16 00 	[SP + 0x58] = R2;
    2d3c:	42 0c       	CC = P2 == 0x0;
    2d3e:	02 14       	IF !CC JUMP 0x2d42 <_mDNS_vsnprintf+0x48e> (BP);
    2d40:	50 22       	JUMP.S 0x31e0 <_mDNS_vsnprintf+0x92c>;
    2d42:	09 43       	R1 = R1.B (X);
    2d44:	01 0c       	CC = R1 == 0x0;
    2d46:	17 1c       	IF CC JUMP 0x2d74 <_mDNS_vsnprintf+0x4c0> (BP);
    2d48:	10 91       	R0 = [P2];
    2d4a:	23 60       	R3 = 0x4 (X);		/*		R3=0x4(  4) */
    2d4c:	18 08       	CC = R0 == R3;
    2d4e:	05 18       	IF CC JUMP 0x2d58 <_mDNS_vsnprintf+0x4a4>;
    2d50:	37 60       	R7 = 0x6 (X);		/*		R7=0x6(  6) */
    2d52:	38 08       	CC = R0 == R7;
    2d54:	06 14       	IF !CC JUMP 0x2d60 <_mDNS_vsnprintf+0x4ac> (BP);
    2d56:	03 20       	JUMP.S 0x2d5c <_mDNS_vsnprintf+0x4a8>;
    2d58:	22 6c       	P2 += 0x4;		/* (  4) */
    2d5a:	16 20       	JUMP.S 0x2d86 <_mDNS_vsnprintf+0x4d2>;
    2d5c:	22 6c       	P2 += 0x4;		/* (  4) */
    2d5e:	44 20       	JUMP.S 0x2de6 <_mDNS_vsnprintf+0x532>;
    2d60:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x7(  7) */
    2d64:	43 30       	R0 = P3;
    2d66:	21 e1 2c 01 	R1 = 0x12c (X);		/*		R1=0x12c(300) */
    2d6a:	02 e1 e8 07 	R2.L = 0x7e8;		/* (2024)	R2=0x7e8(2024) */
    2d6e:	ff e3 99 fd 	CALL 0x28a0 <_mDNS_snprintf>;
    2d72:	84 20       	JUMP.S 0x2e7a <_mDNS_vsnprintf+0x5c6>;
    2d74:	30 60       	R0 = 0x6 (X);		/*		R0=0x6(  6) */
    2d76:	05 08       	CC = R5 == R0;
    2d78:	1c 18       	IF CC JUMP 0x2db0 <_mDNS_vsnprintf+0x4fc>;
    2d7a:	81 60       	R1 = 0x10 (X);		/*		R1=0x10( 16) */
    2d7c:	0d 08       	CC = R5 == R1;
    2d7e:	34 18       	IF CC JUMP 0x2de6 <_mDNS_vsnprintf+0x532>;
    2d80:	22 60       	R2 = 0x4 (X);		/*		R2=0x4(  4) */
    2d82:	15 08       	CC = R5 == R2;
    2d84:	6d 14       	IF !CC JUMP 0x2e5e <_mDNS_vsnprintf+0x5aa> (BP);
    2d86:	10 99       	R0 = B[P2] (Z);
    2d88:	f0 b0       	[SP + 0xc] = R0;
    2d8a:	90 e4 01 00 	R0 = B[P2 + 0x1] (Z);
    2d8e:	30 b1       	[SP + 0x10] = R0;
    2d90:	90 e4 02 00 	R0 = B[P2 + 0x2] (Z);
    2d94:	70 b1       	[SP + 0x14] = R0;
    2d96:	90 e4 03 00 	R0 = B[P2 + 0x3] (Z);
    2d9a:	b0 b1       	[SP + 0x18] = R0;
    2d9c:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x4(  4) */
    2da0:	43 30       	R0 = P3;
    2da2:	21 e1 2c 01 	R1 = 0x12c (X);		/*		R1=0x12c(300) */
    2da6:	02 e1 fc 07 	R2.L = 0x7fc;		/* (2044)	R2=0x7fc(2044) */
    2daa:	ff e3 7b fd 	CALL 0x28a0 <_mDNS_snprintf>;
    2dae:	66 20       	JUMP.S 0x2e7a <_mDNS_vsnprintf+0x5c6>;
    2db0:	10 99       	R0 = B[P2] (Z);
    2db2:	f0 b0       	[SP + 0xc] = R0;
    2db4:	90 e4 01 00 	R0 = B[P2 + 0x1] (Z);
    2db8:	30 b1       	[SP + 0x10] = R0;
    2dba:	90 e4 02 00 	R0 = B[P2 + 0x2] (Z);
    2dbe:	70 b1       	[SP + 0x14] = R0;
    2dc0:	90 e4 03 00 	R0 = B[P2 + 0x3] (Z);
    2dc4:	b0 b1       	[SP + 0x18] = R0;
    2dc6:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
    2dca:	f0 b1       	[SP + 0x1c] = R0;
    2dcc:	90 e4 05 00 	R0 = B[P2 + 0x5] (Z);
    2dd0:	30 b2       	[SP + 0x20] = R0;
    2dd2:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x7fc(2044) */
    2dd6:	43 30       	R0 = P3;
    2dd8:	21 e1 2c 01 	R1 = 0x12c (X);		/*		R1=0x12c(300) */
    2ddc:	02 e1 08 08 	R2.L = 0x808;		/* (2056)	R2=0x808(2056) */
    2de0:	ff e3 60 fd 	CALL 0x28a0 <_mDNS_snprintf>;
    2de4:	4b 20       	JUMP.S 0x2e7a <_mDNS_vsnprintf+0x5c6>;
    2de6:	10 99       	R0 = B[P2] (Z);
    2de8:	f0 b0       	[SP + 0xc] = R0;
    2dea:	90 e4 01 00 	R0 = B[P2 + 0x1] (Z);
    2dee:	30 b1       	[SP + 0x10] = R0;
    2df0:	90 e4 02 00 	R0 = B[P2 + 0x2] (Z);
    2df4:	70 b1       	[SP + 0x14] = R0;
    2df6:	90 e4 03 00 	R0 = B[P2 + 0x3] (Z);
    2dfa:	b0 b1       	[SP + 0x18] = R0;
    2dfc:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
    2e00:	f0 b1       	[SP + 0x1c] = R0;
    2e02:	90 e4 05 00 	R0 = B[P2 + 0x5] (Z);
    2e06:	30 b2       	[SP + 0x20] = R0;
    2e08:	90 e4 06 00 	R0 = B[P2 + 0x6] (Z);
    2e0c:	70 b2       	[SP + 0x24] = R0;
    2e0e:	90 e4 07 00 	R0 = B[P2 + 0x7] (Z);
    2e12:	b0 b2       	[SP + 0x28] = R0;
    2e14:	90 e4 08 00 	R0 = B[P2 + 0x8] (Z);
    2e18:	f0 b2       	[SP + 0x2c] = R0;
    2e1a:	90 e4 09 00 	R0 = B[P2 + 0x9] (Z);
    2e1e:	30 b3       	[SP + 0x30] = R0;
    2e20:	90 e4 0a 00 	R0 = B[P2 + 0xa] (Z);
    2e24:	70 b3       	[SP + 0x34] = R0;
    2e26:	90 e4 0b 00 	R0 = B[P2 + 0xb] (Z);
    2e2a:	b0 b3       	[SP + 0x38] = R0;
    2e2c:	90 e4 0c 00 	R0 = B[P2 + 0xc] (Z);
    2e30:	f0 b3       	[SP + 0x3c] = R0;
    2e32:	90 e4 0d 00 	R0 = B[P2 + 0xd] (Z);
    2e36:	30 e6 10 00 	[SP + 0x40] = R0;
    2e3a:	90 e4 0e 00 	R0 = B[P2 + 0xe] (Z);
    2e3e:	30 e6 11 00 	[SP + 0x44] = R0;
    2e42:	90 e4 0f 00 	R0 = B[P2 + 0xf] (Z);
    2e46:	30 e6 12 00 	[SP + 0x48] = R0;
    2e4a:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x808(2056) */
    2e4e:	43 30       	R0 = P3;
    2e50:	21 e1 2c 01 	R1 = 0x12c (X);		/*		R1=0x12c(300) */
    2e54:	02 e1 28 08 	R2.L = 0x828;		/* (2088)	R2=0x828(2088) */
    2e58:	ff e3 24 fd 	CALL 0x28a0 <_mDNS_snprintf>;
    2e5c:	0f 20       	JUMP.S 0x2e7a <_mDNS_vsnprintf+0x5c6>;
    2e5e:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x6(  6) */
    2e62:	00 e1 74 08 	R0.L = 0x874;		/* (2164)	R0=0x874(2164) */
    2e66:	f0 b0       	[SP + 0xc] = R0;
    2e68:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x828(2088) */
    2e6c:	43 30       	R0 = P3;
    2e6e:	21 e1 2c 01 	R1 = 0x12c (X);		/*		R1=0x12c(300) */
    2e72:	02 e1 70 08 	R2.L = 0x870;		/* (2160)	R2=0x870(2160) */
    2e76:	ff e3 15 fd 	CALL 0x28a0 <_mDNS_snprintf>;
    2e7a:	38 30       	R7 = R0;
    2e7c:	6b 32       	P5 = P3;
    2e7e:	b6 21       	JUMP.S 0x31ea <_mDNS_vsnprintf+0x936>;
    2e80:	0b 60       	R3 = 0x1 (X);		/*		R3=0x1(  1) */
    2e82:	0f 60       	R7 = 0x1 (X);		/*		R7=0x1(  1) */
    2e84:	45 60       	R5 = 0x8 (X);		/*		R5=0x8(  8) */
    2e86:	b3 e6 60 00 	B[SP + 0x60] = R3;
    2e8a:	b7 e6 68 00 	B[SP + 0x68] = R7;
    2e8e:	43 e1 00 00 	R3.H = 0x0;		/* (  0)	R3=0x1(  1) */
    2e92:	03 e1 c0 07 	R3.L = 0x7c0;		/* (1984)	R3=0x7c0(1984) */
    2e96:	05 20       	JUMP.S 0x2ea0 <_mDNS_vsnprintf+0x5ec>;
    2e98:	43 e1 00 00 	R3.H = 0x0;		/* (  0)	R3=0x7c0(1984) */
    2e9c:	03 e1 d4 07 	R3.L = 0x7d4;		/* (2004)	R3=0x7d4(2004) */
    2ea0:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    2ea2:	b7 e5 5c 00 	R7 = B[SP + 0x5c] (X);
    2ea6:	87 54       	R2 = R7 & R0;
    2ea8:	b7 e5 a4 02 	R7 = B[SP + 0x2a4] (X);
    2eac:	12 4f       	R2 <<= 0x2;
    2eae:	17 4c       	BITCLR (R7, 0x2);		/* bit  2 */
    2eb0:	d7 57       	R7 = R7 | R2;
    2eb2:	b2 e5 68 00 	R2 = B[SP + 0x68] (X);
    2eb6:	82 54       	R2 = R2 & R0;
    2eb8:	1f 4c       	BITCLR (R7, 0x3);		/* bit  3 */
    2eba:	1a 4f       	R2 <<= 0x3;
    2ebc:	97 56       	R2 = R7 | R2;
    2ebe:	b7 e5 64 00 	R7 = B[SP + 0x64] (X);
    2ec2:	c7 55       	R7 = R7 & R0;
    2ec4:	22 4c       	BITCLR (R2, 0x4);		/* bit  4 */
    2ec6:	27 4f       	R7 <<= 0x4;
    2ec8:	fa 57       	R7 = R2 | R7;
    2eca:	b2 e5 60 00 	R2 = B[SP + 0x60] (X);
    2ece:	02 54       	R0 = R2 & R0;
    2ed0:	82 c6 28 84 	R2 = R0 << 0x5;
    2ed4:	2f 4c       	BITCLR (R7, 0x5);		/* bit  5 */
    2ed6:	44 30       	R0 = P4;
    2ed8:	97 56       	R2 = R7 | R2;
    2eda:	20 64       	R0 += 0x4;		/* (  4) */
    2edc:	b2 e6 a4 02 	B[SP + 0x2a4] = R2;
    2ee0:	30 e6 16 00 	[SP + 0x58] = R0;
    2ee4:	20 91       	R0 = [P4];
    2ee6:	22 48       	CC = !BITTST (R2, 0x4);		/* bit  4 */
    2ee8:	c7 42       	R7 = R0.L (Z);
    2eea:	07 06       	IF !CC R0 = R7;
    2eec:	1a 48       	CC = !BITTST (R2, 0x3);		/* bit  3 */
    2eee:	0c 14       	IF !CC JUMP 0x2f06 <_mDNS_vsnprintf+0x652> (BP);
    2ef0:	12 48       	CC = !BITTST (R2, 0x2);		/* bit  2 */
    2ef2:	08 1c       	IF CC JUMP 0x2f02 <_mDNS_vsnprintf+0x64e> (BP);
    2ef4:	0a 43       	R2 = R1.B (X);
    2ef6:	02 0c       	CC = R2 == 0x0;
    2ef8:	04 1c       	IF CC JUMP 0x2f00 <_mDNS_vsnprintf+0x64c> (BP);
    2efa:	6f 30       	R5 = FP;
    2efc:	f5 67       	R5 += -0x2;		/* ( -2) */
    2efe:	02 20       	JUMP.S 0x2f02 <_mDNS_vsnprintf+0x64e>;
    2f00:	6f 30       	R5 = FP;
    2f02:	05 0c       	CC = R5 == 0x0;
    2f04:	06 1c       	IF CC JUMP 0x2f10 <_mDNS_vsnprintf+0x65c> (BP);
    2f06:	27 e1 2b 01 	R7 = 0x12b (X);		/*		R7=0x12b(299) */
    2f0a:	3d 0a       	CC = R5 <= R7 (IU);
    2f0c:	2f 06       	IF !CC R5 = R7;
    2f0e:	02 20       	JUMP.S 0x2f12 <_mDNS_vsnprintf+0x65e>;
    2f10:	0d 60       	R5 = 0x1 (X);		/*		R5=0x1(  1) */
    2f12:	28 e1 a4 01 	P0 = 0x1a4 (X);		/*		P0=0x1a4(420) */
    2f16:	70 5b       	P5 = P0 + SP;
    2f18:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    2f1a:	7a 60       	R2 = 0xf (X);		/*		R2=0xf( 15) */
    2f1c:	09 32       	P1 = R1;
    2f1e:	0a 20       	JUMP.S 0x2f32 <_mDNS_vsnprintf+0x67e>;
    2f20:	50 54       	R1 = R0 & R2;
    2f22:	11 32       	P2 = R1;
    2f24:	03 32       	P0 = R3;
    2f26:	fd 6f       	P5 += -0x1;		/* ( -1) */
    2f28:	20 4e       	R0 >>= 0x4;
    2f2a:	0f 64       	R7 += 0x1;		/* (  1) */
    2f2c:	90 5a       	P2 = P0 + P2;
    2f2e:	51 99       	R1 = B[P2] (X);
    2f30:	29 9b       	B[P5] = R1;
    2f32:	00 0c       	CC = R0 == 0x0;
    2f34:	f6 17       	IF !CC JUMP 0x2f20 <_mDNS_vsnprintf+0x66c> (BP);
    2f36:	05 20       	JUMP.S 0x2f40 <_mDNS_vsnprintf+0x68c>;
    2f38:	fd 6f       	P5 += -0x1;		/* ( -1) */
    2f3a:	28 9b       	B[P5] = R0;
    2f3c:	0f 64       	R7 += 0x1;		/* (  1) */
    2f3e:	03 20       	JUMP.S 0x2f44 <_mDNS_vsnprintf+0x690>;
    2f40:	49 30       	R1 = P1;
    2f42:	80 61       	R0 = 0x30 (X);		/*		R0=0x30( 48) */
    2f44:	af 09       	CC = R7 < R5 (IU);
    2f46:	f9 1f       	IF CC JUMP 0x2f38 <_mDNS_vsnprintf+0x684> (BP);
    2f48:	09 43       	R1 = R1.B (X);
    2f4a:	01 0c       	CC = R1 == 0x0;
    2f4c:	4f 1d       	IF CC JUMP 0x31ea <_mDNS_vsnprintf+0x936> (BP);
    2f4e:	55 32       	P2 = P5;
    2f50:	ae e6 ff ff 	B[P5 + -0x1] = R6;
    2f54:	fa 6f       	P2 += -0x1;		/* ( -1) */
    2f56:	80 61       	R0 = 0x30 (X);		/*		R0=0x30( 48) */
    2f58:	f5 6f       	P5 += -0x2;		/* ( -2) */
    2f5a:	90 e6 ff ff 	B[P2 + -0x1] = R0;
    2f5e:	17 64       	R7 += 0x2;		/* (  2) */
    2f60:	45 21       	JUMP.S 0x31ea <_mDNS_vsnprintf+0x936>;
    2f62:	4c 32       	P1 = P4;
    2f64:	21 6c       	P1 += 0x4;		/* (  4) */
    2f66:	60 99       	R0 = B[P4] (X);
    2f68:	2a e1 a3 01 	P2 = 0x1a3 (X);		/*		P2=0x1a3(419) */
    2f6c:	31 e7 16 00 	[SP + 0x58] = P1;
    2f70:	b0 e6 a3 01 	B[SP + 0x1a3] = R0;
    2f74:	72 5b       	P5 = P2 + SP;
    2f76:	0f 60       	R7 = 0x1 (X);		/*		R7=0x1(  1) */
    2f78:	39 21       	JUMP.S 0x31ea <_mDNS_vsnprintf+0x936>;
    2f7a:	65 91       	P5 = [P4];
    2f7c:	44 30       	R0 = P4;
    2f7e:	20 64       	R0 += 0x4;		/* (  4) */
    2f80:	30 e6 16 00 	[SP + 0x58] = R0;
    2f84:	45 0c       	CC = P5 == 0x0;
    2f86:	aa 18       	IF CC JUMP 0x30da <_mDNS_vsnprintf+0x826>;
    2f88:	09 43       	R1 = R1.B (X);
    2f8a:	09 0c       	CC = R1 == 0x1;
    2f8c:	55 18       	IF CC JUMP 0x3036 <_mDNS_vsnprintf+0x782>;
    2f8e:	11 0c       	CC = R1 == 0x2;
    2f90:	55 18       	IF CC JUMP 0x303a <_mDNS_vsnprintf+0x786>;
    2f92:	01 0c       	CC = R1 == 0x0;
    2f94:	a9 14       	IF !CC JUMP 0x30e6 <_mDNS_vsnprintf+0x832> (BP);
    2f96:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    2f98:	b2 e5 5c 00 	R2 = B[SP + 0x5c] (X);
    2f9c:	ca 54       	R3 = R2 & R1;
    2f9e:	b2 e5 a4 02 	R2 = B[SP + 0x2a4] (X);
    2fa2:	13 4f       	R3 <<= 0x2;
    2fa4:	12 4c       	BITCLR (R2, 0x2);		/* bit  2 */
    2fa6:	9a 56       	R2 = R2 | R3;
    2fa8:	b3 e5 64 00 	R3 = B[SP + 0x64] (X);
    2fac:	0b 54       	R0 = R3 & R1;
    2fae:	20 4f       	R0 <<= 0x4;
    2fb0:	22 4c       	BITCLR (R2, 0x4);		/* bit  4 */
    2fb2:	b7 e5 60 00 	R7 = B[SP + 0x60] (X);
    2fb6:	02 56       	R0 = R2 | R0;
    2fb8:	4f 54       	R1 = R7 & R1;
    2fba:	29 4f       	R1 <<= 0x5;
    2fbc:	28 4c       	BITCLR (R0, 0x5);		/* bit  5 */
    2fbe:	08 56       	R0 = R0 | R1;
    2fc0:	b0 e6 a4 02 	B[SP + 0x2a4] = R0;
    2fc4:	18 48       	CC = !BITTST (R0, 0x3);		/* bit  3 */
    2fc6:	04 1c       	IF CC JUMP 0x2fce <_mDNS_vsnprintf+0x71a> (BP);
    2fc8:	55 32       	P2 = P5;
    2fca:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2fcc:	0a 20       	JUMP.S 0x2fe0 <_mDNS_vsnprintf+0x72c>;
    2fce:	55 32       	P2 = P5;
    2fd0:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    2fd2:	02 20       	JUMP.S 0x2fd6 <_mDNS_vsnprintf+0x722>;
    2fd4:	0f 64       	R7 += 0x1;		/* (  1) */
    2fd6:	50 98       	R0 = B[P2++] (X);
    2fd8:	00 0c       	CC = R0 == 0x0;
    2fda:	fd 17       	IF !CC JUMP 0x2fd4 <_mDNS_vsnprintf+0x720> (BP);
    2fdc:	86 20       	JUMP.S 0x30e8 <_mDNS_vsnprintf+0x834>;
    2fde:	08 64       	R0 += 0x1;		/* (  1) */
    2fe0:	a8 09       	CC = R0 < R5 (IU);
    2fe2:	0a 1c       	IF CC JUMP 0x2ff6 <_mDNS_vsnprintf+0x742> (BP);
    2fe4:	10 32       	P2 = R0;
    2fe6:	38 30       	R7 = R0;
    2fe8:	22 e1 c0 00 	R2 = 0xc0 (X);		/*		R2=0xc0(192) */
    2fec:	23 e1 80 00 	R3 = 0x80 (X);		/*		R3=0x80(128) */
    2ff0:	fa 6f       	P2 += -0x1;		/* ( -1) */
    2ff2:	95 5a       	P2 = P5 + P2;
    2ff4:	07 20       	JUMP.S 0x3002 <_mDNS_vsnprintf+0x74e>;
    2ff6:	00 00       	NOP;
    2ff8:	51 98       	R1 = B[P2++] (X);
    2ffa:	01 0c       	CC = R1 == 0x0;
    2ffc:	f1 17       	IF !CC JUMP 0x2fde <_mDNS_vsnprintf+0x72a> (BP);
    2ffe:	f3 2f       	JUMP.S 0x2fe4 <_mDNS_vsnprintf+0x730>;
    3000:	ff 67       	R7 += -0x1;		/* ( -1) */
    3002:	07 0c       	CC = R7 == 0x0;
    3004:	72 1c       	IF CC JUMP 0x30e8 <_mDNS_vsnprintf+0x834> (BP);
    3006:	d1 98       	R1 = B[P2--] (X);
    3008:	51 54       	R1 = R1 & R2;
    300a:	19 08       	CC = R1 == R3;
    300c:	fa 1f       	IF CC JUMP 0x3000 <_mDNS_vsnprintf+0x74c> (BP);
    300e:	22 e1 c0 00 	R2 = 0xc0 (X);		/*		R2=0xc0(192) */
    3012:	11 08       	CC = R1 == R2;
    3014:	6a 14       	IF !CC JUMP 0x30e8 <_mDNS_vsnprintf+0x834> (BP);
    3016:	ff 67       	R7 += -0x1;		/* ( -1) */
    3018:	78 52       	R1 = R0 - R7;
    301a:	31 0e       	CC = R1 <= 0x6 (IU);
    301c:	66 14       	IF !CC JUMP 0x30e8 <_mDNS_vsnprintf+0x834> (BP);
    301e:	07 32       	P0 = R7;
    3020:	87 52       	R2 = R7 - R0;
    3022:	3a 64       	R2 += 0x7;		/* (  7) */
    3024:	85 5a       	P2 = P5 + P0;
    3026:	51 99       	R1 = B[P2] (X);
    3028:	11 40       	R1 >>>= R2;
    302a:	49 43       	R1 = R1.B (Z);
    302c:	22 e1 fe 00 	R2 = 0xfe (X);		/*		R2=0xfe(254) */
    3030:	11 08       	CC = R1 == R2;
    3032:	38 07       	IF CC R7 = R0;
    3034:	5a 20       	JUMP.S 0x30e8 <_mDNS_vsnprintf+0x834>;
    3036:	2f 98       	R7 = B[P5++] (Z);
    3038:	58 20       	JUMP.S 0x30e8 <_mDNS_vsnprintf+0x834>;
    303a:	28 99       	R0 = B[P5] (Z);
    303c:	00 0c       	CC = R0 == 0x0;
    303e:	07 14       	IF !CC JUMP 0x304c <_mDNS_vsnprintf+0x798> (BP);
    3040:	70 61       	R0 = 0x2e (X);		/*		R0=0x2e( 46) */
    3042:	7b 30       	R7 = P3;
    3044:	b0 e6 78 00 	B[SP + 0x78] = R0;
    3048:	0f 64       	R7 += 0x1;		/* (  1) */
    304a:	41 20       	JUMP.S 0x30cc <_mDNS_vsnprintf+0x818>;
    304c:	7b 30       	R7 = P3;
    304e:	3f 20       	JUMP.S 0x30cc <_mDNS_vsnprintf+0x818>;
    3050:	fb 61       	R3 = 0x3f (X);		/*		R3=0x3f( 63) */
    3052:	18 0a       	CC = R0 <= R3 (IU);
    3054:	0d 1c       	IF CC JUMP 0x306e <_mDNS_vsnprintf+0x7ba> (BP);
    3056:	32 e4 14 00 	R2 = [SP + 0x50];
    305a:	7a 52       	R1 = R2 - R7;
    305c:	f0 b0       	[SP + 0xc] = R0;
    305e:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0xfe(254) */
    3062:	07 30       	R0 = R7;
    3064:	02 e1 c8 08 	R2.L = 0x8c8;		/* (2248)	R2=0x8c8(2248) */
    3068:	ff e3 1c fc 	CALL 0x28a0 <_mDNS_snprintf>;
    306c:	12 20       	JUMP.S 0x3090 <_mDNS_vsnprintf+0x7dc>;
    306e:	07 50       	R0 = R7 + R0;
    3070:	33 e4 13 00 	R3 = [SP + 0x4c];
    3074:	98 09       	CC = R0 < R3 (IU);
    3076:	0f 1c       	IF CC JUMP 0x3094 <_mDNS_vsnprintf+0x7e0> (BP);
    3078:	43 30       	R0 = P3;
    307a:	22 e1 2c 01 	R2 = 0x12c (X);		/*		R2=0x12c(300) */
    307e:	50 50       	R1 = R0 + R2;
    3080:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x12c(300) */
    3084:	79 52       	R1 = R1 - R7;
    3086:	07 30       	R0 = R7;
    3088:	02 e1 e4 08 	R2.L = 0x8e4;		/* (2276)	R2=0x8e4(2276) */
    308c:	ff e3 0a fc 	CALL 0x28a0 <_mDNS_snprintf>;
    3090:	c7 51       	R7 = R7 + R0;
    3092:	20 20       	JUMP.S 0x30d2 <_mDNS_vsnprintf+0x81e>;
    3094:	28 e1 a4 01 	P0 = 0x1a4 (X);		/*		P0=0x1a4(420) */
    3098:	30 5a       	P0 = P0 + SP;
    309a:	48 30       	R1 = P0;
    309c:	45 30       	R0 = P5;
    309e:	22 e1 5c 00 	R2 = 0x5c (X);		/*		R2=0x5c( 92) */
    30a2:	ff e3 15 eb 	CALL 0x6cc <_ConvertDomainLabelToCString_withescape>;
    30a6:	30 e4 14 00 	R0 = [SP + 0x50];
    30aa:	28 e1 a4 01 	P0 = 0x1a4 (X);		/*		P0=0x1a4(420) */
    30ae:	78 52       	R1 = R0 - R7;
    30b0:	30 5a       	P0 = P0 + SP;
    30b2:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x5c( 92) */
    30b6:	07 30       	R0 = R7;
    30b8:	f0 bc       	[SP + 0xc] = P0;
    30ba:	02 e1 f8 08 	R2.L = 0x8f8;		/* (2296)	R2=0x8f8(2296) */
    30be:	ff e3 f1 fb 	CALL 0x28a0 <_mDNS_snprintf>;
    30c2:	c7 51       	R7 = R7 + R0;
    30c4:	28 99       	R0 = B[P5] (Z);
    30c6:	08 64       	R0 += 0x1;		/* (  1) */
    30c8:	08 32       	P1 = R0;
    30ca:	4d 5b       	P5 = P5 + P1;
    30cc:	28 99       	R0 = B[P5] (Z);
    30ce:	00 0c       	CC = R0 == 0x0;
    30d0:	c0 17       	IF !CC JUMP 0x3050 <_mDNS_vsnprintf+0x79c> (BP);
    30d2:	43 30       	R0 = P3;
    30d4:	c7 53       	R7 = R7 - R0;
    30d6:	6b 32       	P5 = P3;
    30d8:	08 20       	JUMP.S 0x30e8 <_mDNS_vsnprintf+0x834>;
    30da:	4d e1 00 00 	P5.H = 0x0;		/* (  0)	P5=0x12 */
    30de:	0d e1 00 00 	P5.L = 0x0;		/* (  0)	P5=0x0 <_putVal32> */
    30e2:	47 60       	R7 = 0x8 (X);		/*		R7=0x8(  8) */
    30e4:	02 20       	JUMP.S 0x30e8 <_mDNS_vsnprintf+0x834>;
    30e6:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    30e8:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    30ea:	b1 e5 70 00 	R1 = B[SP + 0x70] (X);
    30ee:	81 54       	R2 = R1 & R0;
    30f0:	b1 e5 a4 02 	R1 = B[SP + 0x2a4] (X);
    30f4:	01 4c       	BITCLR (R1, 0x0);		/* bit  0 */
    30f6:	51 56       	R1 = R1 | R2;
    30f8:	b2 e5 74 00 	R2 = B[SP + 0x74] (X);
    30fc:	82 55       	R6 = R2 & R0;
    30fe:	09 4c       	BITCLR (R1, 0x1);		/* bit  1 */
    3100:	0e 4f       	R6 <<= 0x1;
    3102:	b1 57       	R6 = R1 | R6;
    3104:	b1 e5 5c 00 	R1 = B[SP + 0x5c] (X);
    3108:	c1 54       	R3 = R1 & R0;
    310a:	b1 e5 68 00 	R1 = B[SP + 0x68] (X);
    310e:	13 4f       	R3 <<= 0x2;
    3110:	16 4c       	BITCLR (R6, 0x2);		/* bit  2 */
    3112:	81 54       	R2 = R1 & R0;
    3114:	de 56       	R3 = R6 | R3;
    3116:	1b 4c       	BITCLR (R3, 0x3);		/* bit  3 */
    3118:	1a 4f       	R2 <<= 0x3;
    311a:	93 56       	R2 = R3 | R2;
    311c:	b3 e5 64 00 	R3 = B[SP + 0x64] (X);
    3120:	43 54       	R1 = R3 & R0;
    3122:	22 4c       	BITCLR (R2, 0x4);		/* bit  4 */
    3124:	21 4f       	R1 <<= 0x4;
    3126:	4a 56       	R1 = R2 | R1;
    3128:	b2 e5 60 00 	R2 = B[SP + 0x60] (X);
    312c:	02 54       	R0 = R2 & R0;
    312e:	28 4f       	R0 <<= 0x5;
    3130:	29 4c       	BITCLR (R1, 0x5);		/* bit  5 */
    3132:	41 56       	R1 = R1 | R0;
    3134:	b1 e6 a4 02 	B[SP + 0x2a4] = R1;
    3138:	19 48       	CC = !BITTST (R1, 0x3);		/* bit  3 */
    313a:	58 1c       	IF CC JUMP 0x31ea <_mDNS_vsnprintf+0x936> (BP);
    313c:	2f 0a       	CC = R7 <= R5 (IU);
    313e:	56 1c       	IF CC JUMP 0x31ea <_mDNS_vsnprintf+0x936> (BP);
    3140:	05 32       	P0 = R5;
    3142:	3d 30       	R7 = R5;
    3144:	20 e1 c0 00 	R0 = 0xc0 (X);		/*		R0=0xc0(192) */
    3148:	22 e1 80 00 	R2 = 0x80 (X);		/*		R2=0x80(128) */
    314c:	85 5a       	P2 = P5 + P0;
    314e:	02 20       	JUMP.S 0x3152 <_mDNS_vsnprintf+0x89e>;
    3150:	ff 67       	R7 += -0x1;		/* ( -1) */
    3152:	07 0c       	CC = R7 == 0x0;
    3154:	4b 1c       	IF CC JUMP 0x31ea <_mDNS_vsnprintf+0x936> (BP);
    3156:	d1 98       	R1 = B[P2--] (X);
    3158:	41 54       	R1 = R1 & R0;
    315a:	11 08       	CC = R1 == R2;
    315c:	fa 1f       	IF CC JUMP 0x3150 <_mDNS_vsnprintf+0x89c> (BP);
    315e:	46 20       	JUMP.S 0x31ea <_mDNS_vsnprintf+0x936>;
    3160:	5c 30       	R3 = P4;
    3162:	23 64       	R3 += 0x4;		/* (  4) */
    3164:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    3166:	b7 e5 5c 00 	R7 = B[SP + 0x5c] (X);
    316a:	33 e6 16 00 	[SP + 0x58] = R3;
    316e:	cf 54       	R3 = R7 & R1;
    3170:	b2 e5 a4 02 	R2 = B[SP + 0x2a4] (X);
    3174:	13 4f       	R3 <<= 0x2;
    3176:	12 4c       	BITCLR (R2, 0x2);		/* bit  2 */
    3178:	9a 56       	R2 = R2 | R3;
    317a:	b3 e5 64 00 	R3 = B[SP + 0x64] (X);
    317e:	0b 54       	R0 = R3 & R1;
    3180:	20 4f       	R0 <<= 0x4;
    3182:	22 4c       	BITCLR (R2, 0x4);		/* bit  4 */
    3184:	b7 e5 60 00 	R7 = B[SP + 0x60] (X);
    3188:	02 56       	R0 = R2 | R0;
    318a:	4f 54       	R1 = R7 & R1;
    318c:	29 4f       	R1 <<= 0x5;
    318e:	28 4c       	BITCLR (R0, 0x5);		/* bit  5 */
    3190:	08 56       	R0 = R0 | R1;
    3192:	62 91       	P2 = [P4];
    3194:	b0 e6 a4 02 	B[SP + 0x2a4] = R0;
    3198:	20 48       	CC = !BITTST (R0, 0x4);		/* bit  4 */
    319a:	03 1c       	IF CC JUMP 0x31a0 <_mDNS_vsnprintf+0x8ec> (BP);
    319c:	14 97       	W[P2] = R4;
    319e:	9b 20       	JUMP.S 0x32d4 <_mDNS_vsnprintf+0xa20>;
    31a0:	14 93       	[P2] = R4;
    31a2:	99 20       	JUMP.S 0x32d4 <_mDNS_vsnprintf+0xa20>;
    31a4:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x80(128) */
    31a8:	f6 b0       	[SP + 0xc] = R6;
    31aa:	43 30       	R0 = P3;
    31ac:	21 e1 2c 01 	R1 = 0x12c (X);		/*		R1=0x12c(300) */
    31b0:	02 e1 fc 08 	R2.L = 0x8fc;		/* (2300)	R2=0x8fc(2300) */
    31b4:	ff e3 76 fb 	CALL 0x28a0 <_mDNS_snprintf>;
    31b8:	38 30       	R7 = R0;
    31ba:	6b 32       	P5 = P3;
    31bc:	05 20       	JUMP.S 0x31c6 <_mDNS_vsnprintf+0x912>;
    31be:	28 e1 a4 01 	P0 = 0x1a4 (X);		/*		P0=0x1a4(420) */
    31c2:	70 5b       	P5 = P0 + SP;
    31c4:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    31c6:	31 e5 b5 00 	P1 = [SP + 0x2d4];
    31ca:	0c 64       	R4 += 0x1;		/* (  1) */
    31cc:	0e 9a       	B[P1++] = R6;
    31ce:	30 e4 1b 00 	R0 = [SP + 0x6c];
    31d2:	31 e7 b5 00 	[SP + 0x2d4] = P1;
    31d6:	84 09       	CC = R4 < R0 (IU);
    31d8:	8b 10       	IF !CC JUMP 0x32ee <_mDNS_vsnprintf+0xa3a>;
    31da:	34 e7 16 00 	[SP + 0x58] = P4;
    31de:	06 20       	JUMP.S 0x31ea <_mDNS_vsnprintf+0x936>;
    31e0:	4d e1 00 00 	P5.H = 0x0;		/* (  0)	P5=0x0 <_putVal32> */
    31e4:	0d e1 0c 00 	P5.L = 0xc;		/* ( 12)	P5=0xc */
    31e8:	47 60       	R7 = 0x8 (X);		/*		R7=0x8(  8) */
    31ea:	4f 30       	R1 = FP;
    31ec:	8f 09       	CC = R7 < R1 (IU);
    31ee:	3b 14       	IF !CC JUMP 0x3264 <_mDNS_vsnprintf+0x9b0> (BP);
    31f0:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    31f2:	b3 e5 70 00 	R3 = B[SP + 0x70] (X);
    31f6:	b1 e5 a4 02 	R1 = B[SP + 0x2a4] (X);
    31fa:	83 54       	R2 = R3 & R0;
    31fc:	01 4c       	BITCLR (R1, 0x0);		/* bit  0 */
    31fe:	51 56       	R1 = R1 | R2;
    3200:	b2 e5 74 00 	R2 = B[SP + 0x74] (X);
    3204:	82 55       	R6 = R2 & R0;
    3206:	09 4c       	BITCLR (R1, 0x1);		/* bit  1 */
    3208:	0e 4f       	R6 <<= 0x1;
    320a:	b1 57       	R6 = R1 | R6;
    320c:	b1 e5 5c 00 	R1 = B[SP + 0x5c] (X);
    3210:	c1 54       	R3 = R1 & R0;
    3212:	b1 e5 68 00 	R1 = B[SP + 0x68] (X);
    3216:	13 4f       	R3 <<= 0x2;
    3218:	16 4c       	BITCLR (R6, 0x2);		/* bit  2 */
    321a:	81 54       	R2 = R1 & R0;
    321c:	de 56       	R3 = R6 | R3;
    321e:	1b 4c       	BITCLR (R3, 0x3);		/* bit  3 */
    3220:	1a 4f       	R2 <<= 0x3;
    3222:	93 56       	R2 = R3 | R2;
    3224:	b3 e5 64 00 	R3 = B[SP + 0x64] (X);
    3228:	43 54       	R1 = R3 & R0;
    322a:	22 4c       	BITCLR (R2, 0x4);		/* bit  4 */
    322c:	21 4f       	R1 <<= 0x4;
    322e:	4a 56       	R1 = R2 | R1;
    3230:	b3 e5 60 00 	R3 = B[SP + 0x60] (X);
    3234:	83 54       	R2 = R3 & R0;
    3236:	2a 4f       	R2 <<= 0x5;
    3238:	29 4c       	BITCLR (R1, 0x5);		/* bit  5 */
    323a:	51 56       	R1 = R1 | R2;
    323c:	b1 e6 a4 02 	B[SP + 0x2a4] = R1;
    3240:	41 54       	R1 = R1 & R0;
    3242:	01 48       	CC = !BITTST (R1, 0x0);		/* bit  0 */
    3244:	10 14       	IF !CC JUMP 0x3264 <_mDNS_vsnprintf+0x9b0> (BP);
    3246:	32 e5 b5 00 	P2 = [SP + 0x2d4];
    324a:	00 61       	R0 = 0x20 (X);		/*		R0=0x20( 32) */
    324c:	10 9a       	B[P2++] = R0;
    324e:	0c 64       	R4 += 0x1;		/* (  1) */
    3250:	31 e4 1b 00 	R1 = [SP + 0x6c];
    3254:	32 e7 b5 00 	[SP + 0x2d4] = P2;
    3258:	8c 09       	CC = R4 < R1 (IU);
    325a:	4a 10       	IF !CC JUMP 0x32ee <_mDNS_vsnprintf+0xa3a>;
    325c:	ff 6f       	FP += -0x1;		/* ( -1) */
    325e:	57 30       	R2 = FP;
    3260:	97 09       	CC = R7 < R2 (IU);
    3262:	f5 1f       	IF CC JUMP 0x324c <_mDNS_vsnprintf+0x998> (BP);
    3264:	33 e4 1b 00 	R3 = [SP + 0x6c];
    3268:	23 52       	R0 = R3 - R4;
    326a:	07 0a       	CC = R7 <= R0 (IU);
    326c:	10 1c       	IF CC JUMP 0x328c <_mDNS_vsnprintf+0x9d8> (BP);
    326e:	00 32       	P0 = R0;
    3270:	38 30       	R7 = R0;
    3272:	20 e1 c0 00 	R0 = 0xc0 (X);		/*		R0=0xc0(192) */
    3276:	22 e1 80 00 	R2 = 0x80 (X);		/*		R2=0x80(128) */
    327a:	85 5a       	P2 = P5 + P0;
    327c:	02 20       	JUMP.S 0x3280 <_mDNS_vsnprintf+0x9cc>;
    327e:	ff 67       	R7 += -0x1;		/* ( -1) */
    3280:	07 0c       	CC = R7 == 0x0;
    3282:	05 1c       	IF CC JUMP 0x328c <_mDNS_vsnprintf+0x9d8> (BP);
    3284:	d1 98       	R1 = B[P2--] (X);
    3286:	41 54       	R1 = R1 & R0;
    3288:	11 08       	CC = R1 == R2;
    328a:	fa 1f       	IF CC JUMP 0x327e <_mDNS_vsnprintf+0x9ca> (BP);
    328c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    328e:	32 e5 b5 00 	P2 = [SP + 0x2d4];
    3292:	04 20       	JUMP.S 0x329a <_mDNS_vsnprintf+0x9e6>;
    3294:	08 64       	R0 += 0x1;		/* (  1) */
    3296:	69 98       	R1 = B[P5++] (X);
    3298:	11 9a       	B[P2++] = R1;
    329a:	b8 09       	CC = R0 < R7 (IU);
    329c:	fc 1f       	IF CC JUMP 0x3294 <_mDNS_vsnprintf+0x9e0> (BP);
    329e:	33 e4 b5 00 	R3 = [SP + 0x2d4];
    32a2:	fb 50       	R3 = R3 + R7;
    32a4:	3c 51       	R4 = R4 + R7;
    32a6:	30 e4 1b 00 	R0 = [SP + 0x6c];
    32aa:	33 e6 b5 00 	[SP + 0x2d4] = R3;
    32ae:	84 09       	CC = R4 < R0 (IU);
    32b0:	1f 10       	IF !CC JUMP 0x32ee <_mDNS_vsnprintf+0xa3a>;
    32b2:	13 32       	P2 = R3;
    32b4:	00 61       	R0 = 0x20 (X);		/*		R0=0x20( 32) */
    32b6:	0a 20       	JUMP.S 0x32ca <_mDNS_vsnprintf+0xa16>;
    32b8:	10 9a       	B[P2++] = R0;
    32ba:	0c 64       	R4 += 0x1;		/* (  1) */
    32bc:	31 e4 1b 00 	R1 = [SP + 0x6c];
    32c0:	32 e7 b5 00 	[SP + 0x2d4] = P2;
    32c4:	8c 09       	CC = R4 < R1 (IU);
    32c6:	14 10       	IF !CC JUMP 0x32ee <_mDNS_vsnprintf+0xa3a>;
    32c8:	0f 64       	R7 += 0x1;		/* (  1) */
    32ca:	57 30       	R2 = FP;
    32cc:	32 e7 b5 00 	[SP + 0x2d4] = P2;
    32d0:	97 09       	CC = R7 < R2 (IU);
    32d2:	f3 1f       	IF CC JUMP 0x32b8 <_mDNS_vsnprintf+0xa04> (BP);
    32d4:	30 e5 b7 00 	P0 = [SP + 0x2dc];
    32d8:	34 e5 16 00 	P4 = [SP + 0x58];
    32dc:	08 6c       	P0 += 0x1;		/* (  1) */
    32de:	30 e7 b7 00 	[SP + 0x2dc] = P0;
    32e2:	40 99       	R0 = B[P0] (X);
    32e4:	00 0c       	CC = R0 == 0x0;
    32e6:	02 18       	IF CC JUMP 0x32ea <_mDNS_vsnprintf+0xa36>;
    32e8:	09 2b       	JUMP.S 0x28fa <_mDNS_vsnprintf+0x46>;
    32ea:	02 20       	JUMP.S 0x32ee <_mDNS_vsnprintf+0xa3a>;
    32ec:	04 60       	R4 = 0x0 (X);		/*		R4=0x0(  0) */
    32ee:	31 e5 b5 00 	P1 = [SP + 0x2d4];
    32f2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    32f4:	08 9b       	B[P1] = R0;
    32f6:	02 20       	JUMP.S 0x32fa <_mDNS_vsnprintf+0xa46>;
    32f8:	04 60       	R4 = 0x0 (X);		/*		R4=0x0(  0) */
    32fa:	29 e1 b0 02 	P1 = 0x2b0 (X);		/*		P1=0x2b0(688) */
    32fe:	8e 5b       	SP = SP + P1;
    3300:	77 90       	FP = [SP++];
    3302:	04 30       	R0 = R4;
    3304:	27 01       	RETS = [SP++];
    3306:	a3 05       	(R7:4, P5:3) = [SP++];
    3308:	10 00       	RTS;
	...

0000330c <_DNSTypeName>:
_DNSTypeName():
    330c:	67 01       	[--SP] = RETS;
    330e:	c1 42       	R1 = R0.L (Z);
    3310:	6a 60       	R2 = 0xd (X);		/*		R2=0xd( 13) */
    3312:	86 6f       	SP += -0x10;		/* (-16) */
    3314:	11 08       	CC = R1 == R2;
    3316:	4a 18       	IF CC JUMP 0x33aa <_DNSTypeName+0x9e>;
    3318:	11 0a       	CC = R1 <= R2 (IU);
    331a:	15 14       	IF !CC JUMP 0x3344 <_DNSTypeName+0x38> (BP);
    331c:	2a 60       	R2 = 0x5 (X);		/*		R2=0x5(  5) */
    331e:	11 08       	CC = R1 == R2;
    3320:	31 18       	IF CC JUMP 0x3382 <_DNSTypeName+0x76>;
    3322:	29 0e       	CC = R1 <= 0x5 (IU);
    3324:	06 14       	IF !CC JUMP 0x3330 <_DNSTypeName+0x24> (BP);
    3326:	09 0c       	CC = R1 == 0x1;
    3328:	28 18       	IF CC JUMP 0x3378 <_DNSTypeName+0x6c>;
    332a:	11 0c       	CC = R1 == 0x2;
    332c:	67 14       	IF !CC JUMP 0x33fa <_DNSTypeName+0xee> (BP);
    332e:	78 20       	JUMP.S 0x341e <_DNSTypeName+0x112>;
    3330:	52 60       	R2 = 0xa (X);		/*		R2=0xa( 10) */
    3332:	11 08       	CC = R1 == R2;
    3334:	31 18       	IF CC JUMP 0x3396 <_DNSTypeName+0x8a>;
    3336:	62 60       	R2 = 0xc (X);		/*		R2=0xc( 12) */
    3338:	11 08       	CC = R1 == R2;
    333a:	33 18       	IF CC JUMP 0x33a0 <_DNSTypeName+0x94>;
    333c:	32 60       	R2 = 0x6 (X);		/*		R2=0x6(  6) */
    333e:	11 08       	CC = R1 == R2;
    3340:	5d 14       	IF !CC JUMP 0x33fa <_DNSTypeName+0xee> (BP);
    3342:	25 20       	JUMP.S 0x338c <_DNSTypeName+0x80>;
    3344:	4a 61       	R2 = 0x29 (X);		/*		R2=0x29( 41) */
    3346:	11 08       	CC = R1 == R2;
    3348:	45 18       	IF CC JUMP 0x33d2 <_DNSTypeName+0xc6>;
    334a:	11 0a       	CC = R1 <= R2 (IU);
    334c:	0b 14       	IF !CC JUMP 0x3362 <_DNSTypeName+0x56> (BP);
    334e:	e2 60       	R2 = 0x1c (X);		/*		R2=0x1c( 28) */
    3350:	11 08       	CC = R1 == R2;
    3352:	36 18       	IF CC JUMP 0x33be <_DNSTypeName+0xb2>;
    3354:	0a 61       	R2 = 0x21 (X);		/*		R2=0x21( 33) */
    3356:	11 08       	CC = R1 == R2;
    3358:	38 18       	IF CC JUMP 0x33c8 <_DNSTypeName+0xbc>;
    335a:	82 60       	R2 = 0x10 (X);		/*		R2=0x10( 16) */
    335c:	11 08       	CC = R1 == R2;
    335e:	4e 14       	IF !CC JUMP 0x33fa <_DNSTypeName+0xee> (BP);
    3360:	2a 20       	JUMP.S 0x33b4 <_DNSTypeName+0xa8>;
    3362:	22 e1 fa 00 	R2 = 0xfa (X);		/*		R2=0xfa(250) */
    3366:	11 08       	CC = R1 == R2;
    3368:	3f 18       	IF CC JUMP 0x33e6 <_DNSTypeName+0xda>;
    336a:	2a 64       	R2 += 0x5;		/* (  5) */
    336c:	11 08       	CC = R1 == R2;
    336e:	41 18       	IF CC JUMP 0x33f0 <_DNSTypeName+0xe4>;
    3370:	7a 61       	R2 = 0x2f (X);		/*		R2=0x2f( 47) */
    3372:	11 08       	CC = R1 == R2;
    3374:	43 14       	IF !CC JUMP 0x33fa <_DNSTypeName+0xee> (BP);
    3376:	33 20       	JUMP.S 0x33dc <_DNSTypeName+0xd0>;
    3378:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_putVal32>(  0) */
    337c:	00 e1 24 09 	R0.L = 0x924;		/* (2340)	R0=0x924(2340) */
    3380:	53 20       	JUMP.S 0x3426 <_DNSTypeName+0x11a>;
    3382:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x924(2340) */
    3386:	00 e1 30 09 	R0.L = 0x930;		/* (2352)	R0=0x930(2352) */
    338a:	4e 20       	JUMP.S 0x3426 <_DNSTypeName+0x11a>;
    338c:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x930(2352) */
    3390:	00 e1 38 09 	R0.L = 0x938;		/* (2360)	R0=0x938(2360) */
    3394:	49 20       	JUMP.S 0x3426 <_DNSTypeName+0x11a>;
    3396:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x938(2360) */
    339a:	00 e1 3c 09 	R0.L = 0x93c;		/* (2364)	R0=0x93c(2364) */
    339e:	44 20       	JUMP.S 0x3426 <_DNSTypeName+0x11a>;
    33a0:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x93c(2364) */
    33a4:	00 e1 44 09 	R0.L = 0x944;		/* (2372)	R0=0x944(2372) */
    33a8:	3f 20       	JUMP.S 0x3426 <_DNSTypeName+0x11a>;
    33aa:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x944(2372) */
    33ae:	00 e1 48 09 	R0.L = 0x948;		/* (2376)	R0=0x948(2376) */
    33b2:	3a 20       	JUMP.S 0x3426 <_DNSTypeName+0x11a>;
    33b4:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x948(2376) */
    33b8:	00 e1 50 09 	R0.L = 0x950;		/* (2384)	R0=0x950(2384) */
    33bc:	35 20       	JUMP.S 0x3426 <_DNSTypeName+0x11a>;
    33be:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x950(2384) */
    33c2:	00 e1 54 09 	R0.L = 0x954;		/* (2388)	R0=0x954(2388) */
    33c6:	30 20       	JUMP.S 0x3426 <_DNSTypeName+0x11a>;
    33c8:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x954(2388) */
    33cc:	00 e1 5c 09 	R0.L = 0x95c;		/* (2396)	R0=0x95c(2396) */
    33d0:	2b 20       	JUMP.S 0x3426 <_DNSTypeName+0x11a>;
    33d2:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x95c(2396) */
    33d6:	00 e1 60 09 	R0.L = 0x960;		/* (2400)	R0=0x960(2400) */
    33da:	26 20       	JUMP.S 0x3426 <_DNSTypeName+0x11a>;
    33dc:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x960(2400) */
    33e0:	00 e1 64 09 	R0.L = 0x964;		/* (2404)	R0=0x964(2404) */
    33e4:	21 20       	JUMP.S 0x3426 <_DNSTypeName+0x11a>;
    33e6:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x964(2404) */
    33ea:	00 e1 6c 09 	R0.L = 0x96c;		/* (2412)	R0=0x96c(2412) */
    33ee:	1c 20       	JUMP.S 0x3426 <_DNSTypeName+0x11a>;
    33f0:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x96c(2412) */
    33f4:	00 e1 74 09 	R0.L = 0x974;		/* (2420)	R0=0x974(2420) */
    33f8:	17 20       	JUMP.S 0x3426 <_DNSTypeName+0x11a>;
    33fa:	c0 42       	R0 = R0.L (Z);
    33fc:	f0 b0       	[SP + 0xc] = R0;
    33fe:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x974(2420) */
    3402:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x2f( 47) */
    3406:	00 e1 08 00 	R0.L = 0x8;		/* (  8)	R0=0x8(  8) */
    340a:	81 60       	R1 = 0x10 (X);		/*		R1=0x10( 16) */
    340c:	02 e1 78 09 	R2.L = 0x978;		/* (2424)	R2=0x978(2424) */
    3410:	ff e3 48 fa 	CALL 0x28a0 <_mDNS_snprintf>;
    3414:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x8(  8) */
    3418:	00 e1 08 00 	R0.L = 0x8;		/* (  8)	R0=0x8(  8) */
    341c:	05 20       	JUMP.S 0x3426 <_DNSTypeName+0x11a>;
    341e:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x8(  8) */
    3422:	00 e1 2c 09 	R0.L = 0x92c;		/* (2348)	R0=0x92c(2348) */
    3426:	86 6c       	SP += 0x10;		/* ( 16) */
    3428:	27 01       	RETS = [SP++];
    342a:	10 00       	RTS;

0000342c <_PutResourceRecordTTLWithLimit>:
_PutResourceRecordTTLWithLimit():
    342c:	10 32       	P2 = R0;
    342e:	eb 05       	[--SP] = (R7:5, P5:3);
    3430:	67 01       	[--SP] = RETS;
    3432:	29 32       	P5 = R1;
    3434:	86 6f       	SP += -0x10;		/* (-16) */
    3436:	11 95       	R1 = W[P2] (Z);
    3438:	1a 32       	P3 = R2;
    343a:	b4 af       	P4 = [SP + 0x38];
    343c:	f7 a3       	R7 = [SP + 0x3c];
    343e:	35 e4 10 00 	R5 = [SP + 0x40];
    3442:	01 0c       	CC = R1 == 0x0;
    3444:	0f 1c       	IF CC JUMP 0x3462 <_PutResourceRecordTTLWithLimit+0x36> (BP);
    3446:	92 e4 02 00 	R2 = B[P2 + 0x2] (Z);
    344a:	21 e1 78 00 	R1 = 0x78 (X);		/*		R1=0x78(120) */
    344e:	4a 54       	R1 = R2 & R1;
    3450:	42 61       	R2 = 0x28 (X);		/*		R2=0x28( 40) */
    3452:	11 08       	CC = R1 == R2;
    3454:	07 14       	IF !CC JUMP 0x3462 <_PutResourceRecordTTLWithLimit+0x36> (BP);
    3456:	61 a4       	R1 = W[P4 + 0x2] (Z);
    3458:	0a 61       	R2 = 0x21 (X);		/*		R2=0x21( 33) */
    345a:	11 08       	CC = R1 == R2;
    345c:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
    345e:	30 06       	IF !CC R6 = R0;
    3460:	02 20       	JUMP.S 0x3464 <_PutResourceRecordTTLWithLimit+0x38>;
    3462:	30 30       	R6 = R0;
    3464:	21 99       	R1 = B[P4] (Z);
    3466:	01 0c       	CC = R1 == 0x0;
    3468:	0f 14       	IF !CC JUMP 0x3486 <_PutResourceRecordTTLWithLimit+0x5a> (BP);
    346a:	e7 a1       	R7 = [P4 + 0x1c];
    346c:	60 a8       	R0 = W[P4 + 0x2] (X);
    346e:	ff e3 4f ff 	CALL 0x330c <_DNSTypeName>;
    3472:	f0 b0       	[SP + 0xc] = R0;
    3474:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x78(120) */
    3478:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    347a:	01 e1 80 09 	R1.L = 0x980;		/* (2432)	R1=0x980(2432) */
    347e:	17 30       	R2 = R7;
    3480:	ff e3 c0 e5 	CALL 0x0 <_putVal32>;
    3484:	5d 20       	JUMP.S 0x353e <_PutResourceRecordTTLWithLimit+0x112>;
    3486:	45 0c       	CC = P5 == 0x0;
    3488:	09 14       	IF !CC JUMP 0x349a <_PutResourceRecordTTLWithLimit+0x6e> (BP);
    348a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x980(2432) */
    348e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3490:	01 e1 d0 09 	R1.L = 0x9d0;		/* (2512)	R1=0x9d0(2512) */
    3494:	ff e3 b6 e5 	CALL 0x0 <_putVal32>;
    3498:	53 20       	JUMP.S 0x353e <_PutResourceRecordTTLWithLimit+0x112>;
    349a:	15 30       	R2 = R5;
    349c:	e1 a1       	R1 = [P4 + 0x1c];
    349e:	f1 b0       	[SP + 0xc] = R1;
    34a0:	4d 30       	R1 = P5;
    34a2:	ff e3 85 f2 	CALL 0x19ac <_putDomainNameAsLabels>;
    34a6:	28 32       	P5 = R0;
    34a8:	45 0c       	CC = P5 == 0x0;
    34aa:	4a 1c       	IF CC JUMP 0x353e <_PutResourceRecordTTLWithLimit+0x112> (BP);
    34ac:	08 30       	R1 = R0;
    34ae:	51 64       	R1 += 0xa;		/* ( 10) */
    34b0:	a9 09       	CC = R1 < R5 (IU);
    34b2:	45 14       	IF !CC JUMP 0x353c <_PutResourceRecordTTLWithLimit+0x110> (BP);
    34b4:	a0 e5 03 00 	R0 = B[P4 + 0x3] (X);
    34b8:	28 9b       	B[P5] = R0;
    34ba:	a0 e5 02 00 	R0 = B[P4 + 0x2] (X);
    34be:	a8 e6 01 00 	B[P5 + 0x1] = R0;
    34c2:	a0 e5 05 00 	R0 = B[P4 + 0x5] (X);
    34c6:	a8 e6 02 00 	B[P5 + 0x2] = R0;
    34ca:	a0 e5 04 00 	R0 = B[P4 + 0x4] (X);
    34ce:	a8 e6 03 00 	B[P5 + 0x3] = R0;
    34d2:	82 c6 47 81 	R0 = R7 >> 0x18;
    34d6:	a8 e6 04 00 	B[P5 + 0x4] = R0;
    34da:	82 c6 87 81 	R0 = R7 >> 0x10;
    34de:	a8 e6 05 00 	B[P5 + 0x5] = R0;
    34e2:	82 c6 c7 81 	R0 = R7 >> 0x8;
    34e6:	a8 e6 06 00 	B[P5 + 0x6] = R0;
    34ea:	af e6 07 00 	B[P5 + 0x7] = R7;
    34ee:	f4 bc       	[SP + 0xc] = P4;
    34f0:	06 30       	R0 = R6;
    34f2:	15 30       	R2 = R5;
    34f4:	ff e3 da f2 	CALL 0x1aa8 <_putRData>;
    34f8:	38 30       	R7 = R0;
    34fa:	00 0c       	CC = R0 == 0x0;
    34fc:	20 18       	IF CC JUMP 0x353c <_PutResourceRecordTTLWithLimit+0x110>;
    34fe:	4d 30       	R1 = P5;
    3500:	08 52       	R0 = R0 - R1;
    3502:	b0 67       	R0 += -0xa;		/* (-10) */
    3504:	c1 42       	R1 = R0.L (Z);
    3506:	41 4e       	R1 >>= 0x8;
    3508:	a9 e6 08 00 	B[P5 + 0x8] = R1;
    350c:	a8 e6 09 00 	B[P5 + 0x9] = R0;
    3510:	43 0c       	CC = P3 == 0x0;
    3512:	05 1c       	IF CC JUMP 0x351c <_PutResourceRecordTTLWithLimit+0xf0> (BP);
    3514:	18 95       	R0 = W[P3] (Z);
    3516:	08 64       	R0 += 0x1;		/* (  1) */
    3518:	18 97       	W[P3] = R0;
    351a:	0f 20       	JUMP.S 0x3538 <_PutResourceRecordTTLWithLimit+0x10c>;
    351c:	00 00       	NOP;
    351e:	e6 a1       	R6 = [P4 + 0x1c];
    3520:	60 a8       	R0 = W[P4 + 0x2] (X);
    3522:	ff e3 f5 fe 	CALL 0x330c <_DNSTypeName>;
    3526:	f0 b0       	[SP + 0xc] = R0;
    3528:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x9d0(2512) */
    352c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    352e:	01 e1 fc 09 	R1.L = 0x9fc;		/* (2556)	R1=0x9fc(2556) */
    3532:	16 30       	R2 = R6;
    3534:	ff e3 66 e5 	CALL 0x0 <_putVal32>;
    3538:	2f 32       	P5 = R7;
    353a:	02 20       	JUMP.S 0x353e <_PutResourceRecordTTLWithLimit+0x112>;
    353c:	05 68       	P5 = 0x0 (X);		/*		P5=0x0(  0) */
    353e:	86 6c       	SP += 0x10;		/* ( 16) */
    3540:	45 30       	R0 = P5;
    3542:	27 01       	RETS = [SP++];
    3544:	ab 05       	(R7:5, P5:3) = [SP++];
    3546:	10 00       	RTS;

00003548 <_putHINFO>:
_putHINFO():
    3548:	e3 05       	[--SP] = (R7:4, P5:3);
    354a:	00 e8 e6 00 	LINK 0x398;		/* (920) */
    354e:	33 e5 f2 00 	P3 = [SP + 0x3c8];
    3552:	28 32       	P5 = R0;
    3554:	21 30       	R4 = R1;
    3556:	32 30       	R6 = R2;
    3558:	43 0c       	CC = P3 == 0x0;
    355a:	5d 1c       	IF CC JUMP 0x3614 <_putHINFO+0xcc> (BP);
    355c:	98 a0       	R0 = [P3 + 0x8];
    355e:	00 0c       	CC = R0 == 0x0;
    3560:	5a 18       	IF CC JUMP 0x3614 <_putHINFO+0xcc>;
    3562:	66 32       	P4 = SP;
    3564:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    3566:	24 6d       	P4 += 0x24;		/* ( 36) */
    3568:	a8 e4 54 1b 	R0 = B[P5 + 0x1b54] (Z);
    356c:	ad e4 54 1a 	R5 = B[P5 + 0x1a54] (Z);
    3570:	45 51       	R5 = R5 + R0;
    3572:	68 60       	R0 = 0xd (X);		/*		R0=0xd( 13) */
    3574:	b0 b5       	W[SP + 0xc] = R0;
    3576:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    3578:	b0 e6 14 00 	B[SP + 0x14] = R0;
    357c:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    357e:	44 30       	R0 = P4;
    3580:	37 b1       	[SP + 0x10] = R7;
    3582:	b7 b1       	[SP + 0x18] = R7;
    3584:	f7 b1       	[SP + 0x1c] = R7;
    3586:	37 b2       	[SP + 0x20] = R7;
    3588:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    358a:	ff e3 e5 ec 	CALL 0xf54 <_mDNS_SetupResourceRecord>;
    358e:	2a e1 8c 01 	P2 = 0x18c (X);		/*		P2=0x18c(396) */
    3592:	d6 5b       	FP = SP + P2;
    3594:	2a e1 14 19 	P2 = 0x1914 (X);		/*		P2=0x1914(6420) */
    3598:	95 5a       	P2 = P5 + P2;
    359a:	4a 30       	R1 = P2;
    359c:	47 30       	R0 = FP;
    359e:	ff e3 13 e8 	CALL 0x5c4 <_AppendDomainLabel>;
    35a2:	2a e1 8c 11 	P2 = 0x118c (X);		/*		P2=0x118c(4492) */
    35a6:	93 5a       	P2 = P3 + P2;
    35a8:	4a 30       	R1 = P2;
    35aa:	47 30       	R0 = FP;
    35ac:	ff e3 3a e8 	CALL 0x620 <_AppendDomainName>;
    35b0:	4e 30       	R1 = SP;
    35b2:	22 e1 90 02 	R2 = 0x290 (X);		/*		R2=0x290(656) */
    35b6:	11 50       	R0 = R1 + R2;
    35b8:	2a e1 54 1a 	P2 = 0x1a54 (X);		/*		P2=0x1a54(6740) */
    35bc:	95 5a       	P2 = P5 + P2;
    35be:	aa e4 54 1a 	R2 = B[P5 + 0x1a54] (Z);
    35c2:	4a 30       	R1 = P2;
    35c4:	37 b3       	[SP + 0x30] = R7;
    35c6:	0a 64       	R2 += 0x1;		/* (  1) */
    35c8:	ff e3 1c e5 	CALL 0x0 <_putVal32>;
    35cc:	b0 e4 90 02 	R0 = B[SP + 0x290] (Z);
    35d0:	08 64       	R0 += 0x1;		/* (  1) */
    35d2:	10 32       	P2 = R0;
    35d4:	2b e1 6c 02 	P3 = 0x26c (X);		/*		P3=0x26c(620) */
    35d8:	aa e4 54 1b 	R2 = B[P5 + 0x1b54] (Z);
    35dc:	0a 64       	R2 += 0x1;		/* (  1) */
    35de:	15 64       	R5 += 0x2;		/* (  2) */
    35e0:	da 5a       	P3 = P2 + P3;
    35e2:	2a e1 54 1b 	P2 = 0x1b54 (X);		/*		P2=0x1b54(6996) */
    35e6:	dc 5a       	P3 = P4 + P3;
    35e8:	95 5a       	P2 = P5 + P2;
    35ea:	43 30       	R0 = P3;
    35ec:	4a 30       	R1 = P2;
    35ee:	ff e3 09 e5 	CALL 0x0 <_putVal32>;
    35f2:	30 e4 f3 00 	R0 = [SP + 0x3cc];
    35f6:	14 30       	R2 = R4;
    35f8:	24 6c       	P4 += 0x4;		/* (  4) */
    35fa:	70 b1       	[SP + 0x14] = R0;
    35fc:	75 e6 1a 00 	W[SP + 0x34] = R5;
    3600:	75 e6 1b 00 	W[SP + 0x36] = R5;
    3604:	52 64       	R2 += 0xa;		/* ( 10) */
    3606:	f4 bc       	[SP + 0xc] = P4;
    3608:	37 b1       	[SP + 0x10] = R7;
    360a:	04 30       	R0 = R4;
    360c:	0e 30       	R1 = R6;
    360e:	ff e3 0f ff 	CALL 0x342c <_PutResourceRecordTTLWithLimit>;
    3612:	02 20       	JUMP.S 0x3616 <_putHINFO+0xce>;
    3614:	06 30       	R0 = R6;
    3616:	29 e1 98 03 	P1 = 0x398 (X);		/*		P1=0x398(920) */
    361a:	8e 5b       	SP = SP + P1;
    361c:	77 90       	FP = [SP++];
    361e:	27 01       	RETS = [SP++];
    3620:	a3 05       	(R7:4, P5:3) = [SP++];
    3622:	10 00       	RTS;

00003624 <_putUpdateLeaseWithLimit>:
_putUpdateLeaseWithLimit():
    3624:	e5 05       	[--SP] = (R7:4, P5:5);
    3626:	67 01       	[--SP] = RETS;
    3628:	29 e1 68 fc 	P1 = -0x398 (X);		/*		P1=0xfffffc68(-920) */
    362c:	30 30       	R6 = R0;
    362e:	8e 5b       	SP = SP + P1;
    3630:	48 61       	R0 = 0x29 (X);		/*		R0=0x29( 41) */
    3632:	b0 b5       	W[SP + 0xc] = R0;
    3634:	20 e1 94 11 	R0 = 0x1194 (X);		/*		R0=0x1194(4500) */
    3638:	30 b1       	[SP + 0x10] = R0;
    363a:	00 61       	R0 = 0x20 (X);		/*		R0=0x20( 32) */
    363c:	6e 32       	P5 = SP;
    363e:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    3640:	21 30       	R4 = R1;
    3642:	2a 30       	R5 = R2;
    3644:	25 6d       	P5 += 0x24;		/* ( 36) */
    3646:	b0 e6 14 00 	B[SP + 0x14] = R0;
    364a:	45 30       	R0 = P5;
    364c:	b7 b1       	[SP + 0x18] = R7;
    364e:	f7 b1       	[SP + 0x1c] = R7;
    3650:	37 b2       	[SP + 0x20] = R7;
    3652:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    3654:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    3656:	ff e3 7f ec 	CALL 0xf54 <_mDNS_SetupResourceRecord>;
    365a:	20 e1 a0 05 	R0 = 0x5a0 (X);		/*		R0=0x5a0(1440) */
    365e:	70 e6 16 00 	W[SP + 0x2c] = R0;
    3662:	32 e5 12 00 	P2 = [SP + 0x48];
    3666:	00 61       	R0 = 0x20 (X);		/*		R0=0x20( 32) */
    3668:	70 e6 1a 00 	W[SP + 0x34] = R0;
    366c:	70 e6 1b 00 	W[SP + 0x36] = R0;
    3670:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    3672:	90 b4       	W[P2 + 0x4] = R0;
    3674:	95 b0       	[P2 + 0x8] = R5;
    3676:	30 e4 ef 00 	R0 = [SP + 0x3bc];
    367a:	70 b1       	[SP + 0x14] = R0;
    367c:	16 30       	R2 = R6;
    367e:	25 6c       	P5 += 0x4;		/* (  4) */
    3680:	37 b1       	[SP + 0x10] = R7;
    3682:	52 64       	R2 += 0xa;		/* ( 10) */
    3684:	f5 bc       	[SP + 0xc] = P5;
    3686:	06 30       	R0 = R6;
    3688:	0c 30       	R1 = R4;
    368a:	ff e3 d1 fe 	CALL 0x342c <_PutResourceRecordTTLWithLimit>;
    368e:	38 30       	R7 = R0;
    3690:	00 0c       	CC = R0 == 0x0;
    3692:	08 14       	IF !CC JUMP 0x36a2 <_putUpdateLeaseWithLimit+0x7e> (BP);
    3694:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_putVal32>(  0) */
    3698:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    369a:	01 e1 44 0a 	R1.L = 0xa44;		/* (2628)	R1=0xa44(2628) */
    369e:	ff e3 b1 e4 	CALL 0x0 <_putVal32>;
    36a2:	29 e1 98 03 	P1 = 0x398 (X);		/*		P1=0x398(920) */
    36a6:	8e 5b       	SP = SP + P1;
    36a8:	07 30       	R0 = R7;
    36aa:	27 01       	RETS = [SP++];
    36ac:	a5 05       	(R7:4, P5:5) = [SP++];
    36ae:	10 00       	RTS;

000036b0 <_putUpdateLease>:
_putUpdateLease():
    36b0:	e5 05       	[--SP] = (R7:4, P5:5);
    36b2:	30 30       	R6 = R0;
    36b4:	67 01       	[--SP] = RETS;
    36b6:	29 e1 68 fc 	P1 = -0x398 (X);		/*		P1=0xfffffc68(-920) */
    36ba:	8e 5b       	SP = SP + P1;
    36bc:	48 61       	R0 = 0x29 (X);		/*		R0=0x29( 41) */
    36be:	b0 b5       	W[SP + 0xc] = R0;
    36c0:	20 e1 94 11 	R0 = 0x1194 (X);		/*		R0=0x1194(4500) */
    36c4:	30 b1       	[SP + 0x10] = R0;
    36c6:	00 61       	R0 = 0x20 (X);		/*		R0=0x20( 32) */
    36c8:	6e 32       	P5 = SP;
    36ca:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    36cc:	21 30       	R4 = R1;
    36ce:	2a 30       	R5 = R2;
    36d0:	25 6d       	P5 += 0x24;		/* ( 36) */
    36d2:	b0 e6 14 00 	B[SP + 0x14] = R0;
    36d6:	45 30       	R0 = P5;
    36d8:	b7 b1       	[SP + 0x18] = R7;
    36da:	f7 b1       	[SP + 0x1c] = R7;
    36dc:	37 b2       	[SP + 0x20] = R7;
    36de:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    36e0:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    36e2:	ff e3 39 ec 	CALL 0xf54 <_mDNS_SetupResourceRecord>;
    36e6:	20 e1 a0 05 	R0 = 0x5a0 (X);		/*		R0=0x5a0(1440) */
    36ea:	70 e6 16 00 	W[SP + 0x2c] = R0;
    36ee:	32 e5 12 00 	P2 = [SP + 0x48];
    36f2:	00 61       	R0 = 0x20 (X);		/*		R0=0x20( 32) */
    36f4:	70 e6 1a 00 	W[SP + 0x34] = R0;
    36f8:	70 e6 1b 00 	W[SP + 0x36] = R0;
    36fc:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    36fe:	90 b4       	W[P2 + 0x4] = R0;
    3700:	20 e1 f8 22 	R0 = 0x22f8 (X);		/*		R0=0x22f8(8952) */
    3704:	95 b0       	[P2 + 0x8] = R5;
    3706:	06 50       	R0 = R6 + R0;
    3708:	70 b1       	[SP + 0x14] = R0;
    370a:	16 30       	R2 = R6;
    370c:	25 6c       	P5 += 0x4;		/* (  4) */
    370e:	37 b1       	[SP + 0x10] = R7;
    3710:	52 64       	R2 += 0xa;		/* ( 10) */
    3712:	f5 bc       	[SP + 0xc] = P5;
    3714:	06 30       	R0 = R6;
    3716:	0c 30       	R1 = R4;
    3718:	ff e3 8a fe 	CALL 0x342c <_PutResourceRecordTTLWithLimit>;
    371c:	38 30       	R7 = R0;
    371e:	00 0c       	CC = R0 == 0x0;
    3720:	08 14       	IF !CC JUMP 0x3730 <_putUpdateLease+0x80> (BP);
    3722:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_putVal32>(  0) */
    3726:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3728:	01 e1 7c 0a 	R1.L = 0xa7c;		/* (2684)	R1=0xa7c(2684) */
    372c:	ff e3 6a e4 	CALL 0x0 <_putVal32>;
    3730:	29 e1 98 03 	P1 = 0x398 (X);		/*		P1=0x398(920) */
    3734:	8e 5b       	SP = SP + P1;
    3736:	07 30       	R0 = R7;
    3738:	27 01       	RETS = [SP++];
    373a:	a5 05       	(R7:4, P5:5) = [SP++];
    373c:	10 00       	RTS;
	...

00003740 <_putDeletionRecordWithLimit>:
_putDeletionRecordWithLimit():
    3740:	fd 05       	[--SP] = (R7:7, P5:5);
    3742:	2a 32       	P5 = R2;
    3744:	67 01       	[--SP] = RETS;
    3746:	46 6f       	SP += -0x18;		/* (-24) */
    3748:	22 e1 fe 00 	R2 = 0xfe (X);		/*		R2=0xfe(254) */
    374c:	03 60       	R3 = 0x0 (X);		/*		R3=0x0(  0) */
    374e:	af a8       	R7 = W[P5 + 0x4] (X);
    3750:	aa b4       	W[P5 + 0x4] = R2;
    3752:	33 b1       	[SP + 0x10] = R3;
    3754:	33 a3       	R3 = [SP + 0x30];
    3756:	10 30       	R2 = R0;
    3758:	f5 bc       	[SP + 0xc] = P5;
    375a:	73 b1       	[SP + 0x14] = R3;
    375c:	42 64       	R2 += 0x8;		/* (  8) */
    375e:	ff e3 67 fe 	CALL 0x342c <_PutResourceRecordTTLWithLimit>;
    3762:	c6 6c       	SP += 0x18;		/* ( 24) */
    3764:	27 01       	RETS = [SP++];
    3766:	af b4       	W[P5 + 0x4] = R7;
    3768:	bd 05       	(R7:7, P5:5) = [SP++];
    376a:	10 00       	RTS;

0000376c <_putDeletionRecord>:
_putDeletionRecord():
    376c:	fd 05       	[--SP] = (R7:7, P5:5);
    376e:	2a 32       	P5 = R2;
    3770:	67 01       	[--SP] = RETS;
    3772:	46 6f       	SP += -0x18;		/* (-24) */
    3774:	03 60       	R3 = 0x0 (X);		/*		R3=0x0(  0) */
    3776:	33 b1       	[SP + 0x10] = R3;
    3778:	af a8       	R7 = W[P5 + 0x4] (X);
    377a:	22 e1 fe 00 	R2 = 0xfe (X);		/*		R2=0xfe(254) */
    377e:	aa b4       	W[P5 + 0x4] = R2;
    3780:	23 e1 f8 22 	R3 = 0x22f8 (X);		/*		R3=0x22f8(8952) */
    3784:	10 30       	R2 = R0;
    3786:	d8 50       	R3 = R0 + R3;
    3788:	f5 bc       	[SP + 0xc] = P5;
    378a:	73 b1       	[SP + 0x14] = R3;
    378c:	42 64       	R2 += 0x8;		/* (  8) */
    378e:	ff e3 4f fe 	CALL 0x342c <_PutResourceRecordTTLWithLimit>;
    3792:	c6 6c       	SP += 0x18;		/* ( 24) */
    3794:	27 01       	RETS = [SP++];
    3796:	af b4       	W[P5 + 0x4] = R7;
    3798:	bd 05       	(R7:7, P5:5) = [SP++];
    379a:	10 00       	RTS;

0000379c <_GetRRDisplayString_rdb>:
_GetRRDisplayString_rdb():
    379c:	e3 05       	[--SP] = (R7:4, P5:3);
    379e:	20 32       	P4 = R0;
    37a0:	00 e8 0a 00 	LINK 0x28;		/* (40) */
    37a4:	32 30       	R6 = R2;
    37a6:	29 32       	P5 = R1;
    37a8:	a7 a5       	R7 = W[P4 + 0xc] (Z);
    37aa:	e5 a1       	R5 = [P4 + 0x1c];
    37ac:	60 a8       	R0 = W[P4 + 0x2] (X);
    37ae:	ff e3 af fd 	CALL 0x330c <_DNSTypeName>;
    37b2:	70 b1       	[SP + 0x14] = R0;
    37b4:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0xfe(254) */
    37b8:	f7 b0       	[SP + 0xc] = R7;
    37ba:	21 e1 9f 00 	R1 = 0x9f (X);		/*		R1=0x9f(159) */
    37be:	35 b1       	[SP + 0x10] = R5;
    37c0:	06 30       	R0 = R6;
    37c2:	02 e1 b0 0a 	R2.L = 0xab0;		/* (2736)	R2=0xab0(2736) */
    37c6:	ff e3 6d f8 	CALL 0x28a0 <_mDNS_snprintf>;
    37ca:	38 30       	R7 = R0;
    37cc:	20 99       	R0 = B[P4] (Z);
    37ce:	21 e1 f0 00 	R1 = 0xf0 (X);		/*		R1=0xf0(240) */
    37d2:	08 08       	CC = R0 == R1;
    37d4:	98 1d       	IF CC JUMP 0x3b04 <_GetRRDisplayString_rdb+0x368> (BP);
    37d6:	a2 a9       	R2 = W[P4 + 0xc] (X);
    37d8:	d1 42       	R1 = R2.L (Z);
    37da:	01 0c       	CC = R1 == 0x0;
    37dc:	0c 14       	IF !CC JUMP 0x37f4 <_GetRRDisplayString_rdb+0x58> (BP);
    37de:	21 e1 9f 00 	R1 = 0x9f (X);		/*		R1=0x9f(159) */
    37e2:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0xab0(2736) */
    37e6:	3e 50       	R0 = R6 + R7;
    37e8:	79 52       	R1 = R1 - R7;
    37ea:	02 e1 c0 0a 	R2.L = 0xac0;		/* (2752)	R2=0xac0(2752) */
    37ee:	ff e3 59 f8 	CALL 0x28a0 <_mDNS_snprintf>;
    37f2:	89 21       	JUMP.S 0x3b04 <_GetRRDisplayString_rdb+0x368>;
    37f4:	6b 60       	R3 = 0xd (X);		/*		R3=0xd( 13) */
    37f6:	60 a4       	R0 = W[P4 + 0x2] (Z);
    37f8:	18 08       	CC = R0 == R3;
    37fa:	59 18       	IF CC JUMP 0x38ac <_GetRRDisplayString_rdb+0x110>;
    37fc:	18 0a       	CC = R0 <= R3 (IU);
    37fe:	11 14       	IF !CC JUMP 0x3820 <_GetRRDisplayString_rdb+0x84> (BP);
    3800:	29 60       	R1 = 0x5 (X);		/*		R1=0x5(  5) */
    3802:	08 08       	CC = R0 == R1;
    3804:	2b 18       	IF CC JUMP 0x385a <_GetRRDisplayString_rdb+0xbe>;
    3806:	28 0e       	CC = R0 <= 0x5 (IU);
    3808:	05 14       	IF !CC JUMP 0x3812 <_GetRRDisplayString_rdb+0x76> (BP);
    380a:	08 0c       	CC = R0 == 0x1;
    380c:	1d 18       	IF CC JUMP 0x3846 <_GetRRDisplayString_rdb+0xaa>;
    380e:	10 0c       	CC = R0 == 0x2;
    3810:	06 20       	JUMP.S 0x381c <_GetRRDisplayString_rdb+0x80>;
    3812:	33 60       	R3 = 0x6 (X);		/*		R3=0x6(  6) */
    3814:	18 08       	CC = R0 == R3;
    3816:	2c 18       	IF CC JUMP 0x386e <_GetRRDisplayString_rdb+0xd2>;
    3818:	61 60       	R1 = 0xc (X);		/*		R1=0xc( 12) */
    381a:	08 08       	CC = R0 == R1;
    381c:	5b 15       	IF !CC JUMP 0x3ad2 <_GetRRDisplayString_rdb+0x336> (BP);
    381e:	1e 20       	JUMP.S 0x385a <_GetRRDisplayString_rdb+0xbe>;
    3820:	0b 61       	R3 = 0x21 (X);		/*		R3=0x21( 33) */
    3822:	18 08       	CC = R0 == R3;
    3824:	75 18       	IF CC JUMP 0x390e <_GetRRDisplayString_rdb+0x172>;
    3826:	18 0a       	CC = R0 <= R3 (IU);
    3828:	08 14       	IF !CC JUMP 0x3838 <_GetRRDisplayString_rdb+0x9c> (BP);
    382a:	81 60       	R1 = 0x10 (X);		/*		R1=0x10( 16) */
    382c:	08 08       	CC = R0 == R1;
    382e:	3f 18       	IF CC JUMP 0x38ac <_GetRRDisplayString_rdb+0x110>;
    3830:	e3 60       	R3 = 0x1c (X);		/*		R3=0x1c( 28) */
    3832:	18 08       	CC = R0 == R3;
    3834:	4f 15       	IF !CC JUMP 0x3ad2 <_GetRRDisplayString_rdb+0x336> (BP);
    3836:	60 20       	JUMP.S 0x38f6 <_GetRRDisplayString_rdb+0x15a>;
    3838:	4b 61       	R3 = 0x29 (X);		/*		R3=0x29( 41) */
    383a:	18 08       	CC = R0 == R3;
    383c:	81 18       	IF CC JUMP 0x393e <_GetRRDisplayString_rdb+0x1a2>;
    383e:	79 61       	R1 = 0x2f (X);		/*		R1=0x2f( 47) */
    3840:	08 08       	CC = R0 == R1;
    3842:	48 15       	IF !CC JUMP 0x3ad2 <_GetRRDisplayString_rdb+0x336> (BP);
    3844:	20 21       	JUMP.S 0x3a84 <_GetRRDisplayString_rdb+0x2e8>;
    3846:	21 e1 9f 00 	R1 = 0x9f (X);		/*		R1=0x9f(159) */
    384a:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0xac0(2752) */
    384e:	3e 50       	R0 = R6 + R7;
    3850:	79 52       	R1 = R1 - R7;
    3852:	f5 bc       	[SP + 0xc] = P5;
    3854:	02 e1 d8 0a 	R2.L = 0xad8;		/* (2776)	R2=0xad8(2776) */
    3858:	58 20       	JUMP.S 0x3908 <_GetRRDisplayString_rdb+0x16c>;
    385a:	21 e1 9f 00 	R1 = 0x9f (X);		/*		R1=0x9f(159) */
    385e:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0xad8(2776) */
    3862:	3e 50       	R0 = R6 + R7;
    3864:	79 52       	R1 = R1 - R7;
    3866:	f5 bc       	[SP + 0xc] = P5;
    3868:	02 e1 e0 0a 	R2.L = 0xae0;		/* (2784)	R2=0xae0(2784) */
    386c:	4e 20       	JUMP.S 0x3908 <_GetRRDisplayString_rdb+0x16c>;
    386e:	2a e1 00 01 	P2 = 0x100 (X);		/*		P2=0x100(256) */
    3872:	95 5a       	P2 = P5 + P2;
    3874:	f5 bc       	[SP + 0xc] = P5;
    3876:	32 bd       	[SP + 0x10] = P2;
    3878:	2a e4 80 00 	R2 = [P5 + 0x200];
    387c:	72 b1       	[SP + 0x14] = R2;
    387e:	2a e4 81 00 	R2 = [P5 + 0x204];
    3882:	b2 b1       	[SP + 0x18] = R2;
    3884:	2a e4 82 00 	R2 = [P5 + 0x208];
    3888:	f2 b1       	[SP + 0x1c] = R2;
    388a:	2a e4 83 00 	R2 = [P5 + 0x20c];
    388e:	32 b2       	[SP + 0x20] = R2;
    3890:	2a e4 84 00 	R2 = [P5 + 0x210];
    3894:	72 b2       	[SP + 0x24] = R2;
    3896:	21 e1 9f 00 	R1 = 0x9f (X);		/*		R1=0x9f(159) */
    389a:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0xae0(2784) */
    389e:	3e 50       	R0 = R6 + R7;
    38a0:	79 52       	R1 = R1 - R7;
    38a2:	02 e1 e8 0a 	R2.L = 0xae8;		/* (2792)	R2=0xae8(2792) */
    38a6:	ff e3 fd f7 	CALL 0x28a0 <_mDNS_snprintf>;
    38aa:	2d 21       	JUMP.S 0x3b04 <_GetRRDisplayString_rdb+0x368>;
    38ac:	44 e1 00 00 	R4.H = 0x0;		/* (  0)	R4=0x0 <_putVal32>(  0) */
    38b0:	4f e1 00 00 	FP.H = 0x0;		/* (  0)	FP=0x0 <_putVal32> */
    38b4:	5d 32       	P3 = P5;
    38b6:	25 e1 9f 00 	R5 = 0x9f (X);		/*		R5=0x9f(159) */
    38ba:	04 e1 24 02 	R4.L = 0x224;		/* (548)	R4=0x224(548) */
    38be:	0f e1 ac 0a 	FP.L = 0xaac;		/* (2732)	FP=0xaac */
    38c2:	13 20       	JUMP.S 0x38e8 <_GetRRDisplayString_rdb+0x14c>;
    38c4:	6b 0a       	CC = P3 <= P5 (IU);
    38c6:	14 07       	IF CC R2 = R4;
    38c8:	57 06       	IF !CC R2 = FP;
    38ca:	f2 b0       	[SP + 0xc] = R2;
    38cc:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0xae8(2792) */
    38d0:	3e 50       	R0 = R6 + R7;
    38d2:	7d 52       	R1 = R5 - R7;
    38d4:	33 bd       	[SP + 0x10] = P3;
    38d6:	02 e1 04 0b 	R2.L = 0xb04;		/* (2820)	R2=0xb04(2820) */
    38da:	ff e3 e3 f7 	CALL 0x28a0 <_mDNS_snprintf>;
    38de:	c7 51       	R7 = R7 + R0;
    38e0:	18 99       	R0 = B[P3] (Z);
    38e2:	08 64       	R0 += 0x1;		/* (  1) */
    38e4:	08 32       	P1 = R0;
    38e6:	cb 5a       	P3 = P3 + P1;
    38e8:	a0 a5       	R0 = W[P4 + 0xc] (Z);
    38ea:	4d 30       	R1 = P5;
    38ec:	01 50       	R0 = R1 + R0;
    38ee:	53 30       	R2 = P3;
    38f0:	82 09       	CC = R2 < R0 (IU);
    38f2:	e9 1f       	IF CC JUMP 0x38c4 <_GetRRDisplayString_rdb+0x128> (BP);
    38f4:	08 21       	JUMP.S 0x3b04 <_GetRRDisplayString_rdb+0x368>;
    38f6:	21 e1 9f 00 	R1 = 0x9f (X);		/*		R1=0x9f(159) */
    38fa:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0xb04(2820) */
    38fe:	3e 50       	R0 = R6 + R7;
    3900:	79 52       	R1 = R1 - R7;
    3902:	f5 bc       	[SP + 0xc] = P5;
    3904:	02 e1 0c 0b 	R2.L = 0xb0c;		/* (2828)	R2=0xb0c(2828) */
    3908:	ff e3 cc f7 	CALL 0x28a0 <_mDNS_snprintf>;
    390c:	fc 20       	JUMP.S 0x3b04 <_GetRRDisplayString_rdb+0x368>;
    390e:	2a 95       	R2 = W[P5] (Z);
    3910:	f2 b0       	[SP + 0xc] = R2;
    3912:	6a a4       	R2 = W[P5 + 0x2] (Z);
    3914:	32 b1       	[SP + 0x10] = R2;
    3916:	aa e4 04 00 	R2 = B[P5 + 0x4] (Z);
    391a:	ab e4 05 00 	R3 = B[P5 + 0x5] (Z);
    391e:	42 4f       	R2 <<= 0x8;
    3920:	93 56       	R2 = R3 | R2;
    3922:	72 b1       	[SP + 0x14] = R2;
    3924:	35 6c       	P5 += 0x6;		/* (  6) */
    3926:	21 e1 9f 00 	R1 = 0x9f (X);		/*		R1=0x9f(159) */
    392a:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0xb0c(2828) */
    392e:	3e 50       	R0 = R6 + R7;
    3930:	79 52       	R1 = R1 - R7;
    3932:	b5 bd       	[SP + 0x18] = P5;
    3934:	02 e1 14 0b 	R2.L = 0xb14;		/* (2836)	R2=0xb14(2836) */
    3938:	ff e3 b4 f7 	CALL 0x28a0 <_mDNS_snprintf>;
    393c:	e4 20       	JUMP.S 0x3b04 <_GetRRDisplayString_rdb+0x368>;
    393e:	09 32       	P1 = R1;
    3940:	a2 a4       	R2 = W[P4 + 0x4] (Z);
    3942:	f2 b0       	[SP + 0xc] = R2;
    3944:	25 e1 9f 00 	R5 = 0x9f (X);		/*		R5=0x9f(159) */
    3948:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0xb14(2836) */
    394c:	3e 50       	R0 = R6 + R7;
    394e:	7d 52       	R1 = R5 - R7;
    3950:	cd 5a       	P3 = P5 + P1;
    3952:	02 e1 24 0b 	R2.L = 0xb24;		/* (2852)	R2=0xb24(2852) */
    3956:	ff e3 a5 f7 	CALL 0x28a0 <_mDNS_snprintf>;
    395a:	f8 51       	R7 = R0 + R7;
    395c:	91 20       	JUMP.S 0x3a7e <_GetRRDisplayString_rdb+0x2e2>;
    395e:	00 00       	NOP;
    3960:	2a 95       	R2 = W[P5] (Z);
    3962:	12 0c       	CC = R2 == 0x2;
    3964:	38 18       	IF CC JUMP 0x39d4 <_GetRRDisplayString_rdb+0x238>;
    3966:	20 60       	R0 = 0x4 (X);		/*		R0=0x4(  4) */
    3968:	02 08       	CC = R2 == R0;
    396a:	3e 18       	IF CC JUMP 0x39e6 <_GetRRDisplayString_rdb+0x24a>;
    396c:	0a 0c       	CC = R2 == 0x1;
    396e:	3e 50       	R0 = R6 + R7;
    3970:	7d 14       	IF !CC JUMP 0x3a6a <_GetRRDisplayString_rdb+0x2ce> (BP);
    3972:	aa a4       	R2 = W[P5 + 0x4] (Z);
    3974:	f2 b0       	[SP + 0xc] = R2;
    3976:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0xb24(2852) */
    397a:	7d 52       	R1 = R5 - R7;
    397c:	02 e1 2c 0b 	R2.L = 0xb2c;		/* (2860)	R2=0xb2c(2860) */
    3980:	ff e3 90 f7 	CALL 0x28a0 <_mDNS_snprintf>;
    3984:	ea a4       	R2 = W[P5 + 0x6] (Z);
    3986:	f2 b0       	[SP + 0xc] = R2;
    3988:	f8 51       	R7 = R0 + R7;
    398a:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0xb2c(2860) */
    398e:	7d 52       	R1 = R5 - R7;
    3990:	3e 50       	R0 = R6 + R7;
    3992:	02 e1 38 0b 	R2.L = 0xb38;		/* (2872)	R2=0xb38(2872) */
    3996:	ff e3 85 f7 	CALL 0x28a0 <_mDNS_snprintf>;
    399a:	2a a5       	R2 = W[P5 + 0x8] (Z);
    399c:	f2 b0       	[SP + 0xc] = R2;
    399e:	c7 51       	R7 = R7 + R0;
    39a0:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0xb38(2872) */
    39a4:	7d 52       	R1 = R5 - R7;
    39a6:	3e 50       	R0 = R6 + R7;
    39a8:	02 e1 40 0b 	R2.L = 0xb40;		/* (2880)	R2=0xb40(2880) */
    39ac:	ff e3 7a f7 	CALL 0x28a0 <_mDNS_snprintf>;
    39b0:	ea a0       	R2 = [P5 + 0xc];
    39b2:	f2 b0       	[SP + 0xc] = R2;
    39b4:	2a a1       	R2 = [P5 + 0x10];
    39b6:	32 b1       	[SP + 0x10] = R2;
    39b8:	c7 51       	R7 = R7 + R0;
    39ba:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0xb40(2880) */
    39be:	7d 52       	R1 = R5 - R7;
    39c0:	3e 50       	R0 = R6 + R7;
    39c2:	02 e1 50 0b 	R2.L = 0xb50;		/* (2896)	R2=0xb50(2896) */
    39c6:	ff e3 6d f7 	CALL 0x28a0 <_mDNS_snprintf>;
    39ca:	c7 51       	R7 = R7 + R0;
    39cc:	3e 50       	R0 = R6 + R7;
    39ce:	7d 52       	R1 = R5 - R7;
    39d0:	6a a1       	R2 = [P5 + 0x14];
    39d2:	04 20       	JUMP.S 0x39da <_GetRRDisplayString_rdb+0x23e>;
    39d4:	3e 50       	R0 = R6 + R7;
    39d6:	7d 52       	R1 = R5 - R7;
    39d8:	6a a0       	R2 = [P5 + 0x4];
    39da:	f2 b0       	[SP + 0xc] = R2;
    39dc:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0xb50(2896) */
    39e0:	02 e1 60 0b 	R2.L = 0xb60;		/* (2912)	R2=0xb60(2912) */
    39e4:	49 20       	JUMP.S 0x3a76 <_GetRRDisplayString_rdb+0x2da>;
    39e6:	aa e4 04 00 	R2 = B[P5 + 0x4] (Z);
    39ea:	f2 b0       	[SP + 0xc] = R2;
    39ec:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0xb60(2912) */
    39f0:	7d 52       	R1 = R5 - R7;
    39f2:	3e 50       	R0 = R6 + R7;
    39f4:	02 e1 2c 0b 	R2.L = 0xb2c;		/* (2860)	R2=0xb2c(2860) */
    39f8:	ff e3 54 f7 	CALL 0x28a0 <_mDNS_snprintf>;
    39fc:	aa e4 05 00 	R2 = B[P5 + 0x5] (Z);
    3a00:	f2 b0       	[SP + 0xc] = R2;
    3a02:	f8 51       	R7 = R0 + R7;
    3a04:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0xb2c(2860) */
    3a08:	7d 52       	R1 = R5 - R7;
    3a0a:	3e 50       	R0 = R6 + R7;
    3a0c:	02 e1 6c 0b 	R2.L = 0xb6c;		/* (2924)	R2=0xb6c(2924) */
    3a10:	ff e3 48 f7 	CALL 0x28a0 <_mDNS_snprintf>;
    3a14:	55 30       	R2 = P5;
    3a16:	42 64       	R2 += 0x8;		/* (  8) */
    3a18:	f2 b0       	[SP + 0xc] = R2;
    3a1a:	c7 51       	R7 = R7 + R0;
    3a1c:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0xb6c(2924) */
    3a20:	7d 52       	R1 = R5 - R7;
    3a22:	3e 50       	R0 = R6 + R7;
    3a24:	02 e1 78 0b 	R2.L = 0xb78;		/* (2936)	R2=0xb78(2936) */
    3a28:	ff e3 3c f7 	CALL 0x28a0 <_mDNS_snprintf>;
    3a2c:	c7 51       	R7 = R7 + R0;
    3a2e:	68 a4       	R0 = W[P5 + 0x2] (Z);
    3a30:	69 60       	R1 = 0xd (X);		/*		R1=0xd( 13) */
    3a32:	08 0a       	CC = R0 <= R1 (IU);
    3a34:	24 1c       	IF CC JUMP 0x3a7c <_GetRRDisplayString_rdb+0x2e0> (BP);
    3a36:	55 30       	R2 = P5;
    3a38:	82 64       	R2 += 0x10;		/* ( 16) */
    3a3a:	f2 b0       	[SP + 0xc] = R2;
    3a3c:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0xb78(2936) */
    3a40:	3e 50       	R0 = R6 + R7;
    3a42:	7d 52       	R1 = R5 - R7;
    3a44:	02 e1 84 0b 	R2.L = 0xb84;		/* (2948)	R2=0xb84(2948) */
    3a48:	ff e3 2c f7 	CALL 0x28a0 <_mDNS_snprintf>;
    3a4c:	c7 51       	R7 = R7 + R0;
    3a4e:	68 a4       	R0 = W[P5 + 0x2] (Z);
    3a50:	72 60       	R2 = 0xe (X);		/*		R2=0xe( 14) */
    3a52:	10 0a       	CC = R0 <= R2 (IU);
    3a54:	14 1c       	IF CC JUMP 0x3a7c <_GetRRDisplayString_rdb+0x2e0> (BP);
    3a56:	55 30       	R2 = P5;
    3a58:	c2 64       	R2 += 0x18;		/* ( 24) */
    3a5a:	f2 b0       	[SP + 0xc] = R2;
    3a5c:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0xe( 14) */
    3a60:	3e 50       	R0 = R6 + R7;
    3a62:	7d 52       	R1 = R5 - R7;
    3a64:	02 e1 90 0b 	R2.L = 0xb90;		/* (2960)	R2=0xb90(2960) */
    3a68:	07 20       	JUMP.S 0x3a76 <_GetRRDisplayString_rdb+0x2da>;
    3a6a:	f2 b0       	[SP + 0xc] = R2;
    3a6c:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0xb90(2960) */
    3a70:	7d 52       	R1 = R5 - R7;
    3a72:	02 e1 a0 0b 	R2.L = 0xba0;		/* (2976)	R2=0xba0(2976) */
    3a76:	ff e3 15 f7 	CALL 0x28a0 <_mDNS_snprintf>;
    3a7a:	c7 51       	R7 = R7 + R0;
    3a7c:	05 6d       	P5 += 0x20;		/* ( 32) */
    3a7e:	dd 09       	CC = P5 < P3 (IU);
    3a80:	6f 1f       	IF CC JUMP 0x395e <_GetRRDisplayString_rdb+0x1c2> (BP);
    3a82:	41 20       	JUMP.S 0x3b04 <_GetRRDisplayString_rdb+0x368>;
    3a84:	05 60       	R5 = 0x0 (X);		/*		R5=0x0(  0) */
    3a86:	3b 68       	P3 = 0x7 (X);		/*		P3=0x7(  7) */
    3a88:	24 e1 80 00 	R4 = 0x80 (X);		/*		R4=0x80(128) */
    3a8c:	2c e1 9f 00 	P4 = 0x9f (X);		/*		P4=0x9f(159) */
    3a90:	e8 42       	R0 = R5.L (Z);
    3a92:	18 4e       	R0 >>= 0x3;
    3a94:	08 32       	P1 = R0;
    3a96:	53 30       	R2 = P3;
    3a98:	15 54       	R0 = R5 & R2;
    3a9a:	1c 30       	R3 = R4;
    3a9c:	03 40       	R3 >>>= R0;
    3a9e:	8d 5a       	P2 = P5 + P1;
    3aa0:	11 99       	R1 = B[P2] (Z);
    3aa2:	19 54       	R0 = R1 & R3;
    3aa4:	00 0c       	CC = R0 == 0x0;
    3aa6:	10 1c       	IF CC JUMP 0x3ac6 <_GetRRDisplayString_rdb+0x32a> (BP);
    3aa8:	05 30       	R0 = R5;
    3aaa:	ff e3 31 fc 	CALL 0x330c <_DNSTypeName>;
    3aae:	10 30       	R2 = R0;
    3ab0:	f2 b0       	[SP + 0xc] = R2;
    3ab2:	5c 30       	R3 = P4;
    3ab4:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0xba0(2976) */
    3ab8:	3e 50       	R0 = R6 + R7;
    3aba:	7b 52       	R1 = R3 - R7;
    3abc:	02 e1 ac 0b 	R2.L = 0xbac;		/* (2988)	R2=0xbac(2988) */
    3ac0:	ff e3 f0 f6 	CALL 0x28a0 <_mDNS_snprintf>;
    3ac4:	c7 51       	R7 = R7 + R0;
    3ac6:	0d 64       	R5 += 0x1;		/* (  1) */
    3ac8:	20 e1 ff 00 	R0 = 0xff (X);		/*		R0=0xff(255) */
    3acc:	05 08       	CC = R5 == R0;
    3ace:	e1 17       	IF !CC JUMP 0x3a90 <_GetRRDisplayString_rdb+0x2f4> (BP);
    3ad0:	1a 20       	JUMP.S 0x3b04 <_GetRRDisplayString_rdb+0x368>;
    3ad2:	d2 42       	R2 = R2.L (Z);
    3ad4:	f2 b0       	[SP + 0xc] = R2;
    3ad6:	21 e1 9f 00 	R1 = 0x9f (X);		/*		R1=0x9f(159) */
    3ada:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0xbac(2988) */
    3ade:	79 52       	R1 = R1 - R7;
    3ae0:	02 e1 b0 0b 	R2.L = 0xbb0;		/* (2992)	R2=0xbb0(2992) */
    3ae4:	3e 50       	R0 = R6 + R7;
    3ae6:	35 bd       	[SP + 0x10] = P5;
    3ae8:	ff e3 dc f6 	CALL 0x28a0 <_mDNS_snprintf>;
    3aec:	0e 32       	P1 = R6;
    3aee:	16 32       	P2 = R6;
    3af0:	71 61       	R1 = 0x2e (X);		/*		R1=0x2e( 46) */
    3af2:	fa 60       	R2 = 0x1f (X);		/*		R2=0x1f( 31) */
    3af4:	05 20       	JUMP.S 0x3afe <_GetRRDisplayString_rdb+0x362>;
    3af6:	10 09       	CC = R0 <= R2;
    3af8:	02 14       	IF !CC JUMP 0x3afc <_GetRRDisplayString_rdb+0x360> (BP);
    3afa:	11 9b       	B[P2] = R1;
    3afc:	0a 6c       	P2 += 0x1;		/* (  1) */
    3afe:	48 98       	R0 = B[P1++] (X);
    3b00:	00 0c       	CC = R0 == 0x0;
    3b02:	fa 17       	IF !CC JUMP 0x3af6 <_GetRRDisplayString_rdb+0x35a> (BP);
    3b04:	46 6d       	SP += 0x28;		/* ( 40) */
    3b06:	77 90       	FP = [SP++];
    3b08:	06 30       	R0 = R6;
    3b0a:	27 01       	RETS = [SP++];
    3b0c:	a3 05       	(R7:4, P5:3) = [SP++];
    3b0e:	10 00       	RTS;

00003b10 <_ShowTaskSchedulingError>:
_ShowTaskSchedulingError():
    3b10:	c4 04       	[--SP] = (P5:4);
    3b12:	67 01       	[--SP] = RETS;
    3b14:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2e( 46) */
    3b18:	28 32       	P5 = R0;
    3b1a:	86 6f       	SP += -0x10;		/* (-16) */
    3b1c:	01 e1 8c 01 	R1.L = 0x18c;		/* (396)	R1=0x18c(396) */
    3b20:	ff e3 b4 f5 	CALL 0x2688 <_mDNS_Lock_>;
    3b24:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x18c(396) */
    3b28:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3b2a:	01 e1 c0 0b 	R1.L = 0xbc0;		/* (3008)	R1=0xbc0(3008) */
    3b2e:	ff e3 69 e2 	CALL 0x0 <_putVal32>;
    3b32:	2c e5 4d 00 	P4 = [P5 + 0x134];
    3b36:	44 0c       	CC = P4 == 0x0;
    3b38:	1a 1c       	IF CC JUMP 0x3b6c <_ShowTaskSchedulingError+0x5c> (BP);
    3b3a:	a0 a0       	R0 = [P4 + 0x8];
    3b3c:	00 0c       	CC = R0 == 0x0;
    3b3e:	06 1c       	IF CC JUMP 0x3b4a <_ShowTaskSchedulingError+0x3a> (BP);
    3b40:	29 e4 37 00 	R1 = [P5 + 0xdc];
    3b44:	01 52       	R0 = R1 - R0;
    3b46:	80 0c       	CC = R0 < 0x0;
    3b48:	12 1c       	IF CC JUMP 0x3b6c <_ShowTaskSchedulingError+0x5c> (BP);
    3b4a:	00 00       	NOP;
    3b4c:	60 e5 1a 01 	R0 = W[P4 + 0x234] (X);
    3b50:	ff e3 de fb 	CALL 0x330c <_DNSTypeName>;
    3b54:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    3b58:	94 5a       	P2 = P4 + P2;
    3b5a:	f0 b0       	[SP + 0xc] = R0;
    3b5c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xbc0(3008) */
    3b60:	52 30       	R2 = P2;
    3b62:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3b64:	01 e1 00 0c 	R1.L = 0xc00;		/* (3072)	R1=0xc00(3072) */
    3b68:	ff e3 4c e2 	CALL 0x0 <_putVal32>;
    3b6c:	00 00       	NOP;
    3b6e:	2c e5 50 00 	P4 = [P5 + 0x140];
    3b72:	44 0c       	CC = P4 == 0x0;
    3b74:	11 1c       	IF CC JUMP 0x3b96 <_ShowTaskSchedulingError+0x86> (BP);
    3b76:	60 e5 1a 01 	R0 = W[P4 + 0x234] (X);
    3b7a:	ff e3 c9 fb 	CALL 0x330c <_DNSTypeName>;
    3b7e:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    3b82:	94 5a       	P2 = P4 + P2;
    3b84:	f0 b0       	[SP + 0xc] = R0;
    3b86:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xc00(3072) */
    3b8a:	52 30       	R2 = P2;
    3b8c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3b8e:	01 e1 30 0c 	R1.L = 0xc30;		/* (3120)	R1=0xc30(3120) */
    3b92:	ff e3 37 e2 	CALL 0x0 <_putVal32>;
    3b96:	00 00       	NOP;
    3b98:	2a e5 f4 07 	P2 = [P5 + 0x1fd0];
    3b9c:	42 0c       	CC = P2 == 0x0;
    3b9e:	17 1c       	IF CC JUMP 0x3bcc <_ShowTaskSchedulingError+0xbc> (BP);
    3ba0:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
    3ba4:	10 0c       	CC = R0 == 0x2;
    3ba6:	03 14       	IF !CC JUMP 0x3bac <_ShowTaskSchedulingError+0x9c> (BP);
    3ba8:	52 91       	P2 = [P2];
    3baa:	f9 2f       	JUMP.S 0x3b9c <_ShowTaskSchedulingError+0x8c>;
    3bac:	42 30       	R0 = P2;
    3bae:	51 a2       	R1 = [P2 + 0x24];
    3bb0:	55 30       	R2 = P5;
    3bb2:	21 64       	R1 += 0x4;		/* (  4) */
    3bb4:	ba 65       	R2 += 0x37;		/* ( 55) */
    3bb6:	20 64       	R0 += 0x4;		/* (  4) */
    3bb8:	ff e3 f2 fd 	CALL 0x379c <_GetRRDisplayString_rdb>;
    3bbc:	10 30       	R2 = R0;
    3bbe:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xc30(3120) */
    3bc2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3bc4:	01 e1 68 0c 	R1.L = 0xc68;		/* (3176)	R1=0xc68(3176) */
    3bc8:	ff e3 1c e2 	CALL 0x0 <_putVal32>;
    3bcc:	00 00       	NOP;
    3bce:	28 e4 f6 07 	R0 = [P5 + 0x1fd8];
    3bd2:	00 0c       	CC = R0 == 0x0;
    3bd4:	08 1c       	IF CC JUMP 0x3be4 <_ShowTaskSchedulingError+0xd4> (BP);
    3bd6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xc68(3176) */
    3bda:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3bdc:	01 e1 94 0c 	R1.L = 0xc94;		/* (3220)	R1=0xc94(3220) */
    3be0:	ff e3 10 e2 	CALL 0x0 <_putVal32>;
    3be4:	00 00       	NOP;
    3be6:	28 e4 27 0a 	R0 = [P5 + 0x289c];
    3bea:	00 0c       	CC = R0 == 0x0;
    3bec:	08 18       	IF CC JUMP 0x3bfc <_ShowTaskSchedulingError+0xec>;
    3bee:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xc94(3220) */
    3bf2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3bf4:	01 e1 c0 0c 	R1.L = 0xcc0;		/* (3264)	R1=0xcc0(3264) */
    3bf8:	ff e3 04 e2 	CALL 0x0 <_putVal32>;
    3bfc:	a8 e4 14 01 	R0 = B[P5 + 0x114] (Z);
    3c00:	00 0c       	CC = R0 == 0x0;
    3c02:	08 1c       	IF CC JUMP 0x3c12 <_ShowTaskSchedulingError+0x102> (BP);
    3c04:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xcc0(3264) */
    3c08:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3c0a:	01 e1 ec 0c 	R1.L = 0xcec;		/* (3308)	R1=0xcec(3308) */
    3c0e:	ff e3 f9 e1 	CALL 0x0 <_putVal32>;
    3c12:	00 00       	NOP;
    3c14:	2a e4 37 00 	R2 = [P5 + 0xdc];
    3c18:	28 e4 39 00 	R0 = [P5 + 0xe4];
    3c1c:	82 52       	R2 = R2 - R0;
    3c1e:	82 0c       	CC = R2 < 0x0;
    3c20:	08 18       	IF CC JUMP 0x3c30 <_ShowTaskSchedulingError+0x120>;
    3c22:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xcec(3308) */
    3c26:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3c28:	01 e1 18 0d 	R1.L = 0xd18;		/* (3352)	R1=0xd18(3352) */
    3c2c:	ff e3 ea e1 	CALL 0x0 <_putVal32>;
    3c30:	2a e4 37 00 	R2 = [P5 + 0xdc];
    3c34:	28 e4 fb 07 	R0 = [P5 + 0x1fec];
    3c38:	82 52       	R2 = R2 - R0;
    3c3a:	82 0c       	CC = R2 < 0x0;
    3c3c:	08 18       	IF CC JUMP 0x3c4c <_ShowTaskSchedulingError+0x13c>;
    3c3e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xd18(3352) */
    3c42:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3c44:	01 e1 48 0d 	R1.L = 0xd48;		/* (3400)	R1=0xd48(3400) */
    3c48:	ff e3 dc e1 	CALL 0x0 <_putVal32>;
    3c4c:	2a e4 37 00 	R2 = [P5 + 0xdc];
    3c50:	28 e4 40 00 	R0 = [P5 + 0x100];
    3c54:	82 52       	R2 = R2 - R0;
    3c56:	82 0c       	CC = R2 < 0x0;
    3c58:	08 18       	IF CC JUMP 0x3c68 <_ShowTaskSchedulingError+0x158>;
    3c5a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xd48(3400) */
    3c5e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3c60:	01 e1 74 0d 	R1.L = 0xd74;		/* (3444)	R1=0xd74(3444) */
    3c64:	ff e3 ce e1 	CALL 0x0 <_putVal32>;
    3c68:	28 e4 fc 07 	R0 = [P5 + 0x1ff0];
    3c6c:	00 0c       	CC = R0 == 0x0;
    3c6e:	0d 1c       	IF CC JUMP 0x3c88 <_ShowTaskSchedulingError+0x178> (BP);
    3c70:	2a e4 37 00 	R2 = [P5 + 0xdc];
    3c74:	82 52       	R2 = R2 - R0;
    3c76:	82 0c       	CC = R2 < 0x0;
    3c78:	08 18       	IF CC JUMP 0x3c88 <_ShowTaskSchedulingError+0x178>;
    3c7a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xd74(3444) */
    3c7e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3c80:	01 e1 a4 0d 	R1.L = 0xda4;		/* (3492)	R1=0xda4(3492) */
    3c84:	ff e3 be e1 	CALL 0x0 <_putVal32>;
    3c88:	00 00       	NOP;
    3c8a:	2a e4 37 00 	R2 = [P5 + 0xdc];
    3c8e:	28 e4 3c 00 	R0 = [P5 + 0xf0];
    3c92:	82 52       	R2 = R2 - R0;
    3c94:	82 0c       	CC = R2 < 0x0;
    3c96:	08 18       	IF CC JUMP 0x3ca6 <_ShowTaskSchedulingError+0x196>;
    3c98:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xda4(3492) */
    3c9c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3c9e:	01 e1 d0 0d 	R1.L = 0xdd0;		/* (3536)	R1=0xdd0(3536) */
    3ca2:	ff e3 af e1 	CALL 0x0 <_putVal32>;
    3ca6:	2a e4 37 00 	R2 = [P5 + 0xdc];
    3caa:	28 e4 41 00 	R0 = [P5 + 0x104];
    3cae:	82 52       	R2 = R2 - R0;
    3cb0:	82 0c       	CC = R2 < 0x0;
    3cb2:	08 18       	IF CC JUMP 0x3cc2 <_ShowTaskSchedulingError+0x1b2>;
    3cb4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xdd0(3536) */
    3cb8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3cba:	01 e1 fc 0d 	R1.L = 0xdfc;		/* (3580)	R1=0xdfc(3580) */
    3cbe:	ff e3 a1 e1 	CALL 0x0 <_putVal32>;
    3cc2:	28 e4 48 00 	R0 = [P5 + 0x120];
    3cc6:	00 0c       	CC = R0 == 0x0;
    3cc8:	13 14       	IF !CC JUMP 0x3cee <_ShowTaskSchedulingError+0x1de> (BP);
    3cca:	28 e4 49 00 	R0 = [P5 + 0x124];
    3cce:	00 0c       	CC = R0 == 0x0;
    3cd0:	0f 1c       	IF CC JUMP 0x3cee <_ShowTaskSchedulingError+0x1de> (BP);
    3cd2:	2a e4 37 00 	R2 = [P5 + 0xdc];
    3cd6:	28 e4 4a 00 	R0 = [P5 + 0x128];
    3cda:	82 52       	R2 = R2 - R0;
    3cdc:	82 0c       	CC = R2 < 0x0;
    3cde:	08 18       	IF CC JUMP 0x3cee <_ShowTaskSchedulingError+0x1de>;
    3ce0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xdfc(3580) */
    3ce4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3ce6:	01 e1 2c 0e 	R1.L = 0xe2c;		/* (3628)	R1=0xe2c <_AppendLabelSuffix>(3628) */
    3cea:	ff e3 8b e1 	CALL 0x0 <_putVal32>;
    3cee:	00 00       	NOP;
    3cf0:	28 e4 48 00 	R0 = [P5 + 0x120];
    3cf4:	00 0c       	CC = R0 == 0x0;
    3cf6:	0d 1c       	IF CC JUMP 0x3d10 <_ShowTaskSchedulingError+0x200> (BP);
    3cf8:	2a e4 37 00 	R2 = [P5 + 0xdc];
    3cfc:	82 52       	R2 = R2 - R0;
    3cfe:	82 0c       	CC = R2 < 0x0;
    3d00:	08 18       	IF CC JUMP 0x3d10 <_ShowTaskSchedulingError+0x200>;
    3d02:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xe2c <_AppendLabelSuffix>(3628) */
    3d06:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3d08:	01 e1 60 0e 	R1.L = 0xe60;		/* (3680)	R1=0xe60(3680) */
    3d0c:	ff e3 7a e1 	CALL 0x0 <_putVal32>;
    3d10:	00 00       	NOP;
    3d12:	28 e4 3b 00 	R0 = [P5 + 0xec];
    3d16:	00 0c       	CC = R0 == 0x0;
    3d18:	0d 1c       	IF CC JUMP 0x3d32 <_ShowTaskSchedulingError+0x222> (BP);
    3d1a:	2a e4 37 00 	R2 = [P5 + 0xdc];
    3d1e:	82 52       	R2 = R2 - R0;
    3d20:	82 0c       	CC = R2 < 0x0;
    3d22:	08 18       	IF CC JUMP 0x3d32 <_ShowTaskSchedulingError+0x222>;
    3d24:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xe60(3680) */
    3d28:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3d2a:	01 e1 88 0e 	R1.L = 0xe88;		/* (3720)	R1=0xe88(3720) */
    3d2e:	ff e3 69 e1 	CALL 0x0 <_putVal32>;
    3d32:	00 00       	NOP;
    3d34:	2a e4 37 00 	R2 = [P5 + 0xdc];
    3d38:	28 e4 3d 00 	R0 = [P5 + 0xf4];
    3d3c:	82 52       	R2 = R2 - R0;
    3d3e:	82 0c       	CC = R2 < 0x0;
    3d40:	08 18       	IF CC JUMP 0x3d50 <_ShowTaskSchedulingError+0x240>;
    3d42:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xe88(3720) */
    3d46:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3d48:	01 e1 b8 0e 	R1.L = 0xeb8;		/* (3768)	R1=0xeb8(3768) */
    3d4c:	ff e3 5a e1 	CALL 0x0 <_putVal32>;
    3d50:	2a e4 37 00 	R2 = [P5 + 0xdc];
    3d54:	28 e4 3e 00 	R0 = [P5 + 0xf8];
    3d58:	82 52       	R2 = R2 - R0;
    3d5a:	82 0c       	CC = R2 < 0x0;
    3d5c:	08 18       	IF CC JUMP 0x3d6c <_ShowTaskSchedulingError+0x25c>;
    3d5e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xeb8(3768) */
    3d62:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3d64:	01 e1 e8 0e 	R1.L = 0xee8;		/* (3816)	R1=0xee8(3816) */
    3d68:	ff e3 4c e1 	CALL 0x0 <_putVal32>;
    3d6c:	2a e4 37 00 	R2 = [P5 + 0xdc];
    3d70:	28 e4 3f 00 	R0 = [P5 + 0xfc];
    3d74:	82 52       	R2 = R2 - R0;
    3d76:	82 0c       	CC = R2 < 0x0;
    3d78:	08 18       	IF CC JUMP 0x3d88 <_ShowTaskSchedulingError+0x278>;
    3d7a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xee8(3816) */
    3d7e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3d80:	01 e1 18 0f 	R1.L = 0xf18;		/* (3864)	R1=0xf18(3864) */
    3d84:	ff e3 3e e1 	CALL 0x0 <_putVal32>;
    3d88:	86 6c       	SP += 0x10;		/* ( 16) */
    3d8a:	27 01       	RETS = [SP++];
    3d8c:	45 30       	R0 = P5;
    3d8e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xf18(3864) */
    3d92:	01 e1 8c 01 	R1.L = 0x18c;		/* (396)	R1=0x18c(396) */
    3d96:	84 04       	(P5:4) = [SP++];
    3d98:	ff e2 e2 f4 	JUMP.L 0x275c <_mDNS_Unlock_>;

00003d9c <_GetLargeResourceRecord>:
_GetLargeResourceRecord():
    3d9c:	e3 05       	[--SP] = (R7:4, P5:3);
    3d9e:	20 32       	P4 = R0;
    3da0:	00 e8 44 00 	LINK 0x110;		/* (272) */
    3da4:	35 e5 53 00 	P5 = [SP + 0x14c];
    3da8:	2a e1 84 7c 	P2 = 0x7c84 (X);		/*		P2=0x7c84(31876) */
    3dac:	29 30       	R5 = R1;
    3dae:	94 5a       	P2 = P4 + P2;
    3db0:	3a 30       	R7 = R2;
    3db2:	33 e5 50 00 	P3 = [SP + 0x140];
    3db6:	34 e4 51 00 	R4 = [SP + 0x144];
    3dba:	55 08       	CC = P5 == P2;
    3dbc:	18 14       	IF !CC JUMP 0x3dec <_GetLargeResourceRecord+0x50> (BP);
    3dbe:	a0 e4 88 7c 	R0 = B[P4 + 0x7c88] (Z);
    3dc2:	00 0c       	CC = R0 == 0x0;
    3dc4:	14 1c       	IF CC JUMP 0x3dec <_GetLargeResourceRecord+0x50> (BP);
    3dc6:	2a e1 88 7c 	P2 = 0x7c88 (X);		/*		P2=0x7c88(31880) */
    3dca:	94 5a       	P2 = P4 + P2;
    3dcc:	21 e4 2a 1f 	R1 = [P4 + 0x7ca8];
    3dd0:	54 30       	R2 = P4;
    3dd2:	21 64       	R1 += 0x4;		/* (  4) */
    3dd4:	ba 65       	R2 += 0x37;		/* ( 55) */
    3dd6:	42 30       	R0 = P2;
    3dd8:	ff e3 e2 fc 	CALL 0x379c <_GetRRDisplayString_rdb>;
    3ddc:	10 30       	R2 = R0;
    3dde:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x18c(396) */
    3de2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3de4:	01 e1 4c 0f 	R1.L = 0xf4c;		/* (3916)	R1=0xf4c(3916) */
    3de8:	ff e3 0c e1 	CALL 0x0 <_putVal32>;
    3dec:	2a e1 54 20 	P2 = 0x2054 (X);		/*		P2=0x2054(8276) */
    3df0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3df2:	95 5a       	P2 = P5 + P2;
    3df4:	28 93       	[P5] = R0;
    3df6:	2a be       	[P5 + 0x20] = P2;
    3df8:	e8 b2       	[P5 + 0x2c] = R0;
    3dfa:	44 0c       	CC = P4 == 0x0;
    3dfc:	04 1c       	IF CC JUMP 0x3e04 <_GetLargeResourceRecord+0x68> (BP);
    3dfe:	20 e4 37 00 	R0 = [P4 + 0xdc];
    3e02:	02 20       	JUMP.S 0x3e06 <_GetLargeResourceRecord+0x6a>;
    3e04:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3e06:	28 b3       	[P5 + 0x30] = R0;
    3e08:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3e0a:	68 b3       	[P5 + 0x34] = R0;
    3e0c:	44 0c       	CC = P4 == 0x0;
    3e0e:	04 1c       	IF CC JUMP 0x3e16 <_GetLargeResourceRecord+0x7a> (BP);
    3e10:	20 e4 37 00 	R0 = [P4 + 0xdc];
    3e14:	02 20       	JUMP.S 0x3e18 <_GetLargeResourceRecord+0x7c>;
    3e16:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3e18:	a8 b3       	[P5 + 0x38] = R0;
    3e1a:	44 0c       	CC = P4 == 0x0;
    3e1c:	04 1c       	IF CC JUMP 0x3e24 <_GetLargeResourceRecord+0x88> (BP);
    3e1e:	20 e4 37 00 	R0 = [P4 + 0xdc];
    3e22:	02 20       	JUMP.S 0x3e26 <_GetLargeResourceRecord+0x8a>;
    3e24:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3e26:	e8 b3       	[P5 + 0x3c] = R0;
    3e28:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3e2a:	28 e6 10 00 	[P5 + 0x40] = R0;
    3e2e:	28 e6 11 00 	[P5 + 0x44] = R0;
    3e32:	28 e6 12 00 	[P5 + 0x48] = R0;
    3e36:	28 e6 13 00 	[P5 + 0x4c] = R0;
    3e3a:	a8 b2       	[P5 + 0x28] = R0;
    3e3c:	ec b1       	[P5 + 0x1c] = R4;
    3e3e:	f2 bc       	[SP + 0xc] = P2;
    3e40:	05 30       	R0 = R5;
    3e42:	0f 30       	R1 = R7;
    3e44:	53 30       	R2 = P3;
    3e46:	ff e3 d3 f2 	CALL 0x23ec <_getDomainName>;
    3e4a:	38 32       	FP = R0;
    3e4c:	47 0c       	CC = FP == 0x0;
    3e4e:	02 10       	IF !CC JUMP 0x3e52 <_GetLargeResourceRecord+0xb6>;
    3e50:	fc 22       	JUMP.S 0x4448 <_GetLargeResourceRecord+0x6ac>;
    3e52:	28 a2       	R0 = [P5 + 0x20];
    3e54:	67 32       	P4 = FP;
    3e56:	ff e3 89 f1 	CALL 0x2168 <_DomainNameHashValue>;
    3e5a:	54 6c       	P4 += 0xa;		/* ( 10) */
    3e5c:	68 b1       	[P5 + 0x14] = R0;
    3e5e:	5c 0a       	CC = P4 <= P3 (IU);
    3e60:	02 18       	IF CC JUMP 0x3e64 <_GetLargeResourceRecord+0xc8>;
    3e62:	f3 22       	JUMP.S 0x4448 <_GetLargeResourceRecord+0x6ac>;
    3e64:	38 99       	R0 = B[FP] (Z);
    3e66:	b9 e4 01 00 	R1 = B[FP + 0x1] (Z);
    3e6a:	40 4f       	R0 <<= 0x8;
    3e6c:	08 56       	R0 = R0 | R1;
    3e6e:	e8 b4       	W[P5 + 0x6] = R0;
    3e70:	b8 e4 02 00 	R0 = B[FP + 0x2] (Z);
    3e74:	b9 e4 03 00 	R1 = B[FP + 0x3] (Z);
    3e78:	40 4f       	R0 <<= 0x8;
    3e7a:	08 56       	R0 = R0 | R1;
    3e7c:	21 e1 ff 7f 	R1 = 0x7fff (X);		/*		R1=0x7fff(32767) */
    3e80:	08 54       	R0 = R0 & R1;
    3e82:	28 b5       	W[P5 + 0x8] = R0;
    3e84:	bf e4 04 00 	R7 = B[FP + 0x4] (Z);
    3e88:	b8 e4 05 00 	R0 = B[FP + 0x5] (Z);
    3e8c:	80 4f       	R0 <<= 0x10;
    3e8e:	c7 4f       	R7 <<= 0x18;
    3e90:	c7 57       	R7 = R7 | R0;
    3e92:	b8 e4 07 00 	R0 = B[FP + 0x7] (Z);
    3e96:	c7 57       	R7 = R7 | R0;
    3e98:	b8 e4 06 00 	R0 = B[FP + 0x6] (Z);
    3e9c:	40 4f       	R0 <<= 0x8;
    3e9e:	c7 57       	R7 = R7 | R0;
    3ea0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x2054 */
    3ea4:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_putVal32> */
    3ea8:	38 60       	R0 = 0x7 (X);		/*		R0=0x7(  7) */
    3eaa:	ef b0       	[P5 + 0xc] = R7;
    3eac:	e0 4f       	R0 <<= 0x1c;
    3eae:	11 91       	R1 = [P2];
    3eb0:	ff e3 a8 e0 	CALL 0x0 <_putVal32>;
    3eb4:	07 0a       	CC = R7 <= R0 (IU);
    3eb6:	04 1c       	IF CC JUMP 0x3ebe <_GetLargeResourceRecord+0x122> (BP);
    3eb8:	3f 0c       	CC = R7 == -0x1;
    3eba:	02 1c       	IF CC JUMP 0x3ebe <_GetLargeResourceRecord+0x122> (BP);
    3ebc:	e8 b0       	[P5 + 0xc] = R0;
    3ebe:	00 00       	NOP;
    3ec0:	be e4 08 00 	R6 = B[FP + 0x8] (Z);
    3ec4:	b8 e4 09 00 	R0 = B[FP + 0x9] (Z);
    3ec8:	46 4f       	R6 <<= 0x8;
    3eca:	86 57       	R6 = R6 | R0;
    3ecc:	b8 e5 02 00 	R0 = B[FP + 0x2] (X);
    3ed0:	80 0c       	CC = R0 < 0x0;
    3ed2:	08 18       	IF CC JUMP 0x3ee2 <_GetLargeResourceRecord+0x146>;
    3ed4:	04 0c       	CC = R4 == 0x0;
    3ed6:	0b 14       	IF !CC JUMP 0x3eec <_GetLargeResourceRecord+0x150> (BP);
    3ed8:	15 32       	P2 = R5;
    3eda:	90 e4 02 00 	R0 = B[P2 + 0x2] (Z);
    3ede:	08 48       	CC = !BITTST (R0, 0x1);		/* bit  1 */
    3ee0:	06 14       	IF !CC JUMP 0x3eec <_GetLargeResourceRecord+0x150> (BP);
    3ee2:	b0 e5 48 01 	R0 = B[SP + 0x148] (X);
    3ee6:	20 4a       	BITSET (R0, 0x4);		/* bit  4 */
    3ee8:	b0 e6 48 01 	B[SP + 0x148] = R0;
    3eec:	f4 42       	R4 = R6.L (Z);
    3eee:	4c 30       	R1 = P4;
    3ef0:	e1 51       	R7 = R1 + R4;
    3ef2:	53 30       	R2 = P3;
    3ef4:	17 0a       	CC = R7 <= R2 (IU);
    3ef6:	02 1c       	IF CC JUMP 0x3efa <_GetLargeResourceRecord+0x15e> (BP);
    3ef8:	a8 22       	JUMP.S 0x4448 <_GetLargeResourceRecord+0x6ac>;
    3efa:	2a e1 50 00 	P2 = 0x50 (X);		/*		P2=0x50( 80) */
    3efe:	95 5a       	P2 = P5 + P2;
    3f00:	20 e1 00 20 	R0 = 0x2000 (X);		/*		R0=0x2000(8192) */
    3f04:	6a be       	[P5 + 0x24] = P2;
    3f06:	10 97       	W[P2] = R0;
    3f08:	b0 e4 48 01 	R0 = B[SP + 0x148] (Z);
    3f0c:	00 0c       	CC = R0 == 0x0;
    3f0e:	08 14       	IF !CC JUMP 0x3f1e <_GetLargeResourceRecord+0x182> (BP);
    3f10:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x7fff(32767) */
    3f14:	2a a2       	R2 = [P5 + 0x20];
    3f16:	01 e1 90 0f 	R1.L = 0xf90;		/* (3984)	R1=0xf90(3984) */
    3f1a:	ff e3 73 e0 	CALL 0x0 <_putVal32>;
    3f1e:	23 e1 ff 00 	R3 = 0xff (X);		/*		R3=0xff(255) */
    3f22:	28 a5       	R0 = W[P5 + 0x8] (Z);
    3f24:	18 08       	CC = R0 == R3;
    3f26:	06 14       	IF !CC JUMP 0x3f32 <_GetLargeResourceRecord+0x196> (BP);
    3f28:	f0 42       	R0 = R6.L (Z);
    3f2a:	00 0c       	CC = R0 == 0x0;
    3f2c:	03 14       	IF !CC JUMP 0x3f32 <_GetLargeResourceRecord+0x196> (BP);
    3f2e:	28 b6       	W[P5 + 0x10] = R0;
    3f30:	78 22       	JUMP.S 0x4420 <_GetLargeResourceRecord+0x684>;
    3f32:	2b e1 54 00 	P3 = 0x54 (X);		/*		P3=0x54( 84) */
    3f36:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    3f38:	a1 60       	R1 = 0x14 (X);		/*		R1=0x14( 20) */
    3f3a:	dd 5a       	P3 = P5 + P3;
    3f3c:	08 0a       	CC = R0 <= R1 (IU);
    3f3e:	2f 14       	IF !CC JUMP 0x3f9c <_GetLargeResourceRecord+0x200> (BP);
    3f40:	9a 60       	R2 = 0x13 (X);		/*		R2=0x13( 19) */
    3f42:	90 09       	CC = R0 < R2 (IU);
    3f44:	02 18       	IF CC JUMP 0x3f48 <_GetLargeResourceRecord+0x1ac>;
    3f46:	62 22       	JUMP.S 0x440a <_GetLargeResourceRecord+0x66e>;
    3f48:	63 60       	R3 = 0xc (X);		/*		R3=0xc( 12) */
    3f4a:	18 08       	CC = R0 == R3;
    3f4c:	66 18       	IF CC JUMP 0x4018 <_GetLargeResourceRecord+0x27c>;
    3f4e:	18 0a       	CC = R0 <= R3 (IU);
    3f50:	11 14       	IF !CC JUMP 0x3f72 <_GetLargeResourceRecord+0x1d6> (BP);
    3f52:	29 60       	R1 = 0x5 (X);		/*		R1=0x5(  5) */
    3f54:	08 08       	CC = R0 == R1;
    3f56:	61 18       	IF CC JUMP 0x4018 <_GetLargeResourceRecord+0x27c>;
    3f58:	28 0e       	CC = R0 <= 0x5 (IU);
    3f5a:	07 14       	IF !CC JUMP 0x3f68 <_GetLargeResourceRecord+0x1cc> (BP);
    3f5c:	08 0c       	CC = R0 == 0x1;
    3f5e:	48 18       	IF CC JUMP 0x3fee <_GetLargeResourceRecord+0x252>;
    3f60:	10 0c       	CC = R0 == 0x2;
    3f62:	02 18       	IF CC JUMP 0x3f66 <_GetLargeResourceRecord+0x1ca>;
    3f64:	53 22       	JUMP.S 0x440a <_GetLargeResourceRecord+0x66e>;
    3f66:	59 20       	JUMP.S 0x4018 <_GetLargeResourceRecord+0x27c>;
    3f68:	32 60       	R2 = 0x6 (X);		/*		R2=0x6(  6) */
    3f6a:	10 08       	CC = R0 == R2;
    3f6c:	02 18       	IF CC JUMP 0x3f70 <_GetLargeResourceRecord+0x1d4>;
    3f6e:	4e 22       	JUMP.S 0x440a <_GetLargeResourceRecord+0x66e>;
    3f70:	58 20       	JUMP.S 0x4020 <_GetLargeResourceRecord+0x284>;
    3f72:	81 60       	R1 = 0x10 (X);		/*		R1=0x10( 16) */
    3f74:	08 08       	CC = R0 == R1;
    3f76:	02 14       	IF !CC JUMP 0x3f7a <_GetLargeResourceRecord+0x1de> (BP);
    3f78:	49 22       	JUMP.S 0x440a <_GetLargeResourceRecord+0x66e>;
    3f7a:	08 0a       	CC = R0 <= R1 (IU);
    3f7c:	08 14       	IF !CC JUMP 0x3f8c <_GetLargeResourceRecord+0x1f0> (BP);
    3f7e:	6a 60       	R2 = 0xd (X);		/*		R2=0xd( 13) */
    3f80:	10 08       	CC = R0 == R2;
    3f82:	02 14       	IF !CC JUMP 0x3f86 <_GetLargeResourceRecord+0x1ea> (BP);
    3f84:	43 22       	JUMP.S 0x440a <_GetLargeResourceRecord+0x66e>;
    3f86:	7b 60       	R3 = 0xf (X);		/*		R3=0xf( 15) */
    3f88:	18 08       	CC = R0 == R3;
    3f8a:	06 20       	JUMP.S 0x3f96 <_GetLargeResourceRecord+0x1fa>;
    3f8c:	89 60       	R1 = 0x11 (X);		/*		R1=0x11( 17) */
    3f8e:	08 08       	CC = R0 == R1;
    3f90:	c3 18       	IF CC JUMP 0x4116 <_GetLargeResourceRecord+0x37a>;
    3f92:	92 60       	R2 = 0x12 (X);		/*		R2=0x12( 18) */
    3f94:	10 08       	CC = R0 == R2;
    3f96:	02 18       	IF CC JUMP 0x3f9a <_GetLargeResourceRecord+0x1fe>;
    3f98:	39 22       	JUMP.S 0x440a <_GetLargeResourceRecord+0x66e>;
    3f9a:	ab 20       	JUMP.S 0x40f0 <_GetLargeResourceRecord+0x354>;
    3f9c:	23 61       	R3 = 0x24 (X);		/*		R3=0x24( 36) */
    3f9e:	18 08       	CC = R0 == R3;
    3fa0:	a8 18       	IF CC JUMP 0x40f0 <_GetLargeResourceRecord+0x354>;
    3fa2:	18 0a       	CC = R0 <= R3 (IU);
    3fa4:	17 14       	IF !CC JUMP 0x3fd2 <_GetLargeResourceRecord+0x236> (BP);
    3fa6:	e1 60       	R1 = 0x1c (X);		/*		R1=0x1c( 28) */
    3fa8:	08 08       	CC = R0 == R1;
    3faa:	da 18       	IF CC JUMP 0x415e <_GetLargeResourceRecord+0x3c2>;
    3fac:	08 0a       	CC = R0 <= R1 (IU);
    3fae:	09 14       	IF !CC JUMP 0x3fc0 <_GetLargeResourceRecord+0x224> (BP);
    3fb0:	aa 60       	R2 = 0x15 (X);		/*		R2=0x15( 21) */
    3fb2:	10 08       	CC = R0 == R2;
    3fb4:	9e 18       	IF CC JUMP 0x40f0 <_GetLargeResourceRecord+0x354>;
    3fb6:	d3 60       	R3 = 0x1a (X);		/*		R3=0x1a( 26) */
    3fb8:	18 08       	CC = R0 == R3;
    3fba:	02 18       	IF CC JUMP 0x3fbe <_GetLargeResourceRecord+0x222>;
    3fbc:	27 22       	JUMP.S 0x440a <_GetLargeResourceRecord+0x66e>;
    3fbe:	b8 20       	JUMP.S 0x412e <_GetLargeResourceRecord+0x392>;
    3fc0:	e9 60       	R1 = 0x1d (X);		/*		R1=0x1d( 29) */
    3fc2:	08 08       	CC = R0 == R1;
    3fc4:	02 14       	IF !CC JUMP 0x3fc8 <_GetLargeResourceRecord+0x22c> (BP);
    3fc6:	22 22       	JUMP.S 0x440a <_GetLargeResourceRecord+0x66e>;
    3fc8:	0a 61       	R2 = 0x21 (X);		/*		R2=0x21( 33) */
    3fca:	10 08       	CC = R0 == R2;
    3fcc:	02 18       	IF CC JUMP 0x3fd0 <_GetLargeResourceRecord+0x234>;
    3fce:	1e 22       	JUMP.S 0x440a <_GetLargeResourceRecord+0x66e>;
    3fd0:	cf 20       	JUMP.S 0x416e <_GetLargeResourceRecord+0x3d2>;
    3fd2:	7b 61       	R3 = 0x2f (X);		/*		R3=0x2f( 47) */
    3fd4:	18 08       	CC = R0 == R3;
    3fd6:	e0 19       	IF CC JUMP 0x4396 <_GetLargeResourceRecord+0x5fa>;
    3fd8:	18 0a       	CC = R0 <= R3 (IU);
    3fda:	02 18       	IF CC JUMP 0x3fde <_GetLargeResourceRecord+0x242>;
    3fdc:	17 22       	JUMP.S 0x440a <_GetLargeResourceRecord+0x66e>;
    3fde:	39 61       	R1 = 0x27 (X);		/*		R1=0x27( 39) */
    3fe0:	08 08       	CC = R0 == R1;
    3fe2:	1b 18       	IF CC JUMP 0x4018 <_GetLargeResourceRecord+0x27c>;
    3fe4:	4a 61       	R2 = 0x29 (X);		/*		R2=0x29( 41) */
    3fe6:	10 08       	CC = R0 == R2;
    3fe8:	02 18       	IF CC JUMP 0x3fec <_GetLargeResourceRecord+0x250>;
    3fea:	10 22       	JUMP.S 0x440a <_GetLargeResourceRecord+0x66e>;
    3fec:	de 20       	JUMP.S 0x41a8 <_GetLargeResourceRecord+0x40c>;
    3fee:	f6 42       	R6 = R6.L (Z);
    3ff0:	22 60       	R2 = 0x4 (X);		/*		R2=0x4(  4) */
    3ff2:	16 08       	CC = R6 == R2;
    3ff4:	02 18       	IF CC JUMP 0x3ff8 <_GetLargeResourceRecord+0x25c>;
    3ff6:	20 22       	JUMP.S 0x4436 <_GetLargeResourceRecord+0x69a>;
    3ff8:	b8 e5 0a 00 	R0 = B[FP + 0xa] (X);
    3ffc:	18 9b       	B[P3] = R0;
    3ffe:	a0 e5 01 00 	R0 = B[P4 + 0x1] (X);
    4002:	98 e6 01 00 	B[P3 + 0x1] = R0;
    4006:	a0 e5 02 00 	R0 = B[P4 + 0x2] (X);
    400a:	98 e6 02 00 	B[P3 + 0x2] = R0;
    400e:	a0 e5 03 00 	R0 = B[P4 + 0x3] (X);
    4012:	98 e6 03 00 	B[P3 + 0x3] = R0;
    4016:	05 22       	JUMP.S 0x4420 <_GetLargeResourceRecord+0x684>;
    4018:	f3 bc       	[SP + 0xc] = P3;
    401a:	05 30       	R0 = R5;
    401c:	4c 30       	R1 = P4;
    401e:	77 20       	JUMP.S 0x410c <_GetLargeResourceRecord+0x370>;
    4020:	4c 30       	R1 = P4;
    4022:	f3 bc       	[SP + 0xc] = P3;
    4024:	05 30       	R0 = R5;
    4026:	17 30       	R2 = R7;
    4028:	ff e3 e2 f1 	CALL 0x23ec <_getDomainName>;
    402c:	08 30       	R1 = R0;
    402e:	00 0c       	CC = R0 == 0x0;
    4030:	02 14       	IF !CC JUMP 0x4034 <_GetLargeResourceRecord+0x298> (BP);
    4032:	02 22       	JUMP.S 0x4436 <_GetLargeResourceRecord+0x69a>;
    4034:	2a e1 00 01 	P2 = 0x100 (X);		/*		P2=0x100(256) */
    4038:	93 5a       	P2 = P3 + P2;
    403a:	f2 bc       	[SP + 0xc] = P2;
    403c:	05 30       	R0 = R5;
    403e:	17 30       	R2 = R7;
    4040:	ff e3 d6 f1 	CALL 0x23ec <_getDomainName>;
    4044:	10 32       	P2 = R0;
    4046:	42 0c       	CC = P2 == 0x0;
    4048:	f7 19       	IF CC JUMP 0x4436 <_GetLargeResourceRecord+0x69a>;
    404a:	a0 64       	R0 += 0x14;		/* ( 20) */
    404c:	07 08       	CC = R7 == R0;
    404e:	f4 15       	IF !CC JUMP 0x4436 <_GetLargeResourceRecord+0x69a> (BP);
    4050:	10 99       	R0 = B[P2] (Z);
    4052:	91 e4 03 00 	R1 = B[P2 + 0x3] (Z);
    4056:	c0 4f       	R0 <<= 0x18;
    4058:	01 56       	R0 = R1 | R0;
    405a:	91 e4 01 00 	R1 = B[P2 + 0x1] (Z);
    405e:	81 4f       	R1 <<= 0x10;
    4060:	08 56       	R0 = R0 | R1;
    4062:	91 e4 02 00 	R1 = B[P2 + 0x2] (Z);
    4066:	41 4f       	R1 <<= 0x8;
    4068:	08 56       	R0 = R0 | R1;
    406a:	18 e6 80 00 	[P3 + 0x200] = R0;
    406e:	91 e4 04 00 	R1 = B[P2 + 0x4] (Z);
    4072:	90 e4 05 00 	R0 = B[P2 + 0x5] (Z);
    4076:	c1 4f       	R1 <<= 0x18;
    4078:	80 4f       	R0 <<= 0x10;
    407a:	01 56       	R0 = R1 | R0;
    407c:	91 e4 07 00 	R1 = B[P2 + 0x7] (Z);
    4080:	08 56       	R0 = R0 | R1;
    4082:	91 e4 06 00 	R1 = B[P2 + 0x6] (Z);
    4086:	41 4f       	R1 <<= 0x8;
    4088:	08 56       	R0 = R0 | R1;
    408a:	18 e6 81 00 	[P3 + 0x204] = R0;
    408e:	91 e4 08 00 	R1 = B[P2 + 0x8] (Z);
    4092:	90 e4 09 00 	R0 = B[P2 + 0x9] (Z);
    4096:	c1 4f       	R1 <<= 0x18;
    4098:	80 4f       	R0 <<= 0x10;
    409a:	01 56       	R0 = R1 | R0;
    409c:	91 e4 0b 00 	R1 = B[P2 + 0xb] (Z);
    40a0:	08 56       	R0 = R0 | R1;
    40a2:	91 e4 0a 00 	R1 = B[P2 + 0xa] (Z);
    40a6:	41 4f       	R1 <<= 0x8;
    40a8:	08 56       	R0 = R0 | R1;
    40aa:	18 e6 82 00 	[P3 + 0x208] = R0;
    40ae:	91 e4 0c 00 	R1 = B[P2 + 0xc] (Z);
    40b2:	90 e4 0d 00 	R0 = B[P2 + 0xd] (Z);
    40b6:	c1 4f       	R1 <<= 0x18;
    40b8:	80 4f       	R0 <<= 0x10;
    40ba:	01 56       	R0 = R1 | R0;
    40bc:	91 e4 0f 00 	R1 = B[P2 + 0xf] (Z);
    40c0:	08 56       	R0 = R0 | R1;
    40c2:	91 e4 0e 00 	R1 = B[P2 + 0xe] (Z);
    40c6:	41 4f       	R1 <<= 0x8;
    40c8:	08 56       	R0 = R0 | R1;
    40ca:	18 e6 83 00 	[P3 + 0x20c] = R0;
    40ce:	91 e4 10 00 	R1 = B[P2 + 0x10] (Z);
    40d2:	90 e4 11 00 	R0 = B[P2 + 0x11] (Z);
    40d6:	c1 4f       	R1 <<= 0x18;
    40d8:	80 4f       	R0 <<= 0x10;
    40da:	01 56       	R0 = R1 | R0;
    40dc:	91 e4 13 00 	R1 = B[P2 + 0x13] (Z);
    40e0:	08 56       	R0 = R0 | R1;
    40e2:	91 e4 12 00 	R1 = B[P2 + 0x12] (Z);
    40e6:	41 4f       	R1 <<= 0x8;
    40e8:	08 56       	R0 = R0 | R1;
    40ea:	18 e6 84 00 	[P3 + 0x210] = R0;
    40ee:	99 21       	JUMP.S 0x4420 <_GetLargeResourceRecord+0x684>;
    40f0:	f6 42       	R6 = R6.L (Z);
    40f2:	16 0e       	CC = R6 <= 0x2 (IU);
    40f4:	a1 1d       	IF CC JUMP 0x4436 <_GetLargeResourceRecord+0x69a> (BP);
    40f6:	b8 e4 0a 00 	R0 = B[FP + 0xa] (Z);
    40fa:	a1 e4 01 00 	R1 = B[P4 + 0x1] (Z);
    40fe:	40 4f       	R0 <<= 0x8;
    4100:	08 56       	R0 = R0 | R1;
    4102:	4c 30       	R1 = P4;
    4104:	18 96       	W[P3++] = R0;
    4106:	11 64       	R1 += 0x2;		/* (  2) */
    4108:	f3 bc       	[SP + 0xc] = P3;
    410a:	05 30       	R0 = R5;
    410c:	17 30       	R2 = R7;
    410e:	ff e3 6f f1 	CALL 0x23ec <_getDomainName>;
    4112:	38 08       	CC = R0 == R7;
    4114:	79 21       	JUMP.S 0x4406 <_GetLargeResourceRecord+0x66a>;
    4116:	4c 30       	R1 = P4;
    4118:	f3 bc       	[SP + 0xc] = P3;
    411a:	05 30       	R0 = R5;
    411c:	17 30       	R2 = R7;
    411e:	ff e3 67 f1 	CALL 0x23ec <_getDomainName>;
    4122:	08 30       	R1 = R0;
    4124:	00 0c       	CC = R0 == 0x0;
    4126:	88 19       	IF CC JUMP 0x4436 <_GetLargeResourceRecord+0x69a>;
    4128:	2a e1 00 01 	P2 = 0x100 (X);		/*		P2=0x100(256) */
    412c:	17 20       	JUMP.S 0x415a <_GetLargeResourceRecord+0x3be>;
    412e:	f6 42       	R6 = R6.L (Z);
    4130:	1e 0e       	CC = R6 <= 0x3 (IU);
    4132:	82 1d       	IF CC JUMP 0x4436 <_GetLargeResourceRecord+0x69a> (BP);
    4134:	b8 e4 0a 00 	R0 = B[FP + 0xa] (Z);
    4138:	a1 e4 01 00 	R1 = B[P4 + 0x1] (Z);
    413c:	40 4f       	R0 <<= 0x8;
    413e:	08 56       	R0 = R0 | R1;
    4140:	53 32       	P2 = P3;
    4142:	10 96       	W[P2++] = R0;
    4144:	4c 30       	R1 = P4;
    4146:	f2 bc       	[SP + 0xc] = P2;
    4148:	05 30       	R0 = R5;
    414a:	17 30       	R2 = R7;
    414c:	ff e3 50 f1 	CALL 0x23ec <_getDomainName>;
    4150:	08 30       	R1 = R0;
    4152:	00 0c       	CC = R0 == 0x0;
    4154:	71 19       	IF CC JUMP 0x4436 <_GetLargeResourceRecord+0x69a>;
    4156:	2a e1 02 01 	P2 = 0x102 (X);		/*		P2=0x102(258) */
    415a:	d3 5a       	P3 = P3 + P2;
    415c:	d6 2f       	JUMP.S 0x4108 <_GetLargeResourceRecord+0x36c>;
    415e:	f6 42       	R6 = R6.L (Z);
    4160:	83 60       	R3 = 0x10 (X);		/*		R3=0x10( 16) */
    4162:	1e 08       	CC = R6 == R3;
    4164:	69 15       	IF !CC JUMP 0x4436 <_GetLargeResourceRecord+0x69a> (BP);
    4166:	43 30       	R0 = P3;
    4168:	4c 30       	R1 = P4;
    416a:	82 60       	R2 = 0x10 (X);		/*		R2=0x10( 16) */
    416c:	58 21       	JUMP.S 0x441c <_GetLargeResourceRecord+0x680>;
    416e:	f6 42       	R6 = R6.L (Z);
    4170:	36 0e       	CC = R6 <= 0x6 (IU);
    4172:	62 1d       	IF CC JUMP 0x4436 <_GetLargeResourceRecord+0x69a> (BP);
    4174:	b8 e4 0a 00 	R0 = B[FP + 0xa] (Z);
    4178:	a1 e4 01 00 	R1 = B[P4 + 0x1] (Z);
    417c:	40 4f       	R0 <<= 0x8;
    417e:	08 56       	R0 = R0 | R1;
    4180:	18 97       	W[P3] = R0;
    4182:	a0 e4 02 00 	R0 = B[P4 + 0x2] (Z);
    4186:	a1 e4 03 00 	R1 = B[P4 + 0x3] (Z);
    418a:	40 4f       	R0 <<= 0x8;
    418c:	08 56       	R0 = R0 | R1;
    418e:	58 b4       	W[P3 + 0x2] = R0;
    4190:	a0 e5 04 00 	R0 = B[P4 + 0x4] (X);
    4194:	98 e6 04 00 	B[P3 + 0x4] = R0;
    4198:	a0 e5 05 00 	R0 = B[P4 + 0x5] (X);
    419c:	98 e6 05 00 	B[P3 + 0x5] = R0;
    41a0:	4c 30       	R1 = P4;
    41a2:	31 64       	R1 += 0x6;		/* (  6) */
    41a4:	33 6c       	P3 += 0x6;		/* (  6) */
    41a6:	b1 2f       	JUMP.S 0x4108 <_GetLargeResourceRecord+0x36c>;
    41a8:	6b ae       	P3 = [P5 + 0x24];
    41aa:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    41ac:	45 e1 00 00 	R5.H = 0x0;		/* (  0)	R5=0x0 <_putVal32>(  0) */
    41b0:	28 b6       	W[P5 + 0x10] = R0;
    41b2:	23 6c       	P3 += 0x4;		/* (  4) */
    41b4:	05 e1 00 00 	R5.L = 0x0;		/* (  0)	R5=0x0 <_putVal32>(  0) */
    41b8:	ce 20       	JUMP.S 0x4354 <_GetLargeResourceRecord+0x5b8>;
    41ba:	7c 32       	FP = P4;
    41bc:	27 6c       	FP += 0x4;		/* (  4) */
    41be:	47 30       	R0 = FP;
    41c0:	38 0a       	CC = R0 <= R7 (IU);
    41c2:	0e 1c       	IF CC JUMP 0x41de <_GetLargeResourceRecord+0x442> (BP);
    41c4:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x102 */
    41c8:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_putVal32> */
    41cc:	10 91       	R0 = [P2];
    41ce:	00 0c       	CC = R0 == 0x0;
    41d0:	33 1d       	IF CC JUMP 0x4436 <_GetLargeResourceRecord+0x69a> (BP);
    41d2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x27( 39) */
    41d6:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    41d8:	01 e1 c0 0f 	R1.L = 0xfc0;		/* (4032)	R1=0xfc0(4032) */
    41dc:	f4 20       	JUMP.S 0x43c4 <_GetLargeResourceRecord+0x628>;
    41de:	5f 30       	R3 = FP;
    41e0:	21 99       	R1 = B[P4] (Z);
    41e2:	a0 e4 01 00 	R0 = B[P4 + 0x1] (Z);
    41e6:	41 4f       	R1 <<= 0x8;
    41e8:	41 56       	R1 = R1 | R0;
    41ea:	19 97       	W[P3] = R1;
    41ec:	a0 e4 02 00 	R0 = B[P4 + 0x2] (Z);
    41f0:	a2 e4 03 00 	R2 = B[P4 + 0x3] (Z);
    41f4:	40 4f       	R0 <<= 0x8;
    41f6:	10 56       	R0 = R0 | R2;
    41f8:	58 b4       	W[P3 + 0x2] = R0;
    41fa:	c0 42       	R0 = R0.L (Z);
    41fc:	83 50       	R2 = R3 + R0;
    41fe:	97 09       	CC = R7 < R2 (IU);
    4200:	0e 14       	IF !CC JUMP 0x421c <_GetLargeResourceRecord+0x480> (BP);
    4202:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_putVal32> */
    4206:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_putVal32> */
    420a:	10 91       	R0 = [P2];
    420c:	00 0c       	CC = R0 == 0x0;
    420e:	14 1d       	IF CC JUMP 0x4436 <_GetLargeResourceRecord+0x69a> (BP);
    4210:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xfc0(4032) */
    4214:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    4216:	01 e1 f0 0f 	R1.L = 0xff0;		/* (4080)	R1=0xff0(4080) */
    421a:	d5 20       	JUMP.S 0x43c4 <_GetLargeResourceRecord+0x628>;
    421c:	c9 42       	R1 = R1.L (Z);
    421e:	11 0c       	CC = R1 == 0x2;
    4220:	3d 18       	IF CC JUMP 0x429a <_GetLargeResourceRecord+0x4fe>;
    4222:	22 60       	R2 = 0x4 (X);		/*		R2=0x4(  4) */
    4224:	11 08       	CC = R1 == R2;
    4226:	55 18       	IF CC JUMP 0x42d0 <_GetLargeResourceRecord+0x534>;
    4228:	09 0c       	CC = R1 == 0x1;
    422a:	90 14       	IF !CC JUMP 0x434a <_GetLargeResourceRecord+0x5ae> (BP);
    422c:	93 60       	R3 = 0x12 (X);		/*		R3=0x12( 18) */
    422e:	18 08       	CC = R0 == R3;
    4230:	8d 14       	IF !CC JUMP 0x434a <_GetLargeResourceRecord+0x5ae> (BP);
    4232:	38 99       	R0 = B[FP] (Z);
    4234:	b9 e4 01 00 	R1 = B[FP + 0x1] (Z);
    4238:	40 4f       	R0 <<= 0x8;
    423a:	08 56       	R0 = R0 | R1;
    423c:	98 b4       	W[P3 + 0x4] = R0;
    423e:	b8 e4 02 00 	R0 = B[FP + 0x2] (Z);
    4242:	b9 e4 03 00 	R1 = B[FP + 0x3] (Z);
    4246:	40 4f       	R0 <<= 0x8;
    4248:	08 56       	R0 = R0 | R1;
    424a:	d8 b4       	W[P3 + 0x6] = R0;
    424c:	b8 e4 04 00 	R0 = B[FP + 0x4] (Z);
    4250:	b9 e4 05 00 	R1 = B[FP + 0x5] (Z);
    4254:	40 4f       	R0 <<= 0x8;
    4256:	08 56       	R0 = R0 | R1;
    4258:	18 b5       	W[P3 + 0x8] = R0;
    425a:	43 30       	R0 = P3;
    425c:	4c 30       	R1 = P4;
    425e:	60 64       	R0 += 0xc;		/* ( 12) */
    4260:	51 64       	R1 += 0xa;		/* ( 10) */
    4262:	42 60       	R2 = 0x8 (X);		/*		R2=0x8(  8) */
    4264:	ff e3 ce de 	CALL 0x0 <_putVal32>;
    4268:	be e4 0e 00 	R6 = B[FP + 0xe] (Z);
    426c:	b8 e4 0f 00 	R0 = B[FP + 0xf] (Z);
    4270:	80 4f       	R0 <<= 0x10;
    4272:	c6 4f       	R6 <<= 0x18;
    4274:	86 57       	R6 = R6 | R0;
    4276:	b8 e4 11 00 	R0 = B[FP + 0x11] (Z);
    427a:	86 57       	R6 = R6 | R0;
    427c:	15 32       	P2 = R5;
    427e:	b8 e4 10 00 	R0 = B[FP + 0x10] (Z);
    4282:	40 4f       	R0 <<= 0x8;
    4284:	86 57       	R6 = R6 | R0;
    4286:	38 60       	R0 = 0x7 (X);		/*		R0=0x7(  7) */
    4288:	5e b1       	[P3 + 0x14] = R6;
    428a:	e0 4f       	R0 <<= 0x1c;
    428c:	11 91       	R1 = [P2];
    428e:	ff e3 b9 de 	CALL 0x0 <_putVal32>;
    4292:	06 0a       	CC = R6 <= R0 (IU);
    4294:	58 1c       	IF CC JUMP 0x4344 <_GetLargeResourceRecord+0x5a8> (BP);
    4296:	58 b1       	[P3 + 0x14] = R0;
    4298:	56 20       	JUMP.S 0x4344 <_GetLargeResourceRecord+0x5a8>;
    429a:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
    429c:	08 08       	CC = R0 == R1;
    429e:	56 14       	IF !CC JUMP 0x434a <_GetLargeResourceRecord+0x5ae> (BP);
    42a0:	3e 99       	R6 = B[FP] (Z);
    42a2:	b8 e4 03 00 	R0 = B[FP + 0x3] (Z);
    42a6:	c6 4f       	R6 <<= 0x18;
    42a8:	b0 57       	R6 = R0 | R6;
    42aa:	b8 e4 01 00 	R0 = B[FP + 0x1] (Z);
    42ae:	80 4f       	R0 <<= 0x10;
    42b0:	86 57       	R6 = R6 | R0;
    42b2:	15 32       	P2 = R5;
    42b4:	b8 e4 02 00 	R0 = B[FP + 0x2] (Z);
    42b8:	40 4f       	R0 <<= 0x8;
    42ba:	86 57       	R6 = R6 | R0;
    42bc:	38 60       	R0 = 0x7 (X);		/*		R0=0x7(  7) */
    42be:	5e b0       	[P3 + 0x4] = R6;
    42c0:	e0 4f       	R0 <<= 0x1c;
    42c2:	11 91       	R1 = [P2];
    42c4:	ff e3 9e de 	CALL 0x0 <_putVal32>;
    42c8:	06 0a       	CC = R6 <= R0 (IU);
    42ca:	3d 1c       	IF CC JUMP 0x4344 <_GetLargeResourceRecord+0x5a8> (BP);
    42cc:	58 b0       	[P3 + 0x4] = R0;
    42ce:	3b 20       	JUMP.S 0x4344 <_GetLargeResourceRecord+0x5a8>;
    42d0:	41 60       	R1 = 0x8 (X);		/*		R1=0x8(  8) */
    42d2:	08 08       	CC = R0 == R1;
    42d4:	0a 18       	IF CC JUMP 0x42e8 <_GetLargeResourceRecord+0x54c>;
    42d6:	72 60       	R2 = 0xe (X);		/*		R2=0xe( 14) */
    42d8:	10 08       	CC = R0 == R2;
    42da:	07 18       	IF CC JUMP 0x42e8 <_GetLargeResourceRecord+0x54c>;
    42dc:	93 60       	R3 = 0x12 (X);		/*		R3=0x12( 18) */
    42de:	18 08       	CC = R0 == R3;
    42e0:	04 18       	IF CC JUMP 0x42e8 <_GetLargeResourceRecord+0x54c>;
    42e2:	a1 60       	R1 = 0x14 (X);		/*		R1=0x14( 20) */
    42e4:	08 08       	CC = R0 == R1;
    42e6:	32 14       	IF !CC JUMP 0x434a <_GetLargeResourceRecord+0x5ae> (BP);
    42e8:	78 99       	R0 = B[FP] (X);
    42ea:	98 e6 04 00 	B[P3 + 0x4] = R0;
    42ee:	b8 e5 01 00 	R0 = B[FP + 0x1] (X);
    42f2:	98 e6 05 00 	B[P3 + 0x5] = R0;
    42f6:	77 30       	R6 = FP;
    42f8:	16 64       	R6 += 0x2;		/* (  2) */
    42fa:	43 30       	R0 = P3;
    42fc:	40 64       	R0 += 0x8;		/* (  8) */
    42fe:	0e 30       	R1 = R6;
    4300:	32 60       	R2 = 0x6 (X);		/*		R2=0x6(  6) */
    4302:	63 30       	R4 = P3;
    4304:	ff e3 7e de 	CALL 0x0 <_putVal32>;
    4308:	84 64       	R4 += 0x10;		/* ( 16) */
    430a:	04 30       	R0 = R4;
    430c:	32 60       	R2 = 0x6 (X);		/*		R2=0x6(  6) */
    430e:	0e 30       	R1 = R6;
    4310:	ff e3 78 de 	CALL 0x0 <_putVal32>;
    4314:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    4316:	58 a4       	R0 = W[P3 + 0x2] (Z);
    4318:	6b 60       	R3 = 0xd (X);		/*		R3=0xd( 13) */
    431a:	9a b1       	[P3 + 0x18] = R2;
    431c:	da b1       	[P3 + 0x1c] = R2;
    431e:	18 0a       	CC = R0 <= R3 (IU);
    4320:	12 1c       	IF CC JUMP 0x4344 <_GetLargeResourceRecord+0x5a8> (BP);
    4322:	4f 30       	R1 = FP;
    4324:	04 30       	R0 = R4;
    4326:	32 60       	R2 = 0x6 (X);		/*		R2=0x6(  6) */
    4328:	41 64       	R1 += 0x8;		/* (  8) */
    432a:	ff e3 6b de 	CALL 0x0 <_putVal32>;
    432e:	5a a4       	R2 = W[P3 + 0x2] (Z);
    4330:	70 60       	R0 = 0xe (X);		/*		R0=0xe( 14) */
    4332:	02 0a       	CC = R2 <= R0 (IU);
    4334:	08 1c       	IF CC JUMP 0x4344 <_GetLargeResourceRecord+0x5a8> (BP);
    4336:	43 30       	R0 = P3;
    4338:	4f 30       	R1 = FP;
    433a:	c0 64       	R0 += 0x18;		/* ( 24) */
    433c:	71 64       	R1 += 0xe;		/* ( 14) */
    433e:	92 67       	R2 += -0xe;		/* (-14) */
    4340:	ff e3 60 de 	CALL 0x0 <_putVal32>;
    4344:	43 30       	R0 = P3;
    4346:	00 65       	R0 += 0x20;		/* ( 32) */
    4348:	02 20       	JUMP.S 0x434c <_GetLargeResourceRecord+0x5b0>;
    434a:	43 30       	R0 = P3;
    434c:	59 a4       	R1 = W[P3 + 0x2] (Z);
    434e:	21 32       	P4 = R1;
    4350:	18 32       	P3 = R0;
    4352:	27 5b       	P4 = FP + P4;
    4354:	54 30       	R2 = P4;
    4356:	ba 09       	CC = R2 < R7 (IU);
    4358:	0a 10       	IF !CC JUMP 0x436c <_GetLargeResourceRecord+0x5d0>;
    435a:	4b 30       	R1 = P3;
    435c:	23 e1 00 20 	R3 = 0x2000 (X);		/*		R3=0x2000(8192) */
    4360:	01 65       	R1 += 0x20;		/* ( 32) */
    4362:	68 a2       	R0 = [P5 + 0x24];
    4364:	20 64       	R0 += 0x4;		/* (  4) */
    4366:	18 50       	R0 = R0 + R3;
    4368:	81 09       	CC = R1 < R0 (IU);
    436a:	28 1f       	IF CC JUMP 0x41ba <_GetLargeResourceRecord+0x41e> (BP);
    436c:	68 a2       	R0 = [P5 + 0x24];
    436e:	20 64       	R0 += 0x4;		/* (  4) */
    4370:	4b 30       	R1 = P3;
    4372:	01 52       	R0 = R1 - R0;
    4374:	54 30       	R2 = P4;
    4376:	28 b6       	W[P5 + 0x10] = R0;
    4378:	3a 08       	CC = R2 == R7;
    437a:	53 18       	IF CC JUMP 0x4420 <_GetLargeResourceRecord+0x684>;
    437c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_putVal32> */
    4380:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_putVal32> */
    4384:	10 91       	R0 = [P2];
    4386:	00 0c       	CC = R0 == 0x0;
    4388:	57 1c       	IF CC JUMP 0x4436 <_GetLargeResourceRecord+0x69a> (BP);
    438a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x14( 20) */
    438e:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    4390:	01 e1 20 10 	R1.L = 0x1020;		/* (4128)	R1=0x1020(4128) */
    4394:	18 20       	JUMP.S 0x43c4 <_GetLargeResourceRecord+0x628>;
    4396:	56 32       	P2 = SP;
    4398:	82 6c       	P2 += 0x10;		/* ( 16) */
    439a:	4c 30       	R1 = P4;
    439c:	f2 bc       	[SP + 0xc] = P2;
    439e:	05 30       	R0 = R5;
    43a0:	17 30       	R2 = R7;
    43a2:	ff e3 25 f0 	CALL 0x23ec <_getDomainName>;
    43a6:	20 32       	P4 = R0;
    43a8:	44 0c       	CC = P4 == 0x0;
    43aa:	10 14       	IF !CC JUMP 0x43ca <_GetLargeResourceRecord+0x62e> (BP);
    43ac:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_putVal32> */
    43b0:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_putVal32> */
    43b4:	10 91       	R0 = [P2];
    43b6:	00 0c       	CC = R0 == 0x0;
    43b8:	3f 1c       	IF CC JUMP 0x4436 <_GetLargeResourceRecord+0x69a> (BP);
    43ba:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1020(4128) */
    43be:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    43c0:	01 e1 4c 10 	R1.L = 0x104c;		/* (4172)	R1=0x104c(4172) */
    43c4:	ff e3 1e de 	CALL 0x0 <_putVal32>;
    43c8:	37 20       	JUMP.S 0x4436 <_GetLargeResourceRecord+0x69a>;
    43ca:	43 30       	R0 = P3;
    43cc:	01 61       	R1 = 0x20 (X);		/*		R1=0x20( 32) */
    43ce:	ff e3 19 de 	CALL 0x0 <_putVal32>;
    43d2:	5c 30       	R3 = P4;
    43d4:	bb 09       	CC = R3 < R7 (IU);
    43d6:	16 14       	IF !CC JUMP 0x4402 <_GetLargeResourceRecord+0x666> (BP);
    43d8:	20 99       	R0 = B[P4] (Z);
    43da:	00 0c       	CC = R0 == 0x0;
    43dc:	2d 14       	IF !CC JUMP 0x4436 <_GetLargeResourceRecord+0x69a> (BP);
    43de:	54 30       	R2 = P4;
    43e0:	a0 e4 01 00 	R0 = B[P4 + 0x1] (Z);
    43e4:	01 61       	R1 = 0x20 (X);		/*		R1=0x20( 32) */
    43e6:	0a 64       	R2 += 0x1;		/* (  1) */
    43e8:	08 0a       	CC = R0 <= R1 (IU);
    43ea:	26 14       	IF !CC JUMP 0x4436 <_GetLargeResourceRecord+0x69a> (BP);
    43ec:	0a 64       	R2 += 0x1;		/* (  1) */
    43ee:	14 6c       	P4 += 0x2;		/* (  2) */
    43f0:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    43f2:	04 20       	JUMP.S 0x43fa <_GetLargeResourceRecord+0x65e>;
    43f4:	09 64       	R1 += 0x1;		/* (  1) */
    43f6:	63 98       	R3 = B[P4++] (X);
    43f8:	1b 9a       	B[P3++] = R3;
    43fa:	81 09       	CC = R1 < R0 (IU);
    43fc:	fc 1f       	IF CC JUMP 0x43f4 <_GetLargeResourceRecord+0x658> (BP);
    43fe:	82 50       	R2 = R2 + R0;
    4400:	22 32       	P4 = R2;
    4402:	54 30       	R2 = P4;
    4404:	3a 08       	CC = R2 == R7;
    4406:	18 14       	IF !CC JUMP 0x4436 <_GetLargeResourceRecord+0x69a> (BP);
    4408:	0c 20       	JUMP.S 0x4420 <_GetLargeResourceRecord+0x684>;
    440a:	f1 42       	R1 = R6.L (Z);
    440c:	6a ae       	P2 = [P5 + 0x24];
    440e:	10 95       	R0 = W[P2] (Z);
    4410:	01 0a       	CC = R1 <= R0 (IU);
    4412:	12 14       	IF !CC JUMP 0x4436 <_GetLargeResourceRecord+0x69a> (BP);
    4414:	2e b6       	W[P5 + 0x10] = R6;
    4416:	43 30       	R0 = P3;
    4418:	4c 30       	R1 = P4;
    441a:	14 30       	R2 = R4;
    441c:	ff e3 f2 dd 	CALL 0x0 <_putVal32>;
    4420:	45 30       	R0 = P5;
    4422:	20 64       	R0 += 0x4;		/* (  4) */
    4424:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    4426:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    4428:	ff e3 66 ef 	CALL 0x22f4 <_SetNewRData>;
    442c:	b3 e5 48 01 	R3 = B[SP + 0x148] (X);
    4430:	ab e6 04 00 	B[P5 + 0x4] = R3;
    4434:	0b 20       	JUMP.S 0x444a <_GetLargeResourceRecord+0x6ae>;
    4436:	80 63       	R0 = -0x10 (X);		/*		R0=0xfffffff0(-16) */
    4438:	a8 e6 04 00 	B[P5 + 0x4] = R0;
    443c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    443e:	28 b6       	W[P5 + 0x10] = R0;
    4440:	68 b6       	W[P5 + 0x12] = R0;
    4442:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4444:	a8 b1       	[P5 + 0x18] = R0;
    4446:	02 20       	JUMP.S 0x444a <_GetLargeResourceRecord+0x6ae>;
    4448:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    444a:	29 e1 10 01 	P1 = 0x110 (X);		/*		P1=0x110(272) */
    444e:	8e 5b       	SP = SP + P1;
    4450:	77 90       	FP = [SP++];
    4452:	07 30       	R0 = R7;
    4454:	27 01       	RETS = [SP++];
    4456:	a3 05       	(R7:4, P5:3) = [SP++];
    4458:	10 00       	RTS;
	...

0000445c <_GetPktLease>:
_GetPktLease():
    445c:	f5 05       	[--SP] = (R7:6, P5:5);
    445e:	28 32       	P5 = R0;
    4460:	01 30       	R0 = R1;
    4462:	31 30       	R6 = R1;
    4464:	67 01       	[--SP] = RETS;
    4466:	0a 30       	R1 = R2;
    4468:	3a 30       	R7 = R2;
    446a:	42 60       	R2 = 0x8 (X);		/*		R2=0x8(  8) */
    446c:	26 6f       	SP += -0x1c;		/* (-28) */
    446e:	ff e3 d5 f0 	CALL 0x2618 <_LocateOptRR>;
    4472:	10 30       	R2 = R0;
    4474:	00 0c       	CC = R0 == 0x0;
    4476:	1d 18       	IF CC JUMP 0x44b0 <_GetPktLease+0x54>;
    4478:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    447a:	30 b1       	[SP + 0x10] = R0;
    447c:	20 e1 80 ff 	R0 = -0x80 (X);		/*		R0=0xffffff80(-128) */
    4480:	2a e1 84 7c 	P2 = 0x7c84 (X);		/*		P2=0x7c84(31876) */
    4484:	b0 e6 14 00 	B[SP + 0x14] = R0;
    4488:	95 5a       	P2 = P5 + P2;
    448a:	f7 b0       	[SP + 0xc] = R7;
    448c:	b2 bd       	[SP + 0x18] = P2;
    448e:	45 30       	R0 = P5;
    4490:	0e 30       	R1 = R6;
    4492:	ff e3 85 fc 	CALL 0x3d9c <_GetLargeResourceRecord>;
    4496:	00 0c       	CC = R0 == 0x0;
    4498:	0c 1c       	IF CC JUMP 0x44b0 <_GetPktLease+0x54> (BP);
    449a:	68 e4 4a 3e 	R0 = W[P5 + 0x7c94] (Z);
    449e:	38 0e       	CC = R0 <= 0x7 (IU);
    44a0:	08 1c       	IF CC JUMP 0x44b0 <_GetPktLease+0x54> (BP);
    44a2:	2a e5 2a 1f 	P2 = [P5 + 0x7ca8];
    44a6:	90 a4       	R0 = W[P2 + 0x4] (Z);
    44a8:	10 0c       	CC = R0 == 0x2;
    44aa:	03 14       	IF !CC JUMP 0x44b0 <_GetPktLease+0x54> (BP);
    44ac:	90 a0       	R0 = [P2 + 0x8];
    44ae:	02 20       	JUMP.S 0x44b2 <_GetPktLease+0x56>;
    44b0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    44b2:	e6 6c       	SP += 0x1c;		/* ( 28) */
    44b4:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    44b6:	27 01       	RETS = [SP++];
    44b8:	a9 e6 88 7c 	B[P5 + 0x7c88] = R1;
    44bc:	b5 05       	(R7:6, P5:5) = [SP++];
    44be:	10 00       	RTS;

000044c0 <_GetLLQOptData>:
_GetLLQOptData():
    44c0:	f5 05       	[--SP] = (R7:6, P5:5);
    44c2:	28 32       	P5 = R0;
    44c4:	01 30       	R0 = R1;
    44c6:	31 30       	R6 = R1;
    44c8:	67 01       	[--SP] = RETS;
    44ca:	0a 30       	R1 = R2;
    44cc:	3a 30       	R7 = R2;
    44ce:	b2 60       	R2 = 0x16 (X);		/*		R2=0x16( 22) */
    44d0:	26 6f       	SP += -0x1c;		/* (-28) */
    44d2:	ff e3 a3 f0 	CALL 0x2618 <_LocateOptRR>;
    44d6:	10 30       	R2 = R0;
    44d8:	00 0c       	CC = R0 == 0x0;
    44da:	1c 1c       	IF CC JUMP 0x4512 <_GetLLQOptData+0x52> (BP);
    44dc:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    44de:	30 b1       	[SP + 0x10] = R0;
    44e0:	20 e1 80 ff 	R0 = -0x80 (X);		/*		R0=0xffffff80(-128) */
    44e4:	2a e1 84 7c 	P2 = 0x7c84 (X);		/*		P2=0x7c84(31876) */
    44e8:	b0 e6 14 00 	B[SP + 0x14] = R0;
    44ec:	95 5a       	P2 = P5 + P2;
    44ee:	f7 b0       	[SP + 0xc] = R7;
    44f0:	b2 bd       	[SP + 0x18] = P2;
    44f2:	45 30       	R0 = P5;
    44f4:	0e 30       	R1 = R6;
    44f6:	ff e3 53 fc 	CALL 0x3d9c <_GetLargeResourceRecord>;
    44fa:	00 0c       	CC = R0 == 0x0;
    44fc:	0b 1c       	IF CC JUMP 0x4512 <_GetLLQOptData+0x52> (BP);
    44fe:	a8 e4 88 7c 	R0 = B[P5 + 0x7c88] (Z);
    4502:	21 e1 f0 00 	R1 = 0xf0 (X);		/*		R1=0xf0(240) */
    4506:	08 08       	CC = R0 == R1;
    4508:	05 1c       	IF CC JUMP 0x4512 <_GetLLQOptData+0x52> (BP);
    450a:	28 e4 2a 1f 	R0 = [P5 + 0x7ca8];
    450e:	20 64       	R0 += 0x4;		/* (  4) */
    4510:	02 20       	JUMP.S 0x4514 <_GetLLQOptData+0x54>;
    4512:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4514:	e6 6c       	SP += 0x1c;		/* ( 28) */
    4516:	27 01       	RETS = [SP++];
    4518:	b5 05       	(R7:6, P5:5) = [SP++];
    451a:	10 00       	RTS;

0000451c <_DumpRecords>:
_DumpRecords():
    451c:	e3 05       	[--SP] = (R7:4, P5:3);
    451e:	00 e8 5e 08 	LINK 0x2178;		/* (8568) */
    4522:	37 e5 6b 08 	FP = [SP + 0x21ac];
    4526:	28 30       	R5 = R0;
    4528:	30 e4 6c 08 	R0 = [SP + 0x21b0];
    452c:	31 e6 68 08 	[SP + 0x21a0] = R1;
    4530:	f0 b0       	[SP + 0xc] = R0;
    4532:	3a 30       	R7 = R2;
    4534:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xf0(240) */
    4538:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    453a:	01 e1 7c 10 	R1.L = 0x107c;		/* (4220)	R1=0x107c(4220) */
    453e:	57 30       	R2 = FP;
    4540:	6e 32       	P5 = SP;
    4542:	ff e3 5f dd 	CALL 0x0 <_putVal32>;
    4546:	25 6d       	P5 += 0x24;		/* ( 36) */
    4548:	45 30       	R0 = P5;
    454a:	20 64       	R0 += 0x4;		/* (  4) */
    454c:	f0 b1       	[SP + 0x1c] = R0;
    454e:	05 30       	R0 = R5;
    4550:	b8 65       	R0 += 0x37;		/* ( 55) */
    4552:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
    4554:	04 68       	P4 = 0x0 (X);		/*		P4=0x0(  0) */
    4556:	03 6a       	P3 = -0x40 (X);		/*		P3=0xffffffc0(-64) */
    4558:	30 b2       	[SP + 0x20] = R0;
    455a:	25 20       	JUMP.S 0x45a4 <_DumpRecords+0x88>;
    455c:	17 30       	R2 = R7;
    455e:	30 e4 6a 08 	R0 = [SP + 0x21a8];
    4562:	f0 b0       	[SP + 0xc] = R0;
    4564:	43 30       	R0 = P3;
    4566:	b0 e6 14 00 	B[SP + 0x14] = R0;
    456a:	34 bd       	[SP + 0x10] = P4;
    456c:	b5 bd       	[SP + 0x18] = P5;
    456e:	05 30       	R0 = R5;
    4570:	31 e4 68 08 	R1 = [SP + 0x21a0];
    4574:	ff e3 14 fc 	CALL 0x3d9c <_GetLargeResourceRecord>;
    4578:	38 30       	R7 = R0;
    457a:	00 0c       	CC = R0 == 0x0;
    457c:	13 18       	IF CC JUMP 0x45a2 <_DumpRecords+0x86>;
    457e:	34 a3       	R4 = [SP + 0x30];
    4580:	32 a2       	R2 = [SP + 0x20];
    4582:	f0 a1       	R0 = [SP + 0x1c];
    4584:	31 e4 12 00 	R1 = [SP + 0x48];
    4588:	21 64       	R1 += 0x4;		/* (  4) */
    458a:	ff e3 09 f9 	CALL 0x379c <_GetRRDisplayString_rdb>;
    458e:	30 b1       	[SP + 0x10] = R0;
    4590:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x107c(4220) */
    4594:	f4 b0       	[SP + 0xc] = R4;
    4596:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4598:	01 e1 84 10 	R1.L = 0x1084;		/* (4228)	R1=0x1084(4228) */
    459c:	16 30       	R2 = R6;
    459e:	ff e3 31 dd 	CALL 0x0 <_putVal32>;
    45a2:	0e 64       	R6 += 0x1;		/* (  1) */
    45a4:	47 30       	R0 = FP;
    45a6:	86 08       	CC = R6 < R0;
    45a8:	04 10       	IF !CC JUMP 0x45b0 <_DumpRecords+0x94>;
    45aa:	07 0c       	CC = R7 == 0x0;
    45ac:	d8 17       	IF !CC JUMP 0x455c <_DumpRecords+0x40> (BP);
    45ae:	03 20       	JUMP.S 0x45b4 <_DumpRecords+0x98>;
    45b0:	07 0c       	CC = R7 == 0x0;
    45b2:	09 14       	IF !CC JUMP 0x45c4 <_DumpRecords+0xa8> (BP);
    45b4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1084(4228) */
    45b8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    45ba:	01 e1 94 10 	R1.L = 0x1094;		/* (4244)	R1=0x1094(4244) */
    45be:	ff e3 21 dd 	CALL 0x0 <_putVal32>;
    45c2:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    45c4:	29 e1 78 21 	P1 = 0x2178 (X);		/*		P1=0x2178(8568) */
    45c8:	8e 5b       	SP = SP + P1;
    45ca:	77 90       	FP = [SP++];
    45cc:	07 30       	R0 = R7;
    45ce:	27 01       	RETS = [SP++];
    45d0:	a3 05       	(R7:4, P5:3) = [SP++];
    45d2:	10 00       	RTS;

000045d4 <_DumpPacket>:
_DumpPacket():
    45d4:	e3 05       	[--SP] = (R7:4, P5:3);
    45d6:	00 e8 e0 00 	LINK 0x380;		/* (896) */
    45da:	35 e5 f1 00 	P5 = [SP + 0x3c4];
    45de:	38 32       	FP = R0;
    45e0:	21 32       	P4 = R1;
    45e2:	20 e1 78 00 	R0 = 0x78 (X);		/*		R0=0x78(120) */
    45e6:	a9 e4 02 00 	R1 = B[P5 + 0x2] (Z);
    45ea:	01 54       	R0 = R1 & R0;
    45ec:	41 61       	R1 = 0x28 (X);		/*		R1=0x28( 40) */
    45ee:	08 08       	CC = R0 == R1;
    45f0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    45f2:	32 30       	R6 = R2;
    45f4:	02 02       	R2 = CC;
    45f6:	30 e6 b0 00 	[SP + 0x2c0] = R0;
    45fa:	5e 30       	R3 = SP;
    45fc:	21 e1 c4 02 	R1 = 0x2c4 (X);		/*		R1=0x2c4(708) */
    4600:	32 e6 16 00 	[SP + 0x58] = R2;
    4604:	0b 50       	R0 = R3 + R1;
    4606:	34 e4 ef 00 	R4 = [SP + 0x3bc];
    460a:	75 e5 e0 01 	R5 = W[SP + 0x3c0] (X);
    460e:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    4610:	e2 61       	R2 = 0x3c (X);		/*		R2=0x3c( 60) */
    4612:	7d 30       	R7 = P5;
    4614:	ff e3 f6 dc 	CALL 0x0 <_putVal32>;
    4618:	67 64       	R7 += 0xc;		/* ( 12) */
    461a:	44 0c       	CC = P4 == 0x0;
    461c:	18 14       	IF !CC JUMP 0x464c <_DumpPacket+0x78> (BP);
    461e:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_putVal32>(  0) */
    4622:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x3c( 60) */
    4626:	06 0c       	CC = R6 == 0x0;
    4628:	00 e1 b8 10 	R0.L = 0x10b8;		/* (4280)	R0=0x10b8(4280) */
    462c:	28 e1 40 03 	P0 = 0x340 (X);		/*		P0=0x340(832) */
    4630:	02 e1 c0 10 	R2.L = 0x10c0;		/* (4288)	R2=0x10c0(4288) */
    4634:	06 5b       	P4 = SP + P0;
    4636:	10 06       	IF !CC R2 = R0;
    4638:	44 30       	R0 = P4;
    463a:	21 e1 40 00 	R1 = 0x40 (X);		/*		R1=0x40( 64) */
    463e:	ff e3 31 f1 	CALL 0x28a0 <_mDNS_snprintf>;
    4642:	08 32       	P1 = R0;
    4644:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4646:	0c 5b       	P4 = P4 + P1;
    4648:	20 9b       	B[P4] = R0;
    464a:	1d 20       	JUMP.S 0x4684 <_DumpPacket+0xb0>;
    464c:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_putVal32>(  0) */
    4650:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x40( 64) */
    4654:	06 0c       	CC = R6 == 0x0;
    4656:	01 e1 d4 10 	R1.L = 0x10d4;		/* (4308)	R1=0x10d4(4308) */
    465a:	00 e1 cc 10 	R0.L = 0x10cc;		/* (4300)	R0=0x10cc(4300) */
    465e:	01 07       	IF CC R0 = R1;
    4660:	2a e1 40 03 	P2 = 0x340 (X);		/*		P2=0x340(832) */
    4664:	d6 5a       	P3 = SP + P2;
    4666:	30 b1       	[SP + 0x10] = R0;
    4668:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x10c0(4288) */
    466c:	43 30       	R0 = P3;
    466e:	f4 bc       	[SP + 0xc] = P4;
    4670:	21 e1 40 00 	R1 = 0x40 (X);		/*		R1=0x40( 64) */
    4674:	02 e1 f0 11 	R2.L = 0x11f0;		/* (4592)	R2=0x11f0(4592) */
    4678:	ff e3 14 f1 	CALL 0x28a0 <_mDNS_snprintf>;
    467c:	00 32       	P0 = R0;
    467e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4680:	c3 5a       	P3 = P3 + P0;
    4682:	18 9b       	B[P3] = R0;
    4684:	06 0c       	CC = R6 == 0x0;
    4686:	10 1c       	IF CC JUMP 0x46a6 <_DumpPacket+0xd2> (BP);
    4688:	29 e1 00 03 	P1 = 0x300 (X);		/*		P1=0x300(768) */
    468c:	0e 5b       	P4 = SP + P1;
    468e:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x11f0(4592) */
    4692:	44 30       	R0 = P4;
    4694:	21 e1 40 00 	R1 = 0x40 (X);		/*		R1=0x40( 64) */
    4698:	02 e1 00 12 	R2.L = 0x1200;		/* (4608)	R2=0x1200(4608) */
    469c:	ff e3 02 f1 	CALL 0x28a0 <_mDNS_snprintf>;
    46a0:	10 32       	P2 = R0;
    46a2:	14 5b       	P4 = P4 + P2;
    46a4:	12 20       	JUMP.S 0x46c8 <_DumpPacket+0xf4>;
    46a6:	28 e1 00 03 	P0 = 0x300 (X);		/*		P0=0x300(768) */
    46aa:	30 e4 ed 00 	R0 = [SP + 0x3b4];
    46ae:	06 5b       	P4 = SP + P0;
    46b0:	f0 b0       	[SP + 0xc] = R0;
    46b2:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x1200(4608) */
    46b6:	44 30       	R0 = P4;
    46b8:	21 e1 40 00 	R1 = 0x40 (X);		/*		R1=0x40( 64) */
    46bc:	02 e1 08 12 	R2.L = 0x1208;		/* (4616)	R2=0x1208(4616) */
    46c0:	ff e3 f0 f0 	CALL 0x28a0 <_mDNS_snprintf>;
    46c4:	08 32       	P1 = R0;
    46c6:	0c 5b       	P4 = P4 + P1;
    46c8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    46ca:	20 9b       	B[P4] = R0;
    46cc:	04 0c       	CC = R4 == 0x0;
    46ce:	04 14       	IF !CC JUMP 0x46d6 <_DumpPacket+0x102> (BP);
    46d0:	e8 42       	R0 = R5.L (Z);
    46d2:	00 0c       	CC = R0 == 0x0;
    46d4:	18 1c       	IF CC JUMP 0x4704 <_DumpPacket+0x130> (BP);
    46d6:	69 43       	R1 = R5.B (Z);
    46d8:	e8 42       	R0 = R5.L (Z);
    46da:	41 4f       	R1 <<= 0x8;
    46dc:	40 4e       	R0 >>= 0x8;
    46de:	08 56       	R0 = R0 | R1;
    46e0:	2a e1 c0 02 	P2 = 0x2c0 (X);		/*		P2=0x2c0(704) */
    46e4:	16 5b       	P4 = SP + P2;
    46e6:	30 b1       	[SP + 0x10] = R0;
    46e8:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x1208(4616) */
    46ec:	44 30       	R0 = P4;
    46ee:	f4 b0       	[SP + 0xc] = R4;
    46f0:	21 e1 40 00 	R1 = 0x40 (X);		/*		R1=0x40( 64) */
    46f4:	02 e1 10 12 	R2.L = 0x1210;		/* (4624)	R2=0x1210(4624) */
    46f8:	ff e3 d4 f0 	CALL 0x28a0 <_mDNS_snprintf>;
    46fc:	00 32       	P0 = R0;
    46fe:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4700:	04 5b       	P4 = P4 + P0;
    4702:	20 9b       	B[P4] = R0;
    4704:	20 e1 78 00 	R0 = 0x78 (X);		/*		R0=0x78(120) */
    4708:	a9 e5 02 00 	R1 = B[P5 + 0x2] (X);
    470c:	4e 43       	R6 = R1.B (Z);
    470e:	06 54       	R0 = R6 & R0;
    4710:	00 0c       	CC = R0 == 0x0;
    4712:	19 1c       	IF CC JUMP 0x4744 <_DumpPacket+0x170> (BP);
    4714:	42 60       	R2 = 0x8 (X);		/*		R2=0x8(  8) */
    4716:	10 08       	CC = R0 == R2;
    4718:	1b 18       	IF CC JUMP 0x474e <_DumpPacket+0x17a>;
    471a:	83 60       	R3 = 0x10 (X);		/*		R3=0x10( 16) */
    471c:	18 08       	CC = R0 == R3;
    471e:	1d 18       	IF CC JUMP 0x4758 <_DumpPacket+0x184>;
    4720:	c4 60       	R4 = 0x18 (X);		/*		R4=0x18( 24) */
    4722:	20 08       	CC = R0 == R4;
    4724:	1f 18       	IF CC JUMP 0x4762 <_DumpPacket+0x18e>;
    4726:	05 61       	R5 = 0x20 (X);		/*		R5=0x20( 32) */
    4728:	28 08       	CC = R0 == R5;
    472a:	21 18       	IF CC JUMP 0x476c <_DumpPacket+0x198>;
    472c:	42 61       	R2 = 0x28 (X);		/*		R2=0x28( 40) */
    472e:	10 08       	CC = R0 == R2;
    4730:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x78(120) */
    4734:	43 e1 00 00 	R3.H = 0x0;		/* (  0)	R3=0x10( 16) */
    4738:	00 e1 04 11 	R0.L = 0x1104;		/* (4356)	R0=0x1104(4356) */
    473c:	03 e1 00 11 	R3.L = 0x1100;		/* (4352)	R3=0x1100(4352) */
    4740:	18 07       	IF CC R3 = R0;
    4742:	19 20       	JUMP.S 0x4774 <_DumpPacket+0x1a0>;
    4744:	43 e1 00 00 	R3.H = 0x0;		/* (  0)	R3=0x1100(4352) */
    4748:	03 e1 24 02 	R3.L = 0x224;		/* (548)	R3=0x224(548) */
    474c:	14 20       	JUMP.S 0x4774 <_DumpPacket+0x1a0>;
    474e:	43 e1 00 00 	R3.H = 0x0;		/* (  0)	R3=0x224(548) */
    4752:	03 e1 dc 10 	R3.L = 0x10dc;		/* (4316)	R3=0x10dc(4316) */
    4756:	0f 20       	JUMP.S 0x4774 <_DumpPacket+0x1a0>;
    4758:	43 e1 00 00 	R3.H = 0x0;		/* (  0)	R3=0x10dc(4316) */
    475c:	03 e1 e4 10 	R3.L = 0x10e4;		/* (4324)	R3=0x10e4(4324) */
    4760:	0a 20       	JUMP.S 0x4774 <_DumpPacket+0x1a0>;
    4762:	43 e1 00 00 	R3.H = 0x0;		/* (  0)	R3=0x10e4(4324) */
    4766:	03 e1 ec 10 	R3.L = 0x10ec;		/* (4332)	R3=0x10ec(4332) */
    476a:	05 20       	JUMP.S 0x4774 <_DumpPacket+0x1a0>;
    476c:	43 e1 00 00 	R3.H = 0x0;		/* (  0)	R3=0x10ec(4332) */
    4770:	03 e1 f8 10 	R3.L = 0x10f8;		/* (4344)	R3=0x10f8 <_mDNS_SetupQuestion>(4344) */
    4774:	09 43       	R1 = R1.B (X);
    4776:	81 0c       	CC = R1 < 0x0;
    4778:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x1104(4356) */
    477c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x40( 64) */
    4780:	00 e1 0c 11 	R0.L = 0x110c;		/* (4364)	R0=0x110c(4364) */
    4784:	01 e1 18 11 	R1.L = 0x1118;		/* (4376)	R1=0x1118(4376) */
    4788:	01 06       	IF !CC R0 = R1;
    478a:	ac e5 03 00 	R4 = B[P5 + 0x3] (X);
    478e:	10 36       	B2 = R0;
    4790:	65 43       	R5 = R4.B (Z);
    4792:	78 60       	R0 = 0xf (X);		/*		R0=0xf( 15) */
    4794:	05 54       	R0 = R5 & R0;
    4796:	04 32       	P0 = R4;
    4798:	15 32       	P2 = R5;
    479a:	00 0c       	CC = R0 == 0x0;
    479c:	25 1c       	IF CC JUMP 0x47e6 <_DumpPacket+0x212> (BP);
    479e:	08 0c       	CC = R0 == 0x1;
    47a0:	28 18       	IF CC JUMP 0x47f0 <_DumpPacket+0x21c>;
    47a2:	10 0c       	CC = R0 == 0x2;
    47a4:	2b 18       	IF CC JUMP 0x47fa <_DumpPacket+0x226>;
    47a6:	18 0c       	CC = R0 == 0x3;
    47a8:	2e 18       	IF CC JUMP 0x4804 <_DumpPacket+0x230>;
    47aa:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
    47ac:	08 08       	CC = R0 == R1;
    47ae:	30 18       	IF CC JUMP 0x480e <_DumpPacket+0x23a>;
    47b0:	2a 60       	R2 = 0x5 (X);		/*		R2=0x5(  5) */
    47b2:	10 08       	CC = R0 == R2;
    47b4:	32 18       	IF CC JUMP 0x4818 <_DumpPacket+0x244>;
    47b6:	34 60       	R4 = 0x6 (X);		/*		R4=0x6(  6) */
    47b8:	20 08       	CC = R0 == R4;
    47ba:	34 18       	IF CC JUMP 0x4822 <_DumpPacket+0x24e>;
    47bc:	3d 60       	R5 = 0x7 (X);		/*		R5=0x7(  7) */
    47be:	28 08       	CC = R0 == R5;
    47c0:	36 18       	IF CC JUMP 0x482c <_DumpPacket+0x258>;
    47c2:	41 60       	R1 = 0x8 (X);		/*		R1=0x8(  8) */
    47c4:	08 08       	CC = R0 == R1;
    47c6:	38 18       	IF CC JUMP 0x4836 <_DumpPacket+0x262>;
    47c8:	4a 60       	R2 = 0x9 (X);		/*		R2=0x9(  9) */
    47ca:	10 08       	CC = R0 == R2;
    47cc:	3a 18       	IF CC JUMP 0x4840 <_DumpPacket+0x26c>;
    47ce:	54 60       	R4 = 0xa (X);		/*		R4=0xa( 10) */
    47d0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x8(  8) */
    47d4:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x9(  9) */
    47d8:	20 08       	CC = R0 == R4;
    47da:	01 e1 80 11 	R1.L = 0x1180;		/* (4480)	R1=0x1180(4480) */
    47de:	02 e1 7c 11 	R2.L = 0x117c;		/* (4476)	R2=0x117c(4476) */
    47e2:	0a 06       	IF !CC R1 = R2;
    47e4:	32 20       	JUMP.S 0x4848 <_DumpPacket+0x274>;
    47e6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1180(4480) */
    47ea:	01 e1 28 11 	R1.L = 0x1128;		/* (4392)	R1=0x1128(4392) */
    47ee:	2d 20       	JUMP.S 0x4848 <_DumpPacket+0x274>;
    47f0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1128(4392) */
    47f4:	01 e1 20 11 	R1.L = 0x1120;		/* (4384)	R1=0x1120(4384) */
    47f8:	28 20       	JUMP.S 0x4848 <_DumpPacket+0x274>;
    47fa:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1120(4384) */
    47fe:	01 e1 30 11 	R1.L = 0x1130;		/* (4400)	R1=0x1130(4400) */
    4802:	23 20       	JUMP.S 0x4848 <_DumpPacket+0x274>;
    4804:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1130(4400) */
    4808:	01 e1 3c 11 	R1.L = 0x113c;		/* (4412)	R1=0x113c(4412) */
    480c:	1e 20       	JUMP.S 0x4848 <_DumpPacket+0x274>;
    480e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x113c(4412) */
    4812:	01 e1 48 11 	R1.L = 0x1148;		/* (4424)	R1=0x1148(4424) */
    4816:	19 20       	JUMP.S 0x4848 <_DumpPacket+0x274>;
    4818:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1148(4424) */
    481c:	01 e1 50 11 	R1.L = 0x1150;		/* (4432)	R1=0x1150(4432) */
    4820:	14 20       	JUMP.S 0x4848 <_DumpPacket+0x274>;
    4822:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1150(4432) */
    4826:	01 e1 58 11 	R1.L = 0x1158;		/* (4440)	R1=0x1158(4440) */
    482a:	0f 20       	JUMP.S 0x4848 <_DumpPacket+0x274>;
    482c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1158(4440) */
    4830:	01 e1 64 11 	R1.L = 0x1164;		/* (4452)	R1=0x1164(4452) */
    4834:	0a 20       	JUMP.S 0x4848 <_DumpPacket+0x274>;
    4836:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1164(4452) */
    483a:	01 e1 6c 11 	R1.L = 0x116c;		/* (4460)	R1=0x116c(4460) */
    483e:	05 20       	JUMP.S 0x4848 <_DumpPacket+0x274>;
    4840:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x116c(4460) */
    4844:	01 e1 74 11 	R1.L = 0x1174;		/* (4468)	R1=0x1174(4468) */
    4848:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x117c(4476) */
    484c:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x300 */
    4850:	02 e1 24 02 	R2.L = 0x224;		/* (548)	R2=0x224(548) */
    4854:	16 48       	CC = !BITTST (R6, 0x2);		/* bit  2 */
    4856:	09 e1 88 11 	P1.L = 0x1188;		/* (4488)	P1=0x1188 */
    485a:	8a 07       	IF CC P1 = R2;
    485c:	49 36       	B1 = P1;
    485e:	11 68       	P1 = 0x2 (X);		/*		P1=0x2(  2) */
    4860:	69 30       	R5 = P1;
    4862:	6e 55       	R5 = R6 & R5;
    4864:	0d 32       	P1 = R5;
    4866:	60 30       	R4 = P0;
    4868:	4c e1 00 00 	P4.H = 0x0;		/* (  0)	P4=0x0 <_putVal32> */
    486c:	24 43       	R4 = R4.B (X);
    486e:	0c e1 8c 11 	P4.L = 0x118c;		/* (4492)	P4=0x118c */
    4872:	41 0c       	CC = P1 == 0x0;
    4874:	a2 07       	IF CC P4 = R2;
    4876:	04 32       	P0 = R4;
    4878:	44 36       	B0 = P4;
    487a:	4c e1 00 00 	P4.H = 0x0;		/* (  0)	P4=0x118c */
    487e:	06 48       	CC = !BITTST (R6, 0x0);		/* bit  0 */
    4880:	0c e1 90 11 	P4.L = 0x1190;		/* (4496)	P4=0x1190 */
    4884:	a2 07       	IF CC P4 = R2;
    4886:	c0 0c       	CC = P0 < 0x0;
    4888:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0x300 */
    488c:	08 e1 94 11 	P0.L = 0x1194;		/* (4500)	P0=0x1194 */
    4890:	82 06       	IF !CC P0 = R2;
    4892:	50 34       	I2 = P0;
    4894:	6a 30       	R5 = P2;
    4896:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0x1194 */
    489a:	2d 48       	CC = !BITTST (R5, 0x5);		/* bit  5 */
    489c:	08 e1 98 11 	P0.L = 0x1198;		/* (4504)	P0=0x1198 */
    48a0:	82 07       	IF CC P0 = R2;
    48a2:	48 34       	I1 = P0;
    48a4:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0x1198 */
    48a8:	25 48       	CC = !BITTST (R5, 0x4);		/* bit  4 */
    48aa:	08 e1 9c 11 	P0.L = 0x119c;		/* (4508)	P0=0x119c */
    48ae:	82 07       	IF CC P0 = R2;
    48b0:	2c 99       	R4 = B[P5] (Z);
    48b2:	40 34       	I0 = P0;
    48b4:	41 0c       	CC = P1 == 0x0;
    48b6:	ad e4 01 00 	R5 = B[P5 + 0x1] (Z);
    48ba:	44 4f       	R4 <<= 0x8;
    48bc:	30 e5 f2 00 	P0 = [SP + 0x3c8];
    48c0:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x2 */
    48c4:	5c 34       	I3 = P4;
    48c6:	65 57       	R5 = R5 | R4;
    48c8:	09 e1 a0 11 	P1.L = 0x11a0;		/* (4512)	P1=0x11a0 */
    48cc:	51 06       	IF !CC R2 = P1;
    48ce:	1d 32       	P3 = R5;
    48d0:	65 32       	P4 = P5;
    48d2:	31 e5 ec 00 	P1 = [SP + 0x3b0];
    48d6:	64 6c       	P4 += 0xc;		/* ( 12) */
    48d8:	b4 e4 b8 03 	R4 = B[SP + 0x3b8] (Z);
    48dc:	75 e4 dc 01 	R5 = W[SP + 0x3b8] (Z);
    48e0:	20 44       	P0 -= P4;
    48e2:	44 4f       	R4 <<= 0x8;
    48e4:	45 4e       	R5 >>= 0x8;
    48e6:	60 32       	P4 = P0;
    48e8:	65 57       	R5 = R5 | R4;
    48ea:	05 32       	P0 = R5;
    48ec:	f1 bc       	[SP + 0xc] = P1;
    48ee:	ca 32       	P1 = B2;
    48f0:	f2 bd       	[SP + 0x1c] = P2;
    48f2:	d1 32       	P2 = B1;
    48f4:	71 bd       	[SP + 0x14] = P1;
    48f6:	29 e1 00 03 	P1 = 0x300 (X);		/*		P1=0x300(768) */
    48fa:	33 b1       	[SP + 0x10] = R3;
    48fc:	31 b2       	[SP + 0x20] = R1;
    48fe:	b2 be       	[SP + 0x28] = P2;
    4900:	8b 30       	R1 = I3;
    4902:	9a 30       	R3 = I2;
    4904:	a1 30       	R4 = I1;
    4906:	8e 5a       	P2 = SP + P1;
    4908:	70 b2       	[SP + 0x24] = R0;
    490a:	30 e7 13 00 	[SP + 0x4c] = P0;
    490e:	c0 30       	R0 = B0;
    4910:	28 e1 c0 02 	P0 = 0x2c0 (X);		/*		P0=0x2c0(704) */
    4914:	31 b3       	[SP + 0x30] = R1;
    4916:	73 b3       	[SP + 0x34] = R3;
    4918:	b4 b3       	[SP + 0x38] = R4;
    491a:	32 e7 12 00 	[SP + 0x48] = P2;
    491e:	a8 30       	R5 = I0;
    4920:	86 5a       	P2 = SP + P0;
    4922:	5e 30       	R3 = SP;
    4924:	f0 b2       	[SP + 0x2c] = R0;
    4926:	32 e6 15 00 	[SP + 0x54] = R2;
    492a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1174(4468) */
    492e:	24 e1 40 03 	R4 = 0x340 (X);		/*		R4=0x340(832) */
    4932:	a3 50       	R2 = R3 + R4;
    4934:	b6 b1       	[SP + 0x18] = R6;
    4936:	f5 b3       	[SP + 0x3c] = R5;
    4938:	33 e7 10 00 	[SP + 0x40] = P3;
    493c:	34 e7 11 00 	[SP + 0x44] = P4;
    4940:	32 e7 14 00 	[SP + 0x50] = P2;
    4944:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4946:	01 e1 1c 12 	R1.L = 0x121c;		/* (4636)	R1=0x121c(4636) */
    494a:	ff e3 5b db 	CALL 0x0 <_putVal32>;
    494e:	35 e4 16 00 	R5 = [SP + 0x58];
    4952:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_putVal32>(  0) */
    4956:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x121c(4636) */
    495a:	05 0c       	CC = R5 == 0x0;
    495c:	01 e1 b8 11 	R1.L = 0x11b8;		/* (4536)	R1=0x11b8(4536) */
    4960:	00 e1 b0 11 	R0.L = 0x11b0;		/* (4528)	R0=0x11b0(4528) */
    4964:	01 07       	IF CC R0 = R1;
    4966:	aa a4       	R2 = W[P5 + 0x4] (Z);
    4968:	f0 b0       	[SP + 0xc] = R0;
    496a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x11b8(4536) */
    496e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4970:	01 e1 7c 10 	R1.L = 0x107c;		/* (4220)	R1=0x107c(4220) */
    4974:	ff e3 46 db 	CALL 0x0 <_putVal32>;
    4978:	28 e1 5c 00 	P0 = 0x5c (X);		/*		P0=0x5c( 92) */
    497c:	46 30       	R0 = SP;
    497e:	21 e1 90 01 	R1 = 0x190 (X);		/*		R1=0x190(400) */
    4982:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
    4984:	03 68       	P3 = 0x0 (X);		/*		P3=0x0(  0) */
    4986:	06 5b       	P4 = SP + P0;
    4988:	48 51       	R5 = R0 + R1;
    498a:	1b 20       	JUMP.S 0x49c0 <_DumpPacket+0x3ec>;
    498c:	0f 30       	R1 = R7;
    498e:	f3 bc       	[SP + 0xc] = P3;
    4990:	34 bd       	[SP + 0x10] = P4;
    4992:	45 30       	R0 = P5;
    4994:	32 e4 f2 00 	R2 = [SP + 0x3c8];
    4998:	ff e3 b4 ed 	CALL 0x2500 <_getQuestion>;
    499c:	38 30       	R7 = R0;
    499e:	00 0c       	CC = R0 == 0x0;
    49a0:	0f 18       	IF CC JUMP 0x49be <_DumpPacket+0x3ea>;
    49a2:	70 e5 48 01 	R0 = W[SP + 0x290] (X);
    49a6:	ff e3 b3 f4 	CALL 0x330c <_DNSTypeName>;
    49aa:	30 b1       	[SP + 0x10] = R0;
    49ac:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x190(400) */
    49b0:	f5 b0       	[SP + 0xc] = R5;
    49b2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    49b4:	01 e1 7c 12 	R1.L = 0x127c;		/* (4732)	R1=0x127c(4732) */
    49b8:	16 30       	R2 = R6;
    49ba:	ff e3 23 db 	CALL 0x0 <_putVal32>;
    49be:	0e 64       	R6 += 0x1;		/* (  1) */
    49c0:	a8 a4       	R0 = W[P5 + 0x4] (Z);
    49c2:	86 08       	CC = R6 < R0;
    49c4:	03 10       	IF !CC JUMP 0x49ca <_DumpPacket+0x3f6>;
    49c6:	07 0c       	CC = R7 == 0x0;
    49c8:	e2 17       	IF !CC JUMP 0x498c <_DumpPacket+0x3b8> (BP);
    49ca:	32 e4 16 00 	R2 = [SP + 0x58];
    49ce:	02 0c       	CC = R2 == 0x0;
    49d0:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_putVal32>(  0) */
    49d4:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x224(548) */
    49d8:	02 e1 d4 11 	R2.L = 0x11d4;		/* (4564)	R2=0x11d4(4564) */
    49dc:	00 e1 c4 11 	R0.L = 0x11c4;		/* (4548)	R0=0x11c4(4548) */
    49e0:	e9 a4       	R1 = W[P5 + 0x6] (Z);
    49e2:	02 07       	IF CC R0 = R2;
    49e4:	33 e4 f2 00 	R3 = [SP + 0x3c8];
    49e8:	31 b1       	[SP + 0x10] = R1;
    49ea:	70 b1       	[SP + 0x14] = R0;
    49ec:	f3 b0       	[SP + 0xc] = R3;
    49ee:	4d 30       	R1 = P5;
    49f0:	17 30       	R2 = R7;
    49f2:	47 30       	R0 = FP;
    49f4:	ff e3 94 fd 	CALL 0x451c <_DumpRecords>;
    49f8:	10 30       	R2 = R0;
    49fa:	34 e4 16 00 	R4 = [SP + 0x58];
    49fe:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x11c4(4548) */
    4a02:	43 e1 00 00 	R3.H = 0x0;		/* (  0)	R3=0x10f8 <_mDNS_SetupQuestion>(4344) */
    4a06:	04 0c       	CC = R4 == 0x0;
    4a08:	03 e1 e4 11 	R3.L = 0x11e4;		/* (4580)	R3=0x11e4(4580) */
    4a0c:	00 e1 dc 11 	R0.L = 0x11dc;		/* (4572)	R0=0x11dc(4572) */
    4a10:	29 a5       	R1 = W[P5 + 0x8] (Z);
    4a12:	03 07       	IF CC R0 = R3;
    4a14:	35 e4 f2 00 	R5 = [SP + 0x3c8];
    4a18:	31 b1       	[SP + 0x10] = R1;
    4a1a:	70 b1       	[SP + 0x14] = R0;
    4a1c:	f5 b0       	[SP + 0xc] = R5;
    4a1e:	4d 30       	R1 = P5;
    4a20:	47 30       	R0 = FP;
    4a22:	ff e3 7d fd 	CALL 0x451c <_DumpRecords>;
    4a26:	f5 b0       	[SP + 0xc] = R5;
    4a28:	10 30       	R2 = R0;
    4a2a:	68 a5       	R0 = W[P5 + 0xa] (Z);
    4a2c:	30 b1       	[SP + 0x10] = R0;
    4a2e:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x11dc(4572) */
    4a32:	00 e1 88 12 	R0.L = 0x1288;		/* (4744)	R0=0x1288(4744) */
    4a36:	70 b1       	[SP + 0x14] = R0;
    4a38:	4d 30       	R1 = P5;
    4a3a:	47 30       	R0 = FP;
    4a3c:	ff e3 70 fd 	CALL 0x451c <_DumpRecords>;
    4a40:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x127c(4732) */
    4a44:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4a46:	01 e1 94 12 	R1.L = 0x1294;		/* (4756)	R1=0x1294(4756) */
    4a4a:	ff e3 db da 	CALL 0x0 <_putVal32>;
    4a4e:	29 e1 80 03 	P1 = 0x380 (X);		/*		P1=0x380(896) */
    4a52:	8e 5b       	SP = SP + P1;
    4a54:	77 90       	FP = [SP++];
    4a56:	27 01       	RETS = [SP++];
    4a58:	a3 05       	(R7:4, P5:3) = [SP++];
    4a5a:	10 00       	RTS;

00004a5c <_mDNSSendDNSMessage>:
_mDNSSendDNSMessage():
    4a5c:	e3 05       	[--SP] = (R7:4, P5:3);
    4a5e:	29 32       	P5 = R1;
    4a60:	00 e8 0b 00 	LINK 0x2c;		/* (44) */
    4a64:	30 30       	R6 = R0;
    4a66:	32 e6 16 00 	[SP + 0x58] = R2;
    4a6a:	33 e5 18 00 	P3 = [SP + 0x60];
    4a6e:	5d 30       	R3 = P5;
    4a70:	69 a9       	R1 = W[P5 + 0xa] (X);
    4a72:	63 64       	R3 += 0xc;		/* ( 12) */
    4a74:	35 e4 19 00 	R5 = [SP + 0x64];
    4a78:	74 e5 34 00 	R4 = W[SP + 0x68] (X);
    4a7c:	34 e5 1b 00 	P4 = [SP + 0x6c];
    4a80:	37 e4 1c 00 	R7 = [SP + 0x70];
    4a84:	39 32       	FP = R1;
    4a86:	9a 09       	CC = R2 < R3 (IU);
    4a88:	06 18       	IF CC JUMP 0x4a94 <_mDNSSendDNSMessage+0x38>;
    4a8a:	1a 52       	R0 = R2 - R3;
    4a8c:	21 e1 ec 22 	R1 = 0x22ec (X);		/*		R1=0x22ec(8940) */
    4a90:	08 09       	CC = R0 <= R1;
    4a92:	12 1c       	IF CC JUMP 0x4ab6 <_mDNSSendDNSMessage+0x5a> (BP);
    4a94:	45 30       	R0 = P5;
    4a96:	f2 b0       	[SP + 0xc] = R2;
    4a98:	60 64       	R0 += 0xc;		/* ( 12) */
    4a9a:	82 52       	R2 = R2 - R0;
    4a9c:	32 b1       	[SP + 0x10] = R2;
    4a9e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x22ec(8940) */
    4aa2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4aa4:	01 e1 b0 12 	R1.L = 0x12b0;		/* (4784)	R1=0x12b0(4784) */
    4aa8:	13 30       	R2 = R3;
    4aaa:	27 e1 ff bf 	R7 = -0x4001 (X);		/*		R7=0xffffbfff(-16385) */
    4aae:	ff e3 a9 da 	CALL 0x0 <_putVal32>;
    4ab2:	17 4f       	R7 <<= 0x2;
    4ab4:	cb 20       	JUMP.S 0x4c4a <_mDNSSendDNSMessage+0x1ee>;
    4ab6:	20 e1 ec 22 	R0 = 0x22ec (X);		/*		R0=0x22ec(8940) */
    4aba:	c3 50       	R3 = R3 + R0;
    4abc:	f7 b0       	[SP + 0xc] = R7;
    4abe:	33 b1       	[SP + 0x10] = R3;
    4ac0:	06 30       	R0 = R6;
    4ac2:	4d 30       	R1 = P5;
    4ac4:	ff e3 42 f5 	CALL 0x3548 <_putHINFO>;
    4ac8:	00 0c       	CC = R0 == 0x0;
    4aca:	08 14       	IF !CC JUMP 0x4ada <_mDNSSendDNSMessage+0x7e> (BP);
    4acc:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x22ec(8940) */
    4ad0:	00 e1 e0 12 	R0.L = 0x12e0;		/* (4832)	R0=0x12e0(4832) */
    4ad4:	ff e3 96 da 	CALL 0x0 <_putVal32>;
    4ad8:	03 20       	JUMP.S 0x4ade <_mDNSSendDNSMessage+0x82>;
    4ada:	30 e6 16 00 	[SP + 0x58] = R0;
    4ade:	a8 e4 04 00 	R0 = B[P5 + 0x4] (Z);
    4ae2:	a9 e4 05 00 	R1 = B[P5 + 0x5] (Z);
    4ae6:	40 4f       	R0 <<= 0x8;
    4ae8:	08 56       	R0 = R0 | R1;
    4aea:	a8 b4       	W[P5 + 0x4] = R0;
    4aec:	a8 e4 06 00 	R0 = B[P5 + 0x6] (Z);
    4af0:	a9 e4 07 00 	R1 = B[P5 + 0x7] (Z);
    4af4:	40 4f       	R0 <<= 0x8;
    4af6:	08 56       	R0 = R0 | R1;
    4af8:	e8 b4       	W[P5 + 0x6] = R0;
    4afa:	a8 e4 08 00 	R0 = B[P5 + 0x8] (Z);
    4afe:	a9 e4 09 00 	R1 = B[P5 + 0x9] (Z);
    4b02:	40 4f       	R0 <<= 0x8;
    4b04:	08 56       	R0 = R0 | R1;
    4b06:	28 b5       	W[P5 + 0x8] = R0;
    4b08:	a8 e4 0a 00 	R0 = B[P5 + 0xa] (Z);
    4b0c:	a9 e4 0b 00 	R1 = B[P5 + 0xb] (Z);
    4b10:	40 4f       	R0 <<= 0x8;
    4b12:	08 56       	R0 = R0 | R1;
    4b14:	68 b5       	W[P5 + 0xa] = R0;
    4b16:	07 0c       	CC = R7 == 0x0;
    4b18:	0b 18       	IF CC JUMP 0x4b2e <_mDNSSendDNSMessage+0xd2>;
    4b1a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4b1c:	56 30       	R2 = SP;
    4b1e:	23 e1 58 00 	R3 = 0x58 (X);		/*		R3=0x58 <_GetFirstActiveInterface>( 88) */
    4b22:	b0 b5       	W[SP + 0xc] = R0;
    4b24:	5a 50       	R1 = R2 + R3;
    4b26:	45 30       	R0 = P5;
    4b28:	17 30       	R2 = R7;
    4b2a:	ff e3 6b da 	CALL 0x0 <_putVal32>;
    4b2e:	32 e4 16 00 	R2 = [SP + 0x58];
    4b32:	02 0c       	CC = R2 == 0x0;
    4b34:	0b 14       	IF !CC JUMP 0x4b4a <_mDNSSendDNSMessage+0xee> (BP);
    4b36:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_putVal32>(  0) */
    4b3a:	00 e1 0c 13 	R0.L = 0x130c;		/* (4876)	R0=0x130c(4876) */
    4b3e:	ef 63       	R7 = -0x3 (X);		/*		R7=0xfffffffd( -3) */
    4b40:	ff e3 60 da 	CALL 0x0 <_putVal32>;
    4b44:	47 e1 fe ff 	R7.H = 0xfffe;		/* ( -2)	R7=0xfffefffd(-65539) */
    4b48:	32 20       	JUMP.S 0x4bac <_mDNSSendDNSMessage+0x150>;
    4b4a:	44 0c       	CC = P4 == 0x0;
    4b4c:	0d 14       	IF !CC JUMP 0x4b66 <_mDNSSendDNSMessage+0x10a> (BP);
    4b4e:	30 e4 17 00 	R0 = [SP + 0x5c];
    4b52:	f0 b0       	[SP + 0xc] = R0;
    4b54:	33 bd       	[SP + 0x10] = P3;
    4b56:	75 b1       	[SP + 0x14] = R5;
    4b58:	34 b7       	W[SP + 0x18] = R4;
    4b5a:	06 30       	R0 = R6;
    4b5c:	4d 30       	R1 = P5;
    4b5e:	ff e3 51 da 	CALL 0x0 <_putVal32>;
    4b62:	38 30       	R7 = R0;
    4b64:	24 20       	JUMP.S 0x4bac <_mDNSSendDNSMessage+0x150>;
    4b66:	45 30       	R0 = P5;
    4b68:	82 52       	R2 = R2 - R0;
    4b6a:	d7 42       	R7 = R2.L (Z);
    4b6c:	82 c6 c7 81 	R0 = R7 >> 0x8;
    4b70:	b0 e6 28 00 	B[SP + 0x28] = R0;
    4b74:	b2 e6 29 00 	B[SP + 0x29] = R2;
    4b78:	4e 30       	R1 = SP;
    4b7a:	44 30       	R0 = P4;
    4b7c:	41 65       	R1 += 0x28;		/* ( 40) */
    4b7e:	12 60       	R2 = 0x2 (X);		/*		R2=0x2(  2) */
    4b80:	ff e3 40 da 	CALL 0x0 <_putVal32>;
    4b84:	10 0c       	CC = R0 == 0x2;
    4b86:	0e 14       	IF !CC JUMP 0x4ba2 <_mDNSSendDNSMessage+0x146> (BP);
    4b88:	44 30       	R0 = P4;
    4b8a:	4d 30       	R1 = P5;
    4b8c:	17 30       	R2 = R7;
    4b8e:	ff e3 39 da 	CALL 0x0 <_putVal32>;
    4b92:	38 08       	CC = R0 == R7;
    4b94:	0b 18       	IF CC JUMP 0x4baa <_mDNSSendDNSMessage+0x14e>;
    4b96:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x130c(4876) */
    4b9a:	00 e1 40 13 	R0.L = 0x1340;		/* (4928)	R0=0x1340(4928) */
    4b9e:	ff e3 31 da 	CALL 0x0 <_putVal32>;
    4ba2:	27 e1 c1 bf 	R7 = -0x403f (X);		/*		R7=0xffffbfc1(-16447) */
    4ba6:	17 4f       	R7 <<= 0x2;
    4ba8:	02 20       	JUMP.S 0x4bac <_mDNSSendDNSMessage+0x150>;
    4baa:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    4bac:	a8 e4 04 00 	R0 = B[P5 + 0x4] (Z);
    4bb0:	a9 e4 05 00 	R1 = B[P5 + 0x5] (Z);
    4bb4:	40 4f       	R0 <<= 0x8;
    4bb6:	08 56       	R0 = R0 | R1;
    4bb8:	a8 b4       	W[P5 + 0x4] = R0;
    4bba:	a8 e4 06 00 	R0 = B[P5 + 0x6] (Z);
    4bbe:	a9 e4 07 00 	R1 = B[P5 + 0x7] (Z);
    4bc2:	40 4f       	R0 <<= 0x8;
    4bc4:	08 56       	R0 = R0 | R1;
    4bc6:	e8 b4       	W[P5 + 0x6] = R0;
    4bc8:	a8 e4 08 00 	R0 = B[P5 + 0x8] (Z);
    4bcc:	a9 e4 09 00 	R1 = B[P5 + 0x9] (Z);
    4bd0:	40 4f       	R0 <<= 0x8;
    4bd2:	08 56       	R0 = R0 | R1;
    4bd4:	28 b5       	W[P5 + 0x8] = R0;
    4bd6:	a8 e4 0a 00 	R0 = B[P5 + 0xa] (Z);
    4bda:	a9 e4 0b 00 	R1 = B[P5 + 0xb] (Z);
    4bde:	40 4f       	R0 <<= 0x8;
    4be0:	08 56       	R0 = R0 | R1;
    4be2:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x2c0 */
    4be6:	68 b5       	W[P5 + 0xa] = R0;
    4be8:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_putVal32> */
    4bec:	10 91       	R0 = [P2];
    4bee:	00 0c       	CC = R0 == 0x0;
    4bf0:	2b 1c       	IF CC JUMP 0x4c46 <_mDNSSendDNSMessage+0x1ea> (BP);
    4bf2:	28 95       	R0 = W[P5] (Z);
    4bf4:	00 0c       	CC = R0 == 0x0;
    4bf6:	28 1c       	IF CC JUMP 0x4c46 <_mDNSSendDNSMessage+0x1ea> (BP);
    4bf8:	44 0c       	CC = P4 == 0x0;
    4bfa:	0d 1c       	IF CC JUMP 0x4c14 <_mDNSSendDNSMessage+0x1b8> (BP);
    4bfc:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x12b0(4784) */
    4c00:	01 e1 ac 12 	R1.L = 0x12ac;		/* (4780)	R1=0x12ac(4780) */
    4c04:	20 91       	R0 = [P4];
    4c06:	00 48       	CC = !BITTST (R0, 0x0);		/* bit  0 */
    4c08:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x1340(4928) */
    4c0c:	00 e1 a8 12 	R0.L = 0x12a8;		/* (4776)	R0=0x12a8(4776) */
    4c10:	08 06       	IF !CC R1 = R0;
    4c12:	05 20       	JUMP.S 0x4c1c <_mDNSSendDNSMessage+0x1c0>;
    4c14:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x12ac(4780) */
    4c18:	01 e1 a4 12 	R1.L = 0x12a4;		/* (4772)	R1=0x12a4(4772) */
    4c1c:	43 0c       	CC = P3 == 0x0;
    4c1e:	03 1c       	IF CC JUMP 0x4c24 <_mDNSSendDNSMessage+0x1c8> (BP);
    4c20:	18 95       	R0 = W[P3] (Z);
    4c22:	03 20       	JUMP.S 0x4c28 <_mDNSSendDNSMessage+0x1cc>;
    4c24:	20 e1 14 e9 	R0 = -0x16ec (X);		/*		R0=0xffffe914(-5868) */
    4c28:	f1 b0       	[SP + 0xc] = R1;
    4c2a:	b0 b6       	W[SP + 0x14] = R0;
    4c2c:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    4c2e:	30 e4 16 00 	R0 = [SP + 0x58];
    4c32:	31 b1       	[SP + 0x10] = R1;
    4c34:	70 b2       	[SP + 0x24] = R0;
    4c36:	b5 b1       	[SP + 0x18] = R5;
    4c38:	b4 b7       	W[SP + 0x1c] = R4;
    4c3a:	35 be       	[SP + 0x20] = P5;
    4c3c:	06 30       	R0 = R6;
    4c3e:	0f 30       	R1 = R7;
    4c40:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
    4c42:	ff e3 c9 fc 	CALL 0x45d4 <_DumpPacket>;
    4c46:	4f 30       	R1 = FP;
    4c48:	69 b5       	W[P5 + 0xa] = R1;
    4c4a:	66 6d       	SP += 0x2c;		/* ( 44) */
    4c4c:	77 90       	FP = [SP++];
    4c4e:	07 30       	R0 = R7;
    4c50:	27 01       	RETS = [SP++];
    4c52:	a3 05       	(R7:4, P5:3) = [SP++];
    4c54:	10 00       	RTS;
	...

DNSDigest.o:     file format elf32-dv10


Disassembly of section .text:

00000000 <_MD5_Init>:
_MD5_Init():
       0:	10 32       	P2 = R0;
       2:	40 e1 45 67 	R0.H = 0x6745;		/* (26437)	R0=0x6745e914(1732634900) */
       6:	00 e1 01 23 	R0.L = 0x2301;		/* (8961)	R0=0x67452301(1732584193) */
       a:	10 93       	[P2] = R0;
       c:	40 e1 cd ef 	R0.H = 0xefcd;		/* (-4147)	R0=0xefcd2301(-271768831) */
      10:	00 e1 89 ab 	R0.L = 0xab89;		/* (-21623)	R0=0xefcdab89(-271733879) */
      14:	50 b0       	[P2 + 0x4] = R0;
      16:	40 e1 ba 98 	R0.H = 0x98ba;		/* (-26438)	R0=0x98baab89(-1732596855) */
      1a:	00 e1 fe dc 	R0.L = 0xdcfe;		/* (-8962)	R0=0x98badcfe(-1732584194) */
      1e:	90 b0       	[P2 + 0x8] = R0;
      20:	40 e1 32 10 	R0.H = 0x1032;		/* (4146)	R0=0x1032dcfe(271768830) */
      24:	00 e1 76 54 	R0.L = 0x5476;		/* (21622)	R0=0x10325476(271733878) */
      28:	d0 b0       	[P2 + 0xc] = R0;
      2a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
      2c:	10 b1       	[P2 + 0x10] = R0;
      2e:	50 b1       	[P2 + 0x14] = R0;
      30:	10 e6 16 00 	[P2 + 0x58] = R0;
      34:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
      36:	10 00       	RTS;

00000038 <_md5_block_host_order>:
_md5_block_host_order():
      38:	10 32       	P2 = R0;
      3a:	e3 05       	[--SP] = (R7:4, P5:3);
      3c:	12 36       	B2 = R2;
      3e:	09 32       	P1 = R1;
      40:	56 e1 6a d7 	M2.H = 0xd76a;		/* (-10390)	M2=0xd76a0000(-680919040) */
      44:	55 e1 c7 e8 	M1.H = 0xe8c7;		/* (-5945)	M1=0xe8c70000(-389611520) */
      48:	4f 01       	[--SP] = FP;
      4a:	17 91       	R7 = [P2];
      4c:	50 a0       	R0 = [P2 + 0x4];
      4e:	91 a0       	R1 = [P2 + 0x8];
      50:	d2 a0       	R2 = [P2 + 0xc];
      52:	16 e1 78 a4 	M2.L = 0xa478;		/* (-23432)	M2=0xd76aa478(-680876936) */
      56:	15 e1 56 b7 	M1.L = 0xb756;		/* (-18602)	M1=0xe8c7b756(-389564586) */
      5a:	42 24       	JUMP.S 0x8de <_md5_block_host_order+0x8a6>;
      5c:	ae 32       	P5 = M2;
      5e:	0b 91       	R3 = [P1];
      60:	23 32       	P4 = R3;
      62:	8a 59       	R6 = R2 ^ R1;
      64:	0b 36       	B1 = R3;
      66:	86 55       	R6 = R6 & R0;
      68:	96 59       	R6 = R6 ^ R2;
      6a:	2c 5a       	P0 = P4 + P5;
      6c:	68 30       	R5 = P0;
      6e:	fd 50       	R3 = R5 + R7;
      70:	f3 50       	R3 = R3 + R6;
      72:	82 c6 3b 8e 	R7 = R3 << 0x7;
      76:	4c a0       	R4 = [P1 + 0x4];
      78:	cb 4e       	R3 >>= 0x19;
      7a:	fb 56       	R3 = R3 | R7;
      7c:	b5 30       	R6 = M1;
      7e:	f4 51       	R7 = R4 + R6;
      80:	97 50       	R2 = R7 + R2;
      82:	c3 50       	R3 = R3 + R0;
      84:	c1 59       	R7 = R1 ^ R0;
      86:	fb 55       	R7 = R3 & R7;
      88:	cf 59       	R7 = R7 ^ R1;
      8a:	ba 50       	R2 = R2 + R7;
      8c:	82 c6 62 8e 	R7 = R2 << 0xc;
      90:	8d a0       	R5 = [P1 + 0x8];
      92:	a2 4e       	R2 >>= 0x14;
      94:	46 e1 20 24 	R6.H = 0x2420;		/* (9248)	R6=0x24200000(606076928) */
      98:	ba 56       	R2 = R2 | R7;
      9a:	06 e1 db 70 	R6.L = 0x70db;		/* (28891)	R6=0x242070db(606105819) */
      9e:	f5 51       	R7 = R5 + R6;
      a0:	4f 50       	R1 = R7 + R1;
      a2:	9a 50       	R2 = R2 + R3;
      a4:	c3 59       	R7 = R3 ^ R0;
      a6:	fa 55       	R7 = R2 & R7;
      a8:	c7 59       	R7 = R7 ^ R0;
      aa:	79 50       	R1 = R1 + R7;
      ac:	82 c6 89 8e 	R7 = R1 << 0x11;
      b0:	0b ad       	P3 = [P1 + 0x10];
      b2:	79 4e       	R1 >>= 0xf;
      b4:	79 56       	R1 = R1 | R7;
      b6:	cf a0       	R7 = [P1 + 0xc];
      b8:	46 e1 bd c1 	R6.H = 0xc1bd;		/* (-15939)	R6=0xc1bd70db(-1044549413) */
      bc:	0f 34       	I1 = R7;
      be:	06 e1 ee ce 	R6.L = 0xceee;		/* (-12562)	R6=0xc1bdceee(-1044525330) */
      c2:	f7 51       	R7 = R7 + R6;
      c4:	07 50       	R0 = R7 + R0;
      c6:	51 50       	R1 = R1 + R2;
      c8:	da 59       	R7 = R2 ^ R3;
      ca:	f9 55       	R7 = R1 & R7;
      cc:	df 59       	R7 = R7 ^ R3;
      ce:	38 50       	R0 = R0 + R7;
      d0:	82 c6 b0 8e 	R7 = R0 << 0x16;
      d4:	c8 ad       	P0 = [P1 + 0x1c];
      d6:	50 4e       	R0 >>= 0xa;
      d8:	38 56       	R0 = R0 | R7;
      da:	45 e1 7c f5 	R5.H = 0xf57c;		/* (-2692)	R5=0xf57c0007(-176422905) */
      de:	7b 30       	R7 = P3;
      e0:	05 e1 af 0f 	R5.L = 0xfaf;		/* (4015)	R5=0xf57c0faf(-176418897) */
      e4:	af 51       	R6 = R7 + R5;
      e6:	08 50       	R0 = R0 + R1;
      e8:	d1 59       	R7 = R1 ^ R2;
      ea:	f8 55       	R7 = R0 & R7;
      ec:	d7 59       	R7 = R7 ^ R2;
      ee:	de 50       	R3 = R6 + R3;
      f0:	bb 51       	R6 = R3 + R7;
      f2:	4f a1       	R7 = [P1 + 0x14];
      f4:	1f 34       	I3 = R7;
      f6:	82 c6 3e 86 	R3 = R6 << 0x7;
      fa:	4c ae       	P4 = [P1 + 0x24];
      fc:	2f 30       	R5 = R7;
      fe:	ce 4e       	R6 >>= 0x19;
     100:	47 e1 87 47 	R7.H = 0x4787;		/* (18311)	R7=0x47870000(1200029696) */
     104:	9e 57       	R6 = R6 | R3;
     106:	07 e1 2a c6 	R7.L = 0xc62a;		/* (-14806)	R7=0x4787c62a(1200080426) */
     10a:	fd 50       	R3 = R5 + R7;
     10c:	93 50       	R2 = R3 + R2;
     10e:	86 51       	R6 = R6 + R0;
     110:	c8 58       	R3 = R0 ^ R1;
     112:	de 54       	R3 = R6 & R3;
     114:	cb 58       	R3 = R3 ^ R1;
     116:	da 50       	R3 = R2 + R3;
     118:	82 c6 63 84 	R2 = R3 << 0xc;
     11c:	8d a1       	R5 = [P1 + 0x18];
     11e:	a3 4e       	R3 >>= 0x14;
     120:	47 e1 30 a8 	R7.H = 0xa830;		/* (-22480)	R7=0xa830c62a(-1473198550) */
     124:	d3 56       	R3 = R3 | R2;
     126:	07 e1 13 46 	R7.L = 0x4613;		/* (17939)	R7=0xa8304613(-1473231341) */
     12a:	bd 50       	R2 = R5 + R7;
     12c:	4a 50       	R1 = R2 + R1;
     12e:	f3 50       	R3 = R3 + R6;
     130:	86 58       	R2 = R6 ^ R0;
     132:	93 54       	R2 = R3 & R2;
     134:	82 58       	R2 = R2 ^ R0;
     136:	91 50       	R2 = R1 + R2;
     138:	82 c6 8a 82 	R1 = R2 << 0x11;
     13c:	7a 4e       	R2 >>= 0xf;
     13e:	8a 56       	R2 = R2 | R1;
     140:	45 e1 46 fd 	R5.H = 0xfd46;		/* (-698)	R5=0xfd460faf(-45740113) */
     144:	48 30       	R1 = P0;
     146:	05 e1 01 95 	R5.L = 0x9501;		/* (-27391)	R5=0xfd469501(-45705983) */
     14a:	e9 51       	R7 = R1 + R5;
     14c:	9a 50       	R2 = R2 + R3;
     14e:	73 58       	R1 = R3 ^ R6;
     150:	4a 54       	R1 = R2 & R1;
     152:	07 50       	R0 = R7 + R0;
     154:	71 58       	R1 = R1 ^ R6;
     156:	48 50       	R1 = R0 + R1;
     158:	82 c6 b1 80 	R0 = R1 << 0x16;
     15c:	0d a2       	R5 = [P1 + 0x20];
     15e:	51 4e       	R1 >>= 0xa;
     160:	41 56       	R1 = R1 | R0;
     162:	40 e1 80 69 	R0.H = 0x6980;		/* (27008)	R0=0x69800001(1769996289) */
     166:	00 e1 d8 98 	R0.L = 0x98d8;		/* (-26408)	R0=0x698098d8(1770035416) */
     16a:	c5 51       	R7 = R5 + R0;
     16c:	51 50       	R1 = R1 + R2;
     16e:	1a 58       	R0 = R2 ^ R3;
     170:	01 54       	R0 = R1 & R0;
     172:	b7 51       	R6 = R7 + R6;
     174:	18 58       	R0 = R0 ^ R3;
     176:	06 50       	R0 = R6 + R0;
     178:	82 c6 38 8c 	R6 = R0 << 0x7;
     17c:	4d e1 44 8b 	P5.H = 0x8b44;		/* (-29884)	P5=0x8b440000 */
     180:	58 36       	B3 = P0;
     182:	0d e1 af f7 	P5.L = 0xf7af;		/* (-2129)	P5=0x8b44f7af */
     186:	c8 4e       	R0 >>= 0x19;
     188:	2c 5a       	P0 = P4 + P5;
     18a:	30 56       	R0 = R0 | R6;
     18c:	70 30       	R6 = P0;
     18e:	de 50       	R3 = R6 + R3;
     190:	08 50       	R0 = R0 + R1;
     192:	91 59       	R6 = R1 ^ R2;
     194:	b0 55       	R6 = R0 & R6;
     196:	88 ae       	P0 = [P1 + 0x28];
     198:	96 59       	R6 = R6 ^ R2;
     19a:	f3 50       	R3 = R3 + R6;
     19c:	82 c6 63 8c 	R6 = R3 << 0xc;
     1a0:	4c e1 ff ff 	P4.H = 0xffff;		/* ( -1)	P4=0xffff1190(-61040) */
     1a4:	a3 4e       	R3 >>= 0x14;
     1a6:	0c e1 b1 5b 	P4.L = 0x5bb1;		/* (23473)	P4=0xffff5bb1(-42063) */
     1aa:	20 5b       	P4 = P0 + P4;
     1ac:	f3 56       	R3 = R3 | R6;
     1ae:	74 30       	R6 = P4;
     1b0:	96 50       	R2 = R6 + R2;
     1b2:	c3 50       	R3 = R3 + R0;
     1b4:	88 59       	R6 = R0 ^ R1;
     1b6:	b3 55       	R6 = R3 & R6;
     1b8:	8e 59       	R6 = R6 ^ R1;
     1ba:	cc ae       	P4 = [P1 + 0x2c];
     1bc:	b2 50       	R2 = R2 + R6;
     1be:	82 c6 8a 8c 	R6 = R2 << 0x11;
     1c2:	08 af       	P0 = [P1 + 0x30];
     1c4:	7a 4e       	R2 >>= 0xf;
     1c6:	4f e1 5c 89 	FP.H = 0x895c;		/* (-30372)	FP=0x895c0aac */
     1ca:	b2 56       	R2 = R2 | R6;
     1cc:	0f e1 be d7 	FP.L = 0xd7be;		/* (-10306)	FP=0x895cd7be */
     1d0:	9a 50       	R2 = R2 + R3;
     1d2:	fc 5b       	FP = P4 + FP;
     1d4:	83 59       	R6 = R3 ^ R0;
     1d6:	7f 30       	R7 = FP;
     1d8:	b2 55       	R6 = R2 & R6;
     1da:	86 59       	R6 = R6 ^ R0;
     1dc:	4f 50       	R1 = R7 + R1;
     1de:	50 34       	I2 = P0;
     1e0:	71 50       	R1 = R1 + R6;
     1e2:	82 c6 b1 8c 	R6 = R1 << 0x16;
     1e6:	4f af       	FP = [P1 + 0x34];
     1e8:	48 e1 90 6b 	P0.H = 0x6b90;		/* (27536)	P0=0x6b90005c */
     1ec:	aa 32       	P5 = I2;
     1ee:	51 4e       	R1 >>= 0xa;
     1f0:	08 e1 22 11 	P0.L = 0x1122;		/* (4386)	P0=0x6b901122 */
     1f4:	05 5a       	P0 = P5 + P0;
     1f6:	71 56       	R1 = R1 | R6;
     1f8:	70 30       	R6 = P0;
     1fa:	06 50       	R0 = R6 + R0;
     1fc:	51 50       	R1 = R1 + R2;
     1fe:	9a 59       	R6 = R2 ^ R3;
     200:	b1 55       	R6 = R1 & R6;
     202:	9e 59       	R6 = R6 ^ R3;
     204:	30 50       	R0 = R0 + R6;
     206:	82 c6 38 8c 	R6 = R0 << 0x7;
     20a:	88 af       	P0 = [P1 + 0x38];
     20c:	c8 4e       	R0 >>= 0x19;
     20e:	30 56       	R0 = R0 | R6;
     210:	46 e1 98 fd 	R6.H = 0xfd98;		/* (-616)	R6=0xfd98ceee(-40317202) */
     214:	7f 30       	R7 = FP;
     216:	06 e1 93 71 	R6.L = 0x7193;		/* (29075)	R6=0xfd987193(-40341101) */
     21a:	b7 51       	R6 = R7 + R6;
     21c:	de 50       	R3 = R6 + R3;
     21e:	08 50       	R0 = R0 + R1;
     220:	91 59       	R6 = R1 ^ R2;
     222:	b0 55       	R6 = R0 & R6;
     224:	96 59       	R6 = R6 ^ R2;
     226:	f3 50       	R3 = R3 + R6;
     228:	82 c6 63 8c 	R6 = R3 << 0xc;
     22c:	a3 4e       	R3 >>= 0x14;
     22e:	f3 56       	R3 = R3 | R6;
     230:	46 e1 79 a6 	R6.H = 0xa679;		/* (-22919)	R6=0xa6797193(-1501990509) */
     234:	78 30       	R7 = P0;
     236:	06 e1 8e 43 	R6.L = 0x438e;		/* (17294)	R6=0xa679438e(-1502002290) */
     23a:	b7 51       	R6 = R7 + R6;
     23c:	96 50       	R2 = R6 + R2;
     23e:	c3 50       	R3 = R3 + R0;
     240:	88 59       	R6 = R0 ^ R1;
     242:	b3 55       	R6 = R3 & R6;
     244:	8e 59       	R6 = R6 ^ R1;
     246:	b2 50       	R2 = R2 + R6;
     248:	82 c6 8a 8c 	R6 = R2 << 0x11;
     24c:	7a 4e       	R2 >>= 0xf;
     24e:	54 e1 b4 49 	M0.H = 0x49b4;		/* (18868)	M0=0x49b40000(1236533248) */
     252:	b2 56       	R2 = R2 | R6;
     254:	14 e1 21 08 	M0.L = 0x821;		/* (2081)	M0=0x49b40821(1236535329) */
     258:	ce a3       	R6 = [P1 + 0x3c];
     25a:	bc 30       	R7 = M0;
     25c:	fe 51       	R7 = R6 + R7;
     25e:	cf 51       	R7 = R7 + R1;
     260:	9a 50       	R2 = R2 + R3;
     262:	43 58       	R1 = R3 ^ R0;
     264:	4a 54       	R1 = R2 & R1;
     266:	41 58       	R1 = R1 ^ R0;
     268:	4f 50       	R1 = R7 + R1;
     26a:	82 c6 b1 8e 	R7 = R1 << 0x16;
     26e:	51 4e       	R1 >>= 0xa;
     270:	54 e1 1e f6 	M0.H = 0xf61e;		/* (-2530)	M0=0xf61e0821(-165803999) */
     274:	79 56       	R1 = R1 | R7;
     276:	14 e1 62 25 	M0.L = 0x2562;		/* (9570)	M0=0xf61e2562(-165796510) */
     27a:	bc 30       	R7 = M0;
     27c:	fc 51       	R7 = R4 + R7;
     27e:	51 50       	R1 = R1 + R2;
     280:	c7 51       	R7 = R7 + R0;
     282:	11 58       	R0 = R1 ^ R2;
     284:	18 54       	R0 = R0 & R3;
     286:	10 58       	R0 = R0 ^ R2;
     288:	07 50       	R0 = R7 + R0;
     28a:	82 c6 28 8e 	R7 = R0 << 0x5;
     28e:	d8 4e       	R0 >>= 0x1b;
     290:	38 56       	R0 = R0 | R7;
     292:	8f a1       	R7 = [P1 + 0x18];
     294:	07 34       	I0 = R7;
     296:	54 e1 40 c0 	M0.H = 0xc040;		/* (-16320)	M0=0xc0402562(-1069537950) */
     29a:	14 e1 40 b3 	M0.L = 0xb340;		/* (-19648)	M0=0xc040b340(-1069501632) */
     29e:	08 50       	R0 = R0 + R1;
     2a0:	40 36       	B0 = P0;
     2a2:	60 9e       	I0 += M0;
     2a4:	b8 30       	R7 = I0;
     2a6:	df 51       	R7 = R7 + R3;
     2a8:	c8 58       	R3 = R0 ^ R1;
     2aa:	d3 54       	R3 = R3 & R2;
     2ac:	cb 58       	R3 = R3 ^ R1;
     2ae:	df 50       	R3 = R7 + R3;
     2b0:	54 e1 5e 26 	M0.H = 0x265e;		/* (9822)	M0=0x265eb340(643740480) */
     2b4:	82 c6 4b 8e 	R7 = R3 << 0x9;
     2b8:	14 e1 51 5a 	M0.L = 0x5a51;		/* (23121)	M0=0x265e5a51(643717713) */
     2bc:	84 32       	P0 = M0;
     2be:	bb 4e       	R3 >>= 0x17;
     2c0:	04 5a       	P0 = P4 + P0;
     2c2:	fb 56       	R3 = R3 | R7;
     2c4:	78 30       	R7 = P0;
     2c6:	c3 50       	R3 = R3 + R0;
     2c8:	d7 51       	R7 = R7 + R2;
     2ca:	83 58       	R2 = R3 ^ R0;
     2cc:	8a 54       	R2 = R2 & R1;
     2ce:	82 58       	R2 = R2 ^ R0;
     2d0:	97 50       	R2 = R7 + R2;
     2d2:	82 c6 72 8e 	R7 = R2 << 0xe;
     2d6:	54 e1 b6 e9 	M0.H = 0xe9b6;		/* (-5706)	M0=0xe9b65a51(-373925295) */
     2da:	14 e1 aa c7 	M0.L = 0xc7aa;		/* (-14422)	M0=0xe9b6c7aa(-373897302) */
     2de:	c1 34       	I0 = B1;
     2e0:	92 4e       	R2 >>= 0x12;
     2e2:	60 9e       	I0 += M0;
     2e4:	ba 56       	R2 = R2 | R7;
     2e6:	b8 30       	R7 = I0;
     2e8:	9a 50       	R2 = R2 + R3;
     2ea:	cf 51       	R7 = R7 + R1;
     2ec:	5a 58       	R1 = R2 ^ R3;
     2ee:	41 54       	R1 = R1 & R0;
     2f0:	59 58       	R1 = R1 ^ R3;
     2f2:	4f 50       	R1 = R7 + R1;
     2f4:	82 c6 a1 8e 	R7 = R1 << 0x14;
     2f8:	54 e1 2f d6 	M0.H = 0xd62f;		/* (-10705)	M0=0xd62fc7aa(-701511766) */
     2fc:	14 e1 5d 10 	M0.L = 0x105d;		/* (4189)	M0=0xd62f105d(-701558691) */
     300:	83 34       	I0 = I3;
     302:	61 4e       	R1 >>= 0xc;
     304:	60 9e       	I0 += M0;
     306:	79 56       	R1 = R1 | R7;
     308:	b8 30       	R7 = I0;
     30a:	51 50       	R1 = R1 + R2;
     30c:	c7 51       	R7 = R7 + R0;
     30e:	11 58       	R0 = R1 ^ R2;
     310:	18 54       	R0 = R0 & R3;
     312:	10 58       	R0 = R0 ^ R2;
     314:	07 50       	R0 = R7 + R0;
     316:	82 c6 28 8e 	R7 = R0 << 0x5;
     31a:	d8 4e       	R0 >>= 0x1b;
     31c:	38 56       	R0 = R0 | R7;
     31e:	8f a2       	R7 = [P1 + 0x28];
     320:	07 34       	I0 = R7;
     322:	54 e1 44 02 	M0.H = 0x244;		/* (580)	M0=0x244105d(38015069) */
     326:	14 e1 53 14 	M0.L = 0x1453;		/* (5203)	M0=0x2441453(38016083) */
     32a:	08 50       	R0 = R0 + R1;
     32c:	57 e1 6f 67 	M3.H = 0x676f;		/* (26479)	M3=0x676f0000(1735327744) */
     330:	60 9e       	I0 += M0;
     332:	b8 30       	R7 = I0;
     334:	df 51       	R7 = R7 + R3;
     336:	c8 58       	R3 = R0 ^ R1;
     338:	d3 54       	R3 = R3 & R2;
     33a:	cb 58       	R3 = R3 ^ R1;
     33c:	df 50       	R3 = R7 + R3;
     33e:	82 c6 4b 8e 	R7 = R3 << 0x9;
     342:	bb 4e       	R3 >>= 0x17;
     344:	54 e1 a1 d8 	M0.H = 0xd8a1;		/* (-10079)	M0=0xd8a11453(-660532141) */
     348:	fb 56       	R3 = R3 | R7;
     34a:	14 e1 81 e6 	M0.L = 0xe681;		/* (-6527)	M0=0xd8a1e681(-660478335) */
     34e:	bc 30       	R7 = M0;
     350:	fe 51       	R7 = R6 + R7;
     352:	c3 50       	R3 = R3 + R0;
     354:	d7 51       	R7 = R7 + R2;
     356:	83 58       	R2 = R3 ^ R0;
     358:	8a 54       	R2 = R2 & R1;
     35a:	82 58       	R2 = R2 ^ R0;
     35c:	97 50       	R2 = R7 + R2;
     35e:	54 e1 d3 e7 	M0.H = 0xe7d3;		/* (-6189)	M0=0xe7d3e681(-405543295) */
     362:	82 c6 72 8e 	R7 = R2 << 0xe;
     366:	14 e1 c8 fb 	M0.L = 0xfbc8;		/* (-1080)	M0=0xe7d3fbc8(-405537848) */
     36a:	84 32       	P0 = M0;
     36c:	92 4e       	R2 >>= 0x12;
     36e:	03 5a       	P0 = P3 + P0;
     370:	ba 56       	R2 = R2 | R7;
     372:	78 30       	R7 = P0;
     374:	9a 50       	R2 = R2 + R3;
     376:	cf 51       	R7 = R7 + R1;
     378:	5a 58       	R1 = R2 ^ R3;
     37a:	41 54       	R1 = R1 & R0;
     37c:	59 58       	R1 = R1 ^ R3;
     37e:	4f 50       	R1 = R7 + R1;
     380:	82 c6 a1 8e 	R7 = R1 << 0x14;
     384:	61 4e       	R1 >>= 0xc;
     386:	79 56       	R1 = R1 | R7;
     388:	4f a2       	R7 = [P1 + 0x24];
     38a:	07 34       	I0 = R7;
     38c:	54 e1 e1 21 	M0.H = 0x21e1;		/* (8673)	M0=0x21e1fbc8(568458184) */
     390:	14 e1 e6 cd 	M0.L = 0xcde6;		/* (-12826)	M0=0x21e1cde6(568446438) */
     394:	51 50       	R1 = R1 + R2;
     396:	17 e1 d9 02 	M3.L = 0x2d9;		/* (729)	M3=0x676f02d9(1735328473) */
     39a:	60 9e       	I0 += M0;
     39c:	b8 30       	R7 = I0;
     39e:	c7 51       	R7 = R7 + R0;
     3a0:	11 58       	R0 = R1 ^ R2;
     3a2:	18 54       	R0 = R0 & R3;
     3a4:	10 58       	R0 = R0 ^ R2;
     3a6:	07 50       	R0 = R7 + R0;
     3a8:	82 c6 28 8e 	R7 = R0 << 0x5;
     3ac:	54 e1 37 c3 	M0.H = 0xc337;		/* (-15561)	M0=0xc337cde6(-1019752986) */
     3b0:	14 e1 d6 07 	M0.L = 0x7d6;		/* (2006)	M0=0xc33707d6(-1019803690) */
     3b4:	c0 34       	I0 = B0;
     3b6:	d8 4e       	R0 >>= 0x1b;
     3b8:	60 9e       	I0 += M0;
     3ba:	38 56       	R0 = R0 | R7;
     3bc:	b8 30       	R7 = I0;
     3be:	08 50       	R0 = R0 + R1;
     3c0:	df 51       	R7 = R7 + R3;
     3c2:	c8 58       	R3 = R0 ^ R1;
     3c4:	d3 54       	R3 = R3 & R2;
     3c6:	cb 58       	R3 = R3 ^ R1;
     3c8:	df 50       	R3 = R7 + R3;
     3ca:	82 c6 4b 8e 	R7 = R3 << 0x9;
     3ce:	54 e1 d5 f4 	M0.H = 0xf4d5;		/* (-2859)	M0=0xf4d507d6(-187365418) */
     3d2:	14 e1 87 0d 	M0.L = 0xd87;		/* (3463)	M0=0xf4d50d87(-187363961) */
     3d6:	81 34       	I0 = I1;
     3d8:	bb 4e       	R3 >>= 0x17;
     3da:	60 9e       	I0 += M0;
     3dc:	fb 56       	R3 = R3 | R7;
     3de:	b8 30       	R7 = I0;
     3e0:	c3 50       	R3 = R3 + R0;
     3e2:	d7 51       	R7 = R7 + R2;
     3e4:	83 58       	R2 = R3 ^ R0;
     3e6:	8a 54       	R2 = R2 & R1;
     3e8:	82 58       	R2 = R2 ^ R0;
     3ea:	97 50       	R2 = R7 + R2;
     3ec:	82 c6 72 8e 	R7 = R2 << 0xe;
     3f0:	92 4e       	R2 >>= 0x12;
     3f2:	54 e1 5a 45 	M0.H = 0x455a;		/* (17754)	M0=0x455a0d87(1163529607) */
     3f6:	ba 56       	R2 = R2 | R7;
     3f8:	14 e1 ed 14 	M0.L = 0x14ed;		/* (5357)	M0=0x455a14ed(1163531501) */
     3fc:	bc 30       	R7 = M0;
     3fe:	fd 51       	R7 = R5 + R7;
     400:	9a 50       	R2 = R2 + R3;
     402:	cf 51       	R7 = R7 + R1;
     404:	5a 58       	R1 = R2 ^ R3;
     406:	41 54       	R1 = R1 & R0;
     408:	59 58       	R1 = R1 ^ R3;
     40a:	4f 50       	R1 = R7 + R1;
     40c:	54 e1 e3 a9 	M0.H = 0xa9e3;		/* (-22045)	M0=0xa9e314ed(-1444735763) */
     410:	82 c6 a1 8e 	R7 = R1 << 0x14;
     414:	14 e1 05 e9 	M0.L = 0xe905;		/* (-5883)	M0=0xa9e3e905(-1444681467) */
     418:	84 32       	P0 = M0;
     41a:	61 4e       	R1 >>= 0xc;
     41c:	07 5a       	P0 = FP + P0;
     41e:	79 56       	R1 = R1 | R7;
     420:	78 30       	R7 = P0;
     422:	51 50       	R1 = R1 + R2;
     424:	c7 51       	R7 = R7 + R0;
     426:	11 58       	R0 = R1 ^ R2;
     428:	18 54       	R0 = R0 & R3;
     42a:	10 58       	R0 = R0 ^ R2;
     42c:	07 50       	R0 = R7 + R0;
     42e:	82 c6 28 8e 	R7 = R0 << 0x5;
     432:	d8 4e       	R0 >>= 0x1b;
     434:	38 56       	R0 = R0 | R7;
     436:	8f a0       	R7 = [P1 + 0x8];
     438:	07 34       	I0 = R7;
     43a:	54 e1 ef fc 	M0.H = 0xfcef;		/* (-785)	M0=0xfcefe905(-51386107) */
     43e:	14 e1 f8 a3 	M0.L = 0xa3f8;		/* (-23560)	M0=0xfcefa3f8(-51403784) */
     442:	08 50       	R0 = R0 + R1;
     444:	60 9e       	I0 += M0;
     446:	b8 30       	R7 = I0;
     448:	df 51       	R7 = R7 + R3;
     44a:	c8 58       	R3 = R0 ^ R1;
     44c:	d3 54       	R3 = R3 & R2;
     44e:	cb 58       	R3 = R3 ^ R1;
     450:	df 50       	R3 = R7 + R3;
     452:	82 c6 4b 8e 	R7 = R3 << 0x9;
     456:	bb 4e       	R3 >>= 0x17;
     458:	fb 56       	R3 = R3 | R7;
     45a:	c3 50       	R3 = R3 + R0;
     45c:	23 34       	M0 = R3;
     45e:	c3 34       	I0 = B3;
     460:	6c 9e       	I0 += M3;
     462:	98 30       	R3 = I0;
     464:	93 50       	R2 = R3 + R2;
     466:	bc 30       	R7 = M0;
     468:	c7 58       	R3 = R7 ^ R0;
     46a:	cb 54       	R3 = R3 & R1;
     46c:	c3 58       	R3 = R3 ^ R0;
     46e:	9a 50       	R2 = R2 + R3;
     470:	82 c6 72 86 	R3 = R2 << 0xe;
     474:	92 4e       	R2 >>= 0x12;
     476:	9a 56       	R2 = R2 | R3;
     478:	fa 51       	R7 = R2 + R7;
     47a:	94 30       	R2 = M0;
     47c:	d7 58       	R3 = R7 ^ R2;
     47e:	3f 34       	M3 = R7;
     480:	42 e1 2a 8d 	R2.H = 0x8d2a;		/* (-29398)	R2=0x8d2a0001(-1926627327) */
     484:	ba 30       	R7 = I2;
     486:	02 e1 8a 4c 	R2.L = 0x4c8a;		/* (19594)	R2=0x8d2a4c8a(-1926607734) */
     48a:	97 50       	R2 = R7 + R2;
     48c:	4a 50       	R1 = R2 + R1;
     48e:	83 54       	R2 = R3 & R0;
     490:	bc 30       	R7 = M0;
     492:	ba 58       	R2 = R2 ^ R7;
     494:	91 50       	R2 = R1 + R2;
     496:	82 c6 a2 82 	R1 = R2 << 0x14;
     49a:	62 4e       	R2 >>= 0xc;
     49c:	8a 56       	R2 = R2 | R1;
     49e:	8f 30       	R1 = M3;
     4a0:	8a 50       	R2 = R2 + R1;
     4a2:	41 e1 fa ff 	R1.H = 0xfffa;		/* ( -6)	R1=0xfffa0000(-393216) */
     4a6:	bb 30       	R7 = I3;
     4a8:	01 e1 42 39 	R1.L = 0x3942;		/* (14658)	R1=0xfffa3942(-378558) */
     4ac:	4f 50       	R1 = R7 + R1;
     4ae:	01 50       	R0 = R1 + R0;
     4b0:	da 58       	R3 = R2 ^ R3;
     4b2:	d8 50       	R3 = R0 + R3;
     4b4:	82 c6 23 80 	R0 = R3 << 0x4;
     4b8:	e3 4e       	R3 >>= 0x1c;
     4ba:	41 e1 71 87 	R1.H = 0x8771;		/* (-30863)	R1=0x87713942(-2022622910) */
     4be:	c3 56       	R3 = R3 | R0;
     4c0:	01 e1 81 f6 	R1.L = 0xf681;		/* (-2431)	R1=0x8771f681(-2022574463) */
     4c4:	84 30       	R0 = M0;
     4c6:	4d 50       	R1 = R5 + R1;
     4c8:	41 50       	R1 = R1 + R0;
     4ca:	bf 30       	R7 = M3;
     4cc:	d3 50       	R3 = R3 + R2;
     4ce:	3a 58       	R0 = R2 ^ R7;
     4d0:	18 58       	R0 = R0 ^ R3;
     4d2:	01 50       	R0 = R1 + R0;
     4d4:	82 c6 58 82 	R1 = R0 << 0xb;
     4d8:	a8 4e       	R0 >>= 0x15;
     4da:	08 56       	R0 = R0 | R1;
     4dc:	18 50       	R0 = R0 + R3;
     4de:	20 34       	M0 = R0;
     4e0:	41 e1 9d 6d 	R1.H = 0x6d9d;		/* (28061)	R1=0x6d9df681(1839068801) */
     4e4:	44 30       	R0 = P4;
     4e6:	01 e1 22 61 	R1.L = 0x6122;		/* (24866)	R1=0x6d9d6122(1839030562) */
     4ea:	48 50       	R1 = R0 + R1;
     4ec:	79 50       	R1 = R1 + R7;
     4ee:	bc 30       	R7 = M0;
     4f0:	13 58       	R0 = R3 ^ R2;
     4f2:	38 58       	R0 = R0 ^ R7;
     4f4:	41 50       	R1 = R1 + R0;
     4f6:	04 c6 09 42 	R1 = PACK (R1.L, R1.H);
     4fa:	79 50       	R1 = R1 + R7;
     4fc:	40 e1 e5 fd 	R0.H = 0xfde5;		/* (-539)	R0=0xfde598d8(-35284776) */
     500:	f8 30       	R7 = B0;
     502:	00 e1 0c 38 	R0.L = 0x380c;		/* (14348)	R0=0xfde5380c(-35309556) */
     506:	07 50       	R0 = R7 + R0;
     508:	bc 30       	R7 = M0;
     50a:	90 50       	R2 = R0 + R2;
     50c:	1f 58       	R0 = R7 ^ R3;
     50e:	08 58       	R0 = R0 ^ R1;
     510:	02 50       	R0 = R2 + R0;
     512:	82 c6 b8 84 	R2 = R0 << 0x17;
     516:	48 4e       	R0 >>= 0x9;
     518:	10 56       	R0 = R0 | R2;
     51a:	42 e1 be a4 	R2.H = 0xa4be;		/* (-23362)	R2=0xa4be4c8a(-1531032438) */
     51e:	02 e1 44 ea 	R2.L = 0xea44;		/* (-5564)	R2=0xa4beea44(-1530992060) */
     522:	94 50       	R2 = R4 + R2;
     524:	da 50       	R3 = R2 + R3;
     526:	08 50       	R0 = R0 + R1;
     528:	b9 58       	R2 = R1 ^ R7;
     52a:	82 58       	R2 = R2 ^ R0;
     52c:	d3 50       	R3 = R3 + R2;
     52e:	82 c6 23 84 	R2 = R3 << 0x4;
     532:	e3 4e       	R3 >>= 0x1c;
     534:	d3 56       	R3 = R3 | R2;
     536:	42 e1 de 4b 	R2.H = 0x4bde;		/* (19422)	R2=0x4bdeea44(1272900164) */
     53a:	7b 30       	R7 = P3;
     53c:	02 e1 a9 cf 	R2.L = 0xcfa9;		/* (-12375)	R2=0x4bdecfa9(1272893353) */
     540:	97 50       	R2 = R7 + R2;
     542:	bc 30       	R7 = M0;
     544:	fa 51       	R7 = R2 + R7;
     546:	c3 50       	R3 = R3 + R0;
     548:	88 58       	R2 = R0 ^ R1;
     54a:	9a 58       	R2 = R2 ^ R3;
     54c:	97 50       	R2 = R7 + R2;
     54e:	82 c6 5a 8e 	R7 = R2 << 0xb;
     552:	54 e1 bb f6 	M0.H = 0xf6bb;		/* (-2373)	M0=0xf6bba3f8(-155474952) */
     556:	14 e1 60 4b 	M0.L = 0x4b60;		/* (19296)	M0=0xf6bb4b60(-155497632) */
     55a:	aa 4e       	R2 >>= 0x15;
     55c:	c3 34       	I0 = B3;
     55e:	60 9e       	I0 += M0;
     560:	ba 56       	R2 = R2 | R7;
     562:	b8 30       	R7 = I0;
     564:	cf 51       	R7 = R7 + R1;
     566:	9a 50       	R2 = R2 + R3;
     568:	43 58       	R1 = R3 ^ R0;
     56a:	51 58       	R1 = R1 ^ R2;
     56c:	4f 50       	R1 = R7 + R1;
     56e:	8f a2       	R7 = [P1 + 0x28];
     570:	07 34       	I0 = R7;
     572:	54 e1 bf be 	M0.H = 0xbebf;		/* (-16705)	M0=0xbebf4b60(-1094759584) */
     576:	14 e1 70 bc 	M0.L = 0xbc70;		/* (-17296)	M0=0xbebfbc70(-1094730640) */
     57a:	04 c6 09 42 	R1 = PACK (R1.L, R1.H);
     57e:	51 50       	R1 = R1 + R2;
     580:	60 9e       	I0 += M0;
     582:	b8 30       	R7 = I0;
     584:	c7 51       	R7 = R7 + R0;
     586:	1a 58       	R0 = R2 ^ R3;
     588:	08 58       	R0 = R0 ^ R1;
     58a:	07 50       	R0 = R7 + R0;
     58c:	54 e1 9b 28 	M0.H = 0x289b;		/* (10395)	M0=0x289bbc70(681294960) */
     590:	82 c6 b8 8e 	R7 = R0 << 0x17;
     594:	14 e1 c6 7e 	M0.L = 0x7ec6;		/* (32454)	M0=0x289b7ec6(681279174) */
     598:	84 32       	P0 = M0;
     59a:	48 4e       	R0 >>= 0x9;
     59c:	07 5a       	P0 = FP + P0;
     59e:	38 56       	R0 = R0 | R7;
     5a0:	78 30       	R7 = P0;
     5a2:	df 51       	R7 = R7 + R3;
     5a4:	08 50       	R0 = R0 + R1;
     5a6:	d1 58       	R3 = R1 ^ R2;
     5a8:	c3 58       	R3 = R3 ^ R0;
     5aa:	df 50       	R3 = R7 + R3;
     5ac:	82 c6 23 8e 	R7 = R3 << 0x4;
     5b0:	54 e1 a1 ea 	M0.H = 0xeaa1;		/* (-5471)	M0=0xeaa17ec6(-358515002) */
     5b4:	14 e1 fa 27 	M0.L = 0x27fa;		/* (10234)	M0=0xeaa127fa(-358537222) */
     5b8:	c1 34       	I0 = B1;
     5ba:	e3 4e       	R3 >>= 0x1c;
     5bc:	60 9e       	I0 += M0;
     5be:	fb 56       	R3 = R3 | R7;
     5c0:	b8 30       	R7 = I0;
     5c2:	d7 51       	R7 = R7 + R2;
     5c4:	c3 50       	R3 = R3 + R0;
     5c6:	88 58       	R2 = R0 ^ R1;
     5c8:	9a 58       	R2 = R2 ^ R3;
     5ca:	97 50       	R2 = R7 + R2;
     5cc:	82 c6 5a 8e 	R7 = R2 << 0xb;
     5d0:	54 e1 ef d4 	M0.H = 0xd4ef;		/* (-11025)	M0=0xd4ef27fa(-722524166) */
     5d4:	14 e1 85 30 	M0.L = 0x3085;		/* (12421)	M0=0xd4ef3085(-722521979) */
     5d8:	81 34       	I0 = I1;
     5da:	aa 4e       	R2 >>= 0x15;
     5dc:	60 9e       	I0 += M0;
     5de:	ba 56       	R2 = R2 | R7;
     5e0:	b8 30       	R7 = I0;
     5e2:	cf 51       	R7 = R7 + R1;
     5e4:	9a 50       	R2 = R2 + R3;
     5e6:	43 58       	R1 = R3 ^ R0;
     5e8:	51 58       	R1 = R1 ^ R2;
     5ea:	4f 50       	R1 = R7 + R1;
     5ec:	8f a1       	R7 = [P1 + 0x18];
     5ee:	07 34       	I0 = R7;
     5f0:	54 e1 88 04 	M0.H = 0x488;		/* (1160)	M0=0x4883085(76034181) */
     5f4:	14 e1 05 1d 	M0.L = 0x1d05;		/* (7429)	M0=0x4881d05(76029189) */
     5f8:	04 c6 09 42 	R1 = PACK (R1.L, R1.H);
     5fc:	51 50       	R1 = R1 + R2;
     5fe:	60 9e       	I0 += M0;
     600:	b8 30       	R7 = I0;
     602:	c7 51       	R7 = R7 + R0;
     604:	1a 58       	R0 = R2 ^ R3;
     606:	08 58       	R0 = R0 ^ R1;
     608:	07 50       	R0 = R7 + R0;
     60a:	82 c6 b8 8e 	R7 = R0 << 0x17;
     60e:	48 4e       	R0 >>= 0x9;
     610:	38 56       	R0 = R0 | R7;
     612:	4f a2       	R7 = [P1 + 0x24];
     614:	07 34       	I0 = R7;
     616:	54 e1 d4 d9 	M0.H = 0xd9d4;		/* (-9772)	M0=0xd9d41d05(-640410363) */
     61a:	14 e1 39 d0 	M0.L = 0xd039;		/* (-12231)	M0=0xd9d4d039(-640364487) */
     61e:	08 50       	R0 = R0 + R1;
     620:	c3 32       	P0 = B3;
     622:	60 9e       	I0 += M0;
     624:	b8 30       	R7 = I0;
     626:	df 51       	R7 = R7 + R3;
     628:	d1 58       	R3 = R1 ^ R2;
     62a:	c3 58       	R3 = R3 ^ R0;
     62c:	df 50       	R3 = R7 + R3;
     62e:	82 c6 23 8e 	R7 = R3 << 0x4;
     632:	54 e1 db e6 	M0.H = 0xe6db;		/* (-6437)	M0=0xe6dbd039(-421801927) */
     636:	14 e1 e5 99 	M0.L = 0x99e5;		/* (-26139)	M0=0xe6db99e5(-421815835) */
     63a:	82 34       	I0 = I2;
     63c:	e3 4e       	R3 >>= 0x1c;
     63e:	60 9e       	I0 += M0;
     640:	fb 56       	R3 = R3 | R7;
     642:	b8 30       	R7 = I0;
     644:	d7 51       	R7 = R7 + R2;
     646:	c3 50       	R3 = R3 + R0;
     648:	88 58       	R2 = R0 ^ R1;
     64a:	9a 58       	R2 = R2 ^ R3;
     64c:	97 50       	R2 = R7 + R2;
     64e:	82 c6 5a 8e 	R7 = R2 << 0xb;
     652:	aa 4e       	R2 >>= 0x15;
     654:	54 e1 a2 1f 	M0.H = 0x1fa2;		/* (8098)	M0=0x1fa299e5(530749925) */
     658:	ba 56       	R2 = R2 | R7;
     65a:	14 e1 f8 7c 	M0.L = 0x7cf8;		/* (31992)	M0=0x1fa27cf8(530742520) */
     65e:	bc 30       	R7 = M0;
     660:	fe 51       	R7 = R6 + R7;
     662:	cf 51       	R7 = R7 + R1;
     664:	9a 50       	R2 = R2 + R3;
     666:	43 58       	R1 = R3 ^ R0;
     668:	51 58       	R1 = R1 ^ R2;
     66a:	4f 50       	R1 = R7 + R1;
     66c:	8f a0       	R7 = [P1 + 0x8];
     66e:	07 34       	I0 = R7;
     670:	54 e1 ac c4 	M0.H = 0xc4ac;		/* (-15188)	M0=0xc4ac7cf8(-995328776) */
     674:	14 e1 65 56 	M0.L = 0x5665;		/* (22117)	M0=0xc4ac5665(-995338651) */
     678:	04 c6 09 42 	R1 = PACK (R1.L, R1.H);
     67c:	51 50       	R1 = R1 + R2;
     67e:	60 9e       	I0 += M0;
     680:	b8 30       	R7 = I0;
     682:	c7 51       	R7 = R7 + R0;
     684:	1a 58       	R0 = R2 ^ R3;
     686:	08 58       	R0 = R0 ^ R1;
     688:	07 50       	R0 = R7 + R0;
     68a:	82 c6 b8 8e 	R7 = R0 << 0x17;
     68e:	54 e1 29 f4 	M0.H = 0xf429;		/* (-3031)	M0=0xf4295665(-198617499) */
     692:	14 e1 44 22 	M0.L = 0x2244;		/* (8772)	M0=0xf4292244(-198630844) */
     696:	c1 34       	I0 = B1;
     698:	48 4e       	R0 >>= 0x9;
     69a:	60 9e       	I0 += M0;
     69c:	38 56       	R0 = R0 | R7;
     69e:	b8 30       	R7 = I0;
     6a0:	df 51       	R7 = R7 + R3;
     6a2:	08 50       	R0 = R0 + R1;
     6a4:	d3 43       	R3 =~ R2;
     6a6:	d8 56       	R3 = R0 | R3;
     6a8:	cb 58       	R3 = R3 ^ R1;
     6aa:	df 50       	R3 = R7 + R3;
     6ac:	59 e1 2a 43 	B1.H = 0x432a;		/* (17194)	B1=0x432a0000(1126825984) */
     6b0:	82 c6 33 8e 	R7 = R3 << 0x6;
     6b4:	19 e1 97 ff 	B1.L = 0xff97;		/* (-105)	B1=0x432aff97(1126891415) */
     6b8:	e9 32       	P5 = B1;
     6ba:	d3 4e       	R3 >>= 0x1a;
     6bc:	28 5a       	P0 = P0 + P5;
     6be:	fb 56       	R3 = R3 | R7;
     6c0:	78 30       	R7 = P0;
     6c2:	d7 51       	R7 = R7 + R2;
     6c4:	c3 50       	R3 = R3 + R0;
     6c6:	ca 43       	R2 =~ R1;
     6c8:	93 56       	R2 = R3 | R2;
     6ca:	82 58       	R2 = R2 ^ R0;
     6cc:	97 50       	R2 = R7 + R2;
     6ce:	59 e1 94 ab 	B1.H = 0xab94;		/* (-21612)	B1=0xab94ff97(-1416298601) */
     6d2:	82 c6 52 8e 	R7 = R2 << 0xa;
     6d6:	19 e1 a7 23 	B1.L = 0x23a7;		/* (9127)	B1=0xab9423a7(-1416354905) */
     6da:	c0 32       	P0 = B0;
     6dc:	e9 32       	P5 = B1;
     6de:	b2 4e       	R2 >>= 0x16;
     6e0:	28 5a       	P0 = P0 + P5;
     6e2:	ba 56       	R2 = R2 | R7;
     6e4:	58 e1 93 fc 	B0.H = 0xfc93;		/* (-877)	B0=0xfc930000(-57475072) */
     6e8:	78 30       	R7 = P0;
     6ea:	18 e1 39 a0 	B0.L = 0xa039;		/* (-24519)	B0=0xfc93a039(-57434055) */
     6ee:	cf 51       	R7 = R7 + R1;
     6f0:	e0 34       	M0 = B0;
     6f2:	9a 50       	R2 = R2 + R3;
     6f4:	c1 43       	R1 =~ R0;
     6f6:	63 9e       	I3 += M0;
     6f8:	20 34       	M0 = R0;
     6fa:	4a 56       	R1 = R2 | R1;
     6fc:	59 58       	R1 = R1 ^ R3;
     6fe:	4f 50       	R1 = R7 + R1;
     700:	82 c6 79 8e 	R7 = R1 << 0xf;
     704:	89 4e       	R1 >>= 0x11;
     706:	63 9e       	I3 += M0;
     708:	79 56       	R1 = R1 | R7;
     70a:	bb 30       	R7 = I3;
     70c:	53 e1 5b 65 	I3.H = 0x655b;		/* (25947)	I3=0x655b0000(1700462592) */
     710:	13 e1 c3 59 	I3.L = 0x59c3;		/* (22979)	I3=0x655b59c3(1700485571) */
     714:	a3 34       	M0 = I3;
     716:	51 50       	R1 = R1 + R2;
     718:	d8 43       	R0 =~ R3;
     71a:	62 9e       	I2 += M0;
     71c:	23 34       	M0 = R3;
     71e:	01 56       	R0 = R1 | R0;
     720:	10 58       	R0 = R0 ^ R2;
     722:	07 50       	R0 = R7 + R0;
     724:	82 c6 a8 8e 	R7 = R0 << 0x15;
     728:	58 4e       	R0 >>= 0xb;
     72a:	62 9e       	I2 += M0;
     72c:	38 56       	R0 = R0 | R7;
     72e:	ba 30       	R7 = I2;
     730:	52 e1 0c 8f 	I2.H = 0x8f0c;		/* (-28916)	I2=0x8f0c0064(-1895038876) */
     734:	08 50       	R0 = R0 + R1;
     736:	d3 43       	R3 =~ R2;
     738:	12 e1 92 cc 	I2.L = 0xcc92;		/* (-13166)	I2=0x8f0ccc92(-1894986606) */
     73c:	d8 56       	R3 = R0 | R3;
     73e:	a2 34       	M0 = I2;
     740:	cb 58       	R3 = R3 ^ R1;
     742:	61 9e       	I1 += M0;
     744:	22 34       	M0 = R2;
     746:	df 50       	R3 = R7 + R3;
     748:	82 c6 33 8e 	R7 = R3 << 0x6;
     74c:	d3 4e       	R3 >>= 0x1a;
     74e:	fb 56       	R3 = R3 | R7;
     750:	c3 50       	R3 = R3 + R0;
     752:	ca 43       	R2 =~ R1;
     754:	61 9e       	I1 += M0;
     756:	93 56       	R2 = R3 | R2;
     758:	b9 30       	R7 = I1;
     75a:	82 58       	R2 = R2 ^ R0;
     75c:	97 50       	R2 = R7 + R2;
     75e:	82 c6 52 8e 	R7 = R2 << 0xa;
     762:	b2 4e       	R2 >>= 0x16;
     764:	ba 56       	R2 = R2 | R7;
     766:	8f a2       	R7 = [P1 + 0x28];
     768:	07 34       	I0 = R7;
     76a:	51 e1 ef ff 	I1.H = 0xffef;		/* (-17)	I1=0xffef0000(-1114112) */
     76e:	11 e1 7d f4 	I1.L = 0xf47d;		/* (-2947)	I1=0xffeff47d(-1051523) */
     772:	a1 34       	M0 = I1;
     774:	9a 50       	R2 = R2 + R3;
     776:	60 9e       	I0 += M0;
     778:	21 34       	M0 = R1;
     77a:	c1 43       	R1 =~ R0;
     77c:	4a 56       	R1 = R2 | R1;
     77e:	59 58       	R1 = R1 ^ R3;
     780:	60 9e       	I0 += M0;
     782:	b8 30       	R7 = I0;
     784:	24 34       	M0 = R4;
     786:	4f 50       	R1 = R7 + R1;
     788:	82 c6 79 8e 	R7 = R1 << 0xf;
     78c:	89 4e       	R1 >>= 0x11;
     78e:	50 e1 84 85 	I0.H = 0x8584;		/* (-31356)	I0=0x85840000(-2054946816) */
     792:	79 56       	R1 = R1 | R7;
     794:	10 e1 d1 5d 	I0.L = 0x5dd1;		/* (24017)	I0=0x85845dd1(-2054922799) */
     798:	51 50       	R1 = R1 + R2;
     79a:	60 9e       	I0 += M0;
     79c:	dc 43       	R4 =~ R3;
     79e:	b8 30       	R7 = I0;
     7a0:	21 57       	R4 = R1 | R4;
     7a2:	14 59       	R4 = R4 ^ R2;
     7a4:	25 34       	M0 = R5;
     7a6:	07 50       	R0 = R7 + R0;
     7a8:	20 50       	R0 = R0 + R4;
     7aa:	82 c6 a8 88 	R4 = R0 << 0x15;
     7ae:	58 4e       	R0 >>= 0xb;
     7b0:	50 e1 a8 6f 	I0.H = 0x6fa8;		/* (28584)	I0=0x6fa85dd1(1873305041) */
     7b4:	20 56       	R0 = R0 | R4;
     7b6:	10 e1 4f 7e 	I0.L = 0x7e4f;		/* (32335)	I0=0x6fa87e4f(1873313359) */
     7ba:	08 50       	R0 = R0 + R1;
     7bc:	60 9e       	I0 += M0;
     7be:	d4 43       	R4 =~ R2;
     7c0:	a8 30       	R5 = I0;
     7c2:	26 34       	M0 = R6;
     7c4:	20 57       	R4 = R0 | R4;
     7c6:	dd 50       	R3 = R5 + R3;
     7c8:	0c 59       	R4 = R4 ^ R1;
     7ca:	e3 50       	R3 = R3 + R4;
     7cc:	82 c6 33 8a 	R5 = R3 << 0x6;
     7d0:	50 e1 2c fe 	I0.H = 0xfe2c;		/* (-468)	I0=0xfe2c7e4f(-30638513) */
     7d4:	d3 4e       	R3 >>= 0x1a;
     7d6:	10 e1 e0 e6 	I0.L = 0xe6e0;		/* (-6432)	I0=0xfe2ce6e0(-30611744) */
     7da:	60 9e       	I0 += M0;
     7dc:	eb 56       	R3 = R3 | R5;
     7de:	a8 30       	R5 = I0;
     7e0:	95 50       	R2 = R5 + R2;
     7e2:	c3 50       	R3 = R3 + R0;
     7e4:	cd 43       	R5 =~ R1;
     7e6:	6b 57       	R5 = R3 | R5;
     7e8:	45 59       	R5 = R5 ^ R0;
     7ea:	aa 50       	R2 = R2 + R5;
     7ec:	8d a1       	R5 = [P1 + 0x18];
     7ee:	25 34       	M0 = R5;
     7f0:	82 c6 52 8c 	R6 = R2 << 0xa;
     7f4:	50 e1 01 a3 	I0.H = 0xa301;		/* (-23807)	I0=0xa301e6e0(-1560156448) */
     7f8:	b2 4e       	R2 >>= 0x16;
     7fa:	10 e1 14 43 	I0.L = 0x4314;		/* (17172)	I0=0xa3014314(-1560198380) */
     7fe:	b2 56       	R2 = R2 | R6;
     800:	60 9e       	I0 += M0;
     802:	b0 30       	R6 = I0;
     804:	4e 50       	R1 = R6 + R1;
     806:	9a 50       	R2 = R2 + R3;
     808:	c6 43       	R6 =~ R0;
     80a:	b2 57       	R6 = R2 | R6;
     80c:	9e 59       	R6 = R6 ^ R3;
     80e:	71 50       	R1 = R1 + R6;
     810:	82 c6 79 8e 	R7 = R1 << 0xf;
     814:	89 4e       	R1 >>= 0x11;
     816:	79 56       	R1 = R1 | R7;
     818:	47 e1 08 4e 	R7.H = 0x4e08;		/* (19976)	R7=0x4e084613(1309165075) */
     81c:	07 e1 a1 11 	R7.L = 0x11a1;		/* (4513)	R7=0x4e0811a1(1309151649) */
     820:	07 32       	P0 = R7;
     822:	51 50       	R1 = R1 + R2;
     824:	df 43       	R7 =~ R3;
     826:	f9 57       	R7 = R1 | R7;
     828:	d7 59       	R7 = R7 ^ R2;
     82a:	c7 5b       	FP = FP + P0;
     82c:	6f 30       	R5 = FP;
     82e:	05 50       	R0 = R5 + R0;
     830:	38 50       	R0 = R0 + R7;
     832:	82 c6 a8 8e 	R7 = R0 << 0x15;
     836:	88 ac       	P0 = [P1 + 0x8];
     838:	58 4e       	R0 >>= 0xb;
     83a:	4f e1 53 f7 	FP.H = 0xf753;		/* (-2221)	FP=0xf753d7be */
     83e:	38 56       	R0 = R0 | R7;
     840:	0f e1 82 7e 	FP.L = 0x7e82;		/* (32386)	FP=0xf7537e82 */
     844:	08 50       	R0 = R0 + R1;
     846:	fb 5a       	P3 = P3 + FP;
     848:	d7 43       	R7 =~ R2;
     84a:	73 30       	R6 = P3;
     84c:	f8 57       	R7 = R0 | R7;
     84e:	cf 59       	R7 = R7 ^ R1;
     850:	de 50       	R3 = R6 + R3;
     852:	fb 50       	R3 = R3 + R7;
     854:	82 c6 33 8e 	R7 = R3 << 0x6;
     858:	4b e1 3a bd 	P3.H = 0xbd3a;		/* (-17094)	P3=0xbd3a0000 */
     85c:	d3 4e       	R3 >>= 0x1a;
     85e:	0b e1 35 f2 	P3.L = 0xf235;		/* (-3531)	P3=0xbd3af235 */
     862:	fb 56       	R3 = R3 | R7;
     864:	1c 5b       	P4 = P4 + P3;
     866:	7c 30       	R7 = P4;
     868:	97 50       	R2 = R7 + R2;
     86a:	c3 50       	R3 = R3 + R0;
     86c:	cf 43       	R7 =~ R1;
     86e:	fb 57       	R7 = R3 | R7;
     870:	c7 59       	R7 = R7 ^ R0;
     872:	ba 50       	R2 = R2 + R7;
     874:	82 c6 52 8e 	R7 = R2 << 0xa;
     878:	b2 4e       	R2 >>= 0x16;
     87a:	4c e1 d7 2a 	P4.H = 0x2ad7;		/* (10967)	P4=0x2ad75bb1 */
     87e:	ba 56       	R2 = R2 | R7;
     880:	0c e1 bb d2 	P4.L = 0xd2bb;		/* (-11589)	P4=0x2ad7d2bb */
     884:	9a 50       	R2 = R2 + R3;
     886:	60 5b       	P5 = P0 + P4;
     888:	c7 43       	R7 =~ R0;
     88a:	6d 30       	R5 = P5;
     88c:	fa 57       	R7 = R2 | R7;
     88e:	df 59       	R7 = R7 ^ R3;
     890:	4d 50       	R1 = R5 + R1;
     892:	4c ae       	P4 = [P1 + 0x24];
     894:	79 50       	R1 = R1 + R7;
     896:	82 c6 79 8e 	R7 = R1 << 0xf;
     89a:	89 4e       	R1 >>= 0x11;
     89c:	4d e1 86 eb 	P5.H = 0xeb86;		/* (-5242)	P5=0xeb86f7af */
     8a0:	79 56       	R1 = R1 | R7;
     8a2:	0d e1 91 d3 	P5.L = 0xd391;		/* (-11375)	P5=0xeb86d391 */
     8a6:	51 50       	R1 = R1 + R2;
     8a8:	2c 5a       	P0 = P4 + P5;
     8aa:	df 43       	R7 =~ R3;
     8ac:	68 30       	R5 = P0;
     8ae:	f9 57       	R7 = R1 | R7;
     8b0:	d7 59       	R7 = R7 ^ R2;
     8b2:	05 50       	R0 = R5 + R0;
     8b4:	b8 51       	R6 = R0 + R7;
     8b6:	82 c6 ae 80 	R0 = R6 << 0x15;
     8ba:	17 91       	R7 = [P2];
     8bc:	5e 4e       	R6 >>= 0xb;
     8be:	86 57       	R6 = R6 | R0;
     8c0:	50 a0       	R0 = [P2 + 0x4];
     8c2:	fb 51       	R7 = R3 + R7;
     8c4:	01 50       	R0 = R1 + R0;
     8c6:	93 a0       	R3 = [P2 + 0x8];
     8c8:	30 50       	R0 = R0 + R6;
     8ca:	59 50       	R1 = R1 + R3;
     8cc:	17 93       	[P2] = R7;
     8ce:	50 b0       	[P2 + 0x4] = R0;
     8d0:	91 b0       	[P2 + 0x8] = R1;
     8d2:	d3 a0       	R3 = [P2 + 0xc];
     8d4:	9a 50       	R2 = R2 + R3;
     8d6:	28 e1 40 00 	P0 = 0x40 (X);		/*		P0=0x40( 64) */
     8da:	d2 b0       	[P2 + 0xc] = R2;
     8dc:	41 5a       	P1 = P1 + P0;
     8de:	f2 30       	R6 = B2;
     8e0:	fe 67       	R6 += -0x1;		/* ( -1) */
     8e2:	16 36       	B2 = R6;
     8e4:	3e 0c       	CC = R6 == -0x1;
     8e6:	02 18       	IF CC JUMP 0x8ea <_md5_block_host_order+0x8b2>;
     8e8:	ba 2b       	JUMP.S 0x5c <_md5_block_host_order+0x24>;
     8ea:	77 90       	FP = [SP++];
     8ec:	a3 05       	(R7:4, P5:3) = [SP++];
     8ee:	10 00       	RTS;

000008f0 <_MD5_Final>:
_MD5_Final():
     8f0:	fb 05       	[--SP] = (R7:7, P5:3);
     8f2:	29 32       	P5 = R1;
     8f4:	20 32       	P4 = R0;
     8f6:	39 30       	R7 = R1;
     8f8:	67 01       	[--SP] = RETS;
     8fa:	a6 6f       	SP += -0xc;		/* (-12) */
     8fc:	28 e4 16 00 	R0 = [P5 + 0x58];
     900:	82 c6 f0 03 	R1 = R0 >>> 0x2;
     904:	11 32       	P2 = R1;
     906:	19 60       	R1 = 0x3 (X);		/*		R1=0x3(  3) */
     908:	48 54       	R1 = R0 & R1;
     90a:	c7 64       	R7 += 0x18;		/* ( 24) */
     90c:	01 0c       	CC = R1 == 0x0;
     90e:	08 1c       	IF CC JUMP 0x91e <_MD5_Final+0x2e> (BP);
     910:	55 5e       	P1 = P5 + (P2 << 0x2);
     912:	88 a1       	R0 = [P1 + 0x18];
     914:	11 0c       	CC = R1 == 0x2;
     916:	17 18       	IF CC JUMP 0x944 <_MD5_Final+0x54>;
     918:	19 0c       	CC = R1 == 0x3;
     91a:	0a 14       	IF !CC JUMP 0x92e <_MD5_Final+0x3e> (BP);
     91c:	1c 20       	JUMP.S 0x954 <_MD5_Final+0x64>;
     91e:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x380 */
     922:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
     924:	09 e1 42 00 	P1.L = 0x42;		/* ( 66)	P1=0x42 */
     928:	20 e1 80 00 	R0 = 0x80 (X);		/*		R0=0x80(128) */
     92c:	07 20       	JUMP.S 0x93a <_MD5_Final+0x4a>;
     92e:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x42 */
     932:	21 e1 80 ff 	R1 = -0x80 (X);		/*		R1=0xffffff80(-128) */
     936:	09 e1 41 00 	P1.L = 0x41;		/* ( 65)	P1=0x41 */
     93a:	49 43       	R1 = R1.B (Z);
     93c:	41 4f       	R1 <<= 0x8;
     93e:	08 56       	R0 = R0 | R1;
     940:	09 6c       	P1 += 0x1;		/* (  1) */
     942:	05 20       	JUMP.S 0x94c <_MD5_Final+0x5c>;
     944:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x41 */
     948:	09 e1 41 00 	P1.L = 0x41;		/* ( 65)	P1=0x41 */
     94c:	09 98       	R1 = B[P1++] (Z);
     94e:	81 4f       	R1 <<= 0x10;
     950:	08 56       	R0 = R0 | R1;
     952:	05 20       	JUMP.S 0x95c <_MD5_Final+0x6c>;
     954:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x41 */
     958:	09 e1 41 00 	P1.L = 0x41;		/* ( 65)	P1=0x41 */
     95c:	09 99       	R1 = B[P1] (Z);
     95e:	15 5e       	P0 = P5 + (P2 << 0x2);
     960:	c1 4f       	R1 <<= 0x18;
     962:	01 56       	R0 = R1 | R0;
     964:	0a 6c       	P2 += 0x1;		/* (  1) */
     966:	71 68       	P1 = 0xe (X);		/*		P1=0xe( 14) */
     968:	80 b1       	[P0 + 0x18] = R0;
     96a:	4a 09       	CC = P2 <= P1;
     96c:	0d 1c       	IF CC JUMP 0x986 <_MD5_Final+0x96> (BP);
     96e:	7b 68       	P3 = 0xf (X);		/*		P3=0xf( 15) */
     970:	5a 08       	CC = P2 == P3;
     972:	04 14       	IF !CC JUMP 0x97a <_MD5_Final+0x8a> (BP);
     974:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     976:	28 e6 15 00 	[P5 + 0x54] = R0;
     97a:	45 30       	R0 = P5;
     97c:	0f 30       	R1 = R7;
     97e:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
     980:	ff e3 5c fb 	CALL 0x38 <_md5_block_host_order>;
     984:	02 68       	P2 = 0x0 (X);		/*		P2=0x0(  0) */
     986:	42 32       	P0 = P2;
     988:	79 68       	P1 = 0xf (X);		/*		P1=0xf( 15) */
     98a:	73 68       	P3 = 0xe (X);		/*		P3=0xe( 14) */
     98c:	30 6c       	P0 += 0x6;		/* (  6) */
     98e:	11 44       	P1 -= P2;
     990:	5a 09       	CC = P2 <= P3;
     992:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
     994:	05 5e       	P0 = P5 + (P0 << 0x2);
     996:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
     998:	88 06       	IF !CC P1 = R0;
     99a:	b3 e0 04 10 	LSETUP(0x9a0 <_MD5_Final+0xb0>, 0x9a2 <_MD5_Final+0xb2>) LC1 = P1;
     99e:	02 20       	JUMP.S 0x9a2 <_MD5_Final+0xb2>;
     9a0:	01 92       	[P0++] = R1;
     9a2:	00 00       	NOP;
     9a4:	28 a1       	R0 = [P5 + 0x10];
     9a6:	28 e6 14 00 	[P5 + 0x50] = R0;
     9aa:	68 a1       	R0 = [P5 + 0x14];
     9ac:	28 e6 15 00 	[P5 + 0x54] = R0;
     9b0:	45 30       	R0 = P5;
     9b2:	0f 30       	R1 = R7;
     9b4:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
     9b6:	ff e3 41 fb 	CALL 0x38 <_md5_block_host_order>;
     9ba:	28 91       	R0 = [P5];
     9bc:	54 32       	P2 = P4;
     9be:	10 9a       	B[P2++] = R0;
     9c0:	82 c6 c0 83 	R1 = R0 >> 0x8;
     9c4:	a1 e6 01 00 	B[P4 + 0x1] = R1;
     9c8:	82 c6 80 83 	R1 = R0 >> 0x10;
     9cc:	4a 32       	P1 = P2;
     9ce:	91 e6 01 00 	B[P2 + 0x1] = R1;
     9d2:	09 6c       	P1 += 0x1;		/* (  1) */
     9d4:	c0 4e       	R0 >>= 0x18;
     9d6:	88 e6 01 00 	B[P1 + 0x1] = R0;
     9da:	68 a0       	R0 = [P5 + 0x4];
     9dc:	12 6c       	P2 += 0x2;		/* (  2) */
     9de:	90 e6 01 00 	B[P2 + 0x1] = R0;
     9e2:	82 c6 c0 83 	R1 = R0 >> 0x8;
     9e6:	11 6c       	P1 += 0x2;		/* (  2) */
     9e8:	89 e6 01 00 	B[P1 + 0x1] = R1;
     9ec:	82 c6 80 83 	R1 = R0 >> 0x10;
     9f0:	12 6c       	P2 += 0x2;		/* (  2) */
     9f2:	91 e6 01 00 	B[P2 + 0x1] = R1;
     9f6:	11 6c       	P1 += 0x2;		/* (  2) */
     9f8:	c0 4e       	R0 >>= 0x18;
     9fa:	88 e6 01 00 	B[P1 + 0x1] = R0;
     9fe:	a8 a0       	R0 = [P5 + 0x8];
     a00:	12 6c       	P2 += 0x2;		/* (  2) */
     a02:	90 e6 01 00 	B[P2 + 0x1] = R0;
     a06:	82 c6 c0 83 	R1 = R0 >> 0x8;
     a0a:	11 6c       	P1 += 0x2;		/* (  2) */
     a0c:	89 e6 01 00 	B[P1 + 0x1] = R1;
     a10:	82 c6 80 83 	R1 = R0 >> 0x10;
     a14:	12 6c       	P2 += 0x2;		/* (  2) */
     a16:	91 e6 01 00 	B[P2 + 0x1] = R1;
     a1a:	11 6c       	P1 += 0x2;		/* (  2) */
     a1c:	c0 4e       	R0 >>= 0x18;
     a1e:	88 e6 01 00 	B[P1 + 0x1] = R0;
     a22:	e8 a0       	R0 = [P5 + 0xc];
     a24:	12 6c       	P2 += 0x2;		/* (  2) */
     a26:	90 e6 01 00 	B[P2 + 0x1] = R0;
     a2a:	82 c6 c0 83 	R1 = R0 >> 0x8;
     a2e:	11 6c       	P1 += 0x2;		/* (  2) */
     a30:	89 e6 01 00 	B[P1 + 0x1] = R1;
     a34:	82 c6 80 83 	R1 = R0 >> 0x10;
     a38:	12 6c       	P2 += 0x2;		/* (  2) */
     a3a:	c0 4e       	R0 >>= 0x18;
     a3c:	90 e6 02 00 	B[P2 + 0x2] = R0;
     a40:	91 e6 01 00 	B[P2 + 0x1] = R1;
     a44:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     a46:	66 6c       	SP += 0xc;		/* ( 12) */
     a48:	28 e6 16 00 	[P5 + 0x58] = R0;
     a4c:	27 01       	RETS = [SP++];
     a4e:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
     a50:	bb 05       	(R7:7, P5:3) = [SP++];
     a52:	10 00       	RTS;

00000a54 <_md5_block_data_order>:
_md5_block_data_order():
     a54:	1a 34       	I3 = R2;
     a56:	10 32       	P2 = R0;
     a58:	e3 05       	[--SP] = (R7:4, P5:3);
     a5a:	4f 01       	[--SP] = FP;
     a5c:	46 6f       	SP += -0x18;		/* (-24) */
     a5e:	09 32       	P1 = R1;
     a60:	59 e1 6a d7 	B1.H = 0xd76a;		/* (-10390)	B1=0xd76a23a7(-680909913) */
     a64:	58 e1 c7 e8 	B0.H = 0xe8c7;		/* (-5945)	B0=0xe8c7a039(-389570503) */
     a68:	ab 30       	R5 = I3;
     a6a:	10 91       	R0 = [P2];
     a6c:	51 a0       	R1 = [P2 + 0x4];
     a6e:	92 a0       	R2 = [P2 + 0x8];
     a70:	d3 a0       	R3 = [P2 + 0xc];
     a72:	19 e1 78 a4 	B1.L = 0xa478;		/* (-23432)	B1=0xd76aa478(-680876936) */
     a76:	18 e1 56 b7 	B0.L = 0xb756;		/* (-18602)	B0=0xe8c7b756(-389564586) */
     a7a:	35 93       	[SP] = R5;
     a7c:	49 25       	JUMP.S 0x150e <_md5_block_data_order+0xaba>;
     a7e:	e1 30       	R4 = B1;
     a80:	8d e4 01 00 	R5 = B[P1 + 0x1] (Z);
     a84:	8e e4 02 00 	R6 = B[P1 + 0x2] (Z);
     a88:	45 4f       	R5 <<= 0x8;
     a8a:	86 4f       	R6 <<= 0x10;
     a8c:	0f 99       	R7 = B[P1] (Z);
     a8e:	b5 57       	R6 = R5 | R6;
     a90:	be 57       	R6 = R6 | R7;
     a92:	8f e4 03 00 	R7 = B[P1 + 0x3] (Z);
     a96:	c7 4f       	R7 <<= 0x18;
     a98:	fe 57       	R7 = R6 | R7;
     a9a:	8d e4 05 00 	R5 = B[P1 + 0x5] (Z);
     a9e:	8e e4 06 00 	R6 = B[P1 + 0x6] (Z);
     aa2:	0f 34       	I1 = R7;
     aa4:	45 4f       	R5 <<= 0x8;
     aa6:	86 4f       	R6 <<= 0x10;
     aa8:	8f e4 04 00 	R7 = B[P1 + 0x4] (Z);
     aac:	b5 57       	R6 = R5 | R6;
     aae:	be 57       	R6 = R6 | R7;
     ab0:	8f e4 07 00 	R7 = B[P1 + 0x7] (Z);
     ab4:	c7 4f       	R7 <<= 0x18;
     ab6:	fe 57       	R7 = R6 | R7;
     ab8:	3f 34       	M3 = R7;
     aba:	b1 30       	R6 = I1;
     abc:	e6 51       	R7 = R6 + R4;
     abe:	07 50       	R0 = R7 + R0;
     ac0:	d3 59       	R7 = R3 ^ R2;
     ac2:	cf 55       	R7 = R7 & R1;
     ac4:	df 59       	R7 = R7 ^ R3;
     ac6:	38 50       	R0 = R0 + R7;
     ac8:	82 c6 38 8e 	R7 = R0 << 0x7;
     acc:	8d e4 09 00 	R5 = B[P1 + 0x9] (Z);
     ad0:	8e e4 0a 00 	R6 = B[P1 + 0xa] (Z);
     ad4:	c8 4e       	R0 >>= 0x19;
     ad6:	38 56       	R0 = R0 | R7;
     ad8:	45 4f       	R5 <<= 0x8;
     ada:	86 4f       	R6 <<= 0x10;
     adc:	8f e4 08 00 	R7 = B[P1 + 0x8] (Z);
     ae0:	b5 57       	R6 = R5 | R6;
     ae2:	be 57       	R6 = R6 | R7;
     ae4:	8f e4 0b 00 	R7 = B[P1 + 0xb] (Z);
     ae8:	c7 4f       	R7 <<= 0x18;
     aea:	fe 57       	R7 = R6 | R7;
     aec:	77 b1       	[SP + 0x14] = R7;
     aee:	af 30       	R5 = M3;
     af0:	f0 30       	R6 = B0;
     af2:	f5 51       	R7 = R5 + R6;
     af4:	df 50       	R3 = R7 + R3;
     af6:	08 50       	R0 = R0 + R1;
     af8:	ca 59       	R7 = R2 ^ R1;
     afa:	f8 55       	R7 = R0 & R7;
     afc:	d7 59       	R7 = R7 ^ R2;
     afe:	fb 50       	R3 = R3 + R7;
     b00:	82 c6 63 8e 	R7 = R3 << 0xc;
     b04:	74 a1       	R4 = [SP + 0x14];
     b06:	8d e4 0d 00 	R5 = B[P1 + 0xd] (Z);
     b0a:	8e e4 0e 00 	R6 = B[P1 + 0xe] (Z);
     b0e:	a3 4e       	R3 >>= 0x14;
     b10:	fb 56       	R3 = R3 | R7;
     b12:	45 4f       	R5 <<= 0x8;
     b14:	86 4f       	R6 <<= 0x10;
     b16:	8f e4 0c 00 	R7 = B[P1 + 0xc] (Z);
     b1a:	b5 57       	R6 = R5 | R6;
     b1c:	be 57       	R6 = R6 | R7;
     b1e:	8f e4 0f 00 	R7 = B[P1 + 0xf] (Z);
     b22:	c7 4f       	R7 <<= 0x18;
     b24:	fe 57       	R7 = R6 | R7;
     b26:	45 e1 20 24 	R5.H = 0x2420;		/* (9248)	R5=0x24209501(606115073) */
     b2a:	37 b1       	[SP + 0x10] = R7;
     b2c:	05 e1 db 70 	R5.L = 0x70db;		/* (28891)	R5=0x242070db(606105819) */
     b30:	ec 51       	R7 = R4 + R5;
     b32:	97 50       	R2 = R7 + R2;
     b34:	c3 50       	R3 = R3 + R0;
     b36:	c8 59       	R7 = R0 ^ R1;
     b38:	fb 55       	R7 = R3 & R7;
     b3a:	cf 59       	R7 = R7 ^ R1;
     b3c:	ba 50       	R2 = R2 + R7;
     b3e:	82 c6 8a 8e 	R7 = R2 << 0x11;
     b42:	36 a1       	R6 = [SP + 0x10];
     b44:	8c e4 11 00 	R4 = B[P1 + 0x11] (Z);
     b48:	8d e4 12 00 	R5 = B[P1 + 0x12] (Z);
     b4c:	7a 4e       	R2 >>= 0xf;
     b4e:	ba 56       	R2 = R2 | R7;
     b50:	44 4f       	R4 <<= 0x8;
     b52:	85 4f       	R5 <<= 0x10;
     b54:	8f e4 10 00 	R7 = B[P1 + 0x10] (Z);
     b58:	6c 57       	R5 = R4 | R5;
     b5a:	7d 57       	R5 = R5 | R7;
     b5c:	8f e4 13 00 	R7 = B[P1 + 0x13] (Z);
     b60:	c7 4f       	R7 <<= 0x18;
     b62:	fd 57       	R7 = R5 | R7;
     b64:	44 e1 bd c1 	R4.H = 0xc1bd;		/* (-15939)	R4=0xc1bd0340(-1044577472) */
     b68:	f7 b0       	[SP + 0xc] = R7;
     b6a:	04 e1 ee ce 	R4.L = 0xceee;		/* (-12562)	R4=0xc1bdceee(-1044525330) */
     b6e:	e6 51       	R7 = R6 + R4;
     b70:	4f 50       	R1 = R7 + R1;
     b72:	9a 50       	R2 = R2 + R3;
     b74:	c3 59       	R7 = R3 ^ R0;
     b76:	fa 55       	R7 = R2 & R7;
     b78:	c7 59       	R7 = R7 ^ R0;
     b7a:	79 50       	R1 = R1 + R7;
     b7c:	82 c6 b1 8e 	R7 = R1 << 0x16;
     b80:	8c e4 15 00 	R4 = B[P1 + 0x15] (Z);
     b84:	8d e4 16 00 	R5 = B[P1 + 0x16] (Z);
     b88:	51 4e       	R1 >>= 0xa;
     b8a:	79 56       	R1 = R1 | R7;
     b8c:	85 4f       	R5 <<= 0x10;
     b8e:	44 4f       	R4 <<= 0x8;
     b90:	8f e4 14 00 	R7 = B[P1 + 0x14] (Z);
     b94:	2c 57       	R4 = R4 | R5;
     b96:	3c 57       	R4 = R4 | R7;
     b98:	8f e4 17 00 	R7 = B[P1 + 0x17] (Z);
     b9c:	c7 4f       	R7 <<= 0x18;
     b9e:	fc 57       	R7 = R4 | R7;
     ba0:	b7 b0       	[SP + 0x8] = R7;
     ba2:	47 e1 7c f5 	R7.H = 0xf57c;		/* (-2692)	R7=0xf57c11a1(-176418399) */
     ba6:	f5 a0       	R5 = [SP + 0xc];
     ba8:	07 e1 af 0f 	R7.L = 0xfaf;		/* (4015)	R7=0xf57c0faf(-176418897) */
     bac:	bd 51       	R6 = R5 + R7;
     bae:	8d e4 19 00 	R5 = B[P1 + 0x19] (Z);
     bb2:	51 50       	R1 = R1 + R2;
     bb4:	da 59       	R7 = R2 ^ R3;
     bb6:	45 4f       	R5 <<= 0x8;
     bb8:	25 34       	M0 = R5;
     bba:	f9 55       	R7 = R1 & R7;
     bbc:	df 59       	R7 = R7 ^ R3;
     bbe:	06 50       	R0 = R6 + R0;
     bc0:	38 50       	R0 = R0 + R7;
     bc2:	82 c6 38 8e 	R7 = R0 << 0x7;
     bc6:	8d e4 1a 00 	R5 = B[P1 + 0x1a] (Z);
     bca:	c8 4e       	R0 >>= 0x19;
     bcc:	a4 30       	R4 = M0;
     bce:	38 56       	R0 = R0 | R7;
     bd0:	85 4f       	R5 <<= 0x10;
     bd2:	8e e4 18 00 	R6 = B[P1 + 0x18] (Z);
     bd6:	8f e4 1b 00 	R7 = B[P1 + 0x1b] (Z);
     bda:	6c 57       	R5 = R4 | R5;
     bdc:	75 57       	R5 = R5 | R6;
     bde:	c7 4f       	R7 <<= 0x18;
     be0:	fd 57       	R7 = R5 | R7;
     be2:	77 b0       	[SP + 0x4] = R7;
     be4:	46 e1 87 47 	R6.H = 0x4787;		/* (18311)	R6=0x4787438e(1200046990) */
     be8:	b5 a0       	R5 = [SP + 0x8];
     bea:	06 e1 2a c6 	R6.L = 0xc62a;		/* (-14806)	R6=0x4787c62a(1200080426) */
     bee:	f5 51       	R7 = R5 + R6;
     bf0:	df 50       	R3 = R7 + R3;
     bf2:	08 50       	R0 = R0 + R1;
     bf4:	d1 59       	R7 = R1 ^ R2;
     bf6:	8d e4 1d 00 	R5 = B[P1 + 0x1d] (Z);
     bfa:	f8 55       	R7 = R0 & R7;
     bfc:	45 4f       	R5 <<= 0x8;
     bfe:	d7 59       	R7 = R7 ^ R2;
     c00:	15 34       	I2 = R5;
     c02:	fb 50       	R3 = R3 + R7;
     c04:	82 c6 63 8e 	R7 = R3 << 0xc;
     c08:	74 a0       	R4 = [SP + 0x4];
     c0a:	a3 4e       	R3 >>= 0x14;
     c0c:	8d e4 1e 00 	R5 = B[P1 + 0x1e] (Z);
     c10:	fb 56       	R3 = R3 | R7;
     c12:	ba 30       	R7 = I2;
     c14:	85 4f       	R5 <<= 0x10;
     c16:	6f 57       	R5 = R7 | R5;
     c18:	8e e4 1c 00 	R6 = B[P1 + 0x1c] (Z);
     c1c:	8f e4 1f 00 	R7 = B[P1 + 0x1f] (Z);
     c20:	75 57       	R5 = R5 | R6;
     c22:	c7 4f       	R7 <<= 0x18;
     c24:	fd 57       	R7 = R5 | R7;
     c26:	45 e1 30 a8 	R5.H = 0xa830;		/* (-22480)	R5=0xa83070db(-1473220389) */
     c2a:	05 e1 13 46 	R5.L = 0x4613;		/* (17939)	R5=0xa8304613(-1473231341) */
     c2e:	17 34       	I2 = R7;
     c30:	ac 51       	R6 = R4 + R5;
     c32:	c3 50       	R3 = R3 + R0;
     c34:	c8 59       	R7 = R0 ^ R1;
     c36:	8d e4 21 00 	R5 = B[P1 + 0x21] (Z);
     c3a:	fb 55       	R7 = R3 & R7;
     c3c:	45 4f       	R5 <<= 0x8;
     c3e:	cf 59       	R7 = R7 ^ R1;
     c40:	35 34       	M2 = R5;
     c42:	96 50       	R2 = R6 + R2;
     c44:	ba 50       	R2 = R2 + R7;
     c46:	82 c6 8a 8e 	R7 = R2 << 0x11;
     c4a:	7a 4e       	R2 >>= 0xf;
     c4c:	8d e4 22 00 	R5 = B[P1 + 0x22] (Z);
     c50:	ba 56       	R2 = R2 | R7;
     c52:	be 30       	R7 = M2;
     c54:	85 4f       	R5 <<= 0x10;
     c56:	6f 57       	R5 = R7 | R5;
     c58:	8e e4 20 00 	R6 = B[P1 + 0x20] (Z);
     c5c:	8f e4 23 00 	R7 = B[P1 + 0x23] (Z);
     c60:	75 57       	R5 = R5 | R6;
     c62:	c7 4f       	R7 <<= 0x18;
     c64:	fd 57       	R7 = R5 | R7;
     c66:	45 e1 46 fd 	R5.H = 0xfd46;		/* (-698)	R5=0xfd464613(-45726189) */
     c6a:	a2 30       	R4 = I2;
     c6c:	05 e1 01 95 	R5.L = 0x9501;		/* (-27391)	R5=0xfd469501(-45705983) */
     c70:	37 34       	M2 = R7;
     c72:	ac 51       	R6 = R4 + R5;
     c74:	9a 50       	R2 = R2 + R3;
     c76:	c3 59       	R7 = R3 ^ R0;
     c78:	8d e4 25 00 	R5 = B[P1 + 0x25] (Z);
     c7c:	fa 55       	R7 = R2 & R7;
     c7e:	45 4f       	R5 <<= 0x8;
     c80:	c7 59       	R7 = R7 ^ R0;
     c82:	05 32       	P0 = R5;
     c84:	4e 50       	R1 = R6 + R1;
     c86:	79 50       	R1 = R1 + R7;
     c88:	82 c6 b1 8e 	R7 = R1 << 0x16;
     c8c:	51 4e       	R1 >>= 0xa;
     c8e:	8d e4 26 00 	R5 = B[P1 + 0x26] (Z);
     c92:	79 56       	R1 = R1 | R7;
     c94:	78 30       	R7 = P0;
     c96:	85 4f       	R5 <<= 0x10;
     c98:	6f 57       	R5 = R7 | R5;
     c9a:	8e e4 24 00 	R6 = B[P1 + 0x24] (Z);
     c9e:	8f e4 27 00 	R7 = B[P1 + 0x27] (Z);
     ca2:	75 57       	R5 = R5 | R6;
     ca4:	c7 4f       	R7 <<= 0x18;
     ca6:	fd 57       	R7 = R5 | R7;
     ca8:	07 32       	P0 = R7;
     caa:	45 e1 80 69 	R5.H = 0x6980;		/* (27008)	R5=0x69809501(1770034433) */
     cae:	51 50       	R1 = R1 + R2;
     cb0:	da 59       	R7 = R2 ^ R3;
     cb2:	a6 30       	R4 = M2;
     cb4:	05 e1 d8 98 	R5.L = 0x98d8;		/* (-26408)	R5=0x698098d8(1770035416) */
     cb8:	ac 51       	R6 = R4 + R5;
     cba:	f9 55       	R7 = R1 & R7;
     cbc:	df 59       	R7 = R7 ^ R3;
     cbe:	06 50       	R0 = R6 + R0;
     cc0:	38 50       	R0 = R0 + R7;
     cc2:	82 c6 38 8e 	R7 = R0 << 0x7;
     cc6:	c8 4e       	R0 >>= 0x19;
     cc8:	38 56       	R0 = R0 | R7;
     cca:	8f e4 29 00 	R7 = B[P1 + 0x29] (Z);
     cce:	47 4f       	R7 <<= 0x8;
     cd0:	27 32       	P4 = R7;
     cd2:	8f e4 2a 00 	R7 = B[P1 + 0x2a] (Z);
     cd6:	87 4f       	R7 <<= 0x10;
     cd8:	8e e4 28 00 	R6 = B[P1 + 0x28] (Z);
     cdc:	8d e4 2b 00 	R5 = B[P1 + 0x2b] (Z);
     ce0:	64 30       	R4 = P4;
     ce2:	fc 57       	R7 = R4 | R7;
     ce4:	f7 57       	R7 = R7 | R6;
     ce6:	c5 4f       	R5 <<= 0x18;
     ce8:	ef 57       	R7 = R7 | R5;
     cea:	46 e1 44 8b 	R6.H = 0x8b44;		/* (-29884)	R6=0x8b44c62a(-1958427094) */
     cee:	68 30       	R5 = P0;
     cf0:	06 e1 af f7 	R6.L = 0xf7af;		/* (-2129)	R6=0x8b44f7af(-1958414417) */
     cf4:	35 51       	R4 = R5 + R6;
     cf6:	08 50       	R0 = R0 + R1;
     cf8:	51 59       	R5 = R1 ^ R2;
     cfa:	68 55       	R5 = R0 & R5;
     cfc:	55 59       	R5 = R5 ^ R2;
     cfe:	dc 50       	R3 = R4 + R3;
     d00:	eb 50       	R3 = R3 + R5;
     d02:	82 c6 63 8a 	R5 = R3 << 0xc;
     d06:	a3 4e       	R3 >>= 0x14;
     d08:	eb 56       	R3 = R3 | R5;
     d0a:	8d e4 2d 00 	R5 = B[P1 + 0x2d] (Z);
     d0e:	8e e4 2e 00 	R6 = B[P1 + 0x2e] (Z);
     d12:	86 4f       	R6 <<= 0x10;
     d14:	45 4f       	R5 <<= 0x8;
     d16:	8c e4 2c 00 	R4 = B[P1 + 0x2c] (Z);
     d1a:	75 57       	R5 = R5 | R6;
     d1c:	65 57       	R5 = R5 | R4;
     d1e:	25 32       	P4 = R5;
     d20:	1f 32       	P3 = R7;
     d22:	8d e4 2f 00 	R5 = B[P1 + 0x2f] (Z);
     d26:	c5 4f       	R5 <<= 0x18;
     d28:	4d e1 ff ff 	P5.H = 0xffff;		/* ( -1)	P5=0xffffd391(-11375) */
     d2c:	64 30       	R4 = P4;
     d2e:	2c 57       	R4 = R4 | R5;
     d30:	0d e1 b1 5b 	P5.L = 0x5bb1;		/* (23473)	P5=0xffff5bb1(-42063) */
     d34:	c3 50       	R3 = R3 + R0;
     d36:	24 32       	P4 = R4;
     d38:	6b 5b       	P5 = P3 + P5;
     d3a:	48 59       	R5 = R0 ^ R1;
     d3c:	65 30       	R4 = P5;
     d3e:	6b 55       	R5 = R3 & R5;
     d40:	4d 59       	R5 = R5 ^ R1;
     d42:	94 50       	R2 = R4 + R2;
     d44:	aa 50       	R2 = R2 + R5;
     d46:	82 c6 8a 8a 	R5 = R2 << 0x11;
     d4a:	7a 4e       	R2 >>= 0xf;
     d4c:	aa 56       	R2 = R2 | R5;
     d4e:	8d e4 31 00 	R5 = B[P1 + 0x31] (Z);
     d52:	8e e4 32 00 	R6 = B[P1 + 0x32] (Z);
     d56:	86 4f       	R6 <<= 0x10;
     d58:	45 4f       	R5 <<= 0x8;
     d5a:	8c e4 30 00 	R4 = B[P1 + 0x30] (Z);
     d5e:	75 57       	R5 = R5 | R6;
     d60:	65 57       	R5 = R5 | R4;
     d62:	3d 32       	FP = R5;
     d64:	8d e4 33 00 	R5 = B[P1 + 0x33] (Z);
     d68:	c5 4f       	R5 <<= 0x18;
     d6a:	9a 50       	R2 = R2 + R3;
     d6c:	28 34       	M1 = R0;
     d6e:	67 30       	R4 = FP;
     d70:	4f e1 5c 89 	FP.H = 0x895c;		/* (-30372)	FP=0x895c7e82 */
     d74:	0f e1 be d7 	FP.L = 0xd7be;		/* (-10306)	FP=0x895cd7be */
     d78:	7c 5b       	P5 = P4 + FP;
     d7a:	6c 57       	R5 = R4 | R5;
     d7c:	75 30       	R6 = P5;
     d7e:	0e 51       	R4 = R6 + R1;
     d80:	43 58       	R1 = R3 ^ R0;
     d82:	4a 54       	R1 = R2 & R1;
     d84:	41 58       	R1 = R1 ^ R0;
     d86:	4c 50       	R1 = R4 + R1;
     d88:	8e e4 34 00 	R6 = B[P1 + 0x34] (Z);
     d8c:	82 c6 b1 88 	R4 = R1 << 0x16;
     d90:	06 34       	I0 = R6;
     d92:	51 4e       	R1 >>= 0xa;
     d94:	61 56       	R1 = R1 | R4;
     d96:	8c e4 35 00 	R4 = B[P1 + 0x35] (Z);
     d9a:	8e e4 36 00 	R6 = B[P1 + 0x36] (Z);
     d9e:	86 4f       	R6 <<= 0x10;
     da0:	44 4f       	R4 <<= 0x8;
     da2:	34 57       	R4 = R4 | R6;
     da4:	b0 30       	R6 = I0;
     da6:	34 57       	R4 = R4 | R6;
     da8:	3c 32       	FP = R4;
     daa:	25 34       	M0 = R5;
     dac:	50 e1 90 6b 	I0.H = 0x6b90;		/* (27536)	I0=0x6b904314(1804616468) */
     db0:	8c e4 37 00 	R4 = B[P1 + 0x37] (Z);
     db4:	10 e1 22 11 	I0.L = 0x1122;		/* (4386)	I0=0x6b901122(1804603682) */
     db8:	51 50       	R1 = R1 + R2;
     dba:	1a 58       	R0 = R2 ^ R3;
     dbc:	c4 4f       	R4 <<= 0x18;
     dbe:	77 30       	R6 = FP;
     dc0:	60 9e       	I0 += M0;
     dc2:	a6 57       	R6 = R6 | R4;
     dc4:	64 9e       	I0 += M1;
     dc6:	01 54       	R0 = R1 & R0;
     dc8:	a0 30       	R4 = I0;
     dca:	18 58       	R0 = R0 ^ R3;
     dcc:	3e 32       	FP = R6;
     dce:	04 50       	R0 = R4 + R0;
     dd0:	8c e4 38 00 	R4 = B[P1 + 0x38] (Z);
     dd4:	82 c6 38 8c 	R6 = R0 << 0x7;
     dd8:	14 36       	B2 = R4;
     dda:	c8 4e       	R0 >>= 0x19;
     ddc:	30 56       	R0 = R0 | R6;
     dde:	8e e4 39 00 	R6 = B[P1 + 0x39] (Z);
     de2:	8c e4 3a 00 	R4 = B[P1 + 0x3a] (Z);
     de6:	84 4f       	R4 <<= 0x10;
     de8:	46 4f       	R6 <<= 0x8;
     dea:	a6 57       	R6 = R6 | R4;
     dec:	e2 30       	R4 = B2;
     dee:	a6 57       	R6 = R6 | R4;
     df0:	06 34       	I0 = R6;
     df2:	8e e4 3b 00 	R6 = B[P1 + 0x3b] (Z);
     df6:	5a e1 98 fd 	B2.H = 0xfd98;		/* (-616)	B2=0xfd980000(-40370176) */
     dfa:	c6 4f       	R6 <<= 0x18;
     dfc:	1a e1 93 71 	B2.L = 0x7193;		/* (29075)	B2=0xfd987193(-40341101) */
     e00:	a0 30       	R4 = I0;
     e02:	34 57       	R4 = R4 | R6;
     e04:	da 32       	P3 = B2;
     e06:	04 34       	I0 = R4;
     e08:	df 5a       	P3 = FP + P3;
     e0a:	63 30       	R4 = P3;
     e0c:	1c 51       	R4 = R4 + R3;
     e0e:	08 50       	R0 = R0 + R1;
     e10:	d1 58       	R3 = R1 ^ R2;
     e12:	d8 54       	R3 = R0 & R3;
     e14:	d3 58       	R3 = R3 ^ R2;
     e16:	dc 50       	R3 = R4 + R3;
     e18:	8c e4 3c 00 	R4 = B[P1 + 0x3c] (Z);
     e1c:	82 c6 63 8c 	R6 = R3 << 0xc;
     e20:	14 36       	B2 = R4;
     e22:	a3 4e       	R3 >>= 0x14;
     e24:	f3 56       	R3 = R3 | R6;
     e26:	8e e4 3d 00 	R6 = B[P1 + 0x3d] (Z);
     e2a:	8c e4 3e 00 	R4 = B[P1 + 0x3e] (Z);
     e2e:	84 4f       	R4 <<= 0x10;
     e30:	46 4f       	R6 <<= 0x8;
     e32:	a6 57       	R6 = R6 | R4;
     e34:	e2 30       	R4 = B2;
     e36:	a6 57       	R6 = R6 | R4;
     e38:	2e 34       	M1 = R6;
     e3a:	3a e1 40 00 	B2 = 0x40 (X);		/*		B2=0x40( 64) */
     e3e:	da 32       	P3 = B2;
     e40:	8e e4 3f 00 	R6 = B[P1 + 0x3f] (Z);
     e44:	5a e1 79 a6 	B2.H = 0xa679;		/* (-22919)	B2=0xa6790040(-1502019520) */
     e48:	c6 4f       	R6 <<= 0x18;
     e4a:	a5 30       	R4 = M1;
     e4c:	1a e1 8e 43 	B2.L = 0x438e;		/* (17294)	B2=0xa679438e(-1502002290) */
     e50:	59 5a       	P1 = P1 + P3;
     e52:	34 57       	R4 = R4 | R6;
     e54:	da 32       	P3 = B2;
     e56:	a8 32       	P5 = I0;
     e58:	2c 34       	M1 = R4;
     e5a:	5d 5b       	P5 = P5 + P3;
     e5c:	65 30       	R4 = P5;
     e5e:	14 51       	R4 = R4 + R2;
     e60:	c3 50       	R3 = R3 + R0;
     e62:	88 58       	R2 = R0 ^ R1;
     e64:	93 54       	R2 = R3 & R2;
     e66:	5a e1 b4 49 	B2.H = 0x49b4;		/* (18868)	B2=0x49b4438e(1236550542) */
     e6a:	8a 58       	R2 = R2 ^ R1;
     e6c:	1a e1 21 08 	B2.L = 0x821;		/* (2081)	B2=0x49b40821(1236535329) */
     e70:	94 50       	R2 = R4 + R2;
     e72:	da 34       	I3 = B2;
     e74:	82 c6 8a 8c 	R6 = R2 << 0x11;
     e78:	67 9e       	I3 += M1;
     e7a:	a3 30       	R4 = I3;
     e7c:	7a 4e       	R2 >>= 0xf;
     e7e:	0c 51       	R4 = R4 + R1;
     e80:	b2 56       	R2 = R2 | R6;
     e82:	9a 50       	R2 = R2 + R3;
     e84:	43 58       	R1 = R3 ^ R0;
     e86:	4a 54       	R1 = R2 & R1;
     e88:	41 58       	R1 = R1 ^ R0;
     e8a:	5a e1 1e f6 	B2.H = 0xf61e;		/* (-2530)	B2=0xf61e0821(-165803999) */
     e8e:	4c 50       	R1 = R4 + R1;
     e90:	1a e1 62 25 	B2.L = 0x2562;		/* (9570)	B2=0xf61e2562(-165796510) */
     e94:	82 c6 b1 8c 	R6 = R1 << 0x16;
     e98:	da 34       	I3 = B2;
     e9a:	6f 9e       	I3 += M3;
     e9c:	51 4e       	R1 >>= 0xa;
     e9e:	71 56       	R1 = R1 | R6;
     ea0:	a3 30       	R4 = I3;
     ea2:	51 50       	R1 = R1 + R2;
     ea4:	04 51       	R4 = R4 + R0;
     ea6:	11 58       	R0 = R1 ^ R2;
     ea8:	18 54       	R0 = R0 & R3;
     eaa:	10 58       	R0 = R0 ^ R2;
     eac:	04 50       	R0 = R4 + R0;
     eae:	74 a0       	R4 = [SP + 0x4];
     eb0:	24 34       	M0 = R4;
     eb2:	5a e1 40 c0 	B2.H = 0xc040;		/* (-16320)	B2=0xc0402562(-1069537950) */
     eb6:	82 c6 28 8c 	R6 = R0 << 0x5;
     eba:	1a e1 40 b3 	B2.L = 0xb340;		/* (-19648)	B2=0xc040b340(-1069501632) */
     ebe:	da 34       	I3 = B2;
     ec0:	d8 4e       	R0 >>= 0x1b;
     ec2:	63 9e       	I3 += M0;
     ec4:	30 56       	R0 = R0 | R6;
     ec6:	b3 30       	R6 = I3;
     ec8:	08 50       	R0 = R0 + R1;
     eca:	9e 51       	R6 = R6 + R3;
     ecc:	c8 58       	R3 = R0 ^ R1;
     ece:	d3 54       	R3 = R3 & R2;
     ed0:	cb 58       	R3 = R3 ^ R1;
     ed2:	de 50       	R3 = R6 + R3;
     ed4:	5a e1 5e 26 	B2.H = 0x265e;		/* (9822)	B2=0x265eb340(643740480) */
     ed8:	82 c6 4b 88 	R4 = R3 << 0x9;
     edc:	1a e1 51 5a 	B2.L = 0x5a51;		/* (23121)	B2=0x265e5a51(643717713) */
     ee0:	da 32       	P3 = B2;
     ee2:	bb 4e       	R3 >>= 0x17;
     ee4:	dc 5a       	P3 = P4 + P3;
     ee6:	e3 56       	R3 = R3 | R4;
     ee8:	63 30       	R4 = P3;
     eea:	c3 50       	R3 = R3 + R0;
     eec:	14 51       	R4 = R4 + R2;
     eee:	83 58       	R2 = R3 ^ R0;
     ef0:	8a 54       	R2 = R2 & R1;
     ef2:	82 58       	R2 = R2 ^ R0;
     ef4:	5a e1 b6 e9 	B2.H = 0xe9b6;		/* (-5706)	B2=0xe9b65a51(-373925295) */
     ef8:	94 50       	R2 = R4 + R2;
     efa:	1a e1 aa c7 	B2.L = 0xc7aa;		/* (-14422)	B2=0xe9b6c7aa(-373897302) */
     efe:	82 c6 72 8c 	R6 = R2 << 0xe;
     f02:	ea 32       	P5 = B2;
     f04:	99 32       	P3 = I1;
     f06:	eb 5a       	P3 = P3 + P5;
     f08:	92 4e       	R2 >>= 0x12;
     f0a:	b2 56       	R2 = R2 | R6;
     f0c:	63 30       	R4 = P3;
     f0e:	9a 50       	R2 = R2 + R3;
     f10:	0c 51       	R4 = R4 + R1;
     f12:	5a 58       	R1 = R2 ^ R3;
     f14:	41 54       	R1 = R1 & R0;
     f16:	59 58       	R1 = R1 ^ R3;
     f18:	4c 50       	R1 = R4 + R1;
     f1a:	b4 a0       	R4 = [SP + 0x8];
     f1c:	24 34       	M0 = R4;
     f1e:	5a e1 2f d6 	B2.H = 0xd62f;		/* (-10705)	B2=0xd62fc7aa(-701511766) */
     f22:	82 c6 a1 8c 	R6 = R1 << 0x14;
     f26:	1a e1 5d 10 	B2.L = 0x105d;		/* (4189)	B2=0xd62f105d(-701558691) */
     f2a:	da 34       	I3 = B2;
     f2c:	61 4e       	R1 >>= 0xc;
     f2e:	63 9e       	I3 += M0;
     f30:	71 56       	R1 = R1 | R6;
     f32:	b3 30       	R6 = I3;
     f34:	51 50       	R1 = R1 + R2;
     f36:	86 51       	R6 = R6 + R0;
     f38:	11 58       	R0 = R1 ^ R2;
     f3a:	18 54       	R0 = R0 & R3;
     f3c:	10 58       	R0 = R0 ^ R2;
     f3e:	06 50       	R0 = R6 + R0;
     f40:	5a e1 44 02 	B2.H = 0x244;		/* (580)	B2=0x244105d(38015069) */
     f44:	82 c6 28 88 	R4 = R0 << 0x5;
     f48:	1a e1 53 14 	B2.L = 0x1453;		/* (5203)	B2=0x2441453(38016083) */
     f4c:	f2 30       	R6 = B2;
     f4e:	d8 4e       	R0 >>= 0x1b;
     f50:	20 56       	R0 = R0 | R4;
     f52:	b7 51       	R6 = R7 + R6;
     f54:	08 50       	R0 = R0 + R1;
     f56:	9e 51       	R6 = R6 + R3;
     f58:	c8 58       	R3 = R0 ^ R1;
     f5a:	d3 54       	R3 = R3 & R2;
     f5c:	cb 58       	R3 = R3 ^ R1;
     f5e:	de 50       	R3 = R6 + R3;
     f60:	5a e1 a1 d8 	B2.H = 0xd8a1;		/* (-10079)	B2=0xd8a11453(-660532141) */
     f64:	82 c6 4b 88 	R4 = R3 << 0x9;
     f68:	1a e1 81 e6 	B2.L = 0xe681;		/* (-6527)	B2=0xd8a1e681(-660478335) */
     f6c:	da 34       	I3 = B2;
     f6e:	bb 4e       	R3 >>= 0x17;
     f70:	e3 56       	R3 = R3 | R4;
     f72:	67 9e       	I3 += M1;
     f74:	a3 30       	R4 = I3;
     f76:	c3 50       	R3 = R3 + R0;
     f78:	14 51       	R4 = R4 + R2;
     f7a:	83 58       	R2 = R3 ^ R0;
     f7c:	8a 54       	R2 = R2 & R1;
     f7e:	82 58       	R2 = R2 ^ R0;
     f80:	94 50       	R2 = R4 + R2;
     f82:	f4 a0       	R4 = [SP + 0xc];
     f84:	24 34       	M0 = R4;
     f86:	5a e1 d3 e7 	B2.H = 0xe7d3;		/* (-6189)	B2=0xe7d3e681(-405543295) */
     f8a:	82 c6 72 8c 	R6 = R2 << 0xe;
     f8e:	1a e1 c8 fb 	B2.L = 0xfbc8;		/* (-1080)	B2=0xe7d3fbc8(-405537848) */
     f92:	da 34       	I3 = B2;
     f94:	92 4e       	R2 >>= 0x12;
     f96:	63 9e       	I3 += M0;
     f98:	b2 56       	R2 = R2 | R6;
     f9a:	b3 30       	R6 = I3;
     f9c:	9a 50       	R2 = R2 + R3;
     f9e:	8e 51       	R6 = R6 + R1;
     fa0:	5a 58       	R1 = R2 ^ R3;
     fa2:	41 54       	R1 = R1 & R0;
     fa4:	59 58       	R1 = R1 ^ R3;
     fa6:	4e 50       	R1 = R6 + R1;
     fa8:	5a e1 e1 21 	B2.H = 0x21e1;		/* (8673)	B2=0x21e1fbc8(568458184) */
     fac:	82 c6 a1 88 	R4 = R1 << 0x14;
     fb0:	1a e1 e6 cd 	B2.L = 0xcde6;		/* (-12826)	B2=0x21e1cde6(568446438) */
     fb4:	da 32       	P3 = B2;
     fb6:	61 4e       	R1 >>= 0xc;
     fb8:	d8 5a       	P3 = P0 + P3;
     fba:	61 56       	R1 = R1 | R4;
     fbc:	63 30       	R4 = P3;
     fbe:	51 50       	R1 = R1 + R2;
     fc0:	04 51       	R4 = R4 + R0;
     fc2:	11 58       	R0 = R1 ^ R2;
     fc4:	18 54       	R0 = R0 & R3;
     fc6:	10 58       	R0 = R0 ^ R2;
     fc8:	5a e1 37 c3 	B2.H = 0xc337;		/* (-15561)	B2=0xc337cde6(-1019752986) */
     fcc:	04 50       	R0 = R4 + R0;
     fce:	1a e1 d6 07 	B2.L = 0x7d6;		/* (2006)	B2=0xc33707d6(-1019803690) */
     fd2:	82 c6 28 8c 	R6 = R0 << 0x5;
     fd6:	ea 32       	P5 = B2;
     fd8:	98 32       	P3 = I0;
     fda:	eb 5a       	P3 = P3 + P5;
     fdc:	d8 4e       	R0 >>= 0x1b;
     fde:	30 56       	R0 = R0 | R6;
     fe0:	63 30       	R4 = P3;
     fe2:	08 50       	R0 = R0 + R1;
     fe4:	1c 51       	R4 = R4 + R3;
     fe6:	c8 58       	R3 = R0 ^ R1;
     fe8:	d3 54       	R3 = R3 & R2;
     fea:	cb 58       	R3 = R3 ^ R1;
     fec:	dc 50       	R3 = R4 + R3;
     fee:	34 a1       	R4 = [SP + 0x10];
     ff0:	24 34       	M0 = R4;
     ff2:	5a e1 d5 f4 	B2.H = 0xf4d5;		/* (-2859)	B2=0xf4d507d6(-187365418) */
     ff6:	82 c6 4b 8c 	R6 = R3 << 0x9;
     ffa:	1a e1 87 0d 	B2.L = 0xd87;		/* (3463)	B2=0xf4d50d87(-187363961) */
     ffe:	da 34       	I3 = B2;
    1000:	bb 4e       	R3 >>= 0x17;
    1002:	63 9e       	I3 += M0;
    1004:	f3 56       	R3 = R3 | R6;
    1006:	b3 30       	R6 = I3;
    1008:	c3 50       	R3 = R3 + R0;
    100a:	96 51       	R6 = R6 + R2;
    100c:	83 58       	R2 = R3 ^ R0;
    100e:	8a 54       	R2 = R2 & R1;
    1010:	82 58       	R2 = R2 ^ R0;
    1012:	96 50       	R2 = R6 + R2;
    1014:	5a e1 5a 45 	B2.H = 0x455a;		/* (17754)	B2=0x455a0d87(1163529607) */
    1018:	82 c6 72 88 	R4 = R2 << 0xe;
    101c:	1a e1 ed 14 	B2.L = 0x14ed;		/* (5357)	B2=0x455a14ed(1163531501) */
    1020:	da 34       	I3 = B2;
    1022:	92 4e       	R2 >>= 0x12;
    1024:	a2 56       	R2 = R2 | R4;
    1026:	6b 9e       	I3 += M2;
    1028:	a3 30       	R4 = I3;
    102a:	9a 50       	R2 = R2 + R3;
    102c:	0c 51       	R4 = R4 + R1;
    102e:	5a 58       	R1 = R2 ^ R3;
    1030:	41 54       	R1 = R1 & R0;
    1032:	59 58       	R1 = R1 ^ R3;
    1034:	5a e1 e3 a9 	B2.H = 0xa9e3;		/* (-22045)	B2=0xa9e314ed(-1444735763) */
    1038:	4c 50       	R1 = R4 + R1;
    103a:	1a e1 05 e9 	B2.L = 0xe905;		/* (-5883)	B2=0xa9e3e905(-1444681467) */
    103e:	82 c6 a1 8c 	R6 = R1 << 0x14;
    1042:	da 32       	P3 = B2;
    1044:	df 5a       	P3 = FP + P3;
    1046:	61 4e       	R1 >>= 0xc;
    1048:	71 56       	R1 = R1 | R6;
    104a:	63 30       	R4 = P3;
    104c:	51 50       	R1 = R1 + R2;
    104e:	04 51       	R4 = R4 + R0;
    1050:	11 58       	R0 = R1 ^ R2;
    1052:	18 54       	R0 = R0 & R3;
    1054:	10 58       	R0 = R0 ^ R2;
    1056:	04 50       	R0 = R4 + R0;
    1058:	74 a1       	R4 = [SP + 0x14];
    105a:	24 34       	M0 = R4;
    105c:	5a e1 ef fc 	B2.H = 0xfcef;		/* (-785)	B2=0xfcefe905(-51386107) */
    1060:	82 c6 28 8c 	R6 = R0 << 0x5;
    1064:	1a e1 f8 a3 	B2.L = 0xa3f8;		/* (-23560)	B2=0xfcefa3f8(-51403784) */
    1068:	da 34       	I3 = B2;
    106a:	d8 4e       	R0 >>= 0x1b;
    106c:	63 9e       	I3 += M0;
    106e:	30 56       	R0 = R0 | R6;
    1070:	b3 30       	R6 = I3;
    1072:	08 50       	R0 = R0 + R1;
    1074:	9e 51       	R6 = R6 + R3;
    1076:	c8 58       	R3 = R0 ^ R1;
    1078:	d3 54       	R3 = R3 & R2;
    107a:	cb 58       	R3 = R3 ^ R1;
    107c:	de 50       	R3 = R6 + R3;
    107e:	5a e1 6f 67 	B2.H = 0x676f;		/* (26479)	B2=0x676fa3f8(1735369720) */
    1082:	82 c6 4b 88 	R4 = R3 << 0x9;
    1086:	1a e1 d9 02 	B2.L = 0x2d9;		/* (729)	B2=0x676f02d9(1735328473) */
    108a:	ea 32       	P5 = B2;
    108c:	9a 32       	P3 = I2;
    108e:	bb 4e       	R3 >>= 0x17;
    1090:	eb 5a       	P3 = P3 + P5;
    1092:	e3 56       	R3 = R3 | R4;
    1094:	63 30       	R4 = P3;
    1096:	c3 50       	R3 = R3 + R0;
    1098:	14 51       	R4 = R4 + R2;
    109a:	83 58       	R2 = R3 ^ R0;
    109c:	8a 54       	R2 = R2 & R1;
    109e:	82 58       	R2 = R2 ^ R0;
    10a0:	94 50       	R2 = R4 + R2;
    10a2:	82 c6 72 8c 	R6 = R2 << 0xe;
    10a6:	92 4e       	R2 >>= 0x12;
    10a8:	5b e1 2a 8d 	B3.H = 0x8d2a;		/* (-29398)	B3=0x8d2a0000(-1926627328) */
    10ac:	b2 56       	R2 = R2 | R6;
    10ae:	1b e1 8a 4c 	B3.L = 0x4c8a;		/* (19594)	B3=0x8d2a4c8a(-1926607734) */
    10b2:	f3 30       	R6 = B3;
    10b4:	9a 50       	R2 = R2 + R3;
    10b6:	b5 51       	R6 = R5 + R6;
    10b8:	1a 59       	R4 = R2 ^ R3;
    10ba:	8e 51       	R6 = R6 + R1;
    10bc:	44 54       	R1 = R4 & R0;
    10be:	59 58       	R1 = R1 ^ R3;
    10c0:	14 36       	B2 = R4;
    10c2:	4e 50       	R1 = R6 + R1;
    10c4:	82 c6 a1 88 	R4 = R1 << 0x14;
    10c8:	61 4e       	R1 >>= 0xc;
    10ca:	61 56       	R1 = R1 | R4;
    10cc:	b4 a0       	R4 = [SP + 0x8];
    10ce:	24 34       	M0 = R4;
    10d0:	5b e1 fa ff 	B3.H = 0xfffa;		/* ( -6)	B3=0xfffa4c8a(-373622) */
    10d4:	1b e1 42 39 	B3.L = 0x3942;		/* (14658)	B3=0xfffa3942(-378558) */
    10d8:	db 34       	I3 = B3;
    10da:	e2 30       	R4 = B2;
    10dc:	63 9e       	I3 += M0;
    10de:	b3 30       	R6 = I3;
    10e0:	51 50       	R1 = R1 + R2;
    10e2:	86 51       	R6 = R6 + R0;
    10e4:	5a e1 71 87 	B2.H = 0x8771;		/* (-30863)	B2=0x877102d9(-2022636839) */
    10e8:	21 58       	R0 = R1 ^ R4;
    10ea:	1a e1 81 f6 	B2.L = 0xf681;		/* (-2431)	B2=0x8771f681(-2022574463) */
    10ee:	06 50       	R0 = R6 + R0;
    10f0:	da 34       	I3 = B2;
    10f2:	82 c6 20 8c 	R6 = R0 << 0x4;
    10f6:	6b 9e       	I3 += M2;
    10f8:	a3 30       	R4 = I3;
    10fa:	e0 4e       	R0 >>= 0x1c;
    10fc:	1c 51       	R4 = R4 + R3;
    10fe:	30 56       	R0 = R0 | R6;
    1100:	08 50       	R0 = R0 + R1;
    1102:	d1 58       	R3 = R1 ^ R2;
    1104:	5a e1 9d 6d 	B2.H = 0x6d9d;		/* (28061)	B2=0x6d9df681(1839068801) */
    1108:	c3 58       	R3 = R3 ^ R0;
    110a:	1a e1 22 61 	B2.L = 0x6122;		/* (24866)	B2=0x6d9d6122(1839030562) */
    110e:	dc 50       	R3 = R4 + R3;
    1110:	da 32       	P3 = B2;
    1112:	82 c6 5b 8c 	R6 = R3 << 0xb;
    1116:	dc 5a       	P3 = P4 + P3;
    1118:	63 30       	R4 = P3;
    111a:	ab 4e       	R3 >>= 0x15;
    111c:	14 51       	R4 = R4 + R2;
    111e:	f3 56       	R3 = R3 | R6;
    1120:	5a e1 e5 fd 	B2.H = 0xfde5;		/* (-539)	B2=0xfde56122(-35299038) */
    1124:	c3 50       	R3 = R3 + R0;
    1126:	88 58       	R2 = R0 ^ R1;
    1128:	1a e1 0c 38 	B2.L = 0x380c;		/* (14348)	B2=0xfde5380c(-35309556) */
    112c:	ea 32       	P5 = B2;
    112e:	9a 58       	R2 = R2 ^ R3;
    1130:	98 32       	P3 = I0;
    1132:	eb 5a       	P3 = P3 + P5;
    1134:	94 50       	R2 = R4 + R2;
    1136:	63 30       	R4 = P3;
    1138:	0c 51       	R4 = R4 + R1;
    113a:	04 c6 12 44 	R2 = PACK (R2.L, R2.H);
    113e:	9a 50       	R2 = R2 + R3;
    1140:	43 58       	R1 = R3 ^ R0;
    1142:	5a e1 be a4 	B2.H = 0xa4be;		/* (-23362)	B2=0xa4be380c(-1531037684) */
    1146:	51 58       	R1 = R1 ^ R2;
    1148:	1a e1 44 ea 	B2.L = 0xea44;		/* (-5564)	B2=0xa4beea44(-1530992060) */
    114c:	4c 50       	R1 = R4 + R1;
    114e:	da 34       	I3 = B2;
    1150:	82 c6 b9 8c 	R6 = R1 << 0x17;
    1154:	6f 9e       	I3 += M3;
    1156:	a3 30       	R4 = I3;
    1158:	49 4e       	R1 >>= 0x9;
    115a:	04 51       	R4 = R4 + R0;
    115c:	71 56       	R1 = R1 | R6;
    115e:	51 50       	R1 = R1 + R2;
    1160:	1a 58       	R0 = R2 ^ R3;
    1162:	08 58       	R0 = R0 ^ R1;
    1164:	04 50       	R0 = R4 + R0;
    1166:	f4 a0       	R4 = [SP + 0xc];
    1168:	24 34       	M0 = R4;
    116a:	5a e1 de 4b 	B2.H = 0x4bde;		/* (19422)	B2=0x4bdeea44(1272900164) */
    116e:	82 c6 20 8c 	R6 = R0 << 0x4;
    1172:	1a e1 a9 cf 	B2.L = 0xcfa9;		/* (-12375)	B2=0x4bdecfa9(1272893353) */
    1176:	da 34       	I3 = B2;
    1178:	e0 4e       	R0 >>= 0x1c;
    117a:	63 9e       	I3 += M0;
    117c:	30 56       	R0 = R0 | R6;
    117e:	b3 30       	R6 = I3;
    1180:	9e 51       	R6 = R6 + R3;
    1182:	08 50       	R0 = R0 + R1;
    1184:	d1 58       	R3 = R1 ^ R2;
    1186:	c3 58       	R3 = R3 ^ R0;
    1188:	de 50       	R3 = R6 + R3;
    118a:	5a e1 bb f6 	B2.H = 0xf6bb;		/* (-2373)	B2=0xf6bbcfa9(-155463767) */
    118e:	82 c6 5b 88 	R4 = R3 << 0xb;
    1192:	1a e1 60 4b 	B2.L = 0x4b60;		/* (19296)	B2=0xf6bb4b60(-155497632) */
    1196:	ea 32       	P5 = B2;
    1198:	9a 32       	P3 = I2;
    119a:	ab 4e       	R3 >>= 0x15;
    119c:	eb 5a       	P3 = P3 + P5;
    119e:	e3 56       	R3 = R3 | R4;
    11a0:	63 30       	R4 = P3;
    11a2:	14 51       	R4 = R4 + R2;
    11a4:	5a e1 bf be 	B2.H = 0xbebf;		/* (-16705)	B2=0xbebf4b60(-1094759584) */
    11a8:	c3 50       	R3 = R3 + R0;
    11aa:	88 58       	R2 = R0 ^ R1;
    11ac:	1a e1 70 bc 	B2.L = 0xbc70;		/* (-17296)	B2=0xbebfbc70(-1094730640) */
    11b0:	9a 58       	R2 = R2 ^ R3;
    11b2:	f2 30       	R6 = B2;
    11b4:	94 50       	R2 = R4 + R2;
    11b6:	b7 51       	R6 = R7 + R6;
    11b8:	8e 51       	R6 = R6 + R1;
    11ba:	04 c6 12 44 	R2 = PACK (R2.L, R2.H);
    11be:	9a 50       	R2 = R2 + R3;
    11c0:	43 58       	R1 = R3 ^ R0;
    11c2:	51 58       	R1 = R1 ^ R2;
    11c4:	4e 50       	R1 = R6 + R1;
    11c6:	5a e1 9b 28 	B2.H = 0x289b;		/* (10395)	B2=0x289bbc70(681294960) */
    11ca:	82 c6 b9 88 	R4 = R1 << 0x17;
    11ce:	1a e1 c6 7e 	B2.L = 0x7ec6;		/* (32454)	B2=0x289b7ec6(681279174) */
    11d2:	da 32       	P3 = B2;
    11d4:	49 4e       	R1 >>= 0x9;
    11d6:	df 5a       	P3 = FP + P3;
    11d8:	61 56       	R1 = R1 | R4;
    11da:	63 30       	R4 = P3;
    11dc:	04 51       	R4 = R4 + R0;
    11de:	51 50       	R1 = R1 + R2;
    11e0:	1a 58       	R0 = R2 ^ R3;
    11e2:	5a e1 a1 ea 	B2.H = 0xeaa1;		/* (-5471)	B2=0xeaa17ec6(-358515002) */
    11e6:	08 58       	R0 = R0 ^ R1;
    11e8:	1a e1 fa 27 	B2.L = 0x27fa;		/* (10234)	B2=0xeaa127fa(-358537222) */
    11ec:	04 50       	R0 = R4 + R0;
    11ee:	ea 32       	P5 = B2;
    11f0:	99 32       	P3 = I1;
    11f2:	82 c6 20 8c 	R6 = R0 << 0x4;
    11f6:	eb 5a       	P3 = P3 + P5;
    11f8:	63 30       	R4 = P3;
    11fa:	e0 4e       	R0 >>= 0x1c;
    11fc:	1c 51       	R4 = R4 + R3;
    11fe:	30 56       	R0 = R0 | R6;
    1200:	08 50       	R0 = R0 + R1;
    1202:	d1 58       	R3 = R1 ^ R2;
    1204:	c3 58       	R3 = R3 ^ R0;
    1206:	dc 50       	R3 = R4 + R3;
    1208:	34 a1       	R4 = [SP + 0x10];
    120a:	24 34       	M0 = R4;
    120c:	5a e1 ef d4 	B2.H = 0xd4ef;		/* (-11025)	B2=0xd4ef27fa(-722524166) */
    1210:	1a e1 85 30 	B2.L = 0x3085;		/* (12421)	B2=0xd4ef3085(-722521979) */
    1214:	82 c6 5b 8c 	R6 = R3 << 0xb;
    1218:	74 a0       	R4 = [SP + 0x4];
    121a:	da 34       	I3 = B2;
    121c:	63 9e       	I3 += M0;
    121e:	ab 4e       	R3 >>= 0x15;
    1220:	24 34       	M0 = R4;
    1222:	f3 56       	R3 = R3 | R6;
    1224:	b3 30       	R6 = I3;
    1226:	96 51       	R6 = R6 + R2;
    1228:	5a e1 88 04 	B2.H = 0x488;		/* (1160)	B2=0x4883085(76034181) */
    122c:	c3 50       	R3 = R3 + R0;
    122e:	88 58       	R2 = R0 ^ R1;
    1230:	1a e1 05 1d 	B2.L = 0x1d05;		/* (7429)	B2=0x4881d05(76029189) */
    1234:	9a 58       	R2 = R2 ^ R3;
    1236:	da 34       	I3 = B2;
    1238:	63 9e       	I3 += M0;
    123a:	96 50       	R2 = R6 + R2;
    123c:	b3 30       	R6 = I3;
    123e:	8e 51       	R6 = R6 + R1;
    1240:	04 c6 12 44 	R2 = PACK (R2.L, R2.H);
    1244:	f5 ac       	P5 = [SP + 0xc];
    1246:	9a 50       	R2 = R2 + R3;
    1248:	43 58       	R1 = R3 ^ R0;
    124a:	51 58       	R1 = R1 ^ R2;
    124c:	4e 50       	R1 = R6 + R1;
    124e:	5a e1 d4 d9 	B2.H = 0xd9d4;		/* (-9772)	B2=0xd9d41d05(-640410363) */
    1252:	82 c6 b9 88 	R4 = R1 << 0x17;
    1256:	1a e1 39 d0 	B2.L = 0xd039;		/* (-12231)	B2=0xd9d4d039(-640364487) */
    125a:	da 32       	P3 = B2;
    125c:	49 4e       	R1 >>= 0x9;
    125e:	d8 5a       	P3 = P0 + P3;
    1260:	61 56       	R1 = R1 | R4;
    1262:	63 30       	R4 = P3;
    1264:	04 51       	R4 = R4 + R0;
    1266:	51 50       	R1 = R1 + R2;
    1268:	1a 58       	R0 = R2 ^ R3;
    126a:	08 58       	R0 = R0 ^ R1;
    126c:	5a e1 db e6 	B2.H = 0xe6db;		/* (-6437)	B2=0xe6dbd039(-421801927) */
    1270:	04 50       	R0 = R4 + R0;
    1272:	1a e1 e5 99 	B2.L = 0x99e5;		/* (-26139)	B2=0xe6db99e5(-421815835) */
    1276:	82 c6 20 8c 	R6 = R0 << 0x4;
    127a:	e2 30       	R4 = B2;
    127c:	25 51       	R4 = R5 + R4;
    127e:	e0 4e       	R0 >>= 0x1c;
    1280:	1c 51       	R4 = R4 + R3;
    1282:	30 56       	R0 = R0 | R6;
    1284:	08 50       	R0 = R0 + R1;
    1286:	d1 58       	R3 = R1 ^ R2;
    1288:	5a e1 a2 1f 	B2.H = 0x1fa2;		/* (8098)	B2=0x1fa299e5(530749925) */
    128c:	c3 58       	R3 = R3 ^ R0;
    128e:	1a e1 f8 7c 	B2.L = 0x7cf8;		/* (31992)	B2=0x1fa27cf8(530742520) */
    1292:	dc 50       	R3 = R4 + R3;
    1294:	da 34       	I3 = B2;
    1296:	82 c6 5b 8c 	R6 = R3 << 0xb;
    129a:	67 9e       	I3 += M1;
    129c:	a3 30       	R4 = I3;
    129e:	ab 4e       	R3 >>= 0x15;
    12a0:	14 51       	R4 = R4 + R2;
    12a2:	f3 56       	R3 = R3 | R6;
    12a4:	c3 50       	R3 = R3 + R0;
    12a6:	88 58       	R2 = R0 ^ R1;
    12a8:	9a 58       	R2 = R2 ^ R3;
    12aa:	94 50       	R2 = R4 + R2;
    12ac:	74 a1       	R4 = [SP + 0x14];
    12ae:	24 34       	M0 = R4;
    12b0:	5a e1 ac c4 	B2.H = 0xc4ac;		/* (-15188)	B2=0xc4ac7cf8(-995328776) */
    12b4:	1a e1 65 56 	B2.L = 0x5665;		/* (22117)	B2=0xc4ac5665(-995338651) */
    12b8:	da 34       	I3 = B2;
    12ba:	5a e1 29 f4 	B2.H = 0xf429;		/* (-3031)	B2=0xf4295665(-198617499) */
    12be:	63 9e       	I3 += M0;
    12c0:	1a e1 44 22 	B2.L = 0x2244;		/* (8772)	B2=0xf4292244(-198630844) */
    12c4:	e2 34       	M0 = B2;
    12c6:	b3 30       	R6 = I3;
    12c8:	8e 51       	R6 = R6 + R1;
    12ca:	61 9e       	I1 += M0;
    12cc:	04 c6 12 44 	R2 = PACK (R2.L, R2.H);
    12d0:	9a 50       	R2 = R2 + R3;
    12d2:	43 58       	R1 = R3 ^ R0;
    12d4:	20 34       	M0 = R0;
    12d6:	51 58       	R1 = R1 ^ R2;
    12d8:	4e 50       	R1 = R6 + R1;
    12da:	82 c6 b9 88 	R4 = R1 << 0x17;
    12de:	49 4e       	R1 >>= 0x9;
    12e0:	61 9e       	I1 += M0;
    12e2:	61 56       	R1 = R1 | R4;
    12e4:	a1 30       	R4 = I1;
    12e6:	51 e1 2a 43 	I1.H = 0x432a;		/* (17194)	I1=0x432af47d(1126888573) */
    12ea:	11 e1 97 ff 	I1.L = 0xff97;		/* (-105)	I1=0x432aff97(1126891415) */
    12ee:	51 50       	R1 = R1 + R2;
    12f0:	a1 34       	M0 = I1;
    12f2:	d8 43       	R0 =~ R3;
    12f4:	01 56       	R0 = R1 | R0;
    12f6:	62 9e       	I2 += M0;
    12f8:	23 34       	M0 = R3;
    12fa:	10 58       	R0 = R0 ^ R2;
    12fc:	04 50       	R0 = R4 + R0;
    12fe:	82 c6 30 8c 	R6 = R0 << 0x6;
    1302:	d0 4e       	R0 >>= 0x1a;
    1304:	30 56       	R0 = R0 | R6;
    1306:	51 e1 94 ab 	I1.H = 0xab94;		/* (-21612)	I1=0xab94ff97(-1416298601) */
    130a:	08 50       	R0 = R0 + R1;
    130c:	62 9e       	I2 += M0;
    130e:	d3 43       	R3 =~ R2;
    1310:	11 e1 a7 23 	I1.L = 0x23a7;		/* (9127)	I1=0xab9423a7(-1416354905) */
    1314:	d8 56       	R3 = R0 | R3;
    1316:	a1 34       	M0 = I1;
    1318:	cb 58       	R3 = R3 ^ R1;
    131a:	a2 30       	R4 = I2;
    131c:	60 9e       	I0 += M0;
    131e:	dc 50       	R3 = R4 + R3;
    1320:	22 34       	M0 = R2;
    1322:	82 c6 53 8c 	R6 = R3 << 0xa;
    1326:	b3 4e       	R3 >>= 0x16;
    1328:	f3 56       	R3 = R3 | R6;
    132a:	c3 50       	R3 = R3 + R0;
    132c:	ca 43       	R2 =~ R1;
    132e:	60 9e       	I0 += M0;
    1330:	93 56       	R2 = R3 | R2;
    1332:	a0 30       	R4 = I0;
    1334:	82 58       	R2 = R2 ^ R0;
    1336:	94 50       	R2 = R4 + R2;
    1338:	b4 a0       	R4 = [SP + 0x8];
    133a:	24 34       	M0 = R4;
    133c:	82 c6 7a 8c 	R6 = R2 << 0xf;
    1340:	8a 4e       	R2 >>= 0x11;
    1342:	50 e1 93 fc 	I0.H = 0xfc93;		/* (-877)	I0=0xfc931122(-57470686) */
    1346:	b2 56       	R2 = R2 | R6;
    1348:	10 e1 39 a0 	I0.L = 0xa039;		/* (-24519)	I0=0xfc93a039(-57434055) */
    134c:	9a 50       	R2 = R2 + R3;
    134e:	60 9e       	I0 += M0;
    1350:	c4 43       	R4 =~ R0;
    1352:	b0 30       	R6 = I0;
    1354:	25 34       	M0 = R5;
    1356:	22 57       	R4 = R2 | R4;
    1358:	1c 59       	R4 = R4 ^ R3;
    135a:	4e 50       	R1 = R6 + R1;
    135c:	61 50       	R1 = R1 + R4;
    135e:	82 c6 a9 88 	R4 = R1 << 0x15;
    1362:	50 e1 5b 65 	I0.H = 0x655b;		/* (25947)	I0=0x655ba039(1700503609) */
    1366:	59 4e       	R1 >>= 0xb;
    1368:	10 e1 c3 59 	I0.L = 0x59c3;		/* (22979)	I0=0x655b59c3(1700485571) */
    136c:	60 9e       	I0 += M0;
    136e:	61 56       	R1 = R1 | R4;
    1370:	a0 30       	R4 = I0;
    1372:	04 50       	R0 = R4 + R0;
    1374:	51 50       	R1 = R1 + R2;
    1376:	dc 43       	R4 =~ R3;
    1378:	21 57       	R4 = R1 | R4;
    137a:	14 59       	R4 = R4 ^ R2;
    137c:	20 50       	R0 = R0 + R4;
    137e:	34 a1       	R4 = [SP + 0x10];
    1380:	24 34       	M0 = R4;
    1382:	82 c6 30 8a 	R5 = R0 << 0x6;
    1386:	50 e1 0c 8f 	I0.H = 0x8f0c;		/* (-28916)	I0=0x8f0c59c3(-1895015997) */
    138a:	d0 4e       	R0 >>= 0x1a;
    138c:	10 e1 92 cc 	I0.L = 0xcc92;		/* (-13166)	I0=0x8f0ccc92(-1894986606) */
    1390:	60 9e       	I0 += M0;
    1392:	28 56       	R0 = R0 | R5;
    1394:	a8 30       	R5 = I0;
    1396:	dd 50       	R3 = R5 + R3;
    1398:	08 50       	R0 = R0 + R1;
    139a:	d5 43       	R5 =~ R2;
    139c:	68 57       	R5 = R0 | R5;
    139e:	4d 59       	R5 = R5 ^ R1;
    13a0:	27 34       	M0 = R7;
    13a2:	eb 50       	R3 = R3 + R5;
    13a4:	82 c6 53 8c 	R6 = R3 << 0xa;
    13a8:	b3 4e       	R3 >>= 0x16;
    13aa:	50 e1 ef ff 	I0.H = 0xffef;		/* (-17)	I0=0xffefcc92(-1061742) */
    13ae:	f3 56       	R3 = R3 | R6;
    13b0:	10 e1 7d f4 	I0.L = 0xf47d;		/* (-2947)	I0=0xffeff47d(-1051523) */
    13b4:	c3 50       	R3 = R3 + R0;
    13b6:	60 9e       	I0 += M0;
    13b8:	ce 43       	R6 =~ R1;
    13ba:	a0 30       	R4 = I0;
    13bc:	b3 57       	R6 = R3 | R6;
    13be:	86 59       	R6 = R6 ^ R0;
    13c0:	94 50       	R2 = R4 + R2;
    13c2:	b2 50       	R2 = R2 + R6;
    13c4:	82 c6 7a 8e 	R7 = R2 << 0xf;
    13c8:	74 a0       	R4 = [SP + 0x4];
    13ca:	8a 4e       	R2 >>= 0x11;
    13cc:	50 e1 84 85 	I0.H = 0x8584;		/* (-31356)	I0=0x8584f47d(-2054884227) */
    13d0:	ba 56       	R2 = R2 | R7;
    13d2:	10 e1 d1 5d 	I0.L = 0x5dd1;		/* (24017)	I0=0x85845dd1(-2054922799) */
    13d6:	9a 50       	R2 = R2 + R3;
    13d8:	6c 9e       	I0 += M3;
    13da:	c7 43       	R7 =~ R0;
    13dc:	a8 30       	R5 = I0;
    13de:	fa 57       	R7 = R2 | R7;
    13e0:	df 59       	R7 = R7 ^ R3;
    13e2:	4d 50       	R1 = R5 + R1;
    13e4:	79 50       	R1 = R1 + R7;
    13e6:	82 c6 a9 8e 	R7 = R1 << 0x15;
    13ea:	59 4e       	R1 >>= 0xb;
    13ec:	50 e1 a8 6f 	I0.H = 0x6fa8;		/* (28584)	I0=0x6fa85dd1(1873305041) */
    13f0:	79 56       	R1 = R1 | R7;
    13f2:	10 e1 4f 7e 	I0.L = 0x7e4f;		/* (32335)	I0=0x6fa87e4f(1873313359) */
    13f6:	51 50       	R1 = R1 + R2;
    13f8:	68 9e       	I0 += M2;
    13fa:	df 43       	R7 =~ R3;
    13fc:	b0 30       	R6 = I0;
    13fe:	f9 57       	R7 = R1 | R7;
    1400:	d7 59       	R7 = R7 ^ R2;
    1402:	06 50       	R0 = R6 + R0;
    1404:	38 50       	R0 = R0 + R7;
    1406:	82 c6 30 8e 	R7 = R0 << 0x6;
    140a:	50 e1 2c fe 	I0.H = 0xfe2c;		/* (-468)	I0=0xfe2c7e4f(-30638513) */
    140e:	d0 4e       	R0 >>= 0x1a;
    1410:	10 e1 e0 e6 	I0.L = 0xe6e0;		/* (-6432)	I0=0xfe2ce6e0(-30611744) */
    1414:	38 56       	R0 = R0 | R7;
    1416:	64 9e       	I0 += M1;
    1418:	b8 30       	R7 = I0;
    141a:	df 50       	R3 = R7 + R3;
    141c:	08 50       	R0 = R0 + R1;
    141e:	d7 43       	R7 =~ R2;
    1420:	f8 57       	R7 = R0 | R7;
    1422:	cf 59       	R7 = R7 ^ R1;
    1424:	24 34       	M0 = R4;
    1426:	fb 50       	R3 = R3 + R7;
    1428:	82 c6 53 8e 	R7 = R3 << 0xa;
    142c:	b3 4e       	R3 >>= 0x16;
    142e:	50 e1 01 a3 	I0.H = 0xa301;		/* (-23807)	I0=0xa301e6e0(-1560156448) */
    1432:	fb 56       	R3 = R3 | R7;
    1434:	10 e1 14 43 	I0.L = 0x4314;		/* (17172)	I0=0xa3014314(-1560198380) */
    1438:	c3 50       	R3 = R3 + R0;
    143a:	60 9e       	I0 += M0;
    143c:	cf 43       	R7 =~ R1;
    143e:	a8 30       	R5 = I0;
    1440:	fb 57       	R7 = R3 | R7;
    1442:	c7 59       	R7 = R7 ^ R0;
    1444:	95 50       	R2 = R5 + R2;
    1446:	ba 50       	R2 = R2 + R7;
    1448:	82 c6 7a 8e 	R7 = R2 << 0xf;
    144c:	50 e1 08 4e 	I0.H = 0x4e08;		/* (19976)	I0=0x4e084314(1309164308) */
    1450:	8a 4e       	R2 >>= 0x11;
    1452:	10 e1 a1 11 	I0.L = 0x11a1;		/* (4513)	I0=0x4e0811a1(1309151649) */
    1456:	ba 56       	R2 = R2 | R7;
    1458:	98 32       	P3 = I0;
    145a:	9a 50       	R2 = R2 + R3;
    145c:	df 5b       	FP = FP + P3;
    145e:	c7 43       	R7 =~ R0;
    1460:	67 30       	R4 = FP;
    1462:	fa 57       	R7 = R2 | R7;
    1464:	df 59       	R7 = R7 ^ R3;
    1466:	4c 50       	R1 = R4 + R1;
    1468:	79 50       	R1 = R1 + R7;
    146a:	82 c6 a9 8e 	R7 = R1 << 0x15;
    146e:	59 4e       	R1 >>= 0xb;
    1470:	4f e1 53 f7 	FP.H = 0xf753;		/* (-2221)	FP=0xf753d7be */
    1474:	79 56       	R1 = R1 | R7;
    1476:	0f e1 82 7e 	FP.L = 0x7e82;		/* (32386)	FP=0xf7537e82 */
    147a:	51 50       	R1 = R1 + R2;
    147c:	fd 5a       	P3 = P5 + FP;
    147e:	df 43       	R7 =~ R3;
    1480:	63 30       	R4 = P3;
    1482:	f9 57       	R7 = R1 | R7;
    1484:	d7 59       	R7 = R7 ^ R2;
    1486:	04 50       	R0 = R4 + R0;
    1488:	38 50       	R0 = R0 + R7;
    148a:	82 c6 30 8e 	R7 = R0 << 0x6;
    148e:	d0 4e       	R0 >>= 0x1a;
    1490:	4b e1 3a bd 	P3.H = 0xbd3a;		/* (-17094)	P3=0xbd3a000e */
    1494:	38 56       	R0 = R0 | R7;
    1496:	0b e1 35 f2 	P3.L = 0xf235;		/* (-3531)	P3=0xbd3af235 */
    149a:	08 50       	R0 = R0 + R1;
    149c:	1c 5b       	P4 = P4 + P3;
    149e:	d7 43       	R7 =~ R2;
    14a0:	6c 30       	R5 = P4;
    14a2:	f8 57       	R7 = R0 | R7;
    14a4:	cf 59       	R7 = R7 ^ R1;
    14a6:	dd 50       	R3 = R5 + R3;
    14a8:	fb 50       	R3 = R3 + R7;
    14aa:	73 ad       	P3 = [SP + 0x14];
    14ac:	82 c6 53 8e 	R7 = R3 << 0xa;
    14b0:	b3 4e       	R3 >>= 0x16;
    14b2:	4c e1 d7 2a 	P4.H = 0x2ad7;		/* (10967)	P4=0x2ad7d2bb */
    14b6:	fb 56       	R3 = R3 | R7;
    14b8:	0c e1 bb d2 	P4.L = 0xd2bb;		/* (-11589)	P4=0x2ad7d2bb */
    14bc:	c3 50       	R3 = R3 + R0;
    14be:	63 5b       	P5 = P3 + P4;
    14c0:	cf 43       	R7 =~ R1;
    14c2:	65 30       	R4 = P5;
    14c4:	fb 57       	R7 = R3 | R7;
    14c6:	c7 59       	R7 = R7 ^ R0;
    14c8:	94 50       	R2 = R4 + R2;
    14ca:	ba 50       	R2 = R2 + R7;
    14cc:	82 c6 7a 8e 	R7 = R2 << 0xf;
    14d0:	8a 4e       	R2 >>= 0x11;
    14d2:	4d e1 86 eb 	P5.H = 0xeb86;		/* (-5242)	P5=0xeb865bb1 */
    14d6:	ba 56       	R2 = R2 | R7;
    14d8:	0d e1 91 d3 	P5.L = 0xd391;		/* (-11375)	P5=0xeb86d391 */
    14dc:	9a 50       	R2 = R2 + R3;
    14de:	c7 43       	R7 =~ R0;
    14e0:	28 5a       	P0 = P0 + P5;
    14e2:	fa 57       	R7 = R2 | R7;
    14e4:	68 30       	R5 = P0;
    14e6:	4d 50       	R1 = R5 + R1;
    14e8:	df 59       	R7 = R7 ^ R3;
    14ea:	f9 51       	R7 = R1 + R7;
    14ec:	82 c6 af 82 	R1 = R7 << 0x15;
    14f0:	5f 4e       	R7 >>= 0xb;
    14f2:	cf 57       	R7 = R7 | R1;
    14f4:	11 91       	R1 = [P2];
    14f6:	08 50       	R0 = R0 + R1;
    14f8:	10 93       	[P2] = R0;
    14fa:	51 a0       	R1 = [P2 + 0x4];
    14fc:	4a 50       	R1 = R2 + R1;
    14fe:	79 50       	R1 = R1 + R7;
    1500:	97 a0       	R7 = [P2 + 0x8];
    1502:	ba 50       	R2 = R2 + R7;
    1504:	d7 a0       	R7 = [P2 + 0xc];
    1506:	fb 50       	R3 = R3 + R7;
    1508:	51 b0       	[P2 + 0x4] = R1;
    150a:	92 b0       	[P2 + 0x8] = R2;
    150c:	d3 b0       	[P2 + 0xc] = R3;
    150e:	36 91       	R6 = [SP];
    1510:	fe 67       	R6 += -0x1;		/* ( -1) */
    1512:	36 93       	[SP] = R6;
    1514:	3e 0c       	CC = R6 == -0x1;
    1516:	02 18       	IF CC JUMP 0x151a <_md5_block_data_order+0xac6>;
    1518:	b3 2a       	JUMP.S 0xa7e <_md5_block_data_order+0x2a>;
    151a:	c6 6c       	SP += 0x18;		/* ( 24) */
    151c:	77 90       	FP = [SP++];
    151e:	a3 05       	(R7:4, P5:3) = [SP++];
    1520:	10 00       	RTS;
	...

00001524 <_MD5_Transform>:
_MD5_Transform():
    1524:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
    1526:	ff e2 97 fa 	JUMP.L 0xa54 <_md5_block_data_order>;
	...

0000152c <_MD5_Update>:
_MD5_Update():
    152c:	f3 05       	[--SP] = (R7:6, P5:3);
    152e:	67 01       	[--SP] = RETS;
    1530:	a6 6f       	SP += -0xc;		/* (-12) */
    1532:	20 32       	P4 = R0;
    1534:	32 30       	R6 = R2;
    1536:	02 0c       	CC = R2 == 0x0;
    1538:	10 1d       	IF CC JUMP 0x1758 <_MD5_Update+0x22c> (BP);
    153a:	1a 4f       	R2 <<= 0x3;
    153c:	20 a1       	R0 = [P4 + 0x10];
    153e:	82 50       	R2 = R2 + R0;
    1540:	82 09       	CC = R2 < R0 (IU);
    1542:	04 14       	IF !CC JUMP 0x154a <_MD5_Update+0x1e> (BP);
    1544:	60 a1       	R0 = [P4 + 0x14];
    1546:	08 64       	R0 += 0x1;		/* (  1) */
    1548:	60 b1       	[P4 + 0x14] = R0;
    154a:	29 32       	P5 = R1;
    154c:	61 a1       	R1 = [P4 + 0x14];
    154e:	82 c6 1e 81 	R0 = R6 >> 0x1d;
    1552:	22 b1       	[P4 + 0x10] = R2;
    1554:	01 50       	R0 = R1 + R0;
    1556:	22 e4 16 00 	R2 = [P4 + 0x58];
    155a:	60 b1       	[P4 + 0x14] = R0;
    155c:	02 0c       	CC = R2 == 0x0;
    155e:	b4 1c       	IF CC JUMP 0x16c6 <_MD5_Update+0x19a> (BP);
    1560:	82 c6 f2 01 	R0 = R2 >>> 0x2;
    1564:	10 32       	P2 = R0;
    1566:	19 60       	R1 = 0x3 (X);		/*		R1=0x3(  3) */
    1568:	0a 54       	R0 = R2 & R1;
    156a:	96 50       	R2 = R6 + R2;
    156c:	fb 61       	R3 = 0x3f (X);		/*		R3=0x3f( 63) */
    156e:	1a 0a       	CC = R2 <= R3 (IU);
    1570:	41 1c       	IF CC JUMP 0x15f2 <_MD5_Update+0xc6> (BP);
    1572:	54 5e       	P1 = P4 + (P2 << 0x2);
    1574:	89 a1       	R1 = [P1 + 0x18];
    1576:	10 0c       	CC = R0 == 0x2;
    1578:	0a 18       	IF CC JUMP 0x158c <_MD5_Update+0x60>;
    157a:	18 0c       	CC = R0 == 0x3;
    157c:	0b 18       	IF CC JUMP 0x1592 <_MD5_Update+0x66>;
    157e:	08 0c       	CC = R0 == 0x1;
    1580:	02 1c       	IF CC JUMP 0x1584 <_MD5_Update+0x58> (BP);
    1582:	29 98       	R1 = B[P5++] (Z);
    1584:	00 00       	NOP;
    1586:	28 98       	R0 = B[P5++] (Z);
    1588:	40 4f       	R0 <<= 0x8;
    158a:	41 56       	R1 = R1 | R0;
    158c:	28 98       	R0 = B[P5++] (Z);
    158e:	80 4f       	R0 <<= 0x10;
    1590:	41 56       	R1 = R1 | R0;
    1592:	28 98       	R0 = B[P5++] (Z);
    1594:	c0 4f       	R0 <<= 0x18;
    1596:	54 5e       	P1 = P4 + (P2 << 0x2);
    1598:	48 56       	R1 = R0 | R1;
    159a:	42 32       	P0 = P2;
    159c:	89 b1       	[P1 + 0x18] = R1;
    159e:	08 6c       	P0 += 0x1;		/* (  1) */
    15a0:	89 68       	P1 = 0x11 (X);		/*		P1=0x11( 17) */
    15a2:	83 68       	P3 = 0x10 (X);		/*		P3=0x10( 16) */
    15a4:	3a 6c       	P2 += 0x7;		/* (  7) */
    15a6:	01 44       	P1 -= P0;
    15a8:	58 09       	CC = P0 <= P3;
    15aa:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    15ac:	94 5e       	P2 = P4 + (P2 << 0x2);
    15ae:	88 06       	IF !CC P1 = R0;
    15b0:	b3 e0 12 10 	LSETUP(0x15b6 <_MD5_Update+0x8a>, 0x15d4 <_MD5_Update+0xa8>) LC1 = P1;
    15b4:	10 20       	JUMP.S 0x15d4 <_MD5_Update+0xa8>;
    15b6:	aa e4 01 00 	R2 = B[P5 + 0x1] (Z);
    15ba:	a8 e4 02 00 	R0 = B[P5 + 0x2] (Z);
    15be:	42 4f       	R2 <<= 0x8;
    15c0:	80 4f       	R0 <<= 0x10;
    15c2:	29 99       	R1 = B[P5] (Z);
    15c4:	02 56       	R0 = R2 | R0;
    15c6:	08 56       	R0 = R0 | R1;
    15c8:	a9 e4 03 00 	R1 = B[P5 + 0x3] (Z);
    15cc:	c1 4f       	R1 <<= 0x18;
    15ce:	08 56       	R0 = R0 | R1;
    15d0:	25 6c       	P5 += 0x4;		/* (  4) */
    15d2:	10 92       	[P2++] = R0;
    15d4:	00 00       	NOP;
    15d6:	4c 30       	R1 = P4;
    15d8:	44 30       	R0 = P4;
    15da:	c1 64       	R1 += 0x18;		/* ( 24) */
    15dc:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
    15de:	ff e3 2d f5 	CALL 0x38 <_md5_block_host_order>;
    15e2:	20 e4 16 00 	R0 = [P4 + 0x58];
    15e6:	00 66       	R0 += -0x40;		/* (-64) */
    15e8:	86 51       	R6 = R6 + R0;
    15ea:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    15ec:	20 e6 16 00 	[P4 + 0x58] = R0;
    15f0:	6b 20       	JUMP.S 0x16c6 <_MD5_Update+0x19a>;
    15f2:	c6 50       	R3 = R6 + R0;
    15f4:	22 e6 16 00 	[P4 + 0x58] = R2;
    15f8:	1b 0e       	CC = R3 <= 0x3 (IU);
    15fa:	1a 14       	IF !CC JUMP 0x162e <_MD5_Update+0x102> (BP);
    15fc:	54 5e       	P1 = P4 + (P2 << 0x2);
    15fe:	89 a1       	R1 = [P1 + 0x18];
    1600:	08 0c       	CC = R0 == 0x1;
    1602:	0a 18       	IF CC JUMP 0x1616 <_MD5_Update+0xea>;
    1604:	10 0c       	CC = R0 == 0x2;
    1606:	0e 18       	IF CC JUMP 0x1622 <_MD5_Update+0xf6>;
    1608:	00 0c       	CC = R0 == 0x0;
    160a:	0f 14       	IF !CC JUMP 0x1628 <_MD5_Update+0xfc> (BP);
    160c:	fe 67       	R6 += -0x1;		/* ( -1) */
    160e:	29 99       	R1 = B[P5] (Z);
    1610:	06 0c       	CC = R6 == 0x0;
    1612:	0b 1c       	IF CC JUMP 0x1628 <_MD5_Update+0xfc> (BP);
    1614:	0d 6c       	P5 += 0x1;		/* (  1) */
    1616:	28 99       	R0 = B[P5] (Z);
    1618:	40 4f       	R0 <<= 0x8;
    161a:	41 56       	R1 = R1 | R0;
    161c:	0e 0c       	CC = R6 == 0x1;
    161e:	05 1c       	IF CC JUMP 0x1628 <_MD5_Update+0xfc> (BP);
    1620:	0d 6c       	P5 += 0x1;		/* (  1) */
    1622:	28 99       	R0 = B[P5] (Z);
    1624:	80 4f       	R0 <<= 0x10;
    1626:	41 56       	R1 = R1 | R0;
    1628:	14 5f       	P4 = P4 + (P2 << 0x2);
    162a:	a1 b1       	[P4 + 0x18] = R1;
    162c:	96 20       	JUMP.S 0x1758 <_MD5_Update+0x22c>;
    162e:	82 c6 f2 07 	R3 = R2 >>> 0x2;
    1632:	8a 54       	R2 = R2 & R1;
    1634:	00 0c       	CC = R0 == 0x0;
    1636:	08 1c       	IF CC JUMP 0x1646 <_MD5_Update+0x11a> (BP);
    1638:	54 5e       	P1 = P4 + (P2 << 0x2);
    163a:	89 a1       	R1 = [P1 + 0x18];
    163c:	10 0c       	CC = R0 == 0x2;
    163e:	0a 18       	IF CC JUMP 0x1652 <_MD5_Update+0x126>;
    1640:	18 0c       	CC = R0 == 0x3;
    1642:	04 14       	IF !CC JUMP 0x164a <_MD5_Update+0x11e> (BP);
    1644:	0a 20       	JUMP.S 0x1658 <_MD5_Update+0x12c>;
    1646:	00 00       	NOP;
    1648:	29 98       	R1 = B[P5++] (Z);
    164a:	00 00       	NOP;
    164c:	28 98       	R0 = B[P5++] (Z);
    164e:	40 4f       	R0 <<= 0x8;
    1650:	41 56       	R1 = R1 | R0;
    1652:	28 98       	R0 = B[P5++] (Z);
    1654:	80 4f       	R0 <<= 0x10;
    1656:	41 56       	R1 = R1 | R0;
    1658:	28 99       	R0 = B[P5] (Z);
    165a:	c0 4f       	R0 <<= 0x18;
    165c:	14 5e       	P0 = P4 + (P2 << 0x2);
    165e:	48 56       	R1 = R0 | R1;
    1660:	81 b1       	[P0 + 0x18] = R1;
    1662:	42 32       	P0 = P2;
    1664:	4d 32       	P1 = P5;
    1666:	3a 6c       	P2 += 0x7;		/* (  7) */
    1668:	09 6c       	P1 += 0x1;		/* (  1) */
    166a:	08 6c       	P0 += 0x1;		/* (  1) */
    166c:	94 5e       	P2 = P4 + (P2 << 0x2);
    166e:	11 20       	JUMP.S 0x1690 <_MD5_Update+0x164>;
    1670:	08 6c       	P0 += 0x1;		/* (  1) */
    1672:	8f e4 01 00 	R7 = B[P1 + 0x1] (Z);
    1676:	88 e4 02 00 	R0 = B[P1 + 0x2] (Z);
    167a:	47 4f       	R7 <<= 0x8;
    167c:	80 4f       	R0 <<= 0x10;
    167e:	09 99       	R1 = B[P1] (Z);
    1680:	07 56       	R0 = R7 | R0;
    1682:	08 56       	R0 = R0 | R1;
    1684:	89 e4 03 00 	R1 = B[P1 + 0x3] (Z);
    1688:	c1 4f       	R1 <<= 0x18;
    168a:	08 56       	R0 = R0 | R1;
    168c:	21 6c       	P1 += 0x4;		/* (  4) */
    168e:	10 92       	[P2++] = R0;
    1690:	40 30       	R0 = P0;
    1692:	98 08       	CC = R0 < R3;
    1694:	ee 1f       	IF CC JUMP 0x1670 <_MD5_Update+0x144> (BP);
    1696:	02 0c       	CC = R2 == 0x0;
    1698:	60 18       	IF CC JUMP 0x1758 <_MD5_Update+0x22c>;
    169a:	1a 32       	P3 = R2;
    169c:	12 0c       	CC = R2 == 0x2;
    169e:	99 5a       	P2 = P1 + P3;
    16a0:	07 18       	IF CC JUMP 0x16ae <_MD5_Update+0x182>;
    16a2:	1a 0c       	CC = R2 == 0x3;
    16a4:	0b 14       	IF !CC JUMP 0x16ba <_MD5_Update+0x18e> (BP);
    16a6:	fa 6f       	P2 += -0x1;		/* ( -1) */
    16a8:	11 99       	R1 = B[P2] (Z);
    16aa:	81 4f       	R1 <<= 0x10;
    16ac:	02 20       	JUMP.S 0x16b0 <_MD5_Update+0x184>;
    16ae:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    16b0:	fa 6f       	P2 += -0x1;		/* ( -1) */
    16b2:	10 99       	R0 = B[P2] (Z);
    16b4:	40 4f       	R0 <<= 0x8;
    16b6:	08 56       	R0 = R0 | R1;
    16b8:	02 20       	JUMP.S 0x16bc <_MD5_Update+0x190>;
    16ba:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    16bc:	91 e4 ff ff 	R1 = B[P2 + -0x1] (Z);
    16c0:	04 5f       	P4 = P4 + (P0 << 0x2);
    16c2:	01 56       	R0 = R1 | R0;
    16c4:	49 20       	JUMP.S 0x1756 <_MD5_Update+0x22a>;
    16c6:	82 c6 d6 8f 	R7 = R6 >> 0x6;
    16ca:	07 0c       	CC = R7 == 0x0;
    16cc:	0a 18       	IF CC JUMP 0x16e0 <_MD5_Update+0x1b4>;
    16ce:	4d 30       	R1 = P5;
    16d0:	17 30       	R2 = R7;
    16d2:	44 30       	R0 = P4;
    16d4:	37 4f       	R7 <<= 0x6;
    16d6:	ff e3 bf f9 	CALL 0xa54 <_md5_block_data_order>;
    16da:	17 32       	P2 = R7;
    16dc:	be 53       	R6 = R6 - R7;
    16de:	55 5b       	P5 = P5 + P2;
    16e0:	06 0c       	CC = R6 == 0x0;
    16e2:	3b 18       	IF CC JUMP 0x1758 <_MD5_Update+0x22c>;
    16e4:	16 32       	P2 = R6;
    16e6:	5c 32       	P3 = P4;
    16e8:	26 e6 16 00 	[P4 + 0x58] = R6;
    16ec:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    16ee:	c3 6c       	P3 += 0x18;		/* ( 24) */
    16f0:	d1 44       	P1 = P2 >> 0x2;
    16f2:	41 32       	P0 = P1;
    16f4:	86 55       	R6 = R6 & R0;
    16f6:	55 32       	P2 = P5;
    16f8:	08 6c       	P0 += 0x1;		/* (  1) */
    16fa:	b3 e0 12 00 	LSETUP(0x1700 <_MD5_Update+0x1d4>, 0x171e <_MD5_Update+0x1f2>) LC1 = P0;
    16fe:	10 20       	JUMP.S 0x171e <_MD5_Update+0x1f2>;
    1700:	92 e4 01 00 	R2 = B[P2 + 0x1] (Z);
    1704:	90 e4 02 00 	R0 = B[P2 + 0x2] (Z);
    1708:	42 4f       	R2 <<= 0x8;
    170a:	80 4f       	R0 <<= 0x10;
    170c:	11 99       	R1 = B[P2] (Z);
    170e:	02 56       	R0 = R2 | R0;
    1710:	08 56       	R0 = R0 | R1;
    1712:	91 e4 03 00 	R1 = B[P2 + 0x3] (Z);
    1716:	c1 4f       	R1 <<= 0x18;
    1718:	08 56       	R0 = R0 | R1;
    171a:	22 6c       	P2 += 0x4;		/* (  4) */
    171c:	18 92       	[P3++] = R0;
    171e:	00 00       	NOP;
    1720:	1e 32       	P3 = R6;
    1722:	4d 5f       	P5 = P5 + (P1 << 0x2);
    1724:	16 0c       	CC = R6 == 0x2;
    1726:	5d 5b       	P5 = P5 + P3;
    1728:	0a 18       	IF CC JUMP 0x173c <_MD5_Update+0x210>;
    172a:	1e 0c       	CC = R6 == 0x3;
    172c:	04 18       	IF CC JUMP 0x1734 <_MD5_Update+0x208>;
    172e:	0e 0c       	CC = R6 == 0x1;
    1730:	11 14       	IF !CC JUMP 0x1752 <_MD5_Update+0x226> (BP);
    1732:	0b 20       	JUMP.S 0x1748 <_MD5_Update+0x21c>;
    1734:	fd 6f       	P5 += -0x1;		/* ( -1) */
    1736:	29 99       	R1 = B[P5] (Z);
    1738:	81 4f       	R1 <<= 0x10;
    173a:	02 20       	JUMP.S 0x173e <_MD5_Update+0x212>;
    173c:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    173e:	fd 6f       	P5 += -0x1;		/* ( -1) */
    1740:	28 99       	R0 = B[P5] (Z);
    1742:	40 4f       	R0 <<= 0x8;
    1744:	08 56       	R0 = R0 | R1;
    1746:	02 20       	JUMP.S 0x174a <_MD5_Update+0x21e>;
    1748:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    174a:	a9 e4 ff ff 	R1 = B[P5 + -0x1] (Z);
    174e:	01 56       	R0 = R1 | R0;
    1750:	02 20       	JUMP.S 0x1754 <_MD5_Update+0x228>;
    1752:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1754:	0c 5f       	P4 = P4 + (P1 << 0x2);
    1756:	a0 b1       	[P4 + 0x18] = R0;
    1758:	66 6c       	SP += 0xc;		/* ( 12) */
    175a:	27 01       	RETS = [SP++];
    175c:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    175e:	b3 05       	(R7:6, P5:3) = [SP++];
    1760:	10 00       	RTS;
	...

00001764 <_DNSDigest_ConstructHMACKeyfromBase64>:
_DNSDigest_ConstructHMACKeyfromBase64():
    1764:	fb 05       	[--SP] = (R7:7, P5:3);
    1766:	00 e8 1e 01 	LINK 0x478;		/* (1144) */
    176a:	38 32       	FP = R0;
    176c:	47 e1 00 00 	R7.H = 0x0;		/* (  0)	R7=0xfaf(4015) */
    1770:	4e 32       	P1 = SP;
    1772:	11 32       	P2 = R1;
    1774:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1776:	05 68       	P5 = 0x0 (X);		/*		P5=0x0(  0) */
    1778:	07 e1 00 00 	R7.L = 0x0;		/* (  0)	R7=0x0 <_MD5_Init>(  0) */
    177c:	61 6c       	P1 += 0xc;		/* ( 12) */
    177e:	5f 20       	JUMP.S 0x183c <_DNSDigest_ConstructHMACKeyfromBase64+0xd8>;
    1780:	0a 30       	R1 = R2;
    1782:	b9 67       	R1 += -0x9;		/* ( -9) */
    1784:	21 0e       	CC = R1 <= 0x4 (IU);
    1786:	5b 1c       	IF CC JUMP 0x183c <_DNSDigest_ConstructHMACKeyfromBase64+0xd8> (BP);
    1788:	01 61       	R1 = 0x20 (X);		/*		R1=0x20( 32) */
    178a:	0a 08       	CC = R2 == R1;
    178c:	58 18       	IF CC JUMP 0x183c <_DNSDigest_ConstructHMACKeyfromBase64+0xd8>;
    178e:	e9 61       	R1 = 0x3d (X);		/*		R1=0x3d( 61) */
    1790:	0a 08       	CC = R2 == R1;
    1792:	5a 18       	IF CC JUMP 0x1846 <_DNSDigest_ConstructHMACKeyfromBase64+0xe2>;
    1794:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0x40 */
    1798:	08 e1 00 00 	P0.L = 0x0;		/* (  0)	P0=0x0 <_MD5_Init> */
    179c:	58 30       	R3 = P0;
    179e:	41 98       	R1 = B[P0++] (X);
    17a0:	0a 08       	CC = R2 == R1;
    17a2:	04 18       	IF CC JUMP 0x17aa <_DNSDigest_ConstructHMACKeyfromBase64+0x46>;
    17a4:	01 0c       	CC = R1 == 0x0;
    17a6:	fb 17       	IF !CC JUMP 0x179c <_DNSDigest_ConstructHMACKeyfromBase64+0x38> (BP);
    17a8:	da 20       	JUMP.S 0x195c <_DNSDigest_ConstructHMACKeyfromBase64+0x1f8>;
    17aa:	03 0c       	CC = R3 == 0x0;
    17ac:	d8 18       	IF CC JUMP 0x195c <_DNSDigest_ConstructHMACKeyfromBase64+0x1f8>;
    17ae:	08 0c       	CC = R0 == 0x1;
    17b0:	15 18       	IF CC JUMP 0x17da <_DNSDigest_ConstructHMACKeyfromBase64+0x76>;
    17b2:	08 0d       	CC = R0 <= 0x1;
    17b4:	04 14       	IF !CC JUMP 0x17bc <_DNSDigest_ConstructHMACKeyfromBase64+0x58> (BP);
    17b6:	00 0c       	CC = R0 == 0x0;
    17b8:	07 1c       	IF CC JUMP 0x17c6 <_DNSDigest_ConstructHMACKeyfromBase64+0x62> (BP);
    17ba:	d1 20       	JUMP.S 0x195c <_DNSDigest_ConstructHMACKeyfromBase64+0x1f8>;
    17bc:	10 0c       	CC = R0 == 0x2;
    17be:	21 18       	IF CC JUMP 0x1800 <_DNSDigest_ConstructHMACKeyfromBase64+0x9c>;
    17c0:	18 0c       	CC = R0 == 0x3;
    17c2:	cd 14       	IF !CC JUMP 0x195c <_DNSDigest_ConstructHMACKeyfromBase64+0x1f8> (BP);
    17c4:	31 20       	JUMP.S 0x1826 <_DNSDigest_ConstructHMACKeyfromBase64+0xc2>;
    17c6:	28 e1 ff 03 	P0 = 0x3ff (X);		/*		P0=0x3ff(1023) */
    17ca:	45 0a       	CC = P5 <= P0 (IU);
    17cc:	c8 10       	IF !CC JUMP 0x195c <_DNSDigest_ConstructHMACKeyfromBase64+0x1f8>;
    17ce:	fb 52       	R3 = R3 - R7;
    17d0:	29 5a       	P0 = P1 + P5;
    17d2:	13 4f       	R3 <<= 0x2;
    17d4:	03 9b       	B[P0] = R3;
    17d6:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    17d8:	32 20       	JUMP.S 0x183c <_DNSDigest_ConstructHMACKeyfromBase64+0xd8>;
    17da:	45 32       	P0 = P5;
    17dc:	08 6c       	P0 += 0x1;		/* (  1) */
    17de:	2c e1 ff 03 	P4 = 0x3ff (X);		/*		P4=0x3ff(1023) */
    17e2:	60 0a       	CC = P0 <= P4 (IU);
    17e4:	bc 10       	IF !CC JUMP 0x195c <_DNSDigest_ConstructHMACKeyfromBase64+0x1f8>;
    17e6:	69 5b       	P5 = P1 + P5;
    17e8:	fb 52       	R3 = R3 - R7;
    17ea:	82 c6 e3 03 	R1 = R3 >>> 0x4;
    17ee:	68 99       	R0 = B[P5] (X);
    17f0:	01 56       	R0 = R1 | R0;
    17f2:	28 9b       	B[P5] = R0;
    17f4:	41 5b       	P5 = P1 + P0;
    17f6:	23 4f       	R3 <<= 0x4;
    17f8:	2b 9b       	B[P5] = R3;
    17fa:	68 32       	P5 = P0;
    17fc:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    17fe:	1f 20       	JUMP.S 0x183c <_DNSDigest_ConstructHMACKeyfromBase64+0xd8>;
    1800:	45 32       	P0 = P5;
    1802:	08 6c       	P0 += 0x1;		/* (  1) */
    1804:	2c e1 ff 03 	P4 = 0x3ff (X);		/*		P4=0x3ff(1023) */
    1808:	60 0a       	CC = P0 <= P4 (IU);
    180a:	a9 10       	IF !CC JUMP 0x195c <_DNSDigest_ConstructHMACKeyfromBase64+0x1f8>;
    180c:	69 5b       	P5 = P1 + P5;
    180e:	fb 52       	R3 = R3 - R7;
    1810:	82 c6 f3 03 	R1 = R3 >>> 0x2;
    1814:	68 99       	R0 = B[P5] (X);
    1816:	01 56       	R0 = R1 | R0;
    1818:	28 9b       	B[P5] = R0;
    181a:	41 5b       	P5 = P1 + P0;
    181c:	33 4f       	R3 <<= 0x6;
    181e:	2b 9b       	B[P5] = R3;
    1820:	68 32       	P5 = P0;
    1822:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    1824:	0c 20       	JUMP.S 0x183c <_DNSDigest_ConstructHMACKeyfromBase64+0xd8>;
    1826:	28 e1 ff 03 	P0 = 0x3ff (X);		/*		P0=0x3ff(1023) */
    182a:	45 0a       	CC = P5 <= P0 (IU);
    182c:	98 10       	IF !CC JUMP 0x195c <_DNSDigest_ConstructHMACKeyfromBase64+0x1f8>;
    182e:	29 5a       	P0 = P1 + P5;
    1830:	fb 52       	R3 = R3 - R7;
    1832:	0d 6c       	P5 += 0x1;		/* (  1) */
    1834:	40 99       	R0 = B[P0] (X);
    1836:	c3 56       	R3 = R3 | R0;
    1838:	03 9b       	B[P0] = R3;
    183a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    183c:	00 00       	NOP;
    183e:	52 98       	R2 = B[P2++] (X);
    1840:	02 0c       	CC = R2 == 0x0;
    1842:	9f 17       	IF !CC JUMP 0x1780 <_DNSDigest_ConstructHMACKeyfromBase64+0x1c> (BP);
    1844:	27 20       	JUMP.S 0x1892 <_DNSDigest_ConstructHMACKeyfromBase64+0x12e>;
    1846:	52 98       	R2 = B[P2++] (X);
    1848:	10 0c       	CC = R0 == 0x2;
    184a:	0f 18       	IF CC JUMP 0x1868 <_DNSDigest_ConstructHMACKeyfromBase64+0x104>;
    184c:	10 0d       	CC = R0 <= 0x2;
    184e:	87 1c       	IF CC JUMP 0x195c <_DNSDigest_ConstructHMACKeyfromBase64+0x1f8> (BP);
    1850:	18 0c       	CC = R0 == 0x3;
    1852:	22 14       	IF !CC JUMP 0x1896 <_DNSDigest_ConstructHMACKeyfromBase64+0x132> (BP);
    1854:	19 20       	JUMP.S 0x1886 <_DNSDigest_ConstructHMACKeyfromBase64+0x122>;
    1856:	02 30       	R0 = R2;
    1858:	b8 67       	R0 += -0x9;		/* ( -9) */
    185a:	20 0e       	CC = R0 <= 0x4 (IU);
    185c:	04 1c       	IF CC JUMP 0x1864 <_DNSDigest_ConstructHMACKeyfromBase64+0x100> (BP);
    185e:	00 61       	R0 = 0x20 (X);		/*		R0=0x20( 32) */
    1860:	02 08       	CC = R2 == R0;
    1862:	06 14       	IF !CC JUMP 0x186e <_DNSDigest_ConstructHMACKeyfromBase64+0x10a> (BP);
    1864:	00 00       	NOP;
    1866:	52 98       	R2 = B[P2++] (X);
    1868:	02 0c       	CC = R2 == 0x0;
    186a:	f6 17       	IF !CC JUMP 0x1856 <_DNSDigest_ConstructHMACKeyfromBase64+0xf2> (BP);
    186c:	78 20       	JUMP.S 0x195c <_DNSDigest_ConstructHMACKeyfromBase64+0x1f8>;
    186e:	e9 61       	R1 = 0x3d (X);		/*		R1=0x3d( 61) */
    1870:	0a 08       	CC = R2 == R1;
    1872:	07 20       	JUMP.S 0x1880 <_DNSDigest_ConstructHMACKeyfromBase64+0x11c>;
    1874:	02 30       	R0 = R2;
    1876:	b8 67       	R0 += -0x9;		/* ( -9) */
    1878:	20 0e       	CC = R0 <= 0x4 (IU);
    187a:	04 1c       	IF CC JUMP 0x1882 <_DNSDigest_ConstructHMACKeyfromBase64+0x11e> (BP);
    187c:	00 61       	R0 = 0x20 (X);		/*		R0=0x20( 32) */
    187e:	02 08       	CC = R2 == R0;
    1880:	6e 14       	IF !CC JUMP 0x195c <_DNSDigest_ConstructHMACKeyfromBase64+0x1f8> (BP);
    1882:	00 00       	NOP;
    1884:	52 98       	R2 = B[P2++] (X);
    1886:	02 0c       	CC = R2 == 0x0;
    1888:	f6 17       	IF !CC JUMP 0x1874 <_DNSDigest_ConstructHMACKeyfromBase64+0x110> (BP);
    188a:	56 32       	P2 = SP;
    188c:	62 6c       	P2 += 0xc;		/* ( 12) */
    188e:	aa 5a       	P2 = P2 + P5;
    1890:	10 99       	R0 = B[P2] (Z);
    1892:	00 0c       	CC = R0 == 0x0;
    1894:	64 10       	IF !CC JUMP 0x195c <_DNSDigest_ConstructHMACKeyfromBase64+0x1f8>;
    1896:	28 e1 40 00 	P0 = 0x40 (X);		/*		P0=0x40( 64) */
    189a:	7d 30       	R7 = P5;
    189c:	45 0a       	CC = P5 <= P0 (IU);
    189e:	33 1c       	IF CC JUMP 0x1904 <_DNSDigest_ConstructHMACKeyfromBase64+0x1a0> (BP);
    18a0:	40 e1 45 67 	R0.H = 0x6745;		/* (26437)	R0=0x67450020(1732575264) */
    18a4:	00 e1 01 23 	R0.L = 0x2301;		/* (8961)	R0=0x67452301(1732584193) */
    18a8:	30 e6 03 01 	[SP + 0x40c] = R0;
    18ac:	40 e1 cd ef 	R0.H = 0xefcd;		/* (-4147)	R0=0xefcd2301(-271768831) */
    18b0:	00 e1 89 ab 	R0.L = 0xab89;		/* (-21623)	R0=0xefcdab89(-271733879) */
    18b4:	30 e6 04 01 	[SP + 0x410] = R0;
    18b8:	40 e1 ba 98 	R0.H = 0x98ba;		/* (-26438)	R0=0x98baab89(-1732596855) */
    18bc:	00 e1 fe dc 	R0.L = 0xdcfe;		/* (-8962)	R0=0x98badcfe(-1732584194) */
    18c0:	30 e6 05 01 	[SP + 0x414] = R0;
    18c4:	40 e1 32 10 	R0.H = 0x1032;		/* (4146)	R0=0x1032dcfe(271768830) */
    18c8:	00 e1 76 54 	R0.L = 0x5476;		/* (21622)	R0=0x10325476(271733878) */
    18cc:	30 e6 06 01 	[SP + 0x418] = R0;
    18d0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    18d2:	2a e1 0c 04 	P2 = 0x40c (X);		/*		P2=0x40c(1036) */
    18d6:	16 5b       	P4 = SP + P2;
    18d8:	30 e6 07 01 	[SP + 0x41c] = R0;
    18dc:	30 e6 08 01 	[SP + 0x420] = R0;
    18e0:	30 e6 19 01 	[SP + 0x464] = R0;
    18e4:	4e 30       	R1 = SP;
    18e6:	44 30       	R0 = P4;
    18e8:	61 64       	R1 += 0xc;		/* ( 12) */
    18ea:	55 30       	R2 = P5;
    18ec:	ff e3 20 fe 	CALL 0x152c <_MD5_Update>;
    18f0:	28 e1 68 04 	P0 = 0x468 (X);		/*		P0=0x468(1128) */
    18f4:	c6 5a       	P3 = SP + P0;
    18f6:	4c 30       	R1 = P4;
    18f8:	43 30       	R0 = P3;
    18fa:	ff e3 fb f7 	CALL 0x8f0 <_MD5_Final>;
    18fe:	87 60       	R7 = 0x10 (X);		/*		R7=0x10( 16) */
    1900:	63 32       	P4 = P3;
    1902:	03 20       	JUMP.S 0x1908 <_DNSDigest_ConstructHMACKeyfromBase64+0x1a4>;
    1904:	66 32       	P4 = SP;
    1906:	64 6c       	P4 += 0xc;		/* ( 12) */
    1908:	2b e1 ae 14 	P3 = 0x14ae (X);		/*		P3=0x14ae(5294) */
    190c:	df 5a       	P3 = FP + P3;
    190e:	43 30       	R0 = P3;
    1910:	21 e1 40 00 	R1 = 0x40 (X);		/*		R1=0x40( 64) */
    1914:	ff e3 76 f3 	CALL 0x0 <_MD5_Init>;
    1918:	2a e1 ee 14 	P2 = 0x14ee (X);		/*		P2=0x14ee(5358) */
    191c:	d7 5b       	FP = FP + P2;
    191e:	47 30       	R0 = FP;
    1920:	21 e1 40 00 	R1 = 0x40 (X);		/*		R1=0x40( 64) */
    1924:	ff e3 6e f3 	CALL 0x0 <_MD5_Init>;
    1928:	43 30       	R0 = P3;
    192a:	4c 30       	R1 = P4;
    192c:	17 30       	R2 = R7;
    192e:	ff e3 69 f3 	CALL 0x0 <_MD5_Init>;
    1932:	47 30       	R0 = FP;
    1934:	4c 30       	R1 = P4;
    1936:	17 30       	R2 = R7;
    1938:	ff e3 64 f3 	CALL 0x0 <_MD5_Init>;
    193c:	47 32       	P0 = FP;
    193e:	4b 32       	P1 = P3;
    1940:	b1 61       	R1 = 0x36 (X);		/*		R1=0x36( 54) */
    1942:	20 e1 5c 00 	R0 = 0x5c (X);		/*		R0=0x5c( 92) */
    1946:	2a e1 40 00 	P2 = 0x40 (X);		/*		P2=0x40( 64) */
    194a:	b2 e0 07 20 	LSETUP(0x194e <_DNSDigest_ConstructHMACKeyfromBase64+0x1ea>, 0x1958 <_DNSDigest_ConstructHMACKeyfromBase64+0x1f4>) LC1 = P2;
    194e:	5a 98       	R2 = B[P3++] (X);
    1950:	8a 58       	R2 = R2 ^ R1;
    1952:	0a 9a       	B[P1++] = R2;
    1954:	42 98       	R2 = B[P0++] (X);
    1956:	90 58       	R2 = R0 ^ R2;
    1958:	3a 9a       	B[FP++] = R2;
    195a:	02 20       	JUMP.S 0x195e <_DNSDigest_ConstructHMACKeyfromBase64+0x1fa>;
    195c:	fd 6b       	P5 = -0x1 (X);		/*		P5=0xffffffff( -1) */
    195e:	29 e1 78 04 	P1 = 0x478 (X);		/*		P1=0x478(1144) */
    1962:	8e 5b       	SP = SP + P1;
    1964:	77 90       	FP = [SP++];
    1966:	45 30       	R0 = P5;
    1968:	27 01       	RETS = [SP++];
    196a:	bb 05       	(R7:7, P5:3) = [SP++];
    196c:	10 00       	RTS;
	...

00001970 <_DNSDigest_SignMessage>:
_DNSDigest_SignMessage():
    1970:	e3 05       	[--SP] = (R7:4, P5:3);
    1972:	00 e8 09 01 	LINK 0x424;		/* (1060) */
    1976:	39 32       	FP = R1;
    1978:	28 32       	P5 = R0;
    197a:	29 e1 a8 03 	P1 = 0x3a8 (X);		/*		P1=0x3a8(936) */
    197e:	04 68       	P4 = 0x0 (X);		/*		P4=0x0(  0) */
    1980:	ce 5a       	P3 = SP + P1;
    1982:	38 91       	R0 = [FP];
    1984:	30 b3       	[SP + 0x30] = R0;
    1986:	a8 e4 0a 00 	R0 = B[P5 + 0xa] (Z);
    198a:	a9 e4 0b 00 	R1 = B[P5 + 0xb] (Z);
    198e:	40 4f       	R0 <<= 0x8;
    1990:	08 56       	R0 = R0 | R1;
    1992:	70 e6 0e 02 	W[SP + 0x41c] = R0;
    1996:	40 e1 45 67 	R0.H = 0x6745;		/* (26437)	R0=0x6745005c(1732575324) */
    199a:	00 e1 01 23 	R0.L = 0x2301;		/* (8961)	R0=0x67452301(1732584193) */
    199e:	30 e6 ea 00 	[SP + 0x3a8] = R0;
    19a2:	40 e1 cd ef 	R0.H = 0xefcd;		/* (-4147)	R0=0xefcd2301(-271768831) */
    19a6:	00 e1 89 ab 	R0.L = 0xab89;		/* (-21623)	R0=0xefcdab89(-271733879) */
    19aa:	30 e6 eb 00 	[SP + 0x3ac] = R0;
    19ae:	40 e1 ba 98 	R0.H = 0x98ba;		/* (-26438)	R0=0x98baab89(-1732596855) */
    19b2:	00 e1 fe dc 	R0.L = 0xdcfe;		/* (-8962)	R0=0x98badcfe(-1732584194) */
    19b6:	30 e6 ec 00 	[SP + 0x3b0] = R0;
    19ba:	40 e1 32 10 	R0.H = 0x1032;		/* (4146)	R0=0x1032dcfe(271768830) */
    19be:	00 e1 76 54 	R0.L = 0x5476;		/* (21622)	R0=0x10325476(271733878) */
    19c2:	21 e1 ae 14 	R1 = 0x14ae (X);		/*		R1=0x14ae(5294) */
    19c6:	4a 50       	R1 = R2 + R1;
    19c8:	22 30       	R4 = R2;
    19ca:	30 e6 ed 00 	[SP + 0x3b4] = R0;
    19ce:	43 30       	R0 = P3;
    19d0:	22 e1 40 00 	R2 = 0x40 (X);		/*		R2=0x40( 64) */
    19d4:	34 e7 ee 00 	[SP + 0x3b8] = P4;
    19d8:	34 e7 ef 00 	[SP + 0x3bc] = P4;
    19dc:	34 e7 00 01 	[SP + 0x400] = P4;
    19e0:	ff e3 a6 fd 	CALL 0x152c <_MD5_Update>;
    19e4:	3a 91       	R2 = [FP];
    19e6:	45 30       	R0 = P5;
    19e8:	82 52       	R2 = R2 - R0;
    19ea:	43 30       	R0 = P3;
    19ec:	4d 30       	R1 = P5;
    19ee:	ff e3 9f fd 	CALL 0x152c <_MD5_Update>;
    19f2:	20 e1 fa 00 	R0 = 0xfa (X);		/*		R0=0xfa(250) */
    19f6:	b0 b5       	W[SP + 0xc] = R0;
    19f8:	00 61       	R0 = 0x20 (X);		/*		R0=0x20( 32) */
    19fa:	5e 32       	P3 = SP;
    19fc:	b0 e6 14 00 	B[SP + 0x14] = R0;
    1a00:	a3 6d       	P3 += 0x34;		/* ( 52) */
    1a02:	27 e1 8c 12 	R7 = 0x128c (X);		/*		R7=0x128c(4748) */
    1a06:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    1a08:	43 30       	R0 = P3;
    1a0a:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    1a0c:	fc 51       	R7 = R4 + R7;
    1a0e:	34 bd       	[SP + 0x10] = P4;
    1a10:	b4 bd       	[SP + 0x18] = P4;
    1a12:	f4 bd       	[SP + 0x1c] = P4;
    1a14:	34 be       	[SP + 0x20] = P4;
    1a16:	26 e1 00 01 	R6 = 0x100 (X);		/*		R6=0x100(256) */
    1a1a:	ff e3 f3 f2 	CALL 0x0 <_MD5_Init>;
    1a1e:	b7 51       	R6 = R7 + R6;
    1a20:	0e 30       	R1 = R6;
    1a22:	07 30       	R0 = R7;
    1a24:	ff e3 ee f2 	CALL 0x0 <_MD5_Init>;
    1a28:	c2 42       	R2 = R0.L (Z);
    1a2a:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    1a2e:	0a 0a       	CC = R2 <= R1 (IU);
    1a30:	09 14       	IF !CC JUMP 0x1a42 <_DNSDigest_SignMessage+0xd2> (BP);
    1a32:	5e 30       	R3 = SP;
    1a34:	21 e1 9c 01 	R1 = 0x19c (X);		/*		R1=0x19c(412) */
    1a38:	0b 50       	R0 = R3 + R1;
    1a3a:	0f 30       	R1 = R7;
    1a3c:	ff e3 e2 f2 	CALL 0x0 <_MD5_Init>;
    1a40:	04 20       	JUMP.S 0x1a48 <_DNSDigest_SignMessage+0xd8>;
    1a42:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1a44:	b0 e6 9c 01 	B[SP + 0x19c] = R0;
    1a48:	0e 30       	R1 = R6;
    1a4a:	07 30       	R0 = R7;
    1a4c:	ff e3 da f2 	CALL 0x0 <_MD5_Init>;
    1a50:	29 e1 a8 03 	P1 = 0x3a8 (X);		/*		P1=0x3a8(936) */
    1a54:	0e 5b       	P4 = SP + P1;
    1a56:	c2 42       	R2 = R0.L (Z);
    1a58:	21 e1 8c 12 	R1 = 0x128c (X);		/*		R1=0x128c(4748) */
    1a5c:	4c 50       	R1 = R4 + R1;
    1a5e:	44 30       	R0 = P4;
    1a60:	ff e3 66 fd 	CALL 0x152c <_MD5_Update>;
    1a64:	20 e1 ff 00 	R0 = 0xff (X);		/*		R0=0xff(255) */
    1a68:	70 e6 1e 00 	W[SP + 0x3c] = R0;
    1a6c:	23 e1 20 04 	R3 = 0x420 (X);		/*		R3=0x420(1056) */
    1a70:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
    1a72:	56 30       	R2 = SP;
    1a74:	5a 50       	R1 = R2 + R3;
    1a76:	b0 e6 21 04 	B[SP + 0x421] = R0;
    1a7a:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
    1a7c:	12 60       	R2 = 0x2 (X);		/*		R2=0x2(  2) */
    1a7e:	b6 e6 20 04 	B[SP + 0x420] = R6;
    1a82:	44 30       	R0 = P4;
    1a84:	ff e3 54 fd 	CALL 0x152c <_MD5_Update>;
    1a88:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1a8a:	29 e1 24 04 	P1 = 0x424 (X);		/*		P1=0x424(1060) */
    1a8e:	2a e1 1c fc 	P2 = -0x3e4 (X);		/*		P2=0xfffffc1c(-996) */
    1a92:	71 5a       	P1 = P1 + SP;
    1a94:	30 e6 10 00 	[SP + 0x40] = R0;
    1a98:	52 30       	R2 = P2;
    1a9a:	41 30       	R0 = P1;
    1a9c:	50 50       	R1 = R0 + R2;
    1a9e:	47 e1 00 00 	R7.H = 0x0;		/* (  0)	R7=0x128c(4748) */
    1aa2:	22 60       	R2 = 0x4 (X);		/*		R2=0x4(  4) */
    1aa4:	07 e1 00 00 	R7.L = 0x0;		/* (  0)	R7=0x0 <_MD5_Init>(  0) */
    1aa8:	44 30       	R0 = P4;
    1aaa:	25 e1 00 01 	R5 = 0x100 (X);		/*		R5=0x100(256) */
    1aae:	ff e3 3f fd 	CALL 0x152c <_MD5_Update>;
    1ab2:	6f 51       	R5 = R7 + R5;
    1ab4:	07 30       	R0 = R7;
    1ab6:	0d 30       	R1 = R5;
    1ab8:	ff e3 a4 f2 	CALL 0x0 <_MD5_Init>;
    1abc:	c2 42       	R2 = R0.L (Z);
    1abe:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    1ac2:	02 0a       	CC = R2 <= R0 (IU);
    1ac4:	32 e5 16 00 	P2 = [SP + 0x58];
    1ac8:	07 14       	IF !CC JUMP 0x1ad6 <_DNSDigest_SignMessage+0x166> (BP);
    1aca:	42 30       	R0 = P2;
    1acc:	20 64       	R0 += 0x4;		/* (  4) */
    1ace:	0f 30       	R1 = R7;
    1ad0:	ff e3 98 f2 	CALL 0x0 <_MD5_Init>;
    1ad4:	03 20       	JUMP.S 0x1ada <_DNSDigest_SignMessage+0x16a>;
    1ad6:	96 e6 04 00 	B[P2 + 0x4] = R6;
    1ada:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x100(256) */
    1ade:	0d 30       	R1 = R5;
    1ae0:	00 e1 00 00 	R0.L = 0x0;		/* (  0)	R0=0x0 <_MD5_Init>(  0) */
    1ae4:	ff e3 8e f2 	CALL 0x0 <_MD5_Init>;
    1ae8:	c2 42       	R2 = R0.L (Z);
    1aea:	12 32       	P2 = R2;
    1aec:	34 e5 16 00 	P4 = [SP + 0x58];
    1af0:	23 e1 a8 03 	R3 = 0x3a8 (X);		/*		R3=0x3a8(936) */
    1af4:	4e 30       	R1 = SP;
    1af6:	19 50       	R0 = R1 + R3;
    1af8:	22 6c       	P2 += 0x4;		/* (  4) */
    1afa:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x128c(4748) */
    1afe:	14 5b       	P4 = P4 + P2;
    1b00:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_MD5_Init>(  0) */
    1b04:	ff e3 14 fd 	CALL 0x152c <_MD5_Update>;
    1b08:	ff e3 7c f2 	CALL 0x0 <_MD5_Init>;
    1b0c:	38 30       	R7 = R0;
    1b0e:	38 0c       	CC = R0 == -0x1;
    1b10:	0a 14       	IF !CC JUMP 0x1b24 <_DNSDigest_SignMessage+0x1b4> (BP);
    1b12:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_MD5_Init>(  0) */
    1b16:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1b18:	01 e1 1c 00 	R1.L = 0x1c;		/* ( 28)	R1=0x1c( 28) */
    1b1c:	ff e3 72 f2 	CALL 0x0 <_MD5_Init>;
    1b20:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1b22:	38 93       	[FP] = R0;
    1b24:	82 c6 47 81 	R0 = R7 >> 0x18;
    1b28:	b0 e6 16 04 	B[SP + 0x416] = R0;
    1b2c:	82 c6 87 81 	R0 = R7 >> 0x10;
    1b30:	b0 e6 17 04 	B[SP + 0x417] = R0;
    1b34:	82 c6 c7 81 	R0 = R7 >> 0x8;
    1b38:	b0 e6 18 04 	B[SP + 0x418] = R0;
    1b3c:	46 30       	R0 = SP;
    1b3e:	21 e1 14 04 	R1 = 0x414 (X);		/*		R1=0x414(1044) */
    1b42:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
    1b44:	48 51       	R5 = R0 + R1;
    1b46:	44 30       	R0 = P4;
    1b48:	0d 30       	R1 = R5;
    1b4a:	b6 e6 14 04 	B[SP + 0x414] = R6;
    1b4e:	b6 e6 15 04 	B[SP + 0x415] = R6;
    1b52:	b7 e6 19 04 	B[SP + 0x419] = R7;
    1b56:	32 60       	R2 = 0x6 (X);		/*		R2=0x6(  6) */
    1b58:	ff e3 54 f2 	CALL 0x0 <_MD5_Init>;
    1b5c:	29 e1 a8 03 	P1 = 0x3a8 (X);		/*		P1=0x3a8(936) */
    1b60:	ce 5a       	P3 = SP + P1;
    1b62:	0d 30       	R1 = R5;
    1b64:	7c 30       	R7 = P4;
    1b66:	32 60       	R2 = 0x6 (X);		/*		R2=0x6(  6) */
    1b68:	43 30       	R0 = P3;
    1b6a:	ff e3 e1 fc 	CALL 0x152c <_MD5_Update>;
    1b6e:	37 64       	R7 += 0x6;		/* (  6) */
    1b70:	17 32       	P2 = R7;
    1b72:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    1b74:	a0 e6 06 00 	B[P4 + 0x6] = R0;
    1b78:	60 61       	R0 = 0x2c (X);		/*		R0=0x2c( 44) */
    1b7a:	0f 30       	R1 = R7;
    1b7c:	90 e6 01 00 	B[P2 + 0x1] = R0;
    1b80:	12 60       	R2 = 0x2 (X);		/*		R2=0x2(  2) */
    1b82:	43 30       	R0 = P3;
    1b84:	ff e3 d4 fc 	CALL 0x152c <_MD5_Update>;
    1b88:	b0 e5 54 04 	R0 = B[SP + 0x454] (X);
    1b8c:	10 32       	P2 = R0;
    1b8e:	b0 e6 21 04 	B[SP + 0x421] = R0;
    1b92:	4c 32       	P1 = P4;
    1b94:	73 e4 2a 02 	R3 = W[SP + 0x454] (Z);
    1b98:	56 30       	R2 = SP;
    1b9a:	20 e1 20 04 	R0 = 0x420 (X);		/*		R0=0x420(1056) */
    1b9e:	43 4e       	R3 >>= 0x8;
    1ba0:	41 6c       	P1 += 0x8;		/* (  8) */
    1ba2:	c2 51       	R7 = R2 + R0;
    1ba4:	b3 e6 20 04 	B[SP + 0x420] = R3;
    1ba8:	b3 b2       	[SP + 0x28] = R3;
    1baa:	72 be       	[SP + 0x24] = P2;
    1bac:	f1 be       	[SP + 0x2c] = P1;
    1bae:	0f 30       	R1 = R7;
    1bb0:	12 60       	R2 = 0x2 (X);		/*		R2=0x2(  2) */
    1bb2:	43 30       	R0 = P3;
    1bb4:	ff e3 bc fc 	CALL 0x152c <_MD5_Update>;
    1bb8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1bba:	70 e6 10 02 	W[SP + 0x420] = R0;
    1bbe:	0f 30       	R1 = R7;
    1bc0:	12 60       	R2 = 0x2 (X);		/*		R2=0x2(  2) */
    1bc2:	43 30       	R0 = P3;
    1bc4:	ff e3 b4 fc 	CALL 0x152c <_MD5_Update>;
    1bc8:	22 e1 04 04 	R2 = 0x404 (X);		/*		R2=0x404(1028) */
    1bcc:	4e 30       	R1 = SP;
    1bce:	51 51       	R5 = R1 + R2;
    1bd0:	4b 30       	R1 = P3;
    1bd2:	05 30       	R0 = R5;
    1bd4:	ff e3 8e f6 	CALL 0x8f0 <_MD5_Final>;
    1bd8:	40 e1 45 67 	R0.H = 0x6745;		/* (26437)	R0=0x67450000(1732575232) */
    1bdc:	00 e1 01 23 	R0.L = 0x2301;		/* (8961)	R0=0x67452301(1732584193) */
    1be0:	30 e6 ea 00 	[SP + 0x3a8] = R0;
    1be4:	40 e1 cd ef 	R0.H = 0xefcd;		/* (-4147)	R0=0xefcd2301(-271768831) */
    1be8:	00 e1 89 ab 	R0.L = 0xab89;		/* (-21623)	R0=0xefcdab89(-271733879) */
    1bec:	30 e6 eb 00 	[SP + 0x3ac] = R0;
    1bf0:	40 e1 ba 98 	R0.H = 0x98ba;		/* (-26438)	R0=0x98baab89(-1732596855) */
    1bf4:	00 e1 fe dc 	R0.L = 0xdcfe;		/* (-8962)	R0=0x98badcfe(-1732584194) */
    1bf8:	30 e6 ec 00 	[SP + 0x3b0] = R0;
    1bfc:	40 e1 32 10 	R0.H = 0x1032;		/* (4146)	R0=0x1032dcfe(271768830) */
    1c00:	00 e1 76 54 	R0.L = 0x5476;		/* (21622)	R0=0x10325476(271733878) */
    1c04:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    1c06:	30 e6 ed 00 	[SP + 0x3b4] = R0;
    1c0a:	21 e1 ee 14 	R1 = 0x14ee (X);		/*		R1=0x14ee(5358) */
    1c0e:	4c 50       	R1 = R4 + R1;
    1c10:	22 e1 40 00 	R2 = 0x40 (X);		/*		R2=0x40( 64) */
    1c14:	37 e6 ee 00 	[SP + 0x3b8] = R7;
    1c18:	37 e6 ef 00 	[SP + 0x3bc] = R7;
    1c1c:	37 e6 00 01 	[SP + 0x400] = R7;
    1c20:	43 30       	R0 = P3;
    1c22:	ff e3 85 fc 	CALL 0x152c <_MD5_Update>;
    1c26:	82 60       	R2 = 0x10 (X);		/*		R2=0x10( 16) */
    1c28:	0d 30       	R1 = R5;
    1c2a:	43 30       	R0 = P3;
    1c2c:	ff e3 80 fc 	CALL 0x152c <_MD5_Update>;
    1c30:	4b 30       	R1 = P3;
    1c32:	05 30       	R0 = R5;
    1c34:	ff e3 5e f6 	CALL 0x8f0 <_MD5_Final>;
    1c38:	a6 e6 08 00 	B[P4 + 0x8] = R6;
    1c3c:	f1 ae       	P1 = [SP + 0x2c];
    1c3e:	80 60       	R0 = 0x10 (X);		/*		R0=0x10( 16) */
    1c40:	0d 30       	R1 = R5;
    1c42:	82 60       	R2 = 0x10 (X);		/*		R2=0x10( 16) */
    1c44:	88 e6 01 00 	B[P1 + 0x1] = R0;
    1c48:	44 30       	R0 = P4;
    1c4a:	50 64       	R0 += 0xa;		/* ( 10) */
    1c4c:	ff e3 da f1 	CALL 0x0 <_MD5_Init>;
    1c50:	68 99       	R0 = B[P5] (X);
    1c52:	a0 e6 1a 00 	B[P4 + 0x1a] = R0;
    1c56:	4c 32       	P1 = P4;
    1c58:	a8 e5 01 00 	R0 = B[P5 + 0x1] (X);
    1c5c:	d1 6c       	P1 += 0x1a;		/* ( 26) */
    1c5e:	88 e6 01 00 	B[P1 + 0x1] = R0;
    1c62:	b3 a2       	R3 = [SP + 0x28];
    1c64:	8b e6 02 00 	B[P1 + 0x2] = R3;
    1c68:	72 ae       	P2 = [SP + 0x24];
    1c6a:	8e e6 04 00 	B[P1 + 0x4] = R6;
    1c6e:	8e e6 05 00 	B[P1 + 0x5] = R6;
    1c72:	26 e1 1c 04 	R6 = 0x41c (X);		/*		R6=0x41c(1052) */
    1c76:	5a 30       	R3 = P2;
    1c78:	8b e6 03 00 	B[P1 + 0x3] = R3;
    1c7c:	32 e5 16 00 	P2 = [SP + 0x58];
    1c80:	29 e1 24 04 	P1 = 0x424 (X);		/*		P1=0x424(1060) */
    1c84:	71 5a       	P1 = P1 + SP;
    1c86:	5e 30       	R3 = SP;
    1c88:	14 44       	P4 -= P2;
    1c8a:	2a e1 14 fc 	P2 = -0x3ec (X);		/*		P2=0xfffffc14(-1004) */
    1c8e:	91 5a       	P2 = P1 + P2;
    1c90:	f2 bc       	[SP + 0xc] = P2;
    1c92:	44 30       	R0 = P4;
    1c94:	e0 64       	R0 += 0x1c;		/* ( 28) */
    1c96:	2a e1 f8 22 	P2 = 0x22f8 (X);		/*		P2=0x22f8(8952) */
    1c9a:	70 e6 22 00 	W[SP + 0x44] = R0;
    1c9e:	95 5a       	P2 = P5 + P2;
    1ca0:	37 b1       	[SP + 0x10] = R7;
    1ca2:	72 bd       	[SP + 0x14] = P2;
    1ca4:	45 30       	R0 = P5;
    1ca6:	31 a3       	R1 = [SP + 0x30];
    1ca8:	b3 50       	R2 = R3 + R6;
    1caa:	ff e3 ab f1 	CALL 0x0 <_MD5_Init>;
    1cae:	38 93       	[FP] = R0;
    1cb0:	00 0c       	CC = R0 == 0x0;
    1cb2:	09 14       	IF !CC JUMP 0x1cc4 <_DNSDigest_SignMessage+0x354> (BP);
    1cb4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x14ee(5358) */
    1cb8:	01 e1 60 00 	R1.L = 0x60;		/* ( 96)	R1=0x60( 96) */
    1cbc:	ff e3 a2 f1 	CALL 0x0 <_MD5_Init>;
    1cc0:	3f 93       	[FP] = R7;
    1cc2:	09 20       	JUMP.S 0x1cd4 <_DNSDigest_SignMessage+0x364>;
    1cc4:	b0 e5 1d 04 	R0 = B[SP + 0x41d] (X);
    1cc8:	a8 e6 0a 00 	B[P5 + 0xa] = R0;
    1ccc:	b0 e5 1c 04 	R0 = B[SP + 0x41c] (X);
    1cd0:	a8 e6 0b 00 	B[P5 + 0xb] = R0;
    1cd4:	29 e1 24 04 	P1 = 0x424 (X);		/*		P1=0x424(1060) */
    1cd8:	8e 5b       	SP = SP + P1;
    1cda:	77 90       	FP = [SP++];
    1cdc:	27 01       	RETS = [SP++];
    1cde:	a3 05       	(R7:4, P5:3) = [SP++];
    1ce0:	10 00       	RTS;
	...

00001ce4 <_DNSDigest_VerifyMessage>:
_DNSDigest_VerifyMessage():
    1ce4:	e3 05       	[--SP] = (R7:4, P5:3);
    1ce6:	22 32       	P4 = R2;
    1ce8:	00 e8 2b 00 	LINK 0xac;		/* (172) */
    1cec:	37 e5 39 00 	FP = [SP + 0xe4];
    1cf0:	31 e6 35 00 	[SP + 0xd4] = R1;
    1cf4:	28 30       	R5 = R0;
    1cf6:	65 ae       	P5 = [P4 + 0x24];
    1cf8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x60( 96) */
    1cfc:	33 e5 38 00 	P3 = [SP + 0xe0];
    1d00:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_MD5_Init>(  0) */
    1d04:	75 30       	R6 = P5;
    1d06:	26 64       	R6 += 0x4;		/* (  4) */
    1d08:	06 30       	R0 = R6;
    1d0a:	ff e3 7b f1 	CALL 0x0 <_MD5_Init>;
    1d0e:	00 0c       	CC = R0 == 0x0;
    1d10:	0c 14       	IF !CC JUMP 0x1d28 <_DNSDigest_VerifyMessage+0x44> (BP);
    1d12:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_MD5_Init>(  0) */
    1d16:	01 e1 94 00 	R1.L = 0x94;		/* (148)	R1=0x94(148) */
    1d1a:	16 30       	R2 = R6;
    1d1c:	ff e3 72 f1 	CALL 0x0 <_MD5_Init>;
    1d20:	48 60       	R0 = 0x9 (X);		/*		R0=0x9(  9) */
    1d22:	18 97       	W[P3] = R0;
    1d24:	88 60       	R0 = 0x11 (X);		/*		R0=0x11( 17) */
    1d26:	21 21       	JUMP.S 0x1f68 <_DNSDigest_VerifyMessage+0x284>;
    1d28:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    1d2c:	06 50       	R0 = R6 + R0;
    1d2e:	f0 b1       	[SP + 0x1c] = R0;
    1d30:	f1 a1       	R1 = [SP + 0x1c];
    1d32:	06 30       	R0 = R6;
    1d34:	ff e3 66 f1 	CALL 0x0 <_MD5_Init>;
    1d38:	38 30       	R7 = R0;
    1d3a:	ff e3 63 f1 	CALL 0x0 <_MD5_Init>;
    1d3e:	38 0c       	CC = R0 == -0x1;
    1d40:	09 14       	IF !CC JUMP 0x1d52 <_DNSDigest_VerifyMessage+0x6e> (BP);
    1d42:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x94(148) */
    1d46:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1d48:	01 e1 d8 00 	R1.L = 0xd8;		/* (216)	R1=0xd8(216) */
    1d4c:	ff e3 5a f1 	CALL 0x0 <_MD5_Init>;
    1d50:	49 20       	JUMP.S 0x1de2 <_DNSDigest_VerifyMessage+0xfe>;
    1d52:	ff 42       	R7 = R7.L (Z);
    1d54:	0f 32       	P1 = R7;
    1d56:	8d 5a       	P2 = P5 + P1;
    1d58:	91 e5 04 00 	R1 = B[P2 + 0x4] (X);
    1d5c:	17 32       	P2 = R7;
    1d5e:	b1 e6 a0 00 	B[SP + 0xa0] = R1;
    1d62:	22 6c       	P2 += 0x4;		/* (  4) */
    1d64:	55 5b       	P5 = P5 + P2;
    1d66:	a9 e5 01 00 	R1 = B[P5 + 0x1] (X);
    1d6a:	4d 32       	P1 = P5;
    1d6c:	b1 e6 a1 00 	B[SP + 0xa1] = R1;
    1d70:	09 6c       	P1 += 0x1;		/* (  1) */
    1d72:	8f e5 01 00 	R7 = B[P1 + 0x1] (X);
    1d76:	51 32       	P2 = P1;
    1d78:	b7 e6 a2 00 	B[SP + 0xa2] = R7;
    1d7c:	0a 6c       	P2 += 0x1;		/* (  1) */
    1d7e:	92 e5 01 00 	R2 = B[P2 + 0x1] (X);
    1d82:	b2 e6 a3 00 	B[SP + 0xa3] = R2;
    1d86:	11 6c       	P1 += 0x2;		/* (  2) */
    1d88:	8b e5 01 00 	R3 = B[P1 + 0x1] (X);
    1d8c:	b3 e6 a4 00 	B[SP + 0xa4] = R3;
    1d90:	12 6c       	P2 += 0x2;		/* (  2) */
    1d92:	52 43       	R2 = R2.B (Z);
    1d94:	91 e5 01 00 	R1 = B[P2 + 0x1] (X);
    1d98:	82 4f       	R2 <<= 0x10;
    1d9a:	c7 4f       	R7 <<= 0x18;
    1d9c:	5b 43       	R3 = R3.B (Z);
    1d9e:	b1 e6 a5 00 	B[SP + 0xa5] = R1;
    1da2:	43 4f       	R3 <<= 0x8;
    1da4:	ba 56       	R2 = R2 | R7;
    1da6:	9a 56       	R2 = R2 | R3;
    1da8:	49 43       	R1 = R1.B (Z);
    1daa:	11 6c       	P1 += 0x2;		/* (  2) */
    1dac:	8a 56       	R2 = R2 | R1;
    1dae:	8b e4 01 00 	R3 = B[P1 + 0x1] (Z);
    1db2:	12 6c       	P2 += 0x2;		/* (  2) */
    1db4:	91 e4 01 00 	R1 = B[P2 + 0x1] (Z);
    1db8:	43 4f       	R3 <<= 0x8;
    1dba:	4b 56       	R1 = R3 | R1;
    1dbc:	71 e6 10 00 	W[SP + 0x20] = R1;
    1dc0:	10 09       	CC = R0 <= R2;
    1dc2:	03 1c       	IF CC JUMP 0x1dc8 <_DNSDigest_VerifyMessage+0xe4> (BP);
    1dc4:	10 52       	R0 = R0 - R2;
    1dc6:	02 20       	JUMP.S 0x1dca <_DNSDigest_VerifyMessage+0xe6>;
    1dc8:	02 52       	R0 = R2 - R0;
    1dca:	74 e4 10 00 	R4 = W[SP + 0x20] (Z);
    1dce:	20 09       	CC = R0 <= R4;
    1dd0:	0d 1c       	IF CC JUMP 0x1dea <_DNSDigest_VerifyMessage+0x106> (BP);
    1dd2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xd8(216) */
    1dd6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1dd8:	01 e1 20 01 	R1.L = 0x120;		/* (288)	R1=0x120(288) */
    1ddc:	14 30       	R2 = R4;
    1dde:	ff e3 11 f1 	CALL 0x0 <_MD5_Init>;
    1de2:	48 60       	R0 = 0x9 (X);		/*		R0=0x9(  9) */
    1de4:	18 97       	W[P3] = R0;
    1de6:	90 60       	R0 = 0x12 (X);		/*		R0=0x12( 18) */
    1de8:	c0 20       	JUMP.S 0x1f68 <_DNSDigest_VerifyMessage+0x284>;
    1dea:	4a 30       	R1 = P2;
    1dec:	2a e1 80 00 	P2 = 0x80 (X);		/*		P2=0x80(128) */
    1df0:	b2 5a       	P2 = P2 + SP;
    1df2:	42 30       	R0 = P2;
    1df4:	21 64       	R1 += 0x4;		/* (  4) */
    1df6:	82 60       	R2 = 0x10 (X);		/*		R2=0x10( 16) */
    1df8:	ff e3 04 f1 	CALL 0x0 <_MD5_Init>;
    1dfc:	30 e4 37 00 	R0 = [SP + 0xdc];
    1e00:	43 e1 45 67 	R3.H = 0x6745;		/* (26437)	R3=0x674503a8(1732576168) */
    1e04:	4a e1 cd ef 	P2.H = 0xefcd;		/* (-4147)	P2=0xefcd0080 */
    1e08:	49 e1 ba 98 	P1.H = 0x98ba;		/* (-26438)	P1=0x98ba0424 */
    1e0c:	48 e1 32 10 	P0.H = 0x1032;		/* (4146)	P0=0x10320468 */
    1e10:	6e 32       	P5 = SP;
    1e12:	21 e1 ae 14 	R1 = 0x14ae (X);		/*		R1=0x14ae(5294) */
    1e16:	03 e1 01 23 	R3.L = 0x2301;		/* (8961)	R3=0x67452301(1732584193) */
    1e1a:	0a e1 89 ab 	P2.L = 0xab89;		/* (-21623)	P2=0xefcdab89 */
    1e1e:	09 e1 fe dc 	P1.L = 0xdcfe;		/* (-8962)	P1=0x98badcfe */
    1e22:	08 e1 76 54 	P0.L = 0x5476;		/* (21622)	P0=0x10325476 */
    1e26:	25 6d       	P5 += 0x24;		/* ( 36) */
    1e28:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    1e2a:	48 50       	R1 = R0 + R1;
    1e2c:	73 b2       	[SP + 0x24] = R3;
    1e2e:	b2 be       	[SP + 0x28] = P2;
    1e30:	f1 be       	[SP + 0x2c] = P1;
    1e32:	30 bf       	[SP + 0x30] = P0;
    1e34:	b3 b1       	[SP + 0x18] = R3;
    1e36:	f0 bc       	[SP + 0xc] = P0;
    1e38:	31 bd       	[SP + 0x10] = P1;
    1e3a:	72 bd       	[SP + 0x14] = P2;
    1e3c:	22 e1 40 00 	R2 = 0x40 (X);		/*		R2=0x40( 64) */
    1e40:	77 b3       	[SP + 0x34] = R7;
    1e42:	b7 b3       	[SP + 0x38] = R7;
    1e44:	37 e6 1f 00 	[SP + 0x7c] = R7;
    1e48:	45 30       	R0 = P5;
    1e4a:	ff e3 71 fb 	CALL 0x152c <_MD5_Update>;
    1e4e:	31 e4 35 00 	R1 = [SP + 0xd4];
    1e52:	a9 52       	R2 = R1 - R5;
    1e54:	0d 30       	R1 = R5;
    1e56:	45 30       	R0 = P5;
    1e58:	ff e3 6a fb 	CALL 0x152c <_MD5_Update>;
    1e5c:	25 a2       	R5 = [P4 + 0x20];
    1e5e:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    1e62:	4d 50       	R1 = R5 + R1;
    1e64:	05 30       	R0 = R5;
    1e66:	ff e3 cd f0 	CALL 0x0 <_MD5_Init>;
    1e6a:	c2 42       	R2 = R0.L (Z);
    1e6c:	0d 30       	R1 = R5;
    1e6e:	45 30       	R0 = P5;
    1e70:	ff e3 5e fb 	CALL 0x152c <_MD5_Update>;
    1e74:	20 a9       	R0 = W[P4 + 0x8] (X);
    1e76:	b0 e6 a9 00 	B[SP + 0xa9] = R0;
    1e7a:	a1 e5 09 00 	R1 = B[P4 + 0x9] (X);
    1e7e:	56 30       	R2 = SP;
    1e80:	20 e1 a8 00 	R0 = 0xa8 (X);		/*		R0=0xa8(168) */
    1e84:	42 51       	R5 = R2 + R0;
    1e86:	b1 e6 a8 00 	B[SP + 0xa8] = R1;
    1e8a:	0d 30       	R1 = R5;
    1e8c:	12 60       	R2 = 0x2 (X);		/*		R2=0x2(  2) */
    1e8e:	45 30       	R0 = P5;
    1e90:	ff e3 4e fb 	CALL 0x152c <_MD5_Update>;
    1e94:	4c 30       	R1 = P4;
    1e96:	22 60       	R2 = 0x4 (X);		/*		R2=0x4(  4) */
    1e98:	61 64       	R1 += 0xc;		/* ( 12) */
    1e9a:	45 30       	R0 = P5;
    1e9c:	ff e3 48 fb 	CALL 0x152c <_MD5_Update>;
    1ea0:	06 30       	R0 = R6;
    1ea2:	f1 a1       	R1 = [SP + 0x1c];
    1ea4:	ff e3 ae f0 	CALL 0x0 <_MD5_Init>;
    1ea8:	c2 42       	R2 = R0.L (Z);
    1eaa:	0e 30       	R1 = R6;
    1eac:	45 30       	R0 = P5;
    1eae:	ff e3 3f fb 	CALL 0x152c <_MD5_Update>;
    1eb2:	56 30       	R2 = SP;
    1eb4:	26 e1 a0 00 	R6 = 0xa0 (X);		/*		R6=0xa0(160) */
    1eb8:	72 50       	R1 = R2 + R6;
    1eba:	32 60       	R2 = 0x6 (X);		/*		R2=0x6(  6) */
    1ebc:	45 30       	R0 = P5;
    1ebe:	ff e3 37 fb 	CALL 0x152c <_MD5_Update>;
    1ec2:	b0 e5 20 00 	R0 = B[SP + 0x20] (X);
    1ec6:	b0 e6 a9 00 	B[SP + 0xa9] = R0;
    1eca:	44 4e       	R4 >>= 0x8;
    1ecc:	0d 30       	R1 = R5;
    1ece:	12 60       	R2 = 0x2 (X);		/*		R2=0x2(  2) */
    1ed0:	b4 e6 a8 00 	B[SP + 0xa8] = R4;
    1ed4:	45 30       	R0 = P5;
    1ed6:	ff e3 2b fb 	CALL 0x152c <_MD5_Update>;
    1eda:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1edc:	70 e6 54 00 	W[SP + 0xa8] = R0;
    1ee0:	0d 30       	R1 = R5;
    1ee2:	12 60       	R2 = 0x2 (X);		/*		R2=0x2(  2) */
    1ee4:	45 30       	R0 = P5;
    1ee6:	ff e3 23 fb 	CALL 0x152c <_MD5_Update>;
    1eea:	12 60       	R2 = 0x2 (X);		/*		R2=0x2(  2) */
    1eec:	0d 30       	R1 = R5;
    1eee:	45 30       	R0 = P5;
    1ef0:	ff e3 1e fb 	CALL 0x152c <_MD5_Update>;
    1ef4:	46 30       	R0 = SP;
    1ef6:	21 e1 90 00 	R1 = 0x90 (X);		/*		R1=0x90(144) */
    1efa:	88 51       	R6 = R0 + R1;
    1efc:	4d 30       	R1 = P5;
    1efe:	06 30       	R0 = R6;
    1f00:	ff e3 f8 f4 	CALL 0x8f0 <_MD5_Final>;
    1f04:	72 ad       	P2 = [SP + 0x14];
    1f06:	31 ad       	P1 = [SP + 0x10];
    1f08:	f0 ac       	P0 = [SP + 0xc];
    1f0a:	32 e4 37 00 	R2 = [SP + 0xdc];
    1f0e:	21 e1 ee 14 	R1 = 0x14ee (X);		/*		R1=0x14ee(5358) */
    1f12:	b3 a1       	R3 = [SP + 0x18];
    1f14:	4a 50       	R1 = R2 + R1;
    1f16:	73 b2       	[SP + 0x24] = R3;
    1f18:	b2 be       	[SP + 0x28] = P2;
    1f1a:	f1 be       	[SP + 0x2c] = P1;
    1f1c:	30 bf       	[SP + 0x30] = P0;
    1f1e:	22 e1 40 00 	R2 = 0x40 (X);		/*		R2=0x40( 64) */
    1f22:	77 b3       	[SP + 0x34] = R7;
    1f24:	b7 b3       	[SP + 0x38] = R7;
    1f26:	37 e6 1f 00 	[SP + 0x7c] = R7;
    1f2a:	45 30       	R0 = P5;
    1f2c:	ff e3 00 fb 	CALL 0x152c <_MD5_Update>;
    1f30:	82 60       	R2 = 0x10 (X);		/*		R2=0x10( 16) */
    1f32:	0e 30       	R1 = R6;
    1f34:	45 30       	R0 = P5;
    1f36:	ff e3 fb fa 	CALL 0x152c <_MD5_Update>;
    1f3a:	4d 30       	R1 = P5;
    1f3c:	06 30       	R0 = R6;
    1f3e:	ff e3 d9 f4 	CALL 0x8f0 <_MD5_Final>;
    1f42:	29 e1 80 00 	P1 = 0x80 (X);		/*		P1=0x80(128) */
    1f46:	71 5a       	P1 = P1 + SP;
    1f48:	06 30       	R0 = R6;
    1f4a:	49 30       	R1 = P1;
    1f4c:	82 60       	R2 = 0x10 (X);		/*		R2=0x10( 16) */
    1f4e:	ff e3 59 f0 	CALL 0x0 <_MD5_Init>;
    1f52:	00 0c       	CC = R0 == 0x0;
    1f54:	0d 14       	IF !CC JUMP 0x1f6e <_DNSDigest_VerifyMessage+0x28a> (BP);
    1f56:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x14ee(5358) */
    1f5a:	01 e1 50 01 	R1.L = 0x150;		/* (336)	R1=0x150(336) */
    1f5e:	ff e3 51 f0 	CALL 0x0 <_MD5_Init>;
    1f62:	48 60       	R0 = 0x9 (X);		/*		R0=0x9(  9) */
    1f64:	18 97       	W[P3] = R0;
    1f66:	80 60       	R0 = 0x10 (X);		/*		R0=0x10( 16) */
    1f68:	38 97       	W[FP] = R0;
    1f6a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1f6c:	02 20       	JUMP.S 0x1f70 <_DNSDigest_VerifyMessage+0x28c>;
    1f6e:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    1f70:	29 e1 ac 00 	P1 = 0xac (X);		/*		P1=0xac(172) */
    1f74:	8e 5b       	SP = SP + P1;
    1f76:	77 90       	FP = [SP++];
    1f78:	27 01       	RETS = [SP++];
    1f7a:	a3 05       	(R7:4, P5:3) = [SP++];
    1f7c:	10 00       	RTS;
	...

GenLinkedList.o:     file format elf32-dv10


Disassembly of section .text:

00000000 <_AssignOffsetLink>:
_AssignOffsetLink():
   0:	90 50       	R2 = R0 + R2;
   2:	01 0c       	CC = R1 == 0x0;
   4:	03 18       	IF CC JUMP 0xa <_AssignOffsetLink+0xa>;
   6:	01 52       	R0 = R1 - R0;
   8:	02 20       	JUMP.S 0xc <_AssignOffsetLink+0xc>;
   a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   c:	12 32       	P2 = R2;
   e:	10 93       	[P2] = R0;
  10:	10 00       	RTS;
	...

00000014 <_InitLinkedList>:
_InitLinkedList():
  14:	10 32       	P2 = R0;
  16:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
  18:	10 93       	[P2] = R0;
  1a:	50 b0       	[P2 + 0x4] = R0;
  1c:	91 b0       	[P2 + 0x8] = R1;
  1e:	10 00       	RTS;

00000020 <_AddToTail>:
_AddToTail():
  20:	10 32       	P2 = R0;
  22:	51 ac       	P1 = [P2 + 0x4];
  24:	41 0c       	CC = P1 == 0x0;
  26:	05 1c       	IF CC JUMP 0x30 <_AddToTail+0x10> (BP);
  28:	90 ac       	P0 = [P2 + 0x8];
  2a:	41 5a       	P1 = P1 + P0;
  2c:	09 93       	[P1] = R1;
  2e:	02 20       	JUMP.S 0x32 <_AddToTail+0x12>;
  30:	11 93       	[P2] = R1;
  32:	01 32       	P0 = R1;
  34:	91 ac       	P1 = [P2 + 0x8];
  36:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
  38:	48 5a       	P1 = P0 + P1;
  3a:	08 93       	[P1] = R0;
  3c:	51 b0       	[P2 + 0x4] = R1;
  3e:	10 00       	RTS;

00000040 <_AddToHead>:
_AddToHead():
  40:	10 32       	P2 = R0;
  42:	01 32       	P0 = R1;
  44:	91 ac       	P1 = [P2 + 0x8];
  46:	10 91       	R0 = [P2];
  48:	48 5a       	P1 = P0 + P1;
  4a:	08 93       	[P1] = R0;
  4c:	50 a0       	R0 = [P2 + 0x4];
  4e:	00 0c       	CC = R0 == 0x0;
  50:	02 14       	IF !CC JUMP 0x54 <_AddToHead+0x14> (BP);
  52:	51 b0       	[P2 + 0x4] = R1;
  54:	11 93       	[P2] = R1;
  56:	10 00       	RTS;

00000058 <_RemoveFromList>:
_RemoveFromList():
  58:	10 32       	P2 = R0;
  5a:	c4 04       	[--SP] = (P5:4);
  5c:	00 68       	P0 = 0x0 (X);		/*		P0=0x0(  0) */
  5e:	51 91       	P1 = [P2];
  60:	20 20       	JUMP.S 0xa0 <_RemoveFromList+0x48>;
  62:	41 30       	R0 = P1;
  64:	08 08       	CC = R0 == R1;
  66:	19 14       	IF !CC JUMP 0x98 <_RemoveFromList+0x40> (BP);
  68:	40 0c       	CC = P0 == 0x0;
  6a:	91 ac       	P1 = [P2 + 0x8];
  6c:	07 18       	IF CC JUMP 0x7a <_RemoveFromList+0x22>;
  6e:	21 32       	P4 = R1;
  70:	48 5b       	P5 = P0 + P1;
  72:	4c 5a       	P1 = P4 + P1;
  74:	08 91       	R0 = [P1];
  76:	28 93       	[P5] = R0;
  78:	05 20       	JUMP.S 0x82 <_RemoveFromList+0x2a>;
  7a:	29 32       	P5 = R1;
  7c:	4d 5a       	P1 = P5 + P1;
  7e:	08 91       	R0 = [P1];
  80:	10 93       	[P2] = R0;
  82:	50 a0       	R0 = [P2 + 0x4];
  84:	08 08       	CC = R0 == R1;
  86:	02 14       	IF !CC JUMP 0x8a <_RemoveFromList+0x32> (BP);
  88:	50 bc       	[P2 + 0x4] = P0;
  8a:	09 32       	P1 = R1;
  8c:	92 ac       	P2 = [P2 + 0x8];
  8e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
  90:	91 5a       	P2 = P1 + P2;
  92:	10 93       	[P2] = R0;
  94:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
  96:	08 20       	JUMP.S 0xa6 <_RemoveFromList+0x4e>;
  98:	41 32       	P0 = P1;
  9a:	95 ac       	P5 = [P2 + 0x8];
  9c:	69 5b       	P5 = P1 + P5;
  9e:	69 91       	P1 = [P5];
  a0:	41 0c       	CC = P1 == 0x0;
  a2:	e0 17       	IF !CC JUMP 0x62 <_RemoveFromList+0xa> (BP);
  a4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
  a6:	84 04       	(P5:4) = [SP++];
  a8:	10 00       	RTS;
	...

000000ac <_ReplaceElem>:
_ReplaceElem():
  ac:	c3 04       	[--SP] = (P5:3);
  ae:	10 32       	P2 = R0;
  b0:	01 0c       	CC = R1 == 0x0;
  b2:	20 18       	IF CC JUMP 0xf2 <_ReplaceElem+0x46>;
  b4:	02 0c       	CC = R2 == 0x0;
  b6:	1e 1c       	IF CC JUMP 0xf2 <_ReplaceElem+0x46> (BP);
  b8:	05 68       	P5 = 0x0 (X);		/*		P5=0x0(  0) */
  ba:	51 91       	P1 = [P2];
  bc:	19 20       	JUMP.S 0xee <_ReplaceElem+0x42>;
  be:	41 30       	R0 = P1;
  c0:	08 08       	CC = R0 == R1;
  c2:	90 ac       	P0 = [P2 + 0x8];
  c4:	12 14       	IF !CC JUMP 0xe8 <_ReplaceElem+0x3c> (BP);
  c6:	1a 32       	P3 = R2;
  c8:	45 0c       	CC = P5 == 0x0;
  ca:	43 5a       	P1 = P3 + P0;
  cc:	19 32       	P3 = R1;
  ce:	03 5b       	P4 = P3 + P0;
  d0:	20 91       	R0 = [P4];
  d2:	08 93       	[P1] = R0;
  d4:	04 18       	IF CC JUMP 0xdc <_ReplaceElem+0x30>;
  d6:	05 5a       	P0 = P5 + P0;
  d8:	02 93       	[P0] = R2;
  da:	02 20       	JUMP.S 0xde <_ReplaceElem+0x32>;
  dc:	12 93       	[P2] = R2;
  de:	50 a0       	R0 = [P2 + 0x4];
  e0:	08 08       	CC = R0 == R1;
  e2:	0a 14       	IF !CC JUMP 0xf6 <_ReplaceElem+0x4a> (BP);
  e4:	52 b0       	[P2 + 0x4] = R2;
  e6:	08 20       	JUMP.S 0xf6 <_ReplaceElem+0x4a>;
  e8:	01 5a       	P0 = P1 + P0;
  ea:	69 32       	P5 = P1;
  ec:	41 91       	P1 = [P0];
  ee:	41 0c       	CC = P1 == 0x0;
  f0:	e7 17       	IF !CC JUMP 0xbe <_ReplaceElem+0x12> (BP);
  f2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
  f4:	02 20       	JUMP.S 0xf8 <_ReplaceElem+0x4c>;
  f6:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
  f8:	83 04       	(P5:3) = [SP++];
  fa:	10 00       	RTS;

000000fc <_InitDoubleLinkedList>:
_InitDoubleLinkedList():
  fc:	10 32       	P2 = R0;
  fe:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 100:	10 93       	[P2] = R0;
 102:	50 b0       	[P2 + 0x4] = R0;
 104:	91 b0       	[P2 + 0x8] = R1;
 106:	d2 b0       	[P2 + 0xc] = R2;
 108:	10 00       	RTS;
	...

0000010c <_DLLAddToHead>:
_DLLAddToHead():
 10c:	10 32       	P2 = R0;
 10e:	c5 04       	[--SP] = (P5:5);
 110:	29 32       	P5 = R1;
 112:	90 ac       	P0 = [P2 + 0x8];
 114:	51 91       	P1 = [P2];
 116:	05 5a       	P0 = P5 + P0;
 118:	41 93       	[P0] = P1;
 11a:	11 93       	[P2] = R1;
 11c:	41 0c       	CC = P1 == 0x0;
 11e:	05 1c       	IF CC JUMP 0x128 <_DLLAddToHead+0x1c> (BP);
 120:	d0 ac       	P0 = [P2 + 0xc];
 122:	41 5a       	P1 = P1 + P0;
 124:	09 93       	[P1] = R1;
 126:	02 20       	JUMP.S 0x12a <_DLLAddToHead+0x1e>;
 128:	51 b0       	[P2 + 0x4] = R1;
 12a:	09 32       	P1 = R1;
 12c:	d2 ac       	P2 = [P2 + 0xc];
 12e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 130:	91 5a       	P2 = P1 + P2;
 132:	10 93       	[P2] = R0;
 134:	85 04       	(P5:5) = [SP++];
 136:	10 00       	RTS;

00000138 <_DLLRemoveFromList>:
_DLLRemoveFromList():
 138:	10 32       	P2 = R0;
 13a:	c3 04       	[--SP] = (P5:3);
 13c:	4f 01       	[--SP] = FP;
 13e:	09 32       	P1 = R1;
 140:	97 ac       	FP = [P2 + 0x8];
 142:	d3 ac       	P3 = [P2 + 0xc];
 144:	39 5b       	P4 = P1 + FP;
 146:	59 5b       	P5 = P1 + P3;
 148:	69 91       	P1 = [P5];
 14a:	60 91       	P0 = [P4];
 14c:	41 0c       	CC = P1 == 0x0;
 14e:	04 18       	IF CC JUMP 0x156 <_DLLRemoveFromList+0x1e>;
 150:	f9 5b       	FP = P1 + FP;
 152:	78 93       	[FP] = P0;
 154:	02 20       	JUMP.S 0x158 <_DLLRemoveFromList+0x20>;
 156:	50 93       	[P2] = P0;
 158:	40 0c       	CC = P0 == 0x0;
 15a:	04 18       	IF CC JUMP 0x162 <_DLLRemoveFromList+0x2a>;
 15c:	18 5a       	P0 = P0 + P3;
 15e:	41 93       	[P0] = P1;
 160:	02 20       	JUMP.S 0x164 <_DLLRemoveFromList+0x2c>;
 162:	51 bc       	[P2 + 0x4] = P1;
 164:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 166:	20 93       	[P4] = R0;
 168:	28 93       	[P5] = R0;
 16a:	77 90       	FP = [SP++];
 16c:	83 04       	(P5:3) = [SP++];
 16e:	10 00       	RTS;

00000170 <_GetHeadPtr>:
_GetHeadPtr():
 170:	10 32       	P2 = R0;
 172:	11 91       	R1 = [P2];
 174:	01 0c       	CC = R1 == 0x0;
 176:	03 18       	IF CC JUMP 0x17c <_GetHeadPtr+0xc>;
 178:	08 50       	R0 = R0 + R1;
 17a:	02 20       	JUMP.S 0x17e <_GetHeadPtr+0xe>;
 17c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 17e:	10 00       	RTS;

00000180 <_GetTailPtr>:
_GetTailPtr():
 180:	10 32       	P2 = R0;
 182:	51 a0       	R1 = [P2 + 0x4];
 184:	01 0c       	CC = R1 == 0x0;
 186:	03 18       	IF CC JUMP 0x18c <_GetTailPtr+0xc>;
 188:	08 50       	R0 = R0 + R1;
 18a:	02 20       	JUMP.S 0x18e <_GetTailPtr+0xe>;
 18c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 18e:	10 00       	RTS;

00000190 <_GetOffsetLink>:
_GetOffsetLink():
 190:	08 32       	P1 = R0;
 192:	8a ac       	P2 = [P1 + 0x8];
 194:	09 32       	P1 = R1;
 196:	91 5a       	P2 = P1 + P2;
 198:	10 91       	R0 = [P2];
 19a:	00 0c       	CC = R0 == 0x0;
 19c:	03 18       	IF CC JUMP 0x1a2 <_GetOffsetLink+0x12>;
 19e:	01 50       	R0 = R1 + R0;
 1a0:	02 20       	JUMP.S 0x1a4 <_GetOffsetLink+0x14>;
 1a2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 1a4:	10 00       	RTS;
	...

000001a8 <_InitLinkedOffsetList>:
_InitLinkedOffsetList():
 1a8:	10 32       	P2 = R0;
 1aa:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 1ac:	10 93       	[P2] = R0;
 1ae:	50 b0       	[P2 + 0x4] = R0;
 1b0:	91 b0       	[P2 + 0x8] = R1;
 1b2:	10 00       	RTS;

000001b4 <_OffsetAddToTail>:
_OffsetAddToTail():
 1b4:	fd 05       	[--SP] = (R7:7, P5:5);
 1b6:	28 32       	P5 = R0;
 1b8:	67 01       	[--SP] = RETS;
 1ba:	a6 6f       	SP += -0xc;		/* (-12) */
 1bc:	39 30       	R7 = R1;
 1be:	68 a0       	R0 = [P5 + 0x4];
 1c0:	00 0c       	CC = R0 == 0x0;
 1c2:	08 1c       	IF CC JUMP 0x1d2 <_OffsetAddToTail+0x1e> (BP);
 1c4:	4d 30       	R1 = P5;
 1c6:	01 50       	R0 = R1 + R0;
 1c8:	aa a0       	R2 = [P5 + 0x8];
 1ca:	0f 30       	R1 = R7;
 1cc:	ff e3 1a ff 	CALL 0x0 <_AssignOffsetLink>;
 1d0:	04 20       	JUMP.S 0x1d8 <_OffsetAddToTail+0x24>;
 1d2:	4d 30       	R1 = P5;
 1d4:	0f 52       	R0 = R7 - R1;
 1d6:	28 93       	[P5] = R0;
 1d8:	07 30       	R0 = R7;
 1da:	aa a0       	R2 = [P5 + 0x8];
 1dc:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
 1de:	ff e3 11 ff 	CALL 0x0 <_AssignOffsetLink>;
 1e2:	45 30       	R0 = P5;
 1e4:	c7 53       	R7 = R7 - R0;
 1e6:	66 6c       	SP += 0xc;		/* ( 12) */
 1e8:	27 01       	RETS = [SP++];
 1ea:	6f b0       	[P5 + 0x4] = R7;
 1ec:	bd 05       	(R7:7, P5:5) = [SP++];
 1ee:	10 00       	RTS;

000001f0 <_OffsetAddToHead>:
_OffsetAddToHead():
 1f0:	fd 05       	[--SP] = (R7:7, P5:5);
 1f2:	28 32       	P5 = R0;
 1f4:	39 30       	R7 = R1;
 1f6:	67 01       	[--SP] = RETS;
 1f8:	a6 6f       	SP += -0xc;		/* (-12) */
 1fa:	29 91       	R1 = [P5];
 1fc:	01 0c       	CC = R1 == 0x0;
 1fe:	03 1c       	IF CC JUMP 0x204 <_OffsetAddToHead+0x14> (BP);
 200:	48 50       	R1 = R0 + R1;
 202:	02 20       	JUMP.S 0x206 <_OffsetAddToHead+0x16>;
 204:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
 206:	07 30       	R0 = R7;
 208:	aa a0       	R2 = [P5 + 0x8];
 20a:	ff e3 fb fe 	CALL 0x0 <_AssignOffsetLink>;
 20e:	68 a0       	R0 = [P5 + 0x4];
 210:	00 0c       	CC = R0 == 0x0;
 212:	04 10       	IF !CC JUMP 0x21a <_OffsetAddToHead+0x2a>;
 214:	4d 30       	R1 = P5;
 216:	0f 52       	R0 = R7 - R1;
 218:	68 b0       	[P5 + 0x4] = R0;
 21a:	45 30       	R0 = P5;
 21c:	c7 53       	R7 = R7 - R0;
 21e:	66 6c       	SP += 0xc;		/* ( 12) */
 220:	27 01       	RETS = [SP++];
 222:	2f 93       	[P5] = R7;
 224:	bd 05       	(R7:7, P5:5) = [SP++];
 226:	10 00       	RTS;

00000228 <_OffsetRemoveFromList>:
_OffsetRemoveFromList():
 228:	fb 05       	[--SP] = (R7:7, P5:3);
 22a:	28 32       	P5 = R0;
 22c:	67 01       	[--SP] = RETS;
 22e:	a6 6f       	SP += -0xc;		/* (-12) */
 230:	39 30       	R7 = R1;
 232:	6c 91       	P4 = [P5];
 234:	44 0c       	CC = P4 == 0x0;
 236:	03 1c       	IF CC JUMP 0x23c <_OffsetRemoveFromList+0x14> (BP);
 238:	25 5b       	P4 = P5 + P4;
 23a:	02 20       	JUMP.S 0x23e <_OffsetRemoveFromList+0x16>;
 23c:	04 68       	P4 = 0x0 (X);		/*		P4=0x0(  0) */
 23e:	03 68       	P3 = 0x0 (X);		/*		P3=0x0(  0) */
 240:	37 20       	JUMP.S 0x2ae <_OffsetRemoveFromList+0x86>;
 242:	44 30       	R0 = P4;
 244:	38 08       	CC = R0 == R7;
 246:	2e 14       	IF !CC JUMP 0x2a2 <_OffsetRemoveFromList+0x7a> (BP);
 248:	43 0c       	CC = P3 == 0x0;
 24a:	0b 18       	IF CC JUMP 0x260 <_OffsetRemoveFromList+0x38>;
 24c:	0f 30       	R1 = R7;
 24e:	45 30       	R0 = P5;
 250:	ff e3 a0 ff 	CALL 0x190 <_GetOffsetLink>;
 254:	08 30       	R1 = R0;
 256:	aa a0       	R2 = [P5 + 0x8];
 258:	43 30       	R0 = P3;
 25a:	ff e3 d3 fe 	CALL 0x0 <_AssignOffsetLink>;
 25e:	0c 20       	JUMP.S 0x276 <_OffsetRemoveFromList+0x4e>;
 260:	45 30       	R0 = P5;
 262:	0f 30       	R1 = R7;
 264:	ff e3 96 ff 	CALL 0x190 <_GetOffsetLink>;
 268:	00 0c       	CC = R0 == 0x0;
 26a:	04 18       	IF CC JUMP 0x272 <_OffsetRemoveFromList+0x4a>;
 26c:	4d 30       	R1 = P5;
 26e:	08 52       	R0 = R0 - R1;
 270:	02 20       	JUMP.S 0x274 <_OffsetRemoveFromList+0x4c>;
 272:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 274:	28 93       	[P5] = R0;
 276:	6a ac       	P2 = [P5 + 0x4];
 278:	42 0c       	CC = P2 == 0x0;
 27a:	04 1c       	IF CC JUMP 0x282 <_OffsetRemoveFromList+0x5a> (BP);
 27c:	95 5a       	P2 = P5 + P2;
 27e:	42 30       	R0 = P2;
 280:	02 20       	JUMP.S 0x284 <_OffsetRemoveFromList+0x5c>;
 282:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 284:	38 08       	CC = R0 == R7;
 286:	07 14       	IF !CC JUMP 0x294 <_OffsetRemoveFromList+0x6c> (BP);
 288:	43 0c       	CC = P3 == 0x0;
 28a:	03 18       	IF CC JUMP 0x290 <_OffsetRemoveFromList+0x68>;
 28c:	2b 44       	P3 -= P5;
 28e:	02 20       	JUMP.S 0x292 <_OffsetRemoveFromList+0x6a>;
 290:	03 68       	P3 = 0x0 (X);		/*		P3=0x0(  0) */
 292:	6b bc       	[P5 + 0x4] = P3;
 294:	07 30       	R0 = R7;
 296:	aa a0       	R2 = [P5 + 0x8];
 298:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
 29a:	ff e3 b3 fe 	CALL 0x0 <_AssignOffsetLink>;
 29e:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
 2a0:	0a 20       	JUMP.S 0x2b4 <_OffsetRemoveFromList+0x8c>;
 2a2:	4c 30       	R1 = P4;
 2a4:	45 30       	R0 = P5;
 2a6:	ff e3 75 ff 	CALL 0x190 <_GetOffsetLink>;
 2aa:	5c 32       	P3 = P4;
 2ac:	20 32       	P4 = R0;
 2ae:	44 0c       	CC = P4 == 0x0;
 2b0:	c9 17       	IF !CC JUMP 0x242 <_OffsetRemoveFromList+0x1a> (BP);
 2b2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 2b4:	66 6c       	SP += 0xc;		/* ( 12) */
 2b6:	27 01       	RETS = [SP++];
 2b8:	bb 05       	(R7:7, P5:3) = [SP++];
 2ba:	10 00       	RTS;

000002bc <_OffsetReplaceElem>:
_OffsetReplaceElem():
 2bc:	ec 05       	[--SP] = (R7:5, P5:4);
 2be:	67 01       	[--SP] = RETS;
 2c0:	a6 6f       	SP += -0xc;		/* (-12) */
 2c2:	28 32       	P5 = R0;
 2c4:	31 30       	R6 = R1;
 2c6:	3a 30       	R7 = R2;
 2c8:	01 0c       	CC = R1 == 0x0;
 2ca:	35 18       	IF CC JUMP 0x334 <_OffsetReplaceElem+0x78>;
 2cc:	02 0c       	CC = R2 == 0x0;
 2ce:	33 1c       	IF CC JUMP 0x334 <_OffsetReplaceElem+0x78> (BP);
 2d0:	6c 91       	P4 = [P5];
 2d2:	44 0c       	CC = P4 == 0x0;
 2d4:	03 1c       	IF CC JUMP 0x2da <_OffsetReplaceElem+0x1e> (BP);
 2d6:	25 5b       	P4 = P5 + P4;
 2d8:	02 20       	JUMP.S 0x2dc <_OffsetReplaceElem+0x20>;
 2da:	04 68       	P4 = 0x0 (X);		/*		P4=0x0(  0) */
 2dc:	05 60       	R5 = 0x0 (X);		/*		R5=0x0(  0) */
 2de:	29 20       	JUMP.S 0x330 <_OffsetReplaceElem+0x74>;
 2e0:	44 30       	R0 = P4;
 2e2:	30 08       	CC = R0 == R6;
 2e4:	20 14       	IF !CC JUMP 0x324 <_OffsetReplaceElem+0x68> (BP);
 2e6:	0e 30       	R1 = R6;
 2e8:	45 30       	R0 = P5;
 2ea:	ff e3 53 ff 	CALL 0x190 <_GetOffsetLink>;
 2ee:	08 30       	R1 = R0;
 2f0:	aa a0       	R2 = [P5 + 0x8];
 2f2:	07 30       	R0 = R7;
 2f4:	ff e3 86 fe 	CALL 0x0 <_AssignOffsetLink>;
 2f8:	05 0c       	CC = R5 == 0x0;
 2fa:	07 1c       	IF CC JUMP 0x308 <_OffsetReplaceElem+0x4c> (BP);
 2fc:	05 30       	R0 = R5;
 2fe:	0f 30       	R1 = R7;
 300:	aa a0       	R2 = [P5 + 0x8];
 302:	ff e3 7f fe 	CALL 0x0 <_AssignOffsetLink>;
 306:	04 20       	JUMP.S 0x30e <_OffsetReplaceElem+0x52>;
 308:	4d 30       	R1 = P5;
 30a:	0f 52       	R0 = R7 - R1;
 30c:	28 93       	[P5] = R0;
 30e:	6a ac       	P2 = [P5 + 0x4];
 310:	42 0c       	CC = P2 == 0x0;
 312:	13 1c       	IF CC JUMP 0x338 <_OffsetReplaceElem+0x7c> (BP);
 314:	95 5a       	P2 = P5 + P2;
 316:	42 30       	R0 = P2;
 318:	06 08       	CC = R6 == R0;
 31a:	0f 14       	IF !CC JUMP 0x338 <_OffsetReplaceElem+0x7c> (BP);
 31c:	4d 30       	R1 = P5;
 31e:	cf 53       	R7 = R7 - R1;
 320:	6f b0       	[P5 + 0x4] = R7;
 322:	0b 20       	JUMP.S 0x338 <_OffsetReplaceElem+0x7c>;
 324:	4c 30       	R1 = P4;
 326:	45 30       	R0 = P5;
 328:	ff e3 34 ff 	CALL 0x190 <_GetOffsetLink>;
 32c:	6c 30       	R5 = P4;
 32e:	20 32       	P4 = R0;
 330:	44 0c       	CC = P4 == 0x0;
 332:	d7 17       	IF !CC JUMP 0x2e0 <_OffsetReplaceElem+0x24> (BP);
 334:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 336:	02 20       	JUMP.S 0x33a <_OffsetReplaceElem+0x7e>;
 338:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
 33a:	66 6c       	SP += 0xc;		/* ( 12) */
 33c:	27 01       	RETS = [SP++];
 33e:	ac 05       	(R7:5, P5:4) = [SP++];
 340:	10 00       	RTS;
	...

PlatformCommon.o:     file format elf32-dv10


Disassembly of section .text:

00000000 <_mDNSPlatformSourceAddrForDest>:
_mDNSPlatformSourceAddrForDest():
   0:	f4 05       	[--SP] = (R7:6, P5:4);
   2:	67 01       	[--SP] = RETS;
   4:	20 32       	P4 = R0;
   6:	06 6f       	SP += -0x20;		/* (-32) */
   8:	80 60       	R0 = 0x10 (X);		/*		R0=0x10( 16) */
   a:	f0 b1       	[SP + 0x1c] = R0;
   c:	29 32       	P5 = R1;
   e:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
  10:	11 60       	R1 = 0x2 (X);		/*		R1=0x2(  2) */
  12:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
  14:	ff e3 f6 ff 	CALL 0x0 <_mDNSPlatformSourceAddrForDest>;
  18:	38 30       	R7 = R0;
  1a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
  1c:	20 93       	[P4] = R0;
  1e:	3f 0c       	CC = R7 == -0x1;
  20:	30 1c       	IF CC JUMP 0x80 <_mDNSPlatformSourceAddrForDest+0x80> (BP);
  22:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
  24:	28 91       	R0 = [P5];
  26:	08 08       	CC = R0 == R1;
  28:	0d 14       	IF !CC JUMP 0x42 <_mDNSPlatformSourceAddrForDest+0x42> (BP);
  2a:	80 60       	R0 = 0x10 (X);		/*		R0=0x10( 16) */
  2c:	b0 e6 0c 00 	B[SP + 0xc] = R0;
  30:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
  32:	b0 e6 0d 00 	B[SP + 0xd] = R0;
  36:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
  38:	f0 b5       	W[SP + 0xe] = R0;
  3a:	68 a0       	R0 = [P5 + 0x4];
  3c:	30 b1       	[SP + 0x10] = R0;
  3e:	82 60       	R2 = 0x10 (X);		/*		R2=0x10( 16) */
  40:	05 20       	JUMP.S 0x4a <_mDNSPlatformSourceAddrForDest+0x4a>;
  42:	31 60       	R1 = 0x6 (X);		/*		R1=0x6(  6) */
  44:	08 08       	CC = R0 == R1;
  46:	1d 14       	IF !CC JUMP 0x80 <_mDNSPlatformSourceAddrForDest+0x80> (BP);
  48:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
  4a:	76 30       	R6 = SP;
  4c:	66 64       	R6 += 0xc;		/* ( 12) */
  4e:	07 30       	R0 = R7;
  50:	0e 30       	R1 = R6;
  52:	ff e3 d7 ff 	CALL 0x0 <_mDNSPlatformSourceAddrForDest>;
  56:	80 0c       	CC = R0 < 0x0;
  58:	11 18       	IF CC JUMP 0x7a <_mDNSPlatformSourceAddrForDest+0x7a>;
  5a:	56 30       	R2 = SP;
  5c:	07 30       	R0 = R7;
  5e:	0e 30       	R1 = R6;
  60:	e2 64       	R2 += 0x1c;		/* ( 28) */
  62:	ff e3 cf ff 	CALL 0x0 <_mDNSPlatformSourceAddrForDest>;
  66:	80 0c       	CC = R0 < 0x0;
  68:	09 1c       	IF CC JUMP 0x7a <_mDNSPlatformSourceAddrForDest+0x7a> (BP);
  6a:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
  6c:	28 91       	R0 = [P5];
  6e:	20 93       	[P4] = R0;
  70:	28 91       	R0 = [P5];
  72:	08 08       	CC = R0 == R1;
  74:	03 14       	IF !CC JUMP 0x7a <_mDNSPlatformSourceAddrForDest+0x7a> (BP);
  76:	30 a1       	R0 = [SP + 0x10];
  78:	60 b0       	[P4 + 0x4] = R0;
  7a:	07 30       	R0 = R7;
  7c:	ff e3 c2 ff 	CALL 0x0 <_mDNSPlatformSourceAddrForDest>;
  80:	06 6d       	SP += 0x20;		/* ( 32) */
  82:	27 01       	RETS = [SP++];
  84:	b4 05       	(R7:6, P5:4) = [SP++];
  86:	10 00       	RTS;

00000088 <_ReadDDNSSettingsFromConfFile>:
_ReadDDNSSettingsFromConfFile():
  88:	02 32       	P0 = R2;
  8a:	f1 ac       	P1 = [SP + 0xc];
  8c:	32 ad       	P2 = [SP + 0x10];
  8e:	40 0c       	CC = P0 == 0x0;
  90:	03 18       	IF CC JUMP 0x96 <_ReadDDNSSettingsFromConfFile+0xe>;
  92:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
  94:	00 9b       	B[P0] = R0;
  96:	41 0c       	CC = P1 == 0x0;
  98:	03 18       	IF CC JUMP 0x9e <_ReadDDNSSettingsFromConfFile+0x16>;
  9a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
  9c:	08 9b       	B[P1] = R0;
  9e:	42 0c       	CC = P2 == 0x0;
  a0:	03 18       	IF CC JUMP 0xa6 <_ReadDDNSSettingsFromConfFile+0x1e>;
  a2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
  a4:	10 93       	[P2] = R0;
  a6:	10 00       	RTS;

000000a8 <_mDNSPlatformWriteLogMsg>:
	...
_mDNSPlatformWriteLogMsg():
  b0:	10 00       	RTS;
	...

mDNS.o:     file format elf32-dv10


Disassembly of section .text:

00000000 <_AddRecordToResponseList>:
_AddRecordToResponseList():
       0:	09 32       	P1 = R1;
       2:	10 32       	P2 = R0;
       4:	c4 04       	[--SP] = (P5:4);
       6:	02 32       	P0 = R2;
       8:	08 e4 2c 00 	R0 = [P1 + 0xb0];
       c:	00 0c       	CC = R0 == 0x0;
       e:	11 14       	IF !CC JUMP 0x30 <_AddRecordToResponseList+0x30> (BP);
      10:	54 91       	P4 = [P2];
      12:	2d e1 b0 00 	P5 = 0xb0 (X);		/*		P5=0xb0 <_IPv6CheckSum>(176) */
      16:	69 5b       	P5 = P1 + P5;
      18:	6c 08       	CC = P4 == P5;
      1a:	0b 18       	IF CC JUMP 0x30 <_AddRecordToResponseList+0x30>;
      1c:	21 93       	[P4] = R1;
      1e:	40 0c       	CC = P0 == 0x0;
      20:	05 1c       	IF CC JUMP 0x2a <_AddRecordToResponseList+0x2a> (BP);
      22:	00 e4 2e 00 	R0 = [P0 + 0xb8];
      26:	00 0c       	CC = R0 == 0x0;
      28:	80 06       	IF !CC P0 = R0;
      2a:	08 e7 2e 00 	[P1 + 0xb8] = P0;
      2e:	55 93       	[P2] = P5;
      30:	84 04       	(P5:4) = [SP++];
      32:	10 00       	RTS;

00000034 <_GetLabelDecimalValue>:
_GetLabelDecimalValue():
      34:	10 32       	P2 = R0;
      36:	60 05       	[--SP] = (R7:4);
      38:	57 99       	R7 = B[P2] (X);
      3a:	17 30       	R2 = R7;
      3c:	fa 67       	R2 += -0x1;		/* ( -1) */
      3e:	52 43       	R2 = R2.B (Z);
      40:	12 0e       	CC = R2 <= 0x2 (IU);
      42:	1e 10       	IF !CC JUMP 0x7e <_GetLabelDecimalValue+0x4a>;
      44:	0a 6c       	P2 += 0x1;		/* (  1) */
      46:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
      48:	0b 60       	R3 = 0x1 (X);		/*		R3=0x1(  1) */
      4a:	7d 43       	R5 = R7.B (Z);
      4c:	56 60       	R6 = 0xa (X);		/*		R6=0xa( 10) */
      4e:	4c 60       	R4 = 0x9 (X);		/*		R4=0x9(  9) */
      50:	0d 20       	JUMP.S 0x6a <_GetLabelDecimalValue+0x36>;
      52:	00 00       	NOP;
      54:	50 98       	R0 = B[P2++] (X);
      56:	38 30       	R7 = R0;
      58:	87 66       	R7 += -0x30;		/* (-48) */
      5a:	7f 43       	R7 = R7.B (Z);
      5c:	27 0a       	CC = R7 <= R4 (IU);
      5e:	10 10       	IF !CC JUMP 0x7e <_GetLabelDecimalValue+0x4a>;
      60:	f2 40       	R2 *= R6;
      62:	47 43       	R7 = R0.B (Z);
      64:	87 66       	R7 += -0x30;		/* (-48) */
      66:	97 50       	R2 = R7 + R2;
      68:	0b 64       	R3 += 0x1;		/* (  1) */
      6a:	2b 09       	CC = R3 <= R5;
      6c:	f3 1f       	IF CC JUMP 0x52 <_GetLabelDecimalValue+0x1e> (BP);
      6e:	20 e1 ff 00 	R0 = 0xff (X);		/*		R0=0xff(255) */
      72:	02 09       	CC = R2 <= R0;
      74:	05 10       	IF !CC JUMP 0x7e <_GetLabelDecimalValue+0x4a>;
      76:	11 32       	P2 = R1;
      78:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
      7a:	12 9b       	B[P2] = R2;
      7c:	04 20       	JUMP.S 0x84 <_GetLabelDecimalValue+0x50>;
      7e:	98 63       	R0 = -0xd (X);		/*		R0=0xfffffff3(-13) */
      80:	40 e1 fe ff 	R0.H = 0xfffe;		/* ( -2)	R0=0xfffefff3(-65549) */
      84:	20 05       	(R7:4) = [SP++];
      86:	10 00       	RTS;

00000088 <_CheckSum>:
_CheckSum():
      88:	10 32       	P2 = R0;
      8a:	04 20       	JUMP.S 0x92 <_CheckSum+0xa>;
      8c:	f1 67       	R1 += -0x2;		/* ( -2) */
      8e:	10 94       	R0 = W[P2++] (Z);
      90:	82 50       	R2 = R2 + R0;
      92:	01 0d       	CC = R1 <= 0x0;
      94:	fc 17       	IF !CC JUMP 0x8c <_CheckSum+0x4> (BP);
      96:	d0 42       	R0 = R2.L (Z);
      98:	82 4e       	R2 >>= 0x10;
      9a:	02 50       	R0 = R2 + R0;
      9c:	c1 42       	R1 = R0.L (Z);
      9e:	82 c6 80 85 	R2 = R0 >> 0x10;
      a2:	8a 50       	R2 = R2 + R1;
      a4:	80 e1 ff ff 	R0 = 0xffff (Z);		/*		R0=0xffff(65535) */
      a8:	02 08       	CC = R2 == R0;
      aa:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
      ac:	02 06       	IF !CC R0 = R2;
      ae:	10 00       	RTS;

000000b0 <_IPv6CheckSum>:
_IPv6CheckSum():
      b0:	00 32       	P0 = R0;
      b2:	10 32       	P2 = R0;
      b4:	67 01       	[--SP] = RETS;
      b6:	66 6e       	SP += -0x34;		/* (-52) */
      b8:	09 32       	P1 = R1;
      ba:	00 90       	R0 = [P0++];
      bc:	f0 b0       	[SP + 0xc] = R0;
      be:	50 a0       	R0 = [P2 + 0x4];
      c0:	30 b1       	[SP + 0x10] = R0;
      c2:	20 6c       	P0 += 0x4;		/* (  4) */
      c4:	00 90       	R0 = [P0++];
      c6:	70 b1       	[SP + 0x14] = R0;
      c8:	00 91       	R0 = [P0];
      ca:	b0 b1       	[SP + 0x18] = R0;
      cc:	51 32       	P2 = P1;
      ce:	10 90       	R0 = [P2++];
      d0:	f0 b1       	[SP + 0x1c] = R0;
      d2:	48 a0       	R0 = [P1 + 0x4];
      d4:	22 6c       	P2 += 0x4;		/* (  4) */
      d6:	30 b2       	[SP + 0x20] = R0;
      d8:	10 90       	R0 = [P2++];
      da:	70 b2       	[SP + 0x24] = R0;
      dc:	10 91       	R0 = [P2];
      de:	31 e4 12 00 	R1 = [SP + 0x48];
      e2:	b0 b2       	[SP + 0x28] = R0;
      e4:	82 c6 41 81 	R0 = R1 >> 0x18;
      e8:	b0 e6 2c 00 	B[SP + 0x2c] = R0;
      ec:	82 c6 81 81 	R0 = R1 >> 0x10;
      f0:	b0 e6 2d 00 	B[SP + 0x2d] = R0;
      f4:	82 c6 c1 81 	R0 = R1 >> 0x8;
      f8:	b0 e6 2e 00 	B[SP + 0x2e] = R0;
      fc:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
      fe:	b0 e6 30 00 	B[SP + 0x30] = R0;
     102:	b0 e6 31 00 	B[SP + 0x31] = R0;
     106:	b0 e6 32 00 	B[SP + 0x32] = R0;
     10a:	b2 e6 33 00 	B[SP + 0x33] = R2;
     10e:	b1 e6 2f 00 	B[SP + 0x2f] = R1;
     112:	30 e4 11 00 	R0 = [SP + 0x44];
     116:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
     118:	ff e3 b8 ff 	CALL 0x88 <_CheckSum>;
     11c:	c2 42       	R2 = R0.L (Z);
     11e:	46 30       	R0 = SP;
     120:	41 61       	R1 = 0x28 (X);		/*		R1=0x28( 40) */
     122:	60 64       	R0 += 0xc;		/* ( 12) */
     124:	ff e3 b2 ff 	CALL 0x88 <_CheckSum>;
     128:	a6 6d       	SP += 0x34;		/* ( 52) */
     12a:	27 01       	RETS = [SP++];
     12c:	10 00       	RTS;
	...

00000130 <_ExpireDupSuppressInfo>:
_ExpireDupSuppressInfo():
     130:	10 32       	P2 = R0;
     132:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     134:	41 68       	P1 = 0x8 (X);		/*		P1=0x8(  8) */
     136:	b2 e0 07 10 	LSETUP(0x13a <_ExpireDupSuppressInfo+0xa>, 0x144 <_ExpireDupSuppressInfo+0x14>) LC1 = P1;
     13a:	12 91       	R2 = [P2];
     13c:	8a 52       	R2 = R2 - R1;
     13e:	82 0c       	CC = R2 < 0x0;
     140:	02 14       	IF !CC JUMP 0x144 <_ExpireDupSuppressInfo+0x14> (BP);
     142:	50 b0       	[P2 + 0x4] = R0;
     144:	62 6c       	P2 += 0xc;		/* ( 12) */
     146:	10 00       	RTS;

00000148 <_GetRDLengthMem>:
_GetRDLengthMem():
     148:	10 32       	P2 = R0;
     14a:	88 60       	R0 = 0x11 (X);		/*		R0=0x11( 17) */
     14c:	51 a4       	R1 = W[P2 + 0x2] (Z);
     14e:	01 08       	CC = R1 == R0;
     150:	19 18       	IF CC JUMP 0x182 <_GetRDLengthMem+0x3a>;
     152:	01 0a       	CC = R1 <= R0 (IU);
     154:	05 14       	IF !CC JUMP 0x15e <_GetRDLengthMem+0x16> (BP);
     156:	30 60       	R0 = 0x6 (X);		/*		R0=0x6(  6) */
     158:	01 08       	CC = R1 == R0;
     15a:	11 14       	IF !CC JUMP 0x17c <_GetRDLengthMem+0x34> (BP);
     15c:	08 20       	JUMP.S 0x16c <_GetRDLengthMem+0x24>;
     15e:	d0 60       	R0 = 0x1a (X);		/*		R0=0x1a( 26) */
     160:	01 08       	CC = R1 == R0;
     162:	08 18       	IF CC JUMP 0x172 <_GetRDLengthMem+0x2a>;
     164:	78 61       	R0 = 0x2f (X);		/*		R0=0x2f( 47) */
     166:	01 08       	CC = R1 == R0;
     168:	0a 14       	IF !CC JUMP 0x17c <_GetRDLengthMem+0x34> (BP);
     16a:	07 20       	JUMP.S 0x178 <_GetRDLengthMem+0x30>;
     16c:	20 e1 14 02 	R0 = 0x214 (X);		/*		R0=0x214(532) */
     170:	0b 20       	JUMP.S 0x186 <_GetRDLengthMem+0x3e>;
     172:	20 e1 02 02 	R0 = 0x202 (X);		/*		R0=0x202(514) */
     176:	08 20       	JUMP.S 0x186 <_GetRDLengthMem+0x3e>;
     178:	00 61       	R0 = 0x20 (X);		/*		R0=0x20( 32) */
     17a:	06 20       	JUMP.S 0x186 <_GetRDLengthMem+0x3e>;
     17c:	00 00       	NOP;
     17e:	90 a9       	R0 = W[P2 + 0xc] (X);
     180:	03 20       	JUMP.S 0x186 <_GetRDLengthMem+0x3e>;
     182:	20 e1 00 02 	R0 = 0x200 (X);		/*		R0=0x200(512) */
     186:	10 00       	RTS;

00000188 <_GetEffectiveTTL>:
_GetEffectiveTTL():
     188:	78 05       	[--SP] = (R7:7);
     18a:	67 01       	[--SP] = RETS;
     18c:	a6 6f       	SP += -0xc;		/* (-12) */
     18e:	39 30       	R7 = R1;
     190:	10 0c       	CC = R0 == 0x2;
     192:	1d 18       	IF CC JUMP 0x1cc <_GetEffectiveTTL+0x44>;
     194:	18 0c       	CC = R0 == 0x3;
     196:	07 14       	IF !CC JUMP 0x1a4 <_GetEffectiveTTL+0x1c> (BP);
     198:	39 0c       	CC = R1 == -0x1;
     19a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     19c:	27 e1 20 1c 	R7 = 0x1c20 (X);		/*		R7=0x1c20(7200) */
     1a0:	07 06       	IF !CC R0 = R7;
     1a2:	17 20       	JUMP.S 0x1d0 <_GetEffectiveTTL+0x48>;
     1a4:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0xab89 */
     1a8:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     1ac:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
     1ae:	11 91       	R1 = [P2];
     1b0:	e8 4f       	R0 <<= 0x1d;
     1b2:	ff e3 27 ff 	CALL 0x0 <_AddRecordToResponseList>;
     1b6:	07 0a       	CC = R7 <= R0 (IU);
     1b8:	38 06       	IF !CC R7 = R0;
     1ba:	82 c6 f7 83 	R1 = R7 >> 0x2;
     1be:	17 64       	R7 += 0x2;		/* (  2) */
     1c0:	0f 50       	R0 = R7 + R1;
     1c2:	71 60       	R1 = 0xe (X);		/*		R1=0xe( 14) */
     1c4:	08 0a       	CC = R0 <= R1 (IU);
     1c6:	79 60       	R1 = 0xf (X);		/*		R1=0xf( 15) */
     1c8:	01 07       	IF CC R0 = R1;
     1ca:	03 20       	JUMP.S 0x1d0 <_GetEffectiveTTL+0x48>;
     1cc:	20 e1 20 1c 	R0 = 0x1c20 (X);		/*		R0=0x1c20(7200) */
     1d0:	66 6c       	SP += 0xc;		/* ( 12) */
     1d2:	27 01       	RETS = [SP++];
     1d4:	38 05       	(R7:7) = [SP++];
     1d6:	10 00       	RTS;

000001d8 <_FoundServiceInfo>:
_FoundServiceInfo():
     1d8:	11 32       	P2 = R1;
     1da:	c4 04       	[--SP] = (P5:4);
     1dc:	71 a1       	R1 = [SP + 0x14];
     1de:	2a 32       	P5 = R2;
     1e0:	01 0c       	CC = R1 == 0x0;
     1e2:	11 e5 98 00 	P1 = [P2 + 0x260];
     1e6:	3b 1c       	IF CC JUMP 0x25c <_FoundServiceInfo+0x84> (BP);
     1e8:	69 a4       	R1 = W[P5 + 0x2] (Z);
     1ea:	09 0c       	CC = R1 == 0x1;
     1ec:	0b 14       	IF !CC JUMP 0x202 <_FoundServiceInfo+0x2a> (BP);
     1ee:	0a e5 66 02 	P2 = [P1 + 0x998];
     1f2:	28 ae       	P0 = [P5 + 0x20];
     1f4:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
     1f6:	11 e6 41 00 	[P2 + 0x104] = R1;
     1fa:	41 a0       	R1 = [P0 + 0x4];
     1fc:	11 e6 42 00 	[P2 + 0x108] = R1;
     200:	16 20       	JUMP.S 0x22c <_FoundServiceInfo+0x54>;
     202:	e2 60       	R2 = 0x1c (X);		/*		R2=0x1c( 28) */
     204:	11 08       	CC = R1 == R2;
     206:	2b 14       	IF !CC JUMP 0x25c <_FoundServiceInfo+0x84> (BP);
     208:	0a e5 66 02 	P2 = [P1 + 0x998];
     20c:	28 ae       	P0 = [P5 + 0x20];
     20e:	31 60       	R1 = 0x6 (X);		/*		R1=0x6(  6) */
     210:	2c e1 08 01 	P4 = 0x108 (X);		/*		P4=0x108(264) */
     214:	11 e6 41 00 	[P2 + 0x104] = R1;
     218:	41 a0       	R1 = [P0 + 0x4];
     21a:	a2 5a       	P2 = P2 + P4;
     21c:	11 92       	[P2++] = R1;
     21e:	40 6c       	P0 += 0x8;		/* (  8) */
     220:	01 90       	R1 = [P0++];
     222:	11 92       	[P2++] = R1;
     224:	01 90       	R1 = [P0++];
     226:	11 92       	[P2++] = R1;
     228:	01 91       	R1 = [P0];
     22a:	11 93       	[P2] = R1;
     22c:	0a e5 66 02 	P2 = [P1 + 0x998];
     230:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
     232:	89 e6 92 09 	B[P1 + 0x992] = R1;
     236:	a9 a1       	R1 = [P5 + 0x18];
     238:	11 e6 40 00 	[P2 + 0x100] = R1;
     23c:	0a e5 67 02 	P2 = [P1 + 0x99c];
     240:	42 0c       	CC = P2 == 0x0;
     242:	0d 1c       	IF CC JUMP 0x25c <_FoundServiceInfo+0x84> (BP);
     244:	89 e4 91 09 	R1 = B[P1 + 0x991] (Z);
     248:	01 0c       	CC = R1 == 0x0;
     24a:	09 1c       	IF CC JUMP 0x25c <_FoundServiceInfo+0x84> (BP);
     24c:	09 e4 65 02 	R1 = [P1 + 0x994];
     250:	09 64       	R1 += 0x1;		/* (  1) */
     252:	09 e6 65 02 	[P1 + 0x994] = R1;
     256:	49 30       	R1 = P1;
     258:	84 04       	(P5:4) = [SP++];
     25a:	52 00       	JUMP (P2);
     25c:	84 04       	(P5:4) = [SP++];
     25e:	10 00       	RTS;

00000260 <_NSSCallback>:
_NSSCallback():
     260:	09 32       	P1 = R1;
     262:	09 e4 10 00 	R1 = [P1 + 0x40];
     266:	09 32       	P1 = R1;
     268:	4a 91       	P2 = [P1];
     26a:	42 0c       	CC = P2 == 0x0;
     26c:	02 1c       	IF CC JUMP 0x270 <_NSSCallback+0x10> (BP);
     26e:	52 00       	JUMP (P2);
     270:	10 00       	RTS;
	...

00000274 <_mDNS_GrowCache_internal>:
_mDNS_GrowCache_internal():
     274:	10 32       	P2 = R0;
     276:	01 0c       	CC = R1 == 0x0;
     278:	1f 18       	IF CC JUMP 0x2b6 <_mDNS_GrowCache_internal+0x42>;
     27a:	02 0c       	CC = R2 == 0x0;
     27c:	1d 18       	IF CC JUMP 0x2b6 <_mDNS_GrowCache_internal+0x42>;
     27e:	09 32       	P1 = R1;
     280:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     282:	28 e1 98 00 	P0 = 0x98 (X);		/*		P0=0x98(152) */
     286:	04 20       	JUMP.S 0x28e <_mDNS_GrowCache_internal+0x1a>;
     288:	08 64       	R0 += 0x1;		/* (  1) */
     28a:	09 e7 da ff 	[P1 + -0x98] = P1;
     28e:	41 5a       	P1 = P1 + P0;
     290:	90 09       	CC = R0 < R2 (IU);
     292:	fb 1f       	IF CC JUMP 0x288 <_mDNS_GrowCache_internal+0x14> (BP);
     294:	02 30       	R0 = R2;
     296:	23 e1 98 00 	R3 = 0x98 (X);		/*		R3=0x98(152) */
     29a:	f8 67       	R0 += -0x1;		/* ( -1) */
     29c:	d8 40       	R0 *= R3;
     29e:	01 50       	R0 = R1 + R0;
     2a0:	08 32       	P1 = R0;
     2a2:	13 e4 56 00 	R3 = [P2 + 0x158];
     2a6:	0b 93       	[P1] = R3;
     2a8:	10 e4 52 00 	R0 = [P2 + 0x148];
     2ac:	90 50       	R2 = R0 + R2;
     2ae:	11 e6 56 00 	[P2 + 0x158] = R1;
     2b2:	12 e6 52 00 	[P2 + 0x148] = R2;
     2b6:	10 00       	RTS;

000002b8 <_AcknowledgeRecord>:
_AcknowledgeRecord():
     2b8:	c4 04       	[--SP] = (P5:4);
     2ba:	21 32       	P4 = R1;
     2bc:	28 32       	P5 = R0;
     2be:	67 01       	[--SP] = RETS;
     2c0:	66 6f       	SP += -0x14;		/* (-20) */
     2c2:	e0 a3       	R0 = [P4 + 0x3c];
     2c4:	00 0c       	CC = R0 == 0x0;
     2c6:	30 1c       	IF CC JUMP 0x326 <_AcknowledgeRecord+0x6e> (BP);
     2c8:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
     2ca:	a0 e6 84 00 	B[P4 + 0x84] = R0;
     2ce:	28 a3       	R0 = [P5 + 0x30];
     2d0:	08 64       	R0 += 0x1;		/* (  1) */
     2d2:	e9 a2       	R1 = [P5 + 0x2c];
     2d4:	28 b3       	[P5 + 0x30] = R0;
     2d6:	01 08       	CC = R1 == R0;
     2d8:	0e 18       	IF CC JUMP 0x2f4 <_AcknowledgeRecord+0x3c>;
     2da:	f1 b0       	[SP + 0xc] = R1;
     2dc:	30 b1       	[SP + 0x10] = R0;
     2de:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1(  1) */
     2e2:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x1c( 28) */
     2e6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     2e8:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
     2ec:	02 e1 bc 04 	R2.L = 0x4bc;		/* (1212)	R2=0x4bc(1212) */
     2f0:	ff e3 88 fe 	CALL 0x0 <_AddRecordToResponseList>;
     2f4:	e2 af       	P2 = [P4 + 0x3c];
     2f6:	45 30       	R0 = P5;
     2f8:	4c 30       	R1 = P4;
     2fa:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
     2fc:	62 00       	CALL (P2);
     2fe:	e9 a2       	R1 = [P5 + 0x2c];
     300:	28 a3       	R0 = [P5 + 0x30];
     302:	01 08       	CC = R1 == R0;
     304:	0e 18       	IF CC JUMP 0x320 <_AcknowledgeRecord+0x68>;
     306:	f1 b0       	[SP + 0xc] = R1;
     308:	30 b1       	[SP + 0x10] = R0;
     30a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
     30e:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
     312:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     314:	01 e1 40 00 	R1.L = 0x40;		/* ( 64)	R1=0x40( 64) */
     318:	02 e1 bc 04 	R2.L = 0x4bc;		/* (1212)	R2=0x4bc(1212) */
     31c:	ff e3 72 fe 	CALL 0x0 <_AddRecordToResponseList>;
     320:	28 a3       	R0 = [P5 + 0x30];
     322:	f8 67       	R0 += -0x1;		/* ( -1) */
     324:	28 b3       	[P5 + 0x30] = R0;
     326:	a6 6c       	SP += 0x14;		/* ( 20) */
     328:	27 01       	RETS = [SP++];
     32a:	84 04       	(P5:4) = [SP++];
     32c:	10 00       	RTS;
	...

00000330 <_SetNextAnnounceProbeTime>:
_SetNextAnnounceProbeTime():
     330:	f4 05       	[--SP] = (R7:6, P5:4);
     332:	21 32       	P4 = R1;
     334:	28 32       	P5 = R0;
     336:	67 01       	[--SP] = RETS;
     338:	66 6f       	SP += -0x14;		/* (-20) */
     33a:	a0 e5 04 00 	R0 = B[P4 + 0x4] (X);
     33e:	42 43       	R2 = R0.B (Z);
     340:	12 0c       	CC = R2 == 0x2;
     342:	4c 14       	IF !CC JUMP 0x3da <_SetNextAnnounceProbeTime+0xaa> (BP);
     344:	20 e4 30 00 	R0 = [P4 + 0xc0];
     348:	27 e4 2f 00 	R7 = [P4 + 0xbc];
     34c:	c7 51       	R7 = R7 + R0;
     34e:	28 e4 37 00 	R0 = [P5 + 0xdc];
     352:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     356:	c7 53       	R7 = R7 - R0;
     358:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     35c:	50 60       	R0 = 0xa (X);		/*		R0=0xa( 10) */
     35e:	11 91       	R1 = [P2];
     360:	c8 40       	R0 *= R1;
     362:	07 09       	CC = R7 <= R0;
     364:	23 1c       	IF CC JUMP 0x3aa <_SetNextAnnounceProbeTime+0x7a> (BP);
     366:	61 a2       	R1 = [P4 + 0x24];
     368:	44 30       	R0 = P4;
     36a:	55 30       	R2 = P5;
     36c:	a6 e4 85 00 	R6 = B[P4 + 0x85] (Z);
     370:	21 64       	R1 += 0x4;		/* (  4) */
     372:	ba 65       	R2 += 0x37;		/* ( 55) */
     374:	20 64       	R0 += 0x4;		/* (  4) */
     376:	ff e3 45 fe 	CALL 0x0 <_AddRecordToResponseList>;
     37a:	30 b1       	[SP + 0x10] = R0;
     37c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x40( 64) */
     380:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     382:	01 e1 80 00 	R1.L = 0x80;		/* (128)	R1=0x80(128) */
     386:	16 30       	R2 = R6;
     388:	f7 b0       	[SP + 0xc] = R7;
     38a:	ff e3 3b fe 	CALL 0x0 <_AddRecordToResponseList>;
     38e:	28 e4 37 00 	R0 = [P5 + 0xdc];
     392:	2a e4 fa 07 	R2 = [P5 + 0x1fe8];
     396:	f0 b0       	[SP + 0xc] = R0;
     398:	02 52       	R0 = R2 - R0;
     39a:	30 b1       	[SP + 0x10] = R0;
     39c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x80(128) */
     3a0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     3a2:	01 e1 b8 00 	R1.L = 0xb8;		/* (184)	R1=0xb8(184) */
     3a6:	ff e3 2d fe 	CALL 0x0 <_AddRecordToResponseList>;
     3aa:	00 00       	NOP;
     3ac:	21 e4 2f 00 	R1 = [P4 + 0xbc];
     3b0:	20 e4 30 00 	R0 = [P4 + 0xc0];
     3b4:	01 50       	R0 = R1 + R0;
     3b6:	29 e4 3e 00 	R1 = [P5 + 0xf8];
     3ba:	41 52       	R1 = R1 - R0;
     3bc:	81 0c       	CC = R1 < 0x0;
     3be:	03 1c       	IF CC JUMP 0x3c4 <_SetNextAnnounceProbeTime+0x94> (BP);
     3c0:	28 e6 3e 00 	[P5 + 0xf8] = R0;
     3c4:	00 00       	NOP;
     3c6:	28 e4 37 00 	R0 = [P5 + 0xdc];
     3ca:	29 e4 3e 00 	R1 = [P5 + 0xf8];
     3ce:	41 52       	R1 = R1 - R0;
     3d0:	81 0c       	CC = R1 < 0x0;
     3d2:	39 14       	IF !CC JUMP 0x444 <_SetNextAnnounceProbeTime+0x114> (BP);
     3d4:	28 e6 3e 00 	[P5 + 0xf8] = R0;
     3d8:	36 20       	JUMP.S 0x444 <_SetNextAnnounceProbeTime+0x114>;
     3da:	00 00       	NOP;
     3dc:	a1 e4 86 00 	R1 = B[P4 + 0x86] (Z);
     3e0:	01 0c       	CC = R1 == 0x0;
     3e2:	31 18       	IF CC JUMP 0x444 <_SetNextAnnounceProbeTime+0x114>;
     3e4:	e1 61       	R1 = 0x3c (X);		/*		R1=0x3c( 60) */
     3e6:	8a 54       	R2 = R2 & R1;
     3e8:	02 0c       	CC = R2 == 0x0;
     3ea:	1d 1c       	IF CC JUMP 0x424 <_SetNextAnnounceProbeTime+0xf4> (BP);
     3ec:	e2 ae       	P2 = [P4 + 0x2c];
     3ee:	42 0c       	CC = P2 == 0x0;
     3f0:	06 1c       	IF CC JUMP 0x3fc <_SetNextAnnounceProbeTime+0xcc> (BP);
     3f2:	92 e4 04 00 	R2 = B[P2 + 0x4] (Z);
     3f6:	4a 54       	R1 = R2 & R1;
     3f8:	01 0c       	CC = R1 == 0x0;
     3fa:	15 1c       	IF CC JUMP 0x424 <_SetNextAnnounceProbeTime+0xf4> (BP);
     3fc:	00 00       	NOP;
     3fe:	22 af       	P2 = [P4 + 0x30];
     400:	42 0c       	CC = P2 == 0x0;
     402:	07 1c       	IF CC JUMP 0x410 <_SetNextAnnounceProbeTime+0xe0> (BP);
     404:	e1 61       	R1 = 0x3c (X);		/*		R1=0x3c( 60) */
     406:	92 e4 04 00 	R2 = B[P2 + 0x4] (Z);
     40a:	4a 54       	R1 = R2 & R1;
     40c:	01 0c       	CC = R1 == 0x0;
     40e:	0b 1c       	IF CC JUMP 0x424 <_SetNextAnnounceProbeTime+0xf4> (BP);
     410:	00 00       	NOP;
     412:	62 af       	P2 = [P4 + 0x34];
     414:	42 0c       	CC = P2 == 0x0;
     416:	0a 1c       	IF CC JUMP 0x42a <_SetNextAnnounceProbeTime+0xfa> (BP);
     418:	e1 61       	R1 = 0x3c (X);		/*		R1=0x3c( 60) */
     41a:	92 e4 04 00 	R2 = B[P2 + 0x4] (Z);
     41e:	4a 54       	R1 = R2 & R1;
     420:	01 0c       	CC = R1 == 0x0;
     422:	04 14       	IF !CC JUMP 0x42a <_SetNextAnnounceProbeTime+0xfa> (BP);
     424:	40 43       	R0 = R0.B (Z);
     426:	08 0c       	CC = R0 == 0x1;
     428:	0e 14       	IF !CC JUMP 0x444 <_SetNextAnnounceProbeTime+0x114> (BP);
     42a:	00 00       	NOP;
     42c:	21 e4 2f 00 	R1 = [P4 + 0xbc];
     430:	20 e4 30 00 	R0 = [P4 + 0xc0];
     434:	01 50       	R0 = R1 + R0;
     436:	29 e4 3f 00 	R1 = [P5 + 0xfc];
     43a:	41 52       	R1 = R1 - R0;
     43c:	81 0c       	CC = R1 < 0x0;
     43e:	03 18       	IF CC JUMP 0x444 <_SetNextAnnounceProbeTime+0x114>;
     440:	28 e6 3f 00 	[P5 + 0xfc] = R0;
     444:	a6 6c       	SP += 0x14;		/* ( 20) */
     446:	27 01       	RETS = [SP++];
     448:	b4 05       	(R7:6, P5:4) = [SP++];
     44a:	10 00       	RTS;

0000044c <_ReleaseCacheGroup>:
_ReleaseCacheGroup():
     44c:	c3 04       	[--SP] = (P5:3);
     44e:	29 32       	P5 = R1;
     450:	18 32       	P3 = R0;
     452:	67 01       	[--SP] = RETS;
     454:	a6 6f       	SP += -0xc;		/* (-12) */
     456:	6c 91       	P4 = [P5];
     458:	44 30       	R0 = P4;
     45a:	40 64       	R0 += 0x8;		/* (  8) */
     45c:	e1 a0       	R1 = [P4 + 0xc];
     45e:	01 08       	CC = R1 == R0;
     460:	08 18       	IF CC JUMP 0x470 <_ReleaseCacheGroup+0x24>;
     462:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3c( 60) */
     466:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     468:	01 e1 00 01 	R1.L = 0x100;		/* (256)	R1=0x100(256) */
     46c:	ff e3 ca fd 	CALL 0x0 <_AddRecordToResponseList>;
     470:	6a 91       	P2 = [P5];
     472:	4a 30       	R1 = P2;
     474:	10 a1       	R0 = [P2 + 0x10];
     476:	a1 64       	R1 += 0x14;		/* ( 20) */
     478:	08 08       	CC = R0 == R1;
     47a:	03 18       	IF CC JUMP 0x480 <_ReleaseCacheGroup+0x34>;
     47c:	ff e3 c2 fd 	CALL 0x0 <_AddRecordToResponseList>;
     480:	6a 91       	P2 = [P5];
     482:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     484:	66 6c       	SP += 0xc;		/* ( 12) */
     486:	10 b1       	[P2 + 0x10] = R0;
     488:	10 91       	R0 = [P2];
     48a:	28 93       	[P5] = R0;
     48c:	18 e4 56 00 	R0 = [P3 + 0x158];
     490:	20 93       	[P4] = R0;
     492:	18 e4 53 00 	R0 = [P3 + 0x14c];
     496:	f8 67       	R0 += -0x1;		/* ( -1) */
     498:	27 01       	RETS = [SP++];
     49a:	1c e7 56 00 	[P3 + 0x158] = P4;
     49e:	18 e6 53 00 	[P3 + 0x14c] = R0;
     4a2:	83 04       	(P5:3) = [SP++];
     4a4:	10 00       	RTS;
	...

000004a8 <_SuspendLLQs>:
_SuspendLLQs():
     4a8:	fc 05       	[--SP] = (R7:7, P5:4);
     4aa:	20 32       	P4 = R0;
     4ac:	67 01       	[--SP] = RETS;
     4ae:	a6 6f       	SP += -0xc;		/* (-12) */
     4b0:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
     4b2:	25 e5 4c 00 	P5 = [P4 + 0x130];
     4b6:	1c 20       	JUMP.S 0x4ee <_SuspendLLQs+0x46>;
     4b8:	00 00       	NOP;
     4ba:	28 a1       	R0 = [P5 + 0x10];
     4bc:	00 0d       	CC = R0 <= 0x0;
     4be:	16 1c       	IF CC JUMP 0x4ea <_SuspendLLQs+0x42> (BP);
     4c0:	a8 a3       	R0 = [P5 + 0x38];
     4c2:	00 0c       	CC = R0 == 0x0;
     4c4:	13 14       	IF !CC JUMP 0x4ea <_SuspendLLQs+0x42> (BP);
     4c6:	68 e4 99 00 	R0 = W[P5 + 0x132] (Z);
     4ca:	00 0c       	CC = R0 == 0x0;
     4cc:	0f 1c       	IF CC JUMP 0x4ea <_SuspendLLQs+0x42> (BP);
     4ce:	28 e4 8e 00 	R0 = [P5 + 0x238];
     4d2:	00 0c       	CC = R0 == 0x0;
     4d4:	0b 1c       	IF CC JUMP 0x4ea <_SuspendLLQs+0x42> (BP);
     4d6:	28 e4 40 00 	R0 = [P5 + 0x100];
     4da:	18 0c       	CC = R0 == 0x3;
     4dc:	07 14       	IF !CC JUMP 0x4ea <_SuspendLLQs+0x42> (BP);
     4de:	2f e6 41 00 	[P5 + 0x104] = R7;
     4e2:	44 30       	R0 = P4;
     4e4:	4d 30       	R1 = P5;
     4e6:	ff e3 8d fd 	CALL 0x0 <_AddRecordToResponseList>;
     4ea:	00 00       	NOP;
     4ec:	6d 91       	P5 = [P5];
     4ee:	45 0c       	CC = P5 == 0x0;
     4f0:	e4 17       	IF !CC JUMP 0x4b8 <_SuspendLLQs+0x10> (BP);
     4f2:	66 6c       	SP += 0xc;		/* ( 12) */
     4f4:	27 01       	RETS = [SP++];
     4f6:	bc 05       	(R7:7, P5:4) = [SP++];
     4f8:	10 00       	RTS;
	...

000004fc <_SameResourceRecordNameClassInterface>:
_SameResourceRecordNameClassInterface():
     4fc:	10 32       	P2 = R0;
     4fe:	67 01       	[--SP] = RETS;
     500:	a6 6f       	SP += -0xc;		/* (-12) */
     502:	09 32       	P1 = R1;
     504:	42 0c       	CC = P2 == 0x0;
     506:	07 14       	IF !CC JUMP 0x514 <_SameResourceRecordNameClassInterface+0x18> (BP);
     508:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x100(256) */
     50c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     50e:	01 e1 50 01 	R1.L = 0x150;		/* (336)	R1=0x150(336) */
     512:	08 20       	JUMP.S 0x522 <_SameResourceRecordNameClassInterface+0x26>;
     514:	41 0c       	CC = P1 == 0x0;
     516:	09 14       	IF !CC JUMP 0x528 <_SameResourceRecordNameClassInterface+0x2c> (BP);
     518:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x150(336) */
     51c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     51e:	01 e1 80 01 	R1.L = 0x180;		/* (384)	R1=0x180(384) */
     522:	ff e3 6f fd 	CALL 0x0 <_AddRecordToResponseList>;
     526:	1b 20       	JUMP.S 0x55c <_SameResourceRecordNameClassInterface+0x60>;
     528:	00 00       	NOP;
     52a:	d1 a1       	R1 = [P2 + 0x1c];
     52c:	01 0c       	CC = R1 == 0x0;
     52e:	06 1c       	IF CC JUMP 0x53a <_SameResourceRecordNameClassInterface+0x3e> (BP);
     530:	c8 a1       	R0 = [P1 + 0x1c];
     532:	00 0c       	CC = R0 == 0x0;
     534:	03 18       	IF CC JUMP 0x53a <_SameResourceRecordNameClassInterface+0x3e>;
     536:	01 08       	CC = R1 == R0;
     538:	12 14       	IF !CC JUMP 0x55c <_SameResourceRecordNameClassInterface+0x60> (BP);
     53a:	00 00       	NOP;
     53c:	11 a5       	R1 = W[P2 + 0x8] (Z);
     53e:	08 a5       	R0 = W[P1 + 0x8] (Z);
     540:	01 08       	CC = R1 == R0;
     542:	0d 14       	IF !CC JUMP 0x55c <_SameResourceRecordNameClassInterface+0x60> (BP);
     544:	51 a1       	R1 = [P2 + 0x14];
     546:	48 a1       	R0 = [P1 + 0x14];
     548:	01 08       	CC = R1 == R0;
     54a:	09 14       	IF !CC JUMP 0x55c <_SameResourceRecordNameClassInterface+0x60> (BP);
     54c:	10 a2       	R0 = [P2 + 0x20];
     54e:	09 a2       	R1 = [P1 + 0x20];
     550:	ff e3 58 fd 	CALL 0x0 <_AddRecordToResponseList>;
     554:	00 0c       	CC = R0 == 0x0;
     556:	00 02       	R0 = CC;
     558:	00 4b       	BITTGL (R0, 0x0);		/* bit  0 */
     55a:	02 20       	JUMP.S 0x55e <_SameResourceRecordNameClassInterface+0x62>;
     55c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     55e:	66 6c       	SP += 0xc;		/* ( 12) */
     560:	27 01       	RETS = [SP++];
     562:	10 00       	RTS;

00000564 <_FoundServiceInfoTXT>:
_FoundServiceInfoTXT():
     564:	09 32       	P1 = R1;
     566:	fd 05       	[--SP] = (R7:7, P5:5);
     568:	67 01       	[--SP] = RETS;
     56a:	a6 6f       	SP += -0xc;		/* (-12) */
     56c:	38 30       	R7 = R0;
     56e:	70 a2       	R0 = [SP + 0x24];
     570:	12 32       	P2 = R2;
     572:	0d e5 98 00 	P5 = [P1 + 0x260];
     576:	00 0c       	CC = R0 == 0x0;
     578:	32 1c       	IF CC JUMP 0x5dc <_FoundServiceInfoTXT+0x78> (BP);
     57a:	81 60       	R1 = 0x10 (X);		/*		R1=0x10( 16) */
     57c:	50 a4       	R0 = W[P2 + 0x2] (Z);
     57e:	08 08       	CC = R0 == R1;
     580:	2e 14       	IF !CC JUMP 0x5dc <_FoundServiceInfoTXT+0x78> (BP);
     582:	90 a5       	R0 = W[P2 + 0xc] (Z);
     584:	21 e1 00 08 	R1 = 0x800 (X);		/*		R1=0x800(2048) */
     588:	08 0a       	CC = R0 <= R1 (IU);
     58a:	29 14       	IF !CC JUMP 0x5dc <_FoundServiceInfoTXT+0x78> (BP);
     58c:	29 e5 66 02 	P1 = [P5 + 0x998];
     590:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
     592:	a8 e6 91 09 	B[P5 + 0x991] = R0;
     596:	90 a9       	R0 = W[P2 + 0xc] (X);
     598:	48 e6 8d 00 	W[P1 + 0x11a] = R0;
     59c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     59e:	88 e6 1c 01 	B[P1 + 0x11c] = R0;
     5a2:	29 e4 66 02 	R1 = [P5 + 0x998];
     5a6:	20 e1 1c 01 	R0 = 0x11c (X);		/*		R0=0x11c(284) */
     5aa:	01 50       	R0 = R1 + R0;
     5ac:	11 a2       	R1 = [P2 + 0x20];
     5ae:	92 a5       	R2 = W[P2 + 0xc] (Z);
     5b0:	21 64       	R1 += 0x4;		/* (  4) */
     5b2:	ff e3 27 fd 	CALL 0x0 <_AddRecordToResponseList>;
     5b6:	2a e5 67 02 	P2 = [P5 + 0x99c];
     5ba:	42 0c       	CC = P2 == 0x0;
     5bc:	10 1c       	IF CC JUMP 0x5dc <_FoundServiceInfoTXT+0x78> (BP);
     5be:	a8 e4 92 09 	R0 = B[P5 + 0x992] (Z);
     5c2:	00 0c       	CC = R0 == 0x0;
     5c4:	0c 1c       	IF CC JUMP 0x5dc <_FoundServiceInfoTXT+0x78> (BP);
     5c6:	28 e4 65 02 	R0 = [P5 + 0x994];
     5ca:	08 64       	R0 += 0x1;		/* (  1) */
     5cc:	28 e6 65 02 	[P5 + 0x994] = R0;
     5d0:	66 6c       	SP += 0xc;		/* ( 12) */
     5d2:	27 01       	RETS = [SP++];
     5d4:	07 30       	R0 = R7;
     5d6:	4d 30       	R1 = P5;
     5d8:	bd 05       	(R7:7, P5:5) = [SP++];
     5da:	52 00       	JUMP (P2);
     5dc:	66 6c       	SP += 0xc;		/* ( 12) */
     5de:	27 01       	RETS = [SP++];
     5e0:	bd 05       	(R7:7, P5:5) = [SP++];
     5e2:	10 00       	RTS;

000005e4 <_DynDNSHostNameCallback>:
_DynDNSHostNameCallback():
     5e4:	11 32       	P2 = R1;
     5e6:	0a 30       	R1 = R2;
     5e8:	10 a2       	R0 = [P2 + 0x20];
     5ea:	ff e2 0b fd 	JUMP.L 0x0 <_AddRecordToResponseList>;
	...

000005f0 <_InitializeLastAPTime>:
_InitializeLastAPTime():
     5f0:	c3 04       	[--SP] = (P5:3);
     5f2:	21 32       	P4 = R1;
     5f4:	28 32       	P5 = R0;
     5f6:	67 01       	[--SP] = RETS;
     5f8:	26 6f       	SP += -0x1c;		/* (-28) */
     5fa:	20 e4 19 00 	R0 = [P4 + 0x64];
     5fe:	00 0c       	CC = R0 == 0x0;
     600:	07 1c       	IF CC JUMP 0x60e <_InitializeLastAPTime+0x1e> (BP);
     602:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     606:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     60a:	10 91       	R0 = [P2];
     60c:	23 20       	JUMP.S 0x652 <_InitializeLastAPTime+0x62>;
     60e:	61 60       	R1 = 0xc (X);		/*		R1=0xc( 12) */
     610:	a0 e4 04 00 	R0 = B[P4 + 0x4] (Z);
     614:	48 54       	R1 = R0 & R1;
     616:	01 0c       	CC = R1 == 0x0;
     618:	12 14       	IF !CC JUMP 0x63c <_InitializeLastAPTime+0x4c> (BP);
     61a:	08 48       	CC = !BITTST (R0, 0x1);		/* bit  1 */
     61c:	0c 1c       	IF CC JUMP 0x634 <_InitializeLastAPTime+0x44> (BP);
     61e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     622:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     626:	10 91       	R0 = [P2];
     628:	08 30       	R1 = R0;
     62a:	80 0c       	CC = R0 < 0x0;
     62c:	19 64       	R1 += 0x3;		/* (  3) */
     62e:	01 07       	IF CC R0 = R1;
     630:	10 4d       	R0 >>>= 0x2;
     632:	10 20       	JUMP.S 0x652 <_InitializeLastAPTime+0x62>;
     634:	81 61       	R1 = 0x30 (X);		/*		R1=0x30( 48) */
     636:	08 54       	R0 = R0 & R1;
     638:	00 0c       	CC = R0 == 0x0;
     63a:	0b 1c       	IF CC JUMP 0x650 <_InitializeLastAPTime+0x60> (BP);
     63c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     640:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     644:	10 91       	R0 = [P2];
     646:	82 c6 08 83 	R1 = R0 >> 0x1f;
     64a:	01 50       	R0 = R1 + R0;
     64c:	08 4d       	R0 >>>= 0x1;
     64e:	02 20       	JUMP.S 0x652 <_InitializeLastAPTime+0x62>;
     650:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     652:	a1 e4 85 00 	R1 = B[P4 + 0x85] (Z);
     656:	01 0c       	CC = R1 == 0x0;
     658:	20 e6 2f 00 	[P4 + 0xbc] = R0;
     65c:	29 e4 fa 07 	R1 = [P5 + 0x1fe8];
     660:	8a 1c       	IF CC JUMP 0x774 <_InitializeLastAPTime+0x184> (BP);
     662:	01 0c       	CC = R1 == 0x0;
     664:	06 1c       	IF CC JUMP 0x670 <_InitializeLastAPTime+0x80> (BP);
     666:	28 e4 37 00 	R0 = [P5 + 0xdc];
     66a:	41 52       	R1 = R1 - R0;
     66c:	81 0c       	CC = R1 < 0x0;
     66e:	7d 14       	IF !CC JUMP 0x768 <_InitializeLastAPTime+0x178> (BP);
     670:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     674:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     678:	10 91       	R0 = [P2];
     67a:	08 30       	R1 = R0;
     67c:	80 0c       	CC = R0 < 0x0;
     67e:	39 64       	R1 += 0x7;		/* (  7) */
     680:	01 07       	IF CC R0 = R1;
     682:	18 4d       	R0 >>>= 0x3;
     684:	10 32       	P2 = R0;
     686:	2b e5 37 00 	P3 = [P5 + 0xdc];
     68a:	da 5a       	P3 = P2 + P3;
     68c:	ff e3 ba fc 	CALL 0x0 <_AddRecordToResponseList>;
     690:	10 32       	P2 = R0;
     692:	29 e4 3e 00 	R1 = [P5 + 0xf8];
     696:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
     698:	da 5a       	P3 = P2 + P3;
     69a:	11 32       	P2 = R1;
     69c:	43 0c       	CC = P3 == 0x0;
     69e:	98 07       	IF CC P3 = R0;
     6a0:	2b e7 fa 07 	[P5 + 0x1fe8] = P3;
     6a4:	13 44       	P3 -= P2;
     6a6:	c3 0c       	CC = P3 < 0x0;
     6a8:	05 18       	IF CC JUMP 0x6b2 <_InitializeLastAPTime+0xc2>;
     6aa:	01 0c       	CC = R1 == 0x0;
     6ac:	08 07       	IF CC R1 = R0;
     6ae:	29 e6 fa 07 	[P5 + 0x1fe8] = R1;
     6b2:	28 e4 37 00 	R0 = [P5 + 0xdc];
     6b6:	29 e4 fa 07 	R1 = [P5 + 0x1fe8];
     6ba:	41 52       	R1 = R1 - R0;
     6bc:	81 0c       	CC = R1 < 0x0;
     6be:	03 14       	IF !CC JUMP 0x6c4 <_InitializeLastAPTime+0xd4> (BP);
     6c0:	28 e6 fa 07 	[P5 + 0x1fe8] = R0;
     6c4:	00 00       	NOP;
     6c6:	29 e4 3d 00 	R1 = [P5 + 0xf4];
     6ca:	2a e4 fa 07 	R2 = [P5 + 0x1fe8];
     6ce:	8a 52       	R2 = R2 - R1;
     6d0:	82 0c       	CC = R2 < 0x0;
     6d2:	06 18       	IF CC JUMP 0x6de <_InitializeLastAPTime+0xee>;
     6d4:	01 0c       	CC = R1 == 0x0;
     6d6:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
     6d8:	0a 07       	IF CC R1 = R2;
     6da:	29 e6 fa 07 	[P5 + 0x1fe8] = R1;
     6de:	29 e4 fa 07 	R1 = [P5 + 0x1fe8];
     6e2:	41 52       	R1 = R1 - R0;
     6e4:	81 0c       	CC = R1 < 0x0;
     6e6:	03 14       	IF !CC JUMP 0x6ec <_InitializeLastAPTime+0xfc> (BP);
     6e8:	28 e6 fa 07 	[P5 + 0x1fe8] = R0;
     6ec:	00 00       	NOP;
     6ee:	29 e4 3b 00 	R1 = [P5 + 0xec];
     6f2:	01 0c       	CC = R1 == 0x0;
     6f4:	08 1c       	IF CC JUMP 0x704 <_InitializeLastAPTime+0x114> (BP);
     6f6:	2a e4 fa 07 	R2 = [P5 + 0x1fe8];
     6fa:	8a 52       	R2 = R2 - R1;
     6fc:	82 0c       	CC = R2 < 0x0;
     6fe:	03 14       	IF !CC JUMP 0x704 <_InitializeLastAPTime+0x114> (BP);
     700:	29 e6 fa 07 	[P5 + 0x1fe8] = R1;
     704:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
     708:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
     70c:	2a e4 fa 07 	R2 = [P5 + 0x1fe8];
     710:	19 91       	R1 = [P3];
     712:	82 52       	R2 = R2 - R0;
     714:	19 4f       	R1 <<= 0x3;
     716:	0a 09       	CC = R2 <= R1;
     718:	28 1c       	IF CC JUMP 0x768 <_InitializeLastAPTime+0x178> (BP);
     71a:	2b e4 3e 00 	R3 = [P5 + 0xf8];
     71e:	c3 52       	R3 = R3 - R0;
     720:	f3 b0       	[SP + 0xc] = R3;
     722:	2b e4 3d 00 	R3 = [P5 + 0xf4];
     726:	29 e4 3b 00 	R1 = [P5 + 0xec];
     72a:	c3 52       	R3 = R3 - R0;
     72c:	01 52       	R0 = R1 - R0;
     72e:	71 b1       	[SP + 0x14] = R1;
     730:	b0 b1       	[SP + 0x18] = R0;
     732:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x30( 48) */
     736:	33 b1       	[SP + 0x10] = R3;
     738:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     73a:	01 e1 b0 01 	R1.L = 0x1b0;		/* (432)	R1=0x1b0(432) */
     73e:	ff e3 61 fc 	CALL 0x0 <_AddRecordToResponseList>;
     742:	18 91       	R0 = [P3];
     744:	08 30       	R1 = R0;
     746:	80 0c       	CC = R0 < 0x0;
     748:	39 64       	R1 += 0x7;		/* (  7) */
     74a:	01 07       	IF CC R0 = R1;
     74c:	18 4d       	R0 >>>= 0x3;
     74e:	10 32       	P2 = R0;
     750:	2b e5 37 00 	P3 = [P5 + 0xdc];
     754:	da 5a       	P3 = P2 + P3;
     756:	ff e3 55 fc 	CALL 0x0 <_AddRecordToResponseList>;
     75a:	10 32       	P2 = R0;
     75c:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
     75e:	da 5a       	P3 = P2 + P3;
     760:	43 0c       	CC = P3 == 0x0;
     762:	98 07       	IF CC P3 = R0;
     764:	2b e7 fa 07 	[P5 + 0x1fe8] = P3;
     768:	00 00       	NOP;
     76a:	29 e4 fa 07 	R1 = [P5 + 0x1fe8];
     76e:	20 e4 2f 00 	R0 = [P4 + 0xbc];
     772:	20 20       	JUMP.S 0x7b2 <_InitializeLastAPTime+0x1c2>;
     774:	01 0c       	CC = R1 == 0x0;
     776:	1b 1c       	IF CC JUMP 0x7ac <_InitializeLastAPTime+0x1bc> (BP);
     778:	2a e4 37 00 	R2 = [P5 + 0xdc];
     77c:	91 52       	R2 = R1 - R2;
     77e:	82 0c       	CC = R2 < 0x0;
     780:	16 18       	IF CC JUMP 0x7ac <_InitializeLastAPTime+0x1bc>;
     782:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     786:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     78a:	12 91       	R2 = [P2];
     78c:	1a 30       	R3 = R2;
     78e:	1b 64       	R3 += 0x3;		/* (  3) */
     790:	82 0c       	CC = R2 < 0x0;
     792:	13 07       	IF CC R2 = R3;
     794:	12 4d       	R2 >>>= 0x2;
     796:	82 c6 0a 86 	R3 = R2 << 0x1;
     79a:	93 50       	R2 = R3 + R2;
     79c:	4a 50       	R1 = R2 + R1;
     79e:	41 52       	R1 = R1 - R0;
     7a0:	82 c6 08 85 	R2 = R0 >> 0x1f;
     7a4:	02 50       	R0 = R2 + R0;
     7a6:	08 4d       	R0 >>>= 0x1;
     7a8:	01 50       	R0 = R1 + R0;
     7aa:	05 20       	JUMP.S 0x7b4 <_InitializeLastAPTime+0x1c4>;
     7ac:	00 00       	NOP;
     7ae:	29 e4 37 00 	R1 = [P5 + 0xdc];
     7b2:	01 52       	R0 = R1 - R0;
     7b4:	20 e6 30 00 	[P4 + 0xc0] = R0;
     7b8:	20 e4 19 00 	R0 = [P4 + 0x64];
     7bc:	00 0c       	CC = R0 == 0x0;
     7be:	05 1c       	IF CC JUMP 0x7c8 <_InitializeLastAPTime+0x1d8> (BP);
     7c0:	28 e4 37 00 	R0 = [P5 + 0xdc];
     7c4:	20 e6 30 00 	[P4 + 0xc0] = R0;
     7c8:	00 00       	NOP;
     7ca:	68 a0       	R0 = [P5 + 0x4];
     7cc:	00 48       	CC = !BITTST (R0, 0x0);		/* bit  0 */
     7ce:	18 1c       	IF CC JUMP 0x7fe <_InitializeLastAPTime+0x20e> (BP);
     7d0:	20 e4 13 00 	R0 = [P4 + 0x4c];
     7d4:	00 0c       	CC = R0 == 0x0;
     7d6:	14 1c       	IF CC JUMP 0x7fe <_InitializeLastAPTime+0x20e> (BP);
     7d8:	e1 60       	R1 = 0x1c (X);		/*		R1=0x1c( 28) */
     7da:	e0 a4       	R0 = W[P4 + 0x6] (Z);
     7dc:	08 08       	CC = R0 == R1;
     7de:	10 14       	IF !CC JUMP 0x7fe <_InitializeLastAPTime+0x20e> (BP);
     7e0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     7e4:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     7e8:	11 91       	R1 = [P2];
     7ea:	50 60       	R0 = 0xa (X);		/*		R0=0xa( 10) */
     7ec:	c8 40       	R0 *= R1;
     7ee:	21 e4 2f 00 	R1 = [P4 + 0xbc];
     7f2:	08 52       	R0 = R0 - R1;
     7f4:	29 e4 37 00 	R1 = [P5 + 0xdc];
     7f8:	08 50       	R0 = R0 + R1;
     7fa:	20 e6 30 00 	[P4 + 0xc0] = R0;
     7fe:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     802:	28 e4 37 00 	R0 = [P5 + 0xdc];
     806:	20 e6 31 00 	[P4 + 0xc4] = R0;
     80a:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     80e:	10 91       	R0 = [P2];
     810:	20 e6 32 00 	[P4 + 0xc8] = R0;
     814:	e6 6c       	SP += 0x1c;		/* ( 28) */
     816:	27 01       	RETS = [SP++];
     818:	45 30       	R0 = P5;
     81a:	4c 30       	R1 = P4;
     81c:	83 04       	(P5:3) = [SP++];
     81e:	ff e2 89 fd 	JUMP.L 0x330 <_SetNextAnnounceProbeTime>;
	...

00000824 <_RestartARPProbing>:
_RestartARPProbing():
     824:	11 32       	P2 = R1;
     826:	11 60       	R1 = 0x2 (X);		/*		R1=0x2(  2) */
     828:	42 60       	R2 = 0x8 (X);		/*		R2=0x8(  8) */
     82a:	91 e6 04 00 	B[P2 + 0x4] = R1;
     82e:	19 60       	R1 = 0x3 (X);		/*		R1=0x3(  3) */
     830:	91 e6 85 00 	B[P2 + 0x85] = R1;
     834:	91 e4 86 00 	R1 = B[P2 + 0x86] (Z);
     838:	11 08       	CC = R1 == R2;
     83a:	0c 14       	IF !CC JUMP 0x852 <_RestartARPProbing+0x2e> (BP);
     83c:	08 32       	P1 = R0;
     83e:	11 e4 30 00 	R1 = [P2 + 0xc0];
     842:	0a e4 37 00 	R2 = [P1 + 0xdc];
     846:	4a 52       	R1 = R2 - R1;
     848:	81 0c       	CC = R1 < 0x0;
     84a:	04 1c       	IF CC JUMP 0x852 <_RestartARPProbing+0x2e> (BP);
     84c:	4a 30       	R1 = P2;
     84e:	ff e2 d1 fe 	JUMP.L 0x5f0 <_InitializeLastAPTime>;
     852:	41 60       	R1 = 0x8 (X);		/*		R1=0x8(  8) */
     854:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x8 */
     858:	91 e6 86 00 	B[P2 + 0x86] = R1;
     85c:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
     860:	0a 91       	R2 = [P1];
     862:	08 32       	P1 = R0;
     864:	49 60       	R1 = 0x9 (X);		/*		R1=0x9(  9) */
     866:	d1 40       	R1 *= R2;
     868:	12 e6 2f 00 	[P2 + 0xbc] = R2;
     86c:	0a e4 37 00 	R2 = [P1 + 0xdc];
     870:	51 50       	R1 = R1 + R2;
     872:	11 e6 30 00 	[P2 + 0xc0] = R1;
     876:	4a 30       	R1 = P2;
     878:	ff e2 5c fd 	JUMP.L 0x330 <_SetNextAnnounceProbeTime>;

0000087c <_AddAdditionalsToResponseList>:
_AddAdditionalsToResponseList():
     87c:	e3 05       	[--SP] = (R7:4, P5:3);
     87e:	00 e8 03 00 	LINK 0xc;		/* (12) */
     882:	38 32       	FP = R0;
     884:	2a e1 54 1c 	P2 = 0x1c54 (X);		/*		P2=0x1c54(7252) */
     888:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
     88c:	32 30       	R6 = R2;
     88e:	f5 a3       	R5 = [SP + 0x3c];
     890:	97 5a       	P2 = FP + P2;
     892:	29 32       	P5 = R1;
     894:	e7 61       	R7 = 0x3c (X);		/*		R7=0x3c( 60) */
     896:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
     89a:	62 30       	R4 = P2;
     89c:	2e 21       	JUMP.S 0xaf8 <_AddAdditionalsToResponseList+0x27c>;
     89e:	00 00       	NOP;
     8a0:	ea ae       	P2 = [P5 + 0x2c];
     8a2:	42 0c       	CC = P2 == 0x0;
     8a4:	2c 1c       	IF CC JUMP 0x8fc <_AddAdditionalsToResponseList+0x80> (BP);
     8a6:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
     8aa:	38 54       	R0 = R0 & R7;
     8ac:	00 0c       	CC = R0 == 0x0;
     8ae:	27 1c       	IF CC JUMP 0x8fc <_AddAdditionalsToResponseList+0x80> (BP);
     8b0:	d1 ae       	P1 = [P2 + 0x2c];
     8b2:	41 0c       	CC = P1 == 0x0;
     8b4:	06 1c       	IF CC JUMP 0x8c0 <_AddAdditionalsToResponseList+0x44> (BP);
     8b6:	88 e4 04 00 	R0 = B[P1 + 0x4] (Z);
     8ba:	38 54       	R0 = R0 & R7;
     8bc:	00 0c       	CC = R0 == 0x0;
     8be:	1f 1c       	IF CC JUMP 0x8fc <_AddAdditionalsToResponseList+0x80> (BP);
     8c0:	00 00       	NOP;
     8c2:	11 af       	P1 = [P2 + 0x30];
     8c4:	41 0c       	CC = P1 == 0x0;
     8c6:	06 1c       	IF CC JUMP 0x8d2 <_AddAdditionalsToResponseList+0x56> (BP);
     8c8:	88 e4 04 00 	R0 = B[P1 + 0x4] (Z);
     8cc:	38 54       	R0 = R0 & R7;
     8ce:	00 0c       	CC = R0 == 0x0;
     8d0:	16 1c       	IF CC JUMP 0x8fc <_AddAdditionalsToResponseList+0x80> (BP);
     8d2:	00 00       	NOP;
     8d4:	51 af       	P1 = [P2 + 0x34];
     8d6:	41 0c       	CC = P1 == 0x0;
     8d8:	06 1c       	IF CC JUMP 0x8e4 <_AddAdditionalsToResponseList+0x68> (BP);
     8da:	88 e4 04 00 	R0 = B[P1 + 0x4] (Z);
     8de:	38 54       	R0 = R0 & R7;
     8e0:	00 0c       	CC = R0 == 0x0;
     8e2:	0d 1c       	IF CC JUMP 0x8fc <_AddAdditionalsToResponseList+0x80> (BP);
     8e4:	00 00       	NOP;
     8e6:	d0 a1       	R0 = [P2 + 0x1c];
     8e8:	19 91       	R1 = [P3];
     8ea:	08 08       	CC = R0 == R1;
     8ec:	03 18       	IF CC JUMP 0x8f2 <_AddAdditionalsToResponseList+0x76>;
     8ee:	28 08       	CC = R0 == R5;
     8f0:	06 14       	IF !CC JUMP 0x8fc <_AddAdditionalsToResponseList+0x80> (BP);
     8f2:	06 30       	R0 = R6;
     8f4:	4a 30       	R1 = P2;
     8f6:	55 30       	R2 = P5;
     8f8:	ff e3 84 fb 	CALL 0x0 <_AddRecordToResponseList>;
     8fc:	00 00       	NOP;
     8fe:	2a af       	P2 = [P5 + 0x30];
     900:	42 0c       	CC = P2 == 0x0;
     902:	2c 1c       	IF CC JUMP 0x95a <_AddAdditionalsToResponseList+0xde> (BP);
     904:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
     908:	38 54       	R0 = R0 & R7;
     90a:	00 0c       	CC = R0 == 0x0;
     90c:	27 1c       	IF CC JUMP 0x95a <_AddAdditionalsToResponseList+0xde> (BP);
     90e:	d1 ae       	P1 = [P2 + 0x2c];
     910:	41 0c       	CC = P1 == 0x0;
     912:	06 1c       	IF CC JUMP 0x91e <_AddAdditionalsToResponseList+0xa2> (BP);
     914:	88 e4 04 00 	R0 = B[P1 + 0x4] (Z);
     918:	38 54       	R0 = R0 & R7;
     91a:	00 0c       	CC = R0 == 0x0;
     91c:	1f 1c       	IF CC JUMP 0x95a <_AddAdditionalsToResponseList+0xde> (BP);
     91e:	00 00       	NOP;
     920:	11 af       	P1 = [P2 + 0x30];
     922:	41 0c       	CC = P1 == 0x0;
     924:	06 1c       	IF CC JUMP 0x930 <_AddAdditionalsToResponseList+0xb4> (BP);
     926:	88 e4 04 00 	R0 = B[P1 + 0x4] (Z);
     92a:	38 54       	R0 = R0 & R7;
     92c:	00 0c       	CC = R0 == 0x0;
     92e:	16 1c       	IF CC JUMP 0x95a <_AddAdditionalsToResponseList+0xde> (BP);
     930:	00 00       	NOP;
     932:	51 af       	P1 = [P2 + 0x34];
     934:	41 0c       	CC = P1 == 0x0;
     936:	06 1c       	IF CC JUMP 0x942 <_AddAdditionalsToResponseList+0xc6> (BP);
     938:	88 e4 04 00 	R0 = B[P1 + 0x4] (Z);
     93c:	38 54       	R0 = R0 & R7;
     93e:	00 0c       	CC = R0 == 0x0;
     940:	0d 1c       	IF CC JUMP 0x95a <_AddAdditionalsToResponseList+0xde> (BP);
     942:	00 00       	NOP;
     944:	d0 a1       	R0 = [P2 + 0x1c];
     946:	19 91       	R1 = [P3];
     948:	08 08       	CC = R0 == R1;
     94a:	03 18       	IF CC JUMP 0x950 <_AddAdditionalsToResponseList+0xd4>;
     94c:	28 08       	CC = R0 == R5;
     94e:	06 14       	IF !CC JUMP 0x95a <_AddAdditionalsToResponseList+0xde> (BP);
     950:	06 30       	R0 = R6;
     952:	4a 30       	R1 = P2;
     954:	55 30       	R2 = P5;
     956:	ff e3 55 fb 	CALL 0x0 <_AddRecordToResponseList>;
     95a:	09 61       	R1 = 0x21 (X);		/*		R1=0x21( 33) */
     95c:	e8 a4       	R0 = W[P5 + 0x6] (Z);
     95e:	08 08       	CC = R0 == R1;
     960:	46 14       	IF !CC JUMP 0x9ec <_AddAdditionalsToResponseList+0x170> (BP);
     962:	3c e5 f2 07 	P4 = [FP + 0x1fc8];
     966:	40 20       	JUMP.S 0x9e6 <_AddAdditionalsToResponseList+0x16a>;
     968:	00 00       	NOP;
     96a:	e0 a4       	R0 = W[P4 + 0x6] (Z);
     96c:	08 0c       	CC = R0 == 0x1;
     96e:	04 18       	IF CC JUMP 0x976 <_AddAdditionalsToResponseList+0xfa>;
     970:	e1 60       	R1 = 0x1c (X);		/*		R1=0x1c( 28) */
     972:	08 08       	CC = R0 == R1;
     974:	37 14       	IF !CC JUMP 0x9e2 <_AddAdditionalsToResponseList+0x166> (BP);
     976:	a0 e4 04 00 	R0 = B[P4 + 0x4] (Z);
     97a:	38 54       	R0 = R0 & R7;
     97c:	00 0c       	CC = R0 == 0x0;
     97e:	32 1c       	IF CC JUMP 0x9e2 <_AddAdditionalsToResponseList+0x166> (BP);
     980:	e2 ae       	P2 = [P4 + 0x2c];
     982:	42 0c       	CC = P2 == 0x0;
     984:	06 1c       	IF CC JUMP 0x990 <_AddAdditionalsToResponseList+0x114> (BP);
     986:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
     98a:	38 54       	R0 = R0 & R7;
     98c:	00 0c       	CC = R0 == 0x0;
     98e:	2a 1c       	IF CC JUMP 0x9e2 <_AddAdditionalsToResponseList+0x166> (BP);
     990:	00 00       	NOP;
     992:	22 af       	P2 = [P4 + 0x30];
     994:	42 0c       	CC = P2 == 0x0;
     996:	06 1c       	IF CC JUMP 0x9a2 <_AddAdditionalsToResponseList+0x126> (BP);
     998:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
     99c:	38 54       	R0 = R0 & R7;
     99e:	00 0c       	CC = R0 == 0x0;
     9a0:	21 1c       	IF CC JUMP 0x9e2 <_AddAdditionalsToResponseList+0x166> (BP);
     9a2:	00 00       	NOP;
     9a4:	62 af       	P2 = [P4 + 0x34];
     9a6:	42 0c       	CC = P2 == 0x0;
     9a8:	06 1c       	IF CC JUMP 0x9b4 <_AddAdditionalsToResponseList+0x138> (BP);
     9aa:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
     9ae:	38 54       	R0 = R0 & R7;
     9b0:	00 0c       	CC = R0 == 0x0;
     9b2:	18 1c       	IF CC JUMP 0x9e2 <_AddAdditionalsToResponseList+0x166> (BP);
     9b4:	00 00       	NOP;
     9b6:	e0 a1       	R0 = [P4 + 0x1c];
     9b8:	19 91       	R1 = [P3];
     9ba:	08 08       	CC = R0 == R1;
     9bc:	03 18       	IF CC JUMP 0x9c2 <_AddAdditionalsToResponseList+0x146>;
     9be:	28 08       	CC = R0 == R5;
     9c0:	11 14       	IF !CC JUMP 0x9e2 <_AddAdditionalsToResponseList+0x166> (BP);
     9c2:	a9 a1       	R1 = [P5 + 0x18];
     9c4:	60 a1       	R0 = [P4 + 0x14];
     9c6:	01 08       	CC = R1 == R0;
     9c8:	0d 14       	IF !CC JUMP 0x9e2 <_AddAdditionalsToResponseList+0x166> (BP);
     9ca:	68 a2       	R0 = [P5 + 0x24];
     9cc:	50 64       	R0 += 0xa;		/* ( 10) */
     9ce:	21 a2       	R1 = [P4 + 0x20];
     9d0:	ff e3 18 fb 	CALL 0x0 <_AddRecordToResponseList>;
     9d4:	00 0c       	CC = R0 == 0x0;
     9d6:	06 1c       	IF CC JUMP 0x9e2 <_AddAdditionalsToResponseList+0x166> (BP);
     9d8:	06 30       	R0 = R6;
     9da:	4c 30       	R1 = P4;
     9dc:	55 30       	R2 = P5;
     9de:	ff e3 11 fb 	CALL 0x0 <_AddRecordToResponseList>;
     9e2:	00 00       	NOP;
     9e4:	64 91       	P4 = [P4];
     9e6:	44 0c       	CC = P4 == 0x0;
     9e8:	c0 17       	IF !CC JUMP 0x968 <_AddAdditionalsToResponseList+0xec> (BP);
     9ea:	84 20       	JUMP.S 0xaf2 <_AddAdditionalsToResponseList+0x276>;
     9ec:	08 0c       	CC = R0 == 0x1;
     9ee:	04 18       	IF CC JUMP 0x9f6 <_AddAdditionalsToResponseList+0x17a>;
     9f0:	e1 60       	R1 = 0x1c (X);		/*		R1=0x1c( 28) */
     9f2:	08 08       	CC = R0 == R1;
     9f4:	45 14       	IF !CC JUMP 0xa7e <_AddAdditionalsToResponseList+0x202> (BP);
     9f6:	3c e5 f2 07 	P4 = [FP + 0x1fc8];
     9fa:	3f 20       	JUMP.S 0xa78 <_AddAdditionalsToResponseList+0x1fc>;
     9fc:	00 00       	NOP;
     9fe:	e0 a4       	R0 = W[P4 + 0x6] (Z);
     a00:	08 0c       	CC = R0 == 0x1;
     a02:	04 18       	IF CC JUMP 0xa0a <_AddAdditionalsToResponseList+0x18e>;
     a04:	e1 60       	R1 = 0x1c (X);		/*		R1=0x1c( 28) */
     a06:	08 08       	CC = R0 == R1;
     a08:	36 14       	IF !CC JUMP 0xa74 <_AddAdditionalsToResponseList+0x1f8> (BP);
     a0a:	a0 e4 04 00 	R0 = B[P4 + 0x4] (Z);
     a0e:	38 54       	R0 = R0 & R7;
     a10:	00 0c       	CC = R0 == 0x0;
     a12:	31 1c       	IF CC JUMP 0xa74 <_AddAdditionalsToResponseList+0x1f8> (BP);
     a14:	e2 ae       	P2 = [P4 + 0x2c];
     a16:	42 0c       	CC = P2 == 0x0;
     a18:	06 1c       	IF CC JUMP 0xa24 <_AddAdditionalsToResponseList+0x1a8> (BP);
     a1a:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
     a1e:	38 54       	R0 = R0 & R7;
     a20:	00 0c       	CC = R0 == 0x0;
     a22:	29 1c       	IF CC JUMP 0xa74 <_AddAdditionalsToResponseList+0x1f8> (BP);
     a24:	00 00       	NOP;
     a26:	22 af       	P2 = [P4 + 0x30];
     a28:	42 0c       	CC = P2 == 0x0;
     a2a:	06 1c       	IF CC JUMP 0xa36 <_AddAdditionalsToResponseList+0x1ba> (BP);
     a2c:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
     a30:	38 54       	R0 = R0 & R7;
     a32:	00 0c       	CC = R0 == 0x0;
     a34:	20 1c       	IF CC JUMP 0xa74 <_AddAdditionalsToResponseList+0x1f8> (BP);
     a36:	00 00       	NOP;
     a38:	62 af       	P2 = [P4 + 0x34];
     a3a:	42 0c       	CC = P2 == 0x0;
     a3c:	06 1c       	IF CC JUMP 0xa48 <_AddAdditionalsToResponseList+0x1cc> (BP);
     a3e:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
     a42:	38 54       	R0 = R0 & R7;
     a44:	00 0c       	CC = R0 == 0x0;
     a46:	17 1c       	IF CC JUMP 0xa74 <_AddAdditionalsToResponseList+0x1f8> (BP);
     a48:	00 00       	NOP;
     a4a:	e0 a1       	R0 = [P4 + 0x1c];
     a4c:	19 91       	R1 = [P3];
     a4e:	08 08       	CC = R0 == R1;
     a50:	03 18       	IF CC JUMP 0xa56 <_AddAdditionalsToResponseList+0x1da>;
     a52:	28 08       	CC = R0 == R5;
     a54:	10 14       	IF !CC JUMP 0xa74 <_AddAdditionalsToResponseList+0x1f8> (BP);
     a56:	69 a1       	R1 = [P5 + 0x14];
     a58:	60 a1       	R0 = [P4 + 0x14];
     a5a:	01 08       	CC = R1 == R0;
     a5c:	0c 14       	IF !CC JUMP 0xa74 <_AddAdditionalsToResponseList+0x1f8> (BP);
     a5e:	28 a2       	R0 = [P5 + 0x20];
     a60:	21 a2       	R1 = [P4 + 0x20];
     a62:	ff e3 cf fa 	CALL 0x0 <_AddRecordToResponseList>;
     a66:	00 0c       	CC = R0 == 0x0;
     a68:	06 1c       	IF CC JUMP 0xa74 <_AddAdditionalsToResponseList+0x1f8> (BP);
     a6a:	06 30       	R0 = R6;
     a6c:	4c 30       	R1 = P4;
     a6e:	55 30       	R2 = P5;
     a70:	ff e3 c8 fa 	CALL 0x0 <_AddRecordToResponseList>;
     a74:	00 00       	NOP;
     a76:	64 91       	P4 = [P4];
     a78:	44 0c       	CC = P4 == 0x0;
     a7a:	c1 17       	IF !CC JUMP 0x9fc <_AddAdditionalsToResponseList+0x180> (BP);
     a7c:	3b 20       	JUMP.S 0xaf2 <_AddAdditionalsToResponseList+0x276>;
     a7e:	61 60       	R1 = 0xc (X);		/*		R1=0xc( 12) */
     a80:	08 08       	CC = R0 == R1;
     a82:	38 14       	IF !CC JUMP 0xaf2 <_AddAdditionalsToResponseList+0x276> (BP);
     a84:	b8 e4 58 1c 	R0 = B[FP + 0x1c58] (Z);
     a88:	38 54       	R0 = R0 & R7;
     a8a:	00 0c       	CC = R0 == 0x0;
     a8c:	33 1c       	IF CC JUMP 0xaf2 <_AddAdditionalsToResponseList+0x276> (BP);
     a8e:	3a e5 20 07 	P2 = [FP + 0x1c80];
     a92:	42 0c       	CC = P2 == 0x0;
     a94:	06 1c       	IF CC JUMP 0xaa0 <_AddAdditionalsToResponseList+0x224> (BP);
     a96:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
     a9a:	38 54       	R0 = R0 & R7;
     a9c:	00 0c       	CC = R0 == 0x0;
     a9e:	2a 1c       	IF CC JUMP 0xaf2 <_AddAdditionalsToResponseList+0x276> (BP);
     aa0:	00 00       	NOP;
     aa2:	3a e5 21 07 	P2 = [FP + 0x1c84];
     aa6:	42 0c       	CC = P2 == 0x0;
     aa8:	06 1c       	IF CC JUMP 0xab4 <_AddAdditionalsToResponseList+0x238> (BP);
     aaa:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
     aae:	38 54       	R0 = R0 & R7;
     ab0:	00 0c       	CC = R0 == 0x0;
     ab2:	20 1c       	IF CC JUMP 0xaf2 <_AddAdditionalsToResponseList+0x276> (BP);
     ab4:	00 00       	NOP;
     ab6:	3a e5 22 07 	P2 = [FP + 0x1c88];
     aba:	42 0c       	CC = P2 == 0x0;
     abc:	06 1c       	IF CC JUMP 0xac8 <_AddAdditionalsToResponseList+0x24c> (BP);
     abe:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
     ac2:	38 54       	R0 = R0 & R7;
     ac4:	00 0c       	CC = R0 == 0x0;
     ac6:	16 1c       	IF CC JUMP 0xaf2 <_AddAdditionalsToResponseList+0x276> (BP);
     ac8:	00 00       	NOP;
     aca:	38 e4 1c 07 	R0 = [FP + 0x1c70];
     ace:	19 91       	R1 = [P3];
     ad0:	08 08       	CC = R0 == R1;
     ad2:	03 18       	IF CC JUMP 0xad8 <_AddAdditionalsToResponseList+0x25c>;
     ad4:	28 08       	CC = R0 == R5;
     ad6:	0e 14       	IF !CC JUMP 0xaf2 <_AddAdditionalsToResponseList+0x276> (BP);
     ad8:	68 a2       	R0 = [P5 + 0x24];
     ada:	20 64       	R0 += 0x4;		/* (  4) */
     adc:	39 e4 1d 07 	R1 = [FP + 0x1c74];
     ae0:	ff e3 90 fa 	CALL 0x0 <_AddRecordToResponseList>;
     ae4:	00 0c       	CC = R0 == 0x0;
     ae6:	06 1c       	IF CC JUMP 0xaf2 <_AddAdditionalsToResponseList+0x276> (BP);
     ae8:	06 30       	R0 = R6;
     aea:	0c 30       	R1 = R4;
     aec:	55 30       	R2 = P5;
     aee:	ff e3 89 fa 	CALL 0x0 <_AddRecordToResponseList>;
     af2:	00 00       	NOP;
     af4:	2d e5 2c 00 	P5 = [P5 + 0xb0];
     af8:	45 0c       	CC = P5 == 0x0;
     afa:	d2 16       	IF !CC JUMP 0x89e <_AddAdditionalsToResponseList+0x22> (BP);
     afc:	66 6c       	SP += 0xc;		/* ( 12) */
     afe:	77 90       	FP = [SP++];
     b00:	27 01       	RETS = [SP++];
     b02:	a3 05       	(R7:4, P5:3) = [SP++];
     b04:	10 00       	RTS;
	...

00000b08 <_CompleteRDataUpdate>:
_CompleteRDataUpdate():
     b08:	ed 05       	[--SP] = (R7:5, P5:5);
     b0a:	29 32       	P5 = R1;
     b0c:	28 30       	R5 = R0;
     b0e:	67 01       	[--SP] = RETS;
     b10:	01 30       	R0 = R1;
     b12:	20 64       	R0 += 0x4;		/* (  4) */
     b14:	86 6f       	SP += -0x10;		/* (-16) */
     b16:	6e a2       	R6 = [P5 + 0x24];
     b18:	2f aa       	R7 = W[P5 + 0x10] (X);
     b1a:	29 e4 33 00 	R1 = [P5 + 0xcc];
     b1e:	6a e5 68 00 	R2 = W[P5 + 0xd0] (X);
     b22:	ff e3 6f fa 	CALL 0x0 <_AddRecordToResponseList>;
     b26:	2a e5 35 00 	P2 = [P5 + 0xd4];
     b2a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     b2c:	28 e6 33 00 	[P5 + 0xcc] = R0;
     b30:	42 0c       	CC = P2 == 0x0;
     b32:	06 18       	IF CC JUMP 0xb3e <_CompleteRDataUpdate+0x36>;
     b34:	b7 b5       	W[SP + 0xc] = R7;
     b36:	05 30       	R0 = R5;
     b38:	4d 30       	R1 = P5;
     b3a:	16 30       	R2 = R6;
     b3c:	62 00       	CALL (P2);
     b3e:	86 6c       	SP += 0x10;		/* ( 16) */
     b40:	27 01       	RETS = [SP++];
     b42:	ad 05       	(R7:5, P5:5) = [SP++];
     b44:	10 00       	RTS;
	...

00000b48 <_ShouldSuppressQuery>:
_ShouldSuppressQuery():
     b48:	e3 05       	[--SP] = (R7:4, P5:3);
     b4a:	67 01       	[--SP] = RETS;
     b4c:	20 32       	P4 = R0;
     b4e:	26 6f       	SP += -0x1c;		/* (-28) */
     b50:	d0 42       	R0 = R2.L (Z);
     b52:	39 30       	R7 = R1;
     b54:	32 30       	R6 = R2;
     b56:	35 e4 12 00 	R5 = [SP + 0x48];
     b5a:	08 0c       	CC = R0 == 0x1;
     b5c:	15 18       	IF CC JUMP 0xb86 <_ShouldSuppressQuery+0x3e>;
     b5e:	e1 60       	R1 = 0x1c (X);		/*		R1=0x1c( 28) */
     b60:	08 08       	CC = R0 == R1;
     b62:	14 18       	IF CC JUMP 0xb8a <_ShouldSuppressQuery+0x42>;
     b64:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x1c54 */
     b68:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     b6c:	10 91       	R0 = [P2];
     b6e:	00 0c       	CC = R0 == 0x0;
     b70:	38 1d       	IF CC JUMP 0xde0 <_ShouldSuppressQuery+0x298> (BP);
     b72:	02 30       	R0 = R2;
     b74:	ff e3 46 fa 	CALL 0x0 <_AddRecordToResponseList>;
     b78:	f0 b0       	[SP + 0xc] = R0;
     b7a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1c( 28) */
     b7e:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
     b80:	01 e1 2c 02 	R1.L = 0x22c;		/* (556)	R1=0x22c(556) */
     b84:	21 20       	JUMP.S 0xbc6 <_ShouldSuppressQuery+0x7e>;
     b86:	24 60       	R4 = 0x4 (X);		/*		R4=0x4(  4) */
     b88:	02 20       	JUMP.S 0xb8c <_ShouldSuppressQuery+0x44>;
     b8a:	34 60       	R4 = 0x6 (X);		/*		R4=0x6(  6) */
     b8c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     b90:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     b94:	53 91       	P3 = [P2];
     b96:	5b 30       	R3 = P3;
     b98:	1d 08       	CC = R5 == R3;
     b9a:	1a 18       	IF CC JUMP 0xbce <_ShouldSuppressQuery+0x86>;
     b9c:	07 30       	R0 = R7;
     b9e:	ff e3 31 fa 	CALL 0x0 <_AddRecordToResponseList>;
     ba2:	00 0c       	CC = R0 == 0x0;
     ba4:	15 1c       	IF CC JUMP 0xbce <_ShouldSuppressQuery+0x86> (BP);
     ba6:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     baa:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     bae:	10 91       	R0 = [P2];
     bb0:	00 0c       	CC = R0 == 0x0;
     bb2:	17 1d       	IF CC JUMP 0xde0 <_ShouldSuppressQuery+0x298> (BP);
     bb4:	06 30       	R0 = R6;
     bb6:	ff e3 25 fa 	CALL 0x0 <_AddRecordToResponseList>;
     bba:	f0 b0       	[SP + 0xc] = R0;
     bbc:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x22c(556) */
     bc0:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
     bc2:	01 e1 7c 02 	R1.L = 0x27c;		/* (636)	R1=0x27c(636) */
     bc6:	17 30       	R2 = R7;
     bc8:	ff e3 1c fa 	CALL 0x0 <_AddRecordToResponseList>;
     bcc:	0a 21       	JUMP.S 0xde0 <_ShouldSuppressQuery+0x298>;
     bce:	44 30       	R0 = P4;
     bd0:	0f 30       	R1 = R7;
     bd2:	ff e3 17 fa 	CALL 0x0 <_AddRecordToResponseList>;
     bd6:	10 32       	P2 = R0;
     bd8:	42 0c       	CC = P2 == 0x0;
     bda:	18 1c       	IF CC JUMP 0xc0a <_ShouldSuppressQuery+0xc2> (BP);
     bdc:	50 a0       	R0 = [P2 + 0x4];
     bde:	00 0c       	CC = R0 == 0x0;
     be0:	15 14       	IF !CC JUMP 0xc0a <_ShouldSuppressQuery+0xc2> (BP);
     be2:	90 a0       	R0 = [P2 + 0x8];
     be4:	00 0c       	CC = R0 == 0x0;
     be6:	12 18       	IF CC JUMP 0xc0a <_ShouldSuppressQuery+0xc2>;
     be8:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     bec:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     bf0:	10 91       	R0 = [P2];
     bf2:	00 0c       	CC = R0 == 0x0;
     bf4:	f6 1c       	IF CC JUMP 0xde0 <_ShouldSuppressQuery+0x298> (BP);
     bf6:	06 30       	R0 = R6;
     bf8:	ff e3 04 fa 	CALL 0x0 <_AddRecordToResponseList>;
     bfc:	f0 b0       	[SP + 0xc] = R0;
     bfe:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x27c(636) */
     c02:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
     c04:	01 e1 cc 02 	R1.L = 0x2cc;		/* (716)	R1=0x2cc(716) */
     c08:	df 2f       	JUMP.S 0xbc6 <_ShouldSuppressQuery+0x7e>;
     c0a:	05 0c       	CC = R5 == 0x0;
     c0c:	00 02       	R0 = CC;
     c0e:	b0 e6 16 00 	B[SP + 0x16] = R0;
     c12:	20 60       	R0 = 0x4 (X);		/*		R0=0x4(  4) */
     c14:	04 08       	CC = R4 == R0;
     c16:	00 02       	R0 = CC;
     c18:	b0 e6 17 00 	B[SP + 0x17] = R0;
     c1c:	30 60       	R0 = 0x6 (X);		/*		R0=0x6(  6) */
     c1e:	04 08       	CC = R4 == R0;
     c20:	00 02       	R0 = CC;
     c22:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     c26:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     c2a:	b0 e6 18 00 	B[SP + 0x18] = R0;
     c2e:	10 91       	R0 = [P2];
     c30:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     c34:	05 08       	CC = R5 == R0;
     c36:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     c3a:	01 02       	R1 = CC;
     c3c:	10 91       	R0 = [P2];
     c3e:	05 08       	CC = R5 == R0;
     c40:	b1 e6 19 00 	B[SP + 0x19] = R1;
     c44:	01 02       	R1 = CC;
     c46:	43 30       	R0 = P3;
     c48:	05 08       	CC = R5 == R0;
     c4a:	00 02       	R0 = CC;
     c4c:	25 e5 f7 07 	P5 = [P4 + 0x1fdc];
     c50:	28 e1 c0 00 	P0 = 0xc0 (X);		/*		P0=0xc0(192) */
     c54:	b1 e6 1a 00 	B[SP + 0x1a] = R1;
     c58:	b0 e6 1b 00 	B[SP + 0x1b] = R0;
     c5c:	ac 20       	JUMP.S 0xdb4 <_ShouldSuppressQuery+0x26c>;
     c5e:	00 00       	NOP;
     c60:	28 e4 11 05 	R0 = [P5 + 0x1444];
     c64:	20 08       	CC = R0 == R4;
     c66:	a5 14       	IF !CC JUMP 0xdb0 <_ShouldSuppressQuery+0x268> (BP);
     c68:	b0 e4 16 00 	R0 = B[SP + 0x16] (Z);
     c6c:	08 02       	CC = R0;
     c6e:	11 18       	IF CC JUMP 0xc90 <_ShouldSuppressQuery+0x148>;
     c70:	b0 e4 19 00 	R0 = B[SP + 0x19] (Z);
     c74:	08 02       	CC = R0;
     c76:	0d 18       	IF CC JUMP 0xc90 <_ShouldSuppressQuery+0x148>;
     c78:	b0 e4 1a 00 	R0 = B[SP + 0x1a] (Z);
     c7c:	08 02       	CC = R0;
     c7e:	09 18       	IF CC JUMP 0xc90 <_ShouldSuppressQuery+0x148>;
     c80:	b0 e4 1b 00 	R0 = B[SP + 0x1b] (Z);
     c84:	08 02       	CC = R0;
     c86:	05 1c       	IF CC JUMP 0xc90 <_ShouldSuppressQuery+0x148> (BP);
     c88:	28 e4 10 05 	R0 = [P5 + 0x1440];
     c8c:	28 08       	CC = R0 == R5;
     c8e:	91 14       	IF !CC JUMP 0xdb0 <_ShouldSuppressQuery+0x268> (BP);
     c90:	b0 e4 17 00 	R0 = B[SP + 0x17] (Z);
     c94:	08 02       	CC = R0;
     c96:	23 14       	IF !CC JUMP 0xcdc <_ShouldSuppressQuery+0x194> (BP);
     c98:	21 e1 7f 00 	R1 = 0x7f (X);		/*		R1=0x7f(127) */
     c9c:	28 e4 12 05 	R0 = [P5 + 0x1448];
     ca0:	c1 4a       	BITSET (R1, 0x18);		/* bit 24 */
     ca2:	08 08       	CC = R0 == R1;
     ca4:	86 1c       	IF CC JUMP 0xdb0 <_ShouldSuppressQuery+0x268> (BP);
     ca6:	83 e1 a9 fe 	R3 = 0xfea9 (Z);		/*		R3=0xfea9(65193) */
     caa:	68 e4 24 0a 	R0 = W[P5 + 0x1448] (Z);
     cae:	18 08       	CC = R0 == R3;
     cb0:	80 1c       	IF CC JUMP 0xdb0 <_ShouldSuppressQuery+0x268> (BP);
     cb2:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     cb6:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     cba:	10 91       	R0 = [P2];
     cbc:	00 0c       	CC = R0 == 0x0;
     cbe:	91 1c       	IF CC JUMP 0xde0 <_ShouldSuppressQuery+0x298> (BP);
     cc0:	06 30       	R0 = R6;
     cc2:	ff e3 9f f9 	CALL 0x0 <_AddRecordToResponseList>;
     cc6:	2a e1 48 14 	P2 = 0x1448 (X);		/*		P2=0x1448(5192) */
     cca:	f0 b0       	[SP + 0xc] = R0;
     ccc:	55 5b       	P5 = P5 + P2;
     cce:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x7f(127) */
     cd2:	35 bd       	[SP + 0x10] = P5;
     cd4:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
     cd6:	01 e1 1c 03 	R1.L = 0x31c;		/* (796)	R1=0x31c(796) */
     cda:	67 20       	JUMP.S 0xda8 <_ShouldSuppressQuery+0x260>;
     cdc:	b0 e4 18 00 	R0 = B[SP + 0x18] (Z);
     ce0:	08 02       	CC = R0;
     ce2:	67 14       	IF !CC JUMP 0xdb0 <_ShouldSuppressQuery+0x268> (BP);
     ce4:	2b e5 14 05 	P3 = [P5 + 0x1450];
     ce8:	2a e4 12 05 	R2 = [P5 + 0x1448];
     cec:	29 e4 13 05 	R1 = [P5 + 0x144c];
     cf0:	d1 56       	R3 = R1 | R2;
     cf2:	43 30       	R0 = P3;
     cf4:	c3 56       	R3 = R3 | R0;
     cf6:	13 32       	P2 = R3;
     cf8:	42 0c       	CC = P2 == 0x0;
     cfa:	09 14       	IF !CC JUMP 0xd0c <_ShouldSuppressQuery+0x1c4> (BP);
     cfc:	2a e5 15 05 	P2 = [P5 + 0x1454];
     d00:	49 e1 00 01 	P1.H = 0x100;		/* (256)	P1=0x1000000 */
     d04:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x1000000 */
     d08:	4a 08       	CC = P2 == P1;
     d0a:	53 1c       	IF CC JUMP 0xdb0 <_ShouldSuppressQuery+0x268> (BP);
     d0c:	29 e1 fe 00 	P1 = 0xfe (X);		/*		P1=0xfe(254) */
     d10:	a8 e4 48 14 	R0 = B[P5 + 0x1448] (Z);
     d14:	10 32       	P2 = R0;
     d16:	4a 08       	CC = P2 == P1;
     d18:	0a 14       	IF !CC JUMP 0xd2c <_ShouldSuppressQuery+0x1e4> (BP);
     d1a:	a8 e4 49 14 	R0 = B[P5 + 0x1449] (Z);
     d1e:	58 30       	R3 = P0;
     d20:	18 54       	R0 = R0 & R3;
     d22:	10 32       	P2 = R0;
     d24:	29 e1 80 00 	P1 = 0x80 (X);		/*		P1=0x80(128) */
     d28:	4a 08       	CC = P2 == P1;
     d2a:	43 1c       	IF CC JUMP 0xdb0 <_ShouldSuppressQuery+0x268> (BP);
     d2c:	00 00       	NOP;
     d2e:	22 e5 c2 09 	P2 = [P4 + 0x2708];
     d32:	42 30       	R0 = P2;
     d34:	02 08       	CC = R2 == R0;
     d36:	10 14       	IF !CC JUMP 0xd56 <_ShouldSuppressQuery+0x20e> (BP);
     d38:	22 e5 c3 09 	P2 = [P4 + 0x270c];
     d3c:	5a 30       	R3 = P2;
     d3e:	19 08       	CC = R1 == R3;
     d40:	0b 14       	IF !CC JUMP 0xd56 <_ShouldSuppressQuery+0x20e> (BP);
     d42:	22 e5 c4 09 	P2 = [P4 + 0x2710];
     d46:	53 08       	CC = P3 == P2;
     d48:	07 14       	IF !CC JUMP 0xd56 <_ShouldSuppressQuery+0x20e> (BP);
     d4a:	29 e5 15 05 	P1 = [P5 + 0x1454];
     d4e:	22 e5 c5 09 	P2 = [P4 + 0x2714];
     d52:	51 08       	CC = P1 == P2;
     d54:	2e 1c       	IF CC JUMP 0xdb0 <_ShouldSuppressQuery+0x268> (BP);
     d56:	00 00       	NOP;
     d58:	22 e5 cb 09 	P2 = [P4 + 0x272c];
     d5c:	42 30       	R0 = P2;
     d5e:	02 08       	CC = R2 == R0;
     d60:	10 14       	IF !CC JUMP 0xd80 <_ShouldSuppressQuery+0x238> (BP);
     d62:	22 e4 cc 09 	R2 = [P4 + 0x2730];
     d66:	11 08       	CC = R1 == R2;
     d68:	0c 14       	IF !CC JUMP 0xd80 <_ShouldSuppressQuery+0x238> (BP);
     d6a:	5b 30       	R3 = P3;
     d6c:	21 e4 cd 09 	R1 = [P4 + 0x2734];
     d70:	0b 08       	CC = R3 == R1;
     d72:	07 14       	IF !CC JUMP 0xd80 <_ShouldSuppressQuery+0x238> (BP);
     d74:	29 e4 15 05 	R1 = [P5 + 0x1454];
     d78:	20 e4 ce 09 	R0 = [P4 + 0x2738];
     d7c:	01 08       	CC = R1 == R0;
     d7e:	19 1c       	IF CC JUMP 0xdb0 <_ShouldSuppressQuery+0x268> (BP);
     d80:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x1448 */
     d84:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     d88:	10 91       	R0 = [P2];
     d8a:	00 0c       	CC = R0 == 0x0;
     d8c:	2a 1c       	IF CC JUMP 0xde0 <_ShouldSuppressQuery+0x298> (BP);
     d8e:	06 30       	R0 = R6;
     d90:	ff e3 38 f9 	CALL 0x0 <_AddRecordToResponseList>;
     d94:	2a e1 48 14 	P2 = 0x1448 (X);		/*		P2=0x1448(5192) */
     d98:	f0 b0       	[SP + 0xc] = R0;
     d9a:	55 5b       	P5 = P5 + P2;
     d9c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x31c(796) */
     da0:	35 bd       	[SP + 0x10] = P5;
     da2:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
     da4:	01 e1 74 03 	R1.L = 0x374;		/* (884)	R1=0x374(884) */
     da8:	17 30       	R2 = R7;
     daa:	ff e3 2b f9 	CALL 0x0 <_AddRecordToResponseList>;
     dae:	19 20       	JUMP.S 0xde0 <_ShouldSuppressQuery+0x298>;
     db0:	00 00       	NOP;
     db2:	6d 91       	P5 = [P5];
     db4:	45 0c       	CC = P5 == 0x0;
     db6:	54 17       	IF !CC JUMP 0xc5e <_ShouldSuppressQuery+0x116> (BP);
     db8:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x1448 */
     dbc:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     dc0:	10 91       	R0 = [P2];
     dc2:	00 0c       	CC = R0 == 0x0;
     dc4:	10 1c       	IF CC JUMP 0xde4 <_ShouldSuppressQuery+0x29c> (BP);
     dc6:	06 30       	R0 = R6;
     dc8:	ff e3 1c f9 	CALL 0x0 <_AddRecordToResponseList>;
     dcc:	f0 b0       	[SP + 0xc] = R0;
     dce:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x374(884) */
     dd2:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
     dd4:	01 e1 cc 03 	R1.L = 0x3cc;		/* (972)	R1=0x3cc(972) */
     dd8:	17 30       	R2 = R7;
     dda:	ff e3 13 f9 	CALL 0x0 <_AddRecordToResponseList>;
     dde:	03 20       	JUMP.S 0xde4 <_ShouldSuppressQuery+0x29c>;
     de0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     de2:	02 20       	JUMP.S 0xde6 <_ShouldSuppressQuery+0x29e>;
     de4:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
     de6:	e6 6c       	SP += 0x1c;		/* ( 28) */
     de8:	27 01       	RETS = [SP++];
     dea:	a3 05       	(R7:4, P5:3) = [SP++];
     dec:	10 00       	RTS;
	...

00000df0 <_SetTargetToHostName>:
_SetTargetToHostName():
     df0:	f3 05       	[--SP] = (R7:6, P5:3);
     df2:	29 32       	P5 = R1;
     df4:	38 30       	R7 = R0;
     df6:	67 01       	[--SP] = RETS;
     df8:	86 6f       	SP += -0x10;		/* (-16) */
     dfa:	e8 a8       	R0 = W[P5 + 0x6] (X);
     dfc:	c1 42       	R1 = R0.L (Z);
     dfe:	11 0c       	CC = R1 == 0x2;
     e00:	0a 18       	IF CC JUMP 0xe14 <_SetTargetToHostName+0x24>;
     e02:	2a 60       	R2 = 0x5 (X);		/*		R2=0x5(  5) */
     e04:	11 08       	CC = R1 == R2;
     e06:	07 18       	IF CC JUMP 0xe14 <_SetTargetToHostName+0x24>;
     e08:	62 60       	R2 = 0xc (X);		/*		R2=0xc( 12) */
     e0a:	11 08       	CC = R1 == R2;
     e0c:	04 18       	IF CC JUMP 0xe14 <_SetTargetToHostName+0x24>;
     e0e:	3a 61       	R2 = 0x27 (X);		/*		R2=0x27( 39) */
     e10:	11 08       	CC = R1 == R2;
     e12:	04 14       	IF !CC JUMP 0xe1a <_SetTargetToHostName+0x2a> (BP);
     e14:	6c ae       	P4 = [P5 + 0x24];
     e16:	24 6c       	P4 += 0x4;		/* (  4) */
     e18:	17 20       	JUMP.S 0xe46 <_SetTargetToHostName+0x56>;
     e1a:	7a 60       	R2 = 0xf (X);		/*		R2=0xf( 15) */
     e1c:	11 08       	CC = R1 == R2;
     e1e:	0a 18       	IF CC JUMP 0xe32 <_SetTargetToHostName+0x42>;
     e20:	92 60       	R2 = 0x12 (X);		/*		R2=0x12( 18) */
     e22:	11 08       	CC = R1 == R2;
     e24:	07 18       	IF CC JUMP 0xe32 <_SetTargetToHostName+0x42>;
     e26:	aa 60       	R2 = 0x15 (X);		/*		R2=0x15( 21) */
     e28:	11 08       	CC = R1 == R2;
     e2a:	04 18       	IF CC JUMP 0xe32 <_SetTargetToHostName+0x42>;
     e2c:	22 61       	R2 = 0x24 (X);		/*		R2=0x24( 36) */
     e2e:	11 08       	CC = R1 == R2;
     e30:	04 14       	IF !CC JUMP 0xe38 <_SetTargetToHostName+0x48> (BP);
     e32:	6c ae       	P4 = [P5 + 0x24];
     e34:	34 6c       	P4 += 0x6;		/* (  6) */
     e36:	08 20       	JUMP.S 0xe46 <_SetTargetToHostName+0x56>;
     e38:	0a 61       	R2 = 0x21 (X);		/*		R2=0x21( 33) */
     e3a:	11 08       	CC = R1 == R2;
     e3c:	04 14       	IF !CC JUMP 0xe44 <_SetTargetToHostName+0x54> (BP);
     e3e:	6c ae       	P4 = [P5 + 0x24];
     e40:	54 6c       	P4 += 0xa;		/* ( 10) */
     e42:	02 20       	JUMP.S 0xe46 <_SetTargetToHostName+0x56>;
     e44:	04 68       	P4 = 0x0 (X);		/*		P4=0x0(  0) */
     e46:	26 e1 54 19 	R6 = 0x1954 (X);		/*		R6=0x1954(6484) */
     e4a:	b7 51       	R6 = R7 + R6;
     e4c:	44 0c       	CC = P4 == 0x0;
     e4e:	12 14       	IF !CC JUMP 0xe72 <_SetTargetToHostName+0x82> (BP);
     e50:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     e54:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     e58:	11 91       	R1 = [P2];
     e5a:	01 0c       	CC = R1 == 0x0;
     e5c:	0b 1c       	IF CC JUMP 0xe72 <_SetTargetToHostName+0x82> (BP);
     e5e:	ff e3 d1 f8 	CALL 0x0 <_AddRecordToResponseList>;
     e62:	10 30       	R2 = R0;
     e64:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3cc(972) */
     e68:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
     e6a:	01 e1 2c 04 	R1.L = 0x42c;		/* (1068)	R1=0x42c(1068) */
     e6e:	ff e3 c9 f8 	CALL 0x0 <_AddRecordToResponseList>;
     e72:	00 00       	NOP;
     e74:	a8 e4 46 00 	R0 = B[P5 + 0x46] (Z);
     e78:	00 0c       	CC = R0 == 0x0;
     e7a:	68 14       	IF !CC JUMP 0xf4a <_SetTargetToHostName+0x15a> (BP);
     e7c:	28 e4 20 00 	R0 = [P5 + 0x80];
     e80:	10 0c       	CC = R0 == 0x2;
     e82:	64 18       	IF CC JUMP 0xf4a <_SetTargetToHostName+0x15a>;
     e84:	18 0c       	CC = R0 == 0x3;
     e86:	62 18       	IF CC JUMP 0xf4a <_SetTargetToHostName+0x15a>;
     e88:	2a e1 68 01 	P2 = 0x168 (X);		/*		P2=0x168(360) */
     e8c:	95 5a       	P2 = P5 + P2;
     e8e:	42 30       	R0 = P2;
     e90:	ff e3 b8 f8 	CALL 0x0 <_AddRecordToResponseList>;
     e94:	00 0c       	CC = R0 == 0x0;
     e96:	5a 14       	IF !CC JUMP 0xf4a <_SetTargetToHostName+0x15a> (BP);
     e98:	a8 e4 44 00 	R0 = B[P5 + 0x44] (Z);
     e9c:	00 0c       	CC = R0 == 0x0;
     e9e:	0e 1c       	IF CC JUMP 0xeba <_SetTargetToHostName+0xca> (BP);
     ea0:	29 a2       	R1 = [P5 + 0x20];
     ea2:	07 30       	R0 = R7;
     ea4:	ff e3 ae f8 	CALL 0x0 <_AddRecordToResponseList>;
     ea8:	10 32       	P2 = R0;
     eaa:	42 0c       	CC = P2 == 0x0;
     eac:	04 1c       	IF CC JUMP 0xeb4 <_SetTargetToHostName+0xc4> (BP);
     eae:	90 a0       	R0 = [P2 + 0x8];
     eb0:	00 0c       	CC = R0 == 0x0;
     eb2:	04 14       	IF !CC JUMP 0xeba <_SetTargetToHostName+0xca> (BP);
     eb4:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
     eb6:	a8 e6 44 00 	B[P5 + 0x44] = R0;
     eba:	07 30       	R0 = R7;
     ebc:	4d 30       	R1 = P5;
     ebe:	ff e3 a1 f8 	CALL 0x0 <_AddRecordToResponseList>;
     ec2:	18 32       	P3 = R0;
     ec4:	43 0c       	CC = P3 == 0x0;
     ec6:	04 1c       	IF CC JUMP 0xece <_SetTargetToHostName+0xde> (BP);
     ec8:	18 99       	R0 = B[P3] (Z);
     eca:	00 0c       	CC = R0 == 0x0;
     ecc:	26 14       	IF !CC JUMP 0xf18 <_SetTargetToHostName+0x128> (BP);
     ece:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x168 */
     ed2:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     ed6:	10 91       	R0 = [P2];
     ed8:	00 0c       	CC = R0 == 0x0;
     eda:	11 1c       	IF CC JUMP 0xefc <_SetTargetToHostName+0x10c> (BP);
     edc:	69 a2       	R1 = [P5 + 0x24];
     ede:	45 30       	R0 = P5;
     ee0:	17 30       	R2 = R7;
     ee2:	21 64       	R1 += 0x4;		/* (  4) */
     ee4:	ba 65       	R2 += 0x37;		/* ( 55) */
     ee6:	20 64       	R0 += 0x4;		/* (  4) */
     ee8:	ff e3 8c f8 	CALL 0x0 <_AddRecordToResponseList>;
     eec:	10 30       	R2 = R0;
     eee:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x42c(1068) */
     ef2:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
     ef4:	01 e1 70 04 	R1.L = 0x470;		/* (1136)	R1=0x470(1136) */
     ef8:	ff e3 84 f8 	CALL 0x0 <_AddRecordToResponseList>;
     efc:	40 60       	R0 = 0x8 (X);		/*		R0=0x8(  8) */
     efe:	28 e6 39 00 	[P5 + 0xe4] = R0;
     f02:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     f04:	20 9b       	B[P4] = R0;
     f06:	86 6c       	SP += 0x10;		/* ( 16) */
     f08:	45 30       	R0 = P5;
     f0a:	27 01       	RETS = [SP++];
     f0c:	20 64       	R0 += 0x4;		/* (  4) */
     f0e:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
     f10:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
     f12:	b3 05       	(R7:6, P5:3) = [SP++];
     f14:	ff e2 76 f8 	JUMP.L 0x0 <_AddRecordToResponseList>;
     f18:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     f1c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
     f20:	10 91       	R0 = [P2];
     f22:	00 0c       	CC = R0 == 0x0;
     f24:	4b 1c       	IF CC JUMP 0xfba <_SetTargetToHostName+0x1ca> (BP);
     f26:	69 a2       	R1 = [P5 + 0x24];
     f28:	45 30       	R0 = P5;
     f2a:	17 30       	R2 = R7;
     f2c:	21 64       	R1 += 0x4;		/* (  4) */
     f2e:	ba 65       	R2 += 0x37;		/* ( 55) */
     f30:	20 64       	R0 += 0x4;		/* (  4) */
     f32:	ff e3 67 f8 	CALL 0x0 <_AddRecordToResponseList>;
     f36:	f0 b0       	[SP + 0xc] = R0;
     f38:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
     f3c:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
     f3e:	01 e1 9c 04 	R1.L = 0x49c;		/* (1180)	R1=0x49c(1180) */
     f42:	53 30       	R2 = P3;
     f44:	ff e3 5e f8 	CALL 0x0 <_AddRecordToResponseList>;
     f48:	39 20       	JUMP.S 0xfba <_SetTargetToHostName+0x1ca>;
     f4a:	44 0c       	CC = P4 == 0x0;
     f4c:	39 18       	IF CC JUMP 0xfbe <_SetTargetToHostName+0x1ce>;
     f4e:	0e 30       	R1 = R6;
     f50:	44 30       	R0 = P4;
     f52:	ff e3 57 f8 	CALL 0x0 <_AddRecordToResponseList>;
     f56:	44 30       	R0 = P4;
     f58:	0e 30       	R1 = R6;
     f5a:	ff e3 53 f8 	CALL 0x0 <_AddRecordToResponseList>;
     f5e:	00 0c       	CC = R0 == 0x0;
     f60:	2f 14       	IF !CC JUMP 0xfbe <_SetTargetToHostName+0x1ce> (BP);
     f62:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
     f66:	4e 50       	R1 = R6 + R1;
     f68:	06 30       	R0 = R6;
     f6a:	ff e3 4b f8 	CALL 0x0 <_AddRecordToResponseList>;
     f6e:	c2 42       	R2 = R0.L (Z);
     f70:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
     f74:	02 0a       	CC = R2 <= R0 (IU);
     f76:	06 14       	IF !CC JUMP 0xf82 <_SetTargetToHostName+0x192> (BP);
     f78:	44 30       	R0 = P4;
     f7a:	0e 30       	R1 = R6;
     f7c:	ff e3 42 f8 	CALL 0x0 <_AddRecordToResponseList>;
     f80:	03 20       	JUMP.S 0xf86 <_SetTargetToHostName+0x196>;
     f82:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     f84:	20 9b       	B[P4] = R0;
     f86:	45 30       	R0 = P5;
     f88:	20 64       	R0 += 0x4;		/* (  4) */
     f8a:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
     f8c:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
     f8e:	ff e3 39 f8 	CALL 0x0 <_AddRecordToResponseList>;
     f92:	a8 e4 04 00 	R0 = B[P5 + 0x4] (Z);
     f96:	10 0c       	CC = R0 == 0x2;
     f98:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     f9a:	19 60       	R1 = 0x3 (X);		/*		R1=0x3(  3) */
     f9c:	08 06       	IF !CC R1 = R0;
     f9e:	a9 e6 85 00 	B[P5 + 0x85] = R1;
     fa2:	41 60       	R1 = 0x8 (X);		/*		R1=0x8(  8) */
     fa4:	a9 e6 86 00 	B[P5 + 0x86] = R1;
     fa8:	a8 e6 87 00 	B[P5 + 0x87] = R0;
     fac:	86 6c       	SP += 0x10;		/* ( 16) */
     fae:	27 01       	RETS = [SP++];
     fb0:	07 30       	R0 = R7;
     fb2:	4d 30       	R1 = P5;
     fb4:	b3 05       	(R7:6, P5:3) = [SP++];
     fb6:	ff e2 1d fb 	JUMP.L 0x5f0 <_InitializeLastAPTime>;
     fba:	73 30       	R6 = P3;
     fbc:	c7 2f       	JUMP.S 0xf4a <_SetTargetToHostName+0x15a>;
     fbe:	86 6c       	SP += 0x10;		/* ( 16) */
     fc0:	27 01       	RETS = [SP++];
     fc2:	b3 05       	(R7:6, P5:3) = [SP++];
     fc4:	10 00       	RTS;
	...

00000fc8 <_PacketRRConflict>:
_PacketRRConflict():
     fc8:	fb 05       	[--SP] = (R7:7, P5:3);
     fca:	19 32       	P3 = R1;
     fcc:	38 30       	R7 = R0;
     fce:	90 61       	R0 = 0x32 (X);		/*		R0=0x32( 50) */
     fd0:	00 e8 03 00 	LINK 0xc;		/* (12) */
     fd4:	2a 32       	P5 = R2;
     fd6:	99 e4 04 00 	R1 = B[P3 + 0x4] (Z);
     fda:	01 54       	R0 = R1 & R0;
     fdc:	00 0c       	CC = R0 == 0x0;
     fde:	af 1c       	IF CC JUMP 0x113c <_PacketRRConflict+0x174> (BP);
     fe0:	58 a3       	R0 = [P3 + 0x34];
     fe2:	00 0c       	CC = R0 == 0x0;
     fe4:	ac 14       	IF !CC JUMP 0x113c <_PacketRRConflict+0x174> (BP);
     fe6:	17 32       	P2 = R7;
     fe8:	14 e5 f2 07 	P4 = [P2 + 0x1fc8];
     fec:	32 20       	JUMP.S 0x1050 <_PacketRRConflict+0x88>;
     fee:	00 00       	NOP;
     ff0:	e1 a4       	R1 = W[P4 + 0x6] (Z);
     ff2:	e8 a4       	R0 = W[P5 + 0x6] (Z);
     ff4:	01 08       	CC = R1 == R0;
     ff6:	2b 14       	IF !CC JUMP 0x104c <_PacketRRConflict+0x84> (BP);
     ff8:	21 a5       	R1 = W[P4 + 0x8] (Z);
     ffa:	28 a5       	R0 = W[P5 + 0x8] (Z);
     ffc:	01 08       	CC = R1 == R0;
     ffe:	27 14       	IF !CC JUMP 0x104c <_PacketRRConflict+0x84> (BP);
    1000:	61 a1       	R1 = [P4 + 0x14];
    1002:	68 a1       	R0 = [P5 + 0x14];
    1004:	01 08       	CC = R1 == R0;
    1006:	23 14       	IF !CC JUMP 0x104c <_PacketRRConflict+0x84> (BP);
    1008:	21 a6       	R1 = W[P4 + 0x10] (Z);
    100a:	28 a6       	R0 = W[P5 + 0x10] (Z);
    100c:	01 08       	CC = R1 == R0;
    100e:	1f 14       	IF !CC JUMP 0x104c <_PacketRRConflict+0x84> (BP);
    1010:	a1 a1       	R1 = [P4 + 0x18];
    1012:	a8 a1       	R0 = [P5 + 0x18];
    1014:	01 08       	CC = R1 == R0;
    1016:	1b 14       	IF !CC JUMP 0x104c <_PacketRRConflict+0x84> (BP);
    1018:	69 a2       	R1 = [P5 + 0x24];
    101a:	44 30       	R0 = P4;
    101c:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    1020:	20 64       	R0 += 0x4;		/* (  4) */
    1022:	21 64       	R1 += 0x4;		/* (  4) */
    1024:	02 e1 00 00 	R2.L = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    1028:	ff e3 ec f7 	CALL 0x0 <_AddRecordToResponseList>;
    102c:	00 0c       	CC = R0 == 0x0;
    102e:	0f 1c       	IF CC JUMP 0x104c <_PacketRRConflict+0x84> (BP);
    1030:	20 a2       	R0 = [P4 + 0x20];
    1032:	29 a2       	R1 = [P5 + 0x20];
    1034:	ff e3 e6 f7 	CALL 0x0 <_AddRecordToResponseList>;
    1038:	00 0c       	CC = R0 == 0x0;
    103a:	09 1c       	IF CC JUMP 0x104c <_PacketRRConflict+0x84> (BP);
    103c:	54 32       	P2 = P4;
    103e:	02 20       	JUMP.S 0x1042 <_PacketRRConflict+0x7a>;
    1040:	10 32       	P2 = R0;
    1042:	50 a3       	R0 = [P2 + 0x34];
    1044:	00 0c       	CC = R0 == 0x0;
    1046:	fd 17       	IF !CC JUMP 0x1040 <_PacketRRConflict+0x78> (BP);
    1048:	5a 08       	CC = P2 == P3;
    104a:	79 1c       	IF CC JUMP 0x113c <_PacketRRConflict+0x174> (BP);
    104c:	00 00       	NOP;
    104e:	64 91       	P4 = [P4];
    1050:	44 0c       	CC = P4 == 0x0;
    1052:	ce 17       	IF !CC JUMP 0xfee <_PacketRRConflict+0x26> (BP);
    1054:	17 32       	P2 = R7;
    1056:	14 e5 f3 07 	P4 = [P2 + 0x1fcc];
    105a:	32 20       	JUMP.S 0x10be <_PacketRRConflict+0xf6>;
    105c:	00 00       	NOP;
    105e:	e1 a4       	R1 = W[P4 + 0x6] (Z);
    1060:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    1062:	01 08       	CC = R1 == R0;
    1064:	2b 14       	IF !CC JUMP 0x10ba <_PacketRRConflict+0xf2> (BP);
    1066:	21 a5       	R1 = W[P4 + 0x8] (Z);
    1068:	28 a5       	R0 = W[P5 + 0x8] (Z);
    106a:	01 08       	CC = R1 == R0;
    106c:	27 14       	IF !CC JUMP 0x10ba <_PacketRRConflict+0xf2> (BP);
    106e:	61 a1       	R1 = [P4 + 0x14];
    1070:	68 a1       	R0 = [P5 + 0x14];
    1072:	01 08       	CC = R1 == R0;
    1074:	23 14       	IF !CC JUMP 0x10ba <_PacketRRConflict+0xf2> (BP);
    1076:	21 a6       	R1 = W[P4 + 0x10] (Z);
    1078:	28 a6       	R0 = W[P5 + 0x10] (Z);
    107a:	01 08       	CC = R1 == R0;
    107c:	1f 14       	IF !CC JUMP 0x10ba <_PacketRRConflict+0xf2> (BP);
    107e:	a1 a1       	R1 = [P4 + 0x18];
    1080:	a8 a1       	R0 = [P5 + 0x18];
    1082:	01 08       	CC = R1 == R0;
    1084:	1b 14       	IF !CC JUMP 0x10ba <_PacketRRConflict+0xf2> (BP);
    1086:	69 a2       	R1 = [P5 + 0x24];
    1088:	44 30       	R0 = P4;
    108a:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    108e:	20 64       	R0 += 0x4;		/* (  4) */
    1090:	21 64       	R1 += 0x4;		/* (  4) */
    1092:	02 e1 00 00 	R2.L = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    1096:	ff e3 b5 f7 	CALL 0x0 <_AddRecordToResponseList>;
    109a:	00 0c       	CC = R0 == 0x0;
    109c:	0f 1c       	IF CC JUMP 0x10ba <_PacketRRConflict+0xf2> (BP);
    109e:	20 a2       	R0 = [P4 + 0x20];
    10a0:	29 a2       	R1 = [P5 + 0x20];
    10a2:	ff e3 af f7 	CALL 0x0 <_AddRecordToResponseList>;
    10a6:	00 0c       	CC = R0 == 0x0;
    10a8:	09 1c       	IF CC JUMP 0x10ba <_PacketRRConflict+0xf2> (BP);
    10aa:	54 32       	P2 = P4;
    10ac:	02 20       	JUMP.S 0x10b0 <_PacketRRConflict+0xe8>;
    10ae:	10 32       	P2 = R0;
    10b0:	50 a3       	R0 = [P2 + 0x34];
    10b2:	00 0c       	CC = R0 == 0x0;
    10b4:	fd 17       	IF !CC JUMP 0x10ae <_PacketRRConflict+0xe6> (BP);
    10b6:	5a 08       	CC = P2 == P3;
    10b8:	42 1c       	IF CC JUMP 0x113c <_PacketRRConflict+0x174> (BP);
    10ba:	00 00       	NOP;
    10bc:	64 91       	P4 = [P4];
    10be:	44 0c       	CC = P4 == 0x0;
    10c0:	ce 17       	IF !CC JUMP 0x105c <_PacketRRConflict+0x94> (BP);
    10c2:	45 20       	JUMP.S 0x114c <_PacketRRConflict+0x184>;
    10c4:	00 00       	NOP;
    10c6:	e1 a4       	R1 = W[P4 + 0x6] (Z);
    10c8:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    10ca:	01 08       	CC = R1 == R0;
    10cc:	2b 14       	IF !CC JUMP 0x1122 <_PacketRRConflict+0x15a> (BP);
    10ce:	21 a5       	R1 = W[P4 + 0x8] (Z);
    10d0:	28 a5       	R0 = W[P5 + 0x8] (Z);
    10d2:	01 08       	CC = R1 == R0;
    10d4:	27 14       	IF !CC JUMP 0x1122 <_PacketRRConflict+0x15a> (BP);
    10d6:	61 a1       	R1 = [P4 + 0x14];
    10d8:	68 a1       	R0 = [P5 + 0x14];
    10da:	01 08       	CC = R1 == R0;
    10dc:	23 14       	IF !CC JUMP 0x1122 <_PacketRRConflict+0x15a> (BP);
    10de:	21 a6       	R1 = W[P4 + 0x10] (Z);
    10e0:	28 a6       	R0 = W[P5 + 0x10] (Z);
    10e2:	01 08       	CC = R1 == R0;
    10e4:	1f 14       	IF !CC JUMP 0x1122 <_PacketRRConflict+0x15a> (BP);
    10e6:	a1 a1       	R1 = [P4 + 0x18];
    10e8:	a8 a1       	R0 = [P5 + 0x18];
    10ea:	01 08       	CC = R1 == R0;
    10ec:	1b 14       	IF !CC JUMP 0x1122 <_PacketRRConflict+0x15a> (BP);
    10ee:	69 a2       	R1 = [P5 + 0x24];
    10f0:	44 30       	R0 = P4;
    10f2:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    10f6:	20 64       	R0 += 0x4;		/* (  4) */
    10f8:	21 64       	R1 += 0x4;		/* (  4) */
    10fa:	02 e1 00 00 	R2.L = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    10fe:	ff e3 81 f7 	CALL 0x0 <_AddRecordToResponseList>;
    1102:	00 0c       	CC = R0 == 0x0;
    1104:	0f 1c       	IF CC JUMP 0x1122 <_PacketRRConflict+0x15a> (BP);
    1106:	20 a2       	R0 = [P4 + 0x20];
    1108:	29 a2       	R1 = [P5 + 0x20];
    110a:	ff e3 7b f7 	CALL 0x0 <_AddRecordToResponseList>;
    110e:	00 0c       	CC = R0 == 0x0;
    1110:	09 1c       	IF CC JUMP 0x1122 <_PacketRRConflict+0x15a> (BP);
    1112:	02 20       	JUMP.S 0x1116 <_PacketRRConflict+0x14e>;
    1114:	62 32       	P4 = P2;
    1116:	a2 af       	P2 = [P4 + 0x38];
    1118:	42 0c       	CC = P2 == 0x0;
    111a:	08 18       	IF CC JUMP 0x112a <_PacketRRConflict+0x162>;
    111c:	54 08       	CC = P4 == P2;
    111e:	fb 17       	IF !CC JUMP 0x1114 <_PacketRRConflict+0x14c> (BP);
    1120:	05 20       	JUMP.S 0x112a <_PacketRRConflict+0x162>;
    1122:	00 00       	NOP;
    1124:	64 91       	P4 = [P4];
    1126:	44 0c       	CC = P4 == 0x0;
    1128:	ce 17       	IF !CC JUMP 0x10c4 <_PacketRRConflict+0xfc> (BP);
    112a:	7c 08       	CC = P4 == FP;
    112c:	08 1c       	IF CC JUMP 0x113c <_PacketRRConflict+0x174> (BP);
    112e:	18 e4 13 00 	R0 = [P3 + 0x4c];
    1132:	00 0c       	CC = R0 == 0x0;
    1134:	06 1c       	IF CC JUMP 0x1140 <_PacketRRConflict+0x178> (BP);
    1136:	44 0c       	CC = P4 == 0x0;
    1138:	00 02       	R0 = CC;
    113a:	04 20       	JUMP.S 0x1142 <_PacketRRConflict+0x17a>;
    113c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    113e:	02 20       	JUMP.S 0x1142 <_PacketRRConflict+0x17a>;
    1140:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    1142:	66 6c       	SP += 0xc;		/* ( 12) */
    1144:	77 90       	FP = [SP++];
    1146:	27 01       	RETS = [SP++];
    1148:	bb 05       	(R7:7, P5:3) = [SP++];
    114a:	10 00       	RTS;
    114c:	9f af       	FP = [P3 + 0x38];
    114e:	17 32       	P2 = R7;
    1150:	47 0c       	CC = FP == 0x0;
    1152:	fb 07       	IF CC FP = P3;
    1154:	14 e5 f2 07 	P4 = [P2 + 0x1fc8];
    1158:	e7 2f       	JUMP.S 0x1126 <_PacketRRConflict+0x15e>;
	...

0000115c <_ShouldSuppressKnownAnswer>:
_ShouldSuppressKnownAnswer():
    115c:	c4 04       	[--SP] = (P5:4);
    115e:	20 32       	P4 = R0;
    1160:	29 32       	P5 = R1;
    1162:	67 01       	[--SP] = RETS;
    1164:	a6 6f       	SP += -0xc;		/* (-12) */
    1166:	e1 a4       	R1 = W[P4 + 0x6] (Z);
    1168:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    116a:	01 08       	CC = R1 == R0;
    116c:	29 14       	IF !CC JUMP 0x11be <_ShouldSuppressKnownAnswer+0x62> (BP);
    116e:	21 a5       	R1 = W[P4 + 0x8] (Z);
    1170:	28 a5       	R0 = W[P5 + 0x8] (Z);
    1172:	01 08       	CC = R1 == R0;
    1174:	25 14       	IF !CC JUMP 0x11be <_ShouldSuppressKnownAnswer+0x62> (BP);
    1176:	61 a1       	R1 = [P4 + 0x14];
    1178:	68 a1       	R0 = [P5 + 0x14];
    117a:	01 08       	CC = R1 == R0;
    117c:	21 14       	IF !CC JUMP 0x11be <_ShouldSuppressKnownAnswer+0x62> (BP);
    117e:	21 a6       	R1 = W[P4 + 0x10] (Z);
    1180:	28 a6       	R0 = W[P5 + 0x10] (Z);
    1182:	01 08       	CC = R1 == R0;
    1184:	1d 14       	IF !CC JUMP 0x11be <_ShouldSuppressKnownAnswer+0x62> (BP);
    1186:	a1 a1       	R1 = [P4 + 0x18];
    1188:	a8 a1       	R0 = [P5 + 0x18];
    118a:	01 08       	CC = R1 == R0;
    118c:	19 14       	IF !CC JUMP 0x11be <_ShouldSuppressKnownAnswer+0x62> (BP);
    118e:	69 a2       	R1 = [P5 + 0x24];
    1190:	44 30       	R0 = P4;
    1192:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    1196:	20 64       	R0 += 0x4;		/* (  4) */
    1198:	21 64       	R1 += 0x4;		/* (  4) */
    119a:	02 e1 00 00 	R2.L = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    119e:	ff e3 31 f7 	CALL 0x0 <_AddRecordToResponseList>;
    11a2:	00 0c       	CC = R0 == 0x0;
    11a4:	0d 1c       	IF CC JUMP 0x11be <_ShouldSuppressKnownAnswer+0x62> (BP);
    11a6:	20 a2       	R0 = [P4 + 0x20];
    11a8:	29 a2       	R1 = [P5 + 0x20];
    11aa:	ff e3 2b f7 	CALL 0x0 <_AddRecordToResponseList>;
    11ae:	00 0c       	CC = R0 == 0x0;
    11b0:	07 1c       	IF CC JUMP 0x11be <_ShouldSuppressKnownAnswer+0x62> (BP);
    11b2:	e9 a0       	R1 = [P5 + 0xc];
    11b4:	e0 a0       	R0 = [P4 + 0xc];
    11b6:	09 4e       	R1 >>= 0x1;
    11b8:	01 0a       	CC = R1 <= R0 (IU);
    11ba:	00 02       	R0 = CC;
    11bc:	02 20       	JUMP.S 0x11c0 <_ShouldSuppressKnownAnswer+0x64>;
    11be:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    11c0:	66 6c       	SP += 0xc;		/* ( 12) */
    11c2:	27 01       	RETS = [SP++];
    11c4:	84 04       	(P5:4) = [SP++];
    11c6:	10 00       	RTS;

000011c8 <_BetterMatchForName>:
_BetterMatchForName():
    11c8:	68 05       	[--SP] = (R7:5);
    11ca:	67 01       	[--SP] = RETS;
    11cc:	a6 6f       	SP += -0xc;		/* (-12) */
    11ce:	b7 a2       	R7 = [SP + 0x28];
    11d0:	2a 30       	R5 = R2;
    11d2:	f6 a2       	R6 = [SP + 0x2c];
    11d4:	b9 08       	CC = R1 < R7;
    11d6:	0f 1c       	IF CC JUMP 0x11f4 <_BetterMatchForName+0x2c> (BP);
    11d8:	b7 08       	CC = R7 < R6;
    11da:	0d 1c       	IF CC JUMP 0x11f4 <_BetterMatchForName+0x2c> (BP);
    11dc:	79 52       	R1 = R1 - R7;
    11de:	ff e3 11 f7 	CALL 0x0 <_AddRecordToResponseList>;
    11e2:	0d 30       	R1 = R5;
    11e4:	ff e3 0e f7 	CALL 0x0 <_AddRecordToResponseList>;
    11e8:	00 0c       	CC = R0 == 0x0;
    11ea:	05 18       	IF CC JUMP 0x11f4 <_BetterMatchForName+0x2c>;
    11ec:	3e 08       	CC = R6 == R7;
    11ee:	00 02       	R0 = CC;
    11f0:	00 4b       	BITTGL (R0, 0x0);		/* bit  0 */
    11f2:	02 20       	JUMP.S 0x11f6 <_BetterMatchForName+0x2e>;
    11f4:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
    11f6:	66 6c       	SP += 0xc;		/* ( 12) */
    11f8:	27 01       	RETS = [SP++];
    11fa:	28 05       	(R7:5) = [SP++];
    11fc:	10 00       	RTS;
	...

00001200 <_GetBestServer>:
_GetBestServer():
    1200:	e3 05       	[--SP] = (R7:4, P5:3);
    1202:	00 e8 09 00 	LINK 0x24;		/* (36) */
    1206:	39 32       	FP = R1;
    1208:	30 e6 12 00 	[SP + 0x48] = R0;
    120c:	32 e6 14 00 	[SP + 0x50] = R2;
    1210:	47 0c       	CC = FP == 0x0;
    1212:	05 18       	IF CC JUMP 0x121c <_GetBestServer+0x1c>;
    1214:	01 30       	R0 = R1;
    1216:	ff e3 f5 f6 	CALL 0x0 <_AddRecordToResponseList>;
    121a:	02 20       	JUMP.S 0x121e <_GetBestServer+0x1e>;
    121c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    121e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    1222:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    1226:	b0 b1       	[SP + 0x18] = R0;
    1228:	10 91       	R0 = [P2];
    122a:	e6 61       	R6 = 0x3c (X);		/*		R6=0x3c( 60) */
    122c:	c6 40       	R6 *= R0;
    122e:	30 e4 18 00 	R0 = [SP + 0x60];
    1232:	00 0c       	CC = R0 == 0x0;
    1234:	31 e5 12 00 	P1 = [SP + 0x48];
    1238:	01 02       	R1 = CC;
    123a:	30 e4 14 00 	R0 = [SP + 0x50];
    123e:	00 0c       	CC = R0 == 0x0;
    1240:	02 68       	P2 = 0x0 (X);		/*		P2=0x0(  0) */
    1242:	00 02       	R0 = CC;
    1244:	0e 64       	R6 += 0x1;		/* (  1) */
    1246:	0d e5 fd 07 	P5 = [P1 + 0x1ff4];
    124a:	fc 6b       	P4 = -0x1 (X);		/*		P4=0xffffffff( -1) */
    124c:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    124e:	fc 63       	R4 = -0x1 (X);		/*		R4=0xffffffff( -1) */
    1250:	72 bd       	[SP + 0x14] = P2;
    1252:	b1 e6 22 00 	B[SP + 0x22] = R1;
    1256:	b0 e6 23 00 	B[SP + 0x23] = R0;
    125a:	5d 20       	JUMP.S 0x1314 <_GetBestServer+0x114>;
    125c:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    125e:	28 a2       	R0 = [P5 + 0x20];
    1260:	01 54       	R0 = R1 & R0;
    1262:	00 0c       	CC = R0 == 0x0;
    1264:	56 14       	IF !CC JUMP 0x1310 <_GetBestServer+0x110> (BP);
    1266:	f9 60       	R1 = 0x1f (X);		/*		R1=0x1f( 31) */
    1268:	0f 54       	R0 = R7 & R1;
    126a:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    126c:	81 40       	R1 <<= R0;
    126e:	01 30       	R0 = R1;
    1270:	82 c6 df 83 	R1 = R7 >> 0x5;
    1274:	11 32       	P2 = R1;
    1276:	29 e1 48 00 	P1 = 0x48 (X);		/*		P1=0x48( 72) */
    127a:	71 5a       	P1 = P1 + SP;
    127c:	91 5e       	P2 = P1 + (P2 << 0x2);
    127e:	d1 a0       	R1 = [P2 + 0xc];
    1280:	08 54       	R0 = R0 & R1;
    1282:	00 0c       	CC = R0 == 0x0;
    1284:	45 1c       	IF CC JUMP 0x130e <_GetBestServer+0x10e> (BP);
    1286:	55 32       	P2 = P5;
    1288:	62 6d       	P2 += 0x2c;		/* ( 44) */
    128a:	f2 bd       	[SP + 0x1c] = P2;
    128c:	42 30       	R0 = P2;
    128e:	ff e3 b9 f6 	CALL 0x0 <_AddRecordToResponseList>;
    1292:	18 32       	P3 = R0;
    1294:	28 e4 4b 00 	R0 = [P5 + 0x12c];
    1298:	00 0c       	CC = R0 == 0x0;
    129a:	15 1c       	IF CC JUMP 0x12c4 <_GetBestServer+0xc4> (BP);
    129c:	31 e5 12 00 	P1 = [SP + 0x48];
    12a0:	09 e4 37 00 	R1 = [P1 + 0xdc];
    12a4:	48 53       	R5 = R0 - R1;
    12a6:	85 0c       	CC = R5 < 0x0;
    12a8:	0f 14       	IF !CC JUMP 0x12c6 <_GetBestServer+0xc6> (BP);
    12aa:	31 b1       	[SP + 0x10] = R1;
    12ac:	f0 b0       	[SP + 0xc] = R0;
    12ae:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1(  1) */
    12b2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    12b4:	01 e1 dc 04 	R1.L = 0x4dc;		/* (1244)	R1=0x4dc(1244) */
    12b8:	15 30       	R2 = R5;
    12ba:	ff e3 a3 f6 	CALL 0x0 <_AddRecordToResponseList>;
    12be:	02 68       	P2 = 0x0 (X);		/*		P2=0x0(  0) */
    12c0:	2a e7 4b 00 	[P5 + 0x12c] = P2;
    12c4:	05 60       	R5 = 0x0 (X);		/*		R5=0x0(  0) */
    12c6:	00 00       	NOP;
    12c8:	28 e4 4c 00 	R0 = [P5 + 0x130];
    12cc:	00 0c       	CC = R0 == 0x0;
    12ce:	05 14       	IF !CC JUMP 0x12d8 <_GetBestServer+0xd8> (BP);
    12d0:	b0 e4 23 00 	R0 = B[SP + 0x23] (Z);
    12d4:	08 02       	CC = R0;
    12d6:	07 1c       	IF CC JUMP 0x12e4 <_GetBestServer+0xe4> (BP);
    12d8:	00 00       	NOP;
    12da:	68 a0       	R0 = [P5 + 0x4];
    12dc:	31 e4 14 00 	R1 = [SP + 0x50];
    12e0:	08 08       	CC = R0 == R1;
    12e2:	16 14       	IF !CC JUMP 0x130e <_GetBestServer+0x10e> (BP);
    12e4:	b0 e4 22 00 	R0 = B[SP + 0x22] (Z);
    12e8:	08 02       	CC = R0;
    12ea:	0c 1c       	IF CC JUMP 0x1302 <_GetBestServer+0x102> (BP);
    12ec:	f3 bc       	[SP + 0xc] = P3;
    12ee:	34 b1       	[SP + 0x10] = R4;
    12f0:	47 30       	R0 = FP;
    12f2:	b1 a1       	R1 = [SP + 0x18];
    12f4:	f2 a1       	R2 = [SP + 0x1c];
    12f6:	ff e3 69 ff 	CALL 0x11c8 <_BetterMatchForName>;
    12fa:	08 0c       	CC = R0 == 0x1;
    12fc:	05 1c       	IF CC JUMP 0x1306 <_GetBestServer+0x106> (BP);
    12fe:	00 0c       	CC = R0 == 0x0;
    1300:	07 14       	IF !CC JUMP 0x130e <_GetBestServer+0x10e> (BP);
    1302:	b5 08       	CC = R5 < R6;
    1304:	05 14       	IF !CC JUMP 0x130e <_GetBestServer+0x10e> (BP);
    1306:	27 32       	P4 = R7;
    1308:	35 30       	R6 = R5;
    130a:	63 30       	R4 = P3;
    130c:	75 bd       	[SP + 0x14] = P5;
    130e:	0f 64       	R7 += 0x1;		/* (  1) */
    1310:	00 00       	NOP;
    1312:	6d 91       	P5 = [P5];
    1314:	45 0c       	CC = P5 == 0x0;
    1316:	a3 17       	IF !CC JUMP 0x125c <_GetBestServer+0x5c> (BP);
    1318:	31 e5 17 00 	P1 = [SP + 0x5c];
    131c:	41 0c       	CC = P1 == 0x0;
    131e:	02 18       	IF CC JUMP 0x1322 <_GetBestServer+0x122>;
    1320:	4c 93       	[P1] = P4;
    1322:	70 a1       	R0 = [SP + 0x14];
    1324:	26 6d       	SP += 0x24;		/* ( 36) */
    1326:	77 90       	FP = [SP++];
    1328:	27 01       	RETS = [SP++];
    132a:	a3 05       	(R7:4, P5:3) = [SP++];
    132c:	10 00       	RTS;
	...

00001330 <_LLQNATCallback>:
_LLQNATCallback():
    1330:	c4 04       	[--SP] = (P5:4);
    1332:	29 32       	P5 = R1;
    1334:	67 01       	[--SP] = RETS;
    1336:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4dc(1244) */
    133a:	20 32       	P4 = R0;
    133c:	66 6f       	SP += -0x14;		/* (-20) */
    133e:	01 e1 e8 03 	R1.L = 0x3e8;		/* (1000)	R1=0x3e8(1000) */
    1342:	ff e3 5f f6 	CALL 0x0 <_AddRecordToResponseList>;
    1346:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    134a:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    134e:	10 91       	R0 = [P2];
    1350:	00 0c       	CC = R0 == 0x0;
    1352:	13 1c       	IF CC JUMP 0x1378 <_LLQNATCallback+0x48> (BP);
    1354:	a8 e4 1c 00 	R0 = B[P5 + 0x1c] (Z);
    1358:	a9 e4 1d 00 	R1 = B[P5 + 0x1d] (Z);
    135c:	40 4f       	R0 <<= 0x8;
    135e:	01 56       	R0 = R1 | R0;
    1360:	f0 b0       	[SP + 0xc] = R0;
    1362:	68 a2       	R0 = [P5 + 0x24];
    1364:	55 30       	R2 = P5;
    1366:	30 b1       	[SP + 0x10] = R0;
    1368:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3e8(1000) */
    136c:	c2 64       	R2 += 0x18;		/* ( 24) */
    136e:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    1370:	01 e1 48 05 	R1.L = 0x548;		/* (1352)	R1=0x548(1352) */
    1374:	ff e3 46 f6 	CALL 0x0 <_AddRecordToResponseList>;
    1378:	00 00       	NOP;
    137a:	25 e5 4c 00 	P5 = [P4 + 0x130];
    137e:	16 20       	JUMP.S 0x13aa <_LLQNATCallback+0x7a>;
    1380:	00 00       	NOP;
    1382:	28 a1       	R0 = [P5 + 0x10];
    1384:	00 0d       	CC = R0 <= 0x0;
    1386:	10 1c       	IF CC JUMP 0x13a6 <_LLQNATCallback+0x76> (BP);
    1388:	a8 a3       	R0 = [P5 + 0x38];
    138a:	00 0c       	CC = R0 == 0x0;
    138c:	0d 14       	IF !CC JUMP 0x13a6 <_LLQNATCallback+0x76> (BP);
    138e:	68 e4 99 00 	R0 = W[P5 + 0x132] (Z);
    1392:	00 0c       	CC = R0 == 0x0;
    1394:	09 1c       	IF CC JUMP 0x13a6 <_LLQNATCallback+0x76> (BP);
    1396:	28 e4 8e 00 	R0 = [P5 + 0x238];
    139a:	00 0c       	CC = R0 == 0x0;
    139c:	05 1c       	IF CC JUMP 0x13a6 <_LLQNATCallback+0x76> (BP);
    139e:	44 30       	R0 = P4;
    13a0:	4d 30       	R1 = P5;
    13a2:	ff e3 2f f6 	CALL 0x0 <_AddRecordToResponseList>;
    13a6:	00 00       	NOP;
    13a8:	6d 91       	P5 = [P5];
    13aa:	45 0c       	CC = P5 == 0x0;
    13ac:	ea 17       	IF !CC JUMP 0x1380 <_LLQNATCallback+0x50> (BP);
    13ae:	a6 6c       	SP += 0x14;		/* ( 20) */
    13b0:	27 01       	RETS = [SP++];
    13b2:	44 30       	R0 = P4;
    13b4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x548(1352) */
    13b8:	01 e1 e8 03 	R1.L = 0x3e8;		/* (1000)	R1=0x3e8(1000) */
    13bc:	84 04       	(P5:4) = [SP++];
    13be:	ff e2 21 f6 	JUMP.L 0x0 <_AddRecordToResponseList>;
	...

000013c4 <_CompareRData>:
_CompareRData():
    13c4:	fb 05       	[--SP] = (R7:7, P5:3);
    13c6:	67 01       	[--SP] = RETS;
    13c8:	29 e1 f0 fd 	P1 = -0x210 (X);		/*		P1=0xfffffdf0(-528) */
    13cc:	8e 5b       	SP = SP + P1;
    13ce:	39 30       	R7 = R1;
    13d0:	00 0c       	CC = R0 == 0x0;
    13d2:	06 14       	IF !CC JUMP 0x13de <_CompareRData+0x1a> (BP);
    13d4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3e8(1000) */
    13d8:	01 e1 84 05 	R1.L = 0x584;		/* (1412)	R1=0x584(1412) */
    13dc:	08 20       	JUMP.S 0x13ec <_CompareRData+0x28>;
    13de:	01 0c       	CC = R1 == 0x0;
    13e0:	09 14       	IF !CC JUMP 0x13f2 <_CompareRData+0x2e> (BP);
    13e2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x584(1412) */
    13e6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    13e8:	01 e1 a4 05 	R1.L = 0x5a4;		/* (1444)	R1=0x5a4(1444) */
    13ec:	ff e3 0a f6 	CALL 0x0 <_AddRecordToResponseList>;
    13f0:	3b 20       	JUMP.S 0x1466 <_CompareRData+0xa2>;
    13f2:	2a e1 10 01 	P2 = 0x110 (X);		/*		P2=0x110(272) */
    13f6:	56 5b       	P5 = SP + P2;
    13f8:	20 64       	R0 += 0x4;		/* (  4) */
    13fa:	2a e1 10 02 	P2 = 0x210 (X);		/*		P2=0x210(528) */
    13fe:	f0 b0       	[SP + 0xc] = R0;
    1400:	b2 5a       	P2 = P2 + SP;
    1402:	4d 30       	R1 = P5;
    1404:	52 30       	R2 = P2;
    1406:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1408:	ff e3 fc f5 	CALL 0x0 <_AddRecordToResponseList>;
    140c:	5e 32       	P3 = SP;
    140e:	20 32       	P4 = R0;
    1410:	83 6c       	P3 += 0x10;		/* ( 16) */
    1412:	27 64       	R7 += 0x4;		/* (  4) */
    1414:	f7 b0       	[SP + 0xc] = R7;
    1416:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1418:	4b 30       	R1 = P3;
    141a:	55 30       	R2 = P5;
    141c:	ff e3 f2 f5 	CALL 0x0 <_AddRecordToResponseList>;
    1420:	4b 32       	P1 = P3;
    1422:	55 32       	P2 = P5;
    1424:	e5 09       	CC = P5 < P4 (IU);
    1426:	09 10       	IF !CC JUMP 0x1438 <_CompareRData+0x74>;
    1428:	4b 30       	R1 = P3;
    142a:	81 09       	CC = R1 < R0 (IU);
    142c:	26 14       	IF !CC JUMP 0x1478 <_CompareRData+0xb4> (BP);
    142e:	2a 98       	R2 = B[P5++] (Z);
    1430:	19 98       	R1 = B[P3++] (Z);
    1432:	0a 08       	CC = R2 == R1;
    1434:	f6 1f       	IF CC JUMP 0x1420 <_CompareRData+0x5c> (BP);
    1436:	21 20       	JUMP.S 0x1478 <_CompareRData+0xb4>;
    1438:	4b 30       	R1 = P3;
    143a:	81 09       	CC = R1 < R0 (IU);
    143c:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
    143e:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    1440:	01 06       	IF !CC R0 = R1;
    1442:	15 20       	JUMP.S 0x146c <_CompareRData+0xa8>;
    1444:	49 30       	R1 = P1;
    1446:	81 09       	CC = R1 < R0 (IU);
    1448:	0f 14       	IF !CC JUMP 0x1466 <_CompareRData+0xa2> (BP);
    144a:	09 99       	R1 = B[P1] (Z);
    144c:	10 99       	R0 = B[P2] (Z);
    144e:	01 0a       	CC = R1 <= R0 (IU);
    1450:	0d 10       	IF !CC JUMP 0x146a <_CompareRData+0xa6>;
    1452:	81 09       	CC = R1 < R0 (IU);
    1454:	09 1c       	IF CC JUMP 0x1466 <_CompareRData+0xa2> (BP);
    1456:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    145a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    145c:	01 e1 c4 05 	R1.L = 0x5c4;		/* (1476)	R1=0x5c4(1476) */
    1460:	ff e3 d0 f5 	CALL 0x0 <_AddRecordToResponseList>;
    1464:	03 20       	JUMP.S 0x146a <_CompareRData+0xa6>;
    1466:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    1468:	02 20       	JUMP.S 0x146c <_CompareRData+0xa8>;
    146a:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
    146c:	29 e1 10 02 	P1 = 0x210 (X);		/*		P1=0x210(528) */
    1470:	8e 5b       	SP = SP + P1;
    1472:	27 01       	RETS = [SP++];
    1474:	bb 05       	(R7:7, P5:3) = [SP++];
    1476:	10 00       	RTS;
    1478:	e2 09       	CC = P2 < P4 (IU);
    147a:	e5 1f       	IF CC JUMP 0x1444 <_CompareRData+0x80> (BP);
    147c:	f7 2f       	JUMP.S 0x146a <_CompareRData+0xa6>;
	...

00001480 <_SendDelayedUnicastResponse>:
_SendDelayedUnicastResponse():
    1480:	e3 05       	[--SP] = (R7:4, P5:3);
    1482:	20 32       	P4 = R0;
    1484:	00 e8 12 00 	LINK 0x48;		/* (72) */
    1488:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    148a:	19 32       	P3 = R1;
    148c:	2a 30       	R5 = R2;
    148e:	22 e1 44 00 	R2 = 0x44 (X);		/*		R2=0x44( 68) */
    1492:	30 e6 11 00 	[SP + 0x44] = R0;
    1496:	4e 30       	R1 = SP;
    1498:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0xc0 */
    149c:	08 e1 00 00 	P0.L = 0x0;		/* (  0)	P0=0x0 <_AddRecordToResponseList> */
    14a0:	11 50       	R0 = R1 + R2;
    14a2:	51 e1 00 00 	I1.H = 0x0;		/* (  0)	I1=0x23a7(9127) */
    14a6:	50 e1 00 00 	I0.H = 0x0;		/* (  0)	I0=0x11a1(4513) */
    14aa:	4d e1 00 00 	P5.H = 0x0;		/* (  0)	P5=0xb0 <_IPv6CheckSum> */
    14ae:	44 e1 00 00 	R4.H = 0x0;		/* (  0)	R4=0xffff(65535) */
    14b2:	78 30       	R7 = P0;
    14b4:	58 30       	R3 = P0;
    14b6:	50 30       	R2 = P0;
    14b8:	30 e6 10 00 	[SP + 0x40] = R0;
    14bc:	22 e5 f2 07 	P2 = [P4 + 0x1fc8];
    14c0:	11 e1 00 00 	I1.L = 0x0;		/* (  0)	I1=0x0 <_AddRecordToResponseList>(  0) */
    14c4:	10 e1 00 00 	I0.L = 0x0;		/* (  0)	I0=0x0 <_AddRecordToResponseList>(  0) */
    14c8:	0d e1 00 00 	P5.L = 0x0;		/* (  0)	P5=0x0 <_AddRecordToResponseList> */
    14cc:	04 e1 00 00 	R4.L = 0x0;		/* (  0)	R4=0x0 <_AddRecordToResponseList>(  0) */
    14d0:	33 e1 a0 00 	I3 = 0xa0 (X);		/*		I3=0xa0(160) */
    14d4:	27 64       	R7 += 0x4;		/* (  4) */
    14d6:	43 64       	R3 += 0x8;		/* (  8) */
    14d8:	62 64       	R2 += 0xc;		/* ( 12) */
    14da:	32 e1 b0 00 	I2 = 0xb0 (X);		/*		I2=0xb0 <_IPv6CheckSum>(176) */
    14de:	81 20       	JUMP.S 0x15e0 <_SendDelayedUnicastResponse+0x160>;
    14e0:	00 00       	NOP;
    14e2:	11 e5 24 00 	P1 = [P2 + 0x90];
    14e6:	09 9d       	R1 = [I1];
    14e8:	41 30       	R0 = P1;
    14ea:	08 08       	CC = R0 == R1;
    14ec:	1f 1c       	IF CC JUMP 0x152a <_SendDelayedUnicastResponse+0xaa> (BP);
    14ee:	11 e5 27 00 	P1 = [P2 + 0x9c];
    14f2:	01 9d       	R1 = [I0];
    14f4:	41 30       	R0 = P1;
    14f6:	08 08       	CC = R0 == R1;
    14f8:	19 1c       	IF CC JUMP 0x152a <_SendDelayedUnicastResponse+0xaa> (BP);
    14fa:	11 e5 28 00 	P1 = [P2 + 0xa0];
    14fe:	29 91       	R1 = [P5];
    1500:	71 30       	R6 = P1;
    1502:	0e 08       	CC = R6 == R1;
    1504:	16 14       	IF !CC JUMP 0x1530 <_SendDelayedUnicastResponse+0xb0> (BP);
    1506:	11 e5 29 00 	P1 = [P2 + 0xa4];
    150a:	69 a0       	R1 = [P5 + 0x4];
    150c:	41 30       	R0 = P1;
    150e:	08 08       	CC = R0 == R1;
    1510:	10 14       	IF !CC JUMP 0x1530 <_SendDelayedUnicastResponse+0xb0> (BP);
    1512:	11 e5 2a 00 	P1 = [P2 + 0xa8];
    1516:	a9 a0       	R1 = [P5 + 0x8];
    1518:	71 30       	R6 = P1;
    151a:	0e 08       	CC = R6 == R1;
    151c:	0a 14       	IF !CC JUMP 0x1530 <_SendDelayedUnicastResponse+0xb0> (BP);
    151e:	11 e5 2b 00 	P1 = [P2 + 0xac];
    1522:	e9 a0       	R1 = [P5 + 0xc];
    1524:	41 30       	R0 = P1;
    1526:	08 08       	CC = R0 == R1;
    1528:	04 14       	IF !CC JUMP 0x1530 <_SendDelayedUnicastResponse+0xb0> (BP);
    152a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    152c:	90 e6 8a 00 	B[P2 + 0x8a] = R0;
    1530:	00 00       	NOP;
    1532:	90 e4 8a 00 	R0 = B[P2 + 0x8a] (Z);
    1536:	00 0c       	CC = R0 == 0x0;
    1538:	52 1c       	IF CC JUMP 0x15dc <_SendDelayedUnicastResponse+0x15c> (BP);
    153a:	10 e4 24 00 	R0 = [P2 + 0x90];
    153e:	28 08       	CC = R0 == R5;
    1540:	4e 14       	IF !CC JUMP 0x15dc <_SendDelayedUnicastResponse+0x15c> (BP);
    1542:	18 91       	R0 = [P3];
    1544:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
    1546:	08 08       	CC = R0 == R1;
    1548:	07 14       	IF !CC JUMP 0x1556 <_SendDelayedUnicastResponse+0xd6> (BP);
    154a:	11 e5 27 00 	P1 = [P2 + 0x9c];
    154e:	58 a0       	R0 = [P3 + 0x4];
    1550:	71 30       	R6 = P1;
    1552:	06 08       	CC = R6 == R0;
    1554:	1b 20       	JUMP.S 0x158a <_SendDelayedUnicastResponse+0x10a>;
    1556:	31 60       	R1 = 0x6 (X);		/*		R1=0x6(  6) */
    1558:	08 08       	CC = R0 == R1;
    155a:	41 14       	IF !CC JUMP 0x15dc <_SendDelayedUnicastResponse+0x15c> (BP);
    155c:	11 e5 28 00 	P1 = [P2 + 0xa0];
    1560:	58 a0       	R0 = [P3 + 0x4];
    1562:	71 30       	R6 = P1;
    1564:	06 08       	CC = R6 == R0;
    1566:	3b 14       	IF !CC JUMP 0x15dc <_SendDelayedUnicastResponse+0x15c> (BP);
    1568:	11 e5 29 00 	P1 = [P2 + 0xa4];
    156c:	98 a0       	R0 = [P3 + 0x8];
    156e:	49 30       	R1 = P1;
    1570:	01 08       	CC = R1 == R0;
    1572:	35 14       	IF !CC JUMP 0x15dc <_SendDelayedUnicastResponse+0x15c> (BP);
    1574:	11 e5 2a 00 	P1 = [P2 + 0xa8];
    1578:	d8 a0       	R0 = [P3 + 0xc];
    157a:	71 30       	R6 = P1;
    157c:	06 08       	CC = R6 == R0;
    157e:	2f 14       	IF !CC JUMP 0x15dc <_SendDelayedUnicastResponse+0x15c> (BP);
    1580:	11 e5 2b 00 	P1 = [P2 + 0xac];
    1584:	18 a1       	R0 = [P3 + 0x10];
    1586:	49 30       	R1 = P1;
    1588:	01 08       	CC = R1 == R0;
    158a:	29 14       	IF !CC JUMP 0x15dc <_SendDelayedUnicastResponse+0x15c> (BP);
    158c:	0c 32       	P1 = R4;
    158e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1590:	10 e6 24 00 	[P2 + 0x90] = R0;
    1594:	90 e6 8a 00 	B[P2 + 0x8a] = R0;
    1598:	bb 32       	FP = I3;
    159a:	08 91       	R0 = [P1];
    159c:	7a 5a       	P1 = P2 + FP;
    159e:	3f 32       	FP = R7;
    15a0:	10 e6 27 00 	[P2 + 0x9c] = R0;
    15a4:	00 91       	R0 = [P0];
    15a6:	08 92       	[P1++] = R0;
    15a8:	38 91       	R0 = [FP];
    15aa:	3b 32       	FP = R3;
    15ac:	08 92       	[P1++] = R0;
    15ae:	38 91       	R0 = [FP];
    15b0:	3a 32       	FP = R2;
    15b2:	08 92       	[P1++] = R0;
    15b4:	38 91       	R0 = [FP];
    15b6:	08 93       	[P1] = R0;
    15b8:	10 e4 2c 00 	R0 = [P2 + 0xb0];
    15bc:	00 0c       	CC = R0 == 0x0;
    15be:	0f 14       	IF !CC JUMP 0x15dc <_SendDelayedUnicastResponse+0x15c> (BP);
    15c0:	37 e5 10 00 	FP = [SP + 0x40];
    15c4:	42 30       	R0 = P2;
    15c6:	b2 30       	R6 = I2;
    15c8:	70 50       	R1 = R0 + R6;
    15ca:	47 30       	R0 = FP;
    15cc:	08 08       	CC = R0 == R1;
    15ce:	07 18       	IF CC JUMP 0x15dc <_SendDelayedUnicastResponse+0x15c>;
    15d0:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
    15d2:	10 e6 2d 00 	[P2 + 0xb4] = R0;
    15d6:	7a 93       	[FP] = P2;
    15d8:	31 e6 10 00 	[SP + 0x40] = R1;
    15dc:	00 00       	NOP;
    15de:	52 91       	P2 = [P2];
    15e0:	42 0c       	CC = P2 == 0x0;
    15e2:	7f 17       	IF !CC JUMP 0x14e0 <_SendDelayedUnicastResponse+0x60> (BP);
    15e4:	5e 30       	R3 = SP;
    15e6:	26 e1 40 00 	R6 = 0x40 (X);		/*		R6=0x40( 64) */
    15ea:	b3 50       	R2 = R3 + R6;
    15ec:	f5 b0       	[SP + 0xc] = R5;
    15ee:	44 30       	R0 = P4;
    15f0:	31 e4 11 00 	R1 = [SP + 0x44];
    15f4:	ff e3 44 f9 	CALL 0x87c <_AddAdditionalsToResponseList>;
    15f8:	26 e1 98 59 	R6 = 0x5998 (X);		/*		R6=0x5998(22936) */
    15fc:	06 32       	P0 = R6;
    15fe:	2a e1 92 59 	P2 = 0x5992 (X);		/*		P2=0x5992(22930) */
    1602:	94 5a       	P2 = P4 + P2;
    1604:	b2 bf       	[SP + 0x38] = P2;
    1606:	2a e1 96 59 	P2 = 0x5996 (X);		/*		P2=0x5996(22934) */
    160a:	04 5a       	P0 = P4 + P0;
    160c:	2f e1 8c 59 	FP = 0x598c (X);		/*		FP=0x598c(22924) */
    1610:	94 5a       	P2 = P4 + P2;
    1612:	70 bf       	[SP + 0x34] = P0;
    1614:	fc 5b       	FP = P4 + FP;
    1616:	f2 bf       	[SP + 0x3c] = P2;
    1618:	da 20       	JUMP.S 0x17cc <_SendDelayedUnicastResponse+0x34c>;
    161a:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x210 */
    161e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x5996 */
    1622:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    1626:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    162a:	09 95       	R1 = W[P1] (Z);
    162c:	12 95       	R2 = W[P2] (Z);
    162e:	77 a3       	R7 = [SP + 0x34];
    1630:	47 30       	R0 = FP;
    1632:	ff e3 e7 f4 	CALL 0x0 <_AddRecordToResponseList>;
    1636:	24 e1 00 80 	R4 = -0x8000 (X);		/*		R4=0xffff8000(-32768) */
    163a:	23 e1 a0 05 	R3 = 0x5a0 (X);		/*		R3=0x5a0(1440) */
    163e:	2a e1 ec 22 	P2 = 0x22ec (X);		/*		P2=0x22ec(8940) */
    1642:	29 e1 ff 7f 	P1 = 0x7fff (X);		/*		P1=0x7fff(32767) */
    1646:	45 20       	JUMP.S 0x16d0 <_SendDelayedUnicastResponse+0x250>;
    1648:	91 61       	R1 = 0x32 (X);		/*		R1=0x32( 50) */
    164a:	a8 e4 04 00 	R0 = B[P5 + 0x4] (Z);
    164e:	08 54       	R0 = R0 & R1;
    1650:	00 0c       	CC = R0 == 0x0;
    1652:	04 1c       	IF CC JUMP 0x165a <_SendDelayedUnicastResponse+0x1da> (BP);
    1654:	28 a9       	R0 = W[P5 + 0x8] (X);
    1656:	04 56       	R0 = R4 | R0;
    1658:	28 b5       	W[P5 + 0x8] = R0;
    165a:	4d 30       	R1 = P5;
    165c:	62 e4 c9 2c 	R2 = W[P4 + 0x5992] (Z);
    1660:	21 64       	R1 += 0x4;		/* (  4) */
    1662:	e8 a0       	R0 = [P5 + 0xc];
    1664:	02 0c       	CC = R2 == 0x0;
    1666:	07 14       	IF !CC JUMP 0x1674 <_SendDelayedUnicastResponse+0x1f4> (BP);
    1668:	22 e4 65 16 	R2 = [P4 + 0x5994];
    166c:	02 0c       	CC = R2 == 0x0;
    166e:	52 07       	IF CC R2 = P2;
    1670:	13 06       	IF !CC R2 = R3;
    1672:	03 20       	JUMP.S 0x1678 <_SendDelayedUnicastResponse+0x1f8>;
    1674:	22 e1 a0 05 	R2 = 0x5a0 (X);		/*		R2=0x5a0(1440) */
    1678:	f1 b0       	[SP + 0xc] = R1;
    167a:	30 b1       	[SP + 0x10] = R0;
    167c:	b2 50       	R2 = R2 + R6;
    167e:	4c 30       	R1 = P4;
    1680:	11 50       	R0 = R1 + R2;
    1682:	70 b1       	[SP + 0x14] = R0;
    1684:	0f 30       	R1 = R7;
    1686:	b2 a3       	R2 = [SP + 0x38];
    1688:	f3 b2       	[SP + 0x2c] = R3;
    168a:	b1 be       	[SP + 0x28] = P1;
    168c:	32 bf       	[SP + 0x30] = P2;
    168e:	47 30       	R0 = FP;
    1690:	ff e3 b8 f4 	CALL 0x0 <_AddRecordToResponseList>;
    1694:	b1 ae       	P1 = [SP + 0x28];
    1696:	29 a9       	R1 = W[P5 + 0x8] (X);
    1698:	00 0c       	CC = R0 == 0x0;
    169a:	f3 a2       	R3 = [SP + 0x2c];
    169c:	51 30       	R2 = P1;
    169e:	4a 54       	R1 = R2 & R1;
    16a0:	29 b5       	W[P5 + 0x8] = R1;
    16a2:	32 af       	P2 = [SP + 0x30];
    16a4:	06 14       	IF !CC JUMP 0x16b0 <_SendDelayedUnicastResponse+0x230> (BP);
    16a6:	60 e4 c9 2c 	R0 = W[P4 + 0x5992] (Z);
    16aa:	00 0c       	CC = R0 == 0x0;
    16ac:	03 1c       	IF CC JUMP 0x16b2 <_SendDelayedUnicastResponse+0x232> (BP);
    16ae:	67 20       	JUMP.S 0x177c <_SendDelayedUnicastResponse+0x2fc>;
    16b0:	38 30       	R7 = R0;
    16b2:	00 00       	NOP;
    16b4:	28 e4 2c 00 	R0 = [P5 + 0xb0];
    16b8:	30 e6 11 00 	[SP + 0x44] = R0;
    16bc:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    16be:	28 e6 2c 00 	[P5 + 0xb0] = R0;
    16c2:	28 e6 2d 00 	[P5 + 0xb4] = R0;
    16c6:	28 e6 2e 00 	[P5 + 0xb8] = R0;
    16ca:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    16cc:	a8 e6 87 00 	B[P5 + 0x87] = R0;
    16d0:	35 e5 11 00 	P5 = [SP + 0x44];
    16d4:	45 0c       	CC = P5 == 0x0;
    16d6:	53 1c       	IF CC JUMP 0x177c <_SendDelayedUnicastResponse+0x2fc> (BP);
    16d8:	28 e4 2d 00 	R0 = [P5 + 0xb4];
    16dc:	00 0c       	CC = R0 == 0x0;
    16de:	b5 17       	IF !CC JUMP 0x1648 <_SendDelayedUnicastResponse+0x1c8> (BP);
    16e0:	4e 20       	JUMP.S 0x177c <_SendDelayedUnicastResponse+0x2fc>;
    16e2:	90 61       	R0 = 0x32 (X);		/*		R0=0x32( 50) */
    16e4:	a9 e4 04 00 	R1 = B[P5 + 0x4] (Z);
    16e8:	01 54       	R0 = R1 & R0;
    16ea:	00 0c       	CC = R0 == 0x0;
    16ec:	04 1c       	IF CC JUMP 0x16f4 <_SendDelayedUnicastResponse+0x274> (BP);
    16ee:	28 a9       	R0 = W[P5 + 0x8] (X);
    16f0:	03 56       	R0 = R3 | R0;
    16f2:	28 b5       	W[P5 + 0x8] = R0;
    16f4:	55 30       	R2 = P5;
    16f6:	60 e4 c9 2c 	R0 = W[P4 + 0x5992] (Z);
    16fa:	22 64       	R2 += 0x4;		/* (  4) */
    16fc:	e9 a0       	R1 = [P5 + 0xc];
    16fe:	00 0c       	CC = R0 == 0x0;
    1700:	08 14       	IF !CC JUMP 0x1710 <_SendDelayedUnicastResponse+0x290> (BP);
    1702:	20 e4 65 16 	R0 = [P4 + 0x5994];
    1706:	00 0c       	CC = R0 == 0x0;
    1708:	20 e1 a0 05 	R0 = 0x5a0 (X);		/*		R0=0x5a0(1440) */
    170c:	41 07       	IF CC R0 = P1;
    170e:	03 20       	JUMP.S 0x1714 <_SendDelayedUnicastResponse+0x294>;
    1710:	20 e1 a0 05 	R0 = 0x5a0 (X);		/*		R0=0x5a0(1440) */
    1714:	31 b1       	[SP + 0x10] = R1;
    1716:	4c 30       	R1 = P4;
    1718:	30 50       	R0 = R0 + R6;
    171a:	01 50       	R0 = R1 + R0;
    171c:	f2 b0       	[SP + 0xc] = R2;
    171e:	70 b1       	[SP + 0x14] = R0;
    1720:	0f 30       	R1 = R7;
    1722:	f2 a3       	R2 = [SP + 0x3c];
    1724:	f3 b2       	[SP + 0x2c] = R3;
    1726:	30 bf       	[SP + 0x30] = P0;
    1728:	b1 be       	[SP + 0x28] = P1;
    172a:	47 30       	R0 = FP;
    172c:	ff e3 6a f4 	CALL 0x0 <_AddRecordToResponseList>;
    1730:	30 af       	P0 = [SP + 0x30];
    1732:	29 a9       	R1 = W[P5 + 0x8] (X);
    1734:	00 0c       	CC = R0 == 0x0;
    1736:	f3 a2       	R3 = [SP + 0x2c];
    1738:	50 30       	R2 = P0;
    173a:	4a 54       	R1 = R2 & R1;
    173c:	29 b5       	W[P5 + 0x8] = R1;
    173e:	b1 ae       	P1 = [SP + 0x28];
    1740:	4b 14       	IF !CC JUMP 0x17d6 <_SendDelayedUnicastResponse+0x356> (BP);
    1742:	06 20       	JUMP.S 0x174e <_SendDelayedUnicastResponse+0x2ce>;
    1744:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    1746:	a9 e6 87 00 	B[P5 + 0x87] = R1;
    174a:	38 30       	R7 = R0;
    174c:	0b 20       	JUMP.S 0x1762 <_SendDelayedUnicastResponse+0x2e2>;
    174e:	a9 e4 04 00 	R1 = B[P5 + 0x4] (Z);
    1752:	90 61       	R0 = 0x32 (X);		/*		R0=0x32( 50) */
    1754:	01 54       	R0 = R1 & R0;
    1756:	00 0c       	CC = R0 == 0x0;
    1758:	05 1c       	IF CC JUMP 0x1762 <_SendDelayedUnicastResponse+0x2e2> (BP);
    175a:	14 32       	P2 = R4;
    175c:	10 91       	R0 = [P2];
    175e:	28 e6 24 00 	[P5 + 0x90] = R0;
    1762:	00 00       	NOP;
    1764:	28 e4 2c 00 	R0 = [P5 + 0xb0];
    1768:	30 e6 11 00 	[SP + 0x44] = R0;
    176c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    176e:	28 e6 2c 00 	[P5 + 0xb0] = R0;
    1772:	28 e6 2d 00 	[P5 + 0xb4] = R0;
    1776:	28 e6 2e 00 	[P5 + 0xb8] = R0;
    177a:	0b 20       	JUMP.S 0x1790 <_SendDelayedUnicastResponse+0x310>;
    177c:	44 e1 00 00 	R4.H = 0x0;		/* (  0)	R4=0x8000(32768) */
    1780:	23 e1 00 80 	R3 = -0x8000 (X);		/*		R3=0xffff8000(-32768) */
    1784:	29 e1 ec 22 	P1 = 0x22ec (X);		/*		P1=0x22ec(8940) */
    1788:	28 e1 ff 7f 	P0 = 0x7fff (X);		/*		P0=0x7fff(32767) */
    178c:	04 e1 00 00 	R4.L = 0x0;		/* (  0)	R4=0x0 <_AddRecordToResponseList>(  0) */
    1790:	35 e5 11 00 	P5 = [SP + 0x44];
    1794:	45 0c       	CC = P5 == 0x0;
    1796:	05 1c       	IF CC JUMP 0x17a0 <_SendDelayedUnicastResponse+0x320> (BP);
    1798:	28 e4 2d 00 	R0 = [P5 + 0xb4];
    179c:	00 0c       	CC = R0 == 0x0;
    179e:	a2 1f       	IF CC JUMP 0x16e2 <_SendDelayedUnicastResponse+0x262> (BP);
    17a0:	00 00       	NOP;
    17a2:	60 e4 c9 2c 	R0 = W[P4 + 0x5992] (Z);
    17a6:	00 0c       	CC = R0 == 0x0;
    17a8:	12 1c       	IF CC JUMP 0x17cc <_SendDelayedUnicastResponse+0x34c> (BP);
    17aa:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x22ec */
    17ae:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    17b2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    17b4:	11 95       	R1 = W[P2] (Z);
    17b6:	30 b1       	[SP + 0x10] = R0;
    17b8:	31 b7       	W[SP + 0x18] = R1;
    17ba:	f0 b1       	[SP + 0x1c] = R0;
    17bc:	30 b2       	[SP + 0x20] = R0;
    17be:	f5 b0       	[SP + 0xc] = R5;
    17c0:	73 bd       	[SP + 0x14] = P3;
    17c2:	44 30       	R0 = P4;
    17c4:	4f 30       	R1 = FP;
    17c6:	17 30       	R2 = R7;
    17c8:	ff e3 1c f4 	CALL 0x0 <_AddRecordToResponseList>;
    17cc:	30 e4 11 00 	R0 = [SP + 0x44];
    17d0:	00 0c       	CC = R0 == 0x0;
    17d2:	24 17       	IF !CC JUMP 0x161a <_SendDelayedUnicastResponse+0x19a> (BP);
    17d4:	08 20       	JUMP.S 0x17e4 <_SendDelayedUnicastResponse+0x364>;
    17d6:	00 00       	NOP;
    17d8:	61 e4 c9 2c 	R1 = W[P4 + 0x5992] (Z);
    17dc:	01 0c       	CC = R1 == 0x0;
    17de:	b3 17       	IF !CC JUMP 0x1744 <_SendDelayedUnicastResponse+0x2c4> (BP);
    17e0:	38 30       	R7 = R0;
    17e2:	b6 2f       	JUMP.S 0x174e <_SendDelayedUnicastResponse+0x2ce>;
    17e4:	e6 6d       	SP += 0x3c;		/* ( 60) */
    17e6:	66 6c       	SP += 0xc;		/* ( 12) */
    17e8:	77 90       	FP = [SP++];
    17ea:	27 01       	RETS = [SP++];
    17ec:	a3 05       	(R7:4, P5:3) = [SP++];
    17ee:	10 00       	RTS;

000017f0 <_GetCacheEntity>:
_GetCacheEntity():
    17f0:	e3 05       	[--SP] = (R7:4, P5:3);
    17f2:	28 32       	P5 = R0;
    17f4:	00 e8 05 00 	LINK 0x14;		/* (20) */
    17f8:	f1 b3       	[SP + 0x3c] = R1;
    17fa:	a8 e4 34 00 	R0 = B[P5 + 0x34] (Z);
    17fe:	00 0c       	CC = R0 == 0x0;
    1800:	0a 1c       	IF CC JUMP 0x1814 <_GetCacheEntity+0x24> (BP);
    1802:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1(  1) */
    1806:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1808:	01 e1 e8 05 	R1.L = 0x5e8;		/* (1512)	R1=0x5e8(1512) */
    180c:	ff e3 fa f3 	CALL 0x0 <_AddRecordToResponseList>;
    1810:	04 68       	P4 = 0x0 (X);		/*		P4=0x0(  0) */
    1812:	00 21       	JUMP.S 0x1a12 <_GetCacheEntity+0x222>;
    1814:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    1816:	a8 e6 34 00 	B[P5 + 0x34] = R0;
    181a:	28 e4 56 00 	R0 = [P5 + 0x158];
    181e:	00 0c       	CC = R0 == 0x0;
    1820:	5d 14       	IF !CC JUMP 0x18da <_GetCacheEntity+0xea> (BP);
    1822:	68 a2       	R0 = [P5 + 0x24];
    1824:	00 0c       	CC = R0 == 0x0;
    1826:	5a 1c       	IF CC JUMP 0x18da <_GetCacheEntity+0xea> (BP);
    1828:	2a e4 53 00 	R2 = [P5 + 0x14c];
    182c:	28 e4 52 00 	R0 = [P5 + 0x148];
    1830:	02 08       	CC = R2 == R0;
    1832:	09 18       	IF CC JUMP 0x1844 <_GetCacheEntity+0x54>;
    1834:	f0 b0       	[SP + 0xc] = R0;
    1836:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5e8(1512) */
    183a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    183c:	01 e1 14 06 	R1.L = 0x614;		/* (1556)	R1=0x614(1556) */
    1840:	ff e3 e0 f3 	CALL 0x0 <_AddRecordToResponseList>;
    1844:	2a e4 52 00 	R2 = [P5 + 0x148];
    1848:	20 e1 88 13 	R0 = 0x1388 (X);		/*		R0=0x1388(5000) */
    184c:	02 0a       	CC = R2 <= R0 (IU);
    184e:	17 1c       	IF CC JUMP 0x187c <_GetCacheEntity+0x8c> (BP);
    1850:	28 e4 54 00 	R0 = [P5 + 0x150];
    1854:	82 c6 da 83 	R1 = R2 >> 0x5;
    1858:	01 0a       	CC = R1 <= R0 (IU);
    185a:	11 1c       	IF CC JUMP 0x187c <_GetCacheEntity+0x8c> (BP);
    185c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    1860:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    1864:	11 91       	R1 = [P2];
    1866:	01 0c       	CC = R1 == 0x0;
    1868:	39 1c       	IF CC JUMP 0x18da <_GetCacheEntity+0xea> (BP);
    186a:	f0 b0       	[SP + 0xc] = R0;
    186c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x614(1556) */
    1870:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    1872:	01 e1 64 06 	R1.L = 0x664;		/* (1636)	R1=0x664(1636) */
    1876:	ff e3 c5 f3 	CALL 0x0 <_AddRecordToResponseList>;
    187a:	30 20       	JUMP.S 0x18da <_GetCacheEntity+0xea>;
    187c:	00 00       	NOP;
    187e:	28 a3       	R0 = [P5 + 0x30];
    1880:	08 64       	R0 += 0x1;		/* (  1) */
    1882:	e9 a2       	R1 = [P5 + 0x2c];
    1884:	28 b3       	[P5 + 0x30] = R0;
    1886:	01 08       	CC = R1 == R0;
    1888:	0e 18       	IF CC JUMP 0x18a4 <_GetCacheEntity+0xb4>;
    188a:	f1 b0       	[SP + 0xc] = R1;
    188c:	30 b1       	[SP + 0x10] = R0;
    188e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x664(1636) */
    1892:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x5a0(1440) */
    1896:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1898:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    189c:	02 e1 5c 04 	R2.L = 0x45c;		/* (1116)	R2=0x45c(1116) */
    18a0:	ff e3 b0 f3 	CALL 0x0 <_AddRecordToResponseList>;
    18a4:	6a ae       	P2 = [P5 + 0x24];
    18a6:	41 e1 fe ff 	R1.H = 0xfffe;		/* ( -2)	R1=0xfffe0000(-131072) */
    18aa:	45 30       	R0 = P5;
    18ac:	01 e1 02 ff 	R1.L = 0xff02;		/* (-254)	R1=0xfffeff02(-65790) */
    18b0:	62 00       	CALL (P2);
    18b2:	e9 a2       	R1 = [P5 + 0x2c];
    18b4:	28 a3       	R0 = [P5 + 0x30];
    18b6:	01 08       	CC = R1 == R0;
    18b8:	0e 18       	IF CC JUMP 0x18d4 <_GetCacheEntity+0xe4>;
    18ba:	f1 b0       	[SP + 0xc] = R1;
    18bc:	30 b1       	[SP + 0x10] = R0;
    18be:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xff02(65282) */
    18c2:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x45c(1116) */
    18c6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    18c8:	01 e1 40 00 	R1.L = 0x40;		/* ( 64)	R1=0x40( 64) */
    18cc:	02 e1 5c 04 	R2.L = 0x45c;		/* (1116)	R2=0x45c(1116) */
    18d0:	ff e3 98 f3 	CALL 0x0 <_AddRecordToResponseList>;
    18d4:	28 a3       	R0 = [P5 + 0x30];
    18d6:	f8 67       	R0 += -0x1;		/* ( -1) */
    18d8:	28 b3       	[P5 + 0x30] = R0;
    18da:	00 00       	NOP;
    18dc:	28 e4 56 00 	R0 = [P5 + 0x158];
    18e0:	00 0c       	CC = R0 == 0x0;
    18e2:	5d 14       	IF !CC JUMP 0x199c <_GetCacheEntity+0x1ac> (BP);
    18e4:	2e e4 53 00 	R6 = [P5 + 0x14c];
    18e8:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    18ea:	25 e1 57 00 	R5 = 0x57 (X);		/*		R5=0x57( 87) */
    18ee:	24 e1 50 00 	R4 = 0x50 (X);		/*		R4=0x50( 80) */
    18f2:	3f 32       	FP = R7;
    18f4:	0d 32       	P1 = R5;
    18f6:	cf 45       	FP = (FP + P1) << 0x2;
    18f8:	fd 5b       	FP = P5 + FP;
    18fa:	36 20       	JUMP.S 0x1966 <_GetCacheEntity+0x176>;
    18fc:	43 6c       	P3 += 0x8;		/* (  8) */
    18fe:	23 20       	JUMP.S 0x1944 <_GetCacheEntity+0x154>;
    1900:	00 00       	NOP;
    1902:	20 e4 10 00 	R0 = [P4 + 0x40];
    1906:	00 0c       	CC = R0 == 0x0;
    1908:	05 14       	IF !CC JUMP 0x1912 <_GetCacheEntity+0x122> (BP);
    190a:	20 e4 13 00 	R0 = [P4 + 0x4c];
    190e:	00 0c       	CC = R0 == 0x0;
    1910:	03 18       	IF CC JUMP 0x1916 <_GetCacheEntity+0x126>;
    1912:	5c 32       	P3 = P4;
    1914:	18 20       	JUMP.S 0x1944 <_GetCacheEntity+0x154>;
    1916:	20 91       	R0 = [P4];
    1918:	18 93       	[P3] = R0;
    191a:	60 a2       	R0 = [P4 + 0x24];
    191c:	00 0c       	CC = R0 == 0x0;
    191e:	07 18       	IF CC JUMP 0x192c <_GetCacheEntity+0x13c>;
    1920:	54 30       	R2 = P4;
    1922:	62 50       	R1 = R2 + R4;
    1924:	08 08       	CC = R0 == R1;
    1926:	03 18       	IF CC JUMP 0x192c <_GetCacheEntity+0x13c>;
    1928:	ff e3 6c f3 	CALL 0x0 <_AddRecordToResponseList>;
    192c:	28 e4 56 00 	R0 = [P5 + 0x158];
    1930:	20 93       	[P4] = R0;
    1932:	28 e4 53 00 	R0 = [P5 + 0x14c];
    1936:	01 68       	P1 = 0x0 (X);		/*		P1=0x0(  0) */
    1938:	61 be       	[P4 + 0x24] = P1;
    193a:	f8 67       	R0 += -0x1;		/* ( -1) */
    193c:	2c e7 56 00 	[P5 + 0x158] = P4;
    1940:	28 e6 53 00 	[P5 + 0x14c] = R0;
    1944:	5c 91       	P4 = [P3];
    1946:	44 0c       	CC = P4 == 0x0;
    1948:	dc 17       	IF !CC JUMP 0x1900 <_GetCacheEntity+0x110> (BP);
    194a:	7a 91       	P2 = [FP];
    194c:	90 a0       	R0 = [P2 + 0x8];
    194e:	d3 bc       	[P2 + 0xc] = P3;
    1950:	00 0c       	CC = R0 == 0x0;
    1952:	04 14       	IF !CC JUMP 0x195a <_GetCacheEntity+0x16a> (BP);
    1954:	f1 af       	P1 = [SP + 0x3c];
    1956:	4a 08       	CC = P2 == P1;
    1958:	03 14       	IF !CC JUMP 0x195e <_GetCacheEntity+0x16e> (BP);
    195a:	7a 32       	FP = P2;
    195c:	05 20       	JUMP.S 0x1966 <_GetCacheEntity+0x176>;
    195e:	45 30       	R0 = P5;
    1960:	4f 30       	R1 = FP;
    1962:	ff e3 75 f5 	CALL 0x44c <_ReleaseCacheGroup>;
    1966:	7b 91       	P3 = [FP];
    1968:	43 0c       	CC = P3 == 0x0;
    196a:	c9 17       	IF !CC JUMP 0x18fc <_GetCacheEntity+0x10c> (BP);
    196c:	0f 64       	R7 += 0x1;		/* (  1) */
    196e:	20 e1 f3 01 	R0 = 0x1f3 (X);		/*		R0=0x1f3(499) */
    1972:	07 08       	CC = R7 == R0;
    1974:	bf 17       	IF !CC JUMP 0x18f2 <_GetCacheEntity+0x102> (BP);
    1976:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    197a:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    197e:	10 91       	R0 = [P2];
    1980:	00 0c       	CC = R0 == 0x0;
    1982:	0d 1c       	IF CC JUMP 0x199c <_GetCacheEntity+0x1ac> (BP);
    1984:	28 e4 53 00 	R0 = [P5 + 0x14c];
    1988:	86 52       	R2 = R6 - R0;
    198a:	30 b1       	[SP + 0x10] = R0;
    198c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x40( 64) */
    1990:	f6 b0       	[SP + 0xc] = R6;
    1992:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    1994:	01 e1 c0 06 	R1.L = 0x6c0;		/* (1728)	R1=0x6c0(1728) */
    1998:	ff e3 34 f3 	CALL 0x0 <_AddRecordToResponseList>;
    199c:	00 00       	NOP;
    199e:	2c e5 56 00 	P4 = [P5 + 0x158];
    19a2:	44 0c       	CC = P4 == 0x0;
    19a4:	34 1c       	IF CC JUMP 0x1a0c <_GetCacheEntity+0x21c> (BP);
    19a6:	20 91       	R0 = [P4];
    19a8:	2a e4 53 00 	R2 = [P5 + 0x14c];
    19ac:	28 e6 56 00 	[P5 + 0x158] = R0;
    19b0:	0a 64       	R2 += 0x1;		/* (  1) */
    19b2:	28 e4 55 00 	R0 = [P5 + 0x154];
    19b6:	2a e6 53 00 	[P5 + 0x14c] = R2;
    19ba:	82 09       	CC = R2 < R0 (IU);
    19bc:	23 1c       	IF CC JUMP 0x1a02 <_GetCacheEntity+0x212> (BP);
    19be:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    19c2:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    19c6:	10 91       	R0 = [P2];
    19c8:	00 0c       	CC = R0 == 0x0;
    19ca:	08 1c       	IF CC JUMP 0x19da <_GetCacheEntity+0x1ea> (BP);
    19cc:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x6c0(1728) */
    19d0:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    19d2:	01 e1 04 07 	R1.L = 0x704;		/* (1796)	R1=0x704(1796) */
    19d6:	ff e3 15 f3 	CALL 0x0 <_AddRecordToResponseList>;
    19da:	29 e1 63 00 	P1 = 0x63 (X);		/*		P1=0x63( 99) */
    19de:	2a e5 55 00 	P2 = [P5 + 0x154];
    19e2:	4a 0a       	CC = P2 <= P1 (IU);
    19e4:	03 14       	IF !CC JUMP 0x19ea <_GetCacheEntity+0x1fa> (BP);
    19e6:	52 6c       	P2 += 0xa;		/* ( 10) */
    19e8:	0b 20       	JUMP.S 0x19fe <_GetCacheEntity+0x20e>;
    19ea:	29 e1 e7 03 	P1 = 0x3e7 (X);		/*		P1=0x3e7(999) */
    19ee:	4a 0a       	CC = P2 <= P1 (IU);
    19f0:	04 14       	IF !CC JUMP 0x19f8 <_GetCacheEntity+0x208> (BP);
    19f2:	29 e1 64 00 	P1 = 0x64 (X);		/*		P1=0x64(100) */
    19f6:	03 20       	JUMP.S 0x19fc <_GetCacheEntity+0x20c>;
    19f8:	29 e1 e8 03 	P1 = 0x3e8 (X);		/*		P1=0x3e8(1000) */
    19fc:	8a 5a       	P2 = P2 + P1;
    19fe:	2a e7 55 00 	[P5 + 0x154] = P2;
    1a02:	44 30       	R0 = P4;
    1a04:	21 e1 98 00 	R1 = 0x98 (X);		/*		R1=0x98(152) */
    1a08:	ff e3 fc f2 	CALL 0x0 <_AddRecordToResponseList>;
    1a0c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1a0e:	a8 e6 34 00 	B[P5 + 0x34] = R0;
    1a12:	a6 6c       	SP += 0x14;		/* ( 20) */
    1a14:	77 90       	FP = [SP++];
    1a16:	44 30       	R0 = P4;
    1a18:	27 01       	RETS = [SP++];
    1a1a:	a3 05       	(R7:4, P5:3) = [SP++];
    1a1c:	10 00       	RTS;
	...

00001a20 <_FirstInterfaceForID.clone.0>:
_FirstInterfaceForID.clone.0():
    1a20:	10 32       	P2 = R0;
    1a22:	03 20       	JUMP.S 0x1a28 <_FirstInterfaceForID.clone.0+0x8>;
    1a24:	00 00       	NOP;
    1a26:	52 91       	P2 = [P2];
    1a28:	42 0c       	CC = P2 == 0x0;
    1a2a:	05 1c       	IF CC JUMP 0x1a34 <_FirstInterfaceForID.clone.0+0x14> (BP);
    1a2c:	10 e4 10 05 	R0 = [P2 + 0x1440];
    1a30:	08 08       	CC = R0 == R1;
    1a32:	f9 17       	IF !CC JUMP 0x1a24 <_FirstInterfaceForID.clone.0+0x4> (BP);
    1a34:	42 30       	R0 = P2;
    1a36:	10 00       	RTS;

00001a38 <_SendARP>:
_SendARP():
    1a38:	e3 05       	[--SP] = (R7:4, P5:3);
    1a3a:	22 32       	P4 = R2;
    1a3c:	00 e8 04 00 	LINK 0x10;		/* (16) */
    1a40:	28 32       	P5 = R0;
    1a42:	39 32       	FP = R1;
    1a44:	30 e4 12 00 	R0 = [SP + 0x48];
    1a48:	f0 b0       	[SP + 0xc] = R0;
    1a4a:	e7 a1       	R7 = [P4 + 0x1c];
    1a4c:	28 e4 f7 07 	R0 = [P5 + 0x1fdc];
    1a50:	0f 30       	R1 = R7;
    1a52:	ff e3 e7 ff 	CALL 0x1a20 <_FirstInterfaceForID.clone.0>;
    1a56:	10 32       	P2 = R0;
    1a58:	35 e4 10 00 	R5 = [SP + 0x40];
    1a5c:	34 e4 11 00 	R4 = [SP + 0x44];
    1a60:	36 e4 13 00 	R6 = [SP + 0x4c];
    1a64:	42 0c       	CC = P2 == 0x0;
    1a66:	17 14       	IF !CC JUMP 0x1a94 <_SendARP+0x5c> (BP);
    1a68:	61 a2       	R1 = [P4 + 0x24];
    1a6a:	44 30       	R0 = P4;
    1a6c:	55 30       	R2 = P5;
    1a6e:	21 64       	R1 += 0x4;		/* (  4) */
    1a70:	ba 65       	R2 += 0x37;		/* ( 55) */
    1a72:	20 64       	R0 += 0x4;		/* (  4) */
    1a74:	ff e3 c6 f2 	CALL 0x0 <_AddRecordToResponseList>;
    1a78:	30 e6 10 00 	[SP + 0x40] = R0;
    1a7c:	86 6c       	SP += 0x10;		/* ( 16) */
    1a7e:	77 90       	FP = [SP++];
    1a80:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x98(152) */
    1a84:	17 30       	R2 = R7;
    1a86:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1a88:	27 01       	RETS = [SP++];
    1a8a:	01 e1 24 07 	R1.L = 0x724;		/* (1828)	R1=0x724(1828) */
    1a8e:	a3 05       	(R7:4, P5:3) = [SP++];
    1a90:	ff e2 b8 f2 	JUMP.L 0x0 <_AddRecordToResponseList>;
    1a94:	29 e1 98 59 	P1 = 0x5998 (X);		/*		P1=0x5998(22936) */
    1a98:	4d 5a       	P1 = P5 + P1;
    1a9a:	41 30       	R0 = P1;
    1a9c:	06 32       	P0 = R6;
    1a9e:	31 68       	P1 = 0x6 (X);		/*		P1=0x6(  6) */
    1aa0:	b2 e0 05 10 	LSETUP(0x1aa4 <_SendARP+0x6c>, 0x1aaa <_SendARP+0x72>) LC1 = P1;
    1aa4:	18 32       	P3 = R0;
    1aa6:	41 98       	R1 = B[P0++] (X);
    1aa8:	08 64       	R0 += 0x1;		/* (  1) */
    1aaa:	19 9a       	B[P3++] = R1;
    1aac:	28 e1 9e 59 	P0 = 0x599e (X);		/*		P0=0x599e(22942) */
    1ab0:	05 5a       	P0 = P5 + P0;
    1ab2:	31 68       	P1 = 0x6 (X);		/*		P1=0x6(  6) */
    1ab4:	b2 e0 04 10 	LSETUP(0x1ab8 <_SendARP+0x80>, 0x1abc <_SendARP+0x84>) LC1 = P1;
    1ab8:	90 e5 6c 14 	R0 = B[P2 + 0x146c] (X);
    1abc:	00 9a       	B[P0++] = R0;
    1abe:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1ac0:	31 60       	R1 = 0x6 (X);		/*		R1=0x6(  6) */
    1ac2:	a9 e6 a5 59 	B[P5 + 0x59a5] = R1;
    1ac6:	a8 e6 a6 59 	B[P5 + 0x59a6] = R0;
    1aca:	a8 e6 a9 59 	B[P5 + 0x59a9] = R0;
    1ace:	a9 e6 aa 59 	B[P5 + 0x59aa] = R1;
    1ad2:	a8 e6 ac 59 	B[P5 + 0x59ac] = R0;
    1ad6:	29 e1 6c 14 	P1 = 0x146c (X);		/*		P1=0x146c(5228) */
    1ada:	42 60       	R2 = 0x8 (X);		/*		R2=0x8(  8) */
    1adc:	0b 60       	R3 = 0x1 (X);		/*		R3=0x1(  1) */
    1ade:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
    1ae0:	47 30       	R0 = FP;
    1ae2:	28 e1 ae 59 	P0 = 0x59ae (X);		/*		P0=0x59ae(22958) */
    1ae6:	4a 5a       	P1 = P2 + P1;
    1ae8:	aa e6 a4 59 	B[P5 + 0x59a4] = R2;
    1aec:	ab e6 a7 59 	B[P5 + 0x59a7] = R3;
    1af0:	aa e6 a8 59 	B[P5 + 0x59a8] = R2;
    1af4:	a9 e6 ab 59 	B[P5 + 0x59ab] = R1;
    1af8:	a8 e6 ad 59 	B[P5 + 0x59ad] = R0;
    1afc:	05 5a       	P0 = P5 + P0;
    1afe:	32 68       	P2 = 0x6 (X);		/*		P2=0x6(  6) */
    1b00:	b2 e0 03 20 	LSETUP(0x1b04 <_SendARP+0xcc>, 0x1b06 <_SendARP+0xce>) LC1 = P2;
    1b04:	48 98       	R0 = B[P1++] (X);
    1b06:	00 9a       	B[P0++] = R0;
    1b08:	28 e1 b4 59 	P0 = 0x59b4 (X);		/*		P0=0x59b4(22964) */
    1b0c:	05 5a       	P0 = P5 + P0;
    1b0e:	0d 32       	P1 = R5;
    1b10:	22 68       	P2 = 0x4 (X);		/*		P2=0x4(  4) */
    1b12:	b2 e0 03 20 	LSETUP(0x1b16 <_SendARP+0xde>, 0x1b18 <_SendARP+0xe0>) LC1 = P2;
    1b16:	48 98       	R0 = B[P1++] (X);
    1b18:	00 9a       	B[P0++] = R0;
    1b1a:	28 e1 b8 59 	P0 = 0x59b8 (X);		/*		P0=0x59b8(22968) */
    1b1e:	05 5a       	P0 = P5 + P0;
    1b20:	0c 32       	P1 = R4;
    1b22:	32 68       	P2 = 0x6 (X);		/*		P2=0x6(  6) */
    1b24:	b2 e0 03 20 	LSETUP(0x1b28 <_SendARP+0xf0>, 0x1b2a <_SendARP+0xf2>) LC1 = P2;
    1b28:	48 98       	R0 = B[P1++] (X);
    1b2a:	00 9a       	B[P0++] = R0;
    1b2c:	29 e1 be 59 	P1 = 0x59be (X);		/*		P1=0x59be(22974) */
    1b30:	4d 5a       	P1 = P5 + P1;
    1b32:	f3 ac       	P3 = [SP + 0xc];
    1b34:	22 68       	P2 = 0x4 (X);		/*		P2=0x4(  4) */
    1b36:	b2 e0 03 20 	LSETUP(0x1b3a <_SendARP+0x102>, 0x1b3c <_SendARP+0x104>) LC1 = P2;
    1b3a:	58 98       	R0 = B[P3++] (X);
    1b3c:	08 9a       	B[P1++] = R0;
    1b3e:	86 6c       	SP += 0x10;		/* ( 16) */
    1b40:	77 90       	FP = [SP++];
    1b42:	2a e1 98 59 	P2 = 0x5998 (X);		/*		P2=0x5998(22936) */
    1b46:	95 5a       	P2 = P5 + P2;
    1b48:	42 30       	R0 = P2;
    1b4a:	2a e1 c2 59 	P2 = 0x59c2 (X);		/*		P2=0x59c2(22978) */
    1b4e:	95 5a       	P2 = P5 + P2;
    1b50:	27 01       	RETS = [SP++];
    1b52:	e2 a1       	R2 = [P4 + 0x1c];
    1b54:	4a 30       	R1 = P2;
    1b56:	a3 05       	(R7:4, P5:3) = [SP++];
    1b58:	ff e2 54 f2 	JUMP.L 0x0 <_AddRecordToResponseList>;

00001b5c <_SendNDP>:
_SendNDP():
    1b5c:	e3 05       	[--SP] = (R7:4, P5:3);
    1b5e:	00 e8 11 00 	LINK 0x44;		/* (68) */
    1b62:	37 e5 20 00 	FP = [SP + 0x80];
    1b66:	b2 e6 70 00 	B[SP + 0x70] = R2;
    1b6a:	28 32       	P5 = R0;
    1b6c:	6e 30       	R5 = SP;
    1b6e:	b8 e5 0f 00 	R0 = B[FP + 0xf] (X);
    1b72:	bc e5 0d 00 	R4 = B[FP + 0xd] (X);
    1b76:	bb e5 0e 00 	R3 = B[FP + 0xe] (X);
    1b7a:	e5 64       	R5 += 0x1c;		/* ( 28) */
    1b7c:	39 30       	R7 = R1;
    1b7e:	b0 e6 1b 00 	B[SP + 0x1b] = R0;
    1b82:	36 e4 1d 00 	R6 = [SP + 0x74];
    1b86:	05 30       	R0 = R5;
    1b88:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    1b8a:	82 60       	R2 = 0x10 (X);		/*		R2=0x10( 16) */
    1b8c:	73 b1       	[SP + 0x14] = R3;
    1b8e:	33 e5 1e 00 	P3 = [SP + 0x78];
    1b92:	34 e5 1f 00 	P4 = [SP + 0x7c];
    1b96:	ff e3 35 f2 	CALL 0x0 <_AddRecordToResponseList>;
    1b9a:	11 60       	R1 = 0x2 (X);		/*		R1=0x2(  2) */
    1b9c:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
    1b9e:	b1 e6 1d 00 	B[SP + 0x1d] = R1;
    1ba2:	06 32       	P0 = R6;
    1ba4:	b0 e6 1c 00 	B[SP + 0x1c] = R0;
    1ba8:	b0 e6 28 00 	B[SP + 0x28] = R0;
    1bac:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    1bae:	b1 e6 27 00 	B[SP + 0x27] = R1;
    1bb2:	78 43       	R0 = R7.B (Z);
    1bb4:	22 e1 87 00 	R2 = 0x87 (X);		/*		R2=0x87(135) */
    1bb8:	10 08       	CC = R0 == R2;
    1bba:	b4 e6 29 00 	B[SP + 0x29] = R4;
    1bbe:	73 a1       	R3 = [SP + 0x14];
    1bc0:	b1 e5 1b 00 	R1 = B[SP + 0x1b] (X);
    1bc4:	b1 e6 2b 00 	B[SP + 0x2b] = R1;
    1bc8:	67 06       	IF !CC R4 = FP;
    1bca:	25 07       	IF CC R4 = R5;
    1bcc:	b3 e6 2a 00 	B[SP + 0x2a] = R3;
    1bd0:	c5 a1       	R5 = [P0 + 0x1c];
    1bd2:	28 e4 f7 07 	R0 = [P5 + 0x1fdc];
    1bd6:	0d 30       	R1 = R5;
    1bd8:	ff e3 24 ff 	CALL 0x1a20 <_FirstInterfaceForID.clone.0>;
    1bdc:	10 32       	P2 = R0;
    1bde:	42 0c       	CC = P2 == 0x0;
    1be0:	14 14       	IF !CC JUMP 0x1c08 <_SendNDP+0xac> (BP);
    1be2:	0e 32       	P1 = R6;
    1be4:	06 30       	R0 = R6;
    1be6:	55 30       	R2 = P5;
    1be8:	ba 65       	R2 += 0x37;		/* ( 55) */
    1bea:	20 64       	R0 += 0x4;		/* (  4) */
    1bec:	49 a2       	R1 = [P1 + 0x24];
    1bee:	21 64       	R1 += 0x4;		/* (  4) */
    1bf0:	ff e3 08 f2 	CALL 0x0 <_AddRecordToResponseList>;
    1bf4:	f0 b0       	[SP + 0xc] = R0;
    1bf6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1(  1) */
    1bfa:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1bfc:	01 e1 58 07 	R1.L = 0x758;		/* (1880)	R1=0x758(1880) */
    1c00:	15 30       	R2 = R5;
    1c02:	ff e3 ff f1 	CALL 0x0 <_AddRecordToResponseList>;
    1c06:	f5 20       	JUMP.S 0x1df0 <_SendNDP+0x294>;
    1c08:	29 e1 98 59 	P1 = 0x5998 (X);		/*		P1=0x5998(22936) */
    1c0c:	4d 5a       	P1 = P5 + P1;
    1c0e:	41 30       	R0 = P1;
    1c10:	30 e5 21 00 	P0 = [SP + 0x84];
    1c14:	31 68       	P1 = 0x6 (X);		/*		P1=0x6(  6) */
    1c16:	b2 e0 05 10 	LSETUP(0x1c1a <_SendNDP+0xbe>, 0x1c20 <_SendNDP+0xc4>) LC1 = P1;
    1c1a:	08 32       	P1 = R0;
    1c1c:	41 98       	R1 = B[P0++] (X);
    1c1e:	08 64       	R0 += 0x1;		/* (  1) */
    1c20:	09 9a       	B[P1++] = R1;
    1c22:	29 e1 9e 59 	P1 = 0x599e (X);		/*		P1=0x599e(22942) */
    1c26:	4d 5a       	P1 = P5 + P1;
    1c28:	46 32       	P0 = SP;
    1c2a:	41 30       	R0 = P1;
    1c2c:	e0 6d       	P0 += 0x3c;		/* ( 60) */
    1c2e:	44 0c       	CC = P4 == 0x0;
    1c30:	31 68       	P1 = 0x6 (X);		/*		P1=0x6(  6) */
    1c32:	b2 e0 12 10 	LSETUP(0x1c36 <_SendNDP+0xda>, 0x1c56 <_SendNDP+0xfa>) LC1 = P1;
    1c36:	05 1c       	IF CC JUMP 0x1c40 <_SendNDP+0xe4> (BP);
    1c38:	21 91       	R1 = [P4];
    1c3a:	f1 b3       	[SP + 0x3c] = R1;
    1c3c:	61 a0       	R1 = [P4 + 0x4];
    1c3e:	07 20       	JUMP.S 0x1c4c <_SendNDP+0xf0>;
    1c40:	00 00       	NOP;
    1c42:	11 e4 1b 05 	R1 = [P2 + 0x146c];
    1c46:	f1 b3       	[SP + 0x3c] = R1;
    1c48:	11 e4 1c 05 	R1 = [P2 + 0x1470];
    1c4c:	08 32       	P1 = R0;
    1c4e:	31 e6 10 00 	[SP + 0x40] = R1;
    1c52:	41 98       	R1 = B[P0++] (X);
    1c54:	08 64       	R0 += 0x1;		/* (  1) */
    1c56:	09 9a       	B[P1++] = R1;
    1c58:	20 e1 86 ff 	R0 = -0x7a (X);		/*		R0=0xffffff86(-122) */
    1c5c:	a8 e6 a4 59 	B[P5 + 0x59a4] = R0;
    1c60:	e8 62       	R0 = -0x23 (X);		/*		R0=0xffffffdd(-35) */
    1c62:	a8 e6 a5 59 	B[P5 + 0x59a5] = R0;
    1c66:	20 e1 60 00 	R0 = 0x60 (X);		/*		R0=0x60( 96) */
    1c6a:	a8 e6 a6 59 	B[P5 + 0x59a6] = R0;
    1c6e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1c70:	a8 e6 a7 59 	B[P5 + 0x59a7] = R0;
    1c74:	a8 e6 a8 59 	B[P5 + 0x59a8] = R0;
    1c78:	a8 e6 a9 59 	B[P5 + 0x59a9] = R0;
    1c7c:	a8 e6 aa 59 	B[P5 + 0x59aa] = R0;
    1c80:	00 61       	R0 = 0x20 (X);		/*		R0=0x20( 32) */
    1c82:	a8 e6 ab 59 	B[P5 + 0x59ab] = R0;
    1c86:	d0 61       	R0 = 0x3a (X);		/*		R0=0x3a( 58) */
    1c88:	a8 e6 ac 59 	B[P5 + 0x59ac] = R0;
    1c8c:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
    1c8e:	29 e1 ae 59 	P1 = 0x59ae (X);		/*		P1=0x59ae(22958) */
    1c92:	4d 5a       	P1 = P5 + P1;
    1c94:	a8 e6 ad 59 	B[P5 + 0x59ad] = R0;
    1c98:	41 30       	R0 = P1;
    1c9a:	4b 30       	R1 = P3;
    1c9c:	5b 30       	R3 = P3;
    1c9e:	81 68       	P1 = 0x10 (X);		/*		P1=0x10( 16) */
    1ca0:	b2 e0 07 10 	LSETUP(0x1ca4 <_SendNDP+0x148>, 0x1cae <_SendNDP+0x152>) LC1 = P1;
    1ca4:	03 32       	P0 = R3;
    1ca6:	0b 64       	R3 += 0x1;		/* (  1) */
    1ca8:	42 98       	R2 = B[P0++] (X);
    1caa:	00 32       	P0 = R0;
    1cac:	08 64       	R0 += 0x1;		/* (  1) */
    1cae:	02 9a       	B[P0++] = R2;
    1cb0:	29 e1 be 59 	P1 = 0x59be (X);		/*		P1=0x59be(22974) */
    1cb4:	4d 5a       	P1 = P5 + P1;
    1cb6:	41 30       	R0 = P1;
    1cb8:	1c 30       	R3 = R4;
    1cba:	81 68       	P1 = 0x10 (X);		/*		P1=0x10( 16) */
    1cbc:	b2 e0 07 10 	LSETUP(0x1cc0 <_SendNDP+0x164>, 0x1cca <_SendNDP+0x16e>) LC1 = P1;
    1cc0:	03 32       	P0 = R3;
    1cc2:	0b 64       	R3 += 0x1;		/* (  1) */
    1cc4:	42 98       	R2 = B[P0++] (X);
    1cc6:	00 32       	P0 = R0;
    1cc8:	08 64       	R0 += 0x1;		/* (  1) */
    1cca:	02 9a       	B[P0++] = R2;
    1ccc:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1cce:	af e6 ce 59 	B[P5 + 0x59ce] = R7;
    1cd2:	a8 e6 cf 59 	B[P5 + 0x59cf] = R0;
    1cd6:	a8 e6 d0 59 	B[P5 + 0x59d0] = R0;
    1cda:	a8 e6 d1 59 	B[P5 + 0x59d1] = R0;
    1cde:	a8 e6 d3 59 	B[P5 + 0x59d3] = R0;
    1ce2:	a8 e6 d4 59 	B[P5 + 0x59d4] = R0;
    1ce6:	a8 e6 d5 59 	B[P5 + 0x59d5] = R0;
    1cea:	b2 e5 70 00 	R2 = B[SP + 0x70] (X);
    1cee:	29 e1 d6 59 	P1 = 0x59d6 (X);		/*		P1=0x59d6(22998) */
    1cf2:	7f 43       	R7 = R7.B (Z);
    1cf4:	20 e1 87 00 	R0 = 0x87 (X);		/*		R0=0x87(135) */
    1cf8:	aa e6 d2 59 	B[P5 + 0x59d2] = R2;
    1cfc:	4d 5a       	P1 = P5 + P1;
    1cfe:	07 08       	CC = R7 == R0;
    1d00:	2f 14       	IF !CC JUMP 0x1d5e <_SendNDP+0x202> (BP);
    1d02:	80 68       	P0 = 0x10 (X);		/*		P0=0x10( 16) */
    1d04:	b2 e0 03 00 	LSETUP(0x1d08 <_SendNDP+0x1ac>, 0x1d0a <_SendNDP+0x1ae>) LC1 = P0;
    1d08:	78 98       	R0 = B[FP++] (X);
    1d0a:	08 9a       	B[P1++] = R0;
    1d0c:	59 a0       	R1 = [P3 + 0x4];
    1d0e:	18 91       	R0 = [P3];
    1d10:	01 56       	R0 = R1 | R0;
    1d12:	99 a0       	R1 = [P3 + 0x8];
    1d14:	08 56       	R0 = R0 | R1;
    1d16:	d9 a0       	R1 = [P3 + 0xc];
    1d18:	2f e1 e6 59 	FP = 0x59e6 (X);		/*		FP=0x59e6(23014) */
    1d1c:	08 56       	R0 = R0 | R1;
    1d1e:	fd 5b       	FP = P5 + FP;
    1d20:	00 0c       	CC = R0 == 0x0;
    1d22:	45 1c       	IF CC JUMP 0x1dac <_SendNDP+0x250> (BP);
    1d24:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    1d26:	2f e1 e8 59 	FP = 0x59e8 (X);		/*		FP=0x59e8(23016) */
    1d2a:	46 32       	P0 = SP;
    1d2c:	a8 e6 e6 59 	B[P5 + 0x59e6] = R0;
    1d30:	a8 e6 e7 59 	B[P5 + 0x59e7] = R0;
    1d34:	fd 5b       	FP = P5 + FP;
    1d36:	a0 6d       	P0 += 0x34;		/* ( 52) */
    1d38:	44 0c       	CC = P4 == 0x0;
    1d3a:	31 68       	P1 = 0x6 (X);		/*		P1=0x6(  6) */
    1d3c:	b2 e0 0f 10 	LSETUP(0x1d40 <_SendNDP+0x1e4>, 0x1d5a <_SendNDP+0x1fe>) LC1 = P1;
    1d40:	05 1c       	IF CC JUMP 0x1d4a <_SendNDP+0x1ee> (BP);
    1d42:	20 91       	R0 = [P4];
    1d44:	70 b3       	[SP + 0x34] = R0;
    1d46:	60 a0       	R0 = [P4 + 0x4];
    1d48:	07 20       	JUMP.S 0x1d56 <_SendNDP+0x1fa>;
    1d4a:	00 00       	NOP;
    1d4c:	10 e4 1b 05 	R0 = [P2 + 0x146c];
    1d50:	70 b3       	[SP + 0x34] = R0;
    1d52:	10 e4 1c 05 	R0 = [P2 + 0x1470];
    1d56:	b0 b3       	[SP + 0x38] = R0;
    1d58:	40 98       	R0 = B[P0++] (X);
    1d5a:	38 9a       	B[FP++] = R0;
    1d5c:	25 20       	JUMP.S 0x1da6 <_SendNDP+0x24a>;
    1d5e:	80 68       	P0 = 0x10 (X);		/*		P0=0x10( 16) */
    1d60:	b2 e0 05 00 	LSETUP(0x1d64 <_SendNDP+0x208>, 0x1d6a <_SendNDP+0x20e>) LC1 = P0;
    1d64:	39 32       	FP = R1;
    1d66:	09 64       	R1 += 0x1;		/* (  1) */
    1d68:	78 98       	R0 = B[FP++] (X);
    1d6a:	08 9a       	B[P1++] = R0;
    1d6c:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    1d6e:	a8 e6 e6 59 	B[P5 + 0x59e6] = R0;
    1d72:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    1d74:	2f e1 e8 59 	FP = 0x59e8 (X);		/*		FP=0x59e8(23016) */
    1d78:	46 32       	P0 = SP;
    1d7a:	a8 e6 e7 59 	B[P5 + 0x59e7] = R0;
    1d7e:	fd 5b       	FP = P5 + FP;
    1d80:	60 6d       	P0 += 0x2c;		/* ( 44) */
    1d82:	44 0c       	CC = P4 == 0x0;
    1d84:	31 68       	P1 = 0x6 (X);		/*		P1=0x6(  6) */
    1d86:	b2 e0 0f 10 	LSETUP(0x1d8a <_SendNDP+0x22e>, 0x1da4 <_SendNDP+0x248>) LC1 = P1;
    1d8a:	05 1c       	IF CC JUMP 0x1d94 <_SendNDP+0x238> (BP);
    1d8c:	20 91       	R0 = [P4];
    1d8e:	f0 b2       	[SP + 0x2c] = R0;
    1d90:	60 a0       	R0 = [P4 + 0x4];
    1d92:	07 20       	JUMP.S 0x1da0 <_SendNDP+0x244>;
    1d94:	00 00       	NOP;
    1d96:	10 e4 1b 05 	R0 = [P2 + 0x146c];
    1d9a:	f0 b2       	[SP + 0x2c] = R0;
    1d9c:	10 e4 1c 05 	R0 = [P2 + 0x1470];
    1da0:	30 b3       	[SP + 0x30] = R0;
    1da2:	40 98       	R0 = B[P0++] (X);
    1da4:	38 9a       	B[FP++] = R0;
    1da6:	2f e1 ee 59 	FP = 0x59ee (X);		/*		FP=0x59ee(23022) */
    1daa:	fd 5b       	FP = P5 + FP;
    1dac:	2a e1 ce 59 	P2 = 0x59ce (X);		/*		P2=0x59ce(22990) */
    1db0:	95 5a       	P2 = P5 + P2;
    1db2:	42 30       	R0 = P2;
    1db4:	4f 30       	R1 = FP;
    1db6:	2c e1 98 59 	P4 = 0x5998 (X);		/*		P4=0x5998(22936) */
    1dba:	01 52       	R0 = R1 - R0;
    1dbc:	25 5b       	P4 = P5 + P4;
    1dbe:	a8 e6 ab 59 	B[P5 + 0x59ab] = R0;
    1dc2:	4c 30       	R1 = P4;
    1dc4:	b1 65       	R1 += 0x36;		/* ( 54) */
    1dc6:	40 43       	R0 = R0.B (Z);
    1dc8:	f1 b0       	[SP + 0xc] = R1;
    1dca:	30 b1       	[SP + 0x10] = R0;
    1dcc:	0c 30       	R1 = R4;
    1dce:	d2 61       	R2 = 0x3a (X);		/*		R2=0x3a( 58) */
    1dd0:	43 30       	R0 = P3;
    1dd2:	ff e3 6f f1 	CALL 0xb0 <_IPv6CheckSum>;
    1dd6:	c0 43       	R0 =~ R0;
    1dd8:	06 32       	P0 = R6;
    1dda:	a8 e6 d0 59 	B[P5 + 0x59d0] = R0;
    1dde:	c0 42       	R0 = R0.L (Z);
    1de0:	40 4e       	R0 >>= 0x8;
    1de2:	a8 e6 d1 59 	B[P5 + 0x59d1] = R0;
    1de6:	c2 a1       	R2 = [P0 + 0x1c];
    1de8:	44 30       	R0 = P4;
    1dea:	4f 30       	R1 = FP;
    1dec:	ff e3 0a f1 	CALL 0x0 <_AddRecordToResponseList>;
    1df0:	e6 6d       	SP += 0x3c;		/* ( 60) */
    1df2:	46 6c       	SP += 0x8;		/* (  8) */
    1df4:	77 90       	FP = [SP++];
    1df6:	27 01       	RETS = [SP++];
    1df8:	a3 05       	(R7:4, P5:3) = [SP++];
    1dfa:	10 00       	RTS;

00001dfc <_SendWakeup>:
_SendWakeup():
    1dfc:	f3 05       	[--SP] = (R7:6, P5:3);
    1dfe:	28 32       	P5 = R0;
    1e00:	00 e8 03 00 	LINK 0xc;		/* (12) */
    1e04:	39 30       	R7 = R1;
    1e06:	32 30       	R6 = R2;
    1e08:	74 af       	P4 = [SP + 0x34];
    1e0a:	28 e4 f7 07 	R0 = [P5 + 0x1fdc];
    1e0e:	ff e3 09 fe 	CALL 0x1a20 <_FirstInterfaceForID.clone.0>;
    1e12:	18 32       	P3 = R0;
    1e14:	43 0c       	CC = P3 == 0x0;
    1e16:	0d 14       	IF !CC JUMP 0x1e30 <_SendWakeup+0x34> (BP);
    1e18:	66 6c       	SP += 0xc;		/* ( 12) */
    1e1a:	77 90       	FP = [SP++];
    1e1c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x758(1880) */
    1e20:	17 30       	R2 = R7;
    1e22:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1e24:	27 01       	RETS = [SP++];
    1e26:	01 e1 8c 07 	R1.L = 0x78c;		/* (1932)	R1=0x78c(1932) */
    1e2a:	b3 05       	(R7:6, P5:3) = [SP++];
    1e2c:	ff e2 ea f0 	JUMP.L 0x0 <_AddRecordToResponseList>;
    1e30:	29 e1 98 59 	P1 = 0x5998 (X);		/*		P1=0x5998(22936) */
    1e34:	4d 5a       	P1 = P5 + P1;
    1e36:	3e 32       	FP = R6;
    1e38:	41 32       	P0 = P1;
    1e3a:	32 68       	P2 = 0x6 (X);		/*		P2=0x6(  6) */
    1e3c:	b2 e0 03 20 	LSETUP(0x1e40 <_SendWakeup+0x44>, 0x1e42 <_SendWakeup+0x46>) LC1 = P2;
    1e40:	78 98       	R0 = B[FP++] (X);
    1e42:	00 9a       	B[P0++] = R0;
    1e44:	28 e1 9e 59 	P0 = 0x599e (X);		/*		P0=0x599e(22942) */
    1e48:	05 5a       	P0 = P5 + P0;
    1e4a:	32 68       	P2 = 0x6 (X);		/*		P2=0x6(  6) */
    1e4c:	b2 e0 04 20 	LSETUP(0x1e50 <_SendWakeup+0x54>, 0x1e54 <_SendWakeup+0x58>) LC1 = P2;
    1e50:	98 e5 6c 14 	R0 = B[P3 + 0x146c] (X);
    1e54:	00 9a       	B[P0++] = R0;
    1e56:	40 60       	R0 = 0x8 (X);		/*		R0=0x8(  8) */
    1e58:	a8 e6 a4 59 	B[P5 + 0x59a4] = R0;
    1e5c:	20 e1 42 00 	R0 = 0x42 (X);		/*		R0=0x42( 66) */
    1e60:	a8 e6 a5 59 	B[P5 + 0x59a5] = R0;
    1e64:	28 e1 a6 59 	P0 = 0x59a6 (X);		/*		P0=0x59a6(22950) */
    1e68:	05 5a       	P0 = P5 + P0;
    1e6a:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
    1e6c:	32 68       	P2 = 0x6 (X);		/*		P2=0x6(  6) */
    1e6e:	b2 e0 02 20 	LSETUP(0x1e72 <_SendWakeup+0x76>, 0x1e72 <_SendWakeup+0x76>) LC1 = P2;
    1e72:	00 9a       	B[P0++] = R0;
    1e74:	2a e1 ac 59 	P2 = 0x59ac (X);		/*		P2=0x59ac(22956) */
    1e78:	2f e1 74 00 	FP = 0x74 (X);		/*		FP=0x74(116) */
    1e7c:	95 5a       	P2 = P5 + P2;
    1e7e:	f9 5b       	FP = P1 + FP;
    1e80:	09 20       	JUMP.S 0x1e92 <_SendWakeup+0x96>;
    1e82:	58 98       	R0 = B[P3++] (X);
    1e84:	00 9a       	B[P0++] = R0;
    1e86:	f9 6f       	P1 += -0x1;		/* ( -1) */
    1e88:	41 0c       	CC = P1 == 0x0;
    1e8a:	fc 13       	IF !CC JUMP 0x1e82 <_SendWakeup+0x86>;
    1e8c:	32 6c       	P2 += 0x6;		/* (  6) */
    1e8e:	7a 08       	CC = P2 == FP;
    1e90:	05 18       	IF CC JUMP 0x1e9a <_SendWakeup+0x9e>;
    1e92:	1e 32       	P3 = R6;
    1e94:	42 32       	P0 = P2;
    1e96:	31 68       	P1 = 0x6 (X);		/*		P1=0x6(  6) */
    1e98:	f5 2f       	JUMP.S 0x1e82 <_SendWakeup+0x86>;
    1e9a:	29 e1 0c 5a 	P1 = 0x5a0c (X);		/*		P1=0x5a0c(23052) */
    1e9e:	4d 5a       	P1 = P5 + P1;
    1ea0:	32 68       	P2 = 0x6 (X);		/*		P2=0x6(  6) */
    1ea2:	b2 e0 03 20 	LSETUP(0x1ea6 <_SendWakeup+0xaa>, 0x1ea8 <_SendWakeup+0xac>) LC1 = P2;
    1ea6:	60 98       	R0 = B[P4++] (X);
    1ea8:	08 9a       	B[P1++] = R0;
    1eaa:	2b e1 12 5a 	P3 = 0x5a12 (X);		/*		P3=0x5a12(23058) */
    1eae:	2c e1 98 59 	P4 = 0x5998 (X);		/*		P4=0x5998(22936) */
    1eb2:	dd 5a       	P3 = P5 + P3;
    1eb4:	25 5b       	P4 = P5 + P4;
    1eb6:	44 30       	R0 = P4;
    1eb8:	4b 30       	R1 = P3;
    1eba:	17 30       	R2 = R7;
    1ebc:	ff e3 a2 f0 	CALL 0x0 <_AddRecordToResponseList>;
    1ec0:	66 6c       	SP += 0xc;		/* ( 12) */
    1ec2:	77 90       	FP = [SP++];
    1ec4:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
    1ec6:	a8 e6 98 59 	B[P5 + 0x5998] = R0;
    1eca:	a8 e6 99 59 	B[P5 + 0x5999] = R0;
    1ece:	a8 e6 9a 59 	B[P5 + 0x599a] = R0;
    1ed2:	a8 e6 9b 59 	B[P5 + 0x599b] = R0;
    1ed6:	a8 e6 9c 59 	B[P5 + 0x599c] = R0;
    1eda:	a8 e6 9d 59 	B[P5 + 0x599d] = R0;
    1ede:	27 01       	RETS = [SP++];
    1ee0:	44 30       	R0 = P4;
    1ee2:	4b 30       	R1 = P3;
    1ee4:	17 30       	R2 = R7;
    1ee6:	b3 05       	(R7:6, P5:3) = [SP++];
    1ee8:	ff e2 8c f0 	JUMP.L 0x0 <_AddRecordToResponseList>;

00001eec <_UpdateInterfaceProtocols.clone.5>:
_UpdateInterfaceProtocols.clone.5():
    1eec:	09 32       	P1 = R1;
    1eee:	00 32       	P0 = R0;
    1ef0:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    1ef2:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    1ef4:	89 e6 05 00 	B[P1 + 0x5] = R1;
    1ef8:	89 e6 06 00 	B[P1 + 0x6] = R1;
    1efc:	42 91       	P2 = [P0];
    1efe:	1f 20       	JUMP.S 0x1f3c <_UpdateInterfaceProtocols.clone.5+0x50>;
    1f00:	00 00       	NOP;
    1f02:	12 e4 10 05 	R2 = [P2 + 0x1440];
    1f06:	09 e4 10 05 	R1 = [P1 + 0x1440];
    1f0a:	0a 08       	CC = R2 == R1;
    1f0c:	16 14       	IF !CC JUMP 0x1f38 <_UpdateInterfaceProtocols.clone.5+0x4c> (BP);
    1f0e:	11 e4 11 05 	R1 = [P2 + 0x1444];
    1f12:	22 60       	R2 = 0x4 (X);		/*		R2=0x4(  4) */
    1f14:	11 08       	CC = R1 == R2;
    1f16:	08 14       	IF !CC JUMP 0x1f26 <_UpdateInterfaceProtocols.clone.5+0x3a> (BP);
    1f18:	91 e4 b5 14 	R1 = B[P2 + 0x14b5] (Z);
    1f1c:	01 0c       	CC = R1 == 0x0;
    1f1e:	0d 1c       	IF CC JUMP 0x1f38 <_UpdateInterfaceProtocols.clone.5+0x4c> (BP);
    1f20:	88 e6 05 00 	B[P1 + 0x5] = R0;
    1f24:	0a 20       	JUMP.S 0x1f38 <_UpdateInterfaceProtocols.clone.5+0x4c>;
    1f26:	32 60       	R2 = 0x6 (X);		/*		R2=0x6(  6) */
    1f28:	11 08       	CC = R1 == R2;
    1f2a:	07 14       	IF !CC JUMP 0x1f38 <_UpdateInterfaceProtocols.clone.5+0x4c> (BP);
    1f2c:	91 e4 b5 14 	R1 = B[P2 + 0x14b5] (Z);
    1f30:	01 0c       	CC = R1 == 0x0;
    1f32:	03 1c       	IF CC JUMP 0x1f38 <_UpdateInterfaceProtocols.clone.5+0x4c> (BP);
    1f34:	88 e6 06 00 	B[P1 + 0x6] = R0;
    1f38:	00 00       	NOP;
    1f3a:	52 91       	P2 = [P2];
    1f3c:	42 0c       	CC = P2 == 0x0;
    1f3e:	e1 17       	IF !CC JUMP 0x1f00 <_UpdateInterfaceProtocols.clone.5+0x14> (BP);
    1f40:	10 00       	RTS;
	...

00001f44 <_ExpectingUnicastResponseForQuestion.clone.11>:
_ExpectingUnicastResponseForQuestion.clone.11():
    1f44:	f3 05       	[--SP] = (R7:6, P5:3);
    1f46:	00 e8 04 00 	LINK 0x10;		/* (16) */
    1f4a:	28 32       	P5 = R0;
    1f4c:	b4 af       	P4 = [SP + 0x38];
    1f4e:	f0 a3       	R0 = [SP + 0x3c];
    1f50:	00 0c       	CC = R0 == 0x0;
    1f52:	03 02       	R3 = CC;
    1f54:	2b e1 34 01 	P3 = 0x134 (X);		/*		P3=0x134(308) */
    1f58:	b3 e6 0f 00 	B[SP + 0xf] = R3;
    1f5c:	cf 42       	R7 = R1.L (Z);
    1f5e:	d6 42       	R6 = R2.L (Z);
    1f60:	dc 5b       	FP = P4 + P3;
    1f62:	2a 20       	JUMP.S 0x1fb6 <_ExpectingUnicastResponseForQuestion.clone.11+0x72>;
    1f64:	b0 e4 0f 00 	R0 = B[SP + 0xf] (Z);
    1f68:	08 02       	CC = R0;
    1f6a:	06 14       	IF !CC JUMP 0x1f76 <_ExpectingUnicastResponseForQuestion.clone.11+0x32> (BP);
    1f6c:	2a e5 30 00 	P2 = [P5 + 0xc0];
    1f70:	42 0c       	CC = P2 == 0x0;
    1f72:	06 14       	IF !CC JUMP 0x1f7e <_ExpectingUnicastResponseForQuestion.clone.11+0x3a> (BP);
    1f74:	1f 20       	JUMP.S 0x1fb2 <_ExpectingUnicastResponseForQuestion.clone.11+0x6e>;
    1f76:	00 00       	NOP;
    1f78:	68 e5 7e 00 	R0 = W[P5 + 0xfc] (X);
    1f7c:	03 20       	JUMP.S 0x1f82 <_ExpectingUnicastResponseForQuestion.clone.11+0x3e>;
    1f7e:	00 00       	NOP;
    1f80:	10 95       	R0 = W[P2] (Z);
    1f82:	c0 42       	R0 = R0.L (Z);
    1f84:	38 08       	CC = R0 == R7;
    1f86:	16 14       	IF !CC JUMP 0x1fb2 <_ExpectingUnicastResponseForQuestion.clone.11+0x6e> (BP);
    1f88:	68 e4 99 00 	R0 = W[P5 + 0x132] (Z);
    1f8c:	30 08       	CC = R0 == R6;
    1f8e:	12 14       	IF !CC JUMP 0x1fb2 <_ExpectingUnicastResponseForQuestion.clone.11+0x6e> (BP);
    1f90:	29 e4 8d 00 	R1 = [P5 + 0x234];
    1f94:	20 e4 8d 00 	R0 = [P4 + 0x234];
    1f98:	01 08       	CC = R1 == R0;
    1f9a:	0c 14       	IF !CC JUMP 0x1fb2 <_ExpectingUnicastResponseForQuestion.clone.11+0x6e> (BP);
    1f9c:	69 a0       	R1 = [P5 + 0x4];
    1f9e:	60 a0       	R0 = [P4 + 0x4];
    1fa0:	01 08       	CC = R1 == R0;
    1fa2:	08 10       	IF !CC JUMP 0x1fb2 <_ExpectingUnicastResponseForQuestion.clone.11+0x6e>;
    1fa4:	9d 5a       	P2 = P5 + P3;
    1fa6:	42 30       	R0 = P2;
    1fa8:	4f 30       	R1 = FP;
    1faa:	ff e3 2b f0 	CALL 0x0 <_AddRecordToResponseList>;
    1fae:	00 0c       	CC = R0 == 0x0;
    1fb0:	05 14       	IF !CC JUMP 0x1fba <_ExpectingUnicastResponseForQuestion.clone.11+0x76> (BP);
    1fb2:	00 00       	NOP;
    1fb4:	6d 91       	P5 = [P5];
    1fb6:	45 0c       	CC = P5 == 0x0;
    1fb8:	d6 17       	IF !CC JUMP 0x1f64 <_ExpectingUnicastResponseForQuestion.clone.11+0x20> (BP);
    1fba:	86 6c       	SP += 0x10;		/* ( 16) */
    1fbc:	77 90       	FP = [SP++];
    1fbe:	45 30       	R0 = P5;
    1fc0:	27 01       	RETS = [SP++];
    1fc2:	b3 05       	(R7:6, P5:3) = [SP++];
    1fc4:	10 00       	RTS;
	...

00001fc8 <_SetNextQueryTime>:
_SetNextQueryTime():
    1fc8:	c4 04       	[--SP] = (P5:4);
    1fca:	28 32       	P5 = R0;
    1fcc:	21 32       	P4 = R1;
    1fce:	67 01       	[--SP] = RETS;
    1fd0:	86 6f       	SP += -0x10;		/* (-16) */
    1fd2:	28 a3       	R0 = [P5 + 0x30];
    1fd4:	08 30       	R1 = R0;
    1fd6:	ea a2       	R2 = [P5 + 0x2c];
    1fd8:	09 64       	R1 += 0x1;		/* (  1) */
    1fda:	0a 08       	CC = R2 == R1;
    1fdc:	09 18       	IF CC JUMP 0x1fee <_SetNextQueryTime+0x26>;
    1fde:	f0 b0       	[SP + 0xc] = R0;
    1fe0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    1fe4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1fe6:	01 e1 bc 07 	R1.L = 0x7bc;		/* (1980)	R1=0x7bc(1980) */
    1fea:	ff e3 0b f0 	CALL 0x0 <_AddRecordToResponseList>;
    1fee:	20 a1       	R0 = [P4 + 0x10];
    1ff0:	00 0d       	CC = R0 <= 0x0;
    1ff2:	19 1c       	IF CC JUMP 0x2024 <_SetNextQueryTime+0x5c> (BP);
    1ff4:	a1 a3       	R1 = [P4 + 0x38];
    1ff6:	01 0c       	CC = R1 == 0x0;
    1ff8:	16 14       	IF !CC JUMP 0x2024 <_SetNextQueryTime+0x5c> (BP);
    1ffa:	61 e4 99 00 	R1 = W[P4 + 0x132] (Z);
    1ffe:	01 0c       	CC = R1 == 0x0;
    2000:	07 14       	IF !CC JUMP 0x200e <_SetNextQueryTime+0x46> (BP);
    2002:	2a e1 f4 00 	P2 = 0xf4 (X);		/*		P2=0xf4(244) */
    2006:	95 5a       	P2 = P5 + P2;
    2008:	29 e4 3d 00 	R1 = [P5 + 0xf4];
    200c:	06 20       	JUMP.S 0x2018 <_SetNextQueryTime+0x50>;
    200e:	2a e1 ec 1f 	P2 = 0x1fec (X);		/*		P2=0x1fec(8172) */
    2012:	95 5a       	P2 = P5 + P2;
    2014:	29 e4 fb 07 	R1 = [P5 + 0x1fec];
    2018:	e2 a0       	R2 = [P4 + 0xc];
    201a:	10 50       	R0 = R0 + R2;
    201c:	41 52       	R1 = R1 - R0;
    201e:	01 0d       	CC = R1 <= 0x0;
    2020:	02 18       	IF CC JUMP 0x2024 <_SetNextQueryTime+0x5c>;
    2022:	10 93       	[P2] = R0;
    2024:	86 6c       	SP += 0x10;		/* ( 16) */
    2026:	27 01       	RETS = [SP++];
    2028:	84 04       	(P5:4) = [SP++];
    202a:	10 00       	RTS;

0000202c <_AuthGroupForName>:
_AuthGroupForName():
    202c:	01 32       	P0 = R1;
    202e:	08 32       	P1 = R0;
    2030:	f5 05       	[--SP] = (R7:6, P5:5);
    2032:	67 01       	[--SP] = RETS;
    2034:	a6 6f       	SP += -0xc;		/* (-12) */
    2036:	3a 30       	R7 = R2;
    2038:	81 5e       	P2 = P1 + (P0 << 0x2);
    203a:	b6 a2       	R6 = [SP + 0x28];
    203c:	55 ad       	P5 = [P2 + 0x14];
    203e:	0d 20       	JUMP.S 0x2058 <_AuthGroupForName+0x2c>;
    2040:	00 00       	NOP;
    2042:	68 a0       	R0 = [P5 + 0x4];
    2044:	38 08       	CC = R0 == R7;
    2046:	07 14       	IF !CC JUMP 0x2054 <_AuthGroupForName+0x28> (BP);
    2048:	28 a1       	R0 = [P5 + 0x10];
    204a:	0e 30       	R1 = R6;
    204c:	ff e3 da ef 	CALL 0x0 <_AddRecordToResponseList>;
    2050:	00 0c       	CC = R0 == 0x0;
    2052:	05 14       	IF !CC JUMP 0x205c <_AuthGroupForName+0x30> (BP);
    2054:	00 00       	NOP;
    2056:	6d 91       	P5 = [P5];
    2058:	45 0c       	CC = P5 == 0x0;
    205a:	f3 17       	IF !CC JUMP 0x2040 <_AuthGroupForName+0x14> (BP);
    205c:	66 6c       	SP += 0xc;		/* ( 12) */
    205e:	45 30       	R0 = P5;
    2060:	27 01       	RETS = [SP++];
    2062:	b5 05       	(R7:6, P5:5) = [SP++];
    2064:	10 00       	RTS;
	...

00002068 <_AuthGroupForRecord>:
_AuthGroupForRecord():
    2068:	12 32       	P2 = R2;
    206a:	67 01       	[--SP] = RETS;
    206c:	86 6f       	SP += -0x10;		/* (-16) */
    206e:	d3 a1       	R3 = [P2 + 0x1c];
    2070:	f3 b0       	[SP + 0xc] = R3;
    2072:	12 a1       	R2 = [P2 + 0x10];
    2074:	ff e3 dc ff 	CALL 0x202c <_AuthGroupForName>;
    2078:	86 6c       	SP += 0x10;		/* ( 16) */
    207a:	27 01       	RETS = [SP++];
    207c:	10 00       	RTS;
	...

00002080 <_InsertAuthRecord>:
_InsertAuthRecord():
    2080:	e3 05       	[--SP] = (R7:4, P5:3);
    2082:	1a 32       	P3 = R2;
    2084:	00 e8 07 00 	LINK 0x1c;		/* (28) */
    2088:	30 e6 10 00 	[SP + 0x40] = R0;
    208c:	29 32       	P5 = R1;
    208e:	18 a2       	R0 = [P3 + 0x20];
    2090:	ff e3 b8 ef 	CALL 0x0 <_AddRecordToResponseList>;
    2094:	41 e1 d5 20 	R1.H = 0x20d5;		/* (8405)	R1=0x20d507bc(550832060) */
    2098:	38 30       	R7 = R0;
    209a:	01 e1 39 6b 	R1.L = 0x6b39;		/* (27449)	R1=0x20d56b39(550857529) */
    209e:	ff e3 b1 ef 	CALL 0x0 <_AddRecordToResponseList>;
    20a2:	82 c6 d0 8d 	R6 = R0 >> 0x6;
    20a6:	20 e1 f3 01 	R0 = 0x1f3 (X);		/*		R0=0x1f3(499) */
    20aa:	c6 40       	R6 *= R0;
    20ac:	63 30       	R4 = P3;
    20ae:	b7 53       	R6 = R7 - R6;
    20b0:	24 64       	R4 += 0x4;		/* (  4) */
    20b2:	45 30       	R0 = P5;
    20b4:	0e 30       	R1 = R6;
    20b6:	14 30       	R2 = R4;
    20b8:	ff e3 d8 ff 	CALL 0x2068 <_AuthGroupForRecord>;
    20bc:	38 30       	R7 = R0;
    20be:	00 0c       	CC = R0 == 0x0;
    20c0:	15 15       	IF !CC JUMP 0x22ea <_InsertAuthRecord+0x26a> (BP);
    20c2:	18 a2       	R0 = [P3 + 0x20];
    20c4:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    20c8:	48 50       	R1 = R0 + R1;
    20ca:	ff e3 9b ef 	CALL 0x0 <_AddRecordToResponseList>;
    20ce:	30 b7       	W[SP + 0x18] = R0;
    20d0:	a8 e4 0c 00 	R0 = B[P5 + 0xc] (Z);
    20d4:	00 0c       	CC = R0 == 0x0;
    20d6:	0a 1c       	IF CC JUMP 0x20ea <_InsertAuthRecord+0x6a> (BP);
    20d8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x100(256) */
    20dc:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    20de:	01 e1 e8 05 	R1.L = 0x5e8;		/* (1512)	R1=0x5e8(1512) */
    20e2:	ff e3 8f ef 	CALL 0x0 <_AddRecordToResponseList>;
    20e6:	04 68       	P4 = 0x0 (X);		/*		P4=0x0(  0) */
    20e8:	99 20       	JUMP.S 0x221a <_InsertAuthRecord+0x19a>;
    20ea:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    20ec:	a8 e6 0c 00 	B[P5 + 0xc] = R0;
    20f0:	28 a1       	R0 = [P5 + 0x10];
    20f2:	00 0c       	CC = R0 == 0x0;
    20f4:	09 14       	IF !CC JUMP 0x2106 <_InsertAuthRecord+0x86> (BP);
    20f6:	20 e1 9c 00 	R0 = 0x9c (X);		/*		R0=0x9c(156) */
    20fa:	ff e3 83 ef 	CALL 0x0 <_AddRecordToResponseList>;
    20fe:	08 32       	P1 = R0;
    2100:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    2102:	09 93       	[P1] = R1;
    2104:	28 b1       	[P5 + 0x10] = R0;
    2106:	00 00       	NOP;
    2108:	28 a1       	R0 = [P5 + 0x10];
    210a:	00 0c       	CC = R0 == 0x0;
    210c:	51 14       	IF !CC JUMP 0x21ae <_InsertAuthRecord+0x12e> (BP);
    210e:	68 a0       	R0 = [P5 + 0x4];
    2110:	70 b1       	[SP + 0x14] = R0;
    2112:	05 60       	R5 = 0x0 (X);		/*		R5=0x0(  0) */
    2114:	25 32       	P4 = R5;
    2116:	2c 6c       	P4 += 0x5;		/* (  5) */
    2118:	25 5f       	P4 = P5 + (P4 << 0x2);
    211a:	2f 20       	JUMP.S 0x2178 <_InsertAuthRecord+0xf8>;
    211c:	00 00       	NOP;
    211e:	b8 a0       	R0 = [FP + 0x8];
    2120:	00 0c       	CC = R0 == 0x0;
    2122:	03 18       	IF CC JUMP 0x2128 <_InsertAuthRecord+0xa8>;
    2124:	67 32       	P4 = FP;
    2126:	29 20       	JUMP.S 0x2178 <_InsertAuthRecord+0xf8>;
    2128:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    212c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    212e:	01 e1 04 08 	R1.L = 0x804;		/* (2052)	R1=0x804(2052) */
    2132:	3a a1       	R2 = [FP + 0x10];
    2134:	ff e3 66 ef 	CALL 0x0 <_AddRecordToResponseList>;
    2138:	62 91       	P2 = [P4];
    213a:	42 30       	R0 = P2;
    213c:	40 64       	R0 += 0x8;		/* (  8) */
    213e:	d1 a0       	R1 = [P2 + 0xc];
    2140:	01 08       	CC = R1 == R0;
    2142:	08 18       	IF CC JUMP 0x2152 <_InsertAuthRecord+0xd2>;
    2144:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x804(2052) */
    2148:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    214a:	01 e1 30 08 	R1.L = 0x830;		/* (2096)	R1=0x830(2096) */
    214e:	ff e3 59 ef 	CALL 0x0 <_AddRecordToResponseList>;
    2152:	62 91       	P2 = [P4];
    2154:	4a 30       	R1 = P2;
    2156:	10 a1       	R0 = [P2 + 0x10];
    2158:	c1 64       	R1 += 0x18;		/* ( 24) */
    215a:	08 08       	CC = R0 == R1;
    215c:	03 18       	IF CC JUMP 0x2162 <_InsertAuthRecord+0xe2>;
    215e:	ff e3 51 ef 	CALL 0x0 <_AddRecordToResponseList>;
    2162:	62 91       	P2 = [P4];
    2164:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2166:	10 b1       	[P2 + 0x10] = R0;
    2168:	10 91       	R0 = [P2];
    216a:	20 93       	[P4] = R0;
    216c:	28 a1       	R0 = [P5 + 0x10];
    216e:	38 93       	[FP] = R0;
    2170:	68 a0       	R0 = [P5 + 0x4];
    2172:	f8 67       	R0 += -0x1;		/* ( -1) */
    2174:	2f bd       	[P5 + 0x10] = FP;
    2176:	68 b0       	[P5 + 0x4] = R0;
    2178:	67 91       	FP = [P4];
    217a:	47 0c       	CC = FP == 0x0;
    217c:	d0 17       	IF !CC JUMP 0x211c <_InsertAuthRecord+0x9c> (BP);
    217e:	0d 64       	R5 += 0x1;		/* (  1) */
    2180:	21 e1 f3 01 	R1 = 0x1f3 (X);		/*		R1=0x1f3(499) */
    2184:	0d 08       	CC = R5 == R1;
    2186:	c7 17       	IF !CC JUMP 0x2114 <_InsertAuthRecord+0x94> (BP);
    2188:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x1fec */
    218c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    2190:	10 91       	R0 = [P2];
    2192:	00 0c       	CC = R0 == 0x0;
    2194:	0d 1c       	IF CC JUMP 0x21ae <_InsertAuthRecord+0x12e> (BP);
    2196:	68 a0       	R0 = [P5 + 0x4];
    2198:	71 a1       	R1 = [SP + 0x14];
    219a:	81 52       	R2 = R1 - R0;
    219c:	f1 b0       	[SP + 0xc] = R1;
    219e:	30 b1       	[SP + 0x10] = R0;
    21a0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1f3(499) */
    21a4:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    21a6:	01 e1 80 08 	R1.L = 0x880;		/* (2176)	R1=0x880(2176) */
    21aa:	ff e3 2b ef 	CALL 0x0 <_AddRecordToResponseList>;
    21ae:	00 00       	NOP;
    21b0:	2c ad       	P4 = [P5 + 0x10];
    21b2:	44 0c       	CC = P4 == 0x0;
    21b4:	2e 1c       	IF CC JUMP 0x2210 <_InsertAuthRecord+0x190> (BP);
    21b6:	20 91       	R0 = [P4];
    21b8:	6a a0       	R2 = [P5 + 0x4];
    21ba:	28 b1       	[P5 + 0x10] = R0;
    21bc:	0a 64       	R2 += 0x1;		/* (  1) */
    21be:	a8 a0       	R0 = [P5 + 0x8];
    21c0:	6a b0       	[P5 + 0x4] = R2;
    21c2:	82 09       	CC = R2 < R0 (IU);
    21c4:	21 1c       	IF CC JUMP 0x2206 <_InsertAuthRecord+0x186> (BP);
    21c6:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    21ca:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    21ce:	10 91       	R0 = [P2];
    21d0:	00 0c       	CC = R0 == 0x0;
    21d2:	08 1c       	IF CC JUMP 0x21e2 <_InsertAuthRecord+0x162> (BP);
    21d4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x880(2176) */
    21d8:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    21da:	01 e1 c8 08 	R1.L = 0x8c8;		/* (2248)	R1=0x8c8(2248) */
    21de:	ff e3 11 ef 	CALL 0x0 <_AddRecordToResponseList>;
    21e2:	29 e1 63 00 	P1 = 0x63 (X);		/*		P1=0x63( 99) */
    21e6:	aa ac       	P2 = [P5 + 0x8];
    21e8:	4a 0a       	CC = P2 <= P1 (IU);
    21ea:	03 14       	IF !CC JUMP 0x21f0 <_InsertAuthRecord+0x170> (BP);
    21ec:	52 6c       	P2 += 0xa;		/* ( 10) */
    21ee:	0b 20       	JUMP.S 0x2204 <_InsertAuthRecord+0x184>;
    21f0:	29 e1 e7 03 	P1 = 0x3e7 (X);		/*		P1=0x3e7(999) */
    21f4:	4a 0a       	CC = P2 <= P1 (IU);
    21f6:	04 14       	IF !CC JUMP 0x21fe <_InsertAuthRecord+0x17e> (BP);
    21f8:	29 e1 64 00 	P1 = 0x64 (X);		/*		P1=0x64(100) */
    21fc:	03 20       	JUMP.S 0x2202 <_InsertAuthRecord+0x182>;
    21fe:	29 e1 e8 03 	P1 = 0x3e8 (X);		/*		P1=0x3e8(1000) */
    2202:	8a 5a       	P2 = P2 + P1;
    2204:	aa bc       	[P5 + 0x8] = P2;
    2206:	44 30       	R0 = P4;
    2208:	21 e1 9c 00 	R1 = 0x9c (X);		/*		R1=0x9c(156) */
    220c:	ff e3 fa ee 	CALL 0x0 <_AddRecordToResponseList>;
    2210:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2212:	a8 e6 0c 00 	B[P5 + 0xc] = R0;
    2216:	44 0c       	CC = P4 == 0x0;
    2218:	0b 14       	IF !CC JUMP 0x222e <_InsertAuthRecord+0x1ae> (BP);
    221a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x9c(156) */
    221e:	1a a2       	R2 = [P3 + 0x20];
    2220:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2222:	01 e1 e8 08 	R1.L = 0x8e8;		/* (2280)	R1=0x8e8(2280) */
    2226:	ff e3 ed ee 	CALL 0x0 <_AddRecordToResponseList>;
    222a:	7c 30       	R7 = P4;
    222c:	7a 20       	JUMP.S 0x2320 <_InsertAuthRecord+0x2a0>;
    222e:	0e 32       	P1 = R6;
    2230:	4c 30       	R1 = P4;
    2232:	41 64       	R1 += 0x8;		/* (  8) */
    2234:	8d 5e       	P2 = P5 + (P1 << 0x2);
    2236:	50 a1       	R0 = [P2 + 0x14];
    2238:	20 93       	[P4] = R0;
    223a:	58 a1       	R0 = [P3 + 0x14];
    223c:	60 b0       	[P4 + 0x4] = R0;
    223e:	e1 b0       	[P4 + 0xc] = R1;
    2240:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2242:	81 64       	R1 += 0x10;		/* ( 16) */
    2244:	a0 b0       	[P4 + 0x8] = R0;
    2246:	21 b1       	[P4 + 0x10] = R1;
    2248:	60 b1       	[P4 + 0x14] = R0;
    224a:	30 a7       	R0 = W[SP + 0x18] (Z);
    224c:	21 e1 84 00 	R1 = 0x84 (X);		/*		R1=0x84(132) */
    2250:	08 0a       	CC = R0 <= R1 (IU);
    2252:	04 1c       	IF CC JUMP 0x225a <_InsertAuthRecord+0x1da> (BP);
    2254:	ff e3 d6 ee 	CALL 0x0 <_AddRecordToResponseList>;
    2258:	20 b1       	[P4 + 0x10] = R0;
    225a:	00 00       	NOP;
    225c:	20 a1       	R0 = [P4 + 0x10];
    225e:	00 0c       	CC = R0 == 0x0;
    2260:	1a a2       	R2 = [P3 + 0x20];
    2262:	0e 14       	IF !CC JUMP 0x227e <_InsertAuthRecord+0x1fe> (BP);
    2264:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x84(132) */
    2268:	01 e1 1c 09 	R1.L = 0x91c;		/* (2332)	R1=0x91c(2332) */
    226c:	ff e3 ca ee 	CALL 0x0 <_AddRecordToResponseList>;
    2270:	28 a1       	R0 = [P5 + 0x10];
    2272:	20 93       	[P4] = R0;
    2274:	68 a0       	R0 = [P5 + 0x4];
    2276:	f8 67       	R0 += -0x1;		/* ( -1) */
    2278:	2c bd       	[P5 + 0x10] = P4;
    227a:	68 b0       	[P5 + 0x4] = R0;
    227c:	52 20       	JUMP.S 0x2320 <_InsertAuthRecord+0x2a0>;
    227e:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    2282:	4a 50       	R1 = R2 + R1;
    2284:	02 30       	R0 = R2;
    2286:	ff e3 bd ee 	CALL 0x0 <_AddRecordToResponseList>;
    228a:	c2 42       	R2 = R0.L (Z);
    228c:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    2290:	02 0a       	CC = R2 <= R0 (IU);
    2292:	20 a1       	R0 = [P4 + 0x10];
    2294:	05 14       	IF !CC JUMP 0x229e <_InsertAuthRecord+0x21e> (BP);
    2296:	19 a2       	R1 = [P3 + 0x20];
    2298:	ff e3 b4 ee 	CALL 0x0 <_AddRecordToResponseList>;
    229c:	04 20       	JUMP.S 0x22a4 <_InsertAuthRecord+0x224>;
    229e:	08 32       	P1 = R0;
    22a0:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    22a2:	09 9b       	B[P1] = R1;
    22a4:	45 30       	R0 = P5;
    22a6:	0e 30       	R1 = R6;
    22a8:	14 30       	R2 = R4;
    22aa:	ff e3 df fe 	CALL 0x2068 <_AuthGroupForRecord>;
    22ae:	00 0c       	CC = R0 == 0x0;
    22b0:	09 18       	IF CC JUMP 0x22c2 <_InsertAuthRecord+0x242>;
    22b2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    22b6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    22b8:	01 e1 54 09 	R1.L = 0x954;		/* (2388)	R1=0x954(2388) */
    22bc:	1a a2       	R2 = [P3 + 0x20];
    22be:	ff e3 a1 ee 	CALL 0x0 <_AddRecordToResponseList>;
    22c2:	0e 32       	P1 = R6;
    22c4:	0e 30       	R1 = R6;
    22c6:	45 30       	R0 = P5;
    22c8:	14 30       	R2 = R4;
    22ca:	8d 5e       	P2 = P5 + (P1 << 0x2);
    22cc:	54 bd       	[P2 + 0x14] = P4;
    22ce:	ff e3 cd fe 	CALL 0x2068 <_AuthGroupForRecord>;
    22d2:	4c 30       	R1 = P4;
    22d4:	08 08       	CC = R0 == R1;
    22d6:	2b 18       	IF CC JUMP 0x232c <_InsertAuthRecord+0x2ac>;
    22d8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x954(2388) */
    22dc:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    22de:	01 e1 84 09 	R1.L = 0x984;		/* (2436)	R1=0x984(2436) */
    22e2:	1a a2       	R2 = [P3 + 0x20];
    22e4:	ff e3 8e ee 	CALL 0x0 <_AddRecordToResponseList>;
    22e8:	22 20       	JUMP.S 0x232c <_InsertAuthRecord+0x2ac>;
    22ea:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    22ee:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    22f2:	10 91       	R0 = [P2];
    22f4:	00 0c       	CC = R0 == 0x0;
    22f6:	11 1c       	IF CC JUMP 0x2318 <_InsertAuthRecord+0x298> (BP);
    22f8:	59 a2       	R1 = [P3 + 0x24];
    22fa:	32 e4 10 00 	R2 = [SP + 0x40];
    22fe:	21 64       	R1 += 0x4;		/* (  4) */
    2300:	ba 65       	R2 += 0x37;		/* ( 55) */
    2302:	04 30       	R0 = R4;
    2304:	ff e3 7e ee 	CALL 0x0 <_AddRecordToResponseList>;
    2308:	10 30       	R2 = R0;
    230a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x984(2436) */
    230e:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    2310:	01 e1 b4 09 	R1.L = 0x9b4;		/* (2484)	R1=0x9b4(2484) */
    2314:	ff e3 76 ee 	CALL 0x0 <_AddRecordToResponseList>;
    2318:	0f 32       	P1 = R7;
    231a:	ca ac       	P2 = [P1 + 0xc];
    231c:	53 93       	[P2] = P3;
    231e:	cb bc       	[P1 + 0xc] = P3;
    2320:	e6 6c       	SP += 0x1c;		/* ( 28) */
    2322:	77 90       	FP = [SP++];
    2324:	07 30       	R0 = R7;
    2326:	27 01       	RETS = [SP++];
    2328:	a3 05       	(R7:4, P5:3) = [SP++];
    232a:	10 00       	RTS;
    232c:	7c 30       	R7 = P4;
    232e:	de 2f       	JUMP.S 0x22ea <_InsertAuthRecord+0x26a>;

00002330 <_RemoveAuthRecord>:
_RemoveAuthRecord():
    2330:	eb 05       	[--SP] = (R7:5, P5:3);
    2332:	2a 32       	P5 = R2;
    2334:	67 01       	[--SP] = RETS;
    2336:	28 30       	R5 = R0;
    2338:	a6 6f       	SP += -0xc;		/* (-12) */
    233a:	21 32       	P4 = R1;
    233c:	28 a2       	R0 = [P5 + 0x20];
    233e:	ff e3 61 ee 	CALL 0x0 <_AddRecordToResponseList>;
    2342:	41 e1 d5 20 	R1.H = 0x20d5;		/* (8405)	R1=0x20d509b4(550832564) */
    2346:	38 30       	R7 = R0;
    2348:	01 e1 39 6b 	R1.L = 0x6b39;		/* (27449)	R1=0x20d56b39(550857529) */
    234c:	ff e3 5a ee 	CALL 0x0 <_AddRecordToResponseList>;
    2350:	82 c6 d0 83 	R1 = R0 >> 0x6;
    2354:	20 e1 f3 01 	R0 = 0x1f3 (X);		/*		R0=0x1f3(499) */
    2358:	c1 40       	R1 *= R0;
    235a:	75 30       	R6 = P5;
    235c:	26 64       	R6 += 0x4;		/* (  4) */
    235e:	4f 52       	R1 = R7 - R1;
    2360:	44 30       	R0 = P4;
    2362:	16 30       	R2 = R6;
    2364:	ff e3 82 fe 	CALL 0x2068 <_AuthGroupForRecord>;
    2368:	38 30       	R7 = R0;
    236a:	00 0c       	CC = R0 == 0x0;
    236c:	11 14       	IF !CC JUMP 0x238e <_RemoveAuthRecord+0x5e> (BP);
    236e:	69 a2       	R1 = [P5 + 0x24];
    2370:	15 30       	R2 = R5;
    2372:	21 64       	R1 += 0x4;		/* (  4) */
    2374:	ba 65       	R2 += 0x37;		/* ( 55) */
    2376:	06 30       	R0 = R6;
    2378:	ff e3 44 ee 	CALL 0x0 <_AddRecordToResponseList>;
    237c:	10 30       	R2 = R0;
    237e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x6b39(27449) */
    2382:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2384:	01 e1 ec 09 	R1.L = 0x9ec;		/* (2540)	R1=0x9ec(2540) */
    2388:	ff e3 3c ee 	CALL 0x0 <_AddRecordToResponseList>;
    238c:	27 20       	JUMP.S 0x23da <_RemoveAuthRecord+0xaa>;
    238e:	20 32       	P4 = R0;
    2390:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x134 */
    2394:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
    2398:	bd 65       	R5 += 0x37;		/* ( 55) */
    239a:	44 6c       	P4 += 0x8;		/* (  8) */
    239c:	1a 20       	JUMP.S 0x23d0 <_RemoveAuthRecord+0xa0>;
    239e:	6a 08       	CC = P2 == P5;
    23a0:	03 18       	IF CC JUMP 0x23a6 <_RemoveAuthRecord+0x76>;
    23a2:	62 32       	P4 = P2;
    23a4:	16 20       	JUMP.S 0x23d0 <_RemoveAuthRecord+0xa0>;
    23a6:	18 91       	R0 = [P3];
    23a8:	00 0c       	CC = R0 == 0x0;
    23aa:	0f 1c       	IF CC JUMP 0x23c8 <_RemoveAuthRecord+0x98> (BP);
    23ac:	69 a2       	R1 = [P5 + 0x24];
    23ae:	21 64       	R1 += 0x4;		/* (  4) */
    23b0:	15 30       	R2 = R5;
    23b2:	06 30       	R0 = R6;
    23b4:	ff e3 26 ee 	CALL 0x0 <_AddRecordToResponseList>;
    23b8:	10 30       	R2 = R0;
    23ba:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x9ec(2540) */
    23be:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    23c0:	01 e1 24 0a 	R1.L = 0xa24;		/* (2596)	R1=0xa24(2596) */
    23c4:	ff e3 1e ee 	CALL 0x0 <_AddRecordToResponseList>;
    23c8:	00 00       	NOP;
    23ca:	62 91       	P2 = [P4];
    23cc:	10 91       	R0 = [P2];
    23ce:	20 93       	[P4] = R0;
    23d0:	62 91       	P2 = [P4];
    23d2:	42 0c       	CC = P2 == 0x0;
    23d4:	e5 17       	IF !CC JUMP 0x239e <_RemoveAuthRecord+0x6e> (BP);
    23d6:	17 32       	P2 = R7;
    23d8:	d4 bc       	[P2 + 0xc] = P4;
    23da:	66 6c       	SP += 0xc;		/* ( 12) */
    23dc:	07 30       	R0 = R7;
    23de:	27 01       	RETS = [SP++];
    23e0:	ab 05       	(R7:5, P5:3) = [SP++];
    23e2:	10 00       	RTS;

000023e4 <_CacheGroupForName>:
_CacheGroupForName():
    23e4:	f5 05       	[--SP] = (R7:6, P5:5);
    23e6:	3a 30       	R7 = R2;
    23e8:	22 e1 57 00 	R2 = 0x57 (X);		/*		R2=0x57( 87) */
    23ec:	51 41       	R1 = (R1 + R2) << 0x2;
    23ee:	08 50       	R0 = R0 + R1;
    23f0:	10 32       	P2 = R0;
    23f2:	67 01       	[--SP] = RETS;
    23f4:	a6 6f       	SP += -0xc;		/* (-12) */
    23f6:	b6 a2       	R6 = [SP + 0x28];
    23f8:	55 91       	P5 = [P2];
    23fa:	0d 20       	JUMP.S 0x2414 <_CacheGroupForName+0x30>;
    23fc:	00 00       	NOP;
    23fe:	68 a0       	R0 = [P5 + 0x4];
    2400:	38 08       	CC = R0 == R7;
    2402:	07 14       	IF !CC JUMP 0x2410 <_CacheGroupForName+0x2c> (BP);
    2404:	28 a1       	R0 = [P5 + 0x10];
    2406:	0e 30       	R1 = R6;
    2408:	ff e3 fc ed 	CALL 0x0 <_AddRecordToResponseList>;
    240c:	00 0c       	CC = R0 == 0x0;
    240e:	05 14       	IF !CC JUMP 0x2418 <_CacheGroupForName+0x34> (BP);
    2410:	00 00       	NOP;
    2412:	6d 91       	P5 = [P5];
    2414:	45 0c       	CC = P5 == 0x0;
    2416:	f3 17       	IF !CC JUMP 0x23fc <_CacheGroupForName+0x18> (BP);
    2418:	66 6c       	SP += 0xc;		/* ( 12) */
    241a:	45 30       	R0 = P5;
    241c:	27 01       	RETS = [SP++];
    241e:	b5 05       	(R7:6, P5:5) = [SP++];
    2420:	10 00       	RTS;
	...

00002424 <_FindIdenticalRecordInCache>:
_FindIdenticalRecordInCache():
    2424:	fc 05       	[--SP] = (R7:7, P5:4);
    2426:	21 32       	P4 = R1;
    2428:	67 01       	[--SP] = RETS;
    242a:	28 32       	P5 = R0;
    242c:	86 6f       	SP += -0x10;		/* (-16) */
    242e:	e0 a1       	R0 = [P4 + 0x1c];
    2430:	ff e3 e8 ed 	CALL 0x0 <_AddRecordToResponseList>;
    2434:	41 e1 d5 20 	R1.H = 0x20d5;		/* (8405)	R1=0x20d50a24(550832676) */
    2438:	38 30       	R7 = R0;
    243a:	01 e1 39 6b 	R1.L = 0x6b39;		/* (27449)	R1=0x20d56b39(550857529) */
    243e:	ff e3 e1 ed 	CALL 0x0 <_AddRecordToResponseList>;
    2442:	82 c6 d0 83 	R1 = R0 >> 0x6;
    2446:	22 a1       	R2 = [P4 + 0x10];
    2448:	20 e1 f3 01 	R0 = 0x1f3 (X);		/*		R0=0x1f3(499) */
    244c:	c1 40       	R1 *= R0;
    244e:	e0 a1       	R0 = [P4 + 0x1c];
    2450:	f0 b0       	[SP + 0xc] = R0;
    2452:	4f 52       	R1 = R7 - R1;
    2454:	45 30       	R0 = P5;
    2456:	ff e3 c7 ff 	CALL 0x23e4 <_CacheGroupForName>;
    245a:	10 32       	P2 = R0;
    245c:	42 0c       	CC = P2 == 0x0;
    245e:	03 1c       	IF CC JUMP 0x2464 <_FindIdenticalRecordInCache+0x40> (BP);
    2460:	95 ac       	P5 = [P2 + 0x8];
    2462:	2d 20       	JUMP.S 0x24bc <_FindIdenticalRecordInCache+0x98>;
    2464:	05 68       	P5 = 0x0 (X);		/*		P5=0x0(  0) */
    2466:	2b 20       	JUMP.S 0x24bc <_FindIdenticalRecordInCache+0x98>;
    2468:	00 00       	NOP;
    246a:	a0 a1       	R0 = [P4 + 0x18];
    246c:	00 0c       	CC = R0 == 0x0;
    246e:	04 14       	IF !CC JUMP 0x2476 <_FindIdenticalRecordInCache+0x52> (BP);
    2470:	61 a2       	R1 = [P4 + 0x24];
    2472:	a8 a2       	R0 = [P5 + 0x28];
    2474:	03 20       	JUMP.S 0x247a <_FindIdenticalRecordInCache+0x56>;
    2476:	00 00       	NOP;
    2478:	e9 a1       	R1 = [P5 + 0x1c];
    247a:	08 08       	CC = R0 == R1;
    247c:	00 02       	R0 = CC;
    247e:	00 0c       	CC = R0 == 0x0;
    2480:	1c 1c       	IF CC JUMP 0x24b8 <_FindIdenticalRecordInCache+0x94> (BP);
    2482:	61 a4       	R1 = W[P4 + 0x2] (Z);
    2484:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    2486:	01 08       	CC = R1 == R0;
    2488:	18 14       	IF !CC JUMP 0x24b8 <_FindIdenticalRecordInCache+0x94> (BP);
    248a:	a1 a4       	R1 = W[P4 + 0x4] (Z);
    248c:	28 a5       	R0 = W[P5 + 0x8] (Z);
    248e:	01 08       	CC = R1 == R0;
    2490:	14 14       	IF !CC JUMP 0x24b8 <_FindIdenticalRecordInCache+0x94> (BP);
    2492:	a1 a5       	R1 = W[P4 + 0xc] (Z);
    2494:	28 a6       	R0 = W[P5 + 0x10] (Z);
    2496:	01 08       	CC = R1 == R0;
    2498:	10 14       	IF !CC JUMP 0x24b8 <_FindIdenticalRecordInCache+0x94> (BP);
    249a:	61 a1       	R1 = [P4 + 0x14];
    249c:	a8 a1       	R0 = [P5 + 0x18];
    249e:	01 08       	CC = R1 == R0;
    24a0:	0c 14       	IF !CC JUMP 0x24b8 <_FindIdenticalRecordInCache+0x94> (BP);
    24a2:	69 a2       	R1 = [P5 + 0x24];
    24a4:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x57( 87) */
    24a8:	21 64       	R1 += 0x4;		/* (  4) */
    24aa:	44 30       	R0 = P4;
    24ac:	02 e1 00 00 	R2.L = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    24b0:	ff e3 a8 ed 	CALL 0x0 <_AddRecordToResponseList>;
    24b4:	00 0c       	CC = R0 == 0x0;
    24b6:	05 14       	IF !CC JUMP 0x24c0 <_FindIdenticalRecordInCache+0x9c> (BP);
    24b8:	00 00       	NOP;
    24ba:	6d 91       	P5 = [P5];
    24bc:	45 0c       	CC = P5 == 0x0;
    24be:	d5 17       	IF !CC JUMP 0x2468 <_FindIdenticalRecordInCache+0x44> (BP);
    24c0:	86 6c       	SP += 0x10;		/* ( 16) */
    24c2:	45 30       	R0 = P5;
    24c4:	27 01       	RETS = [SP++];
    24c6:	bc 05       	(R7:7, P5:4) = [SP++];
    24c8:	10 00       	RTS;
	...

000024cc <_CheckForSoonToExpireRecords>:
_CheckForSoonToExpireRecords():
    24cc:	10 32       	P2 = R0;
    24ce:	70 05       	[--SP] = (R7:6);
    24d0:	67 01       	[--SP] = RETS;
    24d2:	86 6f       	SP += -0x10;		/* (-16) */
    24d4:	ff 63       	R7 = -0x1 (X);		/*		R7=0xffffffff( -1) */
    24d6:	13 e4 37 00 	R3 = [P2 + 0xdc];
    24da:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    24de:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    24e2:	16 91       	R6 = [P2];
    24e4:	f1 b0       	[SP + 0xc] = R1;
    24e6:	e7 4f       	R7 <<= 0x1c;
    24e8:	b3 51       	R6 = R3 + R6;
    24ea:	fb 51       	R7 = R3 + R7;
    24ec:	b1 a2       	R1 = [SP + 0x28];
    24ee:	ff e3 7b ff 	CALL 0x23e4 <_CacheGroupForName>;
    24f2:	10 32       	P2 = R0;
    24f4:	42 0c       	CC = P2 == 0x0;
    24f6:	03 1c       	IF CC JUMP 0x24fc <_CheckForSoonToExpireRecords+0x30> (BP);
    24f8:	92 ac       	P2 = [P2 + 0x8];
    24fa:	02 20       	JUMP.S 0x24fe <_CheckForSoonToExpireRecords+0x32>;
    24fc:	02 68       	P2 = 0x0 (X);		/*		P2=0x0(  0) */
    24fe:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x3e8 */
    2502:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    2506:	0a 91       	R2 = [P1];
    2508:	07 30       	R0 = R7;
    250a:	0d 20       	JUMP.S 0x2524 <_CheckForSoonToExpireRecords+0x58>;
    250c:	00 00       	NOP;
    250e:	d1 a0       	R1 = [P2 + 0xc];
    2510:	d1 40       	R1 *= R2;
    2512:	13 a3       	R3 = [P2 + 0x30];
    2514:	59 50       	R1 = R1 + R3;
    2516:	ce 52       	R3 = R6 - R1;
    2518:	83 0c       	CC = R3 < 0x0;
    251a:	04 18       	IF CC JUMP 0x2522 <_CheckForSoonToExpireRecords+0x56>;
    251c:	c8 52       	R3 = R0 - R1;
    251e:	83 0c       	CC = R3 < 0x0;
    2520:	01 07       	IF CC R0 = R1;
    2522:	52 91       	P2 = [P2];
    2524:	42 0c       	CC = P2 == 0x0;
    2526:	f3 17       	IF !CC JUMP 0x250c <_CheckForSoonToExpireRecords+0x40> (BP);
    2528:	f8 53       	R7 = R0 - R7;
    252a:	07 0d       	CC = R7 <= 0x0;
    252c:	05 18       	IF CC JUMP 0x2536 <_CheckForSoonToExpireRecords+0x6a>;
    252e:	00 0c       	CC = R0 == 0x0;
    2530:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    2532:	01 07       	IF CC R0 = R1;
    2534:	02 20       	JUMP.S 0x2538 <_CheckForSoonToExpireRecords+0x6c>;
    2536:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2538:	86 6c       	SP += 0x10;		/* ( 16) */
    253a:	27 01       	RETS = [SP++];
    253c:	30 05       	(R7:6) = [SP++];
    253e:	10 00       	RTS;

00002540 <_FindSPSInCache1>:
_FindSPSInCache1():
    2540:	e3 05       	[--SP] = (R7:4, P5:3);
    2542:	19 32       	P3 = R1;
    2544:	2d e1 34 01 	P5 = 0x134 (X);		/*		P5=0x134(308) */
    2548:	00 e8 04 00 	LINK 0x10;		/* (16) */
    254c:	20 32       	P4 = R0;
    254e:	f2 b3       	[SP + 0x3c] = R2;
    2550:	6b 5b       	P5 = P3 + P5;
    2552:	45 30       	R0 = P5;
    2554:	ff e3 56 ed 	CALL 0x0 <_AddRecordToResponseList>;
    2558:	41 e1 d5 20 	R1.H = 0x20d5;		/* (8405)	R1=0x20d50001(550830081) */
    255c:	38 30       	R7 = R0;
    255e:	01 e1 39 6b 	R1.L = 0x6b39;		/* (27449)	R1=0x20d56b39(550857529) */
    2562:	ff e3 4f ed 	CALL 0x0 <_AddRecordToResponseList>;
    2566:	82 c6 d0 83 	R1 = R0 >> 0x6;
    256a:	5a a0       	R2 = [P3 + 0x4];
    256c:	20 e1 f3 01 	R0 = 0x1f3 (X);		/*		R0=0x1f3(499) */
    2570:	c1 40       	R1 *= R0;
    2572:	f5 bc       	[SP + 0xc] = P5;
    2574:	4f 52       	R1 = R7 - R1;
    2576:	44 30       	R0 = P4;
    2578:	ff e3 36 ff 	CALL 0x23e4 <_CacheGroupForName>;
    257c:	10 32       	P2 = R0;
    257e:	42 0c       	CC = P2 == 0x0;
    2580:	03 1c       	IF CC JUMP 0x2586 <_FindSPSInCache1+0x46> (BP);
    2582:	95 ac       	P5 = [P2 + 0x8];
    2584:	02 20       	JUMP.S 0x2588 <_FindSPSInCache1+0x48>;
    2586:	05 68       	P5 = 0x0 (X);		/*		P5=0x0(  0) */
    2588:	27 e1 09 3d 	R7 = 0x3d09 (X);		/*		R7=0x3d09(15625) */
    258c:	4f e1 01 00 	FP.H = 0x1;		/* (  1)	FP=0x10074 */
    2590:	37 4f       	R7 <<= 0x6;
    2592:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
    2594:	0f e1 a0 86 	FP.L = 0x86a0;		/* (-31072)	FP=0x186a0 */
    2598:	a2 20       	JUMP.S 0x26dc <_FindSPSInCache1+0x19c>;
    259a:	61 60       	R1 = 0xc (X);		/*		R1=0xc( 12) */
    259c:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    259e:	08 08       	CC = R0 == R1;
    25a0:	9c 14       	IF !CC JUMP 0x26d8 <_FindSPSInCache1+0x198> (BP);
    25a2:	28 a6       	R0 = W[P5 + 0x10] (Z);
    25a4:	28 0e       	CC = R0 <= 0x5 (IU);
    25a6:	99 1c       	IF CC JUMP 0x26d8 <_FindSPSInCache1+0x198> (BP);
    25a8:	f0 af       	P0 = [SP + 0x3c];
    25aa:	45 08       	CC = P5 == P0;
    25ac:	96 18       	IF CC JUMP 0x26d8 <_FindSPSInCache1+0x198>;
    25ae:	31 e5 10 00 	P1 = [SP + 0x40];
    25b2:	4d 08       	CC = P5 == P1;
    25b4:	92 18       	IF CC JUMP 0x26d8 <_FindSPSInCache1+0x198>;
    25b6:	6d 30       	R5 = P5;
    25b8:	25 64       	R5 += 0x4;		/* (  4) */
    25ba:	05 30       	R0 = R5;
    25bc:	4b 30       	R1 = P3;
    25be:	ff e3 21 ed 	CALL 0x0 <_AddRecordToResponseList>;
    25c2:	00 0c       	CC = R0 == 0x0;
    25c4:	8a 1c       	IF CC JUMP 0x26d8 <_FindSPSInCache1+0x198> (BP);
    25c6:	e9 a4       	R1 = W[P5 + 0x6] (Z);
    25c8:	60 e4 1b 16 	R0 = W[P4 + 0x2c36] (Z);
    25cc:	01 08       	CC = R1 == R0;
    25ce:	1c 14       	IF !CC JUMP 0x2606 <_FindSPSInCache1+0xc6> (BP);
    25d0:	29 a5       	R1 = W[P5 + 0x8] (Z);
    25d2:	60 e4 1c 16 	R0 = W[P4 + 0x2c38] (Z);
    25d6:	01 08       	CC = R1 == R0;
    25d8:	17 14       	IF !CC JUMP 0x2606 <_FindSPSInCache1+0xc6> (BP);
    25da:	29 a6       	R1 = W[P5 + 0x10] (Z);
    25dc:	60 e4 20 16 	R0 = W[P4 + 0x2c40] (Z);
    25e0:	01 08       	CC = R1 == R0;
    25e2:	12 14       	IF !CC JUMP 0x2606 <_FindSPSInCache1+0xc6> (BP);
    25e4:	a9 a1       	R1 = [P5 + 0x18];
    25e6:	20 e4 12 0b 	R0 = [P4 + 0x2c48];
    25ea:	01 08       	CC = R1 == R0;
    25ec:	0d 14       	IF !CC JUMP 0x2606 <_FindSPSInCache1+0xc6> (BP);
    25ee:	21 e4 15 0b 	R1 = [P4 + 0x2c54];
    25f2:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    25f6:	21 64       	R1 += 0x4;		/* (  4) */
    25f8:	05 30       	R0 = R5;
    25fa:	02 e1 00 00 	R2.L = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    25fe:	ff e3 01 ed 	CALL 0x0 <_AddRecordToResponseList>;
    2602:	00 0c       	CC = R0 == 0x0;
    2604:	6a 14       	IF !CC JUMP 0x26d8 <_FindSPSInCache1+0x198> (BP);
    2606:	00 00       	NOP;
    2608:	6a ae       	P2 = [P5 + 0x24];
    260a:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
    260e:	20 0e       	CC = R0 <= 0x4 (IU);
    2610:	5e 1c       	IF CC JUMP 0x26cc <_FindSPSInCache1+0x18c> (BP);
    2612:	95 e5 05 00 	R5 = B[P2 + 0x5] (X);
    2616:	0d 30       	R1 = R5;
    2618:	81 66       	R1 += -0x30;		/* (-48) */
    261a:	49 43       	R1 = R1.B (Z);
    261c:	4a 60       	R2 = 0x9 (X);		/*		R2=0x9(  9) */
    261e:	11 0a       	CC = R1 <= R2 (IU);
    2620:	56 14       	IF !CC JUMP 0x26cc <_FindSPSInCache1+0x18c> (BP);
    2622:	93 e5 06 00 	R3 = B[P2 + 0x6] (X);
    2626:	0b 30       	R1 = R3;
    2628:	81 66       	R1 += -0x30;		/* (-48) */
    262a:	49 43       	R1 = R1.B (Z);
    262c:	11 0a       	CC = R1 <= R2 (IU);
    262e:	4f 14       	IF !CC JUMP 0x26cc <_FindSPSInCache1+0x18c> (BP);
    2630:	92 e5 08 00 	R2 = B[P2 + 0x8] (X);
    2634:	0a 30       	R1 = R2;
    2636:	81 66       	R1 += -0x30;		/* (-48) */
    2638:	4c 43       	R4 = R1.B (Z);
    263a:	49 60       	R1 = 0x9 (X);		/*		R1=0x9(  9) */
    263c:	0c 0a       	CC = R4 <= R1 (IU);
    263e:	47 14       	IF !CC JUMP 0x26cc <_FindSPSInCache1+0x18c> (BP);
    2640:	91 e5 09 00 	R1 = B[P2 + 0x9] (X);
    2644:	09 32       	P1 = R1;
    2646:	48 68       	P0 = 0x9 (X);		/*		P0=0x9(  9) */
    2648:	81 6e       	P1 += -0x30;		/* (-48) */
    264a:	61 30       	R4 = P1;
    264c:	64 43       	R4 = R4.B (Z);
    264e:	0c 32       	P1 = R4;
    2650:	41 0a       	CC = P1 <= P0 (IU);
    2652:	3d 14       	IF !CC JUMP 0x26cc <_FindSPSInCache1+0x18c> (BP);
    2654:	54 60       	R4 = 0xa (X);		/*		R4=0xa( 10) */
    2656:	20 0a       	CC = R0 <= R4 (IU);
    2658:	14 1c       	IF CC JUMP 0x2680 <_FindSPSInCache1+0x140> (BP);
    265a:	90 e4 07 00 	R0 = B[P2 + 0x7] (Z);
    265e:	6c 61       	R4 = 0x2d (X);		/*		R4=0x2d( 45) */
    2660:	20 08       	CC = R0 == R4;
    2662:	0f 14       	IF !CC JUMP 0x2680 <_FindSPSInCache1+0x140> (BP);
    2664:	44 e1 2d 39 	R4.H = 0x392d;		/* (14637)	R4=0x392d002d(959250477) */
    2668:	90 a0       	R0 = [P2 + 0x8];
    266a:	04 e1 39 39 	R4.L = 0x3939;		/* (14649)	R4=0x392d3939(959265081) */
    266e:	20 08       	CC = R0 == R4;
    2670:	08 14       	IF !CC JUMP 0x2680 <_FindSPSInCache1+0x140> (BP);
    2672:	44 e1 39 39 	R4.H = 0x3939;		/* (14649)	R4=0x39393939(960051513) */
    2676:	d0 a0       	R0 = [P2 + 0xc];
    2678:	04 e1 39 2d 	R4.L = 0x2d39;		/* (11577)	R4=0x39392d39(960048441) */
    267c:	20 08       	CC = R0 == R4;
    267e:	27 18       	IF CC JUMP 0x26cc <_FindSPSInCache1+0x18c>;
    2680:	6d 43       	R5 = R5.B (Z);
    2682:	54 e1 ae ff 	M0.H = 0xffae;		/* (-82)	M0=0xffae2244(-5365180) */
    2686:	14 e1 b0 9e 	M0.L = 0x9eb0;		/* (-24912)	M0=0xffae9eb0(-5333328) */
    268a:	90 e4 0c 00 	R0 = B[P2 + 0xc] (Z);
    268e:	00 34       	I0 = R0;
    2690:	47 30       	R0 = FP;
    2692:	c5 40       	R5 *= R0;
    2694:	60 9e       	I0 += M0;
    2696:	25 34       	M0 = R5;
    2698:	20 e1 10 27 	R0 = 0x2710 (X);		/*		R0=0x2710(10000) */
    269c:	5b 43       	R3 = R3.B (Z);
    269e:	c3 40       	R3 *= R0;
    26a0:	60 9e       	I0 += M0;
    26a2:	23 34       	M0 = R3;
    26a4:	20 e1 e8 03 	R0 = 0x3e8 (X);		/*		R0=0x3e8(1000) */
    26a8:	52 43       	R2 = R2.B (Z);
    26aa:	c2 40       	R2 *= R0;
    26ac:	60 9e       	I0 += M0;
    26ae:	22 34       	M0 = R2;
    26b0:	20 e1 64 00 	R0 = 0x64 (X);		/*		R0=0x64(100) */
    26b4:	49 43       	R1 = R1.B (Z);
    26b6:	c1 40       	R1 *= R0;
    26b8:	60 9e       	I0 += M0;
    26ba:	21 34       	M0 = R1;
    26bc:	50 60       	R0 = 0xa (X);		/*		R0=0xa( 10) */
    26be:	91 e4 0b 00 	R1 = B[P2 + 0xb] (Z);
    26c2:	c1 40       	R1 *= R0;
    26c4:	60 9e       	I0 += M0;
    26c6:	90 30       	R2 = I0;
    26c8:	0a 50       	R0 = R2 + R1;
    26ca:	04 20       	JUMP.S 0x26d2 <_FindSPSInCache1+0x192>;
    26cc:	20 e1 09 3d 	R0 = 0x3d09 (X);		/*		R0=0x3d09(15625) */
    26d0:	30 4f       	R0 <<= 0x6;
    26d2:	07 0a       	CC = R7 <= R0 (IU);
    26d4:	38 06       	IF !CC R7 = R0;
    26d6:	75 06       	IF !CC R6 = P5;
    26d8:	00 00       	NOP;
    26da:	6d 91       	P5 = [P5];
    26dc:	45 0c       	CC = P5 == 0x0;
    26de:	5e 17       	IF !CC JUMP 0x259a <_FindSPSInCache1+0x5a> (BP);
    26e0:	86 6c       	SP += 0x10;		/* ( 16) */
    26e2:	77 90       	FP = [SP++];
    26e4:	06 30       	R0 = R6;
    26e6:	27 01       	RETS = [SP++];
    26e8:	a3 05       	(R7:4, P5:3) = [SP++];
    26ea:	10 00       	RTS;

000026ec <_mDNS_AddressIsLocalSubnet>:
_mDNS_AddressIsLocalSubnet():
    26ec:	0a 32       	P1 = R2;
    26ee:	10 32       	P2 = R0;
    26f0:	22 60       	R2 = 0x4 (X);		/*		R2=0x4(  4) */
    26f2:	08 91       	R0 = [P1];
    26f4:	10 08       	CC = R0 == R2;
    26f6:	24 14       	IF !CC JUMP 0x273e <_mDNS_AddressIsLocalSubnet+0x52> (BP);
    26f8:	88 a4       	R0 = W[P1 + 0x4] (Z);
    26fa:	82 e1 a9 fe 	R2 = 0xfea9 (Z);		/*		R2=0xfea9(65193) */
    26fe:	10 08       	CC = R0 == R2;
    2700:	6c 1c       	IF CC JUMP 0x27d8 <_mDNS_AddressIsLocalSubnet+0xec> (BP);
    2702:	12 e5 f7 07 	P2 = [P2 + 0x1fdc];
    2706:	19 20       	JUMP.S 0x2738 <_mDNS_AddressIsLocalSubnet+0x4c>;
    2708:	22 60       	R2 = 0x4 (X);		/*		R2=0x4(  4) */
    270a:	10 e4 11 05 	R0 = [P2 + 0x1444];
    270e:	10 08       	CC = R0 == R2;
    2710:	12 14       	IF !CC JUMP 0x2734 <_mDNS_AddressIsLocalSubnet+0x48> (BP);
    2712:	10 e4 10 05 	R0 = [P2 + 0x1440];
    2716:	08 08       	CC = R0 == R1;
    2718:	0e 14       	IF !CC JUMP 0x2734 <_mDNS_AddressIsLocalSubnet+0x48> (BP);
    271a:	90 e4 b5 14 	R0 = B[P2 + 0x14b5] (Z);
    271e:	00 0c       	CC = R0 == 0x0;
    2720:	0a 1c       	IF CC JUMP 0x2734 <_mDNS_AddressIsLocalSubnet+0x48> (BP);
    2722:	4a a0       	R2 = [P1 + 0x4];
    2724:	10 e4 12 05 	R0 = [P2 + 0x1448];
    2728:	02 58       	R0 = R2 ^ R0;
    272a:	12 e4 17 05 	R2 = [P2 + 0x145c];
    272e:	10 54       	R0 = R0 & R2;
    2730:	00 0c       	CC = R0 == 0x0;
    2732:	53 1c       	IF CC JUMP 0x27d8 <_mDNS_AddressIsLocalSubnet+0xec> (BP);
    2734:	00 00       	NOP;
    2736:	52 91       	P2 = [P2];
    2738:	42 0c       	CC = P2 == 0x0;
    273a:	e7 17       	IF !CC JUMP 0x2708 <_mDNS_AddressIsLocalSubnet+0x1c> (BP);
    273c:	4c 20       	JUMP.S 0x27d4 <_mDNS_AddressIsLocalSubnet+0xe8>;
    273e:	32 60       	R2 = 0x6 (X);		/*		R2=0x6(  6) */
    2740:	10 08       	CC = R0 == R2;
    2742:	49 14       	IF !CC JUMP 0x27d4 <_mDNS_AddressIsLocalSubnet+0xe8> (BP);
    2744:	88 e4 04 00 	R0 = B[P1 + 0x4] (Z);
    2748:	22 e1 fe 00 	R2 = 0xfe (X);		/*		R2=0xfe(254) */
    274c:	10 08       	CC = R0 == R2;
    274e:	0a 14       	IF !CC JUMP 0x2762 <_mDNS_AddressIsLocalSubnet+0x76> (BP);
    2750:	8a e4 05 00 	R2 = B[P1 + 0x5] (Z);
    2754:	20 e1 c0 00 	R0 = 0xc0 (X);		/*		R0=0xc0(192) */
    2758:	02 54       	R0 = R2 & R0;
    275a:	22 e1 80 00 	R2 = 0x80 (X);		/*		R2=0x80(128) */
    275e:	10 08       	CC = R0 == R2;
    2760:	3c 1c       	IF CC JUMP 0x27d8 <_mDNS_AddressIsLocalSubnet+0xec> (BP);
    2762:	00 00       	NOP;
    2764:	12 e5 f7 07 	P2 = [P2 + 0x1fdc];
    2768:	34 20       	JUMP.S 0x27d0 <_mDNS_AddressIsLocalSubnet+0xe4>;
    276a:	32 60       	R2 = 0x6 (X);		/*		R2=0x6(  6) */
    276c:	10 e4 11 05 	R0 = [P2 + 0x1444];
    2770:	10 08       	CC = R0 == R2;
    2772:	2d 14       	IF !CC JUMP 0x27cc <_mDNS_AddressIsLocalSubnet+0xe0> (BP);
    2774:	10 e4 10 05 	R0 = [P2 + 0x1440];
    2778:	08 08       	CC = R0 == R1;
    277a:	29 14       	IF !CC JUMP 0x27cc <_mDNS_AddressIsLocalSubnet+0xe0> (BP);
    277c:	90 e4 b5 14 	R0 = B[P2 + 0x14b5] (Z);
    2780:	00 0c       	CC = R0 == 0x0;
    2782:	25 1c       	IF CC JUMP 0x27cc <_mDNS_AddressIsLocalSubnet+0xe0> (BP);
    2784:	4a a0       	R2 = [P1 + 0x4];
    2786:	10 e4 12 05 	R0 = [P2 + 0x1448];
    278a:	02 58       	R0 = R2 ^ R0;
    278c:	12 e4 17 05 	R2 = [P2 + 0x145c];
    2790:	10 54       	R0 = R0 & R2;
    2792:	00 0c       	CC = R0 == 0x0;
    2794:	1c 14       	IF !CC JUMP 0x27cc <_mDNS_AddressIsLocalSubnet+0xe0> (BP);
    2796:	8a a0       	R2 = [P1 + 0x8];
    2798:	10 e4 13 05 	R0 = [P2 + 0x144c];
    279c:	02 58       	R0 = R2 ^ R0;
    279e:	12 e4 18 05 	R2 = [P2 + 0x1460];
    27a2:	10 54       	R0 = R0 & R2;
    27a4:	00 0c       	CC = R0 == 0x0;
    27a6:	13 14       	IF !CC JUMP 0x27cc <_mDNS_AddressIsLocalSubnet+0xe0> (BP);
    27a8:	ca a0       	R2 = [P1 + 0xc];
    27aa:	10 e4 14 05 	R0 = [P2 + 0x1450];
    27ae:	02 58       	R0 = R2 ^ R0;
    27b0:	12 e4 19 05 	R2 = [P2 + 0x1464];
    27b4:	10 54       	R0 = R0 & R2;
    27b6:	00 0c       	CC = R0 == 0x0;
    27b8:	0a 14       	IF !CC JUMP 0x27cc <_mDNS_AddressIsLocalSubnet+0xe0> (BP);
    27ba:	0a a1       	R2 = [P1 + 0x10];
    27bc:	10 e4 15 05 	R0 = [P2 + 0x1454];
    27c0:	02 58       	R0 = R2 ^ R0;
    27c2:	12 e4 1a 05 	R2 = [P2 + 0x1468];
    27c6:	10 54       	R0 = R0 & R2;
    27c8:	00 0c       	CC = R0 == 0x0;
    27ca:	07 1c       	IF CC JUMP 0x27d8 <_mDNS_AddressIsLocalSubnet+0xec> (BP);
    27cc:	00 00       	NOP;
    27ce:	52 91       	P2 = [P2];
    27d0:	42 0c       	CC = P2 == 0x0;
    27d2:	cc 17       	IF !CC JUMP 0x276a <_mDNS_AddressIsLocalSubnet+0x7e> (BP);
    27d4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    27d6:	02 20       	JUMP.S 0x27da <_mDNS_AddressIsLocalSubnet+0xee>;
    27d8:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    27da:	10 00       	RTS;

000027dc <_InterfaceNameForID>:
_InterfaceNameForID():
    27dc:	10 32       	P2 = R0;
    27de:	67 01       	[--SP] = RETS;
    27e0:	a6 6f       	SP += -0xc;		/* (-12) */
    27e2:	10 e4 f7 07 	R0 = [P2 + 0x1fdc];
    27e6:	ff e3 1d f9 	CALL 0x1a20 <_FirstInterfaceForID.clone.0>;
    27ea:	00 0c       	CC = R0 == 0x0;
    27ec:	05 18       	IF CC JUMP 0x27f6 <_InterfaceNameForID+0x1a>;
    27ee:	21 e1 74 14 	R1 = 0x1474 (X);		/*		R1=0x1474(5236) */
    27f2:	08 50       	R0 = R0 + R1;
    27f4:	02 20       	JUMP.S 0x27f8 <_InterfaceNameForID+0x1c>;
    27f6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    27f8:	66 6c       	SP += 0xc;		/* ( 12) */
    27fa:	27 01       	RETS = [SP++];
    27fc:	10 00       	RTS;
	...

00002800 <_ScheduleNextCacheCheckTime>:
_ScheduleNextCacheCheckTime():
    2800:	10 32       	P2 = R0;
    2802:	20 e1 4a 02 	R0 = 0x24a (X);		/*		R0=0x24a(586) */
    2806:	41 41       	R1 = (R1 + R0) << 0x2;
    2808:	01 32       	P0 = R1;
    280a:	42 5a       	P1 = P2 + P0;
    280c:	08 91       	R0 = [P1];
    280e:	10 52       	R0 = R0 - R2;
    2810:	00 0d       	CC = R0 <= 0x0;
    2812:	02 1c       	IF CC JUMP 0x2816 <_ScheduleNextCacheCheckTime+0x16> (BP);
    2814:	0a 93       	[P1] = R2;
    2816:	00 00       	NOP;
    2818:	10 e4 3c 00 	R0 = [P2 + 0xf0];
    281c:	10 52       	R0 = R0 - R2;
    281e:	00 0d       	CC = R0 <= 0x0;
    2820:	03 18       	IF CC JUMP 0x2826 <_ScheduleNextCacheCheckTime+0x26>;
    2822:	12 e6 3c 00 	[P2 + 0xf0] = R2;
    2826:	10 00       	RTS;

00002828 <_SetNextCacheCheckTimeForRecord>:
_SetNextCacheCheckTimeForRecord():
    2828:	e5 05       	[--SP] = (R7:4, P5:5);
    282a:	29 32       	P5 = R1;
    282c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    2830:	20 30       	R4 = R0;
    2832:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    2836:	10 91       	R0 = [P2];
    2838:	ef a0       	R7 = [P5 + 0xc];
    283a:	c7 40       	R7 *= R0;
    283c:	2d a3       	R5 = [P5 + 0x30];
    283e:	67 01       	[--SP] = RETS;
    2840:	6f 51       	R5 = R7 + R5;
    2842:	28 e4 10 00 	R0 = [P5 + 0x40];
    2846:	a6 6f       	SP += -0xc;		/* (-12) */
    2848:	ad b3       	[P5 + 0x38] = R5;
    284a:	00 0c       	CC = R0 == 0x0;
    284c:	1a 1c       	IF CC JUMP 0x2880 <_SetNextCacheCheckTimeForRecord+0x58> (BP);
    284e:	2e e4 11 00 	R6 = [P5 + 0x44];
    2852:	1e 0e       	CC = R6 <= 0x3 (IU);
    2854:	16 14       	IF !CC JUMP 0x2880 <_SetNextCacheCheckTimeForRecord+0x58> (BP);
    2856:	a1 60       	R1 = 0x14 (X);		/*		R1=0x14( 20) */
    2858:	07 30       	R0 = R7;
    285a:	ff e3 d3 eb 	CALL 0x0 <_AddRecordToResponseList>;
    285e:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
    2860:	b1 53       	R6 = R1 - R6;
    2862:	f0 40       	R0 *= R6;
    2864:	41 e1 eb 51 	R1.H = 0x51eb;		/* (20971)	R1=0x51eb0004(1374355460) */
    2868:	85 53       	R6 = R5 - R0;
    286a:	ae b3       	[P5 + 0x38] = R6;
    286c:	01 e1 1f 85 	R1.L = 0x851f;		/* (-31457)	R1=0x51eb851f(1374389535) */
    2870:	07 30       	R0 = R7;
    2872:	ff e3 c7 eb 	CALL 0x0 <_AddRecordToResponseList>;
    2876:	20 4e       	R0 >>= 0x4;
    2878:	ff e3 c4 eb 	CALL 0x0 <_AddRecordToResponseList>;
    287c:	b0 51       	R6 = R0 + R6;
    287e:	ae b3       	[P5 + 0x38] = R6;
    2880:	00 00       	NOP;
    2882:	28 a2       	R0 = [P5 + 0x20];
    2884:	ff e3 be eb 	CALL 0x0 <_AddRecordToResponseList>;
    2888:	41 e1 d5 20 	R1.H = 0x20d5;		/* (8405)	R1=0x20d5851f(550864159) */
    288c:	38 30       	R7 = R0;
    288e:	01 e1 39 6b 	R1.L = 0x6b39;		/* (27449)	R1=0x20d56b39(550857529) */
    2892:	ff e3 b7 eb 	CALL 0x0 <_AddRecordToResponseList>;
    2896:	82 c6 d0 8d 	R6 = R0 >> 0x6;
    289a:	20 e1 f3 01 	R0 = 0x1f3 (X);		/*		R0=0x1f3(499) */
    289e:	c6 40       	R6 *= R0;
    28a0:	28 e4 10 00 	R0 = [P5 + 0x40];
    28a4:	b7 53       	R6 = R7 - R6;
    28a6:	af a3       	R7 = [P5 + 0x38];
    28a8:	00 0c       	CC = R0 == 0x0;
    28aa:	09 14       	IF !CC JUMP 0x28bc <_SetNextCacheCheckTimeForRecord+0x94> (BP);
    28ac:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    28b0:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    28b4:	e0 61       	R0 = 0x3c (X);		/*		R0=0x3c( 60) */
    28b6:	11 91       	R1 = [P2];
    28b8:	c8 40       	R0 *= R1;
    28ba:	24 20       	JUMP.S 0x2902 <_SetNextCacheCheckTimeForRecord+0xda>;
    28bc:	00 00       	NOP;
    28be:	28 e4 11 00 	R0 = [P5 + 0x44];
    28c2:	18 0e       	CC = R0 <= 0x3 (IU);
    28c4:	e9 a0       	R1 = [P5 + 0xc];
    28c6:	09 14       	IF !CC JUMP 0x28d8 <_SetNextCacheCheckTimeForRecord+0xb0> (BP);
    28c8:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    28cc:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    28d0:	10 91       	R0 = [P2];
    28d2:	c8 40       	R0 *= R1;
    28d4:	91 61       	R1 = 0x32 (X);		/*		R1=0x32( 50) */
    28d6:	12 20       	JUMP.S 0x28fa <_SetNextCacheCheckTimeForRecord+0xd2>;
    28d8:	50 60       	R0 = 0xa (X);		/*		R0=0xa( 10) */
    28da:	01 0a       	CC = R1 <= R0 (IU);
    28dc:	07 1c       	IF CC JUMP 0x28ea <_SetNextCacheCheckTimeForRecord+0xc2> (BP);
    28de:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    28e2:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    28e6:	10 91       	R0 = [P2];
    28e8:	0d 20       	JUMP.S 0x2902 <_SetNextCacheCheckTimeForRecord+0xda>;
    28ea:	01 0c       	CC = R1 == 0x0;
    28ec:	0a 1c       	IF CC JUMP 0x2900 <_SetNextCacheCheckTimeForRecord+0xd8> (BP);
    28ee:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    28f2:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    28f6:	10 91       	R0 = [P2];
    28f8:	51 60       	R1 = 0xa (X);		/*		R1=0xa( 10) */
    28fa:	ff e3 83 eb 	CALL 0x0 <_AddRecordToResponseList>;
    28fe:	02 20       	JUMP.S 0x2902 <_SetNextCacheCheckTimeForRecord+0xda>;
    2900:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2902:	b8 50       	R2 = R0 + R7;
    2904:	66 6c       	SP += 0xc;		/* ( 12) */
    2906:	27 01       	RETS = [SP++];
    2908:	04 30       	R0 = R4;
    290a:	0e 30       	R1 = R6;
    290c:	a5 05       	(R7:4, P5:5) = [SP++];
    290e:	ff e2 79 ff 	JUMP.L 0x2800 <_ScheduleNextCacheCheckTime>;
	...

00002914 <_mDNS_Reconfirm_internal>:
_mDNS_Reconfirm_internal():
    2914:	f4 05       	[--SP] = (R7:6, P5:4);
    2916:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    291a:	21 32       	P4 = R1;
    291c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    2920:	11 91       	R1 = [P2];
    2922:	82 c6 11 8e 	R7 = R1 << 0x2;
    2926:	cf 51       	R7 = R7 + R1;
    2928:	28 32       	P5 = R0;
    292a:	ba 09       	CC = R2 < R7 (IU);
    292c:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    292e:	3a 06       	IF !CC R7 = R2;
    2930:	e0 4f       	R0 <<= 0x1c;
    2932:	07 0a       	CC = R7 <= R0 (IU);
    2934:	38 06       	IF !CC R7 = R0;
    2936:	28 e4 37 00 	R0 = [P5 + 0xdc];
    293a:	26 a3       	R6 = [P4 + 0x30];
    293c:	86 53       	R6 = R6 - R0;
    293e:	e0 a0       	R0 = [P4 + 0xc];
    2940:	c8 40       	R0 *= R1;
    2942:	67 01       	[--SP] = RETS;
    2944:	86 51       	R6 = R6 + R0;
    2946:	41 e1 aa aa 	R1.H = 0xaaaa;		/* (-21846)	R1=0xaaaa000a(-1431699446) */
    294a:	a6 6f       	SP += -0xc;		/* (-12) */
    294c:	82 c6 17 80 	R0 = R7 << 0x2;
    2950:	01 e1 ab aa 	R1.L = 0xaaab;		/* (-21845)	R1=0xaaaaaaab(-1431655765) */
    2954:	ff e3 56 eb 	CALL 0x0 <_AddRecordToResponseList>;
    2958:	08 4e       	R0 >>= 0x1;
    295a:	06 09       	CC = R6 <= R0;
    295c:	32 1c       	IF CC JUMP 0x29c0 <_mDNS_Reconfirm_internal+0xac> (BP);
    295e:	28 e4 43 00 	R0 = [P5 + 0x10c];
    2962:	00 0c       	CC = R0 == 0x0;
    2964:	09 14       	IF !CC JUMP 0x2976 <_mDNS_Reconfirm_internal+0x62> (BP);
    2966:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
    2968:	40 e1 ff 3f 	R0.H = 0x3fff;		/* (16383)	R0=0x3fffffff(1073741823) */
    296c:	ff e3 4a eb 	CALL 0x0 <_AddRecordToResponseList>;
    2970:	08 64       	R0 += 0x1;		/* (  1) */
    2972:	28 e6 43 00 	[P5 + 0x10c] = R0;
    2976:	41 e1 aa aa 	R1.H = 0xaaaa;		/* (-21846)	R1=0xaaaaaaab(-1431655765) */
    297a:	07 30       	R0 = R7;
    297c:	01 e1 ab aa 	R1.L = 0xaaab;		/* (-21845)	R1=0xaaaaaaab(-1431655765) */
    2980:	ff e3 40 eb 	CALL 0x0 <_AddRecordToResponseList>;
    2984:	82 c6 f8 83 	R1 = R0 >> 0x1;
    2988:	28 e4 43 00 	R0 = [P5 + 0x10c];
    298c:	09 64       	R1 += 0x1;		/* (  1) */
    298e:	ff e3 39 eb 	CALL 0x0 <_AddRecordToResponseList>;
    2992:	f8 51       	R7 = R0 + R7;
    2994:	82 c6 17 84 	R2 = R7 << 0x2;
    2998:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    299c:	28 e4 37 00 	R0 = [P5 + 0xdc];
    29a0:	d7 53       	R7 = R7 - R2;
    29a2:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    29a6:	11 91       	R1 = [P2];
    29a8:	c7 51       	R7 = R7 + R0;
    29aa:	01 30       	R0 = R1;
    29ac:	f8 67       	R0 += -0x1;		/* ( -1) */
    29ae:	27 b3       	[P4 + 0x30] = R7;
    29b0:	10 50       	R0 = R0 + R2;
    29b2:	ff e3 27 eb 	CALL 0x0 <_AddRecordToResponseList>;
    29b6:	e0 b0       	[P4 + 0xc] = R0;
    29b8:	45 30       	R0 = P5;
    29ba:	4c 30       	R1 = P4;
    29bc:	ff e3 36 ff 	CALL 0x2828 <_SetNextCacheCheckTimeForRecord>;
    29c0:	66 6c       	SP += 0xc;		/* ( 12) */
    29c2:	27 01       	RETS = [SP++];
    29c4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    29c6:	b4 05       	(R7:6, P5:4) = [SP++];
    29c8:	10 00       	RTS;
	...

000029cc <_ReconfirmAntecedents>:
_ReconfirmAntecedents():
    29cc:	e3 05       	[--SP] = (R7:4, P5:3);
    29ce:	20 32       	P4 = R0;
    29d0:	24 e1 28 09 	R4 = 0x928 (X);		/*		R4=0x928(2344) */
    29d4:	00 e8 07 00 	LINK 0x1c;		/* (28) */
    29d8:	20 51       	R4 = R0 + R4;
    29da:	35 e4 13 00 	R5 = [SP + 0x4c];
    29de:	20 60       	R0 = 0x4 (X);		/*		R0=0x4(  4) */
    29e0:	31 e6 11 00 	[SP + 0x44] = R1;
    29e4:	32 e6 12 00 	[SP + 0x48] = R2;
    29e8:	05 09       	CC = R5 <= R0;
    29ea:	0d 30       	R1 = R5;
    29ec:	54 30       	R2 = P4;
    29ee:	2f e1 5c 01 	FP = 0x15c (X);		/*		FP=0x15c(348) */
    29f2:	47 e1 00 00 	R7.H = 0x0;		/* (  0)	R7=0x3d09(15625) */
    29f6:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0x0 <_AddRecordToResponseList>(  0) */
    29fa:	00 02       	R0 = CC;
    29fc:	09 64       	R1 += 0x1;		/* (  1) */
    29fe:	ba 65       	R2 += 0x37;		/* ( 55) */
    2a00:	fc 5b       	FP = P4 + FP;
    2a02:	07 e1 00 00 	R7.L = 0x0;		/* (  0)	R7=0x0 <_AddRecordToResponseList>(  0) */
    2a06:	06 e1 00 00 	R6.L = 0x0;		/* (  0)	R6=0x0 <_AddRecordToResponseList>(  0) */
    2a0a:	b0 e6 13 00 	B[SP + 0x13] = R0;
    2a0e:	71 b1       	[SP + 0x14] = R1;
    2a10:	b2 b1       	[SP + 0x18] = R2;
    2a12:	00 00       	NOP;
    2a14:	7b 90       	P3 = [FP++];
    2a16:	62 20       	JUMP.S 0x2ada <_ReconfirmAntecedents+0x10e>;
    2a18:	00 00       	NOP;
    2a1a:	9d ac       	P5 = [P3 + 0x8];
    2a1c:	5c 20       	JUMP.S 0x2ad4 <_ReconfirmAntecedents+0x108>;
    2a1e:	00 00       	NOP;
    2a20:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    2a22:	10 0c       	CC = R0 == 0x2;
    2a24:	0a 18       	IF CC JUMP 0x2a38 <_ReconfirmAntecedents+0x6c>;
    2a26:	29 60       	R1 = 0x5 (X);		/*		R1=0x5(  5) */
    2a28:	08 08       	CC = R0 == R1;
    2a2a:	07 18       	IF CC JUMP 0x2a38 <_ReconfirmAntecedents+0x6c>;
    2a2c:	62 60       	R2 = 0xc (X);		/*		R2=0xc( 12) */
    2a2e:	10 08       	CC = R0 == R2;
    2a30:	04 18       	IF CC JUMP 0x2a38 <_ReconfirmAntecedents+0x6c>;
    2a32:	39 61       	R1 = 0x27 (X);		/*		R1=0x27( 39) */
    2a34:	08 08       	CC = R0 == R1;
    2a36:	04 14       	IF !CC JUMP 0x2a3e <_ReconfirmAntecedents+0x72> (BP);
    2a38:	68 a2       	R0 = [P5 + 0x24];
    2a3a:	20 64       	R0 += 0x4;		/* (  4) */
    2a3c:	15 20       	JUMP.S 0x2a66 <_ReconfirmAntecedents+0x9a>;
    2a3e:	7a 60       	R2 = 0xf (X);		/*		R2=0xf( 15) */
    2a40:	10 08       	CC = R0 == R2;
    2a42:	0a 18       	IF CC JUMP 0x2a56 <_ReconfirmAntecedents+0x8a>;
    2a44:	91 60       	R1 = 0x12 (X);		/*		R1=0x12( 18) */
    2a46:	08 08       	CC = R0 == R1;
    2a48:	07 18       	IF CC JUMP 0x2a56 <_ReconfirmAntecedents+0x8a>;
    2a4a:	aa 60       	R2 = 0x15 (X);		/*		R2=0x15( 21) */
    2a4c:	10 08       	CC = R0 == R2;
    2a4e:	04 18       	IF CC JUMP 0x2a56 <_ReconfirmAntecedents+0x8a>;
    2a50:	21 61       	R1 = 0x24 (X);		/*		R1=0x24( 36) */
    2a52:	08 08       	CC = R0 == R1;
    2a54:	04 14       	IF !CC JUMP 0x2a5c <_ReconfirmAntecedents+0x90> (BP);
    2a56:	68 a2       	R0 = [P5 + 0x24];
    2a58:	30 64       	R0 += 0x6;		/* (  6) */
    2a5a:	06 20       	JUMP.S 0x2a66 <_ReconfirmAntecedents+0x9a>;
    2a5c:	0a 61       	R2 = 0x21 (X);		/*		R2=0x21( 33) */
    2a5e:	10 08       	CC = R0 == R2;
    2a60:	38 14       	IF !CC JUMP 0x2ad0 <_ReconfirmAntecedents+0x104> (BP);
    2a62:	68 a2       	R0 = [P5 + 0x24];
    2a64:	50 64       	R0 += 0xa;		/* ( 10) */
    2a66:	00 0c       	CC = R0 == 0x0;
    2a68:	34 1c       	IF CC JUMP 0x2ad0 <_ReconfirmAntecedents+0x104> (BP);
    2a6a:	a9 a1       	R1 = [P5 + 0x18];
    2a6c:	32 e4 12 00 	R2 = [SP + 0x48];
    2a70:	11 08       	CC = R1 == R2;
    2a72:	2f 14       	IF !CC JUMP 0x2ad0 <_ReconfirmAntecedents+0x104> (BP);
    2a74:	31 e4 11 00 	R1 = [SP + 0x44];
    2a78:	ff e3 c4 ea 	CALL 0x0 <_AddRecordToResponseList>;
    2a7c:	00 0c       	CC = R0 == 0x0;
    2a7e:	29 1c       	IF CC JUMP 0x2ad0 <_ReconfirmAntecedents+0x104> (BP);
    2a80:	17 32       	P2 = R7;
    2a82:	10 91       	R0 = [P2];
    2a84:	00 0c       	CC = R0 == 0x0;
    2a86:	11 1c       	IF CC JUMP 0x2aa8 <_ReconfirmAntecedents+0xdc> (BP);
    2a88:	69 a2       	R1 = [P5 + 0x24];
    2a8a:	45 30       	R0 = P5;
    2a8c:	21 64       	R1 += 0x4;		/* (  4) */
    2a8e:	b2 a1       	R2 = [SP + 0x18];
    2a90:	20 64       	R0 += 0x4;		/* (  4) */
    2a92:	ff e3 b7 ea 	CALL 0x0 <_AddRecordToResponseList>;
    2a96:	f0 b0       	[SP + 0xc] = R0;
    2a98:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x24( 36) */
    2a9c:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    2a9e:	01 e1 5c 0a 	R1.L = 0xa5c;		/* (2652)	R1=0xa5c(2652) */
    2aa2:	15 30       	R2 = R5;
    2aa4:	ff e3 ae ea 	CALL 0x0 <_AddRecordToResponseList>;
    2aa8:	16 32       	P2 = R6;
    2aaa:	4d 30       	R1 = P5;
    2aac:	10 91       	R0 = [P2];
    2aae:	82 c6 10 84 	R2 = R0 << 0x2;
    2ab2:	82 50       	R2 = R2 + R0;
    2ab4:	44 30       	R0 = P4;
    2ab6:	ff e3 2f ff 	CALL 0x2914 <_mDNS_Reconfirm_internal>;
    2aba:	b0 e4 13 00 	R0 = B[SP + 0x13] (Z);
    2abe:	08 02       	CC = R0;
    2ac0:	08 14       	IF !CC JUMP 0x2ad0 <_ReconfirmAntecedents+0x104> (BP);
    2ac2:	72 ad       	P2 = [SP + 0x14];
    2ac4:	29 a2       	R1 = [P5 + 0x20];
    2ac6:	6a a1       	R2 = [P5 + 0x14];
    2ac8:	44 30       	R0 = P4;
    2aca:	f2 bc       	[SP + 0xc] = P2;
    2acc:	ff e3 80 ff 	CALL 0x29cc <_ReconfirmAntecedents>;
    2ad0:	00 00       	NOP;
    2ad2:	6d 91       	P5 = [P5];
    2ad4:	45 0c       	CC = P5 == 0x0;
    2ad6:	a4 17       	IF !CC JUMP 0x2a1e <_ReconfirmAntecedents+0x52> (BP);
    2ad8:	5b 91       	P3 = [P3];
    2ada:	43 0c       	CC = P3 == 0x0;
    2adc:	9e 17       	IF !CC JUMP 0x2a18 <_ReconfirmAntecedents+0x4c> (BP);
    2ade:	47 30       	R0 = FP;
    2ae0:	20 08       	CC = R0 == R4;
    2ae2:	98 17       	IF !CC JUMP 0x2a12 <_ReconfirmAntecedents+0x46> (BP);
    2ae4:	e6 6c       	SP += 0x1c;		/* ( 28) */
    2ae6:	77 90       	FP = [SP++];
    2ae8:	27 01       	RETS = [SP++];
    2aea:	a3 05       	(R7:4, P5:3) = [SP++];
    2aec:	10 00       	RTS;
	...

00002af0 <_SendQueries>:
_SendQueries():
    2af0:	e3 05       	[--SP] = (R7:4, P5:3);
    2af2:	28 32       	P5 = R0;
    2af4:	00 e8 08 01 	LINK 0x420;		/* (1056) */
    2af8:	28 e4 f7 07 	R0 = [P5 + 0x1fdc];
    2afc:	ff e3 82 ea 	CALL 0x0 <_AddRecordToResponseList>;
    2b00:	38 32       	FP = R0;
    2b02:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2b04:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    2b08:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    2b0c:	30 e6 07 01 	[SP + 0x41c] = R0;
    2b10:	10 91       	R0 = [P2];
    2b12:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    2b16:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    2b1a:	52 91       	P2 = [P2];
    2b1c:	77 30       	R6 = FP;
    2b1e:	70 b3       	[SP + 0x34] = R0;
    2b20:	5d 32       	P3 = P5;
    2b22:	32 bf       	[SP + 0x30] = P2;
    2b24:	2a e1 5c 01 	P2 = 0x15c (X);		/*		P2=0x15c(348) */
    2b28:	95 5a       	P2 = P5 + P2;
    2b2a:	32 e7 10 00 	[SP + 0x40] = P2;
    2b2e:	2a e1 28 09 	P2 = 0x928 (X);		/*		P2=0x928(2344) */
    2b32:	95 5a       	P2 = P5 + P2;
    2b34:	35 e4 10 00 	R5 = [SP + 0x40];
    2b38:	32 e7 15 00 	[SP + 0x54] = P2;
    2b3c:	3d 32       	FP = R5;
    2b3e:	00 00       	NOP;
    2b40:	3f 90       	R7 = [FP++];
    2b42:	60 20       	JUMP.S 0x2c02 <_SendQueries+0x112>;
    2b44:	07 32       	P0 = R7;
    2b46:	85 ac       	P5 = [P0 + 0x8];
    2b48:	59 20       	JUMP.S 0x2bfa <_SendQueries+0x10a>;
    2b4a:	00 00       	NOP;
    2b4c:	2c e5 10 00 	P4 = [P5 + 0x40];
    2b50:	44 0c       	CC = P4 == 0x0;
    2b52:	52 1c       	IF CC JUMP 0x2bf6 <_SendQueries+0x106> (BP);
    2b54:	28 e4 11 00 	R0 = [P5 + 0x44];
    2b58:	18 0e       	CC = R0 <= 0x3 (IU);
    2b5a:	4e 14       	IF !CC JUMP 0x2bf6 <_SendQueries+0x106> (BP);
    2b5c:	ed a0       	R5 = [P5 + 0xc];
    2b5e:	70 a3       	R0 = [SP + 0x34];
    2b60:	c5 40       	R5 *= R0;
    2b62:	1c e4 37 00 	R4 = [P3 + 0xdc];
    2b66:	aa a3       	R2 = [P5 + 0x38];
    2b68:	94 52       	R2 = R4 - R2;
    2b6a:	f2 b2       	[SP + 0x2c] = R2;
    2b6c:	05 30       	R0 = R5;
    2b6e:	91 61       	R1 = 0x32 (X);		/*		R1=0x32( 50) */
    2b70:	ff e3 48 ea 	CALL 0x0 <_AddRecordToResponseList>;
    2b74:	f2 a2       	R2 = [SP + 0x2c];
    2b76:	82 50       	R2 = R2 + R0;
    2b78:	82 0c       	CC = R2 < 0x0;
    2b7a:	3e 18       	IF CC JUMP 0x2bf6 <_SendQueries+0x106>;
    2b7c:	61 63       	R1 = -0x14 (X);		/*		R1=0xffffffec(-20) */
    2b7e:	05 30       	R0 = R5;
    2b80:	ff e3 40 ea 	CALL 0x0 <_AddRecordToResponseList>;
    2b84:	20 51       	R4 = R0 + R4;
    2b86:	e9 a1       	R1 = [P5 + 0x1c];
    2b88:	54 32       	P2 = P4;
    2b8a:	41 68       	P1 = 0x8 (X);		/*		P1=0x8(  8) */
    2b8c:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    2b8e:	b2 e0 0d 10 	LSETUP(0x2b92 <_SendQueries+0xa2>, 0x2ba8 <_SendQueries+0xb8>) LC1 = P1;
    2b92:	10 e4 11 00 	R0 = [P2 + 0x44];
    2b96:	08 08       	CC = R0 == R1;
    2b98:	08 14       	IF !CC JUMP 0x2ba8 <_SendQueries+0xb8> (BP);
    2b9a:	10 e4 10 00 	R0 = [P2 + 0x40];
    2b9e:	20 52       	R0 = R0 - R4;
    2ba0:	80 0c       	CC = R0 < 0x0;
    2ba2:	03 14       	IF !CC JUMP 0x2ba8 <_SendQueries+0xb8> (BP);
    2ba4:	12 e6 11 00 	[P2 + 0x44] = R2;
    2ba8:	62 6c       	P2 += 0xc;		/* ( 12) */
    2baa:	20 e4 47 00 	R0 = [P4 + 0x11c];
    2bae:	00 0c       	CC = R0 == 0x0;
    2bb0:	05 1c       	IF CC JUMP 0x2bba <_SendQueries+0xca> (BP);
    2bb2:	33 a3       	R3 = [SP + 0x30];
    2bb4:	23 e6 28 00 	[P4 + 0xa0] = R3;
    2bb8:	1f 20       	JUMP.S 0x2bf6 <_SendQueries+0x106>;
    2bba:	00 00       	NOP;
    2bbc:	60 e4 99 00 	R0 = W[P4 + 0x132] (Z);
    2bc0:	00 0c       	CC = R0 == 0x0;
    2bc2:	0c 1c       	IF CC JUMP 0x2bda <_SendQueries+0xea> (BP);
    2bc4:	19 e4 37 00 	R1 = [P3 + 0xdc];
    2bc8:	20 a1       	R0 = [P4 + 0x10];
    2bca:	01 52       	R0 = R1 - R0;
    2bcc:	e0 b0       	[P4 + 0xc] = R0;
    2bce:	28 e4 11 00 	R0 = [P5 + 0x44];
    2bd2:	08 64       	R0 += 0x1;		/* (  1) */
    2bd4:	28 e6 11 00 	[P5 + 0x44] = R0;
    2bd8:	0f 20       	JUMP.S 0x2bf6 <_SendQueries+0x106>;
    2bda:	00 00       	NOP;
    2bdc:	21 e4 28 00 	R1 = [P4 + 0xa0];
    2be0:	01 0c       	CC = R1 == 0x0;
    2be2:	e8 a1       	R0 = [P5 + 0x1c];
    2be4:	04 14       	IF !CC JUMP 0x2bec <_SendQueries+0xfc> (BP);
    2be6:	20 e6 28 00 	[P4 + 0xa0] = R0;
    2bea:	06 20       	JUMP.S 0x2bf6 <_SendQueries+0x106>;
    2bec:	01 08       	CC = R1 == R0;
    2bee:	04 1c       	IF CC JUMP 0x2bf6 <_SendQueries+0x106> (BP);
    2bf0:	34 a3       	R4 = [SP + 0x30];
    2bf2:	24 e6 28 00 	[P4 + 0xa0] = R4;
    2bf6:	00 00       	NOP;
    2bf8:	6d 91       	P5 = [P5];
    2bfa:	45 0c       	CC = P5 == 0x0;
    2bfc:	a7 17       	IF !CC JUMP 0x2b4a <_SendQueries+0x5a> (BP);
    2bfe:	07 32       	P0 = R7;
    2c00:	07 91       	R7 = [P0];
    2c02:	07 0c       	CC = R7 == 0x0;
    2c04:	a0 17       	IF !CC JUMP 0x2b44 <_SendQueries+0x54> (BP);
    2c06:	31 e5 15 00 	P1 = [SP + 0x54];
    2c0a:	4f 08       	CC = FP == P1;
    2c0c:	99 17       	IF !CC JUMP 0x2b3e <_SendQueries+0x4e> (BP);
    2c0e:	1c e5 4e 00 	P4 = [P3 + 0x138];
    2c12:	3e 32       	FP = R6;
    2c14:	6b 32       	P5 = P3;
    2c16:	44 0c       	CC = P4 == 0x0;
    2c18:	11 1c       	IF CC JUMP 0x2c3a <_SendQueries+0x14a> (BP);
    2c1a:	60 e5 1a 01 	R0 = W[P4 + 0x234] (X);
    2c1e:	ff e3 f1 e9 	CALL 0x0 <_AddRecordToResponseList>;
    2c22:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    2c26:	94 5a       	P2 = P4 + P2;
    2c28:	f0 b0       	[SP + 0xc] = R0;
    2c2a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xffec(65516) */
    2c2e:	52 30       	R2 = P2;
    2c30:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2c32:	01 e1 98 0a 	R1.L = 0xa98;		/* (2712)	R1=0xa98(2712) */
    2c36:	ff e3 e5 e9 	CALL 0x0 <_AddRecordToResponseList>;
    2c3a:	2a e1 98 59 	P2 = 0x5998 (X);		/*		P2=0x5998(22936) */
    2c3e:	95 5a       	P2 = P5 + P2;
    2c40:	6a 30       	R5 = P2;
    2c42:	05 32       	P0 = R5;
    2c44:	28 e4 4c 00 	R0 = [P5 + 0x130];
    2c48:	28 e6 4e 00 	[P5 + 0x138] = R0;
    2c4c:	2a e1 ec 22 	P2 = 0x22ec (X);		/*		P2=0x22ec(8940) */
    2c50:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2c52:	47 e1 00 00 	R7.H = 0x0;		/* (  0)	R7=0x0 <_AddRecordToResponseList>(  0) */
    2c56:	2b e1 8c 59 	P3 = 0x598c (X);		/*		P3=0x598c(22924) */
    2c5a:	44 e1 00 00 	R4.H = 0x0;		/* (  0)	R4=0x928(2344) */
    2c5e:	10 5a       	P0 = P0 + P2;
    2c60:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0x0 <_AddRecordToResponseList>(  0) */
    2c64:	30 b3       	[SP + 0x30] = R0;
    2c66:	07 e1 00 00 	R7.L = 0x0;		/* (  0)	R7=0x0 <_AddRecordToResponseList>(  0) */
    2c6a:	dd 5a       	P3 = P5 + P3;
    2c6c:	04 e1 00 00 	R4.L = 0x0;		/* (  0)	R4=0x0 <_AddRecordToResponseList>(  0) */
    2c70:	70 bf       	[SP + 0x34] = P0;
    2c72:	06 e1 00 00 	R6.L = 0x0;		/* (  0)	R6=0x0 <_AddRecordToResponseList>(  0) */
    2c76:	65 32       	P4 = P5;
    2c78:	9b 20       	JUMP.S 0x2dae <_SendQueries+0x2be>;
    2c7a:	00 00       	NOP;
    2c7c:	28 e4 47 00 	R0 = [P5 + 0x11c];
    2c80:	00 0c       	CC = R0 == 0x0;
    2c82:	71 1c       	IF CC JUMP 0x2d64 <_SendQueries+0x274> (BP);
    2c84:	29 e4 28 00 	R1 = [P5 + 0xa0];
    2c88:	01 0c       	CC = R1 == 0x0;
    2c8a:	0f 14       	IF !CC JUMP 0x2ca8 <_SendQueries+0x1b8> (BP);
    2c8c:	29 a1       	R1 = [P5 + 0x10];
    2c8e:	01 0d       	CC = R1 <= 0x0;
    2c90:	6a 1c       	IF CC JUMP 0x2d64 <_SendQueries+0x274> (BP);
    2c92:	aa a3       	R2 = [P5 + 0x38];
    2c94:	02 0c       	CC = R2 == 0x0;
    2c96:	67 14       	IF !CC JUMP 0x2d64 <_SendQueries+0x274> (BP);
    2c98:	ea a0       	R2 = [P5 + 0xc];
    2c9a:	89 43       	R1 = -R1;
    2c9c:	51 52       	R1 = R1 - R2;
    2c9e:	22 e4 37 00 	R2 = [P4 + 0xdc];
    2ca2:	51 50       	R1 = R1 + R2;
    2ca4:	81 0c       	CC = R1 < 0x0;
    2ca6:	5f 1c       	IF CC JUMP 0x2d64 <_SendQueries+0x274> (BP);
    2ca8:	00 00       	NOP;
    2caa:	28 e4 30 00 	R0 = [P5 + 0xc0];
    2cae:	00 0c       	CC = R0 == 0x0;
    2cb0:	0b 14       	IF !CC JUMP 0x2cc6 <_SendQueries+0x1d6> (BP);
    2cb2:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x22ec */
    2cb6:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    2cba:	44 30       	R0 = P4;
    2cbc:	11 95       	R1 = W[P2] (Z);
    2cbe:	ff e3 a1 e9 	CALL 0x0 <_AddRecordToResponseList>;
    2cc2:	28 e6 30 00 	[P5 + 0xc0] = R0;
    2cc6:	00 00       	NOP;
    2cc8:	28 e4 30 00 	R0 = [P5 + 0xc0];
    2ccc:	00 0c       	CC = R0 == 0x0;
    2cce:	31 1c       	IF CC JUMP 0x2d30 <_SendQueries+0x240> (BP);
    2cd0:	0c 32       	P1 = R4;
    2cd2:	43 30       	R0 = P3;
    2cd4:	69 e5 99 00 	R1 = W[P5 + 0x132] (X);
    2cd8:	0a 95       	R2 = W[P1] (Z);
    2cda:	ff e3 93 e9 	CALL 0x0 <_AddRecordToResponseList>;
    2cde:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    2ce2:	95 5a       	P2 = P5 + P2;
    2ce4:	f2 bc       	[SP + 0xc] = P2;
    2ce6:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    2cea:	30 b6       	W[SP + 0x10] = R0;
    2cec:	68 e5 1b 01 	R0 = W[P5 + 0x236] (X);
    2cf0:	b0 b6       	W[SP + 0x14] = R0;
    2cf2:	0d 30       	R1 = R5;
    2cf4:	72 a3       	R2 = [SP + 0x34];
    2cf6:	43 30       	R0 = P3;
    2cf8:	ff e3 84 e9 	CALL 0x0 <_AddRecordToResponseList>;
    2cfc:	16 32       	P2 = R6;
    2cfe:	10 30       	R2 = R0;
    2d00:	4b 30       	R1 = P3;
    2d02:	10 91       	R0 = [P2];
    2d04:	f0 b0       	[SP + 0xc] = R0;
    2d06:	2a e1 1c 01 	P2 = 0x11c (X);		/*		P2=0x11c(284) */
    2d0a:	28 e4 30 00 	R0 = [P5 + 0xc0];
    2d0e:	95 5a       	P2 = P5 + P2;
    2d10:	30 b1       	[SP + 0x10] = R0;
    2d12:	72 bd       	[SP + 0x14] = P2;
    2d14:	68 e5 98 00 	R0 = W[P5 + 0x130] (X);
    2d18:	30 b7       	W[SP + 0x18] = R0;
    2d1a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2d1c:	f0 b1       	[SP + 0x1c] = R0;
    2d1e:	30 b2       	[SP + 0x20] = R0;
    2d20:	44 30       	R0 = P4;
    2d22:	ff e3 6f e9 	CALL 0x0 <_AddRecordToResponseList>;
    2d26:	28 a1       	R0 = [P5 + 0x10];
    2d28:	82 c6 08 82 	R1 = R0 << 0x1;
    2d2c:	01 50       	R0 = R1 + R0;
    2d2e:	28 b1       	[P5 + 0x10] = R0;
    2d30:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0x9 */
    2d34:	08 e1 00 00 	P0.L = 0x0;		/* (  0)	P0=0x0 <_AddRecordToResponseList> */
    2d38:	21 e1 10 0e 	R1 = 0xe10 (X);		/*		R1=0xe10(3600) */
    2d3c:	00 91       	R0 = [P0];
    2d3e:	c8 40       	R0 *= R1;
    2d40:	29 a1       	R1 = [P5 + 0x10];
    2d42:	01 09       	CC = R1 <= R0;
    2d44:	02 1c       	IF CC JUMP 0x2d48 <_SendQueries+0x258> (BP);
    2d46:	28 b1       	[P5 + 0x10] = R0;
    2d48:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    2d4a:	20 e4 37 00 	R0 = [P4 + 0xdc];
    2d4e:	e9 b1       	[P5 + 0x1c] = R1;
    2d50:	29 e6 28 00 	[P5 + 0xa0] = R1;
    2d54:	e8 b0       	[P5 + 0xc] = R0;
    2d56:	28 e6 2b 00 	[P5 + 0xac] = R0;
    2d5a:	00 0c       	CC = R0 == 0x0;
    2d5c:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    2d5e:	01 07       	IF CC R0 = R1;
    2d60:	68 b1       	[P5 + 0x14] = R0;
    2d62:	1e 20       	JUMP.S 0x2d9e <_SendQueries+0x2ae>;
    2d64:	00 00       	NOP;
    2d66:	69 e4 99 00 	R1 = W[P5 + 0x132] (Z);
    2d6a:	01 0c       	CC = R1 == 0x0;
    2d6c:	19 14       	IF !CC JUMP 0x2d9e <_SendQueries+0x2ae> (BP);
    2d6e:	00 0c       	CC = R0 == 0x0;
    2d70:	17 14       	IF !CC JUMP 0x2d9e <_SendQueries+0x2ae> (BP);
    2d72:	28 a1       	R0 = [P5 + 0x10];
    2d74:	00 0d       	CC = R0 <= 0x0;
    2d76:	14 1c       	IF CC JUMP 0x2d9e <_SendQueries+0x2ae> (BP);
    2d78:	a9 a3       	R1 = [P5 + 0x38];
    2d7a:	01 0c       	CC = R1 == 0x0;
    2d7c:	11 14       	IF !CC JUMP 0x2d9e <_SendQueries+0x2ae> (BP);
    2d7e:	82 43       	R2 = -R0;
    2d80:	e9 a0       	R1 = [P5 + 0xc];
    2d82:	4a 52       	R1 = R2 - R1;
    2d84:	22 e4 37 00 	R2 = [P4 + 0xdc];
    2d88:	51 50       	R1 = R1 + R2;
    2d8a:	81 0c       	CC = R1 < 0x0;
    2d8c:	09 18       	IF CC JUMP 0x2d9e <_SendQueries+0x2ae>;
    2d8e:	0f 32       	P1 = R7;
    2d90:	09 91       	R1 = [P1];
    2d92:	29 e6 28 00 	[P5 + 0xa0] = R1;
    2d96:	31 a3       	R1 = [SP + 0x30];
    2d98:	07 c4 08 02 	R1 = MAX (R1, R0);
    2d9c:	31 b3       	[SP + 0x30] = R1;
    2d9e:	00 00       	NOP;
    2da0:	22 e5 4e 00 	P2 = [P4 + 0x138];
    2da4:	55 08       	CC = P5 == P2;
    2da6:	04 14       	IF !CC JUMP 0x2dae <_SendQueries+0x2be> (BP);
    2da8:	28 91       	R0 = [P5];
    2daa:	20 e6 4e 00 	[P4 + 0x138] = R0;
    2dae:	00 00       	NOP;
    2db0:	25 e5 4e 00 	P5 = [P4 + 0x138];
    2db4:	45 0c       	CC = P5 == 0x0;
    2db6:	1e 1c       	IF CC JUMP 0x2df2 <_SendQueries+0x302> (BP);
    2db8:	22 e5 4d 00 	P2 = [P4 + 0x134];
    2dbc:	55 08       	CC = P5 == P2;
    2dbe:	5e 17       	IF !CC JUMP 0x2c7a <_SendQueries+0x18a> (BP);
    2dc0:	19 20       	JUMP.S 0x2df2 <_SendQueries+0x302>;
    2dc2:	18 91       	R0 = [P3];
    2dc4:	00 0c       	CC = R0 == 0x0;
    2dc6:	0f 1c       	IF CC JUMP 0x2de4 <_SendQueries+0x2f4> (BP);
    2dc8:	60 e5 1a 01 	R0 = W[P4 + 0x234] (X);
    2dcc:	ff e3 1a e9 	CALL 0x0 <_AddRecordToResponseList>;
    2dd0:	5c 30       	R3 = P4;
    2dd2:	f0 b0       	[SP + 0xc] = R0;
    2dd4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1(  1) */
    2dd8:	bb 50       	R2 = R3 + R7;
    2dda:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    2ddc:	01 e1 d4 0a 	R1.L = 0xad4;		/* (2772)	R1=0xad4(2772) */
    2de0:	ff e3 10 e9 	CALL 0x0 <_AddRecordToResponseList>;
    2de4:	00 00       	NOP;
    2de6:	2a e5 4e 00 	P2 = [P5 + 0x138];
    2dea:	10 91       	R0 = [P2];
    2dec:	28 e6 4e 00 	[P5 + 0x138] = R0;
    2df0:	08 20       	JUMP.S 0x2e00 <_SendQueries+0x310>;
    2df2:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x598c */
    2df6:	6c 32       	P5 = P4;
    2df8:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
    2dfc:	27 e1 34 01 	R7 = 0x134 (X);		/*		R7=0x134(308) */
    2e00:	2c e5 4e 00 	P4 = [P5 + 0x138];
    2e04:	44 0c       	CC = P4 == 0x0;
    2e06:	de 17       	IF !CC JUMP 0x2dc2 <_SendQueries+0x2d2> (BP);
    2e08:	29 e5 37 00 	P1 = [P5 + 0xdc];
    2e0c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2e0e:	4a e1 00 78 	P2.H = 0x7800;		/* (30720)	P2=0x7800011c */
    2e12:	28 e6 4e 00 	[P5 + 0x138] = R0;
    2e16:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x78000000 */
    2e1a:	47 0c       	CC = FP == 0x0;
    2e1c:	91 5a       	P2 = P1 + P2;
    2e1e:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0x0 <_AddRecordToResponseList>(  0) */
    2e22:	00 02       	R0 = CC;
    2e24:	44 e1 00 00 	R4.H = 0x0;		/* (  0)	R4=0x0 <_AddRecordToResponseList>(  0) */
    2e28:	2a e7 3d 00 	[P5 + 0xf4] = P2;
    2e2c:	2c e5 4c 00 	P4 = [P5 + 0x130];
    2e30:	06 e1 00 00 	R6.L = 0x0;		/* (  0)	R6=0x0 <_AddRecordToResponseList>(  0) */
    2e34:	b0 e6 34 00 	B[SP + 0x34] = R0;
    2e38:	04 e1 00 00 	R4.L = 0x0;		/* (  0)	R4=0x0 <_AddRecordToResponseList>(  0) */
    2e3c:	2a 21       	JUMP.S 0x3090 <_SendQueries+0x5a0>;
    2e3e:	00 00       	NOP;
    2e40:	60 e4 99 00 	R0 = W[P4 + 0x132] (Z);
    2e44:	00 0c       	CC = R0 == 0x0;
    2e46:	20 15       	IF !CC JUMP 0x3086 <_SendQueries+0x596> (BP);
    2e48:	20 e4 28 00 	R0 = [P4 + 0xa0];
    2e4c:	00 0c       	CC = R0 == 0x0;
    2e4e:	7b 14       	IF !CC JUMP 0x2f44 <_SendQueries+0x454> (BP);
    2e50:	20 e4 47 00 	R0 = [P4 + 0x11c];
    2e54:	00 0c       	CC = R0 == 0x0;
    2e56:	18 15       	IF !CC JUMP 0x3086 <_SendQueries+0x596> (BP);
    2e58:	27 a1       	R7 = [P4 + 0x10];
    2e5a:	07 0d       	CC = R7 <= 0x0;
    2e5c:	15 1d       	IF CC JUMP 0x3086 <_SendQueries+0x596> (BP);
    2e5e:	a0 a3       	R0 = [P4 + 0x38];
    2e60:	00 0c       	CC = R0 == 0x0;
    2e62:	12 15       	IF !CC JUMP 0x3086 <_SendQueries+0x596> (BP);
    2e64:	31 a3       	R1 = [SP + 0x30];
    2e66:	0f 09       	CC = R7 <= R1;
    2e68:	0f 15       	IF !CC JUMP 0x3086 <_SendQueries+0x596> (BP);
    2e6a:	e0 a0       	R0 = [P4 + 0xc];
    2e6c:	07 50       	R0 = R7 + R0;
    2e6e:	18 32       	P3 = R0;
    2e70:	07 30       	R0 = R7;
    2e72:	51 60       	R1 = 0xa (X);		/*		R1=0xa( 10) */
    2e74:	ff e3 c6 e8 	CALL 0x0 <_AddRecordToResponseList>;
    2e78:	2d e4 37 00 	R5 = [P5 + 0xdc];
    2e7c:	28 50       	R0 = R0 + R5;
    2e7e:	53 30       	R2 = P3;
    2e80:	10 52       	R0 = R0 - R2;
    2e82:	80 0c       	CC = R0 < 0x0;
    2e84:	60 14       	IF !CC JUMP 0x2f44 <_SendQueries+0x454> (BP);
    2e86:	82 c6 0f 81 	R0 = R7 >> 0x1f;
    2e8a:	f8 51       	R7 = R0 + R7;
    2e8c:	0f 4d       	R7 >>>= 0x1;
    2e8e:	6f 51       	R5 = R7 + R5;
    2e90:	05 32       	P0 = R5;
    2e92:	18 44       	P0 -= P3;
    2e94:	c0 0c       	CC = P0 < 0x0;
    2e96:	f8 18       	IF CC JUMP 0x3086 <_SendQueries+0x596>;
    2e98:	44 30       	R0 = P4;
    2e9a:	21 e1 34 01 	R1 = 0x134 (X);		/*		R1=0x134(308) */
    2e9e:	22 e1 00 01 	R2 = 0x100 (X);		/*		R2=0x100(256) */
    2ea2:	48 51       	R5 = R0 + R1;
    2ea4:	55 50       	R1 = R5 + R2;
    2ea6:	05 30       	R0 = R5;
    2ea8:	ff e3 ac e8 	CALL 0x0 <_AddRecordToResponseList>;
    2eac:	c7 42       	R7 = R0.L (Z);
    2eae:	05 30       	R0 = R5;
    2eb0:	ff e3 a8 e8 	CALL 0x0 <_AddRecordToResponseList>;
    2eb4:	41 e1 d5 20 	R1.H = 0x20d5;		/* (8405)	R1=0x20d50134(550830388) */
    2eb8:	18 32       	P3 = R0;
    2eba:	01 e1 39 6b 	R1.L = 0x6b39;		/* (27449)	R1=0x20d56b39(550857529) */
    2ebe:	ff e3 a1 e8 	CALL 0x0 <_AddRecordToResponseList>;
    2ec2:	82 c6 d0 83 	R1 = R0 >> 0x6;
    2ec6:	62 a0       	R2 = [P4 + 0x4];
    2ec8:	23 e1 f3 01 	R3 = 0x1f3 (X);		/*		R3=0x1f3(499) */
    2ecc:	d9 40       	R1 *= R3;
    2ece:	43 30       	R0 = P3;
    2ed0:	48 52       	R1 = R0 - R1;
    2ed2:	f5 b0       	[SP + 0xc] = R5;
    2ed4:	45 30       	R0 = P5;
    2ed6:	ff e3 87 fa 	CALL 0x23e4 <_CacheGroupForName>;
    2eda:	10 32       	P2 = R0;
    2edc:	27 64       	R7 += 0x4;		/* (  4) */
    2ede:	42 0c       	CC = P2 == 0x0;
    2ee0:	03 1c       	IF CC JUMP 0x2ee6 <_SendQueries+0x3f6> (BP);
    2ee2:	93 ac       	P3 = [P2 + 0x8];
    2ee4:	2e 20       	JUMP.S 0x2f40 <_SendQueries+0x450>;
    2ee6:	03 68       	P3 = 0x0 (X);		/*		P3=0x0(  0) */
    2ee8:	2c 20       	JUMP.S 0x2f40 <_SendQueries+0x450>;
    2eea:	21 e1 00 04 	R1 = 0x400 (X);		/*		R1=0x400(1024) */
    2eee:	18 a6       	R0 = W[P3 + 0x10] (Z);
    2ef0:	08 0a       	CC = R0 <= R1 (IU);
    2ef2:	25 14       	IF !CC JUMP 0x2f3c <_SendQueries+0x44c> (BP);
    2ef4:	43 30       	R0 = P3;
    2ef6:	20 64       	R0 += 0x4;		/* (  4) */
    2ef8:	4c 30       	R1 = P4;
    2efa:	ff e3 83 e8 	CALL 0x0 <_AddRecordToResponseList>;
    2efe:	00 0c       	CC = R0 == 0x0;
    2f00:	1e 1c       	IF CC JUMP 0x2f3c <_SendQueries+0x44c> (BP);
    2f02:	04 32       	P0 = R4;
    2f04:	d8 a0       	R0 = [P3 + 0xc];
    2f06:	29 e4 37 00 	R1 = [P5 + 0xdc];
    2f0a:	1a a3       	R2 = [P3 + 0x30];
    2f0c:	8a 52       	R2 = R2 - R1;
    2f0e:	03 91       	R3 = [P0];
    2f10:	d8 40       	R0 *= R3;
    2f12:	82 c6 08 87 	R3 = R0 >> 0x1f;
    2f16:	03 50       	R0 = R3 + R0;
    2f18:	08 4d       	R0 >>>= 0x1;
    2f1a:	02 50       	R0 = R2 + R0;
    2f1c:	80 0c       	CC = R0 < 0x0;
    2f1e:	0f 1c       	IF CC JUMP 0x2f3c <_SendQueries+0x44c> (BP);
    2f20:	20 a1       	R0 = [P4 + 0x10];
    2f22:	80 43       	R0 = -R0;
    2f24:	48 52       	R1 = R0 - R1;
    2f26:	98 a3       	R0 = [P3 + 0x38];
    2f28:	41 50       	R1 = R1 + R0;
    2f2a:	01 0d       	CC = R1 <= 0x0;
    2f2c:	08 1c       	IF CC JUMP 0x2f3c <_SendQueries+0x44c> (BP);
    2f2e:	58 a6       	R0 = W[P3 + 0x12] (Z);
    2f30:	60 64       	R0 += 0xc;		/* ( 12) */
    2f32:	c7 51       	R7 = R7 + R0;
    2f34:	20 e1 ff 01 	R0 = 0x1ff (X);		/*		R0=0x1ff(511) */
    2f38:	07 0a       	CC = R7 <= R0 (IU);
    2f3a:	a6 14       	IF !CC JUMP 0x3086 <_SendQueries+0x596> (BP);
    2f3c:	00 00       	NOP;
    2f3e:	5b 91       	P3 = [P3];
    2f40:	43 0c       	CC = P3 == 0x0;
    2f42:	d4 17       	IF !CC JUMP 0x2eea <_SendQueries+0x3fa> (BP);
    2f44:	00 00       	NOP;
    2f46:	20 a1       	R0 = [P4 + 0x10];
    2f48:	82 c6 08 83 	R1 = R0 >> 0x1f;
    2f4c:	e2 a0       	R2 = [P4 + 0xc];
    2f4e:	41 50       	R1 = R1 + R0;
    2f50:	09 4d       	R1 >>>= 0x1;
    2f52:	89 43       	R1 = -R1;
    2f54:	51 52       	R1 = R1 - R2;
    2f56:	2a e4 37 00 	R2 = [P5 + 0xdc];
    2f5a:	51 50       	R1 = R1 + R2;
    2f5c:	81 0c       	CC = R1 < 0x0;
    2f5e:	5e 18       	IF CC JUMP 0x301a <_SendQueries+0x52a>;
    2f60:	06 32       	P0 = R6;
    2f62:	0c 32       	P1 = R4;
    2f64:	82 c6 08 8e 	R7 = R0 << 0x1;
    2f68:	c7 51       	R7 = R7 + R0;
    2f6a:	27 b1       	[P4 + 0x10] = R7;
    2f6c:	01 91       	R1 = [P0];
    2f6e:	21 e6 28 00 	[P4 + 0xa0] = R1;
    2f72:	08 91       	R0 = [P1];
    2f74:	21 e1 10 0e 	R1 = 0xe10 (X);		/*		R1=0xe10(3600) */
    2f78:	c1 40       	R1 *= R0;
    2f7a:	0f 09       	CC = R7 <= R1;
    2f7c:	03 1c       	IF CC JUMP 0x2f82 <_SendQueries+0x492> (BP);
    2f7e:	21 b1       	[P4 + 0x10] = R1;
    2f80:	4d 20       	JUMP.S 0x301a <_SendQueries+0x52a>;
    2f82:	00 00       	NOP;
    2f84:	21 a2       	R1 = [P4 + 0x20];
    2f86:	01 0c       	CC = R1 == 0x0;
    2f88:	49 14       	IF !CC JUMP 0x301a <_SendQueries+0x52a> (BP);
    2f8a:	19 60       	R1 = 0x3 (X);		/*		R1=0x3(  3) */
    2f8c:	10 64       	R0 += 0x2;		/* (  2) */
    2f8e:	ff e3 39 e8 	CALL 0x0 <_AddRecordToResponseList>;
    2f92:	d9 60       	R1 = 0x1b (X);		/*		R1=0x1b( 27) */
    2f94:	c8 40       	R0 *= R1;
    2f96:	07 08       	CC = R7 == R0;
    2f98:	41 14       	IF !CC JUMP 0x301a <_SendQueries+0x52a> (BP);
    2f9a:	20 e4 2a 00 	R0 = [P4 + 0xa8];
    2f9e:	00 0c       	CC = R0 == 0x0;
    2fa0:	3d 14       	IF !CC JUMP 0x301a <_SendQueries+0x52a> (BP);
    2fa2:	60 e4 1a 01 	R0 = W[P4 + 0x234] (Z);
    2fa6:	08 0c       	CC = R0 == 0x1;
    2fa8:	04 18       	IF CC JUMP 0x2fb0 <_SendQueries+0x4c0>;
    2faa:	e2 60       	R2 = 0x1c (X);		/*		R2=0x1c( 28) */
    2fac:	10 08       	CC = R0 == R2;
    2fae:	2c 14       	IF !CC JUMP 0x3006 <_SendQueries+0x516> (BP);
    2fb0:	28 e1 34 01 	P0 = 0x134 (X);		/*		P0=0x134(308) */
    2fb4:	c4 5a       	P3 = P4 + P0;
    2fb6:	65 a0       	R5 = [P4 + 0x4];
    2fb8:	43 30       	R0 = P3;
    2fba:	ff e3 23 e8 	CALL 0x0 <_AddRecordToResponseList>;
    2fbe:	41 e1 d5 20 	R1.H = 0x20d5;		/* (8405)	R1=0x20d5001b(550830107) */
    2fc2:	38 30       	R7 = R0;
    2fc4:	01 e1 39 6b 	R1.L = 0x6b39;		/* (27449)	R1=0x20d56b39(550857529) */
    2fc8:	ff e3 1c e8 	CALL 0x0 <_AddRecordToResponseList>;
    2fcc:	82 c6 d0 83 	R1 = R0 >> 0x6;
    2fd0:	20 e1 f3 01 	R0 = 0x1f3 (X);		/*		R0=0x1f3(499) */
    2fd4:	c1 40       	R1 *= R0;
    2fd6:	f3 bc       	[SP + 0xc] = P3;
    2fd8:	4f 52       	R1 = R7 - R1;
    2fda:	45 30       	R0 = P5;
    2fdc:	15 30       	R2 = R5;
    2fde:	ff e3 03 fa 	CALL 0x23e4 <_CacheGroupForName>;
    2fe2:	10 32       	P2 = R0;
    2fe4:	42 0c       	CC = P2 == 0x0;
    2fe6:	03 1c       	IF CC JUMP 0x2fec <_SendQueries+0x4fc> (BP);
    2fe8:	92 ac       	P2 = [P2 + 0x8];
    2fea:	05 20       	JUMP.S 0x2ff4 <_SendQueries+0x504>;
    2fec:	02 68       	P2 = 0x0 (X);		/*		P2=0x0(  0) */
    2fee:	03 20       	JUMP.S 0x2ff4 <_SendQueries+0x504>;
    2ff0:	00 00       	NOP;
    2ff2:	52 91       	P2 = [P2];
    2ff4:	42 0c       	CC = P2 == 0x0;
    2ff6:	08 1c       	IF CC JUMP 0x3006 <_SendQueries+0x516> (BP);
    2ff8:	d0 a4       	R0 = W[P2 + 0x6] (Z);
    2ffa:	08 0c       	CC = R0 == 0x1;
    2ffc:	0f 18       	IF CC JUMP 0x301a <_SendQueries+0x52a>;
    2ffe:	e1 60       	R1 = 0x1c (X);		/*		R1=0x1c( 28) */
    3000:	08 08       	CC = R0 == R1;
    3002:	f7 17       	IF !CC JUMP 0x2ff0 <_SendQueries+0x500> (BP);
    3004:	0b 20       	JUMP.S 0x301a <_SendQueries+0x52a>;
    3006:	54 30       	R2 = P4;
    3008:	23 e1 34 01 	R3 = 0x134 (X);		/*		R3=0x134(308) */
    300c:	5a 50       	R1 = R2 + R3;
    300e:	62 a0       	R2 = [P4 + 0x4];
    3010:	00 68       	P0 = 0x0 (X);		/*		P0=0x0(  0) */
    3012:	f0 bc       	[SP + 0xc] = P0;
    3014:	45 30       	R0 = P5;
    3016:	ff e3 db fc 	CALL 0x29cc <_ReconfirmAntecedents>;
    301a:	0e 32       	P1 = R6;
    301c:	21 e4 28 00 	R1 = [P4 + 0xa0];
    3020:	08 91       	R0 = [P1];
    3022:	01 08       	CC = R1 == R0;
    3024:	00 02       	R0 = CC;
    3026:	20 e6 29 00 	[P4 + 0xa4] = R0;
    302a:	00 0c       	CC = R0 == 0x0;
    302c:	12 1c       	IF CC JUMP 0x3050 <_SendQueries+0x560> (BP);
    302e:	b0 e4 34 00 	R0 = B[SP + 0x34] (Z);
    3032:	08 02       	CC = R0;
    3034:	08 1c       	IF CC JUMP 0x3044 <_SendQueries+0x554> (BP);
    3036:	20 e4 46 00 	R0 = [P4 + 0x118];
    303a:	00 0c       	CC = R0 == 0x0;
    303c:	05 14       	IF !CC JUMP 0x3046 <_SendQueries+0x556> (BP);
    303e:	38 e4 10 05 	R0 = [FP + 0x1440];
    3042:	02 20       	JUMP.S 0x3046 <_SendQueries+0x556>;
    3044:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3046:	20 e6 28 00 	[P4 + 0xa0] = R0;
    304a:	28 e4 37 00 	R0 = [P5 + 0xdc];
    304e:	e0 b0       	[P4 + 0xc] = R0;
    3050:	4c 30       	R1 = P4;
    3052:	22 e1 40 00 	R2 = 0x40 (X);		/*		R2=0x40( 64) */
    3056:	11 50       	R0 = R1 + R2;
    3058:	21 a1       	R1 = [P4 + 0x10];
    305a:	82 c6 09 85 	R2 = R1 >> 0x1f;
    305e:	4a 50       	R1 = R2 + R1;
    3060:	2a e4 37 00 	R2 = [P5 + 0xdc];
    3064:	09 4d       	R1 >>>= 0x1;
    3066:	4a 52       	R1 = R2 - R1;
    3068:	ff e3 64 e8 	CALL 0x130 <_ExpireDupSuppressInfo>;
    306c:	28 e4 37 00 	R0 = [P5 + 0xdc];
    3070:	20 e6 2b 00 	[P4 + 0xac] = R0;
    3074:	03 60       	R3 = 0x0 (X);		/*		R3=0x0(  0) */
    3076:	20 e4 2a 00 	R0 = [P4 + 0xa8];
    307a:	e3 b1       	[P4 + 0x1c] = R3;
    307c:	00 0c       	CC = R0 == 0x0;
    307e:	04 1c       	IF CC JUMP 0x3086 <_SendQueries+0x596> (BP);
    3080:	f8 67       	R0 += -0x1;		/* ( -1) */
    3082:	20 e6 2a 00 	[P4 + 0xa8] = R0;
    3086:	4c 30       	R1 = P4;
    3088:	45 30       	R0 = P5;
    308a:	ff e3 9f f7 	CALL 0x1fc8 <_SetNextQueryTime>;
    308e:	64 91       	P4 = [P4];
    3090:	44 0c       	CC = P4 == 0x0;
    3092:	05 1c       	IF CC JUMP 0x309c <_SendQueries+0x5ac> (BP);
    3094:	2a e5 4d 00 	P2 = [P5 + 0x134];
    3098:	54 08       	CC = P4 == P2;
    309a:	d2 16       	IF !CC JUMP 0x2e3e <_SendQueries+0x34e> (BP);
    309c:	00 00       	NOP;
    309e:	29 e5 37 00 	P1 = [P5 + 0xdc];
    30a2:	4a e1 00 78 	P2.H = 0x7800;		/* (30720)	P2=0x78000000 */
    30a6:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x78000000 */
    30aa:	91 5a       	P2 = P1 + P2;
    30ac:	2a e7 3e 00 	[P5 + 0xf8] = P2;
    30b0:	2a e5 f5 07 	P2 = [P5 + 0x1fd4];
    30b4:	42 0c       	CC = P2 == 0x0;
    30b6:	11 18       	IF CC JUMP 0x30d8 <_SendQueries+0x5e8>;
    30b8:	42 30       	R0 = P2;
    30ba:	55 30       	R2 = P5;
    30bc:	ba 65       	R2 += 0x37;		/* ( 55) */
    30be:	51 a2       	R1 = [P2 + 0x24];
    30c0:	21 64       	R1 += 0x4;		/* (  4) */
    30c2:	20 64       	R0 += 0x4;		/* (  4) */
    30c4:	ff e3 9e e7 	CALL 0x0 <_AddRecordToResponseList>;
    30c8:	10 30       	R2 = R0;
    30ca:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1c( 28) */
    30ce:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    30d0:	01 e1 10 0b 	R1.L = 0xb10;		/* (2832)	R1=0xb10(2832) */
    30d4:	ff e3 96 e7 	CALL 0x0 <_AddRecordToResponseList>;
    30d8:	45 32       	P0 = P5;
    30da:	28 e4 f2 07 	R0 = [P5 + 0x1fc8];
    30de:	45 e1 00 00 	R5.H = 0x0;		/* (  0)	R5=0x0 <_AddRecordToResponseList>(  0) */
    30e2:	44 e1 00 00 	R4.H = 0x0;		/* (  0)	R4=0x0 <_AddRecordToResponseList>(  0) */
    30e6:	47 e1 00 00 	R7.H = 0x0;		/* (  0)	R7=0x134(308) */
    30ea:	b8 6d       	P0 += 0x37;		/* ( 55) */
    30ec:	28 e6 f5 07 	[P5 + 0x1fd4] = R0;
    30f0:	05 e1 00 00 	R5.L = 0x0;		/* (  0)	R5=0x0 <_AddRecordToResponseList>(  0) */
    30f4:	04 e1 00 00 	R4.L = 0x0;		/* (  0)	R4=0x0 <_AddRecordToResponseList>(  0) */
    30f8:	07 e1 00 00 	R7.L = 0x0;		/* (  0)	R7=0x0 <_AddRecordToResponseList>(  0) */
    30fc:	30 bf       	[SP + 0x30] = P0;
    30fe:	65 32       	P4 = P5;
    3100:	22 21       	JUMP.S 0x3344 <_SendQueries+0x854>;
    3102:	0d 32       	P1 = R5;
    3104:	28 91       	R0 = [P5];
    3106:	20 e6 f5 07 	[P4 + 0x1fd4] = R0;
    310a:	e9 a1       	R1 = [P5 + 0x1c];
    310c:	08 91       	R0 = [P1];
    310e:	01 08       	CC = R1 == R0;
    3110:	0a 14       	IF !CC JUMP 0x3124 <_SendQueries+0x634> (BP);
    3112:	a8 e4 46 00 	R0 = B[P5 + 0x46] (Z);
    3116:	00 0c       	CC = R0 == 0x0;
    3118:	06 14       	IF !CC JUMP 0x3124 <_SendQueries+0x634> (BP);
    311a:	28 a2       	R0 = [P5 + 0x20];
    311c:	ff e3 72 e7 	CALL 0x0 <_AddRecordToResponseList>;
    3120:	00 0c       	CC = R0 == 0x0;
    3122:	11 1d       	IF CC JUMP 0x3344 <_SendQueries+0x854> (BP);
    3124:	00 00       	NOP;
    3126:	a8 e4 04 00 	R0 = B[P5 + 0x4] (Z);
    312a:	10 0c       	CC = R0 == 0x2;
    312c:	0c 15       	IF !CC JUMP 0x3344 <_SendQueries+0x854> (BP);
    312e:	28 e4 2f 00 	R0 = [P5 + 0xbc];
    3132:	29 e4 30 00 	R1 = [P5 + 0xc0];
    3136:	80 43       	R0 = -R0;
    3138:	08 52       	R0 = R0 - R1;
    313a:	21 e4 37 00 	R1 = [P4 + 0xdc];
    313e:	08 50       	R0 = R0 + R1;
    3140:	80 0c       	CC = R0 < 0x0;
    3142:	fd 1c       	IF CC JUMP 0x333c <_SendQueries+0x84c> (BP);
    3144:	ae e4 85 00 	R6 = B[P5 + 0x85] (Z);
    3148:	06 0c       	CC = R6 == 0x0;
    314a:	e0 1c       	IF CC JUMP 0x330a <_SendQueries+0x81a> (BP);
    314c:	28 e4 19 00 	R0 = [P5 + 0x64];
    3150:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
    3152:	08 08       	CC = R0 == R1;
    3154:	33 14       	IF !CC JUMP 0x31ba <_SendQueries+0x6ca> (BP);
    3156:	07 32       	P0 = R7;
    3158:	00 91       	R0 = [P0];
    315a:	00 0c       	CC = R0 == 0x0;
    315c:	17 1c       	IF CC JUMP 0x318a <_SendQueries+0x69a> (BP);
    315e:	e9 a1       	R1 = [P5 + 0x1c];
    3160:	44 30       	R0 = P4;
    3162:	ff e3 3d fb 	CALL 0x27dc <_InterfaceNameForID>;
    3166:	18 32       	P3 = R0;
    3168:	69 a2       	R1 = [P5 + 0x24];
    316a:	45 30       	R0 = P5;
    316c:	21 64       	R1 += 0x4;		/* (  4) */
    316e:	32 a3       	R2 = [SP + 0x30];
    3170:	20 64       	R0 += 0x4;		/* (  4) */
    3172:	ff e3 47 e7 	CALL 0x0 <_AddRecordToResponseList>;
    3176:	30 b1       	[SP + 0x10] = R0;
    3178:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4(  4) */
    317c:	f3 bc       	[SP + 0xc] = P3;
    317e:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    3180:	01 e1 44 0b 	R1.L = 0xb44;		/* (2884)	R1=0xb44(2884) */
    3184:	16 30       	R2 = R6;
    3186:	ff e3 3d e7 	CALL 0x0 <_AddRecordToResponseList>;
    318a:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    318e:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    3192:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x8 */
    3196:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    319a:	32 bd       	[SP + 0x10] = P2;
    319c:	28 e1 68 00 	P0 = 0x68 (X);		/*		P0=0x68(104) */
    31a0:	85 5a       	P2 = P5 + P0;
    31a2:	f1 bc       	[SP + 0xc] = P1;
    31a4:	72 bd       	[SP + 0x14] = P2;
    31a6:	29 e1 54 00 	P1 = 0x54 (X);		/*		P1=0x54( 84) */
    31aa:	8d 5a       	P2 = P5 + P1;
    31ac:	b2 bd       	[SP + 0x18] = P2;
    31ae:	44 30       	R0 = P4;
    31b0:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    31b2:	55 30       	R2 = P5;
    31b4:	ff e3 42 f4 	CALL 0x1a38 <_SendARP>;
    31b8:	34 20       	JUMP.S 0x3220 <_SendQueries+0x730>;
    31ba:	31 60       	R1 = 0x6 (X);		/*		R1=0x6(  6) */
    31bc:	08 08       	CC = R0 == R1;
    31be:	31 14       	IF !CC JUMP 0x3220 <_SendQueries+0x730> (BP);
    31c0:	07 32       	P0 = R7;
    31c2:	00 91       	R0 = [P0];
    31c4:	00 0c       	CC = R0 == 0x0;
    31c6:	17 1c       	IF CC JUMP 0x31f4 <_SendQueries+0x704> (BP);
    31c8:	e9 a1       	R1 = [P5 + 0x1c];
    31ca:	44 30       	R0 = P4;
    31cc:	ff e3 08 fb 	CALL 0x27dc <_InterfaceNameForID>;
    31d0:	18 32       	P3 = R0;
    31d2:	69 a2       	R1 = [P5 + 0x24];
    31d4:	45 30       	R0 = P5;
    31d6:	21 64       	R1 += 0x4;		/* (  4) */
    31d8:	32 a3       	R2 = [SP + 0x30];
    31da:	20 64       	R0 += 0x4;		/* (  4) */
    31dc:	ff e3 12 e7 	CALL 0x0 <_AddRecordToResponseList>;
    31e0:	30 b1       	[SP + 0x10] = R0;
    31e2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x6(  6) */
    31e6:	f3 bc       	[SP + 0xc] = P3;
    31e8:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    31ea:	01 e1 64 0b 	R1.L = 0xb64;		/* (2916)	R1=0xb64(2916) */
    31ee:	16 30       	R2 = R6;
    31f0:	ff e3 08 e7 	CALL 0x0 <_AddRecordToResponseList>;
    31f4:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x54 */
    31f8:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    31fc:	28 e1 68 00 	P0 = 0x68 (X);		/*		P0=0x68(104) */
    3200:	85 5a       	P2 = P5 + P0;
    3202:	31 bd       	[SP + 0x10] = P1;
    3204:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3206:	b2 bd       	[SP + 0x18] = P2;
    3208:	29 e1 54 00 	P1 = 0x54 (X);		/*		P1=0x54( 84) */
    320c:	70 b1       	[SP + 0x14] = R0;
    320e:	8d 5a       	P2 = P5 + P1;
    3210:	f5 bc       	[SP + 0xc] = P5;
    3212:	f2 bd       	[SP + 0x1c] = P2;
    3214:	44 30       	R0 = P4;
    3216:	21 e1 87 ff 	R1 = -0x79 (X);		/*		R1=0xffffff87(-121) */
    321a:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    321c:	ff e3 a0 f4 	CALL 0x1b5c <_SendNDP>;
    3220:	47 0c       	CC = FP == 0x0;
    3222:	0b 1c       	IF CC JUMP 0x3238 <_SendQueries+0x748> (BP);
    3224:	28 e4 13 00 	R0 = [P5 + 0x4c];
    3228:	00 0c       	CC = R0 == 0x0;
    322a:	07 14       	IF !CC JUMP 0x3238 <_SendQueries+0x748> (BP);
    322c:	e8 a1       	R0 = [P5 + 0x1c];
    322e:	00 0c       	CC = R0 == 0x0;
    3230:	05 14       	IF !CC JUMP 0x323a <_SendQueries+0x74a> (BP);
    3232:	38 e4 10 05 	R0 = [FP + 0x1440];
    3236:	02 20       	JUMP.S 0x323a <_SendQueries+0x74a>;
    3238:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    323a:	28 e6 26 00 	[P5 + 0x98] = R0;
    323e:	20 e4 37 00 	R0 = [P4 + 0xdc];
    3242:	28 e6 30 00 	[P5 + 0xc0] = R0;
    3246:	a8 e4 85 00 	R0 = B[P5 + 0x85] (Z);
    324a:	18 0e       	CC = R0 <= 0x3 (IU);
    324c:	04 1c       	IF CC JUMP 0x3254 <_SendQueries+0x764> (BP);
    324e:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    3250:	a8 e6 85 00 	B[P5 + 0x85] = R0;
    3254:	4d 30       	R1 = P5;
    3256:	a8 e5 85 00 	R0 = B[P5 + 0x85] (X);
    325a:	f8 67       	R0 += -0x1;		/* ( -1) */
    325c:	a8 e6 85 00 	B[P5 + 0x85] = R0;
    3260:	44 30       	R0 = P4;
    3262:	ff e3 67 e8 	CALL 0x330 <_SetNextAnnounceProbeTime>;
    3266:	a8 e4 85 00 	R0 = B[P5 + 0x85] (Z);
    326a:	00 0c       	CC = R0 == 0x0;
    326c:	6c 14       	IF !CC JUMP 0x3344 <_SendQueries+0x854> (BP);
    326e:	23 e5 f3 07 	P3 = [P4 + 0x1fcc];
    3272:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
    3274:	40 20       	JUMP.S 0x32f4 <_SendQueries+0x804>;
    3276:	00 00       	NOP;
    3278:	98 e4 04 00 	R0 = B[P3 + 0x4] (Z);
    327c:	10 0c       	CC = R0 == 0x2;
    327e:	39 14       	IF !CC JUMP 0x32f0 <_SendQueries+0x800> (BP);
    3280:	d9 a1       	R1 = [P3 + 0x1c];
    3282:	e8 a1       	R0 = [P5 + 0x1c];
    3284:	01 08       	CC = R1 == R0;
    3286:	35 14       	IF !CC JUMP 0x32f0 <_SendQueries+0x800> (BP);
    3288:	a9 e5 04 00 	R1 = B[P5 + 0x4] (X);
    328c:	48 43       	R0 = R1.B (Z);
    328e:	10 0c       	CC = R0 == 0x2;
    3290:	08 18       	IF CC JUMP 0x32a0 <_SendQueries+0x7b0>;
    3292:	09 4a       	BITSET (R1, 0x1);		/* bit  1 */
    3294:	49 43       	R1 = R1.B (Z);
    3296:	92 60       	R2 = 0x12 (X);		/*		R2=0x12( 18) */
    3298:	11 08       	CC = R1 == R2;
    329a:	03 18       	IF CC JUMP 0x32a0 <_SendQueries+0x7b0>;
    329c:	08 0c       	CC = R0 == 0x1;
    329e:	29 14       	IF !CC JUMP 0x32f0 <_SendQueries+0x800> (BP);
    32a0:	d9 a4       	R1 = W[P3 + 0x6] (Z);
    32a2:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    32a4:	01 08       	CC = R1 == R0;
    32a6:	25 14       	IF !CC JUMP 0x32f0 <_SendQueries+0x800> (BP);
    32a8:	19 a5       	R1 = W[P3 + 0x8] (Z);
    32aa:	28 a5       	R0 = W[P5 + 0x8] (Z);
    32ac:	01 08       	CC = R1 == R0;
    32ae:	21 14       	IF !CC JUMP 0x32f0 <_SendQueries+0x800> (BP);
    32b0:	59 a1       	R1 = [P3 + 0x14];
    32b2:	68 a1       	R0 = [P5 + 0x14];
    32b4:	01 08       	CC = R1 == R0;
    32b6:	1d 14       	IF !CC JUMP 0x32f0 <_SendQueries+0x800> (BP);
    32b8:	19 a6       	R1 = W[P3 + 0x10] (Z);
    32ba:	28 a6       	R0 = W[P5 + 0x10] (Z);
    32bc:	01 08       	CC = R1 == R0;
    32be:	19 14       	IF !CC JUMP 0x32f0 <_SendQueries+0x800> (BP);
    32c0:	99 a1       	R1 = [P3 + 0x18];
    32c2:	a8 a1       	R0 = [P5 + 0x18];
    32c4:	01 08       	CC = R1 == R0;
    32c6:	15 14       	IF !CC JUMP 0x32f0 <_SendQueries+0x800> (BP);
    32c8:	69 a2       	R1 = [P5 + 0x24];
    32ca:	43 30       	R0 = P3;
    32cc:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x12( 18) */
    32d0:	20 64       	R0 += 0x4;		/* (  4) */
    32d2:	21 64       	R1 += 0x4;		/* (  4) */
    32d4:	02 e1 00 00 	R2.L = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    32d8:	ff e3 94 e6 	CALL 0x0 <_AddRecordToResponseList>;
    32dc:	00 0c       	CC = R0 == 0x0;
    32de:	09 1c       	IF CC JUMP 0x32f0 <_SendQueries+0x800> (BP);
    32e0:	18 a2       	R0 = [P3 + 0x20];
    32e2:	29 a2       	R1 = [P5 + 0x20];
    32e4:	ff e3 8e e6 	CALL 0x0 <_AddRecordToResponseList>;
    32e8:	00 0c       	CC = R0 == 0x0;
    32ea:	03 1c       	IF CC JUMP 0x32f0 <_SendQueries+0x800> (BP);
    32ec:	9e e6 85 00 	B[P3 + 0x85] = R6;
    32f0:	00 00       	NOP;
    32f2:	5b 91       	P3 = [P3];
    32f4:	43 0c       	CC = P3 == 0x0;
    32f6:	c0 17       	IF !CC JUMP 0x3276 <_SendQueries+0x786> (BP);
    32f8:	a8 e4 84 00 	R0 = B[P5 + 0x84] (Z);
    32fc:	00 0c       	CC = R0 == 0x0;
    32fe:	23 14       	IF !CC JUMP 0x3344 <_SendQueries+0x854> (BP);
    3300:	44 30       	R0 = P4;
    3302:	4d 30       	R1 = P5;
    3304:	ff e3 da e7 	CALL 0x2b8 <_AcknowledgeRecord>;
    3308:	1e 20       	JUMP.S 0x3344 <_SendQueries+0x854>;
    330a:	00 00       	NOP;
    330c:	a8 e4 84 00 	R0 = B[P5 + 0x84] (Z);
    3310:	00 0c       	CC = R0 == 0x0;
    3312:	05 14       	IF !CC JUMP 0x331c <_SendQueries+0x82c> (BP);
    3314:	44 30       	R0 = P4;
    3316:	4d 30       	R1 = P5;
    3318:	ff e3 d0 e7 	CALL 0x2b8 <_AcknowledgeRecord>;
    331c:	04 32       	P0 = R4;
    331e:	80 60       	R0 = 0x10 (X);		/*		R0=0x10( 16) */
    3320:	a8 e6 04 00 	B[P5 + 0x4] = R0;
    3324:	00 91       	R0 = [P0];
    3326:	82 c6 08 83 	R1 = R0 >> 0x1f;
    332a:	01 50       	R0 = R1 + R0;
    332c:	08 4d       	R0 >>>= 0x1;
    332e:	21 e4 37 00 	R1 = [P4 + 0xdc];
    3332:	28 e6 2f 00 	[P5 + 0xbc] = R0;
    3336:	01 52       	R0 = R1 - R0;
    3338:	28 e6 30 00 	[P5 + 0xc0] = R0;
    333c:	44 30       	R0 = P4;
    333e:	4d 30       	R1 = P5;
    3340:	ff e3 f8 e7 	CALL 0x330 <_SetNextAnnounceProbeTime>;
    3344:	00 00       	NOP;
    3346:	25 e5 f5 07 	P5 = [P4 + 0x1fd4];
    334a:	45 0c       	CC = P5 == 0x0;
    334c:	db 16       	IF !CC JUMP 0x3102 <_SendQueries+0x612> (BP);
    334e:	20 e4 f3 07 	R0 = [P4 + 0x1fcc];
    3352:	6c 32       	P5 = P4;
    3354:	20 e6 f5 07 	[P4 + 0x1fd4] = R0;
    3358:	11 20       	JUMP.S 0x337a <_SendQueries+0x88a>;
    335a:	00 00       	NOP;
    335c:	10 91       	R0 = [P2];
    335e:	28 e6 f5 07 	[P5 + 0x1fd4] = R0;
    3362:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
    3366:	10 0c       	CC = R0 == 0x2;
    3368:	09 14       	IF !CC JUMP 0x337a <_SendQueries+0x88a> (BP);
    336a:	50 e4 42 00 	R0 = W[P2 + 0x84] (Z);
    336e:	00 0c       	CC = R0 == 0x0;
    3370:	05 14       	IF !CC JUMP 0x337a <_SendQueries+0x88a> (BP);
    3372:	45 30       	R0 = P5;
    3374:	4a 30       	R1 = P2;
    3376:	ff e3 a1 e7 	CALL 0x2b8 <_AcknowledgeRecord>;
    337a:	00 00       	NOP;
    337c:	2a e5 f5 07 	P2 = [P5 + 0x1fd4];
    3380:	42 0c       	CC = P2 == 0x0;
    3382:	ec 17       	IF !CC JUMP 0x335a <_SendQueries+0x86a> (BP);
    3384:	2a e1 98 59 	P2 = 0x5998 (X);		/*		P2=0x5998(22936) */
    3388:	95 5a       	P2 = P5 + P2;
    338a:	f2 bf       	[SP + 0x3c] = P2;
    338c:	2a e1 8c 59 	P2 = 0x598c (X);		/*		P2=0x598c(22924) */
    3390:	95 5a       	P2 = P5 + P2;
    3392:	6a 30       	R5 = P2;
    3394:	f0 af       	P0 = [SP + 0x3c];
    3396:	01 68       	P1 = 0x0 (X);		/*		P1=0x0(  0) */
    3398:	2a e1 64 00 	P2 = 0x64 (X);		/*		P2=0x64(100) */
    339c:	31 e7 11 00 	[SP + 0x44] = P1;
    33a0:	b2 5a       	P2 = P2 + SP;
    33a2:	29 e1 ec 22 	P1 = 0x22ec (X);		/*		P1=0x22ec(8940) */
    33a6:	42 30       	R0 = P2;
    33a8:	08 5a       	P0 = P0 + P1;
    33aa:	20 64       	R0 += 0x4;		/* (  4) */
    33ac:	30 e7 18 00 	[SP + 0x60] = P0;
    33b0:	30 e6 12 00 	[SP + 0x48] = R0;
    33b4:	34 24       	JUMP.S 0x3c1c <_SendQueries+0x112c>;
    33b6:	00 00       	NOP;
    33b8:	28 e4 47 00 	R0 = [P5 + 0x11c];
    33bc:	00 0c       	CC = R0 == 0x0;
    33be:	12 1c       	IF CC JUMP 0x33e2 <_SendQueries+0x8f2> (BP);
    33c0:	38 e4 1b 05 	R0 = [FP + 0x146c];
    33c4:	00 0c       	CC = R0 == 0x0;
    33c6:	11 1c       	IF CC JUMP 0x33e8 <_SendQueries+0x8f8> (BP);
    33c8:	e9 a1       	R1 = [P5 + 0x1c];
    33ca:	01 08       	CC = R1 == R0;
    33cc:	11 14       	IF !CC JUMP 0x33ee <_SendQueries+0x8fe> (BP);
    33ce:	69 e4 10 00 	R1 = W[P5 + 0x20] (Z);
    33d2:	78 e4 38 0a 	R0 = W[FP + 0x1470] (Z);
    33d6:	01 08       	CC = R1 == R0;
    33d8:	e8 60       	R0 = 0x1d (X);		/*		R0=0x1d( 29) */
    33da:	b9 60       	R1 = 0x17 (X);		/*		R1=0x17( 23) */
    33dc:	01 07       	IF CC R0 = R1;
    33de:	30 b3       	[SP + 0x30] = R0;
    33e0:	09 20       	JUMP.S 0x33f2 <_SendQueries+0x902>;
    33e2:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    33e4:	31 b3       	[SP + 0x30] = R1;
    33e6:	06 20       	JUMP.S 0x33f2 <_SendQueries+0x902>;
    33e8:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    33ea:	32 b3       	[SP + 0x30] = R2;
    33ec:	03 20       	JUMP.S 0x33f2 <_SendQueries+0x902>;
    33ee:	eb 60       	R3 = 0x1d (X);		/*		R3=0x1d( 29) */
    33f0:	33 b3       	[SP + 0x30] = R3;
    33f2:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0x68 */
    33f6:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x64 */
    33fa:	08 e1 00 00 	P0.L = 0x0;		/* (  0)	P0=0x0 <_AddRecordToResponseList> */
    33fe:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    3402:	05 30       	R0 = R5;
    3404:	01 95       	R1 = W[P0] (Z);
    3406:	12 95       	R2 = W[P2] (Z);
    3408:	ff e3 fc e5 	CALL 0x0 <_AddRecordToResponseList>;
    340c:	30 e4 07 01 	R0 = [SP + 0x41c];
    3410:	00 0c       	CC = R0 == 0x0;
    3412:	03 18       	IF CC JUMP 0x3418 <_SendQueries+0x928>;
    3414:	f7 a3       	R7 = [SP + 0x3c];
    3416:	5e 22       	JUMP.S 0x38d2 <_SendQueries+0xde2>;
    3418:	2a e1 1c 04 	P2 = 0x41c (X);		/*		P2=0x41c(1052) */
    341c:	96 5a       	P2 = SP + P2;
    341e:	31 af       	P1 = [SP + 0x30];
    3420:	32 e7 14 00 	[SP + 0x50] = P2;
    3424:	2a e1 38 5f 	P2 = 0x5f38 (X);		/*		P2=0x5f38(24376) */
    3428:	f7 a3       	R7 = [SP + 0x3c];
    342a:	95 5a       	P2 = P5 + P2;
    342c:	71 bf       	[SP + 0x34] = P1;
    342e:	2c e5 4c 00 	P4 = [P5 + 0x130];
    3432:	32 e7 17 00 	[SP + 0x5c] = P2;
    3436:	37 30       	R6 = R7;
    3438:	5d 32       	P3 = P5;
    343a:	d1 21       	JUMP.S 0x37dc <_SendQueries+0xcec>;
    343c:	00 00       	NOP;
    343e:	60 e4 99 00 	R0 = W[P4 + 0x132] (Z);
    3442:	00 0c       	CC = R0 == 0x0;
    3444:	ca 15       	IF !CC JUMP 0x37d8 <_SendQueries+0xce8> (BP);
    3446:	22 e4 28 00 	R2 = [P4 + 0xa0];
    344a:	38 e4 10 05 	R0 = [FP + 0x1440];
    344e:	02 08       	CC = R2 == R0;
    3450:	c4 15       	IF !CC JUMP 0x37d8 <_SendQueries+0xce8> (BP);
    3452:	b8 e4 05 00 	R0 = B[FP + 0x5] (Z);
    3456:	00 0c       	CC = R0 == 0x0;
    3458:	b8 e4 06 00 	R0 = B[FP + 0x6] (Z);
    345c:	01 02       	R1 = CC;
    345e:	00 0c       	CC = R0 == 0x0;
    3460:	00 02       	R0 = CC;
    3462:	54 32       	P2 = P4;
    3464:	0f 60       	R7 = 0x1 (X);		/*		R7=0x1(  1) */
    3466:	41 68       	P1 = 0x8 (X);		/*		P1=0x8(  8) */
    3468:	b2 e0 13 10 	LSETUP(0x346c <_SendQueries+0x97c>, 0x348e <_SendQueries+0x99e>) LC1 = P1;
    346c:	13 e4 11 00 	R3 = [P2 + 0x44];
    3470:	13 08       	CC = R3 == R2;
    3472:	0e 14       	IF !CC JUMP 0x348e <_SendQueries+0x99e> (BP);
    3474:	13 e4 12 00 	R3 = [P2 + 0x48];
    3478:	24 60       	R4 = 0x4 (X);		/*		R4=0x4(  4) */
    347a:	23 08       	CC = R3 == R4;
    347c:	06 18       	IF CC JUMP 0x3488 <_SendQueries+0x998>;
    347e:	34 60       	R4 = 0x6 (X);		/*		R4=0x6(  6) */
    3480:	23 08       	CC = R3 == R4;
    3482:	07 07       	IF CC R0 = R7;
    3484:	01 0c       	CC = R1 == 0x0;
    3486:	04 1c       	IF CC JUMP 0x348e <_SendQueries+0x99e> (BP);
    3488:	00 0c       	CC = R0 == 0x0;
    348a:	e4 10       	IF !CC JUMP 0x3652 <_SendQueries+0xb62>;
    348c:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    348e:	62 6c       	P2 += 0xc;		/* ( 12) */
    3490:	64 24       	JUMP.S 0x3d58 <_SendQueries+0x1268>;
    3492:	20 e4 2a 00 	R0 = [P4 + 0xa8];
    3496:	00 0c       	CC = R0 == 0x0;
    3498:	0d 1c       	IF CC JUMP 0x34b2 <_SendQueries+0x9c2> (BP);
    349a:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    349c:	98 a0       	R0 = [P3 + 0x8];
    349e:	00 0c       	CC = R0 == 0x0;
    34a0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    34a2:	01 06       	IF !CC R0 = R1;
    34a4:	30 e6 16 00 	[SP + 0x58] = R0;
    34a8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    34aa:	21 e1 00 80 	R1 = -0x8000 (X);		/*		R1=0xffff8000(-32768) */
    34ae:	01 06       	IF !CC R0 = R1;
    34b0:	05 20       	JUMP.S 0x34ba <_SendQueries+0x9ca>;
    34b2:	00 68       	P0 = 0x0 (X);		/*		P0=0x0(  0) */
    34b4:	30 e7 16 00 	[SP + 0x58] = P0;
    34b8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    34ba:	2d e1 34 01 	P5 = 0x134 (X);		/*		P5=0x134(308) */
    34be:	31 e4 17 00 	R1 = [SP + 0x5c];
    34c2:	73 a3       	R3 = [SP + 0x34];
    34c4:	6c 5b       	P5 = P4 + P5;
    34c6:	f5 bc       	[SP + 0xc] = P5;
    34c8:	99 52       	R2 = R1 - R3;
    34ca:	61 e5 1a 01 	R1 = W[P4 + 0x234] (X);
    34ce:	31 b6       	W[SP + 0x10] = R1;
    34d0:	61 e5 1b 01 	R1 = W[P4 + 0x236] (X);
    34d4:	08 56       	R0 = R0 | R1;
    34d6:	b0 b6       	W[SP + 0x14] = R0;
    34d8:	05 30       	R0 = R5;
    34da:	0e 30       	R1 = R6;
    34dc:	ff e3 92 e5 	CALL 0x0 <_AddRecordToResponseList>;
    34e0:	30 e6 13 00 	[SP + 0x4c] = R0;
    34e4:	00 0c       	CC = R0 == 0x0;
    34e6:	79 19       	IF CC JUMP 0x37d8 <_SendQueries+0xce8>;
    34e8:	45 30       	R0 = P5;
    34ea:	ff e3 8b e5 	CALL 0x0 <_AddRecordToResponseList>;
    34ee:	41 e1 d5 20 	R1.H = 0x20d5;		/* (8405)	R1=0x20d58000(550862848) */
    34f2:	38 30       	R7 = R0;
    34f4:	01 e1 39 6b 	R1.L = 0x6b39;		/* (27449)	R1=0x20d56b39(550857529) */
    34f8:	ff e3 84 e5 	CALL 0x0 <_AddRecordToResponseList>;
    34fc:	82 c6 d0 83 	R1 = R0 >> 0x6;
    3500:	62 a0       	R2 = [P4 + 0x4];
    3502:	20 e1 f3 01 	R0 = 0x1f3 (X);		/*		R0=0x1f3(499) */
    3506:	c1 40       	R1 *= R0;
    3508:	f5 bc       	[SP + 0xc] = P5;
    350a:	4f 52       	R1 = R7 - R1;
    350c:	43 30       	R0 = P3;
    350e:	ff e3 6b f7 	CALL 0x23e4 <_CacheGroupForName>;
    3512:	20 30       	R4 = R0;
    3514:	00 0c       	CC = R0 == 0x0;
    3516:	04 1c       	IF CC JUMP 0x351e <_SendQueries+0xa2e> (BP);
    3518:	00 32       	P0 = R0;
    351a:	85 ac       	P5 = [P0 + 0x8];
    351c:	02 20       	JUMP.S 0x3520 <_SendQueries+0xa30>;
    351e:	05 68       	P5 = 0x0 (X);		/*		P5=0x0(  0) */
    3520:	70 a3       	R0 = [SP + 0x34];
    3522:	37 e4 14 00 	R7 = [SP + 0x50];
    3526:	b0 b3       	[SP + 0x38] = R0;
    3528:	5a 20       	JUMP.S 0x35dc <_SendQueries+0xaec>;
    352a:	00 00       	NOP;
    352c:	e9 a1       	R1 = [P5 + 0x1c];
    352e:	20 e4 28 00 	R0 = [P4 + 0xa0];
    3532:	01 08       	CC = R1 == R0;
    3534:	52 14       	IF !CC JUMP 0x35d8 <_SendQueries+0xae8> (BP);
    3536:	a8 e4 04 00 	R0 = B[P5 + 0x4] (Z);
    353a:	91 61       	R1 = 0x32 (X);		/*		R1=0x32( 50) */
    353c:	08 54       	R0 = R0 & R1;
    353e:	00 0c       	CC = R0 == 0x0;
    3540:	4c 14       	IF !CC JUMP 0x35d8 <_SendQueries+0xae8> (BP);
    3542:	e8 a2       	R0 = [P5 + 0x2c];
    3544:	00 0c       	CC = R0 == 0x0;
    3546:	49 14       	IF !CC JUMP 0x35d8 <_SendQueries+0xae8> (BP);
    3548:	55 32       	P2 = P5;
    354a:	62 6d       	P2 += 0x2c;		/* ( 44) */
    354c:	52 30       	R2 = P2;
    354e:	17 08       	CC = R7 == R2;
    3550:	44 1c       	IF CC JUMP 0x35d8 <_SendQueries+0xae8> (BP);
    3552:	23 e1 00 04 	R3 = 0x400 (X);		/*		R3=0x400(1024) */
    3556:	28 a6       	R0 = W[P5 + 0x10] (Z);
    3558:	18 0a       	CC = R0 <= R3 (IU);
    355a:	3f 14       	IF !CC JUMP 0x35d8 <_SendQueries+0xae8> (BP);
    355c:	45 30       	R0 = P5;
    355e:	f2 be       	[SP + 0x2c] = P2;
    3560:	20 64       	R0 += 0x4;		/* (  4) */
    3562:	4c 30       	R1 = P4;
    3564:	ff e3 4e e5 	CALL 0x0 <_AddRecordToResponseList>;
    3568:	00 0c       	CC = R0 == 0x0;
    356a:	f2 ae       	P2 = [SP + 0x2c];
    356c:	36 1c       	IF CC JUMP 0x35d8 <_SendQueries+0xae8> (BP);
    356e:	18 e4 37 00 	R0 = [P3 + 0xdc];
    3572:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0x0 <_AddRecordToResponseList> */
    3576:	2b a3       	R3 = [P5 + 0x30];
    3578:	c3 52       	R3 = R3 - R0;
    357a:	08 e1 00 00 	P0.L = 0x0;		/* (  0)	P0=0x0 <_AddRecordToResponseList> */
    357e:	01 91       	R1 = [P0];
    3580:	e8 a0       	R0 = [P5 + 0xc];
    3582:	c8 40       	R0 *= R1;
    3584:	82 c6 08 85 	R2 = R0 >> 0x1f;
    3588:	02 50       	R0 = R2 + R0;
    358a:	08 4d       	R0 >>>= 0x1;
    358c:	03 50       	R0 = R3 + R0;
    358e:	08 09       	CC = R0 <= R1;
    3590:	24 1c       	IF CC JUMP 0x35d8 <_SendQueries+0xae8> (BP);
    3592:	07 32       	P0 = R7;
    3594:	68 a6       	R0 = W[P5 + 0x12] (Z);
    3596:	60 64       	R0 += 0xc;		/* ( 12) */
    3598:	b1 a3       	R1 = [SP + 0x38];
    359a:	41 50       	R1 = R1 + R0;
    359c:	45 93       	[P0] = P5;
    359e:	05 32       	P0 = R5;
    35a0:	b1 b3       	[SP + 0x38] = R1;
    35a2:	80 a4       	R0 = W[P0 + 0x4] (Z);
    35a4:	08 0e       	CC = R0 <= 0x1 (IU);
    35a6:	18 18       	IF CC JUMP 0x35d6 <_SendQueries+0xae6>;
    35a8:	32 e4 13 00 	R2 = [SP + 0x4c];
    35ac:	0a 50       	R0 = R2 + R1;
    35ae:	33 e4 17 00 	R3 = [SP + 0x5c];
    35b2:	03 0a       	CC = R3 <= R0 (IU);
    35b4:	11 14       	IF !CC JUMP 0x35d6 <_SendQueries+0xae6> (BP);
    35b6:	58 e5 c8 2c 	R0 = W[P3 + 0x5990] (X);
    35ba:	f8 67       	R0 += -0x1;		/* ( -1) */
    35bc:	58 e6 c8 2c 	W[P3 + 0x5990] = R0;
    35c0:	32 e5 14 00 	P2 = [SP + 0x50];
    35c4:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    35c6:	04 20       	JUMP.S 0x35ce <_SendQueries+0xade>;
    35c8:	11 93       	[P2] = R1;
    35ca:	10 32       	P2 = R0;
    35cc:	62 6d       	P2 += 0x2c;		/* ( 44) */
    35ce:	10 91       	R0 = [P2];
    35d0:	00 0c       	CC = R0 == 0x0;
    35d2:	fb 17       	IF !CC JUMP 0x35c8 <_SendQueries+0xad8> (BP);
    35d4:	02 21       	JUMP.S 0x37d8 <_SendQueries+0xce8>;
    35d6:	7a 30       	R7 = P2;
    35d8:	00 00       	NOP;
    35da:	6d 91       	P5 = [P5];
    35dc:	45 0c       	CC = P5 == 0x0;
    35de:	a6 17       	IF !CC JUMP 0x352a <_SendQueries+0xa3a> (BP);
    35e0:	30 e4 16 00 	R0 = [SP + 0x58];
    35e4:	00 0c       	CC = R0 == 0x0;
    35e6:	07 1c       	IF CC JUMP 0x35f4 <_SendQueries+0xb04> (BP);
    35e8:	18 e4 37 00 	R0 = [P3 + 0xdc];
    35ec:	00 0c       	CC = R0 == 0x0;
    35ee:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    35f0:	01 07       	IF CC R0 = R1;
    35f2:	60 b1       	[P4 + 0x14] = R0;
    35f4:	04 0c       	CC = R4 == 0x0;
    35f6:	26 1c       	IF CC JUMP 0x3642 <_SendQueries+0xb52> (BP);
    35f8:	04 32       	P0 = R4;
    35fa:	85 ac       	P5 = [P0 + 0x8];
    35fc:	23 20       	JUMP.S 0x3642 <_SendQueries+0xb52>;
    35fe:	00 00       	NOP;
    3600:	e9 a1       	R1 = [P5 + 0x1c];
    3602:	20 e4 28 00 	R0 = [P4 + 0xa0];
    3606:	01 08       	CC = R1 == R0;
    3608:	1b 14       	IF !CC JUMP 0x363e <_SendQueries+0xb4e> (BP);
    360a:	e8 a2       	R0 = [P5 + 0x2c];
    360c:	00 0c       	CC = R0 == 0x0;
    360e:	18 14       	IF !CC JUMP 0x363e <_SendQueries+0xb4e> (BP);
    3610:	45 30       	R0 = P5;
    3612:	60 65       	R0 += 0x2c;		/* ( 44) */
    3614:	07 08       	CC = R7 == R0;
    3616:	14 18       	IF CC JUMP 0x363e <_SendQueries+0xb4e>;
    3618:	c0 66       	R0 += -0x28;		/* (-40) */
    361a:	4c 30       	R1 = P4;
    361c:	ff e3 f2 e4 	CALL 0x0 <_AddRecordToResponseList>;
    3620:	00 0c       	CC = R0 == 0x0;
    3622:	0e 1c       	IF CC JUMP 0x363e <_SendQueries+0xb4e> (BP);
    3624:	28 e4 11 00 	R0 = [P5 + 0x44];
    3628:	08 64       	R0 += 0x1;		/* (  1) */
    362a:	28 e6 11 00 	[P5 + 0x44] = R0;
    362e:	18 e4 37 00 	R0 = [P3 + 0xdc];
    3632:	28 e6 12 00 	[P5 + 0x48] = R0;
    3636:	43 30       	R0 = P3;
    3638:	4d 30       	R1 = P5;
    363a:	ff e3 f7 f8 	CALL 0x2828 <_SetNextCacheCheckTimeForRecord>;
    363e:	00 00       	NOP;
    3640:	6d 91       	P5 = [P5];
    3642:	45 0c       	CC = P5 == 0x0;
    3644:	dd 17       	IF !CC JUMP 0x35fe <_SendQueries+0xb0e> (BP);
    3646:	b0 a3       	R0 = [SP + 0x38];
    3648:	70 b3       	[SP + 0x34] = R0;
    364a:	37 e6 14 00 	[SP + 0x50] = R7;
    364e:	36 e4 13 00 	R6 = [SP + 0x4c];
    3652:	20 e4 46 00 	R0 = [P4 + 0x118];
    3656:	00 0c       	CC = R0 == 0x0;
    3658:	09 14       	IF !CC JUMP 0x366a <_SendQueries+0xb7a> (BP);
    365a:	20 e4 29 00 	R0 = [P4 + 0xa4];
    365e:	00 0c       	CC = R0 == 0x0;
    3660:	05 1c       	IF CC JUMP 0x366a <_SendQueries+0xb7a> (BP);
    3662:	47 30       	R0 = FP;
    3664:	ff e3 ce e4 	CALL 0x0 <_AddRecordToResponseList>;
    3668:	02 20       	JUMP.S 0x366c <_SendQueries+0xb7c>;
    366a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    366c:	20 e6 28 00 	[P4 + 0xa0] = R0;
    3670:	a0 e4 b9 00 	R0 = B[P4 + 0xb9] (Z);
    3674:	00 0c       	CC = R0 == 0x0;
    3676:	b1 1c       	IF CC JUMP 0x37d8 <_SendQueries+0xce8> (BP);
    3678:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0x0 <_AddRecordToResponseList> */
    367c:	08 e1 00 00 	P0.L = 0x0;		/* (  0)	P0=0x0 <_AddRecordToResponseList> */
    3680:	24 e4 46 00 	R4 = [P4 + 0x118];
    3684:	00 91       	R0 = [P0];
    3686:	04 08       	CC = R4 == R0;
    3688:	0f 18       	IF CC JUMP 0x36a6 <_SendQueries+0xbb6>;
    368a:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x8 */
    368e:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    3692:	08 91       	R0 = [P1];
    3694:	04 08       	CC = R4 == R0;
    3696:	08 18       	IF CC JUMP 0x36a6 <_SendQueries+0xbb6>;
    3698:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x5f38 */
    369c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    36a0:	10 91       	R0 = [P2];
    36a2:	04 08       	CC = R4 == R0;
    36a4:	0c 14       	IF !CC JUMP 0x36bc <_SendQueries+0xbcc> (BP);
    36a6:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    36aa:	94 5a       	P2 = P4 + P2;
    36ac:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1(  1) */
    36b0:	f2 bc       	[SP + 0xc] = P2;
    36b2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    36b4:	01 e1 84 0b 	R1.L = 0xb84;		/* (2948)	R1=0xb84(2948) */
    36b8:	14 30       	R2 = R4;
    36ba:	1b 20       	JUMP.S 0x36f0 <_SendQueries+0xc00>;
    36bc:	2a e1 35 01 	P2 = 0x135 (X);		/*		P2=0x135(309) */
    36c0:	a1 e4 34 01 	R1 = B[P4 + 0x134] (Z);
    36c4:	94 5a       	P2 = P4 + P2;
    36c6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    36c8:	0f 60       	R7 = 0x1 (X);		/*		R7=0x1(  1) */
    36ca:	75 20       	JUMP.S 0x37b4 <_SendQueries+0xcc4>;
    36cc:	23 e1 40 00 	R3 = 0x40 (X);		/*		R3=0x40( 64) */
    36d0:	12 98       	R2 = B[P2++] (Z);
    36d2:	1a 08       	CC = R2 == R3;
    36d4:	6a 14       	IF !CC JUMP 0x37a8 <_SendQueries+0xcb8> (BP);
    36d6:	2a 60       	R2 = 0x5 (X);		/*		R2=0x5(  5) */
    36d8:	10 08       	CC = R0 == R2;
    36da:	0e 1c       	IF CC JUMP 0x36f6 <_SendQueries+0xc06> (BP);
    36dc:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    36e0:	94 5a       	P2 = P4 + P2;
    36e2:	f0 b0       	[SP + 0xc] = R0;
    36e4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xb84(2948) */
    36e8:	52 30       	R2 = P2;
    36ea:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    36ec:	01 e1 cc 0b 	R1.L = 0xbcc;		/* (3020)	R1=0xbcc(3020) */
    36f0:	ff e3 88 e4 	CALL 0x0 <_AddRecordToResponseList>;
    36f4:	6d 20       	JUMP.S 0x37ce <_SendQueries+0xcde>;
    36f6:	93 60       	R3 = 0x12 (X);		/*		R3=0x12( 18) */
    36f8:	1f 09       	CC = R7 <= R3;
    36fa:	0d 1c       	IF CC JUMP 0x3714 <_SendQueries+0xc24> (BP);
    36fc:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    3700:	94 5a       	P2 = P4 + P2;
    3702:	ff 67       	R7 += -0x1;		/* ( -1) */
    3704:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xbcc(3020) */
    3708:	52 30       	R2 = P2;
    370a:	f7 b0       	[SP + 0xc] = R7;
    370c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    370e:	01 e1 14 0c 	R1.L = 0xc14;		/* (3092)	R1=0xc14(3092) */
    3712:	ef 2f       	JUMP.S 0x36f0 <_SendQueries+0xc00>;
    3714:	79 52       	R1 = R1 - R7;
    3716:	29 32       	P5 = R1;
    3718:	70 69       	P0 = 0x2e (X);		/*		P0=0x2e( 46) */
    371a:	45 09       	CC = P5 <= P0;
    371c:	0c 1c       	IF CC JUMP 0x3734 <_SendQueries+0xc44> (BP);
    371e:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    3722:	f1 b0       	[SP + 0xc] = R1;
    3724:	94 5a       	P2 = P4 + P2;
    3726:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xc14(3092) */
    372a:	52 30       	R2 = P2;
    372c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    372e:	01 e1 60 0c 	R1.L = 0xc60;		/* (3168)	R1=0xc60(3168) */
    3732:	df 2f       	JUMP.S 0x36f0 <_SendQueries+0xc00>;
    3734:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    3738:	94 5a       	P2 = P4 + P2;
    373a:	1f 30       	R3 = R7;
    373c:	29 e1 08 04 	P1 = 0x408 (X);		/*		P1=0x408(1032) */
    3740:	fb 67       	R3 += -0x1;		/* ( -1) */
    3742:	71 5a       	P1 = P1 + SP;
    3744:	4a 30       	R1 = P2;
    3746:	41 30       	R0 = P1;
    3748:	13 30       	R2 = R3;
    374a:	b3 b2       	[SP + 0x28] = R3;
    374c:	f2 be       	[SP + 0x2c] = P2;
    374e:	09 64       	R1 += 0x1;		/* (  1) */
    3750:	ff e3 58 e4 	CALL 0x0 <_AddRecordToResponseList>;
    3754:	28 e1 08 04 	P0 = 0x408 (X);		/*		P0=0x408(1032) */
    3758:	30 5a       	P0 = P0 + SP;
    375a:	b3 a2       	R3 = [SP + 0x28];
    375c:	48 30       	R1 = P0;
    375e:	19 50       	R0 = R1 + R3;
    3760:	08 32       	P1 = R0;
    3762:	03 60       	R3 = 0x0 (X);		/*		R3=0x0(  0) */
    3764:	0f 64       	R7 += 0x1;		/* (  1) */
    3766:	28 e1 d8 03 	P0 = 0x3d8 (X);		/*		P0=0x3d8(984) */
    376a:	30 5a       	P0 = P0 + SP;
    376c:	0b 9b       	B[P1] = R3;
    376e:	f2 ae       	P2 = [SP + 0x2c];
    3770:	55 30       	R2 = P5;
    3772:	b3 b2       	[SP + 0x28] = R3;
    3774:	42 30       	R0 = P2;
    3776:	78 50       	R1 = R0 + R7;
    3778:	40 30       	R0 = P0;
    377a:	ff e3 43 e4 	CALL 0x0 <_AddRecordToResponseList>;
    377e:	29 e1 d8 03 	P1 = 0x3d8 (X);		/*		P1=0x3d8(984) */
    3782:	71 5a       	P1 = P1 + SP;
    3784:	69 5b       	P5 = P1 + P5;
    3786:	b3 a2       	R3 = [SP + 0x28];
    3788:	2b 9b       	B[P5] = R3;
    378a:	f1 bc       	[SP + 0xc] = P1;
    378c:	a0 e4 b9 00 	R0 = B[P4 + 0xb9] (Z);
    3790:	19 60       	R1 = 0x3 (X);		/*		R1=0x3(  3) */
    3792:	01 52       	R0 = R1 - R0;
    3794:	28 e1 08 04 	P0 = 0x408 (X);		/*		P0=0x408(1032) */
    3798:	30 b1       	[SP + 0x10] = R0;
    379a:	30 5a       	P0 = P0 + SP;
    379c:	43 30       	R0 = P3;
    379e:	0c 30       	R1 = R4;
    37a0:	50 30       	R2 = P0;
    37a2:	ff e3 2f e4 	CALL 0x0 <_AddRecordToResponseList>;
    37a6:	14 20       	JUMP.S 0x37ce <_SendQueries+0xcde>;
    37a8:	d3 61       	R3 = 0x3a (X);		/*		R3=0x3a( 58) */
    37aa:	1a 08       	CC = R2 == R3;
    37ac:	10 30       	R2 = R0;
    37ae:	0a 64       	R2 += 0x1;		/* (  1) */
    37b0:	02 07       	IF CC R0 = R2;
    37b2:	0f 64       	R7 += 0x1;		/* (  1) */
    37b4:	8f 08       	CC = R7 < R1;
    37b6:	8b 1f       	IF CC JUMP 0x36cc <_SendQueries+0xbdc> (BP);
    37b8:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    37bc:	94 5a       	P2 = P4 + P2;
    37be:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3(  3) */
    37c2:	52 30       	R2 = P2;
    37c4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    37c6:	01 e1 a4 0c 	R1.L = 0xca4;		/* (3236)	R1=0xca4(3236) */
    37ca:	ff e3 1b e4 	CALL 0x0 <_AddRecordToResponseList>;
    37ce:	a0 e5 b9 00 	R0 = B[P4 + 0xb9] (X);
    37d2:	f8 67       	R0 += -0x1;		/* ( -1) */
    37d4:	a0 e6 b9 00 	B[P4 + 0xb9] = R0;
    37d8:	00 00       	NOP;
    37da:	64 91       	P4 = [P4];
    37dc:	44 0c       	CC = P4 == 0x0;
    37de:	05 1c       	IF CC JUMP 0x37e8 <_SendQueries+0xcf8> (BP);
    37e0:	1a e5 4d 00 	P2 = [P3 + 0x134];
    37e4:	54 08       	CC = P4 == P2;
    37e6:	2b 16       	IF !CC JUMP 0x343c <_SendQueries+0x94c> (BP);
    37e8:	6b 32       	P5 = P3;
    37ea:	1c e5 f2 07 	P4 = [P3 + 0x1fc8];
    37ee:	3e 30       	R7 = R6;
    37f0:	2b e1 a0 05 	P3 = 0x5a0 (X);		/*		P3=0x5a0(1440) */
    37f4:	44 20       	JUMP.S 0x387c <_SendQueries+0xd8c>;
    37f6:	00 00       	NOP;
    37f8:	21 e4 26 00 	R1 = [P4 + 0x98];
    37fc:	38 e4 10 05 	R0 = [FP + 0x1440];
    3800:	01 08       	CC = R1 == R0;
    3802:	3b 14       	IF !CC JUMP 0x3878 <_SendQueries+0xd88> (BP);
    3804:	a0 e4 85 00 	R0 = B[P4 + 0x85] (Z);
    3808:	08 0e       	CC = R0 <= 0x1 (IU);
    380a:	08 1c       	IF CC JUMP 0x381a <_SendQueries+0xd2a> (BP);
    380c:	24 e1 00 80 	R4 = -0x8000 (X);		/*		R4=0xffff8000(-32768) */
    3810:	a8 a0       	R0 = [P5 + 0x8];
    3812:	00 0c       	CC = R0 == 0x0;
    3814:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3816:	04 06       	IF !CC R0 = R4;
    3818:	02 20       	JUMP.S 0x381c <_SendQueries+0xd2c>;
    381a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    381c:	69 e4 c8 2c 	R1 = W[P5 + 0x5990] (Z);
    3820:	66 a6       	R6 = W[P4 + 0x12] (Z);
    3822:	01 0c       	CC = R1 == 0x0;
    3824:	71 a3       	R1 = [SP + 0x34];
    3826:	66 64       	R6 += 0xc;		/* ( 12) */
    3828:	8e 51       	R6 = R6 + R1;
    382a:	21 a2       	R1 = [P4 + 0x20];
    382c:	f1 b0       	[SP + 0xc] = R1;
    382e:	21 e1 ff 00 	R1 = 0xff (X);		/*		R1=0xff(255) */
    3832:	2a e1 ec 22 	P2 = 0x22ec (X);		/*		P2=0x22ec(8940) */
    3836:	d3 06       	IF !CC P2 = P3;
    3838:	28 e1 98 59 	P0 = 0x5998 (X);		/*		P0=0x5998(22936) */
    383c:	31 b6       	W[SP + 0x10] = R1;
    383e:	21 a9       	R1 = W[P4 + 0x8] (X);
    3840:	82 5a       	P2 = P2 + P0;
    3842:	08 56       	R0 = R0 | R1;
    3844:	95 5a       	P2 = P5 + P2;
    3846:	52 30       	R2 = P2;
    3848:	b0 b6       	W[SP + 0x14] = R0;
    384a:	b2 52       	R2 = R2 - R6;
    384c:	05 30       	R0 = R5;
    384e:	0f 30       	R1 = R7;
    3850:	ff e3 d8 e3 	CALL 0x0 <_AddRecordToResponseList>;
    3854:	20 30       	R4 = R0;
    3856:	00 0c       	CC = R0 == 0x0;
    3858:	10 1c       	IF CC JUMP 0x3878 <_SendQueries+0xd88> (BP);
    385a:	e0 a1       	R0 = [P4 + 0x1c];
    385c:	00 0c       	CC = R0 == 0x0;
    385e:	05 14       	IF !CC JUMP 0x3868 <_SendQueries+0xd78> (BP);
    3860:	47 30       	R0 = FP;
    3862:	ff e3 cf e3 	CALL 0x0 <_AddRecordToResponseList>;
    3866:	02 20       	JUMP.S 0x386a <_SendQueries+0xd7a>;
    3868:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    386a:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
    386c:	20 e6 26 00 	[P4 + 0x98] = R0;
    3870:	a2 e6 89 00 	B[P4 + 0x89] = R2;
    3874:	76 b3       	[SP + 0x34] = R6;
    3876:	3c 30       	R7 = R4;
    3878:	00 00       	NOP;
    387a:	64 91       	P4 = [P4];
    387c:	44 0c       	CC = P4 == 0x0;
    387e:	bc 17       	IF !CC JUMP 0x37f6 <_SendQueries+0xd06> (BP);
    3880:	29 20       	JUMP.S 0x38d2 <_SendQueries+0xde2>;
    3882:	45 30       	R0 = P5;
    3884:	20 64       	R0 += 0x4;		/* (  4) */
    3886:	f0 b0       	[SP + 0xc] = R0;
    3888:	21 e4 37 00 	R1 = [P4 + 0xdc];
    388c:	28 a3       	R0 = [P5 + 0x30];
    388e:	01 52       	R0 = R1 - R0;
    3890:	19 91       	R1 = [P3];
    3892:	ff e3 b7 e3 	CALL 0x0 <_AddRecordToResponseList>;
    3896:	e9 a0       	R1 = [P5 + 0xc];
    3898:	01 52       	R0 = R1 - R0;
    389a:	30 b1       	[SP + 0x10] = R0;
    389c:	76 b1       	[SP + 0x14] = R6;
    389e:	05 30       	R0 = R5;
    38a0:	0f 30       	R1 = R7;
    38a2:	14 30       	R2 = R4;
    38a4:	ff e3 ae e3 	CALL 0x0 <_AddRecordToResponseList>;
    38a8:	00 0c       	CC = R0 == 0x0;
    38aa:	08 1c       	IF CC JUMP 0x38ba <_SendQueries+0xdca> (BP);
    38ac:	38 30       	R7 = R0;
    38ae:	e9 a2       	R1 = [P5 + 0x2c];
    38b0:	31 e6 07 01 	[SP + 0x41c] = R1;
    38b4:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    38b6:	e9 b2       	[P5 + 0x2c] = R1;
    38b8:	1f 20       	JUMP.S 0x38f6 <_SendQueries+0xe06>;
    38ba:	00 00       	NOP;
    38bc:	60 e4 c8 2c 	R0 = W[P4 + 0x5990] (Z);
    38c0:	6c 32       	P5 = P4;
    38c2:	08 0e       	CC = R0 <= 0x1 (IU);
    38c4:	1e 1c       	IF CC JUMP 0x3900 <_SendQueries+0xe10> (BP);
    38c6:	a0 e5 8e 59 	R0 = B[P4 + 0x598e] (X);
    38ca:	08 4a       	BITSET (R0, 0x1);		/* bit  1 */
    38cc:	a0 e6 8e 59 	B[P4 + 0x598e] = R0;
    38d0:	18 20       	JUMP.S 0x3900 <_SendQueries+0xe10>;
    38d2:	2a e1 92 59 	P2 = 0x5992 (X);		/*		P2=0x5992(22930) */
    38d6:	30 af       	P0 = [SP + 0x30];
    38d8:	95 5a       	P2 = P5 + P2;
    38da:	62 30       	R4 = P2;
    38dc:	2a e1 a0 05 	P2 = 0x5a0 (X);		/*		P2=0x5a0(1440) */
    38e0:	02 44       	P2 -= P0;
    38e2:	29 e1 98 59 	P1 = 0x5998 (X);		/*		P1=0x5998(22936) */
    38e6:	8a 5a       	P2 = P2 + P1;
    38e8:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x5a0 */
    38ec:	95 5a       	P2 = P5 + P2;
    38ee:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
    38f2:	72 30       	R6 = P2;
    38f4:	65 32       	P4 = P5;
    38f6:	35 e5 07 01 	P5 = [SP + 0x41c];
    38fa:	45 0c       	CC = P5 == 0x0;
    38fc:	c3 17       	IF !CC JUMP 0x3882 <_SendQueries+0xd92> (BP);
    38fe:	6c 32       	P5 = P4;
    3900:	2a e1 94 59 	P2 = 0x5994 (X);		/*		P2=0x5994(22932) */
    3904:	95 5a       	P2 = P5 + P2;
    3906:	72 bf       	[SP + 0x34] = P2;
    3908:	55 32       	P2 = P5;
    390a:	ba 6d       	P2 += 0x37;		/* ( 55) */
    390c:	2c e5 f2 07 	P4 = [P5 + 0x1fc8];
    3910:	03 68       	P3 = 0x0 (X);		/*		P3=0x0(  0) */
    3912:	b2 bf       	[SP + 0x38] = P2;
    3914:	24 e1 a0 05 	R4 = 0x5a0 (X);		/*		R4=0x5a0(1440) */
    3918:	39 20       	JUMP.S 0x398a <_SendQueries+0xe9a>;
    391a:	00 00       	NOP;
    391c:	a0 e4 89 00 	R0 = B[P4 + 0x89] (Z);
    3920:	00 0c       	CC = R0 == 0x0;
    3922:	32 1c       	IF CC JUMP 0x3986 <_SendQueries+0xe96> (BP);
    3924:	74 30       	R6 = P4;
    3926:	69 e4 c9 2c 	R1 = W[P5 + 0x5992] (Z);
    392a:	26 64       	R6 += 0x4;		/* (  4) */
    392c:	e0 a0       	R0 = [P4 + 0xc];
    392e:	01 0c       	CC = R1 == 0x0;
    3930:	08 14       	IF !CC JUMP 0x3940 <_SendQueries+0xe50> (BP);
    3932:	29 e4 65 16 	R1 = [P5 + 0x5994];
    3936:	01 0c       	CC = R1 == 0x0;
    3938:	2a e1 ec 22 	P2 = 0x22ec (X);		/*		P2=0x22ec(8940) */
    393c:	94 06       	IF !CC P2 = R4;
    393e:	03 20       	JUMP.S 0x3944 <_SendQueries+0xe54>;
    3940:	2a e1 a0 05 	P2 = 0x5a0 (X);		/*		P2=0x5a0(1440) */
    3944:	28 e1 98 59 	P0 = 0x5998 (X);		/*		P0=0x5998(22936) */
    3948:	82 5a       	P2 = P2 + P0;
    394a:	30 b1       	[SP + 0x10] = R0;
    394c:	95 5a       	P2 = P5 + P2;
    394e:	0f 30       	R1 = R7;
    3950:	f6 b0       	[SP + 0xc] = R6;
    3952:	72 bd       	[SP + 0x14] = P2;
    3954:	05 30       	R0 = R5;
    3956:	72 a3       	R2 = [SP + 0x34];
    3958:	ff e3 54 e3 	CALL 0x0 <_AddRecordToResponseList>;
    395c:	4b 30       	R1 = P3;
    395e:	a1 e6 89 00 	B[P4 + 0x89] = R1;
    3962:	00 0c       	CC = R0 == 0x0;
    3964:	10 14       	IF !CC JUMP 0x3984 <_SendQueries+0xe94> (BP);
    3966:	61 a2       	R1 = [P4 + 0x24];
    3968:	b2 a3       	R2 = [SP + 0x38];
    396a:	21 64       	R1 += 0x4;		/* (  4) */
    396c:	06 30       	R0 = R6;
    396e:	ff e3 49 e3 	CALL 0x0 <_AddRecordToResponseList>;
    3972:	10 30       	R2 = R0;
    3974:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    3978:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    397a:	01 e1 e8 0c 	R1.L = 0xce8;		/* (3304)	R1=0xce8(3304) */
    397e:	ff e3 41 e3 	CALL 0x0 <_AddRecordToResponseList>;
    3982:	02 20       	JUMP.S 0x3986 <_SendQueries+0xe96>;
    3984:	38 30       	R7 = R0;
    3986:	00 00       	NOP;
    3988:	64 91       	P4 = [P4];
    398a:	44 0c       	CC = P4 == 0x0;
    398c:	c7 17       	IF !CC JUMP 0x391a <_SendQueries+0xe2a> (BP);
    398e:	f2 a3       	R2 = [SP + 0x3c];
    3990:	17 0a       	CC = R7 <= R2 (IU);
    3992:	41 19       	IF CC JUMP 0x3c14 <_SendQueries+0x1124>;
    3994:	33 a3       	R3 = [SP + 0x30];
    3996:	03 0c       	CC = R3 == 0x0;
    3998:	cd 1c       	IF CC JUMP 0x3b32 <_SendQueries+0x1042> (BP);
    399a:	48 61       	R0 = 0x29 (X);		/*		R0=0x29( 41) */
    399c:	b0 b5       	W[SP + 0xc] = R0;
    399e:	20 e1 94 11 	R0 = 0x1194 (X);		/*		R0=0x1194(4500) */
    39a2:	30 b1       	[SP + 0x10] = R0;
    39a4:	00 61       	R0 = 0x20 (X);		/*		R0=0x20( 32) */
    39a6:	b0 e6 14 00 	B[SP + 0x14] = R0;
    39aa:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    39ac:	28 e1 64 00 	P0 = 0x64 (X);		/*		P0=0x64(100) */
    39b0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x5a0 */
    39b4:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    39b8:	b0 b1       	[SP + 0x18] = R0;
    39ba:	f0 b1       	[SP + 0x1c] = R0;
    39bc:	30 b2       	[SP + 0x20] = R0;
    39be:	30 5a       	P0 = P0 + SP;
    39c0:	40 30       	R0 = P0;
    39c2:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    39c4:	12 91       	R2 = [P2];
    39c6:	ff e3 1d e3 	CALL 0x0 <_AddRecordToResponseList>;
    39ca:	20 e1 a0 05 	R0 = 0x5a0 (X);		/*		R0=0x5a0(1440) */
    39ce:	32 e5 22 00 	P2 = [SP + 0x88];
    39d2:	70 e6 36 00 	W[SP + 0x6c] = R0;
    39d6:	00 61       	R0 = 0x20 (X);		/*		R0=0x20( 32) */
    39d8:	70 e6 3a 00 	W[SP + 0x74] = R0;
    39dc:	70 e6 3b 00 	W[SP + 0x76] = R0;
    39e0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    39e2:	90 e6 08 00 	B[P2 + 0x8] = R0;
    39e6:	a8 e5 16 01 	R0 = B[P5 + 0x116] (X);
    39ea:	90 e6 09 00 	B[P2 + 0x9] = R0;
    39ee:	e8 a1       	R0 = [P5 + 0x1c];
    39f0:	d0 b0       	[P2 + 0xc] = R0;
    39f2:	28 a2       	R0 = [P5 + 0x20];
    39f4:	10 b1       	[P2 + 0x10] = R0;
    39f6:	38 e4 1b 05 	R0 = [FP + 0x146c];
    39fa:	50 b1       	[P2 + 0x14] = R0;
    39fc:	38 e4 1c 05 	R0 = [FP + 0x1470];
    3a00:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x5998 */
    3a04:	90 b1       	[P2 + 0x18] = R0;
    3a06:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    3a0a:	08 91       	R0 = [P1];
    3a0c:	d0 b1       	[P2 + 0x1c] = R0;
    3a0e:	48 a0       	R0 = [P1 + 0x4];
    3a10:	10 b2       	[P2 + 0x20] = R0;
    3a12:	20 60       	R0 = 0x4 (X);		/*		R0=0x4(  4) */
    3a14:	90 b4       	W[P2 + 0x4] = R0;
    3a16:	e9 a1       	R1 = [P5 + 0x1c];
    3a18:	38 e4 1b 05 	R0 = [FP + 0x146c];
    3a1c:	01 08       	CC = R1 == R0;
    3a1e:	0a 14       	IF !CC JUMP 0x3a32 <_SendQueries+0xf42> (BP);
    3a20:	69 e4 10 00 	R1 = W[P5 + 0x20] (Z);
    3a24:	78 e4 38 0a 	R0 = W[FP + 0x1470] (Z);
    3a28:	01 08       	CC = R1 == R0;
    3a2a:	70 60       	R0 = 0xe (X);		/*		R0=0xe( 14) */
    3a2c:	41 60       	R1 = 0x8 (X);		/*		R1=0x8(  8) */
    3a2e:	01 07       	IF CC R0 = R1;
    3a30:	02 20       	JUMP.S 0x3a34 <_SendQueries+0xf44>;
    3a32:	70 60       	R0 = 0xe (X);		/*		R0=0xe( 14) */
    3a34:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    3a38:	d0 b4       	W[P2 + 0x6] = R0;
    3a3a:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    3a3e:	08 91       	R0 = [P1];
    3a40:	00 0c       	CC = R0 == 0x0;
    3a42:	11 1c       	IF CC JUMP 0x3a64 <_SendQueries+0xf74> (BP);
    3a44:	4a 30       	R1 = P2;
    3a46:	55 30       	R2 = P5;
    3a48:	21 64       	R1 += 0x4;		/* (  4) */
    3a4a:	ba 65       	R2 += 0x37;		/* ( 55) */
    3a4c:	30 e4 12 00 	R0 = [SP + 0x48];
    3a50:	ff e3 d8 e2 	CALL 0x0 <_AddRecordToResponseList>;
    3a54:	10 30       	R2 = R0;
    3a56:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x8(  8) */
    3a5a:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    3a5c:	01 e1 30 0d 	R1.L = 0xd30;		/* (3376)	R1=0xd30(3376) */
    3a60:	ff e3 d0 e2 	CALL 0x0 <_AddRecordToResponseList>;
    3a64:	2a e1 96 59 	P2 = 0x5996 (X);		/*		P2=0x5996(22934) */
    3a68:	95 5a       	P2 = P5 + P2;
    3a6a:	52 30       	R2 = P2;
    3a6c:	31 e5 12 00 	P1 = [SP + 0x48];
    3a70:	32 e5 18 00 	P2 = [SP + 0x60];
    3a74:	30 e4 1c 00 	R0 = [SP + 0x70];
    3a78:	30 b1       	[SP + 0x10] = R0;
    3a7a:	0f 30       	R1 = R7;
    3a7c:	f1 bc       	[SP + 0xc] = P1;
    3a7e:	72 bd       	[SP + 0x14] = P2;
    3a80:	05 30       	R0 = R5;
    3a82:	ff e3 bf e2 	CALL 0x0 <_AddRecordToResponseList>;
    3a86:	38 30       	R7 = R0;
    3a88:	00 0c       	CC = R0 == 0x0;
    3a8a:	20 14       	IF !CC JUMP 0x3aca <_SendQueries+0xfda> (BP);
    3a8c:	68 e4 c8 2c 	R0 = W[P5 + 0x5990] (Z);
    3a90:	69 e4 cb 2c 	R1 = W[P5 + 0x5996] (Z);
    3a94:	18 32       	P3 = R0;
    3a96:	21 32       	P4 = R1;
    3a98:	31 e4 22 00 	R1 = [SP + 0x88];
    3a9c:	55 30       	R2 = P5;
    3a9e:	6e e4 c9 2c 	R6 = W[P5 + 0x5992] (Z);
    3aa2:	6c e4 ca 2c 	R4 = W[P5 + 0x5994] (Z);
    3aa6:	21 64       	R1 += 0x4;		/* (  4) */
    3aa8:	ba 65       	R2 += 0x37;		/* ( 55) */
    3aaa:	30 e4 12 00 	R0 = [SP + 0x48];
    3aae:	ff e3 a9 e2 	CALL 0x0 <_AddRecordToResponseList>;
    3ab2:	b0 b1       	[SP + 0x18] = R0;
    3ab4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xd30(3376) */
    3ab8:	f6 b0       	[SP + 0xc] = R6;
    3aba:	34 b1       	[SP + 0x10] = R4;
    3abc:	74 bd       	[SP + 0x14] = P4;
    3abe:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3ac0:	01 e1 48 0d 	R1.L = 0xd48;		/* (3400)	R1=0xd48(3400) */
    3ac4:	53 30       	R2 = P3;
    3ac6:	ff e3 9d e2 	CALL 0x0 <_AddRecordToResponseList>;
    3aca:	2a e1 38 5f 	P2 = 0x5f38 (X);		/*		P2=0x5f38(24376) */
    3ace:	95 5a       	P2 = P5 + P2;
    3ad0:	72 30       	R6 = P2;
    3ad2:	37 0a       	CC = R7 <= R6 (IU);
    3ad4:	2f 1c       	IF CC JUMP 0x3b32 <_SendQueries+0x1042> (BP);
    3ad6:	28 e4 64 16 	R0 = [P5 + 0x5990];
    3ada:	08 0c       	CC = R0 == 0x1;
    3adc:	07 14       	IF !CC JUMP 0x3aea <_SendQueries+0xffa> (BP);
    3ade:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
    3ae0:	28 e4 65 16 	R0 = [P5 + 0x5994];
    3ae4:	82 4a       	BITSET (R2, 0x10);		/* bit 16 */
    3ae6:	10 08       	CC = R0 == R2;
    3ae8:	25 1c       	IF CC JUMP 0x3b32 <_SendQueries+0x1042> (BP);
    3aea:	55 30       	R2 = P5;
    3aec:	ba 65       	R2 += 0x37;		/* ( 55) */
    3aee:	6b e4 c9 2c 	R3 = W[P5 + 0x5992] (Z);
    3af2:	68 e4 ca 2c 	R0 = W[P5 + 0x5994] (Z);
    3af6:	23 32       	P4 = R3;
    3af8:	18 32       	P3 = R0;
    3afa:	6c e4 c8 2c 	R4 = W[P5 + 0x5990] (Z);
    3afe:	6b e4 cb 2c 	R3 = W[P5 + 0x5996] (Z);
    3b02:	31 e4 22 00 	R1 = [SP + 0x88];
    3b06:	21 64       	R1 += 0x4;		/* (  4) */
    3b08:	b3 b2       	[SP + 0x28] = R3;
    3b0a:	30 e4 12 00 	R0 = [SP + 0x48];
    3b0e:	ff e3 79 e2 	CALL 0x0 <_AddRecordToResponseList>;
    3b12:	b3 a2       	R3 = [SP + 0x28];
    3b14:	70 b2       	[SP + 0x24] = R0;
    3b16:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xd48(3400) */
    3b1a:	f6 b0       	[SP + 0xc] = R6;
    3b1c:	37 b1       	[SP + 0x10] = R7;
    3b1e:	74 b1       	[SP + 0x14] = R4;
    3b20:	b4 bd       	[SP + 0x18] = P4;
    3b22:	f3 bd       	[SP + 0x1c] = P3;
    3b24:	33 b2       	[SP + 0x20] = R3;
    3b26:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3b28:	01 e1 98 0d 	R1.L = 0xd98;		/* (3480)	R1=0xd98(3480) */
    3b2c:	f2 a3       	R2 = [SP + 0x3c];
    3b2e:	ff e3 69 e2 	CALL 0x0 <_AddRecordToResponseList>;
    3b32:	00 00       	NOP;
    3b34:	a8 e4 8e 59 	R0 = B[P5 + 0x598e] (Z);
    3b38:	08 48       	CC = !BITTST (R0, 0x1);		/* bit  1 */
    3b3a:	0c 1c       	IF CC JUMP 0x3b52 <_SendQueries+0x1062> (BP);
    3b3c:	6a e4 c8 2c 	R2 = W[P5 + 0x5990] (Z);
    3b40:	0a 0e       	CC = R2 <= 0x1 (IU);
    3b42:	08 18       	IF CC JUMP 0x3b52 <_SendQueries+0x1062>;
    3b44:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xd98(3480) */
    3b48:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3b4a:	01 e1 f4 0d 	R1.L = 0xdf4;		/* (3572)	R1=0xdf4(3572) */
    3b4e:	ff e3 59 e2 	CALL 0x0 <_AddRecordToResponseList>;
    3b52:	00 00       	NOP;
    3b54:	b8 e4 05 00 	R0 = B[FP + 0x5] (Z);
    3b58:	00 0c       	CC = R0 == 0x0;
    3b5a:	18 1c       	IF CC JUMP 0x3b8a <_SendQueries+0x109a> (BP);
    3b5c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xdf4(3572) */
    3b60:	38 e4 10 05 	R0 = [FP + 0x1440];
    3b64:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    3b68:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x5f38 */
    3b6c:	f0 b0       	[SP + 0xc] = R0;
    3b6e:	71 b1       	[SP + 0x14] = R1;
    3b70:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    3b74:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3b76:	11 95       	R1 = W[P2] (Z);
    3b78:	30 b1       	[SP + 0x10] = R0;
    3b7a:	31 b7       	W[SP + 0x18] = R1;
    3b7c:	f0 b1       	[SP + 0x1c] = R0;
    3b7e:	30 b2       	[SP + 0x20] = R0;
    3b80:	45 30       	R0 = P5;
    3b82:	0d 30       	R1 = R5;
    3b84:	17 30       	R2 = R7;
    3b86:	ff e3 3d e2 	CALL 0x0 <_AddRecordToResponseList>;
    3b8a:	00 00       	NOP;
    3b8c:	b8 e4 06 00 	R0 = B[FP + 0x6] (Z);
    3b90:	00 0c       	CC = R0 == 0x0;
    3b92:	18 1c       	IF CC JUMP 0x3bc2 <_SendQueries+0x10d2> (BP);
    3b94:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    3b98:	38 e4 10 05 	R0 = [FP + 0x1440];
    3b9c:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    3ba0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    3ba4:	f0 b0       	[SP + 0xc] = R0;
    3ba6:	71 b1       	[SP + 0x14] = R1;
    3ba8:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    3bac:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3bae:	11 95       	R1 = W[P2] (Z);
    3bb0:	30 b1       	[SP + 0x10] = R0;
    3bb2:	31 b7       	W[SP + 0x18] = R1;
    3bb4:	f0 b1       	[SP + 0x1c] = R0;
    3bb6:	30 b2       	[SP + 0x20] = R0;
    3bb8:	45 30       	R0 = P5;
    3bba:	0d 30       	R1 = R5;
    3bbc:	17 30       	R2 = R7;
    3bbe:	ff e3 21 e2 	CALL 0x0 <_AddRecordToResponseList>;
    3bc2:	00 00       	NOP;
    3bc4:	28 e4 3b 00 	R0 = [P5 + 0xec];
    3bc8:	00 0c       	CC = R0 == 0x0;
    3bca:	12 14       	IF !CC JUMP 0x3bee <_SendQueries+0x10fe> (BP);
    3bcc:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    3bd0:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    3bd4:	10 91       	R0 = [P2];
    3bd6:	51 60       	R1 = 0xa (X);		/*		R1=0xa( 10) */
    3bd8:	48 64       	R0 += 0x9;		/* (  9) */
    3bda:	ff e3 13 e2 	CALL 0x0 <_AddRecordToResponseList>;
    3bde:	29 e4 37 00 	R1 = [P5 + 0xdc];
    3be2:	08 50       	R0 = R0 + R1;
    3be4:	00 0c       	CC = R0 == 0x0;
    3be6:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    3be8:	01 07       	IF CC R0 = R1;
    3bea:	28 e6 3b 00 	[P5 + 0xec] = R0;
    3bee:	22 e1 e7 03 	R2 = 0x3e7 (X);		/*		R2=0x3e7(999) */
    3bf2:	31 e4 11 00 	R1 = [SP + 0x44];
    3bf6:	09 64       	R1 += 0x1;		/* (  1) */
    3bf8:	31 e6 11 00 	[SP + 0x44] = R1;
    3bfc:	11 09       	CC = R1 <= R2;
    3bfe:	0f 1c       	IF CC JUMP 0x3c1c <_SendQueries+0x112c> (BP);
    3c00:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1(  1) */
    3c04:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3c06:	01 e1 44 0e 	R1.L = 0xe44;		/* (3652)	R1=0xe44(3652) */
    3c0a:	32 e4 11 00 	R2 = [SP + 0x44];
    3c0e:	ff e3 f9 e1 	CALL 0x0 <_AddRecordToResponseList>;
    3c12:	08 20       	JUMP.S 0x3c22 <_SendQueries+0x1132>;
    3c14:	38 91       	R0 = [FP];
    3c16:	ff e3 f5 e1 	CALL 0x0 <_AddRecordToResponseList>;
    3c1a:	38 32       	FP = R0;
    3c1c:	47 0c       	CC = FP == 0x0;
    3c1e:	02 18       	IF CC JUMP 0x3c22 <_SendQueries+0x1132>;
    3c20:	cb 2b       	JUMP.S 0x33b6 <_SendQueries+0x8c6>;
    3c22:	65 30       	R4 = P5;
    3c24:	2c e5 f2 07 	P4 = [P5 + 0x1fc8];
    3c28:	05 60       	R5 = 0x0 (X);		/*		R5=0x0(  0) */
    3c2a:	bc 65       	R4 += 0x37;		/* ( 55) */
    3c2c:	21 20       	JUMP.S 0x3c6e <_SendQueries+0x117e>;
    3c2e:	00 00       	NOP;
    3c30:	27 e4 26 00 	R7 = [P4 + 0x98];
    3c34:	07 0c       	CC = R7 == 0x0;
    3c36:	1a 1c       	IF CC JUMP 0x3c6a <_SendQueries+0x117a> (BP);
    3c38:	20 e4 20 00 	R0 = [P4 + 0x80];
    3c3c:	f0 67       	R0 += -0x2;		/* ( -2) */
    3c3e:	08 0e       	CC = R0 <= 0x1 (IU);
    3c40:	13 18       	IF CC JUMP 0x3c66 <_SendQueries+0x1176>;
    3c42:	44 30       	R0 = P4;
    3c44:	14 30       	R2 = R4;
    3c46:	20 64       	R0 += 0x4;		/* (  4) */
    3c48:	61 a2       	R1 = [P4 + 0x24];
    3c4a:	e6 a1       	R6 = [P4 + 0x1c];
    3c4c:	21 64       	R1 += 0x4;		/* (  4) */
    3c4e:	ff e3 d9 e1 	CALL 0x0 <_AddRecordToResponseList>;
    3c52:	30 b1       	[SP + 0x10] = R0;
    3c54:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xe44(3652) */
    3c58:	f6 b0       	[SP + 0xc] = R6;
    3c5a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3c5c:	01 e1 74 0e 	R1.L = 0xe74;		/* (3700)	R1=0xe74(3700) */
    3c60:	17 30       	R2 = R7;
    3c62:	ff e3 cf e1 	CALL 0x0 <_AddRecordToResponseList>;
    3c66:	25 e6 26 00 	[P4 + 0x98] = R5;
    3c6a:	00 00       	NOP;
    3c6c:	64 91       	P4 = [P4];
    3c6e:	44 0c       	CC = P4 == 0x0;
    3c70:	df 17       	IF !CC JUMP 0x3c2e <_SendQueries+0x113e> (BP);
    3c72:	4f e1 00 00 	FP.H = 0x0;		/* (  0)	FP=0x15c */
    3c76:	0f e1 00 00 	FP.L = 0x0;		/* (  0)	FP=0x0 <_AddRecordToResponseList> */
    3c7a:	04 60       	R4 = 0x0 (X);		/*		R4=0x0(  0) */
    3c7c:	65 32       	P4 = P5;
    3c7e:	30 e5 10 00 	P0 = [SP + 0x40];
    3c82:	43 90       	P3 = [P0++];
    3c84:	30 e7 10 00 	[SP + 0x40] = P0;
    3c88:	29 20       	JUMP.S 0x3cda <_SendQueries+0x11ea>;
    3c8a:	00 00       	NOP;
    3c8c:	9d ac       	P5 = [P3 + 0x8];
    3c8e:	23 20       	JUMP.S 0x3cd4 <_SendQueries+0x11e4>;
    3c90:	00 00       	NOP;
    3c92:	2e e4 10 00 	R6 = [P5 + 0x40];
    3c96:	06 0c       	CC = R6 == 0x0;
    3c98:	1c 1c       	IF CC JUMP 0x3cd0 <_SendQueries+0x11e0> (BP);
    3c9a:	2f e4 11 00 	R7 = [P5 + 0x44];
    3c9e:	1f 0e       	CC = R7 <= 0x3 (IU);
    3ca0:	18 14       	IF !CC JUMP 0x3cd0 <_SendQueries+0x11e0> (BP);
    3ca2:	a8 a3       	R0 = [P5 + 0x38];
    3ca4:	25 e4 37 00 	R5 = [P4 + 0xdc];
    3ca8:	45 53       	R5 = R5 - R0;
    3caa:	39 91       	R1 = [FP];
    3cac:	e8 a0       	R0 = [P5 + 0xc];
    3cae:	c8 40       	R0 *= R1;
    3cb0:	91 61       	R1 = 0x32 (X);		/*		R1=0x32( 50) */
    3cb2:	ff e3 a7 e1 	CALL 0x0 <_AddRecordToResponseList>;
    3cb6:	45 51       	R5 = R5 + R0;
    3cb8:	85 0c       	CC = R5 < 0x0;
    3cba:	0b 18       	IF CC JUMP 0x3cd0 <_SendQueries+0x11e0>;
    3cbc:	0e 32       	P1 = R6;
    3cbe:	0f 64       	R7 += 0x1;		/* (  1) */
    3cc0:	2f e6 11 00 	[P5 + 0x44] = R7;
    3cc4:	44 30       	R0 = P4;
    3cc6:	4d 30       	R1 = P5;
    3cc8:	0c e6 28 00 	[P1 + 0xa0] = R4;
    3ccc:	ff e3 ae f5 	CALL 0x2828 <_SetNextCacheCheckTimeForRecord>;
    3cd0:	00 00       	NOP;
    3cd2:	6d 91       	P5 = [P5];
    3cd4:	45 0c       	CC = P5 == 0x0;
    3cd6:	dd 17       	IF !CC JUMP 0x3c90 <_SendQueries+0x11a0> (BP);
    3cd8:	5b 91       	P3 = [P3];
    3cda:	43 0c       	CC = P3 == 0x0;
    3cdc:	d7 17       	IF !CC JUMP 0x3c8a <_SendQueries+0x119a> (BP);
    3cde:	32 e5 10 00 	P2 = [SP + 0x40];
    3ce2:	30 e5 15 00 	P0 = [SP + 0x54];
    3ce6:	42 08       	CC = P2 == P0;
    3ce8:	cb 17       	IF !CC JUMP 0x3c7e <_SendQueries+0x118e> (BP);
    3cea:	6c 32       	P5 = P4;
    3cec:	24 e5 4c 00 	P4 = [P4 + 0x130];
    3cf0:	2b e1 34 01 	P3 = 0x134 (X);		/*		P3=0x134(308) */
    3cf4:	2f 20       	JUMP.S 0x3d52 <_SendQueries+0x1262>;
    3cf6:	00 00       	NOP;
    3cf8:	26 e4 28 00 	R6 = [P4 + 0xa0];
    3cfc:	06 0c       	CC = R6 == 0x0;
    3cfe:	28 1c       	IF CC JUMP 0x3d4e <_SendQueries+0x125e> (BP);
    3d00:	2a e5 4d 00 	P2 = [P5 + 0x134];
    3d04:	04 20       	JUMP.S 0x3d0c <_SendQueries+0x121c>;
    3d06:	62 08       	CC = P2 == P4;
    3d08:	09 1c       	IF CC JUMP 0x3d1a <_SendQueries+0x122a> (BP);
    3d0a:	52 91       	P2 = [P2];
    3d0c:	42 0c       	CC = P2 == 0x0;
    3d0e:	fc 17       	IF !CC JUMP 0x3d06 <_SendQueries+0x1216> (BP);
    3d10:	47 e1 00 00 	R7.H = 0x0;		/* (  0)	R7=0x1(  1) */
    3d14:	07 e1 94 0a 	R7.L = 0xa94;		/* (2708)	R7=0xa94(2708) */
    3d18:	05 20       	JUMP.S 0x3d22 <_SendQueries+0x1232>;
    3d1a:	47 e1 00 00 	R7.H = 0x0;		/* (  0)	R7=0xa94(2708) */
    3d1e:	07 e1 90 0a 	R7.L = 0xa90;		/* (2704)	R7=0xa90(2704) */
    3d22:	25 e4 46 00 	R5 = [P4 + 0x118];
    3d26:	60 e5 1a 01 	R0 = W[P4 + 0x234] (X);
    3d2a:	ff e3 6b e1 	CALL 0x0 <_AddRecordToResponseList>;
    3d2e:	9c 5a       	P2 = P4 + P3;
    3d30:	b0 b1       	[SP + 0x18] = R0;
    3d32:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x32( 50) */
    3d36:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3d38:	f7 b0       	[SP + 0xc] = R7;
    3d3a:	35 b1       	[SP + 0x10] = R5;
    3d3c:	72 bd       	[SP + 0x14] = P2;
    3d3e:	01 e1 b0 0e 	R1.L = 0xeb0;		/* (3760)	R1=0xeb0(3760) */
    3d42:	16 30       	R2 = R6;
    3d44:	ff e3 5e e1 	CALL 0x0 <_AddRecordToResponseList>;
    3d48:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3d4a:	20 e6 28 00 	[P4 + 0xa0] = R0;
    3d4e:	00 00       	NOP;
    3d50:	64 91       	P4 = [P4];
    3d52:	44 0c       	CC = P4 == 0x0;
    3d54:	d1 17       	IF !CC JUMP 0x3cf6 <_SendQueries+0x1206> (BP);
    3d56:	06 20       	JUMP.S 0x3d62 <_SendQueries+0x1272>;
    3d58:	60 a2       	R0 = [P4 + 0x24];
    3d5a:	00 0c       	CC = R0 == 0x0;
    3d5c:	02 18       	IF CC JUMP 0x3d60 <_SendQueries+0x1270>;
    3d5e:	9e 2b       	JUMP.S 0x349a <_SendQueries+0x9aa>;
    3d60:	99 2b       	JUMP.S 0x3492 <_SendQueries+0x9a2>;
    3d62:	29 e1 20 04 	P1 = 0x420 (X);		/*		P1=0x420(1056) */
    3d66:	8e 5b       	SP = SP + P1;
    3d68:	77 90       	FP = [SP++];
    3d6a:	27 01       	RETS = [SP++];
    3d6c:	a3 05       	(R7:4, P5:3) = [SP++];
    3d6e:	10 00       	RTS;

00003d70 <_FindSPSInCache>:
_FindSPSInCache():
    3d70:	ed 05       	[--SP] = (R7:5, P5:5);
    3d72:	2a 32       	P5 = R2;
    3d74:	67 01       	[--SP] = RETS;
    3d76:	86 6f       	SP += -0x10;		/* (-16) */
    3d78:	05 60       	R5 = 0x0 (X);		/*		R5=0x0(  0) */
    3d7a:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    3d7c:	38 30       	R7 = R0;
    3d7e:	31 30       	R6 = R1;
    3d80:	f5 b0       	[SP + 0xc] = R5;
    3d82:	ff e3 df f3 	CALL 0x2540 <_FindSPSInCache1>;
    3d86:	10 30       	R2 = R0;
    3d88:	28 93       	[P5] = R0;
    3d8a:	00 0c       	CC = R0 == 0x0;
    3d8c:	07 18       	IF CC JUMP 0x3d9a <_FindSPSInCache+0x2a>;
    3d8e:	f5 b0       	[SP + 0xc] = R5;
    3d90:	07 30       	R0 = R7;
    3d92:	0e 30       	R1 = R6;
    3d94:	ff e3 d6 f3 	CALL 0x2540 <_FindSPSInCache1>;
    3d98:	02 20       	JUMP.S 0x3d9c <_FindSPSInCache+0x2c>;
    3d9a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3d9c:	68 b0       	[P5 + 0x4] = R0;
    3d9e:	00 0c       	CC = R0 == 0x0;
    3da0:	08 18       	IF CC JUMP 0x3db0 <_FindSPSInCache+0x40>;
    3da2:	f0 b0       	[SP + 0xc] = R0;
    3da4:	07 30       	R0 = R7;
    3da6:	0e 30       	R1 = R6;
    3da8:	2a 91       	R2 = [P5];
    3daa:	ff e3 cb f3 	CALL 0x2540 <_FindSPSInCache1>;
    3dae:	02 20       	JUMP.S 0x3db2 <_FindSPSInCache+0x42>;
    3db0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3db2:	86 6c       	SP += 0x10;		/* ( 16) */
    3db4:	27 01       	RETS = [SP++];
    3db6:	a8 b0       	[P5 + 0x8] = R0;
    3db8:	ad 05       	(R7:5, P5:5) = [SP++];
    3dba:	10 00       	RTS;

00003dbc <_mDNS_PurgeCacheResourceRecord>:
_mDNS_PurgeCacheResourceRecord():
    3dbc:	c4 04       	[--SP] = (P5:4);
    3dbe:	28 32       	P5 = R0;
    3dc0:	21 32       	P4 = R1;
    3dc2:	67 01       	[--SP] = RETS;
    3dc4:	86 6f       	SP += -0x10;		/* (-16) */
    3dc6:	28 a3       	R0 = [P5 + 0x30];
    3dc8:	08 30       	R1 = R0;
    3dca:	ea a2       	R2 = [P5 + 0x2c];
    3dcc:	09 64       	R1 += 0x1;		/* (  1) */
    3dce:	0a 08       	CC = R2 == R1;
    3dd0:	09 18       	IF CC JUMP 0x3de2 <_mDNS_PurgeCacheResourceRecord+0x26>;
    3dd2:	f0 b0       	[SP + 0xc] = R0;
    3dd4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xeb0(3760) */
    3dd8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3dda:	01 e1 f8 0e 	R1.L = 0xef8;		/* (3832)	R1=0xef8(3832) */
    3dde:	ff e3 11 e1 	CALL 0x0 <_AddRecordToResponseList>;
    3de2:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    3de6:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    3dea:	11 91       	R1 = [P2];
    3dec:	20 62       	R0 = -0x3c (X);		/*		R0=0xffffffc4(-60) */
    3dee:	c8 40       	R0 *= R1;
    3df0:	29 e4 37 00 	R1 = [P5 + 0xdc];
    3df4:	08 50       	R0 = R0 + R1;
    3df6:	20 b3       	[P4 + 0x30] = R0;
    3df8:	20 60       	R0 = 0x4 (X);		/*		R0=0x4(  4) */
    3dfa:	20 e6 11 00 	[P4 + 0x44] = R0;
    3dfe:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3e00:	e0 b0       	[P4 + 0xc] = R0;
    3e02:	86 6c       	SP += 0x10;		/* ( 16) */
    3e04:	27 01       	RETS = [SP++];
    3e06:	45 30       	R0 = P5;
    3e08:	4c 30       	R1 = P4;
    3e0a:	84 04       	(P5:4) = [SP++];
    3e0c:	ff e2 0e f5 	JUMP.L 0x2828 <_SetNextCacheCheckTimeForRecord>;

00003e10 <_PurgeOrReconfirmCacheRecord.clone.16>:
_PurgeOrReconfirmCacheRecord.clone.16():
    3e10:	fd 05       	[--SP] = (R7:7, P5:5);
    3e12:	29 32       	P5 = R1;
    3e14:	38 30       	R7 = R0;
    3e16:	67 01       	[--SP] = RETS;
    3e18:	21 e1 f0 00 	R1 = 0xf0 (X);		/*		R1=0xf0(240) */
    3e1c:	86 6f       	SP += -0x10;		/* (-16) */
    3e1e:	a8 e4 04 00 	R0 = B[P5 + 0x4] (Z);
    3e22:	08 08       	CC = R0 == R1;
    3e24:	0a 1c       	IF CC JUMP 0x3e38 <_PurgeOrReconfirmCacheRecord.clone.16+0x28> (BP);
    3e26:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    3e28:	08 0c       	CC = R0 == 0x1;
    3e2a:	07 18       	IF CC JUMP 0x3e38 <_PurgeOrReconfirmCacheRecord.clone.16+0x28>;
    3e2c:	e1 60       	R1 = 0x1c (X);		/*		R1=0x1c( 28) */
    3e2e:	08 08       	CC = R0 == R1;
    3e30:	04 18       	IF CC JUMP 0x3e38 <_PurgeOrReconfirmCacheRecord.clone.16+0x28>;
    3e32:	09 61       	R1 = 0x21 (X);		/*		R1=0x21( 33) */
    3e34:	08 08       	CC = R0 == R1;
    3e36:	44 14       	IF !CC JUMP 0x3ebe <_PurgeOrReconfirmCacheRecord.clone.16+0xae> (BP);
    3e38:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    3e3c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    3e40:	10 91       	R0 = [P2];
    3e42:	00 0c       	CC = R0 == 0x0;
    3e44:	14 1c       	IF CC JUMP 0x3e6c <_PurgeOrReconfirmCacheRecord.clone.16+0x5c> (BP);
    3e46:	69 a2       	R1 = [P5 + 0x24];
    3e48:	45 30       	R0 = P5;
    3e4a:	17 30       	R2 = R7;
    3e4c:	21 64       	R1 += 0x4;		/* (  4) */
    3e4e:	ba 65       	R2 += 0x37;		/* ( 55) */
    3e50:	20 64       	R0 += 0x4;		/* (  4) */
    3e52:	ff e3 d7 e0 	CALL 0x0 <_AddRecordToResponseList>;
    3e56:	10 30       	R2 = R0;
    3e58:	a8 e4 04 00 	R0 = B[P5 + 0x4] (Z);
    3e5c:	f0 b0       	[SP + 0xc] = R0;
    3e5e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x21( 33) */
    3e62:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    3e64:	01 e1 4c 0f 	R1.L = 0xf4c;		/* (3916)	R1=0xf4c(3916) */
    3e68:	ff e3 cc e0 	CALL 0x0 <_AddRecordToResponseList>;
    3e6c:	86 6c       	SP += 0x10;		/* ( 16) */
    3e6e:	27 01       	RETS = [SP++];
    3e70:	07 30       	R0 = R7;
    3e72:	4d 30       	R1 = P5;
    3e74:	bd 05       	(R7:7, P5:5) = [SP++];
    3e76:	ff e2 a3 ff 	JUMP.L 0x3dbc <_mDNS_PurgeCacheResourceRecord>;
    3e7a:	69 a2       	R1 = [P5 + 0x24];
    3e7c:	45 30       	R0 = P5;
    3e7e:	17 30       	R2 = R7;
    3e80:	21 64       	R1 += 0x4;		/* (  4) */
    3e82:	ba 65       	R2 += 0x37;		/* ( 55) */
    3e84:	20 64       	R0 += 0x4;		/* (  4) */
    3e86:	ff e3 bd e0 	CALL 0x0 <_AddRecordToResponseList>;
    3e8a:	10 30       	R2 = R0;
    3e8c:	a8 e4 04 00 	R0 = B[P5 + 0x4] (Z);
    3e90:	f0 b0       	[SP + 0xc] = R0;
    3e92:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xf4c(3916) */
    3e96:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    3e98:	01 e1 94 0f 	R1.L = 0xf94;		/* (3988)	R1=0xf94(3988) */
    3e9c:	ff e3 b2 e0 	CALL 0x0 <_AddRecordToResponseList>;
    3ea0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    3ea4:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    3ea8:	10 91       	R0 = [P2];
    3eaa:	82 c6 10 84 	R2 = R0 << 0x2;
    3eae:	86 6c       	SP += 0x10;		/* ( 16) */
    3eb0:	82 50       	R2 = R2 + R0;
    3eb2:	27 01       	RETS = [SP++];
    3eb4:	07 30       	R0 = R7;
    3eb6:	4d 30       	R1 = P5;
    3eb8:	bd 05       	(R7:7, P5:5) = [SP++];
    3eba:	ff e2 2d f5 	JUMP.L 0x2914 <_mDNS_Reconfirm_internal>;
    3ebe:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    3ec2:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    3ec6:	10 91       	R0 = [P2];
    3ec8:	00 0c       	CC = R0 == 0x0;
    3eca:	eb 1f       	IF CC JUMP 0x3ea0 <_PurgeOrReconfirmCacheRecord.clone.16+0x90> (BP);
    3ecc:	d7 2f       	JUMP.S 0x3e7a <_PurgeOrReconfirmCacheRecord.clone.16+0x6a>;
	...

00003ed0 <_mDNS_TimeNow>:
_mDNS_TimeNow():
    3ed0:	fd 05       	[--SP] = (R7:7, P5:5);
    3ed2:	28 32       	P5 = R0;
    3ed4:	67 01       	[--SP] = RETS;
    3ed6:	a6 6f       	SP += -0xc;		/* (-12) */
    3ed8:	ff e3 94 e0 	CALL 0x0 <_AddRecordToResponseList>;
    3edc:	e8 a2       	R0 = [P5 + 0x2c];
    3ede:	00 0c       	CC = R0 == 0x0;
    3ee0:	13 1c       	IF CC JUMP 0x3f06 <_mDNS_TimeNow+0x36> (BP);
    3ee2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xf94(3988) */
    3ee6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3ee8:	01 e1 e0 0f 	R1.L = 0xfe0;		/* (4064)	R1=0xfe0(4064) */
    3eec:	ff e3 8a e0 	CALL 0x0 <_AddRecordToResponseList>;
    3ef0:	28 e4 37 00 	R0 = [P5 + 0xdc];
    3ef4:	00 0c       	CC = R0 == 0x0;
    3ef6:	08 14       	IF !CC JUMP 0x3f06 <_mDNS_TimeNow+0x36> (BP);
    3ef8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xfe0(4064) */
    3efc:	ea a2       	R2 = [P5 + 0x2c];
    3efe:	01 e1 54 10 	R1.L = 0x1054;		/* (4180)	R1=0x1054(4180) */
    3f02:	ff e3 7f e0 	CALL 0x0 <_AddRecordToResponseList>;
    3f06:	00 00       	NOP;
    3f08:	2f e4 37 00 	R7 = [P5 + 0xdc];
    3f0c:	07 0c       	CC = R7 == 0x0;
    3f0e:	06 14       	IF !CC JUMP 0x3f1a <_mDNS_TimeNow+0x4a> (BP);
    3f10:	ff e3 78 e0 	CALL 0x0 <_AddRecordToResponseList>;
    3f14:	29 e4 36 00 	R1 = [P5 + 0xd8];
    3f18:	c8 51       	R7 = R0 + R1;
    3f1a:	45 30       	R0 = P5;
    3f1c:	ff e3 72 e0 	CALL 0x0 <_AddRecordToResponseList>;
    3f20:	66 6c       	SP += 0xc;		/* ( 12) */
    3f22:	07 30       	R0 = R7;
    3f24:	27 01       	RETS = [SP++];
    3f26:	bd 05       	(R7:7, P5:5) = [SP++];
    3f28:	10 00       	RTS;
	...

00003f2c <_mDNSCoreHaveAdvertisedMulticastServices>:
_mDNSCoreHaveAdvertisedMulticastServices():
    3f2c:	10 32       	P2 = R0;
    3f2e:	c3 04       	[--SP] = (P5:3);
    3f30:	67 01       	[--SP] = RETS;
    3f32:	4c e1 00 00 	P4.H = 0x0;		/* (  0)	P4=0x0 <_AddRecordToResponseList> */
    3f36:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x134 */
    3f3a:	a6 6f       	SP += -0xc;		/* (-12) */
    3f3c:	15 e5 f2 07 	P5 = [P2 + 0x1fc8];
    3f40:	0c e1 00 00 	P4.L = 0x0;		/* (  0)	P4=0x0 <_AddRecordToResponseList> */
    3f44:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
    3f48:	1a 20       	JUMP.S 0x3f7c <_mDNSCoreHaveAdvertisedMulticastServices+0x50>;
    3f4a:	09 61       	R1 = 0x21 (X);		/*		R1=0x21( 33) */
    3f4c:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    3f4e:	08 08       	CC = R0 == R1;
    3f50:	14 14       	IF !CC JUMP 0x3f78 <_mDNSCoreHaveAdvertisedMulticastServices+0x4c> (BP);
    3f52:	e9 a1       	R1 = [P5 + 0x1c];
    3f54:	20 91       	R0 = [P4];
    3f56:	01 08       	CC = R1 == R0;
    3f58:	0a 14       	IF !CC JUMP 0x3f6c <_mDNSCoreHaveAdvertisedMulticastServices+0x40> (BP);
    3f5a:	a8 e4 46 00 	R0 = B[P5 + 0x46] (Z);
    3f5e:	00 0c       	CC = R0 == 0x0;
    3f60:	06 14       	IF !CC JUMP 0x3f6c <_mDNSCoreHaveAdvertisedMulticastServices+0x40> (BP);
    3f62:	28 a2       	R0 = [P5 + 0x20];
    3f64:	ff e3 4e e0 	CALL 0x0 <_AddRecordToResponseList>;
    3f68:	00 0c       	CC = R0 == 0x0;
    3f6a:	07 1c       	IF CC JUMP 0x3f78 <_mDNSCoreHaveAdvertisedMulticastServices+0x4c> (BP);
    3f6c:	00 00       	NOP;
    3f6e:	6a ae       	P2 = [P5 + 0x24];
    3f70:	18 95       	R0 = W[P3] (Z);
    3f72:	11 a5       	R1 = W[P2 + 0x8] (Z);
    3f74:	01 08       	CC = R1 == R0;
    3f76:	07 14       	IF !CC JUMP 0x3f84 <_mDNSCoreHaveAdvertisedMulticastServices+0x58> (BP);
    3f78:	00 00       	NOP;
    3f7a:	6d 91       	P5 = [P5];
    3f7c:	45 0c       	CC = P5 == 0x0;
    3f7e:	e6 17       	IF !CC JUMP 0x3f4a <_mDNSCoreHaveAdvertisedMulticastServices+0x1e> (BP);
    3f80:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3f82:	02 20       	JUMP.S 0x3f86 <_mDNSCoreHaveAdvertisedMulticastServices+0x5a>;
    3f84:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    3f86:	66 6c       	SP += 0xc;		/* ( 12) */
    3f88:	27 01       	RETS = [SP++];
    3f8a:	83 04       	(P5:3) = [SP++];
    3f8c:	10 00       	RTS;
	...

00003f90 <_mDNS_UpdateAllowSleep>:
_mDNS_UpdateAllowSleep():
    3f90:	fc 05       	[--SP] = (R7:7, P5:4);
    3f92:	20 32       	P4 = R0;
    3f94:	67 01       	[--SP] = RETS;
    3f96:	29 e1 70 ff 	P1 = -0x90 (X);		/*		P1=0xffffff70(-144) */
    3f9a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3f9c:	8e 5b       	SP = SP + P1;
    3f9e:	b0 e6 10 00 	B[SP + 0x10] = R0;
    3fa2:	a0 e4 19 01 	R0 = B[P4 + 0x119] (Z);
    3fa6:	00 0c       	CC = R0 == 0x0;
    3fa8:	81 1c       	IF CC JUMP 0x40aa <_mDNS_UpdateAllowSleep+0x11a> (BP);
    3faa:	20 e4 a4 0d 	R0 = [P4 + 0x3690];
    3fae:	00 0c       	CC = R0 == 0x0;
    3fb0:	1b 1c       	IF CC JUMP 0x3fe6 <_mDNS_UpdateAllowSleep+0x56> (BP);
    3fb2:	f0 b0       	[SP + 0xc] = R0;
    3fb4:	46 30       	R0 = SP;
    3fb6:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    3fba:	80 64       	R0 += 0x10;		/* ( 16) */
    3fbc:	21 e1 80 00 	R1 = 0x80 (X);		/*		R1=0x80(128) */
    3fc0:	02 e1 90 10 	R2.L = 0x1090;		/* (4240)	R2=0x1090(4240) */
    3fc4:	ff e3 1e e0 	CALL 0x0 <_AddRecordToResponseList>;
    3fc8:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    3fcc:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    3fd0:	10 91       	R0 = [P2];
    3fd2:	00 0c       	CC = R0 == 0x0;
    3fd4:	6d 1c       	IF CC JUMP 0x40ae <_mDNS_UpdateAllowSleep+0x11e> (BP);
    3fd6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x80(128) */
    3fda:	22 e4 a4 0d 	R2 = [P4 + 0x3690];
    3fde:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    3fe0:	01 e1 ac 10 	R1.L = 0x10ac;		/* (4268)	R1=0x10ac(4268) */
    3fe4:	59 20       	JUMP.S 0x4096 <_mDNS_UpdateAllowSleep+0x106>;
    3fe6:	44 30       	R0 = P4;
    3fe8:	ff e3 a2 ff 	CALL 0x3f2c <_mDNSCoreHaveAdvertisedMulticastServices>;
    3fec:	00 0c       	CC = R0 == 0x0;
    3fee:	5e 1c       	IF CC JUMP 0x40aa <_mDNS_UpdateAllowSleep+0x11a> (BP);
    3ff0:	20 e4 f7 07 	R0 = [P4 + 0x1fdc];
    3ff4:	ff e3 06 e0 	CALL 0x0 <_AddRecordToResponseList>;
    3ff8:	28 32       	P5 = R0;
    3ffa:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    3ffc:	55 20       	JUMP.S 0x40a6 <_mDNS_UpdateAllowSleep+0x116>;
    3ffe:	00 00       	NOP;
    4000:	a8 e4 b5 14 	R0 = B[P5 + 0x14b5] (Z);
    4004:	00 0c       	CC = R0 == 0x0;
    4006:	4b 1c       	IF CC JUMP 0x409c <_mDNS_UpdateAllowSleep+0x10c> (BP);
    4008:	a8 e4 b7 14 	R0 = B[P5 + 0x14b7] (Z);
    400c:	00 0c       	CC = R0 == 0x0;
    400e:	47 14       	IF !CC JUMP 0x409c <_mDNS_UpdateAllowSleep+0x10c> (BP);
    4010:	a8 e4 b6 14 	R0 = B[P5 + 0x14b6] (Z);
    4014:	00 0c       	CC = R0 == 0x0;
    4016:	1c 14       	IF !CC JUMP 0x404e <_mDNS_UpdateAllowSleep+0xbe> (BP);
    4018:	2a e1 74 14 	P2 = 0x1474 (X);		/*		P2=0x1474(5236) */
    401c:	55 5b       	P5 = P5 + P2;
    401e:	46 30       	R0 = SP;
    4020:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x1090(4240) */
    4024:	f5 bc       	[SP + 0xc] = P5;
    4026:	80 64       	R0 += 0x10;		/* ( 16) */
    4028:	21 e1 80 00 	R1 = 0x80 (X);		/*		R1=0x80(128) */
    402c:	02 e1 e0 10 	R2.L = 0x10e0;		/* (4320)	R2=0x10e0(4320) */
    4030:	ff e3 e8 df 	CALL 0x0 <_AddRecordToResponseList>;
    4034:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x1474 */
    4038:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    403c:	10 91       	R0 = [P2];
    403e:	00 0c       	CC = R0 == 0x0;
    4040:	37 1c       	IF CC JUMP 0x40ae <_mDNS_UpdateAllowSleep+0x11e> (BP);
    4042:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x80(128) */
    4046:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    4048:	01 e1 fc 10 	R1.L = 0x10fc;		/* (4348)	R1=0x10fc(4348) */
    404c:	24 20       	JUMP.S 0x4094 <_mDNS_UpdateAllowSleep+0x104>;
    404e:	4d 30       	R1 = P5;
    4050:	41 64       	R1 += 0x8;		/* (  8) */
    4052:	f7 b0       	[SP + 0xc] = R7;
    4054:	44 30       	R0 = P4;
    4056:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    4058:	ff e3 74 f2 	CALL 0x2540 <_FindSPSInCache1>;
    405c:	00 0c       	CC = R0 == 0x0;
    405e:	1f 14       	IF !CC JUMP 0x409c <_mDNS_UpdateAllowSleep+0x10c> (BP);
    4060:	2a e1 74 14 	P2 = 0x1474 (X);		/*		P2=0x1474(5236) */
    4064:	55 5b       	P5 = P5 + P2;
    4066:	46 30       	R0 = SP;
    4068:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    406c:	f5 bc       	[SP + 0xc] = P5;
    406e:	80 64       	R0 += 0x10;		/* ( 16) */
    4070:	21 e1 80 00 	R1 = 0x80 (X);		/*		R1=0x80(128) */
    4074:	02 e1 e0 10 	R2.L = 0x10e0;		/* (4320)	R2=0x10e0(4320) */
    4078:	ff e3 c4 df 	CALL 0x0 <_AddRecordToResponseList>;
    407c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x1474 */
    4080:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    4084:	10 91       	R0 = [P2];
    4086:	00 0c       	CC = R0 == 0x0;
    4088:	13 1c       	IF CC JUMP 0x40ae <_mDNS_UpdateAllowSleep+0x11e> (BP);
    408a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x80(128) */
    408e:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    4090:	01 e1 30 11 	R1.L = 0x1130;		/* (4400)	R1=0x1130(4400) */
    4094:	55 30       	R2 = P5;
    4096:	ff e3 b5 df 	CALL 0x0 <_AddRecordToResponseList>;
    409a:	0a 20       	JUMP.S 0x40ae <_mDNS_UpdateAllowSleep+0x11e>;
    409c:	00 00       	NOP;
    409e:	28 91       	R0 = [P5];
    40a0:	ff e3 b0 df 	CALL 0x0 <_AddRecordToResponseList>;
    40a4:	28 32       	P5 = R0;
    40a6:	45 0c       	CC = P5 == 0x0;
    40a8:	ab 17       	IF !CC JUMP 0x3ffe <_mDNS_UpdateAllowSleep+0x6e> (BP);
    40aa:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    40ac:	02 20       	JUMP.S 0x40b0 <_mDNS_UpdateAllowSleep+0x120>;
    40ae:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    40b0:	56 30       	R2 = SP;
    40b2:	44 30       	R0 = P4;
    40b4:	82 64       	R2 += 0x10;		/* ( 16) */
    40b6:	ff e3 a5 df 	CALL 0x0 <_AddRecordToResponseList>;
    40ba:	29 e1 90 00 	P1 = 0x90 (X);		/*		P1=0x90(144) */
    40be:	8e 5b       	SP = SP + P1;
    40c0:	27 01       	RETS = [SP++];
    40c2:	bc 05       	(R7:7, P5:4) = [SP++];
    40c4:	10 00       	RTS;
	...

000040c8 <_mDNSCoreIntervalToNextWake>:
_mDNSCoreIntervalToNextWake():
    40c8:	e3 05       	[--SP] = (R7:4, P5:3);
    40ca:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    40ce:	00 e8 11 00 	LINK 0x44;		/* (68) */
    40d2:	18 32       	P3 = R0;
    40d4:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    40d8:	16 91       	R6 = [P2];
    40da:	20 e1 20 1c 	R0 = 0x1c20 (X);		/*		R0=0x1c20(7200) */
    40de:	c6 40       	R6 *= R0;
    40e0:	4f e1 00 00 	FP.H = 0x0;		/* (  0)	FP=0x0 <_AddRecordToResponseList> */
    40e4:	39 30       	R7 = R1;
    40e6:	b1 51       	R6 = R1 + R6;
    40e8:	1d e5 f0 09 	P5 = [P3 + 0x27c0];
    40ec:	0f e1 00 00 	FP.L = 0x0;		/* (  0)	FP=0x0 <_AddRecordToResponseList> */
    40f0:	68 20       	JUMP.S 0x41c0 <_mDNSCoreIntervalToNextWake+0xf8>;
    40f2:	00 00       	NOP;
    40f4:	aa e4 28 00 	R2 = B[P5 + 0x28] (Z);
    40f8:	02 0c       	CC = R2 == 0x0;
    40fa:	61 1c       	IF CC JUMP 0x41bc <_mDNSCoreIntervalToNextWake+0xf4> (BP);
    40fc:	6c a0       	R4 = [P5 + 0x4];
    40fe:	04 0c       	CC = R4 == 0x0;
    4100:	5e 1c       	IF CC JUMP 0x41bc <_mDNSCoreIntervalToNextWake+0xf4> (BP);
    4102:	3c 52       	R0 = R4 - R7;
    4104:	20 32       	P4 = R0;
    4106:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    410a:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    410e:	15 91       	R5 = [P2];
    4110:	82 c6 15 80 	R0 = R5 << 0x2;
    4114:	4c 30       	R1 = P4;
    4116:	01 09       	CC = R1 <= R0;
    4118:	52 1c       	IF CC JUMP 0x41bc <_mDNSCoreIntervalToNextWake+0xf4> (BP);
    411a:	f2 b2       	[SP + 0x2c] = R2;
    411c:	44 30       	R0 = P4;
    411e:	b1 63       	R1 = -0xa (X);		/*		R1=0xfffffff6(-10) */
    4120:	ff e3 70 df 	CALL 0x0 <_AddRecordToResponseList>;
    4124:	20 51       	R4 = R0 + R4;
    4126:	26 52       	R0 = R6 - R4;
    4128:	00 0d       	CC = R0 <= 0x0;
    412a:	34 06       	IF !CC R6 = R4;
    412c:	38 91       	R0 = [FP];
    412e:	00 0c       	CC = R0 == 0x0;
    4130:	f2 a2       	R2 = [SP + 0x2c];
    4132:	45 1c       	IF CC JUMP 0x41bc <_mDNSCoreIntervalToNextWake+0xf4> (BP);
    4134:	ab e4 2a 00 	R3 = B[P5 + 0x2a] (Z);
    4138:	a8 e4 2b 00 	R0 = B[P5 + 0x2b] (Z);
    413c:	43 4f       	R3 <<= 0x8;
    413e:	d8 56       	R3 = R0 | R3;
    4140:	12 0c       	CC = R2 == 0x2;
    4142:	a8 e4 1c 00 	R0 = B[P5 + 0x1c] (Z);
    4146:	40 4f       	R0 <<= 0x8;
    4148:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x10e0(4320) */
    414c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    4150:	a9 e4 1d 00 	R1 = B[P5 + 0x1d] (Z);
    4154:	0a e1 64 11 	P2.L = 0x1164;		/* (4452)	P2=0x1164 */
    4158:	41 56       	R1 = R1 | R0;
    415a:	02 e1 60 11 	R2.L = 0x1160;		/* (4448)	R2=0x1160(4448) */
    415e:	52 06       	IF !CC R2 = P2;
    4160:	e8 a0       	R0 = [P5 + 0xc];
    4162:	b1 b3       	[SP + 0x38] = R1;
    4164:	6a ae       	P2 = [P5 + 0x24];
    4166:	00 0c       	CC = R0 == 0x0;
    4168:	0c 1c       	IF CC JUMP 0x4180 <_mDNSCoreIntervalToNextWake+0xb8> (BP);
    416a:	f2 b2       	[SP + 0x2c] = R2;
    416c:	73 b3       	[SP + 0x34] = R3;
    416e:	32 bf       	[SP + 0x30] = P2;
    4170:	38 52       	R0 = R0 - R7;
    4172:	0d 30       	R1 = R5;
    4174:	ff e3 46 df 	CALL 0x0 <_AddRecordToResponseList>;
    4178:	f2 a2       	R2 = [SP + 0x2c];
    417a:	73 a3       	R3 = [SP + 0x34];
    417c:	32 af       	P2 = [SP + 0x30];
    417e:	02 20       	JUMP.S 0x4182 <_mDNSCoreIntervalToNextWake+0xba>;
    4180:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4182:	b1 a3       	R1 = [SP + 0x38];
    4184:	f2 b0       	[SP + 0xc] = R2;
    4186:	33 b1       	[SP + 0x10] = R3;
    4188:	b2 bd       	[SP + 0x18] = P2;
    418a:	71 b1       	[SP + 0x14] = R1;
    418c:	f0 b1       	[SP + 0x1c] = R0;
    418e:	a8 a0       	R0 = [P5 + 0x8];
    4190:	0d 30       	R1 = R5;
    4192:	ff e3 37 df 	CALL 0x0 <_AddRecordToResponseList>;
    4196:	30 b2       	[SP + 0x20] = R0;
    4198:	0d 30       	R1 = R5;
    419a:	44 30       	R0 = P4;
    419c:	ff e3 32 df 	CALL 0x0 <_AddRecordToResponseList>;
    41a0:	70 b2       	[SP + 0x24] = R0;
    41a2:	0d 30       	R1 = R5;
    41a4:	3c 52       	R0 = R4 - R7;
    41a6:	ff e3 2d df 	CALL 0x0 <_AddRecordToResponseList>;
    41aa:	b0 b2       	[SP + 0x28] = R0;
    41ac:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xfff6(65526) */
    41b0:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    41b2:	01 e1 68 11 	R1.L = 0x1168;		/* (4456)	R1=0x1168(4456) */
    41b6:	55 30       	R2 = P5;
    41b8:	ff e3 24 df 	CALL 0x0 <_AddRecordToResponseList>;
    41bc:	00 00       	NOP;
    41be:	6d 91       	P5 = [P5];
    41c0:	45 0c       	CC = P5 == 0x0;
    41c2:	98 17       	IF !CC JUMP 0x40f2 <_mDNSCoreIntervalToNextWake+0x2a> (BP);
    41c4:	1d e5 f2 07 	P5 = [P3 + 0x1fc8];
    41c8:	4f e1 00 00 	FP.H = 0x0;		/* (  0)	FP=0x0 <_AddRecordToResponseList> */
    41cc:	bb 6d       	P3 += 0x37;		/* ( 55) */
    41ce:	0f e1 00 00 	FP.L = 0x0;		/* (  0)	FP=0x0 <_AddRecordToResponseList> */
    41d2:	33 e7 10 00 	[SP + 0x40] = P3;
    41d6:	4c 20       	JUMP.S 0x426e <_mDNSCoreIntervalToNextWake+0x1a6>;
    41d8:	00 00       	NOP;
    41da:	2c e4 3b 00 	R4 = [P5 + 0xec];
    41de:	04 0c       	CC = R4 == 0x0;
    41e0:	45 1c       	IF CC JUMP 0x426a <_mDNSCoreIntervalToNextWake+0x1a2> (BP);
    41e2:	3c 52       	R0 = R4 - R7;
    41e4:	20 32       	P4 = R0;
    41e6:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x1164 */
    41ea:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    41ee:	15 91       	R5 = [P2];
    41f0:	82 c6 15 80 	R0 = R5 << 0x2;
    41f4:	4c 30       	R1 = P4;
    41f6:	01 09       	CC = R1 <= R0;
    41f8:	39 1c       	IF CC JUMP 0x426a <_mDNSCoreIntervalToNextWake+0x1a2> (BP);
    41fa:	44 30       	R0 = P4;
    41fc:	b1 63       	R1 = -0xa (X);		/*		R1=0xfffffff6(-10) */
    41fe:	ff e3 01 df 	CALL 0x0 <_AddRecordToResponseList>;
    4202:	20 51       	R4 = R0 + R4;
    4204:	26 52       	R0 = R6 - R4;
    4206:	00 0d       	CC = R0 <= 0x0;
    4208:	34 06       	IF !CC R6 = R4;
    420a:	38 91       	R0 = [FP];
    420c:	00 0c       	CC = R0 == 0x0;
    420e:	2e 1c       	IF CC JUMP 0x426a <_mDNSCoreIntervalToNextWake+0x1a2> (BP);
    4210:	2b e5 2f 00 	P3 = [P5 + 0xbc];
    4214:	28 e4 30 00 	R0 = [P5 + 0xc0];
    4218:	4b 30       	R1 = P3;
    421a:	01 50       	R0 = R1 + R0;
    421c:	0d 30       	R1 = R5;
    421e:	38 52       	R0 = R0 - R7;
    4220:	ff e3 f0 de 	CALL 0x0 <_AddRecordToResponseList>;
    4224:	f0 b3       	[SP + 0x3c] = R0;
    4226:	69 a2       	R1 = [P5 + 0x24];
    4228:	45 30       	R0 = P5;
    422a:	32 e4 10 00 	R2 = [SP + 0x40];
    422e:	21 64       	R1 += 0x4;		/* (  4) */
    4230:	20 64       	R0 += 0x4;		/* (  4) */
    4232:	ff e3 e7 de 	CALL 0x0 <_AddRecordToResponseList>;
    4236:	f0 b1       	[SP + 0x1c] = R0;
    4238:	0d 30       	R1 = R5;
    423a:	43 30       	R0 = P3;
    423c:	ff e3 e2 de 	CALL 0x0 <_AddRecordToResponseList>;
    4240:	f2 af       	P2 = [SP + 0x3c];
    4242:	f0 b0       	[SP + 0xc] = R0;
    4244:	0d 30       	R1 = R5;
    4246:	44 30       	R0 = P4;
    4248:	32 bd       	[SP + 0x10] = P2;
    424a:	ff e3 db de 	CALL 0x0 <_AddRecordToResponseList>;
    424e:	70 b1       	[SP + 0x14] = R0;
    4250:	0d 30       	R1 = R5;
    4252:	3c 52       	R0 = R4 - R7;
    4254:	ff e3 d6 de 	CALL 0x0 <_AddRecordToResponseList>;
    4258:	b0 b1       	[SP + 0x18] = R0;
    425a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xfff6(65526) */
    425e:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    4260:	01 e1 c4 11 	R1.L = 0x11c4;		/* (4548)	R1=0x11c4(4548) */
    4264:	55 30       	R2 = P5;
    4266:	ff e3 cd de 	CALL 0x0 <_AddRecordToResponseList>;
    426a:	00 00       	NOP;
    426c:	6d 91       	P5 = [P5];
    426e:	45 0c       	CC = P5 == 0x0;
    4270:	b4 17       	IF !CC JUMP 0x41d8 <_mDNSCoreIntervalToNextWake+0x110> (BP);
    4272:	e6 6d       	SP += 0x3c;		/* ( 60) */
    4274:	46 6c       	SP += 0x8;		/* (  8) */
    4276:	77 90       	FP = [SP++];
    4278:	3e 52       	R0 = R6 - R7;
    427a:	27 01       	RETS = [SP++];
    427c:	a3 05       	(R7:4, P5:3) = [SP++];
    427e:	10 00       	RTS;

00004280 <_GrantCacheExtensions>:
_GrantCacheExtensions():
    4280:	f3 05       	[--SP] = (R7:6, P5:3);
    4282:	21 32       	P4 = R1;
    4284:	2d e1 34 01 	P5 = 0x134 (X);		/*		P5=0x134(308) */
    4288:	67 01       	[--SP] = RETS;
    428a:	18 32       	P3 = R0;
    428c:	86 6f       	SP += -0x10;		/* (-16) */
    428e:	6c 5b       	P5 = P4 + P5;
    4290:	32 30       	R6 = R2;
    4292:	45 30       	R0 = P5;
    4294:	ff e3 b6 de 	CALL 0x0 <_AddRecordToResponseList>;
    4298:	41 e1 d5 20 	R1.H = 0x20d5;		/* (8405)	R1=0x20d511c4(550834628) */
    429c:	38 30       	R7 = R0;
    429e:	01 e1 39 6b 	R1.L = 0x6b39;		/* (27449)	R1=0x20d56b39(550857529) */
    42a2:	ff e3 af de 	CALL 0x0 <_AddRecordToResponseList>;
    42a6:	82 c6 d0 83 	R1 = R0 >> 0x6;
    42aa:	62 a0       	R2 = [P4 + 0x4];
    42ac:	20 e1 f3 01 	R0 = 0x1f3 (X);		/*		R0=0x1f3(499) */
    42b0:	c1 40       	R1 *= R0;
    42b2:	f5 bc       	[SP + 0xc] = P5;
    42b4:	4f 52       	R1 = R7 - R1;
    42b6:	43 30       	R0 = P3;
    42b8:	ff e3 96 f0 	CALL 0x23e4 <_CacheGroupForName>;
    42bc:	10 32       	P2 = R0;
    42be:	42 0c       	CC = P2 == 0x0;
    42c0:	03 1c       	IF CC JUMP 0x42c6 <_GrantCacheExtensions+0x46> (BP);
    42c2:	95 ac       	P5 = [P2 + 0x8];
    42c4:	15 20       	JUMP.S 0x42ee <_GrantCacheExtensions+0x6e>;
    42c6:	05 68       	P5 = 0x0 (X);		/*		P5=0x0(  0) */
    42c8:	13 20       	JUMP.S 0x42ee <_GrantCacheExtensions+0x6e>;
    42ca:	4c 30       	R1 = P4;
    42cc:	28 e4 10 00 	R0 = [P5 + 0x40];
    42d0:	08 08       	CC = R0 == R1;
    42d2:	0b 14       	IF !CC JUMP 0x42e8 <_GrantCacheExtensions+0x68> (BP);
    42d4:	18 e4 37 00 	R0 = [P3 + 0xdc];
    42d8:	28 b3       	[P5 + 0x30] = R0;
    42da:	ee b0       	[P5 + 0xc] = R6;
    42dc:	2f e6 11 00 	[P5 + 0x44] = R7;
    42e0:	43 30       	R0 = P3;
    42e2:	4d 30       	R1 = P5;
    42e4:	ff e3 a2 f2 	CALL 0x2828 <_SetNextCacheCheckTimeForRecord>;
    42e8:	00 00       	NOP;
    42ea:	6d 91       	P5 = [P5];
    42ec:	02 20       	JUMP.S 0x42f0 <_GrantCacheExtensions+0x70>;
    42ee:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    42f0:	45 0c       	CC = P5 == 0x0;
    42f2:	ec 17       	IF !CC JUMP 0x42ca <_GrantCacheExtensions+0x4a> (BP);
    42f4:	86 6c       	SP += 0x10;		/* ( 16) */
    42f6:	27 01       	RETS = [SP++];
    42f8:	b3 05       	(R7:6, P5:3) = [SP++];
    42fa:	10 00       	RTS;

000042fc <_MakeNegativeCacheRecord>:
_MakeNegativeCacheRecord():
    42fc:	fc 05       	[--SP] = (R7:7, P5:4);
    42fe:	20 32       	P4 = R0;
    4300:	29 32       	P5 = R1;
    4302:	2a e1 84 7c 	P2 = 0x7c84 (X);		/*		P2=0x7c84(31876) */
    4306:	67 01       	[--SP] = RETS;
    4308:	a6 6f       	SP += -0xc;		/* (-12) */
    430a:	94 5a       	P2 = P4 + P2;
    430c:	3a 30       	R7 = R2;
    430e:	55 08       	CC = P5 == P2;
    4310:	18 14       	IF !CC JUMP 0x4340 <_MakeNegativeCacheRecord+0x44> (BP);
    4312:	a0 e4 88 7c 	R0 = B[P4 + 0x7c88] (Z);
    4316:	00 0c       	CC = R0 == 0x0;
    4318:	14 1c       	IF CC JUMP 0x4340 <_MakeNegativeCacheRecord+0x44> (BP);
    431a:	2a e1 88 7c 	P2 = 0x7c88 (X);		/*		P2=0x7c88(31880) */
    431e:	94 5a       	P2 = P4 + P2;
    4320:	21 e4 2a 1f 	R1 = [P4 + 0x7ca8];
    4324:	54 30       	R2 = P4;
    4326:	21 64       	R1 += 0x4;		/* (  4) */
    4328:	ba 65       	R2 += 0x37;		/* ( 55) */
    432a:	42 30       	R0 = P2;
    432c:	ff e3 6a de 	CALL 0x0 <_AddRecordToResponseList>;
    4330:	10 30       	R2 = R0;
    4332:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x6b39(27449) */
    4336:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4338:	01 e1 00 12 	R1.L = 0x1200;		/* (4608)	R1=0x1200 <_GetBestServer>(4608) */
    433c:	ff e3 62 de 	CALL 0x0 <_AddRecordToResponseList>;
    4340:	80 63       	R0 = -0x10 (X);		/*		R0=0xfffffff0(-16) */
    4342:	a8 e6 04 00 	B[P5 + 0x4] = R0;
    4346:	b0 a3       	R0 = [SP + 0x38];
    4348:	e8 b1       	[P5 + 0x1c] = R0;
    434a:	f0 a3       	R0 = [SP + 0x3c];
    434c:	a8 b2       	[P5 + 0x28] = R0;
    434e:	70 e5 16 00 	R0 = W[SP + 0x2c] (X);
    4352:	e8 b4       	W[P5 + 0x6] = R0;
    4354:	70 e5 18 00 	R0 = W[SP + 0x30] (X);
    4358:	28 b5       	W[P5 + 0x8] = R0;
    435a:	70 a3       	R0 = [SP + 0x34];
    435c:	e8 b0       	[P5 + 0xc] = R0;
    435e:	b0 a2       	R0 = [SP + 0x28];
    4360:	68 b1       	[P5 + 0x14] = R0;
    4362:	2a e1 50 00 	P2 = 0x50 (X);		/*		P2=0x50( 80) */
    4366:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4368:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    436a:	95 5a       	P2 = P5 + P2;
    436c:	29 b6       	W[P5 + 0x10] = R1;
    436e:	69 b6       	W[P5 + 0x12] = R1;
    4370:	2f b2       	[P5 + 0x20] = R7;
    4372:	a8 b1       	[P5 + 0x18] = R0;
    4374:	6a be       	[P5 + 0x24] = P2;
    4376:	11 97       	W[P2] = R1;
    4378:	21 e4 37 00 	R1 = [P4 + 0xdc];
    437c:	66 6c       	SP += 0xc;		/* ( 12) */
    437e:	27 01       	RETS = [SP++];
    4380:	e8 b2       	[P5 + 0x2c] = R0;
    4382:	29 b3       	[P5 + 0x30] = R1;
    4384:	68 b3       	[P5 + 0x34] = R0;
    4386:	a9 b3       	[P5 + 0x38] = R1;
    4388:	e9 b3       	[P5 + 0x3c] = R1;
    438a:	28 e6 10 00 	[P5 + 0x40] = R0;
    438e:	28 e6 11 00 	[P5 + 0x44] = R0;
    4392:	28 e6 12 00 	[P5 + 0x48] = R0;
    4396:	28 e6 13 00 	[P5 + 0x4c] = R0;
    439a:	bc 05       	(R7:7, P5:4) = [SP++];
    439c:	10 00       	RTS;
	...

000043a0 <_mDNS_AddMcastResolver>:
_mDNS_AddMcastResolver():
    43a0:	e3 05       	[--SP] = (R7:4, P5:3);
    43a2:	20 32       	P4 = R0;
    43a4:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_AddRecordToResponseList>(  0) */
    43a8:	01 0c       	CC = R1 == 0x0;
    43aa:	00 e1 44 12 	R0.L = 0x1244;		/* (4676)	R0=0x1244(4676) */
    43ae:	39 30       	R7 = R1;
    43b0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x50 */
    43b4:	67 01       	[--SP] = RETS;
    43b6:	38 07       	IF CC R7 = R0;
    43b8:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    43bc:	66 6f       	SP += -0x14;		/* (-20) */
    43be:	2d e1 f8 1f 	P5 = 0x1ff8 (X);		/*		P5=0x1ff8(8184) */
    43c2:	10 91       	R0 = [P2];
    43c4:	32 30       	R6 = R2;
    43c6:	33 e5 10 00 	P3 = [SP + 0x40];
    43ca:	6c 5b       	P5 = P4 + P5;
    43cc:	00 0c       	CC = R0 == 0x0;
    43ce:	0b 1c       	IF CC JUMP 0x43e4 <_mDNS_AddMcastResolver+0x44> (BP);
    43d0:	f2 b0       	[SP + 0xc] = R2;
    43d2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    43d6:	33 bd       	[SP + 0x10] = P3;
    43d8:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    43da:	01 e1 48 12 	R1.L = 0x1248;		/* (4680)	R1=0x1248(4680) */
    43de:	17 30       	R2 = R7;
    43e0:	ff e3 10 de 	CALL 0x0 <_AddRecordToResponseList>;
    43e4:	00 00       	NOP;
    43e6:	20 a3       	R0 = [P4 + 0x30];
    43e8:	08 30       	R1 = R0;
    43ea:	e2 a2       	R2 = [P4 + 0x2c];
    43ec:	09 64       	R1 += 0x1;		/* (  1) */
    43ee:	0a 08       	CC = R2 == R1;
    43f0:	09 18       	IF CC JUMP 0x4402 <_mDNS_AddMcastResolver+0x62>;
    43f2:	f0 b0       	[SP + 0xc] = R0;
    43f4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1248(4680) */
    43f8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    43fa:	01 e1 88 12 	R1.L = 0x1288;		/* (4744)	R1=0x1288(4744) */
    43fe:	ff e3 01 de 	CALL 0x0 <_AddRecordToResponseList>;
    4402:	04 68       	P4 = 0x0 (X);		/*		P4=0x0(  0) */
    4404:	0d 60       	R5 = 0x1 (X);		/*		R5=0x1(  1) */
    4406:	04 60       	R4 = 0x0 (X);		/*		R4=0x0(  0) */
    4408:	24 20       	JUMP.S 0x4450 <_mDNS_AddMcastResolver+0xb0>;
    440a:	00 00       	NOP;
    440c:	50 a0       	R0 = [P2 + 0x4];
    440e:	30 08       	CC = R0 == R6;
    4410:	1e 14       	IF !CC JUMP 0x444c <_mDNS_AddMcastResolver+0xac> (BP);
    4412:	42 30       	R0 = P2;
    4414:	60 64       	R0 += 0xc;		/* ( 12) */
    4416:	0f 30       	R1 = R7;
    4418:	ff e3 f4 dd 	CALL 0x0 <_AddRecordToResponseList>;
    441c:	00 0c       	CC = R0 == 0x0;
    441e:	17 1c       	IF CC JUMP 0x444c <_mDNS_AddMcastResolver+0xac> (BP);
    4420:	6a 91       	P2 = [P5];
    4422:	90 a0       	R0 = [P2 + 0x8];
    4424:	05 54       	R0 = R5 & R0;
    4426:	00 0c       	CC = R0 == 0x0;
    4428:	09 14       	IF !CC JUMP 0x443a <_mDNS_AddMcastResolver+0x9a> (BP);
    442a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1288(4744) */
    442e:	f6 b0       	[SP + 0xc] = R6;
    4430:	01 e1 d4 12 	R1.L = 0x12d4;		/* (4820)	R1=0x12d4(4820) */
    4434:	17 30       	R2 = R7;
    4436:	ff e3 e5 dd 	CALL 0x0 <_AddRecordToResponseList>;
    443a:	00 00       	NOP;
    443c:	6c 91       	P4 = [P5];
    443e:	a0 a0       	R0 = [P4 + 0x8];
    4440:	00 4c       	BITCLR (R0, 0x0);		/* bit  0 */
    4442:	a0 b0       	[P4 + 0x8] = R0;
    4444:	20 91       	R0 = [P4];
    4446:	28 93       	[P5] = R0;
    4448:	24 93       	[P4] = R4;
    444a:	03 20       	JUMP.S 0x4450 <_mDNS_AddMcastResolver+0xb0>;
    444c:	00 00       	NOP;
    444e:	6d 91       	P5 = [P5];
    4450:	6a 91       	P2 = [P5];
    4452:	42 0c       	CC = P2 == 0x0;
    4454:	db 17       	IF !CC JUMP 0x440a <_mDNS_AddMcastResolver+0x6a> (BP);
    4456:	44 0c       	CC = P4 == 0x0;
    4458:	03 18       	IF CC JUMP 0x445e <_mDNS_AddMcastResolver+0xbe>;
    445a:	6c 93       	[P5] = P4;
    445c:	2e 20       	JUMP.S 0x44b8 <_mDNS_AddMcastResolver+0x118>;
    445e:	20 e1 10 01 	R0 = 0x110 (X);		/*		R0=0x110(272) */
    4462:	ff e3 cf dd 	CALL 0x0 <_AddRecordToResponseList>;
    4466:	10 32       	P2 = R0;
    4468:	28 93       	[P5] = R0;
    446a:	42 0c       	CC = P2 == 0x0;
    446c:	09 14       	IF !CC JUMP 0x447e <_mDNS_AddMcastResolver+0xde> (BP);
    446e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x12d4(4820) */
    4472:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4474:	01 e1 14 13 	R1.L = 0x1314;		/* (4884)	R1=0x1314(4884) */
    4478:	ff e3 c4 dd 	CALL 0x0 <_AddRecordToResponseList>;
    447c:	1e 20       	JUMP.S 0x44b8 <_mDNS_AddMcastResolver+0x118>;
    447e:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    4480:	90 b0       	[P2 + 0x8] = R0;
    4482:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    4486:	56 b0       	[P2 + 0x4] = R6;
    4488:	13 e7 43 00 	[P2 + 0x10c] = P3;
    448c:	4f 50       	R1 = R7 + R1;
    448e:	07 30       	R0 = R7;
    4490:	ff e3 b8 dd 	CALL 0x0 <_AddRecordToResponseList>;
    4494:	c2 42       	R2 = R0.L (Z);
    4496:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    449a:	02 0a       	CC = R2 <= R0 (IU);
    449c:	6a 91       	P2 = [P5];
    449e:	07 14       	IF !CC JUMP 0x44ac <_mDNS_AddMcastResolver+0x10c> (BP);
    44a0:	42 30       	R0 = P2;
    44a2:	60 64       	R0 += 0xc;		/* ( 12) */
    44a4:	0f 30       	R1 = R7;
    44a6:	ff e3 ad dd 	CALL 0x0 <_AddRecordToResponseList>;
    44aa:	04 20       	JUMP.S 0x44b2 <_mDNS_AddMcastResolver+0x112>;
    44ac:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    44ae:	90 e6 0c 00 	B[P2 + 0xc] = R0;
    44b2:	6a 91       	P2 = [P5];
    44b4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    44b6:	10 93       	[P2] = R0;
    44b8:	a6 6c       	SP += 0x14;		/* ( 20) */
    44ba:	28 91       	R0 = [P5];
    44bc:	27 01       	RETS = [SP++];
    44be:	a3 05       	(R7:4, P5:3) = [SP++];
    44c0:	10 00       	RTS;
	...

000044c4 <_DomainEnumQuery>:
_DomainEnumQuery():
    44c4:	c4 04       	[--SP] = (P5:4);
    44c6:	67 01       	[--SP] = RETS;
    44c8:	e6 6e       	SP += -0x24;		/* (-36) */
    44ca:	28 32       	P5 = R0;
    44cc:	66 32       	P4 = SP;
    44ce:	64 6c       	P4 += 0xc;		/* ( 12) */
    44d0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x100(256) */
    44d4:	01 e1 20 04 	R1.L = 0x420;		/* (1056)	R1=0x420(1056) */
    44d8:	c2 60       	R2 = 0x18 (X);		/*		R2=0x18( 24) */
    44da:	44 30       	R0 = P4;
    44dc:	ff e3 92 dd 	CALL 0x0 <_AddRecordToResponseList>;
    44e0:	45 30       	R0 = P5;
    44e2:	ff e3 8f dd 	CALL 0x0 <_AddRecordToResponseList>;
    44e6:	18 0d       	CC = R0 <= 0x3;
    44e8:	07 14       	IF !CC JUMP 0x44f6 <_DomainEnumQuery+0x32> (BP);
    44ea:	27 20       	JUMP.S 0x4538 <_DomainEnumQuery+0x74>;
    44ec:	4d 30       	R1 = P5;
    44ee:	ff e3 89 dd 	CALL 0x0 <_AddRecordToResponseList>;
    44f2:	00 0c       	CC = R0 == 0x0;
    44f4:	06 14       	IF !CC JUMP 0x4500 <_DomainEnumQuery+0x3c> (BP);
    44f6:	00 00       	NOP;
    44f8:	20 90       	R0 = [P4++];
    44fa:	00 0c       	CC = R0 == 0x0;
    44fc:	f8 17       	IF !CC JUMP 0x44ec <_DomainEnumQuery+0x28> (BP);
    44fe:	1e 20       	JUMP.S 0x453a <_DomainEnumQuery+0x76>;
    4500:	00 00       	NOP;
    4502:	28 99       	R0 = B[P5] (Z);
    4504:	08 64       	R0 += 0x1;		/* (  1) */
    4506:	10 32       	P2 = R0;
    4508:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x420(1056) */
    450c:	01 e1 3c 13 	R1.L = 0x133c;		/* (4924)	R1=0x133c(4924) */
    4510:	55 5b       	P5 = P5 + P2;
    4512:	45 30       	R0 = P5;
    4514:	ff e3 76 dd 	CALL 0x0 <_AddRecordToResponseList>;
    4518:	00 0c       	CC = R0 == 0x0;
    451a:	0f 1c       	IF CC JUMP 0x4538 <_DomainEnumQuery+0x74> (BP);
    451c:	28 99       	R0 = B[P5] (Z);
    451e:	4d 30       	R1 = P5;
    4520:	08 64       	R0 += 0x1;		/* (  1) */
    4522:	01 50       	R0 = R1 + R0;
    4524:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x133c(4924) */
    4528:	01 e1 48 13 	R1.L = 0x1348;		/* (4936)	R1=0x1348(4936) */
    452c:	ff e3 6a dd 	CALL 0x0 <_AddRecordToResponseList>;
    4530:	00 0c       	CC = R0 == 0x0;
    4532:	00 02       	R0 = CC;
    4534:	00 4b       	BITTGL (R0, 0x0);		/* bit  0 */
    4536:	02 20       	JUMP.S 0x453a <_DomainEnumQuery+0x76>;
    4538:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    453a:	26 6d       	SP += 0x24;		/* ( 36) */
    453c:	27 01       	RETS = [SP++];
    453e:	84 04       	(P5:4) = [SP++];
    4540:	10 00       	RTS;
	...

00004544 <_SetValidDNSServers>:
_SetValidDNSServers():
    4544:	e3 05       	[--SP] = (R7:4, P5:3);
    4546:	21 32       	P4 = R1;
    4548:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    454c:	28 32       	P5 = R0;
    454e:	00 e8 09 00 	LINK 0x24;		/* (36) */
    4552:	45 e1 00 00 	R5.H = 0x0;		/* (  0)	R5=0x1(  1) */
    4556:	94 5a       	P2 = P4 + P2;
    4558:	72 30       	R6 = P2;
    455a:	42 30       	R0 = P2;
    455c:	ff e3 52 dd 	CALL 0x0 <_AddRecordToResponseList>;
    4560:	4f e1 00 00 	FP.H = 0x0;		/* (  0)	FP=0x0 <_AddRecordToResponseList> */
    4564:	0f e1 00 00 	FP.L = 0x0;		/* (  0)	FP=0x0 <_AddRecordToResponseList> */
    4568:	f0 b1       	[SP + 0x1c] = R0;
    456a:	38 91       	R0 = [FP];
    456c:	79 a0       	R1 = [FP + 0x4];
    456e:	20 e6 33 00 	[P4 + 0xcc] = R0;
    4572:	21 e6 34 00 	[P4 + 0xd0] = R1;
    4576:	06 30       	R0 = R6;
    4578:	ff e3 a6 ff 	CALL 0x44c4 <_DomainEnumQuery>;
    457c:	f9 63       	R1 = -0x1 (X);		/*		R1=0xffffffff( -1) */
    457e:	b1 b1       	[SP + 0x18] = R1;
    4580:	00 0c       	CC = R0 == 0x0;
    4582:	01 02       	R1 = CC;
    4584:	4f e1 00 00 	FP.H = 0x0;		/* (  0)	FP=0x0 <_AddRecordToResponseList> */
    4588:	2d e5 fd 07 	P5 = [P5 + 0x1ff4];
    458c:	03 68       	P3 = 0x0 (X);		/*		P3=0x0(  0) */
    458e:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    4590:	0c 60       	R4 = 0x1 (X);		/*		R4=0x1(  1) */
    4592:	b1 e6 23 00 	B[SP + 0x23] = R1;
    4596:	0f e1 00 00 	FP.L = 0x0;		/* (  0)	FP=0x0 <_AddRecordToResponseList> */
    459a:	05 e1 00 00 	R5.L = 0x0;		/* (  0)	R5=0x0 <_AddRecordToResponseList>(  0) */
    459e:	5d 20       	JUMP.S 0x4658 <_SetValidDNSServers+0x114>;
    45a0:	00 00       	NOP;
    45a2:	28 a2       	R0 = [P5 + 0x20];
    45a4:	04 54       	R0 = R4 & R0;
    45a6:	00 0c       	CC = R0 == 0x0;
    45a8:	56 14       	IF !CC JUMP 0x4654 <_SetValidDNSServers+0x110> (BP);
    45aa:	28 e4 4c 00 	R0 = [P5 + 0x130];
    45ae:	00 0c       	CC = R0 == 0x0;
    45b0:	06 1c       	IF CC JUMP 0x45bc <_SetValidDNSServers+0x78> (BP);
    45b2:	0d 32       	P1 = R5;
    45b4:	69 a0       	R1 = [P5 + 0x4];
    45b6:	08 91       	R0 = [P1];
    45b8:	01 08       	CC = R1 == R0;
    45ba:	4d 18       	IF CC JUMP 0x4654 <_SetValidDNSServers+0x110>;
    45bc:	55 30       	R2 = P5;
    45be:	62 65       	R2 += 0x2c;		/* ( 44) */
    45c0:	02 30       	R0 = R2;
    45c2:	72 b1       	[SP + 0x14] = R2;
    45c4:	ff e3 1e dd 	CALL 0x0 <_AddRecordToResponseList>;
    45c8:	18 30       	R3 = R0;
    45ca:	b0 e4 23 00 	R0 = B[SP + 0x23] (Z);
    45ce:	72 a1       	R2 = [SP + 0x14];
    45d0:	08 02       	CC = R0;
    45d2:	05 1c       	IF CC JUMP 0x45dc <_SetValidDNSServers+0x98> (BP);
    45d4:	28 e4 4e 00 	R0 = [P5 + 0x138];
    45d8:	00 0c       	CC = R0 == 0x0;
    45da:	3c 14       	IF !CC JUMP 0x4652 <_SetValidDNSServers+0x10e> (BP);
    45dc:	00 00       	NOP;
    45de:	28 e4 4c 00 	R0 = [P5 + 0x130];
    45e2:	00 0c       	CC = R0 == 0x0;
    45e4:	08 14       	IF !CC JUMP 0x45f4 <_SetValidDNSServers+0xb0> (BP);
    45e6:	20 e4 46 00 	R0 = [P4 + 0x118];
    45ea:	00 0c       	CC = R0 == 0x0;
    45ec:	0a 18       	IF CC JUMP 0x4600 <_SetValidDNSServers+0xbc>;
    45ee:	39 91       	R1 = [FP];
    45f0:	08 08       	CC = R0 == R1;
    45f2:	07 1c       	IF CC JUMP 0x4600 <_SetValidDNSServers+0xbc> (BP);
    45f4:	00 00       	NOP;
    45f6:	69 a0       	R1 = [P5 + 0x4];
    45f8:	20 e4 46 00 	R0 = [P4 + 0x118];
    45fc:	01 08       	CC = R1 == R0;
    45fe:	2a 14       	IF !CC JUMP 0x4652 <_SetValidDNSServers+0x10e> (BP);
    4600:	b1 a1       	R1 = [SP + 0x18];
    4602:	31 b1       	[SP + 0x10] = R1;
    4604:	f3 b0       	[SP + 0xc] = R3;
    4606:	73 b1       	[SP + 0x14] = R3;
    4608:	06 30       	R0 = R6;
    460a:	f1 a1       	R1 = [SP + 0x1c];
    460c:	ff e3 de e5 	CALL 0x11c8 <_BetterMatchForName>;
    4610:	08 0e       	CC = R0 <= 0x1 (IU);
    4612:	73 a1       	R3 = [SP + 0x14];
    4614:	1f 14       	IF !CC JUMP 0x4652 <_SetValidDNSServers+0x10e> (BP);
    4616:	00 0c       	CC = R0 == 0x0;
    4618:	0c 1c       	IF CC JUMP 0x4630 <_SetValidDNSServers+0xec> (BP);
    461a:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x90 */
    461e:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    4622:	08 91       	R0 = [P1];
    4624:	49 a0       	R1 = [P1 + 0x4];
    4626:	20 e6 33 00 	[P4 + 0xcc] = R0;
    462a:	21 e6 34 00 	[P4 + 0xd0] = R1;
    462e:	03 68       	P3 = 0x0 (X);		/*		P3=0x0(  0) */
    4630:	82 c6 df 81 	R0 = R7 >> 0x5;
    4634:	98 65       	R0 += 0x33;		/* ( 51) */
    4636:	2a e5 4d 00 	P2 = [P5 + 0x134];
    463a:	08 32       	P1 = R0;
    463c:	f9 60       	R1 = 0x1f (X);		/*		R1=0x1f( 31) */
    463e:	0f 54       	R0 = R7 & R1;
    4640:	0c 30       	R1 = R4;
    4642:	81 40       	R1 <<= R0;
    4644:	d3 5a       	P3 = P3 + P2;
    4646:	8c 5e       	P2 = P4 + (P1 << 0x2);
    4648:	01 30       	R0 = R1;
    464a:	11 91       	R1 = [P2];
    464c:	08 56       	R0 = R0 | R1;
    464e:	10 93       	[P2] = R0;
    4650:	b3 b1       	[SP + 0x18] = R3;
    4652:	0f 64       	R7 += 0x1;		/* (  1) */
    4654:	00 00       	NOP;
    4656:	6d 91       	P5 = [P5];
    4658:	45 0c       	CC = P5 == 0x0;
    465a:	a3 17       	IF !CC JUMP 0x45a0 <_SetValidDNSServers+0x5c> (BP);
    465c:	26 6d       	SP += 0x24;		/* ( 36) */
    465e:	77 90       	FP = [SP++];
    4660:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4662:	60 e6 6a 00 	W[P4 + 0xd4] = R0;
    4666:	f0 60       	R0 = 0x1e (X);		/*		R0=0x1e( 30) */
    4668:	43 0c       	CC = P3 == 0x0;
    466a:	98 07       	IF CC P3 = R0;
    466c:	43 30       	R0 = P3;
    466e:	27 01       	RETS = [SP++];
    4670:	a3 05       	(R7:4, P5:3) = [SP++];
    4672:	10 00       	RTS;

00004674 <_GetServerForName>:
_GetServerForName():
    4674:	ec 05       	[--SP] = (R7:5, P5:4);
    4676:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    467a:	20 32       	P4 = R0;
    467c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    4680:	67 01       	[--SP] = RETS;
    4682:	10 91       	R0 = [P2];
    4684:	06 6f       	SP += -0x20;		/* (-32) */
    4686:	29 30       	R5 = R1;
    4688:	32 30       	R6 = R2;
    468a:	02 08       	CC = R2 == R0;
    468c:	10 18       	IF CC JUMP 0x46ac <_GetServerForName+0x38>;
    468e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    4692:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    4696:	10 91       	R0 = [P2];
    4698:	02 08       	CC = R2 == R0;
    469a:	09 18       	IF CC JUMP 0x46ac <_GetServerForName+0x38>;
    469c:	02 0c       	CC = R2 == 0x0;
    469e:	08 18       	IF CC JUMP 0x46ae <_GetServerForName+0x3a>;
    46a0:	44 30       	R0 = P4;
    46a2:	0a 30       	R1 = R2;
    46a4:	ff e3 9c f0 	CALL 0x27dc <_InterfaceNameForID>;
    46a8:	38 30       	R7 = R0;
    46aa:	03 20       	JUMP.S 0x46b0 <_GetServerForName+0x3c>;
    46ac:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
    46ae:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    46b0:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
    46b2:	f0 b0       	[SP + 0xc] = R0;
    46b4:	30 b1       	[SP + 0x10] = R0;
    46b6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    46b8:	70 b1       	[SP + 0x14] = R0;
    46ba:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    46bc:	b0 b1       	[SP + 0x18] = R0;
    46be:	44 30       	R0 = P4;
    46c0:	0d 30       	R1 = R5;
    46c2:	16 30       	R2 = R6;
    46c4:	ff e3 9e e5 	CALL 0x1200 <_GetBestServer>;
    46c8:	28 32       	P5 = R0;
    46ca:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    46ce:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    46d2:	45 0c       	CC = P5 == 0x0;
    46d4:	28 18       	IF CC JUMP 0x4724 <_GetServerForName+0xb0>;
    46d6:	10 91       	R0 = [P2];
    46d8:	00 0c       	CC = R0 == 0x0;
    46da:	38 1c       	IF CC JUMP 0x474a <_GetServerForName+0xd6> (BP);
    46dc:	55 30       	R2 = P5;
    46de:	42 64       	R2 += 0x8;		/* (  8) */
    46e0:	a9 e4 1c 00 	R1 = B[P5 + 0x1c] (Z);
    46e4:	a8 e4 1d 00 	R0 = B[P5 + 0x1d] (Z);
    46e8:	41 4f       	R1 <<= 0x8;
    46ea:	48 56       	R1 = R0 | R1;
    46ec:	28 e4 4b 00 	R0 = [P5 + 0x12c];
    46f0:	00 0c       	CC = R0 == 0x0;
    46f2:	05 1c       	IF CC JUMP 0x46fc <_GetServerForName+0x88> (BP);
    46f4:	23 e4 37 00 	R3 = [P4 + 0xdc];
    46f8:	18 52       	R0 = R0 - R3;
    46fa:	02 20       	JUMP.S 0x46fe <_GetServerForName+0x8a>;
    46fc:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    46fe:	43 e1 00 00 	R3.H = 0x0;		/* (  0)	R3=0x3a( 58) */
    4702:	07 0c       	CC = R7 == 0x0;
    4704:	03 e1 50 13 	R3.L = 0x1350;		/* (4944)	R3=0x1350(4944) */
    4708:	f1 b0       	[SP + 0xc] = R1;
    470a:	3b 07       	IF CC R7 = R3;
    470c:	30 b1       	[SP + 0x10] = R0;
    470e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1f( 31) */
    4712:	77 b1       	[SP + 0x14] = R7;
    4714:	b6 b1       	[SP + 0x18] = R6;
    4716:	f5 b1       	[SP + 0x1c] = R5;
    4718:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    471a:	01 e1 58 13 	R1.L = 0x1358;		/* (4952)	R1=0x1358(4952) */
    471e:	ff e3 71 dc 	CALL 0x0 <_AddRecordToResponseList>;
    4722:	14 20       	JUMP.S 0x474a <_GetServerForName+0xd6>;
    4724:	10 91       	R0 = [P2];
    4726:	00 0c       	CC = R0 == 0x0;
    4728:	11 18       	IF CC JUMP 0x474a <_GetServerForName+0xd6>;
    472a:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x3(  3) */
    472e:	00 e1 50 13 	R0.L = 0x1350;		/* (4944)	R0=0x1350(4944) */
    4732:	07 0c       	CC = R7 == 0x0;
    4734:	38 07       	IF CC R7 = R0;
    4736:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1358(4952) */
    473a:	f6 b0       	[SP + 0xc] = R6;
    473c:	35 b1       	[SP + 0x10] = R5;
    473e:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    4740:	01 e1 b8 13 	R1.L = 0x13b8;		/* (5048)	R1=0x13b8(5048) */
    4744:	17 30       	R2 = R7;
    4746:	ff e3 5d dc 	CALL 0x0 <_AddRecordToResponseList>;
    474a:	06 6d       	SP += 0x20;		/* ( 32) */
    474c:	45 30       	R0 = P5;
    474e:	27 01       	RETS = [SP++];
    4750:	ac 05       	(R7:5, P5:4) = [SP++];
    4752:	10 00       	RTS;

00004754 <_GetServerForQuestion>:
_GetServerForQuestion():
    4754:	e3 05       	[--SP] = (R7:4, P5:3);
    4756:	29 32       	P5 = R1;
    4758:	00 e8 0b 00 	LINK 0x2c;		/* (44) */
    475c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    4760:	38 32       	FP = R0;
    4762:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    4766:	2e e4 46 00 	R6 = [P5 + 0x118];
    476a:	2b e1 34 01 	P3 = 0x134 (X);		/*		P3=0x134(308) */
    476e:	10 91       	R0 = [P2];
    4770:	dd 5a       	P3 = P5 + P3;
    4772:	06 08       	CC = R6 == R0;
    4774:	10 18       	IF CC JUMP 0x4794 <_GetServerForQuestion+0x40>;
    4776:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    477a:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    477e:	10 91       	R0 = [P2];
    4780:	06 08       	CC = R6 == R0;
    4782:	09 18       	IF CC JUMP 0x4794 <_GetServerForQuestion+0x40>;
    4784:	06 0c       	CC = R6 == 0x0;
    4786:	08 18       	IF CC JUMP 0x4796 <_GetServerForQuestion+0x42>;
    4788:	47 30       	R0 = FP;
    478a:	0e 30       	R1 = R6;
    478c:	ff e3 28 f0 	CALL 0x27dc <_InterfaceNameForID>;
    4790:	38 30       	R7 = R0;
    4792:	03 20       	JUMP.S 0x4798 <_GetServerForQuestion+0x44>;
    4794:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
    4796:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    4798:	29 e4 34 00 	R1 = [P5 + 0xd0];
    479c:	28 e4 33 00 	R0 = [P5 + 0xcc];
    47a0:	01 56       	R0 = R1 | R0;
    47a2:	00 0c       	CC = R0 == 0x0;
    47a4:	58 1c       	IF CC JUMP 0x4854 <_GetServerForQuestion+0x100> (BP);
    47a6:	28 e4 33 00 	R0 = [P5 + 0xcc];
    47aa:	f0 b0       	[SP + 0xc] = R0;
    47ac:	46 30       	R0 = SP;
    47ae:	40 65       	R0 += 0x28;		/* ( 40) */
    47b0:	70 b1       	[SP + 0x14] = R0;
    47b2:	29 e4 34 00 	R1 = [P5 + 0xd0];
    47b6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    47b8:	31 b1       	[SP + 0x10] = R1;
    47ba:	b0 b1       	[SP + 0x18] = R0;
    47bc:	47 30       	R0 = FP;
    47be:	4b 30       	R1 = P3;
    47c0:	16 30       	R2 = R6;
    47c2:	ff e3 1f e5 	CALL 0x1200 <_GetBestServer>;
    47c6:	20 32       	P4 = R0;
    47c8:	b0 a2       	R0 = [SP + 0x28];
    47ca:	38 0c       	CC = R0 == -0x1;
    47cc:	0e 18       	IF CC JUMP 0x47e8 <_GetServerForQuestion+0x94>;
    47ce:	82 c6 d8 83 	R1 = R0 >> 0x5;
    47d2:	99 65       	R1 += 0x33;		/* ( 51) */
    47d4:	09 32       	P1 = R1;
    47d6:	f9 60       	R1 = 0x1f (X);		/*		R1=0x1f( 31) */
    47d8:	48 54       	R1 = R0 & R1;
    47da:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    47dc:	88 40       	R0 <<= R1;
    47de:	8d 5e       	P2 = P5 + (P1 << 0x2);
    47e0:	11 91       	R1 = [P2];
    47e2:	c0 43       	R0 =~ R0;
    47e4:	08 54       	R0 = R0 & R1;
    47e6:	10 93       	[P2] = R0;
    47e8:	44 0c       	CC = P4 == 0x0;
    47ea:	35 18       	IF CC JUMP 0x4854 <_GetServerForQuestion+0x100>;
    47ec:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    47f0:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    47f4:	10 91       	R0 = [P2];
    47f6:	00 0c       	CC = R0 == 0x0;
    47f8:	4c 1c       	IF CC JUMP 0x4890 <_GetServerForQuestion+0x13c> (BP);
    47fa:	6c 30       	R5 = P4;
    47fc:	45 64       	R5 += 0x8;		/* (  8) */
    47fe:	a4 e4 1c 00 	R4 = B[P4 + 0x1c] (Z);
    4802:	a0 e4 1d 00 	R0 = B[P4 + 0x1d] (Z);
    4806:	44 4f       	R4 <<= 0x8;
    4808:	20 57       	R4 = R0 | R4;
    480a:	20 e4 4b 00 	R0 = [P4 + 0x12c];
    480e:	00 0c       	CC = R0 == 0x0;
    4810:	07 1c       	IF CC JUMP 0x481e <_GetServerForQuestion+0xca> (BP);
    4812:	10 32       	P2 = R0;
    4814:	3f e5 37 00 	FP = [FP + 0xdc];
    4818:	3a 44       	P2 -= FP;
    481a:	7a 32       	FP = P2;
    481c:	02 20       	JUMP.S 0x4820 <_GetServerForQuestion+0xcc>;
    481e:	07 68       	FP = 0x0 (X);		/*		FP=0x0(  0) */
    4820:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x1(  1) */
    4824:	07 0c       	CC = R7 == 0x0;
    4826:	00 e1 50 13 	R0.L = 0x1350;		/* (4944)	R0=0x1350(4944) */
    482a:	38 07       	IF CC R7 = R0;
    482c:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    4830:	ff e3 e8 db 	CALL 0x0 <_AddRecordToResponseList>;
    4834:	70 b2       	[SP + 0x24] = R0;
    4836:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1f( 31) */
    483a:	f5 b0       	[SP + 0xc] = R5;
    483c:	34 b1       	[SP + 0x10] = R4;
    483e:	77 bd       	[SP + 0x14] = FP;
    4840:	b7 b1       	[SP + 0x18] = R7;
    4842:	f6 b1       	[SP + 0x1c] = R6;
    4844:	33 be       	[SP + 0x20] = P3;
    4846:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    4848:	01 e1 fc 13 	R1.L = 0x13fc;		/* (5116)	R1=0x13fc(5116) */
    484c:	55 30       	R2 = P5;
    484e:	ff e3 d9 db 	CALL 0x0 <_AddRecordToResponseList>;
    4852:	1f 20       	JUMP.S 0x4890 <_GetServerForQuestion+0x13c>;
    4854:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    4858:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    485c:	10 91       	R0 = [P2];
    485e:	00 0c       	CC = R0 == 0x0;
    4860:	17 18       	IF CC JUMP 0x488e <_GetServerForQuestion+0x13a>;
    4862:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x3(  3) */
    4866:	07 0c       	CC = R7 == 0x0;
    4868:	00 e1 50 13 	R0.L = 0x1350;		/* (4944)	R0=0x1350(4944) */
    486c:	38 07       	IF CC R7 = R0;
    486e:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    4872:	ff e3 c7 db 	CALL 0x0 <_AddRecordToResponseList>;
    4876:	b0 b1       	[SP + 0x18] = R0;
    4878:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x13fc(5116) */
    487c:	f7 b0       	[SP + 0xc] = R7;
    487e:	36 b1       	[SP + 0x10] = R6;
    4880:	73 bd       	[SP + 0x14] = P3;
    4882:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    4884:	01 e1 68 14 	R1.L = 0x1468;		/* (5224)	R1=0x1468(5224) */
    4888:	55 30       	R2 = P5;
    488a:	ff e3 bb db 	CALL 0x0 <_AddRecordToResponseList>;
    488e:	04 68       	P4 = 0x0 (X);		/*		P4=0x0(  0) */
    4890:	66 6d       	SP += 0x2c;		/* ( 44) */
    4892:	77 90       	FP = [SP++];
    4894:	44 30       	R0 = P4;
    4896:	27 01       	RETS = [SP++];
    4898:	a3 05       	(R7:4, P5:3) = [SP++];
    489a:	10 00       	RTS;

0000489c <_mDNS_StopQuery_internal>:
_mDNS_StopQuery_internal():
    489c:	e3 05       	[--SP] = (R7:4, P5:3);
    489e:	29 32       	P5 = R1;
    48a0:	2c e1 34 01 	P4 = 0x134 (X);		/*		P4=0x134(308) */
    48a4:	18 32       	P3 = R0;
    48a6:	00 e8 09 00 	LINK 0x24;		/* (36) */
    48aa:	25 5b       	P4 = P5 + P4;
    48ac:	44 30       	R0 = P4;
    48ae:	ff e3 a9 db 	CALL 0x0 <_AddRecordToResponseList>;
    48b2:	41 e1 d5 20 	R1.H = 0x20d5;		/* (8405)	R1=0x20d51468(550835304) */
    48b6:	38 30       	R7 = R0;
    48b8:	01 e1 39 6b 	R1.L = 0x6b39;		/* (27449)	R1=0x20d56b39(550857529) */
    48bc:	ff e3 a2 db 	CALL 0x0 <_AddRecordToResponseList>;
    48c0:	82 c6 d0 83 	R1 = R0 >> 0x6;
    48c4:	6a a0       	R2 = [P5 + 0x4];
    48c6:	20 e1 f3 01 	R0 = 0x1f3 (X);		/*		R0=0x1f3(499) */
    48ca:	c1 40       	R1 *= R0;
    48cc:	f4 bc       	[SP + 0xc] = P4;
    48ce:	4f 52       	R1 = R7 - R1;
    48d0:	43 30       	R0 = P3;
    48d2:	ff e3 89 ed 	CALL 0x23e4 <_CacheGroupForName>;
    48d6:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    48da:	20 30       	R4 = R0;
    48dc:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    48e0:	28 e4 46 00 	R0 = [P5 + 0x118];
    48e4:	11 91       	R1 = [P2];
    48e6:	08 08       	CC = R0 == R1;
    48e8:	0b 18       	IF CC JUMP 0x48fe <_mDNS_StopQuery_internal+0x62>;
    48ea:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    48ee:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    48f2:	11 91       	R1 = [P2];
    48f4:	08 08       	CC = R0 == R1;
    48f6:	04 18       	IF CC JUMP 0x48fe <_mDNS_StopQuery_internal+0x62>;
    48f8:	29 e1 30 01 	P1 = 0x130 (X);		/*		P1=0x130 <_ExpireDupSuppressInfo>(304) */
    48fc:	03 20       	JUMP.S 0x4902 <_mDNS_StopQuery_internal+0x66>;
    48fe:	29 e1 3c 01 	P1 = 0x13c (X);		/*		P1=0x13c(316) */
    4902:	4b 5a       	P1 = P3 + P1;
    4904:	02 20       	JUMP.S 0x4908 <_mDNS_StopQuery_internal+0x6c>;
    4906:	4a 32       	P1 = P2;
    4908:	4a 91       	P2 = [P1];
    490a:	42 0c       	CC = P2 == 0x0;
    490c:	f3 18       	IF CC JUMP 0x4af2 <_mDNS_StopQuery_internal+0x256>;
    490e:	6a 08       	CC = P2 == P5;
    4910:	fb 17       	IF !CC JUMP 0x4906 <_mDNS_StopQuery_internal+0x6a> (BP);
    4912:	42 0c       	CC = P2 == 0x0;
    4914:	ef 1c       	IF CC JUMP 0x4af2 <_mDNS_StopQuery_internal+0x256> (BP);
    4916:	10 91       	R0 = [P2];
    4918:	08 93       	[P1] = R0;
    491a:	a8 a3       	R0 = [P5 + 0x38];
    491c:	00 0c       	CC = R0 == 0x0;
    491e:	24 18       	IF CC JUMP 0x4966 <_mDNS_StopQuery_internal+0xca>;
    4920:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    4924:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    4928:	10 91       	R0 = [P2];
    492a:	00 0c       	CC = R0 == 0x0;
    492c:	dd 1c       	IF CC JUMP 0x4ae6 <_mDNS_StopQuery_internal+0x24a> (BP);
    492e:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    4932:	ff e3 67 db 	CALL 0x0 <_AddRecordToResponseList>;
    4936:	ac af       	P4 = [P5 + 0x38];
    4938:	38 30       	R7 = R0;
    493a:	60 e5 1a 01 	R0 = W[P4 + 0x234] (X);
    493e:	ff e3 61 db 	CALL 0x0 <_AddRecordToResponseList>;
    4942:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    4946:	74 bd       	[SP + 0x14] = P4;
    4948:	55 5a       	P1 = P5 + P2;
    494a:	14 5b       	P4 = P4 + P2;
    494c:	f0 b1       	[SP + 0x1c] = R0;
    494e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x6b39(27449) */
    4952:	f1 bc       	[SP + 0xc] = P1;
    4954:	37 b1       	[SP + 0x10] = R7;
    4956:	b4 bd       	[SP + 0x18] = P4;
    4958:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    495a:	01 e1 b8 14 	R1.L = 0x14b8;		/* (5304)	R1=0x14b8(5304) */
    495e:	55 30       	R2 = P5;
    4960:	ff e3 50 db 	CALL 0x0 <_AddRecordToResponseList>;
    4964:	c1 20       	JUMP.S 0x4ae6 <_mDNS_StopQuery_internal+0x24a>;
    4966:	26 e1 e0 00 	R6 = 0xe0 (X);		/*		R6=0xe0(224) */
    496a:	16 32       	P2 = R6;
    496c:	4f e1 00 00 	FP.H = 0x0;		/* (  0)	FP=0x0 <_AddRecordToResponseList> */
    4970:	1c e5 4c 00 	P4 = [P3 + 0x130];
    4974:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4976:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    4978:	95 5a       	P2 = P5 + P2;
    497a:	32 be       	[SP + 0x20] = P2;
    497c:	0f e1 00 00 	FP.L = 0x0;		/* (  0)	FP=0x0 <_AddRecordToResponseList> */
    4980:	25 e1 34 01 	R5 = 0x134 (X);		/*		R5=0x134(308) */
    4984:	af 20       	JUMP.S 0x4ae2 <_mDNS_StopQuery_internal+0x246>;
    4986:	00 00       	NOP;
    4988:	a2 af       	P2 = [P4 + 0x38];
    498a:	6a 08       	CC = P2 == P5;
    498c:	a9 14       	IF !CC JUMP 0x4ade <_mDNS_StopQuery_internal+0x242> (BP);
    498e:	a0 b3       	[P4 + 0x38] = R0;
    4990:	00 0c       	CC = R0 == 0x0;
    4992:	a6 14       	IF !CC JUMP 0x4ade <_mDNS_StopQuery_internal+0x242> (BP);
    4994:	e8 a0       	R0 = [P5 + 0xc];
    4996:	e0 b0       	[P4 + 0xc] = R0;
    4998:	28 a1       	R0 = [P5 + 0x10];
    499a:	20 b1       	[P4 + 0x10] = R0;
    499c:	68 a1       	R0 = [P5 + 0x14];
    499e:	60 b1       	[P4 + 0x14] = R0;
    49a0:	a8 a1       	R0 = [P5 + 0x18];
    49a2:	a0 b1       	[P4 + 0x18] = R0;
    49a4:	e8 a1       	R0 = [P5 + 0x1c];
    49a6:	e0 b1       	[P4 + 0x1c] = R0;
    49a8:	28 e4 2a 00 	R0 = [P5 + 0xa8];
    49ac:	20 e6 2a 00 	[P4 + 0xa8] = R0;
    49b0:	28 e4 2b 00 	R0 = [P5 + 0xac];
    49b4:	20 e6 2b 00 	[P4 + 0xac] = R0;
    49b8:	28 e4 2c 00 	R0 = [P5 + 0xb0];
    49bc:	20 e6 2c 00 	[P4 + 0xb0] = R0;
    49c0:	28 e4 37 00 	R0 = [P5 + 0xdc];
    49c4:	20 e6 37 00 	[P4 + 0xdc] = R0;
    49c8:	4c 30       	R1 = P4;
    49ca:	31 50       	R0 = R1 + R6;
    49cc:	31 a2       	R1 = [SP + 0x20];
    49ce:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
    49d0:	ff e3 18 db 	CALL 0x0 <_AddRecordToResponseList>;
    49d4:	68 e5 7a 00 	R0 = W[P5 + 0xf4] (X);
    49d8:	60 e6 7a 00 	W[P4 + 0xf4] = R0;
    49dc:	28 e4 32 00 	R0 = [P5 + 0xc8];
    49e0:	20 e6 32 00 	[P4 + 0xc8] = R0;
    49e4:	28 e4 33 00 	R0 = [P5 + 0xcc];
    49e8:	29 e4 34 00 	R1 = [P5 + 0xd0];
    49ec:	20 e6 33 00 	[P4 + 0xcc] = R0;
    49f0:	a8 e5 d8 00 	R0 = B[P5 + 0xd8] (X);
    49f4:	a0 e6 d8 00 	B[P4 + 0xd8] = R0;
    49f8:	68 e5 6a 00 	R0 = W[P5 + 0xd4] (X);
    49fc:	60 e6 6a 00 	W[P4 + 0xd4] = R0;
    4a00:	68 e5 6b 00 	R0 = W[P5 + 0xd6] (X);
    4a04:	60 e6 6b 00 	W[P4 + 0xd6] = R0;
    4a08:	68 e5 99 00 	R0 = W[P5 + 0x132] (X);
    4a0c:	60 e6 99 00 	W[P4 + 0x132] = R0;
    4a10:	28 e4 30 00 	R0 = [P5 + 0xc0];
    4a14:	20 e6 30 00 	[P4 + 0xc0] = R0;
    4a18:	28 e4 40 00 	R0 = [P5 + 0x100];
    4a1c:	20 e6 40 00 	[P4 + 0x100] = R0;
    4a20:	28 e4 41 00 	R0 = [P5 + 0x104];
    4a24:	20 e6 41 00 	[P4 + 0x104] = R0;
    4a28:	28 e4 42 00 	R0 = [P5 + 0x108];
    4a2c:	20 e6 42 00 	[P4 + 0x108] = R0;
    4a30:	68 e5 86 00 	R0 = W[P5 + 0x10c] (X);
    4a34:	21 e6 34 00 	[P4 + 0xd0] = R1;
    4a38:	60 e6 86 00 	W[P4 + 0x10c] = R0;
    4a3c:	28 e4 44 00 	R0 = [P5 + 0x110];
    4a40:	29 e4 45 00 	R1 = [P5 + 0x114];
    4a44:	20 e6 44 00 	[P4 + 0x110] = R0;
    4a48:	2f e6 37 00 	[P5 + 0xdc] = R7;
    4a4c:	20 e4 37 00 	R0 = [P4 + 0xdc];
    4a50:	21 e6 45 00 	[P4 + 0x114] = R1;
    4a54:	2f e6 30 00 	[P5 + 0xc0] = R7;
    4a58:	00 0c       	CC = R0 == 0x0;
    4a5a:	17 18       	IF CC JUMP 0x4a88 <_mDNS_StopQuery_internal+0x1ec>;
    4a5c:	38 91       	R0 = [FP];
    4a5e:	00 0c       	CC = R0 == 0x0;
    4a60:	0f 1c       	IF CC JUMP 0x4a7e <_mDNS_StopQuery_internal+0x1e2> (BP);
    4a62:	60 e5 1a 01 	R0 = W[P4 + 0x234] (X);
    4a66:	ff e3 cd da 	CALL 0x0 <_AddRecordToResponseList>;
    4a6a:	4c 30       	R1 = P4;
    4a6c:	a9 50       	R2 = R1 + R5;
    4a6e:	f0 b0       	[SP + 0xc] = R0;
    4a70:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x14b8(5304) */
    4a74:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    4a76:	01 e1 04 15 	R1.L = 0x1504;		/* (5380)	R1=0x1504(5380) */
    4a7a:	ff e3 c3 da 	CALL 0x0 <_AddRecordToResponseList>;
    4a7e:	00 00       	NOP;
    4a80:	22 e5 37 00 	P2 = [P4 + 0xdc];
    4a84:	14 e7 ca 00 	[P2 + 0x328] = P4;
    4a88:	28 e4 3e 00 	R0 = [P5 + 0xf8];
    4a8c:	00 0c       	CC = R0 == 0x0;
    4a8e:	0b 18       	IF CC JUMP 0x4aa4 <_mDNS_StopQuery_internal+0x208>;
    4a90:	38 91       	R0 = [FP];
    4a92:	00 0c       	CC = R0 == 0x0;
    4a94:	08 1c       	IF CC JUMP 0x4aa4 <_mDNS_StopQuery_internal+0x208> (BP);
    4a96:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1504(5380) */
    4a9a:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    4a9c:	01 e1 44 15 	R1.L = 0x1544;		/* (5444)	R1=0x1544(5444) */
    4aa0:	ff e3 b0 da 	CALL 0x0 <_AddRecordToResponseList>;
    4aa4:	00 00       	NOP;
    4aa6:	28 e4 40 00 	R0 = [P5 + 0x100];
    4aaa:	18 0c       	CC = R0 == 0x3;
    4aac:	14 14       	IF !CC JUMP 0x4ad4 <_mDNS_StopQuery_internal+0x238> (BP);
    4aae:	38 91       	R0 = [FP];
    4ab0:	00 0c       	CC = R0 == 0x0;
    4ab2:	0f 1c       	IF CC JUMP 0x4ad0 <_mDNS_StopQuery_internal+0x234> (BP);
    4ab4:	60 e5 1a 01 	R0 = W[P4 + 0x234] (X);
    4ab8:	ff e3 a4 da 	CALL 0x0 <_AddRecordToResponseList>;
    4abc:	4c 30       	R1 = P4;
    4abe:	a9 50       	R2 = R1 + R5;
    4ac0:	f0 b0       	[SP + 0xc] = R0;
    4ac2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1544(5444) */
    4ac6:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    4ac8:	01 e1 7c 15 	R1.L = 0x157c;		/* (5500)	R1=0x157c(5500) */
    4acc:	ff e3 9a da 	CALL 0x0 <_AddRecordToResponseList>;
    4ad0:	2f e6 40 00 	[P5 + 0x100] = R7;
    4ad4:	43 30       	R0 = P3;
    4ad6:	4c 30       	R1 = P4;
    4ad8:	ff e3 78 ea 	CALL 0x1fc8 <_SetNextQueryTime>;
    4adc:	44 30       	R0 = P4;
    4ade:	00 00       	NOP;
    4ae0:	64 91       	P4 = [P4];
    4ae2:	44 0c       	CC = P4 == 0x0;
    4ae4:	51 17       	IF !CC JUMP 0x4986 <_mDNS_StopQuery_internal+0xea> (BP);
    4ae6:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
    4ae8:	28 b1       	[P5 + 0x10] = R0;
    4aea:	04 0c       	CC = R4 == 0x0;
    4aec:	18 14       	IF !CC JUMP 0x4b1c <_mDNS_StopQuery_internal+0x280> (BP);
    4aee:	07 68       	FP = 0x0 (X);		/*		FP=0x0(  0) */
    4af0:	3f 20       	JUMP.S 0x4b6e <_mDNS_StopQuery_internal+0x2d2>;
    4af2:	00 00       	NOP;
    4af4:	28 a1       	R0 = [P5 + 0x10];
    4af6:	80 0c       	CC = R0 < 0x0;
    4af8:	d8 1c       	IF CC JUMP 0x4ca8 <_mDNS_StopQuery_internal+0x40c> (BP);
    4afa:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    4afe:	ff e3 81 da 	CALL 0x0 <_AddRecordToResponseList>;
    4b02:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    4b06:	95 5a       	P2 = P5 + P2;
    4b08:	f0 b0       	[SP + 0xc] = R0;
    4b0a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x157c(5500) */
    4b0e:	52 30       	R2 = P2;
    4b10:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4b12:	01 e1 bc 15 	R1.L = 0x15bc;		/* (5564)	R1=0x15bc(5564) */
    4b16:	ff e3 75 da 	CALL 0x0 <_AddRecordToResponseList>;
    4b1a:	c7 20       	JUMP.S 0x4ca8 <_mDNS_StopQuery_internal+0x40c>;
    4b1c:	14 32       	P2 = R4;
    4b1e:	97 ac       	FP = [P2 + 0x8];
    4b20:	27 20       	JUMP.S 0x4b6e <_mDNS_StopQuery_internal+0x2d2>;
    4b22:	4d 30       	R1 = P5;
    4b24:	38 e4 10 00 	R0 = [FP + 0x40];
    4b28:	08 08       	CC = R0 == R1;
    4b2a:	20 14       	IF !CC JUMP 0x4b6a <_mDNS_StopQuery_internal+0x2ce> (BP);
    4b2c:	7f 30       	R7 = FP;
    4b2e:	1c e5 4c 00 	P4 = [P3 + 0x130];
    4b32:	27 64       	R7 += 0x4;		/* (  4) */
    4b34:	10 20       	JUMP.S 0x4b54 <_mDNS_StopQuery_internal+0x2b8>;
    4b36:	00 00       	NOP;
    4b38:	20 a1       	R0 = [P4 + 0x10];
    4b3a:	00 0d       	CC = R0 <= 0x0;
    4b3c:	0a 1c       	IF CC JUMP 0x4b50 <_mDNS_StopQuery_internal+0x2b4> (BP);
    4b3e:	a0 a3       	R0 = [P4 + 0x38];
    4b40:	00 0c       	CC = R0 == 0x0;
    4b42:	07 14       	IF !CC JUMP 0x4b50 <_mDNS_StopQuery_internal+0x2b4> (BP);
    4b44:	07 30       	R0 = R7;
    4b46:	4c 30       	R1 = P4;
    4b48:	ff e3 5c da 	CALL 0x0 <_AddRecordToResponseList>;
    4b4c:	00 0c       	CC = R0 == 0x0;
    4b4e:	05 14       	IF !CC JUMP 0x4b58 <_mDNS_StopQuery_internal+0x2bc> (BP);
    4b50:	00 00       	NOP;
    4b52:	64 91       	P4 = [P4];
    4b54:	44 0c       	CC = P4 == 0x0;
    4b56:	f0 17       	IF !CC JUMP 0x4b36 <_mDNS_StopQuery_internal+0x29a> (BP);
    4b58:	3c e7 10 00 	[FP + 0x40] = P4;
    4b5c:	44 0c       	CC = P4 == 0x0;
    4b5e:	06 14       	IF !CC JUMP 0x4b6a <_mDNS_StopQuery_internal+0x2ce> (BP);
    4b60:	18 e4 54 00 	R0 = [P3 + 0x150];
    4b64:	f8 67       	R0 += -0x1;		/* ( -1) */
    4b66:	18 e6 54 00 	[P3 + 0x150] = R0;
    4b6a:	00 00       	NOP;
    4b6c:	7f 91       	FP = [FP];
    4b6e:	47 0c       	CC = FP == 0x0;
    4b70:	d9 17       	IF !CC JUMP 0x4b22 <_mDNS_StopQuery_internal+0x286> (BP);
    4b72:	1a e5 4e 00 	P2 = [P3 + 0x138];
    4b76:	6a 08       	CC = P2 == P5;
    4b78:	04 14       	IF !CC JUMP 0x4b80 <_mDNS_StopQuery_internal+0x2e4> (BP);
    4b7a:	10 91       	R0 = [P2];
    4b7c:	18 e6 4e 00 	[P3 + 0x138] = R0;
    4b80:	00 00       	NOP;
    4b82:	1a e5 4d 00 	P2 = [P3 + 0x134];
    4b86:	6a 08       	CC = P2 == P5;
    4b88:	04 14       	IF !CC JUMP 0x4b90 <_mDNS_StopQuery_internal+0x2f4> (BP);
    4b8a:	10 91       	R0 = [P2];
    4b8c:	18 e6 4d 00 	[P3 + 0x134] = R0;
    4b90:	00 00       	NOP;
    4b92:	1a e5 50 00 	P2 = [P3 + 0x140];
    4b96:	6a 08       	CC = P2 == P5;
    4b98:	04 14       	IF !CC JUMP 0x4ba0 <_mDNS_StopQuery_internal+0x304> (BP);
    4b9a:	10 91       	R0 = [P2];
    4b9c:	18 e6 50 00 	[P3 + 0x140] = R0;
    4ba0:	00 00       	NOP;
    4ba2:	1c e5 51 00 	P4 = [P3 + 0x144];
    4ba6:	6c 08       	CC = P4 == P5;
    4ba8:	14 14       	IF !CC JUMP 0x4bd0 <_mDNS_StopQuery_internal+0x334> (BP);
    4baa:	60 e5 1a 01 	R0 = W[P4 + 0x234] (X);
    4bae:	ff e3 29 da 	CALL 0x0 <_AddRecordToResponseList>;
    4bb2:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    4bb6:	94 5a       	P2 = P4 + P2;
    4bb8:	f0 b0       	[SP + 0xc] = R0;
    4bba:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x15bc(5564) */
    4bbe:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4bc0:	52 30       	R2 = P2;
    4bc2:	01 e1 04 16 	R1.L = 0x1604;		/* (5636)	R1=0x1604(5636) */
    4bc6:	ff e3 1d da 	CALL 0x0 <_AddRecordToResponseList>;
    4bca:	20 91       	R0 = [P4];
    4bcc:	18 e6 51 00 	[P3 + 0x144] = R0;
    4bd0:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    4bd2:	28 e4 3e 00 	R0 = [P5 + 0xf8];
    4bd6:	2f 93       	[P5] = R7;
    4bd8:	00 0c       	CC = R0 == 0x0;
    4bda:	05 18       	IF CC JUMP 0x4be4 <_mDNS_StopQuery_internal+0x348>;
    4bdc:	ff e3 12 da 	CALL 0x0 <_AddRecordToResponseList>;
    4be0:	2f e6 3e 00 	[P5 + 0xf8] = R7;
    4be4:	28 e4 30 00 	R0 = [P5 + 0xc0];
    4be8:	00 0c       	CC = R0 == 0x0;
    4bea:	06 18       	IF CC JUMP 0x4bf6 <_mDNS_StopQuery_internal+0x35a>;
    4bec:	ff e3 0a da 	CALL 0x0 <_AddRecordToResponseList>;
    4bf0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4bf2:	28 e6 30 00 	[P5 + 0xc0] = R0;
    4bf6:	68 e4 99 00 	R0 = W[P5 + 0x132] (Z);
    4bfa:	00 0c       	CC = R0 == 0x0;
    4bfc:	4a 1c       	IF CC JUMP 0x4c90 <_mDNS_StopQuery_internal+0x3f4> (BP);
    4bfe:	28 e4 8e 00 	R0 = [P5 + 0x238];
    4c02:	00 0c       	CC = R0 == 0x0;
    4c04:	46 1c       	IF CC JUMP 0x4c90 <_mDNS_StopQuery_internal+0x3f4> (BP);
    4c06:	1a e5 4c 00 	P2 = [P3 + 0x130];
    4c0a:	0c 20       	JUMP.S 0x4c22 <_mDNS_StopQuery_internal+0x386>;
    4c0c:	00 00       	NOP;
    4c0e:	50 e4 99 00 	R0 = W[P2 + 0x132] (Z);
    4c12:	00 0c       	CC = R0 == 0x0;
    4c14:	05 1c       	IF CC JUMP 0x4c1e <_mDNS_StopQuery_internal+0x382> (BP);
    4c16:	10 e4 8e 00 	R0 = [P2 + 0x238];
    4c1a:	00 0c       	CC = R0 == 0x0;
    4c1c:	26 14       	IF !CC JUMP 0x4c68 <_mDNS_StopQuery_internal+0x3cc> (BP);
    4c1e:	00 00       	NOP;
    4c20:	52 91       	P2 = [P2];
    4c22:	42 0c       	CC = P2 == 0x0;
    4c24:	f4 17       	IF !CC JUMP 0x4c0c <_mDNS_StopQuery_internal+0x370> (BP);
    4c26:	4b 20       	JUMP.S 0x4cbc <_mDNS_StopQuery_internal+0x420>;
    4c28:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1604(5636) */
    4c2c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4c2e:	01 e1 54 16 	R1.L = 0x1654;		/* (5716)	R1=0x1654(5716) */
    4c32:	ff e3 e7 d9 	CALL 0x0 <_AddRecordToResponseList>;
    4c36:	19 20       	JUMP.S 0x4c68 <_mDNS_StopQuery_internal+0x3cc>;
    4c38:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    4c3c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    4c40:	10 91       	R0 = [P2];
    4c42:	00 0c       	CC = R0 == 0x0;
    4c44:	08 1c       	IF CC JUMP 0x4c54 <_mDNS_StopQuery_internal+0x3b8> (BP);
    4c46:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1654(5716) */
    4c4a:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    4c4c:	01 e1 84 16 	R1.L = 0x1684;		/* (5764)	R1=0x1684(5764) */
    4c50:	ff e3 d8 d9 	CALL 0x0 <_AddRecordToResponseList>;
    4c54:	2a e1 84 27 	P2 = 0x2784 (X);		/*		P2=0x2784(10116) */
    4c58:	93 5a       	P2 = P3 + P2;
    4c5a:	4a 30       	R1 = P2;
    4c5c:	43 30       	R0 = P3;
    4c5e:	ff e3 d1 d9 	CALL 0x0 <_AddRecordToResponseList>;
    4c62:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4c64:	18 e6 ef 09 	[P3 + 0x27bc] = R0;
    4c68:	00 00       	NOP;
    4c6a:	28 e4 40 00 	R0 = [P5 + 0x100];
    4c6e:	18 0c       	CC = R0 == 0x3;
    4c70:	10 14       	IF !CC JUMP 0x4c90 <_mDNS_StopQuery_internal+0x3f4> (BP);
    4c72:	04 68       	P4 = 0x0 (X);		/*		P4=0x0(  0) */
    4c74:	2c e7 41 00 	[P5 + 0x104] = P4;
    4c78:	43 30       	R0 = P3;
    4c7a:	4d 30       	R1 = P5;
    4c7c:	ff e3 c2 d9 	CALL 0x0 <_AddRecordToResponseList>;
    4c80:	2a e5 3e 00 	P2 = [P5 + 0xf8];
    4c84:	42 0c       	CC = P2 == 0x0;
    4c86:	05 1c       	IF CC JUMP 0x4c90 <_mDNS_StopQuery_internal+0x3f4> (BP);
    4c88:	14 e7 c1 08 	[P2 + 0x2304] = P4;
    4c8c:	2c e7 3e 00 	[P5 + 0xf8] = P4;
    4c90:	00 00       	NOP;
    4c92:	29 e4 37 00 	R1 = [P5 + 0xdc];
    4c96:	01 0c       	CC = R1 == 0x0;
    4c98:	0c 18       	IF CC JUMP 0x4cb0 <_mDNS_StopQuery_internal+0x414>;
    4c9a:	43 30       	R0 = P3;
    4c9c:	00 e3 16 00 	CALL 0x4cc8 <_CancelGetZoneData>;
    4ca0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4ca2:	28 e6 37 00 	[P5 + 0xdc] = R0;
    4ca6:	06 20       	JUMP.S 0x4cb2 <_mDNS_StopQuery_internal+0x416>;
    4ca8:	d8 63       	R0 = -0x5 (X);		/*		R0=0xfffffffb( -5) */
    4caa:	40 e1 fe ff 	R0.H = 0xfffe;		/* ( -2)	R0=0xfffefffb(-65541) */
    4cae:	02 20       	JUMP.S 0x4cb2 <_mDNS_StopQuery_internal+0x416>;
    4cb0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4cb2:	26 6d       	SP += 0x24;		/* ( 36) */
    4cb4:	77 90       	FP = [SP++];
    4cb6:	27 01       	RETS = [SP++];
    4cb8:	a3 05       	(R7:4, P5:3) = [SP++];
    4cba:	10 00       	RTS;
    4cbc:	18 e4 ef 09 	R0 = [P3 + 0x27bc];
    4cc0:	00 0c       	CC = R0 == 0x0;
    4cc2:	bb 17       	IF !CC JUMP 0x4c38 <_mDNS_StopQuery_internal+0x39c> (BP);
    4cc4:	b2 2f       	JUMP.S 0x4c28 <_mDNS_StopQuery_internal+0x38c>;
	...

00004cc8 <_CancelGetZoneData>:
_CancelGetZoneData():
    4cc8:	c5 04       	[--SP] = (P5:5);
    4cca:	29 32       	P5 = R1;
    4ccc:	67 01       	[--SP] = RETS;
    4cce:	66 6f       	SP += -0x14;		/* (-20) */
    4cd0:	29 e4 cf 00 	R1 = [P5 + 0x33c];
    4cd4:	39 0c       	CC = R1 == -0x1;
    4cd6:	1e 18       	IF CC JUMP 0x4d12 <_CancelGetZoneData+0x4a>;
    4cd8:	2a e1 2c 03 	P2 = 0x32c (X);		/*		P2=0x32c(812) */
    4cdc:	95 5a       	P2 = P5 + P2;
    4cde:	4a 30       	R1 = P2;
    4ce0:	ff e3 de fd 	CALL 0x489c <_mDNS_StopQuery_internal>;
    4ce4:	28 e4 cf 00 	R0 = [P5 + 0x33c];
    4ce8:	38 0c       	CC = R0 == -0x1;
    4cea:	14 1c       	IF CC JUMP 0x4d12 <_CancelGetZoneData+0x4a> (BP);
    4cec:	68 e5 b0 02 	R0 = W[P5 + 0x560] (X);
    4cf0:	ff e3 88 d9 	CALL 0x0 <_AddRecordToResponseList>;
    4cf4:	f0 b0       	[SP + 0xc] = R0;
    4cf6:	28 e4 cf 00 	R0 = [P5 + 0x33c];
    4cfa:	2a e1 60 04 	P2 = 0x460 (X);		/*		P2=0x460(1120) */
    4cfe:	95 5a       	P2 = P5 + P2;
    4d00:	30 b1       	[SP + 0x10] = R0;
    4d02:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1684(5764) */
    4d06:	52 30       	R2 = P2;
    4d08:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4d0a:	01 e1 94 16 	R1.L = 0x1694;		/* (5780)	R1=0x1694(5780) */
    4d0e:	ff e3 79 d9 	CALL 0x0 <_AddRecordToResponseList>;
    4d12:	a6 6c       	SP += 0x14;		/* ( 20) */
    4d14:	27 01       	RETS = [SP++];
    4d16:	45 30       	R0 = P5;
    4d18:	85 04       	(P5:5) = [SP++];
    4d1a:	ff e2 73 d9 	JUMP.L 0x0 <_AddRecordToResponseList>;
	...

00004d20 <_ActivateUnicastQuery>:
_ActivateUnicastQuery():
    4d20:	fb 05       	[--SP] = (R7:7, P5:3);
    4d22:	29 32       	P5 = R1;
    4d24:	18 32       	P3 = R0;
    4d26:	00 e8 06 00 	LINK 0x18;		/* (24) */
    4d2a:	3a 30       	R7 = R2;
    4d2c:	a8 a3       	R0 = [P5 + 0x38];
    4d2e:	00 0c       	CC = R0 == 0x0;
    4d30:	a7 14       	IF !CC JUMP 0x4e7e <_ActivateUnicastQuery+0x15e> (BP);
    4d32:	04 68       	P4 = 0x0 (X);		/*		P4=0x0(  0) */
    4d34:	29 e4 37 00 	R1 = [P5 + 0xdc];
    4d38:	2c e7 2c 00 	[P5 + 0xb0] = P4;
    4d3c:	01 0c       	CC = R1 == 0x0;
    4d3e:	06 18       	IF CC JUMP 0x4d4a <_ActivateUnicastQuery+0x2a>;
    4d40:	43 30       	R0 = P3;
    4d42:	ff e3 c3 ff 	CALL 0x4cc8 <_CancelGetZoneData>;
    4d46:	2c e7 37 00 	[P5 + 0xdc] = P4;
    4d4a:	28 e4 8e 00 	R0 = [P5 + 0x238];
    4d4e:	00 0c       	CC = R0 == 0x0;
    4d50:	1e 1c       	IF CC JUMP 0x4d8c <_ActivateUnicastQuery+0x6c> (BP);
    4d52:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    4d54:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x460 */
    4d58:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    4d5c:	28 e6 40 00 	[P5 + 0x100] = R0;
    4d60:	10 91       	R0 = [P2];
    4d62:	51 a0       	R1 = [P2 + 0x4];
    4d64:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    4d68:	28 e6 44 00 	[P5 + 0x110] = R0;
    4d6c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    4d70:	10 95       	R0 = W[P2] (Z);
    4d72:	68 e6 7a 00 	W[P5 + 0xf4] = R0;
    4d76:	28 e4 3e 00 	R0 = [P5 + 0xf8];
    4d7a:	29 e6 45 00 	[P5 + 0x114] = R1;
    4d7e:	00 0c       	CC = R0 == 0x0;
    4d80:	06 18       	IF CC JUMP 0x4d8c <_ActivateUnicastQuery+0x6c>;
    4d82:	ff e3 3f d9 	CALL 0x0 <_AddRecordToResponseList>;
    4d86:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4d88:	28 e6 3e 00 	[P5 + 0xf8] = R0;
    4d8c:	07 0c       	CC = R7 == 0x0;
    4d8e:	78 1c       	IF CC JUMP 0x4e7e <_ActivateUnicastQuery+0x15e> (BP);
    4d90:	2c e1 34 01 	P4 = 0x134 (X);		/*		P4=0x134(308) */
    4d94:	25 5b       	P4 = P5 + P4;
    4d96:	44 30       	R0 = P4;
    4d98:	ff e3 34 d9 	CALL 0x0 <_AddRecordToResponseList>;
    4d9c:	2f e1 f4 10 	FP = 0x10f4 (X);		/*		FP=0x10f4(4340) */
    4da0:	41 e1 d5 20 	R1.H = 0x20d5;		/* (8405)	R1=0x20d51694(550835860) */
    4da4:	fb 5b       	FP = P3 + FP;
    4da6:	38 30       	R7 = R0;
    4da8:	01 e1 39 6b 	R1.L = 0x6b39;		/* (27449)	R1=0x20d56b39(550857529) */
    4dac:	ff e3 2a d9 	CALL 0x0 <_AddRecordToResponseList>;
    4db0:	82 c6 d0 83 	R1 = R0 >> 0x6;
    4db4:	6a a0       	R2 = [P5 + 0x4];
    4db6:	20 e1 f3 01 	R0 = 0x1f3 (X);		/*		R0=0x1f3(499) */
    4dba:	c1 40       	R1 *= R0;
    4dbc:	f4 bc       	[SP + 0xc] = P4;
    4dbe:	4f 52       	R1 = R7 - R1;
    4dc0:	47 30       	R0 = FP;
    4dc2:	ff e3 35 e9 	CALL 0x202c <_AuthGroupForName>;
    4dc6:	10 32       	P2 = R0;
    4dc8:	42 0c       	CC = P2 == 0x0;
    4dca:	44 1c       	IF CC JUMP 0x4e52 <_ActivateUnicastQuery+0x132> (BP);
    4dcc:	97 61       	R7 = 0x32 (X);		/*		R7=0x32( 50) */
    4dce:	94 ac       	P4 = [P2 + 0x8];
    4dd0:	3f 20       	JUMP.S 0x4e4e <_ActivateUnicastQuery+0x12e>;
    4dd2:	00 00       	NOP;
    4dd4:	20 e4 20 00 	R0 = [P4 + 0x80];
    4dd8:	10 0c       	CC = R0 == 0x2;
    4dda:	38 14       	IF !CC JUMP 0x4e4a <_ActivateUnicastQuery+0x12a> (BP);
    4ddc:	a0 e4 04 00 	R0 = B[P4 + 0x4] (Z);
    4de0:	38 54       	R0 = R0 & R7;
    4de2:	00 0c       	CC = R0 == 0x0;
    4de4:	33 1c       	IF CC JUMP 0x4e4a <_ActivateUnicastQuery+0x12a> (BP);
    4de6:	e0 a4       	R0 = W[P4 + 0x6] (Z);
    4de8:	08 0c       	CC = R0 == 0x1;
    4dea:	07 18       	IF CC JUMP 0x4df8 <_ActivateUnicastQuery+0xd8>;
    4dec:	e1 60       	R1 = 0x1c (X);		/*		R1=0x1c( 28) */
    4dee:	08 08       	CC = R0 == R1;
    4df0:	04 18       	IF CC JUMP 0x4df8 <_ActivateUnicastQuery+0xd8>;
    4df2:	29 60       	R1 = 0x5 (X);		/*		R1=0x5(  5) */
    4df4:	08 08       	CC = R0 == R1;
    4df6:	2a 14       	IF !CC JUMP 0x4e4a <_ActivateUnicastQuery+0x12a> (BP);
    4df8:	44 30       	R0 = P4;
    4dfa:	4d 30       	R1 = P5;
    4dfc:	ff e3 02 d9 	CALL 0x0 <_AddRecordToResponseList>;
    4e00:	00 0c       	CC = R0 == 0x0;
    4e02:	24 1c       	IF CC JUMP 0x4e4a <_ActivateUnicastQuery+0x12a> (BP);
    4e04:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    4e08:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    4e0c:	10 91       	R0 = [P2];
    4e0e:	00 0c       	CC = R0 == 0x0;
    4e10:	37 1c       	IF CC JUMP 0x4e7e <_ActivateUnicastQuery+0x15e> (BP);
    4e12:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    4e16:	ff e3 f5 d8 	CALL 0x0 <_AddRecordToResponseList>;
    4e1a:	38 30       	R7 = R0;
    4e1c:	61 a2       	R1 = [P4 + 0x24];
    4e1e:	44 30       	R0 = P4;
    4e20:	53 30       	R2 = P3;
    4e22:	21 64       	R1 += 0x4;		/* (  4) */
    4e24:	ba 65       	R2 += 0x37;		/* ( 55) */
    4e26:	20 64       	R0 += 0x4;		/* (  4) */
    4e28:	ff e3 ec d8 	CALL 0x0 <_AddRecordToResponseList>;
    4e2c:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    4e30:	95 5a       	P2 = P5 + P2;
    4e32:	70 b1       	[SP + 0x14] = R0;
    4e34:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5(  5) */
    4e38:	f2 bc       	[SP + 0xc] = P2;
    4e3a:	37 b1       	[SP + 0x10] = R7;
    4e3c:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    4e3e:	01 e1 d4 16 	R1.L = 0x16d4;		/* (5844)	R1=0x16d4(5844) */
    4e42:	55 30       	R2 = P5;
    4e44:	ff e3 de d8 	CALL 0x0 <_AddRecordToResponseList>;
    4e48:	1b 20       	JUMP.S 0x4e7e <_ActivateUnicastQuery+0x15e>;
    4e4a:	00 00       	NOP;
    4e4c:	64 91       	P4 = [P4];
    4e4e:	44 0c       	CC = P4 == 0x0;
    4e50:	c1 17       	IF !CC JUMP 0x4dd2 <_ActivateUnicastQuery+0xb2> (BP);
    4e52:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    4e56:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    4e5a:	10 91       	R0 = [P2];
    4e5c:	19 60       	R1 = 0x3 (X);		/*		R1=0x3(  3) */
    4e5e:	10 64       	R0 += 0x2;		/* (  2) */
    4e60:	ff e3 d0 d8 	CALL 0x0 <_AddRecordToResponseList>;
    4e64:	c6 6c       	SP += 0x18;		/* ( 24) */
    4e66:	77 90       	FP = [SP++];
    4e68:	19 e4 37 00 	R1 = [P3 + 0xdc];
    4e6c:	28 b1       	[P5 + 0x10] = R0;
    4e6e:	01 52       	R0 = R1 - R0;
    4e70:	e8 b0       	[P5 + 0xc] = R0;
    4e72:	27 01       	RETS = [SP++];
    4e74:	43 30       	R0 = P3;
    4e76:	4d 30       	R1 = P5;
    4e78:	bb 05       	(R7:7, P5:3) = [SP++];
    4e7a:	ff e2 a7 e8 	JUMP.L 0x1fc8 <_SetNextQueryTime>;
    4e7e:	c6 6c       	SP += 0x18;		/* ( 24) */
    4e80:	77 90       	FP = [SP++];
    4e82:	27 01       	RETS = [SP++];
    4e84:	bb 05       	(R7:7, P5:3) = [SP++];
    4e86:	10 00       	RTS;

00004e88 <_mDNSCoreRestartQueries>:
_mDNSCoreRestartQueries():
    4e88:	eb 05       	[--SP] = (R7:5, P5:3);
    4e8a:	20 32       	P4 = R0;
    4e8c:	67 01       	[--SP] = RETS;
    4e8e:	86 6f       	SP += -0x10;		/* (-16) */
    4e90:	25 e5 4e 00 	P5 = [P4 + 0x138];
    4e94:	45 0c       	CC = P5 == 0x0;
    4e96:	11 1c       	IF CC JUMP 0x4eb8 <_mDNSCoreRestartQueries+0x30> (BP);
    4e98:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    4e9c:	ff e3 b2 d8 	CALL 0x0 <_AddRecordToResponseList>;
    4ea0:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    4ea4:	95 5a       	P2 = P5 + P2;
    4ea6:	f0 b0       	[SP + 0xc] = R0;
    4ea8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3(  3) */
    4eac:	52 30       	R2 = P2;
    4eae:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4eb0:	01 e1 18 17 	R1.L = 0x1718;		/* (5912)	R1=0x1718(5912) */
    4eb4:	ff e3 a6 d8 	CALL 0x0 <_AddRecordToResponseList>;
    4eb8:	00 00       	NOP;
    4eba:	20 e4 4c 00 	R0 = [P4 + 0x130];
    4ebe:	20 e6 4e 00 	[P4 + 0x138] = R0;
    4ec2:	14 20       	JUMP.S 0x4eea <_mDNSCoreRestartQueries+0x62>;
    4ec4:	00 00       	NOP;
    4ec6:	10 91       	R0 = [P2];
    4ec8:	20 e6 4e 00 	[P4 + 0x138] = R0;
    4ecc:	50 e4 99 00 	R0 = W[P2 + 0x132] (Z);
    4ed0:	00 0c       	CC = R0 == 0x0;
    4ed2:	0c 1c       	IF CC JUMP 0x4eea <_mDNSCoreRestartQueries+0x62> (BP);
    4ed4:	10 a1       	R0 = [P2 + 0x10];
    4ed6:	00 0d       	CC = R0 <= 0x0;
    4ed8:	09 1c       	IF CC JUMP 0x4eea <_mDNSCoreRestartQueries+0x62> (BP);
    4eda:	90 a3       	R0 = [P2 + 0x38];
    4edc:	00 0c       	CC = R0 == 0x0;
    4ede:	06 14       	IF !CC JUMP 0x4eea <_mDNSCoreRestartQueries+0x62> (BP);
    4ee0:	44 30       	R0 = P4;
    4ee2:	4a 30       	R1 = P2;
    4ee4:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
    4ee6:	ff e3 1d ff 	CALL 0x4d20 <_ActivateUnicastQuery>;
    4eea:	00 00       	NOP;
    4eec:	22 e5 4e 00 	P2 = [P4 + 0x138];
    4ef0:	42 0c       	CC = P2 == 0x0;
    4ef2:	e9 17       	IF !CC JUMP 0x4ec4 <_mDNSCoreRestartQueries+0x3c> (BP);
    4ef4:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x134 */
    4ef8:	25 e5 4c 00 	P5 = [P4 + 0x130];
    4efc:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
    4f00:	16 60       	R6 = 0x2 (X);		/*		R6=0x2(  2) */
    4f02:	05 60       	R5 = 0x0 (X);		/*		R5=0x0(  0) */
    4f04:	27 e1 40 00 	R7 = 0x40 (X);		/*		R7=0x40( 64) */
    4f08:	23 20       	JUMP.S 0x4f4e <_mDNSCoreRestartQueries+0xc6>;
    4f0a:	00 00       	NOP;
    4f0c:	68 e4 99 00 	R0 = W[P5 + 0x132] (Z);
    4f10:	00 0c       	CC = R0 == 0x0;
    4f12:	1c 14       	IF !CC JUMP 0x4f4a <_mDNSCoreRestartQueries+0xc2> (BP);
    4f14:	28 a1       	R0 = [P5 + 0x10];
    4f16:	00 0d       	CC = R0 <= 0x0;
    4f18:	19 1c       	IF CC JUMP 0x4f4a <_mDNSCoreRestartQueries+0xc2> (BP);
    4f1a:	a8 a3       	R0 = [P5 + 0x38];
    4f1c:	00 0c       	CC = R0 == 0x0;
    4f1e:	16 14       	IF !CC JUMP 0x4f4a <_mDNSCoreRestartQueries+0xc2> (BP);
    4f20:	18 91       	R0 = [P3];
    4f22:	19 60       	R1 = 0x3 (X);		/*		R1=0x3(  3) */
    4f24:	10 64       	R0 += 0x2;		/* (  2) */
    4f26:	ff e3 6d d8 	CALL 0x0 <_AddRecordToResponseList>;
    4f2a:	21 e4 37 00 	R1 = [P4 + 0xdc];
    4f2e:	28 b1       	[P5 + 0x10] = R0;
    4f30:	01 52       	R0 = R1 - R0;
    4f32:	e8 b0       	[P5 + 0xc] = R0;
    4f34:	55 30       	R2 = P5;
    4f36:	3a 50       	R0 = R2 + R7;
    4f38:	2e e6 2a 00 	[P5 + 0xa8] = R6;
    4f3c:	ed b1       	[P5 + 0x1c] = R5;
    4f3e:	ff e3 f9 d8 	CALL 0x130 <_ExpireDupSuppressInfo>;
    4f42:	20 e4 37 00 	R0 = [P4 + 0xdc];
    4f46:	20 e6 3d 00 	[P4 + 0xf4] = R0;
    4f4a:	00 00       	NOP;
    4f4c:	6d 91       	P5 = [P5];
    4f4e:	45 0c       	CC = P5 == 0x0;
    4f50:	dd 17       	IF !CC JUMP 0x4f0a <_mDNSCoreRestartQueries+0x82> (BP);
    4f52:	86 6c       	SP += 0x10;		/* ( 16) */
    4f54:	27 01       	RETS = [SP++];
    4f56:	ab 05       	(R7:5, P5:3) = [SP++];
    4f58:	10 00       	RTS;
	...

00004f5c <_RestartRecordGetZoneData>:
_RestartRecordGetZoneData():
    4f5c:	fb 05       	[--SP] = (R7:7, P5:3);
    4f5e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    4f62:	18 32       	P3 = R0;
    4f64:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    4f68:	10 91       	R0 = [P2];
    4f6a:	00 e8 05 00 	LINK 0x14;		/* (20) */
    4f6e:	00 0c       	CC = R0 == 0x0;
    4f70:	08 1c       	IF CC JUMP 0x4f80 <_RestartRecordGetZoneData+0x24> (BP);
    4f72:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3(  3) */
    4f76:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    4f78:	01 e1 60 17 	R1.L = 0x1760;		/* (5984)	R1=0x1760(5984) */
    4f7c:	ff e3 42 d8 	CALL 0x0 <_AddRecordToResponseList>;
    4f80:	4f e1 00 00 	FP.H = 0x0;		/* (  0)	FP=0x10f4 */
    4f84:	47 e1 00 00 	R7.H = 0x0;		/* (  0)	R7=0x40( 64) */
    4f88:	4c e1 00 00 	P4.H = 0x0;		/* (  0)	P4=0x134 */
    4f8c:	1d e5 f2 07 	P5 = [P3 + 0x1fc8];
    4f90:	0f e1 00 00 	FP.L = 0x0;		/* (  0)	FP=0x0 <_AddRecordToResponseList> */
    4f94:	07 e1 00 00 	R7.L = 0x0;		/* (  0)	R7=0x0 <_AddRecordToResponseList>(  0) */
    4f98:	0c e1 00 00 	P4.L = 0x0;		/* (  0)	P4=0x0 <_AddRecordToResponseList> */
    4f9c:	29 20       	JUMP.S 0x4fee <_RestartRecordGetZoneData+0x92>;
    4f9e:	00 00       	NOP;
    4fa0:	e9 a1       	R1 = [P5 + 0x1c];
    4fa2:	38 91       	R0 = [FP];
    4fa4:	01 08       	CC = R1 == R0;
    4fa6:	22 14       	IF !CC JUMP 0x4fea <_RestartRecordGetZoneData+0x8e> (BP);
    4fa8:	a8 e4 46 00 	R0 = B[P5 + 0x46] (Z);
    4fac:	00 0c       	CC = R0 == 0x0;
    4fae:	1e 14       	IF !CC JUMP 0x4fea <_RestartRecordGetZoneData+0x8e> (BP);
    4fb0:	28 a2       	R0 = [P5 + 0x20];
    4fb2:	ff e3 27 d8 	CALL 0x0 <_AddRecordToResponseList>;
    4fb6:	00 0c       	CC = R0 == 0x0;
    4fb8:	19 14       	IF !CC JUMP 0x4fea <_RestartRecordGetZoneData+0x8e> (BP);
    4fba:	28 e4 39 00 	R0 = [P5 + 0xe4];
    4fbe:	41 60       	R1 = 0x8 (X);		/*		R1=0x8(  8) */
    4fc0:	08 08       	CC = R0 == R1;
    4fc2:	14 1c       	IF CC JUMP 0x4fea <_RestartRecordGetZoneData+0x8e> (BP);
    4fc4:	29 e4 3f 00 	R1 = [P5 + 0xfc];
    4fc8:	01 0c       	CC = R1 == 0x0;
    4fca:	07 18       	IF CC JUMP 0x4fd8 <_RestartRecordGetZoneData+0x7c>;
    4fcc:	20 95       	R0 = W[P4] (Z);
    4fce:	68 e6 7a 00 	W[P5 + 0xf4] = R0;
    4fd2:	43 30       	R0 = P3;
    4fd4:	ff e3 7a fe 	CALL 0x4cc8 <_CancelGetZoneData>;
    4fd8:	29 a2       	R1 = [P5 + 0x20];
    4fda:	f7 b0       	[SP + 0xc] = R7;
    4fdc:	35 bd       	[SP + 0x10] = P5;
    4fde:	43 30       	R0 = P3;
    4fe0:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    4fe2:	ff e3 0f d8 	CALL 0x0 <_AddRecordToResponseList>;
    4fe6:	28 e6 3f 00 	[P5 + 0xfc] = R0;
    4fea:	00 00       	NOP;
    4fec:	6d 91       	P5 = [P5];
    4fee:	45 0c       	CC = P5 == 0x0;
    4ff0:	d7 17       	IF !CC JUMP 0x4f9e <_RestartRecordGetZoneData+0x42> (BP);
    4ff2:	a6 6c       	SP += 0x14;		/* ( 20) */
    4ff4:	77 90       	FP = [SP++];
    4ff6:	27 01       	RETS = [SP++];
    4ff8:	bb 05       	(R7:7, P5:3) = [SP++];
    4ffa:	10 00       	RTS;

00004ffc <_mDNS_Deregister_internal>:
_mDNS_Deregister_internal():
    4ffc:	eb 05       	[--SP] = (R7:5, P5:3);
    4ffe:	29 32       	P5 = R1;
    5000:	20 32       	P4 = R0;
    5002:	00 e8 05 00 	LINK 0x14;		/* (20) */
    5006:	32 30       	R6 = R2;
    5008:	28 e4 20 00 	R0 = [P5 + 0x80];
    500c:	f0 67       	R0 += -0x2;		/* ( -2) */
    500e:	ad e5 04 00 	R5 = B[P5 + 0x4] (X);
    5012:	08 0e       	CC = R0 <= 0x1 (IU);
    5014:	05 18       	IF CC JUMP 0x501e <_mDNS_Deregister_internal+0x22>;
    5016:	2f e1 c8 1f 	FP = 0x1fc8 (X);		/*		FP=0x1fc8 <_SetNextQueryTime>(8136) */
    501a:	fc 5b       	FP = P4 + FP;
    501c:	29 20       	JUMP.S 0x506e <_mDNS_Deregister_internal+0x72>;
    501e:	28 a2       	R0 = [P5 + 0x20];
    5020:	ff e3 f0 d7 	CALL 0x0 <_AddRecordToResponseList>;
    5024:	41 e1 d5 20 	R1.H = 0x20d5;		/* (8405)	R1=0x20d50008(550830088) */
    5028:	38 30       	R7 = R0;
    502a:	01 e1 39 6b 	R1.L = 0x6b39;		/* (27449)	R1=0x20d56b39(550857529) */
    502e:	ff e3 e9 d7 	CALL 0x0 <_AddRecordToResponseList>;
    5032:	82 c6 d0 83 	R1 = R0 >> 0x6;
    5036:	20 e1 f3 01 	R0 = 0x1f3 (X);		/*		R0=0x1f3(499) */
    503a:	c1 40       	R1 *= R0;
    503c:	2b e1 f4 10 	P3 = 0x10f4 (X);		/*		P3=0x10f4(4340) */
    5040:	dc 5a       	P3 = P4 + P3;
    5042:	55 30       	R2 = P5;
    5044:	4f 52       	R1 = R7 - R1;
    5046:	22 64       	R2 += 0x4;		/* (  4) */
    5048:	43 30       	R0 = P3;
    504a:	ff e3 0f e8 	CALL 0x2068 <_AuthGroupForRecord>;
    504e:	10 32       	P2 = R0;
    5050:	42 0c       	CC = P2 == 0x0;
    5052:	02 14       	IF !CC JUMP 0x5056 <_mDNS_Deregister_internal+0x5a> (BP);
    5054:	f1 22       	JUMP.S 0x5636 <_mDNS_Deregister_internal+0x63a>;
    5056:	38 32       	FP = R0;
    5058:	92 ac       	P2 = [P2 + 0x8];
    505a:	47 6c       	FP += 0x8;		/* (  8) */
    505c:	03 20       	JUMP.S 0x5062 <_mDNS_Deregister_internal+0x66>;
    505e:	7a 32       	FP = P2;
    5060:	52 91       	P2 = [P2];
    5062:	42 0c       	CC = P2 == 0x0;
    5064:	0b 18       	IF CC JUMP 0x507a <_mDNS_Deregister_internal+0x7e>;
    5066:	6a 08       	CC = P2 == P5;
    5068:	fb 17       	IF !CC JUMP 0x505e <_mDNS_Deregister_internal+0x62> (BP);
    506a:	08 20       	JUMP.S 0x507a <_mDNS_Deregister_internal+0x7e>;
    506c:	38 32       	FP = R0;
    506e:	38 91       	R0 = [FP];
    5070:	00 0c       	CC = R0 == 0x0;
    5072:	04 18       	IF CC JUMP 0x507a <_mDNS_Deregister_internal+0x7e>;
    5074:	4d 30       	R1 = P5;
    5076:	08 08       	CC = R0 == R1;
    5078:	fa 17       	IF !CC JUMP 0x506c <_mDNS_Deregister_internal+0x70> (BP);
    507a:	38 91       	R0 = [FP];
    507c:	00 0c       	CC = R0 == 0x0;
    507e:	0c 19       	IF CC JUMP 0x5296 <_mDNS_Deregister_internal+0x29a>;
    5080:	16 0c       	CC = R6 == 0x2;
    5082:	48 14       	IF !CC JUMP 0x5112 <_mDNS_Deregister_internal+0x116> (BP);
    5084:	23 e5 f3 07 	P3 = [P4 + 0x1fcc];
    5088:	ff 63       	R7 = -0x1 (X);		/*		R7=0xffffffff( -1) */
    508a:	41 20       	JUMP.S 0x510c <_mDNS_Deregister_internal+0x110>;
    508c:	00 00       	NOP;
    508e:	d9 a1       	R1 = [P3 + 0x1c];
    5090:	e8 a1       	R0 = [P5 + 0x1c];
    5092:	01 08       	CC = R1 == R0;
    5094:	3a 14       	IF !CC JUMP 0x5108 <_mDNS_Deregister_internal+0x10c> (BP);
    5096:	9a e5 04 00 	R2 = B[P3 + 0x4] (X);
    509a:	ab e5 04 00 	R3 = B[P5 + 0x4] (X);
    509e:	51 43       	R1 = R2.B (Z);
    50a0:	58 43       	R0 = R3.B (Z);
    50a2:	01 08       	CC = R1 == R0;
    50a4:	0a 18       	IF CC JUMP 0x50b8 <_mDNS_Deregister_internal+0xbc>;
    50a6:	93 56       	R2 = R3 | R2;
    50a8:	52 43       	R2 = R2.B (Z);
    50aa:	93 60       	R3 = 0x12 (X);		/*		R3=0x12( 18) */
    50ac:	1a 08       	CC = R2 == R3;
    50ae:	05 18       	IF CC JUMP 0x50b8 <_mDNS_Deregister_internal+0xbc>;
    50b0:	09 0c       	CC = R1 == 0x1;
    50b2:	03 18       	IF CC JUMP 0x50b8 <_mDNS_Deregister_internal+0xbc>;
    50b4:	08 0c       	CC = R0 == 0x1;
    50b6:	29 14       	IF !CC JUMP 0x5108 <_mDNS_Deregister_internal+0x10c> (BP);
    50b8:	d9 a4       	R1 = W[P3 + 0x6] (Z);
    50ba:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    50bc:	01 08       	CC = R1 == R0;
    50be:	25 14       	IF !CC JUMP 0x5108 <_mDNS_Deregister_internal+0x10c> (BP);
    50c0:	19 a5       	R1 = W[P3 + 0x8] (Z);
    50c2:	28 a5       	R0 = W[P5 + 0x8] (Z);
    50c4:	01 08       	CC = R1 == R0;
    50c6:	21 14       	IF !CC JUMP 0x5108 <_mDNS_Deregister_internal+0x10c> (BP);
    50c8:	59 a1       	R1 = [P3 + 0x14];
    50ca:	68 a1       	R0 = [P5 + 0x14];
    50cc:	01 08       	CC = R1 == R0;
    50ce:	1d 14       	IF !CC JUMP 0x5108 <_mDNS_Deregister_internal+0x10c> (BP);
    50d0:	19 a6       	R1 = W[P3 + 0x10] (Z);
    50d2:	28 a6       	R0 = W[P5 + 0x10] (Z);
    50d4:	01 08       	CC = R1 == R0;
    50d6:	19 14       	IF !CC JUMP 0x5108 <_mDNS_Deregister_internal+0x10c> (BP);
    50d8:	99 a1       	R1 = [P3 + 0x18];
    50da:	a8 a1       	R0 = [P5 + 0x18];
    50dc:	01 08       	CC = R1 == R0;
    50de:	15 14       	IF !CC JUMP 0x5108 <_mDNS_Deregister_internal+0x10c> (BP);
    50e0:	69 a2       	R1 = [P5 + 0x24];
    50e2:	43 30       	R0 = P3;
    50e4:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    50e8:	20 64       	R0 += 0x4;		/* (  4) */
    50ea:	21 64       	R1 += 0x4;		/* (  4) */
    50ec:	02 e1 00 00 	R2.L = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    50f0:	ff e3 88 d7 	CALL 0x0 <_AddRecordToResponseList>;
    50f4:	00 0c       	CC = R0 == 0x0;
    50f6:	09 1c       	IF CC JUMP 0x5108 <_mDNS_Deregister_internal+0x10c> (BP);
    50f8:	18 a2       	R0 = [P3 + 0x20];
    50fa:	29 a2       	R1 = [P5 + 0x20];
    50fc:	ff e3 82 d7 	CALL 0x0 <_AddRecordToResponseList>;
    5100:	00 0c       	CC = R0 == 0x0;
    5102:	03 1c       	IF CC JUMP 0x5108 <_mDNS_Deregister_internal+0x10c> (BP);
    5104:	9f e6 85 00 	B[P3 + 0x85] = R7;
    5108:	00 00       	NOP;
    510a:	5b 91       	P3 = [P3];
    510c:	43 0c       	CC = P3 == 0x0;
    510e:	bf 17       	IF !CC JUMP 0x508c <_mDNS_Deregister_internal+0x90> (BP);
    5110:	d4 20       	JUMP.S 0x52b8 <_mDNS_Deregister_internal+0x2bc>;
    5112:	2a e1 cc 1f 	P2 = 0x1fcc (X);		/*		P2=0x1fcc(8140) */
    5116:	94 5a       	P2 = P4 + P2;
    5118:	7a 30       	R7 = P2;
    511a:	03 20       	JUMP.S 0x5120 <_mDNS_Deregister_internal+0x124>;
    511c:	0f 32       	P1 = R7;
    511e:	0f 91       	R7 = [P1];
    5120:	0f 32       	P1 = R7;
    5122:	4a 91       	P2 = [P1];
    5124:	42 0c       	CC = P2 == 0x0;
    5126:	3e 1c       	IF CC JUMP 0x51a2 <_mDNS_Deregister_internal+0x1a6> (BP);
    5128:	d1 a1       	R1 = [P2 + 0x1c];
    512a:	e8 a1       	R0 = [P5 + 0x1c];
    512c:	01 08       	CC = R1 == R0;
    512e:	f7 17       	IF !CC JUMP 0x511c <_mDNS_Deregister_internal+0x120> (BP);
    5130:	92 e5 04 00 	R2 = B[P2 + 0x4] (X);
    5134:	ab e5 04 00 	R3 = B[P5 + 0x4] (X);
    5138:	51 43       	R1 = R2.B (Z);
    513a:	58 43       	R0 = R3.B (Z);
    513c:	01 08       	CC = R1 == R0;
    513e:	0a 18       	IF CC JUMP 0x5152 <_mDNS_Deregister_internal+0x156>;
    5140:	93 56       	R2 = R3 | R2;
    5142:	52 43       	R2 = R2.B (Z);
    5144:	93 60       	R3 = 0x12 (X);		/*		R3=0x12( 18) */
    5146:	1a 08       	CC = R2 == R3;
    5148:	05 18       	IF CC JUMP 0x5152 <_mDNS_Deregister_internal+0x156>;
    514a:	09 0c       	CC = R1 == 0x1;
    514c:	03 18       	IF CC JUMP 0x5152 <_mDNS_Deregister_internal+0x156>;
    514e:	08 0c       	CC = R0 == 0x1;
    5150:	e6 17       	IF !CC JUMP 0x511c <_mDNS_Deregister_internal+0x120> (BP);
    5152:	d1 a4       	R1 = W[P2 + 0x6] (Z);
    5154:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    5156:	01 08       	CC = R1 == R0;
    5158:	e2 17       	IF !CC JUMP 0x511c <_mDNS_Deregister_internal+0x120> (BP);
    515a:	11 a5       	R1 = W[P2 + 0x8] (Z);
    515c:	28 a5       	R0 = W[P5 + 0x8] (Z);
    515e:	01 08       	CC = R1 == R0;
    5160:	de 17       	IF !CC JUMP 0x511c <_mDNS_Deregister_internal+0x120> (BP);
    5162:	51 a1       	R1 = [P2 + 0x14];
    5164:	68 a1       	R0 = [P5 + 0x14];
    5166:	01 08       	CC = R1 == R0;
    5168:	da 17       	IF !CC JUMP 0x511c <_mDNS_Deregister_internal+0x120> (BP);
    516a:	11 a6       	R1 = W[P2 + 0x10] (Z);
    516c:	28 a6       	R0 = W[P5 + 0x10] (Z);
    516e:	01 08       	CC = R1 == R0;
    5170:	d6 17       	IF !CC JUMP 0x511c <_mDNS_Deregister_internal+0x120> (BP);
    5172:	91 a1       	R1 = [P2 + 0x18];
    5174:	a8 a1       	R0 = [P5 + 0x18];
    5176:	01 08       	CC = R1 == R0;
    5178:	d2 17       	IF !CC JUMP 0x511c <_mDNS_Deregister_internal+0x120> (BP);
    517a:	42 30       	R0 = P2;
    517c:	69 a2       	R1 = [P5 + 0x24];
    517e:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    5182:	20 64       	R0 += 0x4;		/* (  4) */
    5184:	21 64       	R1 += 0x4;		/* (  4) */
    5186:	02 e1 00 00 	R2.L = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    518a:	ff e3 3b d7 	CALL 0x0 <_AddRecordToResponseList>;
    518e:	00 0c       	CC = R0 == 0x0;
    5190:	c6 1f       	IF CC JUMP 0x511c <_mDNS_Deregister_internal+0x120> (BP);
    5192:	0f 32       	P1 = R7;
    5194:	29 a2       	R1 = [P5 + 0x20];
    5196:	4a 91       	P2 = [P1];
    5198:	10 a2       	R0 = [P2 + 0x20];
    519a:	ff e3 33 d7 	CALL 0x0 <_AddRecordToResponseList>;
    519e:	00 0c       	CC = R0 == 0x0;
    51a0:	be 1f       	IF CC JUMP 0x511c <_mDNS_Deregister_internal+0x120> (BP);
    51a2:	17 32       	P2 = R7;
    51a4:	53 91       	P3 = [P2];
    51a6:	43 0c       	CC = P3 == 0x0;
    51a8:	88 1c       	IF CC JUMP 0x52b8 <_mDNS_Deregister_internal+0x2bc> (BP);
    51aa:	18 91       	R0 = [P3];
    51ac:	10 93       	[P2] = R0;
    51ae:	28 e4 20 00 	R0 = [P5 + 0x80];
    51b2:	f0 67       	R0 += -0x2;		/* ( -2) */
    51b4:	08 0e       	CC = R0 <= 0x1 (IU);
    51b6:	1e 14       	IF !CC JUMP 0x51f2 <_mDNS_Deregister_internal+0x1f6> (BP);
    51b8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    51ba:	2a e1 f4 10 	P2 = 0x10f4 (X);		/*		P2=0x10f4(4340) */
    51be:	18 93       	[P3] = R0;
    51c0:	94 5a       	P2 = P4 + P2;
    51c2:	4a 30       	R1 = P2;
    51c4:	44 30       	R0 = P4;
    51c6:	53 30       	R2 = P3;
    51c8:	ff e3 5c e7 	CALL 0x2080 <_InsertAuthRecord>;
    51cc:	00 0c       	CC = R0 == 0x0;
    51ce:	16 14       	IF !CC JUMP 0x51fa <_mDNS_Deregister_internal+0x1fe> (BP);
    51d0:	59 a2       	R1 = [P3 + 0x24];
    51d2:	43 30       	R0 = P3;
    51d4:	54 30       	R2 = P4;
    51d6:	21 64       	R1 += 0x4;		/* (  4) */
    51d8:	ba 65       	R2 += 0x37;		/* ( 55) */
    51da:	20 64       	R0 += 0x4;		/* (  4) */
    51dc:	ff e3 12 d7 	CALL 0x0 <_AddRecordToResponseList>;
    51e0:	10 30       	R2 = R0;
    51e2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x6b39(27449) */
    51e6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    51e8:	01 e1 8c 17 	R1.L = 0x178c;		/* (6028)	R1=0x178c(6028) */
    51ec:	ff e3 0a d7 	CALL 0x0 <_AddRecordToResponseList>;
    51f0:	05 20       	JUMP.S 0x51fa <_mDNS_Deregister_internal+0x1fe>;
    51f2:	00 00       	NOP;
    51f4:	28 91       	R0 = [P5];
    51f6:	18 93       	[P3] = R0;
    51f8:	6b 93       	[P5] = P3;
    51fa:	2a e1 a0 00 	P2 = 0xa0 (X);		/*		P2=0xa0(160) */
    51fe:	a8 e5 04 00 	R0 = B[P5 + 0x4] (X);
    5202:	98 e6 04 00 	B[P3 + 0x4] = R0;
    5206:	a8 e5 85 00 	R0 = B[P5 + 0x85] (X);
    520a:	98 e6 85 00 	B[P3 + 0x85] = R0;
    520e:	a8 e5 86 00 	R0 = B[P5 + 0x86] (X);
    5212:	98 e6 86 00 	B[P3 + 0x86] = R0;
    5216:	a8 e5 87 00 	R0 = B[P5 + 0x87] (X);
    521a:	98 e6 87 00 	B[P3 + 0x87] = R0;
    521e:	a8 e5 88 00 	R0 = B[P5 + 0x88] (X);
    5222:	98 e6 88 00 	B[P3 + 0x88] = R0;
    5226:	28 e4 24 00 	R0 = [P5 + 0x90];
    522a:	18 e6 24 00 	[P3 + 0x90] = R0;
    522e:	a8 e5 8a 00 	R0 = B[P5 + 0x8a] (X);
    5232:	98 e6 8a 00 	B[P3 + 0x8a] = R0;
    5236:	28 e4 25 00 	R0 = [P5 + 0x94];
    523a:	18 e6 25 00 	[P3 + 0x94] = R0;
    523e:	28 e4 27 00 	R0 = [P5 + 0x9c];
    5242:	55 5a       	P1 = P5 + P2;
    5244:	18 e6 27 00 	[P3 + 0x9c] = R0;
    5248:	08 90       	R0 = [P1++];
    524a:	93 5a       	P2 = P3 + P2;
    524c:	10 92       	[P2++] = R0;
    524e:	08 90       	R0 = [P1++];
    5250:	10 92       	[P2++] = R0;
    5252:	08 90       	R0 = [P1++];
    5254:	10 92       	[P2++] = R0;
    5256:	08 91       	R0 = [P1];
    5258:	10 93       	[P2] = R0;
    525a:	28 e4 2f 00 	R0 = [P5 + 0xbc];
    525e:	18 e6 2f 00 	[P3 + 0xbc] = R0;
    5262:	28 e4 30 00 	R0 = [P5 + 0xc0];
    5266:	18 e6 30 00 	[P3 + 0xc0] = R0;
    526a:	28 e4 31 00 	R0 = [P5 + 0xc4];
    526e:	18 e6 31 00 	[P3 + 0xc4] = R0;
    5272:	28 e4 32 00 	R0 = [P5 + 0xc8];
    5276:	18 e6 32 00 	[P3 + 0xc8] = R0;
    527a:	28 e4 3c 00 	R0 = [P5 + 0xf0];
    527e:	18 e6 3c 00 	[P3 + 0xf0] = R0;
    5282:	28 e4 39 00 	R0 = [P5 + 0xe4];
    5286:	18 e6 39 00 	[P3 + 0xe4] = R0;
    528a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    528c:	a8 e6 87 00 	B[P5 + 0x87] = R0;
    5290:	a8 e6 88 00 	B[P5 + 0x88] = R0;
    5294:	12 20       	JUMP.S 0x52b8 <_mDNS_Deregister_internal+0x2bc>;
    5296:	2f e1 cc 1f 	FP = 0x1fcc (X);		/*		FP=0x1fcc(8140) */
    529a:	fc 5b       	FP = P4 + FP;
    529c:	22 e5 f3 07 	P2 = [P4 + 0x1fcc];
    52a0:	03 20       	JUMP.S 0x52a6 <_mDNS_Deregister_internal+0x2aa>;
    52a2:	7a 32       	FP = P2;
    52a4:	52 91       	P2 = [P2];
    52a6:	42 0c       	CC = P2 == 0x0;
    52a8:	08 18       	IF CC JUMP 0x52b8 <_mDNS_Deregister_internal+0x2bc>;
    52aa:	6a 08       	CC = P2 == P5;
    52ac:	fb 17       	IF !CC JUMP 0x52a2 <_mDNS_Deregister_internal+0x2a6> (BP);
    52ae:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    52b0:	a8 e6 87 00 	B[P5 + 0x87] = R0;
    52b4:	0f 60       	R7 = 0x1 (X);		/*		R7=0x1(  1) */
    52b6:	02 20       	JUMP.S 0x52ba <_mDNS_Deregister_internal+0x2be>;
    52b8:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    52ba:	38 91       	R0 = [FP];
    52bc:	00 0c       	CC = R0 == 0x0;
    52be:	15 14       	IF !CC JUMP 0x52e8 <_mDNS_Deregister_internal+0x2ec> (BP);
    52c0:	1e 0c       	CC = R6 == 0x3;
    52c2:	bc 1d       	IF CC JUMP 0x563a <_mDNS_Deregister_internal+0x63e> (BP);
    52c4:	69 a2       	R1 = [P5 + 0x24];
    52c6:	45 30       	R0 = P5;
    52c8:	54 30       	R2 = P4;
    52ca:	21 64       	R1 += 0x4;		/* (  4) */
    52cc:	ba 65       	R2 += 0x37;		/* ( 55) */
    52ce:	20 64       	R0 += 0x4;		/* (  4) */
    52d0:	ff e3 98 d6 	CALL 0x0 <_AddRecordToResponseList>;
    52d4:	f0 b0       	[SP + 0xc] = R0;
    52d6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x178c(6028) */
    52da:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    52dc:	01 e1 c0 17 	R1.L = 0x17c0;		/* (6080)	R1=0x17c0(6080) */
    52e0:	55 30       	R2 = P5;
    52e2:	ff e3 8f d6 	CALL 0x0 <_AddRecordToResponseList>;
    52e6:	aa 21       	JUMP.S 0x563a <_mDNS_Deregister_internal+0x63e>;
    52e8:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0xa0 */
    52ec:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    52f0:	e9 a1       	R1 = [P5 + 0x1c];
    52f2:	10 91       	R0 = [P2];
    52f4:	01 08       	CC = R1 == R0;
    52f6:	49 14       	IF !CC JUMP 0x5388 <_mDNS_Deregister_internal+0x38c> (BP);
    52f8:	a8 e4 46 00 	R0 = B[P5 + 0x46] (Z);
    52fc:	00 0c       	CC = R0 == 0x0;
    52fe:	45 14       	IF !CC JUMP 0x5388 <_mDNS_Deregister_internal+0x38c> (BP);
    5300:	28 a2       	R0 = [P5 + 0x20];
    5302:	ff e3 7f d6 	CALL 0x0 <_AddRecordToResponseList>;
    5306:	00 0c       	CC = R0 == 0x0;
    5308:	40 14       	IF !CC JUMP 0x5388 <_mDNS_Deregister_internal+0x38c> (BP);
    530a:	a8 e4 87 00 	R0 = B[P5 + 0x87] (Z);
    530e:	00 0c       	CC = R0 == 0x0;
    5310:	14 1c       	IF CC JUMP 0x5338 <_mDNS_Deregister_internal+0x33c> (BP);
    5312:	28 e4 40 00 	R0 = [P5 + 0x100];
    5316:	00 0c       	CC = R0 == 0x0;
    5318:	06 18       	IF CC JUMP 0x5324 <_mDNS_Deregister_internal+0x328>;
    531a:	ff e3 73 d6 	CALL 0x0 <_AddRecordToResponseList>;
    531e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5320:	28 e6 40 00 	[P5 + 0x100] = R0;
    5324:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    5326:	a8 e6 04 00 	B[P5 + 0x4] = R0;
    532a:	a0 e6 14 01 	B[P4 + 0x114] = R0;
    532e:	44 30       	R0 = P4;
    5330:	4d 30       	R1 = P5;
    5332:	ff e3 67 d6 	CALL 0x0 <_AddRecordToResponseList>;
    5336:	80 21       	JUMP.S 0x5636 <_mDNS_Deregister_internal+0x63a>;
    5338:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    533c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    5340:	10 95       	R0 = W[P2] (Z);
    5342:	68 e6 7a 00 	W[P5 + 0xf4] = R0;
    5346:	28 e4 4f 00 	R0 = [P5 + 0x13c];
    534a:	00 0c       	CC = R0 == 0x0;
    534c:	0b 18       	IF CC JUMP 0x5362 <_mDNS_Deregister_internal+0x366>;
    534e:	2a e1 04 01 	P2 = 0x104 (X);		/*		P2=0x104(260) */
    5352:	95 5a       	P2 = P5 + P2;
    5354:	4a 30       	R1 = P2;
    5356:	44 30       	R0 = P4;
    5358:	ff e3 54 d6 	CALL 0x0 <_AddRecordToResponseList>;
    535c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    535e:	28 e6 4f 00 	[P5 + 0x13c] = R0;
    5362:	29 e4 3f 00 	R1 = [P5 + 0xfc];
    5366:	01 0c       	CC = R1 == 0x0;
    5368:	07 18       	IF CC JUMP 0x5376 <_mDNS_Deregister_internal+0x37a>;
    536a:	44 30       	R0 = P4;
    536c:	ff e3 ae fc 	CALL 0x4cc8 <_CancelGetZoneData>;
    5370:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5372:	28 e6 3f 00 	[P5 + 0xfc] = R0;
    5376:	28 e4 40 00 	R0 = [P5 + 0x100];
    537a:	00 0c       	CC = R0 == 0x0;
    537c:	06 18       	IF CC JUMP 0x5388 <_mDNS_Deregister_internal+0x38c>;
    537e:	ff e3 41 d6 	CALL 0x0 <_AddRecordToResponseList>;
    5382:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5384:	28 e6 40 00 	[P5 + 0x100] = R0;
    5388:	68 43       	R0 = R5.B (Z);
    538a:	00 0c       	CC = R0 == 0x0;
    538c:	12 14       	IF !CC JUMP 0x53b0 <_mDNS_Deregister_internal+0x3b4> (BP);
    538e:	69 a2       	R1 = [P5 + 0x24];
    5390:	45 30       	R0 = P5;
    5392:	54 30       	R2 = P4;
    5394:	21 64       	R1 += 0x4;		/* (  4) */
    5396:	ba 65       	R2 += 0x37;		/* ( 55) */
    5398:	20 64       	R0 += 0x4;		/* (  4) */
    539a:	ff e3 33 d6 	CALL 0x0 <_AddRecordToResponseList>;
    539e:	10 30       	R2 = R0;
    53a0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x17c0(6080) */
    53a4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    53a6:	01 e1 fc 17 	R1.L = 0x17fc;		/* (6140)	R1=0x17fc(6140) */
    53aa:	ff e3 2b d6 	CALL 0x0 <_AddRecordToResponseList>;
    53ae:	14 20       	JUMP.S 0x53d6 <_mDNS_Deregister_internal+0x3da>;
    53b0:	08 0c       	CC = R0 == 0x1;
    53b2:	12 14       	IF !CC JUMP 0x53d6 <_mDNS_Deregister_internal+0x3da> (BP);
    53b4:	69 a2       	R1 = [P5 + 0x24];
    53b6:	45 30       	R0 = P5;
    53b8:	54 30       	R2 = P4;
    53ba:	21 64       	R1 += 0x4;		/* (  4) */
    53bc:	ba 65       	R2 += 0x37;		/* ( 55) */
    53be:	20 64       	R0 += 0x4;		/* (  4) */
    53c0:	ff e3 20 d6 	CALL 0x0 <_AddRecordToResponseList>;
    53c4:	10 30       	R2 = R0;
    53c6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x17fc(6140) */
    53ca:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    53cc:	01 e1 44 18 	R1.L = 0x1844;		/* (6212)	R1=0x1844(6212) */
    53d0:	ff e3 18 d6 	CALL 0x0 <_AddRecordToResponseList>;
    53d4:	33 21       	JUMP.S 0x563a <_mDNS_Deregister_internal+0x63e>;
    53d6:	00 00       	NOP;
    53d8:	29 e4 13 00 	R1 = [P5 + 0x4c];
    53dc:	01 0c       	CC = R1 == 0x0;
    53de:	0d 14       	IF !CC JUMP 0x53f8 <_mDNS_Deregister_internal+0x3fc> (BP);
    53e0:	6d 43       	R5 = R5.B (Z);
    53e2:	40 60       	R0 = 0x8 (X);		/*		R0=0x8(  8) */
    53e4:	05 08       	CC = R5 == R0;
    53e6:	3a 14       	IF !CC JUMP 0x545a <_mDNS_Deregister_internal+0x45e> (BP);
    53e8:	a8 e4 87 00 	R0 = B[P5 + 0x87] (Z);
    53ec:	00 0c       	CC = R0 == 0x0;
    53ee:	05 14       	IF !CC JUMP 0x53f8 <_mDNS_Deregister_internal+0x3fc> (BP);
    53f0:	a8 e4 88 00 	R0 = B[P5 + 0x88] (Z);
    53f4:	00 0c       	CC = R0 == 0x0;
    53f6:	32 1c       	IF CC JUMP 0x545a <_mDNS_Deregister_internal+0x45e> (BP);
    53f8:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    53fa:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    53fc:	a8 e6 04 00 	B[P5 + 0x4] = R0;
    5400:	ea b0       	[P5 + 0xc] = R2;
    5402:	01 0c       	CC = R1 == 0x0;
    5404:	05 14       	IF !CC JUMP 0x540e <_mDNS_Deregister_internal+0x412> (BP);
    5406:	0e 0c       	CC = R6 == 0x1;
    5408:	19 60       	R1 = 0x3 (X);		/*		R1=0x3(  3) */
    540a:	01 06       	IF !CC R0 = R1;
    540c:	02 20       	JUMP.S 0x5410 <_mDNS_Deregister_internal+0x414>;
    540e:	90 60       	R0 = 0x12 (X);		/*		R0=0x12( 18) */
    5410:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x104 */
    5414:	a8 e6 86 00 	B[P5 + 0x86] = R0;
    5418:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    541c:	16 91       	R6 = [P2];
    541e:	82 c6 0e 80 	R0 = R6 << 0x1;
    5422:	28 e6 2f 00 	[P5 + 0xbc] = R0;
    5426:	27 e4 37 00 	R7 = [P4 + 0xdc];
    542a:	07 52       	R0 = R7 - R0;
    542c:	28 e6 30 00 	[P5 + 0xc0] = R0;
    5430:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    5432:	a0 e6 14 01 	B[P4 + 0x114] = R0;
    5436:	b1 63       	R1 = -0xa (X);		/*		R1=0xfffffff6(-10) */
    5438:	06 30       	R0 = R6;
    543a:	ff e3 e3 d5 	CALL 0x0 <_AddRecordToResponseList>;
    543e:	38 52       	R0 = R0 - R7;
    5440:	21 e4 3f 00 	R1 = [P4 + 0xfc];
    5444:	08 50       	R0 = R0 + R1;
    5446:	80 0c       	CC = R0 < 0x0;
    5448:	f4 18       	IF CC JUMP 0x5630 <_mDNS_Deregister_internal+0x634>;
    544a:	06 30       	R0 = R6;
    544c:	51 60       	R1 = 0xa (X);		/*		R1=0xa( 10) */
    544e:	ff e3 d9 d5 	CALL 0x0 <_AddRecordToResponseList>;
    5452:	f8 51       	R7 = R0 + R7;
    5454:	27 e6 3f 00 	[P4 + 0xfc] = R7;
    5458:	ec 20       	JUMP.S 0x5630 <_mDNS_Deregister_internal+0x634>;
    545a:	07 0c       	CC = R7 == 0x0;
    545c:	15 14       	IF !CC JUMP 0x5486 <_mDNS_Deregister_internal+0x48a> (BP);
    545e:	28 e4 20 00 	R0 = [P5 + 0x80];
    5462:	f0 67       	R0 += -0x2;		/* ( -2) */
    5464:	08 0e       	CC = R0 <= 0x1 (IU);
    5466:	10 14       	IF !CC JUMP 0x5486 <_mDNS_Deregister_internal+0x48a> (BP);
    5468:	2a e1 f4 10 	P2 = 0x10f4 (X);		/*		P2=0x10f4(4340) */
    546c:	94 5a       	P2 = P4 + P2;
    546e:	4a 30       	R1 = P2;
    5470:	44 30       	R0 = P4;
    5472:	55 30       	R2 = P5;
    5474:	ff e3 5e e7 	CALL 0x2330 <_RemoveAuthRecord>;
    5478:	10 32       	P2 = R0;
    547a:	51 ad       	P1 = [P2 + 0x14];
    547c:	69 08       	CC = P1 == P5;
    547e:	0e 14       	IF !CC JUMP 0x549a <_mDNS_Deregister_internal+0x49e> (BP);
    5480:	08 91       	R0 = [P1];
    5482:	50 b1       	[P2 + 0x14] = R0;
    5484:	0b 20       	JUMP.S 0x549a <_mDNS_Deregister_internal+0x49e>;
    5486:	00 00       	NOP;
    5488:	28 91       	R0 = [P5];
    548a:	38 93       	[FP] = R0;
    548c:	22 e5 f4 07 	P2 = [P4 + 0x1fd0];
    5490:	6a 08       	CC = P2 == P5;
    5492:	04 14       	IF !CC JUMP 0x549a <_mDNS_Deregister_internal+0x49e> (BP);
    5494:	10 91       	R0 = [P2];
    5496:	20 e6 f4 07 	[P4 + 0x1fd0] = R0;
    549a:	00 00       	NOP;
    549c:	22 e5 f5 07 	P2 = [P4 + 0x1fd4];
    54a0:	6a 08       	CC = P2 == P5;
    54a2:	04 14       	IF !CC JUMP 0x54aa <_mDNS_Deregister_internal+0x4ae> (BP);
    54a4:	10 91       	R0 = [P2];
    54a6:	20 e6 f5 07 	[P4 + 0x1fd4] = R0;
    54aa:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    54ac:	28 93       	[P5] = R0;
    54ae:	a8 e6 04 00 	B[P5 + 0x4] = R0;
    54b2:	28 e4 33 00 	R0 = [P5 + 0xcc];
    54b6:	00 0c       	CC = R0 == 0x0;
    54b8:	05 18       	IF CC JUMP 0x54c2 <_mDNS_Deregister_internal+0x4c6>;
    54ba:	44 30       	R0 = P4;
    54bc:	4d 30       	R1 = P5;
    54be:	ff e3 25 db 	CALL 0xb08 <_CompleteRDataUpdate>;
    54c2:	16 0c       	CC = R6 == 0x2;
    54c4:	4a 1c       	IF CC JUMP 0x5558 <_mDNS_Deregister_internal+0x55c> (BP);
    54c6:	20 a3       	R0 = [P4 + 0x30];
    54c8:	08 64       	R0 += 0x1;		/* (  1) */
    54ca:	e1 a2       	R1 = [P4 + 0x2c];
    54cc:	20 b3       	[P4 + 0x30] = R0;
    54ce:	01 08       	CC = R1 == R0;
    54d0:	0e 18       	IF CC JUMP 0x54ec <_mDNS_Deregister_internal+0x4f0>;
    54d2:	f1 b0       	[SP + 0xc] = R1;
    54d4:	30 b1       	[SP + 0x10] = R0;
    54d6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xa( 10) */
    54da:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    54de:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    54e0:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    54e4:	02 e1 f8 04 	R2.L = 0x4f8;		/* (1272)	R2=0x4f8(1272) */
    54e8:	ff e3 8c d5 	CALL 0x0 <_AddRecordToResponseList>;
    54ec:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x10f4 */
    54f0:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    54f4:	10 91       	R0 = [P2];
    54f6:	00 0c       	CC = R0 == 0x0;
    54f8:	11 1c       	IF CC JUMP 0x551a <_mDNS_Deregister_internal+0x51e> (BP);
    54fa:	69 a2       	R1 = [P5 + 0x24];
    54fc:	45 30       	R0 = P5;
    54fe:	54 30       	R2 = P4;
    5500:	21 64       	R1 += 0x4;		/* (  4) */
    5502:	ba 65       	R2 += 0x37;		/* ( 55) */
    5504:	20 64       	R0 += 0x4;		/* (  4) */
    5506:	ff e3 7d d5 	CALL 0x0 <_AddRecordToResponseList>;
    550a:	10 30       	R2 = R0;
    550c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    5510:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    5512:	01 e1 8c 18 	R1.L = 0x188c;		/* (6284)	R1=0x188c(6284) */
    5516:	ff e3 75 d5 	CALL 0x0 <_AddRecordToResponseList>;
    551a:	00 00       	NOP;
    551c:	ea af       	P2 = [P5 + 0x3c];
    551e:	42 0c       	CC = P2 == 0x0;
    5520:	07 18       	IF CC JUMP 0x552e <_mDNS_Deregister_internal+0x532>;
    5522:	22 e1 ff fe 	R2 = -0x101 (X);		/*		R2=0xfffffeff(-257) */
    5526:	44 30       	R0 = P4;
    5528:	4d 30       	R1 = P5;
    552a:	42 4f       	R2 <<= 0x8;
    552c:	62 00       	CALL (P2);
    552e:	e1 a2       	R1 = [P4 + 0x2c];
    5530:	20 a3       	R0 = [P4 + 0x30];
    5532:	01 08       	CC = R1 == R0;
    5534:	0e 18       	IF CC JUMP 0x5550 <_mDNS_Deregister_internal+0x554>;
    5536:	f1 b0       	[SP + 0xc] = R1;
    5538:	30 b1       	[SP + 0x10] = R0;
    553a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x188c(6284) */
    553e:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0xfeff(65279) */
    5542:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5544:	01 e1 40 00 	R1.L = 0x40;		/* ( 64)	R1=0x40( 64) */
    5548:	02 e1 f8 04 	R2.L = 0x4f8;		/* (1272)	R2=0x4f8(1272) */
    554c:	ff e3 5a d5 	CALL 0x0 <_AddRecordToResponseList>;
    5550:	20 a3       	R0 = [P4 + 0x30];
    5552:	f8 67       	R0 += -0x1;		/* ( -1) */
    5554:	20 b3       	[P4 + 0x30] = R0;
    5556:	6d 20       	JUMP.S 0x5630 <_mDNS_Deregister_internal+0x634>;
    5558:	00 00       	NOP;
    555a:	21 e5 37 00 	P1 = [P4 + 0xdc];
    555e:	27 e4 f9 07 	R7 = [P4 + 0x1fe4];
    5562:	0f 64       	R7 += 0x1;		/* (  1) */
    5564:	71 60       	R1 = 0xe (X);		/*		R1=0xe( 14) */
    5566:	21 e7 f8 07 	[P4 + 0x1fe0] = P1;
    556a:	27 e6 f9 07 	[P4 + 0x1fe4] = R7;
    556e:	0f 0a       	CC = R7 <= R1 (IU);
    5570:	1c 1c       	IF CC JUMP 0x55a8 <_mDNS_Deregister_internal+0x5ac> (BP);
    5572:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    5576:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    557a:	52 91       	P2 = [P2];
    557c:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    557e:	2e a2       	R6 = [P5 + 0x20];
    5580:	50 44       	P0 = P2 << 0x2;
    5582:	90 5a       	P2 = P0 + P2;
    5584:	8a 5a       	P2 = P2 + P1;
    5586:	42 0c       	CC = P2 == 0x0;
    5588:	90 07       	IF CC P2 = R0;
    558a:	22 e7 fa 07 	[P4 + 0x1fe8] = P2;
    558e:	e8 a8       	R0 = W[P5 + 0x6] (X);
    5590:	ff e3 38 d5 	CALL 0x0 <_AddRecordToResponseList>;
    5594:	30 b1       	[SP + 0x10] = R0;
    5596:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xe( 14) */
    559a:	f6 b0       	[SP + 0xc] = R6;
    559c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    559e:	01 e1 c0 18 	R1.L = 0x18c0;		/* (6336)	R1=0x18c0(6336) */
    55a2:	17 30       	R2 = R7;
    55a4:	ff e3 2e d5 	CALL 0x0 <_AddRecordToResponseList>;
    55a8:	00 00       	NOP;
    55aa:	20 a3       	R0 = [P4 + 0x30];
    55ac:	08 64       	R0 += 0x1;		/* (  1) */
    55ae:	e1 a2       	R1 = [P4 + 0x2c];
    55b0:	20 b3       	[P4 + 0x30] = R0;
    55b2:	01 08       	CC = R1 == R0;
    55b4:	0e 18       	IF CC JUMP 0x55d0 <_mDNS_Deregister_internal+0x5d4>;
    55b6:	f1 b0       	[SP + 0xc] = R1;
    55b8:	30 b1       	[SP + 0x10] = R0;
    55ba:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x18c0(6336) */
    55be:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x4f8(1272) */
    55c2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    55c4:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    55c8:	02 e1 f8 04 	R2.L = 0x4f8;		/* (1272)	R2=0x4f8(1272) */
    55cc:	ff e3 1a d5 	CALL 0x0 <_AddRecordToResponseList>;
    55d0:	ea af       	P2 = [P5 + 0x3c];
    55d2:	42 0c       	CC = P2 == 0x0;
    55d4:	07 18       	IF CC JUMP 0x55e2 <_mDNS_Deregister_internal+0x5e6>;
    55d6:	22 e1 fd bf 	R2 = -0x4003 (X);		/*		R2=0xffffbffd(-16387) */
    55da:	44 30       	R0 = P4;
    55dc:	4d 30       	R1 = P5;
    55de:	12 4f       	R2 <<= 0x2;
    55e0:	62 00       	CALL (P2);
    55e2:	e1 a2       	R1 = [P4 + 0x2c];
    55e4:	20 a3       	R0 = [P4 + 0x30];
    55e6:	01 08       	CC = R1 == R0;
    55e8:	0e 18       	IF CC JUMP 0x5604 <_mDNS_Deregister_internal+0x608>;
    55ea:	f1 b0       	[SP + 0xc] = R1;
    55ec:	30 b1       	[SP + 0x10] = R0;
    55ee:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    55f2:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0xbffd(49149) */
    55f6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    55f8:	01 e1 40 00 	R1.L = 0x40;		/* ( 64)	R1=0x40( 64) */
    55fc:	02 e1 f8 04 	R2.L = 0x4f8;		/* (1272)	R2=0x4f8(1272) */
    5600:	ff e3 00 d5 	CALL 0x0 <_AddRecordToResponseList>;
    5604:	20 a3       	R0 = [P4 + 0x30];
    5606:	f8 67       	R0 += -0x1;		/* ( -1) */
    5608:	20 b3       	[P4 + 0x30] = R0;
    560a:	0d 20       	JUMP.S 0x5624 <_mDNS_Deregister_internal+0x628>;
    560c:	00 00       	NOP;
    560e:	90 e4 85 00 	R0 = B[P2 + 0x85] (Z);
    5612:	18 08       	CC = R0 == R3;
    5614:	03 1c       	IF CC JUMP 0x561a <_mDNS_Deregister_internal+0x61e> (BP);
    5616:	52 91       	P2 = [P2];
    5618:	0a 20       	JUMP.S 0x562c <_mDNS_Deregister_internal+0x630>;
    561a:	44 30       	R0 = P4;
    561c:	4a 30       	R1 = P2;
    561e:	12 60       	R2 = 0x2 (X);		/*		R2=0x2(  2) */
    5620:	ff e3 ee fc 	CALL 0x4ffc <_mDNS_Deregister_internal>;
    5624:	22 e5 f3 07 	P2 = [P4 + 0x1fcc];
    5628:	23 e1 ff 00 	R3 = 0xff (X);		/*		R3=0xff(255) */
    562c:	42 0c       	CC = P2 == 0x0;
    562e:	ef 17       	IF !CC JUMP 0x560c <_mDNS_Deregister_internal+0x610> (BP);
    5630:	44 30       	R0 = P4;
    5632:	ff e3 af f4 	CALL 0x3f90 <_mDNS_UpdateAllowSleep>;
    5636:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5638:	04 20       	JUMP.S 0x5640 <_mDNS_Deregister_internal+0x644>;
    563a:	d8 63       	R0 = -0x5 (X);		/*		R0=0xfffffffb( -5) */
    563c:	40 e1 fe ff 	R0.H = 0xfffe;		/* ( -2)	R0=0xfffefffb(-65541) */
    5640:	a6 6c       	SP += 0x14;		/* ( 20) */
    5642:	77 90       	FP = [SP++];
    5644:	27 01       	RETS = [SP++];
    5646:	ab 05       	(R7:5, P5:3) = [SP++];
    5648:	10 00       	RTS;
	...

0000564c <_DeadvertiseInterface>:
_DeadvertiseInterface():
    564c:	c4 04       	[--SP] = (P5:4);
    564e:	20 32       	P4 = R0;
    5650:	67 01       	[--SP] = RETS;
    5652:	a6 6f       	SP += -0xc;		/* (-12) */
    5654:	29 32       	P5 = R1;
    5656:	22 e5 f7 07 	P2 = [P4 + 0x1fdc];
    565a:	4a 32       	P1 = P2;
    565c:	07 20       	JUMP.S 0x566a <_DeadvertiseInterface+0x1e>;
    565e:	00 00       	NOP;
    5660:	88 e4 b4 14 	R0 = B[P1 + 0x14b4] (Z);
    5664:	00 0c       	CC = R0 == 0x0;
    5666:	05 14       	IF !CC JUMP 0x5670 <_DeadvertiseInterface+0x24> (BP);
    5668:	49 91       	P1 = [P1];
    566a:	41 0c       	CC = P1 == 0x0;
    566c:	f9 17       	IF !CC JUMP 0x565e <_DeadvertiseInterface+0x12> (BP);
    566e:	04 20       	JUMP.S 0x5676 <_DeadvertiseInterface+0x2a>;
    5670:	28 e1 e4 09 	P0 = 0x9e4 (X);		/*		P0=0x9e4(2532) */
    5674:	41 5a       	P1 = P1 + P0;
    5676:	28 e1 e4 09 	P0 = 0x9e4 (X);		/*		P0=0x9e4(2532) */
    567a:	05 5a       	P0 = P5 + P0;
    567c:	0a 20       	JUMP.S 0x5690 <_DeadvertiseInterface+0x44>;
    567e:	48 30       	R1 = P0;
    5680:	10 e4 87 02 	R0 = [P2 + 0xa1c];
    5684:	08 08       	CC = R0 == R1;
    5686:	03 14       	IF !CC JUMP 0x568c <_DeadvertiseInterface+0x40> (BP);
    5688:	11 e7 87 02 	[P2 + 0xa1c] = P1;
    568c:	00 00       	NOP;
    568e:	52 91       	P2 = [P2];
    5690:	42 0c       	CC = P2 == 0x0;
    5692:	f6 17       	IF !CC JUMP 0x567e <_DeadvertiseInterface+0x32> (BP);
    5694:	a8 e4 e8 09 	R0 = B[P5 + 0x9e8] (Z);
    5698:	00 0c       	CC = R0 == 0x0;
    569a:	09 1c       	IF CC JUMP 0x56ac <_DeadvertiseInterface+0x60> (BP);
    569c:	2a e1 e4 09 	P2 = 0x9e4 (X);		/*		P2=0x9e4(2532) */
    56a0:	95 5a       	P2 = P5 + P2;
    56a2:	4a 30       	R1 = P2;
    56a4:	44 30       	R0 = P4;
    56a6:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    56a8:	ff e3 aa fc 	CALL 0x4ffc <_mDNS_Deregister_internal>;
    56ac:	00 00       	NOP;
    56ae:	a8 e4 5c 0d 	R0 = B[P5 + 0xd5c] (Z);
    56b2:	00 0c       	CC = R0 == 0x0;
    56b4:	09 1c       	IF CC JUMP 0x56c6 <_DeadvertiseInterface+0x7a> (BP);
    56b6:	2a e1 58 0d 	P2 = 0xd58 (X);		/*		P2=0xd58(3416) */
    56ba:	95 5a       	P2 = P5 + P2;
    56bc:	4a 30       	R1 = P2;
    56be:	44 30       	R0 = P4;
    56c0:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    56c2:	ff e3 9d fc 	CALL 0x4ffc <_mDNS_Deregister_internal>;
    56c6:	00 00       	NOP;
    56c8:	a8 e4 d0 10 	R0 = B[P5 + 0x10d0] (Z);
    56cc:	00 0c       	CC = R0 == 0x0;
    56ce:	0c 1c       	IF CC JUMP 0x56e6 <_DeadvertiseInterface+0x9a> (BP);
    56d0:	66 6c       	SP += 0xc;		/* ( 12) */
    56d2:	2a e1 cc 10 	P2 = 0x10cc (X);		/*		P2=0x10cc(4300) */
    56d6:	95 5a       	P2 = P5 + P2;
    56d8:	27 01       	RETS = [SP++];
    56da:	44 30       	R0 = P4;
    56dc:	4a 30       	R1 = P2;
    56de:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    56e0:	84 04       	(P5:4) = [SP++];
    56e2:	ff e2 8d fc 	JUMP.L 0x4ffc <_mDNS_Deregister_internal>;
    56e6:	66 6c       	SP += 0xc;		/* ( 12) */
    56e8:	27 01       	RETS = [SP++];
    56ea:	84 04       	(P5:4) = [SP++];
    56ec:	10 00       	RTS;
	...

000056f0 <_DeregLoop>:
_DeregLoop():
    56f0:	e3 05       	[--SP] = (R7:4, P5:3);
    56f2:	20 32       	P4 = R0;
    56f4:	00 e8 07 00 	LINK 0x1c;		/* (28) */
    56f8:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x10f4 */
    56fc:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0x2(  2) */
    5700:	45 e1 00 00 	R5.H = 0x0;		/* (  0)	R5=0x0 <_AddRecordToResponseList>(  0) */
    5704:	b8 65       	R0 += 0x37;		/* ( 55) */
    5706:	21 e6 f5 07 	[P4 + 0x1fd4] = R1;
    570a:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
    570e:	06 e1 18 19 	R6.L = 0x1918;		/* (6424)	R6=0x1918(6424) */
    5712:	05 e1 08 19 	R5.L = 0x1908;		/* (6408)	R5=0x1908(6408) */
    5716:	b0 b1       	[SP + 0x18] = R0;
    5718:	0c 60       	R4 = 0x1 (X);		/*		R4=0x1(  1) */
    571a:	3b 20       	JUMP.S 0x5790 <_DeregLoop+0xa0>;
    571c:	18 91       	R0 = [P3];
    571e:	00 0c       	CC = R0 == 0x0;
    5720:	18 1c       	IF CC JUMP 0x5750 <_DeregLoop+0x60> (BP);
    5722:	af e4 04 00 	R7 = B[P5 + 0x4] (Z);
    5726:	0f 0c       	CC = R7 == 0x1;
    5728:	69 a2       	R1 = [P5 + 0x24];
    572a:	45 30       	R0 = P5;
    572c:	be 07       	IF CC FP = R6;
    572e:	bd 06       	IF !CC FP = R5;
    5730:	21 64       	R1 += 0x4;		/* (  4) */
    5732:	b2 a1       	R2 = [SP + 0x18];
    5734:	20 64       	R0 += 0x4;		/* (  4) */
    5736:	ff e3 65 d4 	CALL 0x0 <_AddRecordToResponseList>;
    573a:	70 b1       	[SP + 0x14] = R0;
    573c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x40( 64) */
    5740:	f5 bc       	[SP + 0xc] = P5;
    5742:	37 b1       	[SP + 0x10] = R7;
    5744:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    5746:	01 e1 28 19 	R1.L = 0x1928;		/* (6440)	R1=0x1928(6440) */
    574a:	57 30       	R2 = FP;
    574c:	ff e3 5a d4 	CALL 0x0 <_AddRecordToResponseList>;
    5750:	00 00       	NOP;
    5752:	a8 e4 04 00 	R0 = B[P5 + 0x4] (Z);
    5756:	08 0c       	CC = R0 == 0x1;
    5758:	07 18       	IF CC JUMP 0x5766 <_DeregLoop+0x76>;
    575a:	44 30       	R0 = P4;
    575c:	4d 30       	R1 = P5;
    575e:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
    5760:	ff e3 4e fc 	CALL 0x4ffc <_mDNS_Deregister_internal>;
    5764:	0e 20       	JUMP.S 0x5780 <_DeregLoop+0x90>;
    5766:	a8 e4 86 00 	R0 = B[P5 + 0x86] (Z);
    576a:	08 0e       	CC = R0 <= 0x1 (IU);
    576c:	0a 1c       	IF CC JUMP 0x5780 <_DeregLoop+0x90> (BP);
    576e:	ac e6 86 00 	B[P5 + 0x86] = R4;
    5772:	21 e4 37 00 	R1 = [P4 + 0xdc];
    5776:	28 e4 2f 00 	R0 = [P5 + 0xbc];
    577a:	01 52       	R0 = R1 - R0;
    577c:	28 e6 30 00 	[P5 + 0xc0] = R0;
    5780:	00 00       	NOP;
    5782:	22 e5 f5 07 	P2 = [P4 + 0x1fd4];
    5786:	6a 08       	CC = P2 == P5;
    5788:	04 14       	IF !CC JUMP 0x5790 <_DeregLoop+0xa0> (BP);
    578a:	10 91       	R0 = [P2];
    578c:	20 e6 f5 07 	[P4 + 0x1fd4] = R0;
    5790:	00 00       	NOP;
    5792:	25 e5 f5 07 	P5 = [P4 + 0x1fd4];
    5796:	45 0c       	CC = P5 == 0x0;
    5798:	c2 17       	IF !CC JUMP 0x571c <_DeregLoop+0x2c> (BP);
    579a:	e6 6c       	SP += 0x1c;		/* ( 28) */
    579c:	77 90       	FP = [SP++];
    579e:	27 01       	RETS = [SP++];
    57a0:	a3 05       	(R7:4, P5:3) = [SP++];
    57a2:	10 00       	RTS;

000057a4 <_ScheduleWakeupForList>:
_ScheduleWakeupForList():
    57a4:	eb 05       	[--SP] = (R7:5, P5:3);
    57a6:	22 32       	P4 = R2;
    57a8:	67 01       	[--SP] = RETS;
    57aa:	38 30       	R7 = R0;
    57ac:	a6 6f       	SP += -0xc;		/* (-12) */
    57ae:	31 30       	R6 = R1;
    57b0:	20 91       	R0 = [P4];
    57b2:	75 af       	P5 = [SP + 0x34];
    57b4:	00 0c       	CC = R0 == 0x0;
    57b6:	08 18       	IF CC JUMP 0x57c6 <_ScheduleWakeupForList+0x22>;
    57b8:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
    57bc:	2f 30       	R5 = R7;
    57be:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
    57c2:	bd 65       	R5 += 0x37;		/* ( 55) */
    57c4:	36 20       	JUMP.S 0x5830 <_ScheduleWakeupForList+0x8c>;
    57c6:	66 6c       	SP += 0xc;		/* ( 12) */
    57c8:	27 01       	RETS = [SP++];
    57ca:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1928(6440) */
    57ce:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    57d0:	01 e1 54 19 	R1.L = 0x1954;		/* (6484)	R1=0x1954(6484) */
    57d4:	ab 05       	(R7:5, P5:3) = [SP++];
    57d6:	ff e2 15 d4 	JUMP.L 0x0 <_AddRecordToResponseList>;
    57da:	00 00       	NOP;
    57dc:	e8 a1       	R0 = [P5 + 0x1c];
    57de:	30 08       	CC = R0 == R6;
    57e0:	26 14       	IF !CC JUMP 0x582c <_ScheduleWakeupForList+0x88> (BP);
    57e2:	a8 e4 04 00 	R0 = B[P5 + 0x4] (Z);
    57e6:	08 0c       	CC = R0 == 0x1;
    57e8:	22 1c       	IF CC JUMP 0x582c <_ScheduleWakeupForList+0x88> (BP);
    57ea:	29 e4 13 00 	R1 = [P5 + 0x4c];
    57ee:	20 91       	R0 = [P4];
    57f0:	01 08       	CC = R1 == R0;
    57f2:	1d 14       	IF !CC JUMP 0x582c <_ScheduleWakeupForList+0x88> (BP);
    57f4:	69 e4 28 00 	R1 = W[P5 + 0x50] (Z);
    57f8:	a0 a4       	R0 = W[P4 + 0x4] (Z);
    57fa:	01 08       	CC = R1 == R0;
    57fc:	18 14       	IF !CC JUMP 0x582c <_ScheduleWakeupForList+0x88> (BP);
    57fe:	18 91       	R0 = [P3];
    5800:	00 0c       	CC = R0 == 0x0;
    5802:	10 1c       	IF CC JUMP 0x5822 <_ScheduleWakeupForList+0x7e> (BP);
    5804:	69 a2       	R1 = [P5 + 0x24];
    5806:	45 30       	R0 = P5;
    5808:	21 64       	R1 += 0x4;		/* (  4) */
    580a:	15 30       	R2 = R5;
    580c:	20 64       	R0 += 0x4;		/* (  4) */
    580e:	ff e3 f9 d3 	CALL 0x0 <_AddRecordToResponseList>;
    5812:	10 30       	R2 = R0;
    5814:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1954(6484) */
    5818:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    581a:	01 e1 88 19 	R1.L = 0x1988;		/* (6536)	R1=0x1988(6536) */
    581e:	ff e3 f1 d3 	CALL 0x0 <_AddRecordToResponseList>;
    5822:	07 30       	R0 = R7;
    5824:	4d 30       	R1 = P5;
    5826:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    5828:	ff e3 ea fb 	CALL 0x4ffc <_mDNS_Deregister_internal>;
    582c:	00 00       	NOP;
    582e:	6d 91       	P5 = [P5];
    5830:	45 0c       	CC = P5 == 0x0;
    5832:	d4 17       	IF !CC JUMP 0x57da <_ScheduleWakeupForList+0x36> (BP);
    5834:	66 6c       	SP += 0xc;		/* ( 12) */
    5836:	27 01       	RETS = [SP++];
    5838:	ab 05       	(R7:5, P5:3) = [SP++];
    583a:	10 00       	RTS;

0000583c <_ScheduleWakeup>:
_ScheduleWakeup():
    583c:	fc 05       	[--SP] = (R7:7, P5:4);
    583e:	22 32       	P4 = R2;
    5840:	28 32       	P5 = R0;
    5842:	67 01       	[--SP] = RETS;
    5844:	86 6f       	SP += -0x10;		/* (-16) */
    5846:	39 30       	R7 = R1;
    5848:	20 91       	R0 = [P4];
    584a:	00 0c       	CC = R0 == 0x0;
    584c:	0a 14       	IF !CC JUMP 0x5860 <_ScheduleWakeup+0x24> (BP);
    584e:	86 6c       	SP += 0x10;		/* ( 16) */
    5850:	27 01       	RETS = [SP++];
    5852:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1988(6536) */
    5856:	01 e1 c0 19 	R1.L = 0x19c0;		/* (6592)	R1=0x19c0(6592) */
    585a:	bc 05       	(R7:7, P5:4) = [SP++];
    585c:	ff e2 d2 d3 	JUMP.L 0x0 <_AddRecordToResponseList>;
    5860:	00 00       	NOP;
    5862:	28 e4 f3 07 	R0 = [P5 + 0x1fcc];
    5866:	f0 b0       	[SP + 0xc] = R0;
    5868:	45 30       	R0 = P5;
    586a:	ff e3 9d ff 	CALL 0x57a4 <_ScheduleWakeupForList>;
    586e:	28 e4 f2 07 	R0 = [P5 + 0x1fc8];
    5872:	f0 b0       	[SP + 0xc] = R0;
    5874:	45 30       	R0 = P5;
    5876:	0f 30       	R1 = R7;
    5878:	54 30       	R2 = P4;
    587a:	ff e3 95 ff 	CALL 0x57a4 <_ScheduleWakeupForList>;
    587e:	86 6c       	SP += 0x10;		/* ( 16) */
    5880:	27 01       	RETS = [SP++];
    5882:	bc 05       	(R7:7, P5:4) = [SP++];
    5884:	10 00       	RTS;
	...

00005888 <_mDNSCoreReceiveRawTransportPacket>:
_mDNSCoreReceiveRawTransportPacket():
    5888:	e3 05       	[--SP] = (R7:4, P5:3);
    588a:	00 e8 0f 00 	LINK 0x3c;		/* (60) */
    588e:	38 32       	FP = R0;
    5890:	b0 e5 70 00 	R0 = B[SP + 0x70] (X);
    5894:	39 30       	R7 = R1;
    5896:	31 e4 20 00 	R1 = [SP + 0x80];
    589a:	22 30       	R4 = R2;
    589c:	b0 e6 30 00 	B[SP + 0x30] = R0;
    58a0:	71 b3       	[SP + 0x34] = R1;
    58a2:	40 43       	R0 = R0.B (Z);
    58a4:	32 60       	R2 = 0x6 (X);		/*		R2=0x6(  6) */
    58a6:	33 e5 1b 00 	P3 = [SP + 0x6c];
    58aa:	34 e5 1d 00 	P4 = [SP + 0x74];
    58ae:	35 e5 1e 00 	P5 = [SP + 0x78];
    58b2:	35 e4 1f 00 	R5 = [SP + 0x7c];
    58b6:	71 e5 42 00 	R1 = W[SP + 0x84] (X);
    58ba:	10 08       	CC = R0 == R2;
    58bc:	03 14       	IF !CC JUMP 0x58c2 <_mDNSCoreReceiveRawTransportPacket+0x3a> (BP);
    58be:	6e a8       	R6 = W[P5 + 0x2] (X);
    58c0:	35 20       	JUMP.S 0x592a <_mDNSCoreReceiveRawTransportPacket+0xa2>;
    58c2:	8a 60       	R2 = 0x11 (X);		/*		R2=0x11( 17) */
    58c4:	10 08       	CC = R0 == R2;
    58c6:	03 14       	IF !CC JUMP 0x58cc <_mDNSCoreReceiveRawTransportPacket+0x44> (BP);
    58c8:	6e a8       	R6 = W[P5 + 0x2] (X);
    58ca:	8d 20       	JUMP.S 0x59e4 <_mDNSCoreReceiveRawTransportPacket+0x15c>;
    58cc:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x10cc */
    58d0:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    58d4:	32 60       	R2 = 0x6 (X);		/*		R2=0x6(  6) */
    58d6:	16 95       	R6 = W[P2] (Z);
    58d8:	10 08       	CC = R0 == R2;
    58da:	28 18       	IF CC JUMP 0x592a <_mDNSCoreReceiveRawTransportPacket+0xa2>;
    58dc:	30 0e       	CC = R0 <= 0x6 (IU);
    58de:	05 14       	IF !CC JUMP 0x58e8 <_mDNSCoreReceiveRawTransportPacket+0x60> (BP);
    58e0:	08 0c       	CC = R0 == 0x1;
    58e2:	02 18       	IF CC JUMP 0x58e6 <_mDNSCoreReceiveRawTransportPacket+0x5e>;
    58e4:	19 23       	JUMP.S 0x5f16 <_mDNSCoreReceiveRawTransportPacket+0x68e>;
    58e6:	09 20       	JUMP.S 0x58f8 <_mDNSCoreReceiveRawTransportPacket+0x70>;
    58e8:	8a 60       	R2 = 0x11 (X);		/*		R2=0x11( 17) */
    58ea:	10 08       	CC = R0 == R2;
    58ec:	7c 18       	IF CC JUMP 0x59e4 <_mDNSCoreReceiveRawTransportPacket+0x15c>;
    58ee:	d2 61       	R2 = 0x3a (X);		/*		R2=0x3a( 58) */
    58f0:	10 08       	CC = R0 == R2;
    58f2:	02 18       	IF CC JUMP 0x58f6 <_mDNSCoreReceiveRawTransportPacket+0x6e>;
    58f4:	11 23       	JUMP.S 0x5f16 <_mDNSCoreReceiveRawTransportPacket+0x68e>;
    58f6:	25 21       	JUMP.S 0x5b40 <_mDNSCoreReceiveRawTransportPacket+0x2b8>;
    58f8:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    58fc:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    5900:	10 91       	R0 = [P2];
    5902:	00 0c       	CC = R0 == 0x0;
    5904:	02 10       	IF !CC JUMP 0x5908 <_mDNSCoreReceiveRawTransportPacket+0x80>;
    5906:	01 24       	JUMP.S 0x6108 <_mDNSCoreReceiveRawTransportPacket+0x880>;
    5908:	34 e6 1b 00 	[SP + 0x6c] = R4;
    590c:	33 e7 1c 00 	[SP + 0x70] = P3;
    5910:	e6 6d       	SP += 0x3c;		/* ( 60) */
    5912:	77 90       	FP = [SP++];
    5914:	44 30       	R0 = P4;
    5916:	85 52       	R2 = R5 - R0;
    5918:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x19c0(6592) */
    591c:	27 01       	RETS = [SP++];
    591e:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    5920:	01 e1 3c 1a 	R1.L = 0x1a3c;		/* (6716)	R1=0x1a3c(6716) */
    5924:	a3 05       	(R7:4, P5:3) = [SP++];
    5926:	ff e2 6d d3 	JUMP.L 0x0 <_AddRecordToResponseList>;
    592a:	a8 e4 0d 00 	R0 = B[P5 + 0xd] (Z);
    592e:	23 60       	R3 = 0x4 (X);		/*		R3=0x4(  4) */
    5930:	d8 54       	R3 = R0 & R3;
    5932:	03 0c       	CC = R3 == 0x0;
    5934:	07 14       	IF !CC JUMP 0x5942 <_mDNSCoreReceiveRawTransportPacket+0xba> (BP);
    5936:	19 60       	R1 = 0x3 (X);		/*		R1=0x3(  3) */
    5938:	48 54       	R1 = R0 & R1;
    593a:	09 0c       	CC = R1 == 0x1;
    593c:	07 02       	R7 = CC;
    593e:	07 4b       	BITTGL (R7, 0x0);		/* bit  0 */
    5940:	02 20       	JUMP.S 0x5944 <_mDNSCoreReceiveRawTransportPacket+0xbc>;
    5942:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    5944:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    5948:	0a e1 3a 01 	P2.L = 0x13a;		/* (314)	P2=0x13a */
    594c:	f2 42       	R2 = R6.L (Z);
    594e:	11 95       	R1 = W[P2] (Z);
    5950:	0a 08       	CC = R2 == R1;
    5952:	04 18       	IF CC JUMP 0x595a <_mDNSCoreReceiveRawTransportPacket+0xd2>;
    5954:	08 48       	CC = !BITTST (R0, 0x1);		/* bit  1 */
    5956:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    5958:	39 07       	IF CC R7 = R1;
    595a:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x13a */
    595e:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    5962:	11 91       	R1 = [P2];
    5964:	01 0c       	CC = R1 == 0x0;
    5966:	02 10       	IF !CC JUMP 0x596a <_mDNSCoreReceiveRawTransportPacket+0xe2>;
    5968:	f3 22       	JUMP.S 0x5f4e <_mDNSCoreReceiveRawTransportPacket+0x6c6>;
    596a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    596e:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x3a( 58) */
    5972:	07 0c       	CC = R7 == 0x0;
    5974:	01 e1 ec 19 	R1.L = 0x19ec;		/* (6636)	R1=0x19ec(6636) */
    5978:	02 e1 f8 19 	R2.L = 0x19f8;		/* (6648)	R2=0x19f8(6648) */
    597c:	11 06       	IF !CC R2 = R1;
    597e:	29 99       	R1 = B[P5] (Z);
    5980:	05 32       	P0 = R5;
    5982:	ad e4 01 00 	R5 = B[P5 + 0x1] (Z);
    5986:	41 4f       	R1 <<= 0x8;
    5988:	4d 57       	R5 = R5 | R1;
    598a:	0d 32       	P1 = R5;
    598c:	71 43       	R1 = R6.B (Z);
    598e:	f5 42       	R5 = R6.L (Z);
    5990:	41 4f       	R1 <<= 0x8;
    5992:	45 4e       	R5 >>= 0x8;
    5994:	4d 57       	R5 = R5 | R1;
    5996:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x19ec(6636) */
    599a:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    599e:	08 48       	CC = !BITTST (R0, 0x1);		/* bit  1 */
    59a0:	01 e1 44 12 	R1.L = 0x1244;		/* (4676)	R1=0x1244(4676) */
    59a4:	0a e1 04 1a 	P2.L = 0x1a04;		/* (6660)	P2=0x1a04 */
    59a8:	91 07       	IF CC P2 = R1;
    59aa:	00 48       	CC = !BITTST (R0, 0x0);		/* bit  0 */
    59ac:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x2(  2) */
    59b0:	00 e1 0c 1a 	R0.L = 0x1a0c;		/* (6668)	R0=0x1a0c(6668) */
    59b4:	01 07       	IF CC R0 = R1;
    59b6:	03 0c       	CC = R3 == 0x0;
    59b8:	43 e1 00 00 	R3.H = 0x0;		/* (  0)	R3=0x4(  4) */
    59bc:	03 e1 14 1a 	R3.L = 0x1a14;		/* (6676)	R3=0x1a14(6676) */
    59c0:	0b 06       	IF !CC R1 = R3;
    59c2:	b1 b2       	[SP + 0x28] = R1;
    59c4:	20 44       	P0 -= P4;
    59c6:	70 b2       	[SP + 0x24] = R0;
    59c8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1244(4676) */
    59cc:	f0 bc       	[SP + 0xc] = P0;
    59ce:	34 b1       	[SP + 0x10] = R4;
    59d0:	71 bd       	[SP + 0x14] = P1;
    59d2:	b3 bd       	[SP + 0x18] = P3;
    59d4:	f5 b1       	[SP + 0x1c] = R5;
    59d6:	32 be       	[SP + 0x20] = P2;
    59d8:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    59da:	01 e1 64 1a 	R1.L = 0x1a64;		/* (6756)	R1=0x1a64(6756) */
    59de:	ff e3 11 d3 	CALL 0x0 <_AddRecordToResponseList>;
    59e2:	b6 22       	JUMP.S 0x5f4e <_mDNSCoreReceiveRawTransportPacket+0x6c6>;
    59e4:	a9 e4 04 00 	R1 = B[P5 + 0x4] (Z);
    59e8:	a8 e4 05 00 	R0 = B[P5 + 0x5] (Z);
    59ec:	41 4f       	R1 <<= 0x8;
    59ee:	41 56       	R1 = R1 | R0;
    59f0:	c8 42       	R0 = R1.L (Z);
    59f2:	38 0e       	CC = R0 <= 0x7 (IU);
    59f4:	02 10       	IF !CC JUMP 0x59f8 <_mDNSCoreReceiveRawTransportPacket+0x170>;
    59f6:	89 23       	JUMP.S 0x6108 <_mDNSCoreReceiveRawTransportPacket+0x880>;
    59f8:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x1a04 */
    59fc:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    5a00:	c1 67       	R1 += -0x8;		/* ( -8) */
    5a02:	f2 42       	R2 = R6.L (Z);
    5a04:	10 95       	R0 = W[P2] (Z);
    5a06:	19 30       	R3 = R1;
    5a08:	02 08       	CC = R2 == R0;
    5a0a:	57 14       	IF !CC JUMP 0x5ab8 <_mDNSCoreReceiveRawTransportPacket+0x230> (BP);
    5a0c:	c8 42       	R0 = R1.L (Z);
    5a0e:	08 0c       	CC = R0 == 0x1;
    5a10:	0b 14       	IF !CC JUMP 0x5a26 <_mDNSCoreReceiveRawTransportPacket+0x19e> (BP);
    5a12:	45 30       	R0 = P5;
    5a14:	48 64       	R0 += 0x9;		/* (  9) */
    5a16:	85 09       	CC = R5 < R0 (IU);
    5a18:	07 1c       	IF CC JUMP 0x5a26 <_mDNSCoreReceiveRawTransportPacket+0x19e> (BP);
    5a1a:	a8 e4 08 00 	R0 = B[P5 + 0x8] (Z);
    5a1e:	22 e1 ff 00 	R2 = 0xff (X);		/*		R2=0xff(255) */
    5a22:	10 08       	CC = R0 == R2;
    5a24:	48 18       	IF CC JUMP 0x5ab4 <_mDNSCoreReceiveRawTransportPacket+0x22c>;
    5a26:	45 30       	R0 = P5;
    5a28:	60 64       	R0 += 0xc;		/* ( 12) */
    5a2a:	85 09       	CC = R5 < R0 (IU);
    5a2c:	02 10       	IF !CC JUMP 0x5a30 <_mDNSCoreReceiveRawTransportPacket+0x1a8>;
    5a2e:	69 23       	JUMP.S 0x6100 <_mDNSCoreReceiveRawTransportPacket+0x878>;
    5a30:	a8 a0       	R0 = [P5 + 0x8];
    5a32:	00 0c       	CC = R0 == 0x0;
    5a34:	02 18       	IF CC JUMP 0x5a38 <_mDNSCoreReceiveRawTransportPacket+0x1b0>;
    5a36:	65 23       	JUMP.S 0x6100 <_mDNSCoreReceiveRawTransportPacket+0x878>;
    5a38:	2a e1 20 01 	P2 = 0x120 (X);		/*		P2=0x120(288) */
    5a3c:	20 60       	R0 = 0x4 (X);		/*		R0=0x4(  4) */
    5a3e:	01 52       	R0 = R1 - R0;
    5a40:	c0 42       	R0 = R0.L (Z);
    5a42:	d9 60       	R1 = 0x1b (X);		/*		R1=0x1b( 27) */
    5a44:	08 0a       	CC = R0 <= R1 (IU);
    5a46:	39 1c       	IF CC JUMP 0x5ab8 <_mDNSCoreReceiveRawTransportPacket+0x230> (BP);
    5a48:	95 5a       	P2 = P5 + P2;
    5a4a:	42 30       	R0 = P2;
    5a4c:	e0 64       	R0 += 0x1c;		/* ( 28) */
    5a4e:	85 09       	CC = R5 < R0 (IU);
    5a50:	34 1c       	IF CC JUMP 0x5ab8 <_mDNSCoreReceiveRawTransportPacket+0x230> (BP);
    5a52:	90 e4 11 00 	R0 = B[P2 + 0x11] (Z);
    5a56:	20 48       	CC = !BITTST (R0, 0x4);		/* bit  4 */
    5a58:	30 1c       	IF CC JUMP 0x5ab8 <_mDNSCoreReceiveRawTransportPacket+0x230> (BP);
    5a5a:	90 e5 12 00 	R0 = B[P2 + 0x12] (X);
    5a5e:	41 43       	R1 = R0.B (Z);
    5a60:	2a 60       	R2 = 0x5 (X);		/*		R2=0x5(  5) */
    5a62:	11 08       	CC = R1 == R2;
    5a64:	07 18       	IF CC JUMP 0x5a72 <_mDNSCoreReceiveRawTransportPacket+0x1ea>;
    5a66:	17 61       	R7 = 0x22 (X);		/*		R7=0x22( 34) */
    5a68:	f8 59       	R7 = R0 ^ R7;
    5a6a:	7f 43       	R7 = R7.B (Z);
    5a6c:	bf 43       	R7 = -R7;
    5a6e:	ff 4e       	R7 >>= 0x1f;
    5a70:	02 20       	JUMP.S 0x5a74 <_mDNSCoreReceiveRawTransportPacket+0x1ec>;
    5a72:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    5a74:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x120 */
    5a78:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    5a7c:	11 91       	R1 = [P2];
    5a7e:	01 0c       	CC = R1 == 0x0;
    5a80:	1d 1c       	IF CC JUMP 0x5aba <_mDNSCoreReceiveRawTransportPacket+0x232> (BP);
    5a82:	15 32       	P2 = R5;
    5a84:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1b( 27) */
    5a88:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x5(  5) */
    5a8c:	07 0c       	CC = R7 == 0x0;
    5a8e:	01 e1 ec 19 	R1.L = 0x19ec;		/* (6636)	R1=0x19ec(6636) */
    5a92:	02 e1 f8 19 	R2.L = 0x19f8;		/* (6648)	R2=0x19f8(6648) */
    5a96:	11 06       	IF !CC R2 = R1;
    5a98:	40 43       	R0 = R0.B (Z);
    5a9a:	22 44       	P2 -= P4;
    5a9c:	30 b1       	[SP + 0x10] = R0;
    5a9e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x19ec(6636) */
    5aa2:	f3 b2       	[SP + 0x2c] = R3;
    5aa4:	f2 bc       	[SP + 0xc] = P2;
    5aa6:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    5aa8:	01 e1 90 1a 	R1.L = 0x1a90;		/* (6800)	R1=0x1a90(6800) */
    5aac:	ff e3 aa d2 	CALL 0x0 <_AddRecordToResponseList>;
    5ab0:	f3 a2       	R3 = [SP + 0x2c];
    5ab2:	04 20       	JUMP.S 0x5aba <_mDNSCoreReceiveRawTransportPacket+0x232>;
    5ab4:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    5ab6:	02 20       	JUMP.S 0x5aba <_mDNSCoreReceiveRawTransportPacket+0x232>;
    5ab8:	0f 60       	R7 = 0x1 (X);		/*		R7=0x1(  1) */
    5aba:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    5abe:	0a e1 38 01 	P2.L = 0x138;		/* (312)	P2=0x138 */
    5ac2:	f1 42       	R1 = R6.L (Z);
    5ac4:	10 95       	R0 = W[P2] (Z);
    5ac6:	01 08       	CC = R1 == R0;
    5ac8:	11 14       	IF !CC JUMP 0x5aea <_mDNSCoreReceiveRawTransportPacket+0x262> (BP);
    5aca:	db 42       	R3 = R3.L (Z);
    5acc:	20 e1 6d 00 	R0 = 0x6d (X);		/*		R0=0x6d(109) */
    5ad0:	03 0a       	CC = R3 <= R0 (IU);
    5ad2:	0b 1c       	IF CC JUMP 0x5ae8 <_mDNSCoreReceiveRawTransportPacket+0x260> (BP);
    5ad4:	45 30       	R0 = P5;
    5ad6:	50 64       	R0 += 0xa;		/* ( 10) */
    5ad8:	85 09       	CC = R5 < R0 (IU);
    5ada:	07 1c       	IF CC JUMP 0x5ae8 <_mDNSCoreReceiveRawTransportPacket+0x260> (BP);
    5adc:	28 a5       	R0 = W[P5 + 0x8] (Z);
    5ade:	81 e1 13 88 	R1 = 0x8813 (Z);		/*		R1=0x8813(34835) */
    5ae2:	08 08       	CC = R0 == R1;
    5ae4:	07 02       	R7 = CC;
    5ae6:	02 20       	JUMP.S 0x5aea <_mDNSCoreReceiveRawTransportPacket+0x262>;
    5ae8:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    5aea:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x138 */
    5aee:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    5af2:	10 91       	R0 = [P2];
    5af4:	00 0c       	CC = R0 == 0x0;
    5af6:	02 10       	IF !CC JUMP 0x5afa <_mDNSCoreReceiveRawTransportPacket+0x272>;
    5af8:	2b 22       	JUMP.S 0x5f4e <_mDNSCoreReceiveRawTransportPacket+0x6c6>;
    5afa:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x6d(109) */
    5afe:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x19f8(6648) */
    5b02:	07 0c       	CC = R7 == 0x0;
    5b04:	00 e1 ec 19 	R0.L = 0x19ec;		/* (6636)	R0=0x19ec(6636) */
    5b08:	02 e1 f8 19 	R2.L = 0x19f8;		/* (6648)	R2=0x19f8(6648) */
    5b0c:	10 06       	IF !CC R2 = R0;
    5b0e:	28 99       	R0 = B[P5] (Z);
    5b10:	a9 e4 01 00 	R1 = B[P5 + 0x1] (Z);
    5b14:	40 4f       	R0 <<= 0x8;
    5b16:	01 56       	R0 = R1 | R0;
    5b18:	4c 30       	R1 = P4;
    5b1a:	4d 53       	R5 = R5 - R1;
    5b1c:	70 b1       	[SP + 0x14] = R0;
    5b1e:	71 43       	R1 = R6.B (Z);
    5b20:	f0 42       	R0 = R6.L (Z);
    5b22:	41 4f       	R1 <<= 0x8;
    5b24:	40 4e       	R0 >>= 0x8;
    5b26:	08 56       	R0 = R0 | R1;
    5b28:	f0 b1       	[SP + 0x1c] = R0;
    5b2a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x8813(34835) */
    5b2e:	f5 b0       	[SP + 0xc] = R5;
    5b30:	34 b1       	[SP + 0x10] = R4;
    5b32:	b3 bd       	[SP + 0x18] = P3;
    5b34:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    5b36:	01 e1 b0 1a 	R1.L = 0x1ab0;		/* (6832)	R1=0x1ab0(6832) */
    5b3a:	ff e3 63 d2 	CALL 0x0 <_AddRecordToResponseList>;
    5b3e:	08 22       	JUMP.S 0x5f4e <_mDNSCoreReceiveRawTransportPacket+0x6c6>;
    5b40:	c8 42       	R0 = R1.L (Z);
    5b42:	55 30       	R2 = P5;
    5b44:	42 50       	R1 = R2 + R0;
    5b46:	8d 09       	CC = R5 < R1 (IU);
    5b48:	02 10       	IF !CC JUMP 0x5b4c <_mDNSCoreReceiveRawTransportPacket+0x2c4>;
    5b4a:	df 22       	JUMP.S 0x6108 <_mDNSCoreReceiveRawTransportPacket+0x880>;
    5b4c:	24 32       	P4 = R4;
    5b4e:	30 b1       	[SP + 0x10] = R0;
    5b50:	4b 30       	R1 = P3;
    5b52:	d2 61       	R2 = 0x3a (X);		/*		R2=0x3a( 58) */
    5b54:	21 64       	R1 += 0x4;		/* (  4) */
    5b56:	24 6c       	P4 += 0x4;		/* (  4) */
    5b58:	f5 bc       	[SP + 0xc] = P5;
    5b5a:	44 30       	R0 = P4;
    5b5c:	ff e3 aa d2 	CALL 0xb0 <_IPv6CheckSum>;
    5b60:	c2 42       	R2 = R0.L (Z);
    5b62:	02 0c       	CC = R2 == 0x0;
    5b64:	bb 15       	IF !CC JUMP 0x5eda <_mDNSCoreReceiveRawTransportPacket+0x652> (BP);
    5b66:	38 e4 f7 07 	R0 = [FP + 0x1fdc];
    5b6a:	71 a3       	R1 = [SP + 0x34];
    5b6c:	ff e3 5a df 	CALL 0x1a20 <_FirstInterfaceForID.clone.0>;
    5b70:	28 30       	R5 = R0;
    5b72:	00 0c       	CC = R0 == 0x0;
    5b74:	02 14       	IF !CC JUMP 0x5b78 <_mDNSCoreReceiveRawTransportPacket+0x2f0> (BP);
    5b76:	c9 22       	JUMP.S 0x6108 <_mDNSCoreReceiveRawTransportPacket+0x880>;
    5b78:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1ab0(6832) */
    5b7c:	47 30       	R0 = FP;
    5b7e:	01 e1 14 02 	R1.L = 0x214;		/* (532)	R1=0x214(532) */
    5b82:	ff e3 3f d2 	CALL 0x0 <_AddRecordToResponseList>;
    5b86:	28 99       	R0 = B[P5] (Z);
    5b88:	21 e1 87 00 	R1 = 0x87 (X);		/*		R1=0x87(135) */
    5b8c:	08 08       	CC = R0 == R1;
    5b8e:	ee 14       	IF !CC JUMP 0x5d6a <_mDNSCoreReceiveRawTransportPacket+0x4e2> (BP);
    5b90:	05 32       	P0 = R5;
    5b92:	2a e1 74 14 	P2 = 0x1474 (X);		/*		P2=0x1474(5236) */
    5b96:	44 e1 00 00 	R4.H = 0x0;		/* (  0)	R4=0x1(  1) */
    5b9a:	3b e5 f2 07 	P3 = [FP + 0x1fc8];
    5b9e:	04 e1 00 00 	R4.L = 0x0;		/* (  0)	R4=0x0 <_AddRecordToResponseList>(  0) */
    5ba2:	10 5a       	P0 = P0 + P2;
    5ba4:	30 bf       	[SP + 0x30] = P0;
    5ba6:	e0 20       	JUMP.S 0x5d66 <_mDNSCoreReceiveRawTransportPacket+0x4de>;
    5ba8:	71 a3       	R1 = [SP + 0x34];
    5baa:	d8 a1       	R0 = [P3 + 0x1c];
    5bac:	08 08       	CC = R0 == R1;
    5bae:	da 14       	IF !CC JUMP 0x5d62 <_mDNSCoreReceiveRawTransportPacket+0x4da> (BP);
    5bb0:	98 e4 04 00 	R0 = B[P3 + 0x4] (Z);
    5bb4:	08 0c       	CC = R0 == 0x1;
    5bb6:	d6 1c       	IF CC JUMP 0x5d62 <_mDNSCoreReceiveRawTransportPacket+0x4da> (BP);
    5bb8:	32 60       	R2 = 0x6 (X);		/*		R2=0x6(  6) */
    5bba:	18 e4 19 00 	R0 = [P3 + 0x64];
    5bbe:	10 08       	CC = R0 == R2;
    5bc0:	d1 14       	IF !CC JUMP 0x5d62 <_mDNSCoreReceiveRawTransportPacket+0x4da> (BP);
    5bc2:	19 e4 1a 00 	R1 = [P3 + 0x68];
    5bc6:	a8 a0       	R0 = [P5 + 0x8];
    5bc8:	01 08       	CC = R1 == R0;
    5bca:	cc 14       	IF !CC JUMP 0x5d62 <_mDNSCoreReceiveRawTransportPacket+0x4da> (BP);
    5bcc:	19 e4 1b 00 	R1 = [P3 + 0x6c];
    5bd0:	e8 a0       	R0 = [P5 + 0xc];
    5bd2:	01 08       	CC = R1 == R0;
    5bd4:	c7 14       	IF !CC JUMP 0x5d62 <_mDNSCoreReceiveRawTransportPacket+0x4da> (BP);
    5bd6:	19 e4 1c 00 	R1 = [P3 + 0x70];
    5bda:	28 a1       	R0 = [P5 + 0x10];
    5bdc:	01 08       	CC = R1 == R0;
    5bde:	c2 14       	IF !CC JUMP 0x5d62 <_mDNSCoreReceiveRawTransportPacket+0x4da> (BP);
    5be0:	19 e4 1d 00 	R1 = [P3 + 0x74];
    5be4:	68 a1       	R0 = [P5 + 0x14];
    5be6:	01 08       	CC = R1 == R0;
    5be8:	bd 14       	IF !CC JUMP 0x5d62 <_mDNSCoreReceiveRawTransportPacket+0x4da> (BP);
    5bea:	07 0c       	CC = R7 == 0x0;
    5bec:	0c 1c       	IF CC JUMP 0x5c04 <_mDNSCoreReceiveRawTransportPacket+0x37c> (BP);
    5bee:	07 32       	P0 = R7;
    5bf0:	18 e4 15 00 	R0 = [P3 + 0x54];
    5bf4:	01 91       	R1 = [P0];
    5bf6:	01 08       	CC = R1 == R0;
    5bf8:	06 14       	IF !CC JUMP 0x5c04 <_mDNSCoreReceiveRawTransportPacket+0x37c> (BP);
    5bfa:	81 a4       	R1 = W[P0 + 0x4] (Z);
    5bfc:	58 e4 2c 00 	R0 = W[P3 + 0x58] (Z);
    5c00:	01 08       	CC = R1 == R0;
    5c02:	28 1c       	IF CC JUMP 0x5c52 <_mDNSCoreReceiveRawTransportPacket+0x3ca> (BP);
    5c04:	41 60       	R1 = 0x8 (X);		/*		R1=0x8(  8) */
    5c06:	98 e4 86 00 	R0 = B[P3 + 0x86] (Z);
    5c0a:	08 08       	CC = R0 == R1;
    5c0c:	28 18       	IF CC JUMP 0x5c5c <_mDNSCoreReceiveRawTransportPacket+0x3d4>;
    5c0e:	07 0c       	CC = R7 == 0x0;
    5c10:	0d 1c       	IF CC JUMP 0x5c2a <_mDNSCoreReceiveRawTransportPacket+0x3a2> (BP);
    5c12:	07 32       	P0 = R7;
    5c14:	0d 32       	P1 = R5;
    5c16:	01 91       	R1 = [P0];
    5c18:	08 e4 1b 05 	R0 = [P1 + 0x146c];
    5c1c:	01 08       	CC = R1 == R0;
    5c1e:	06 14       	IF !CC JUMP 0x5c2a <_mDNSCoreReceiveRawTransportPacket+0x3a2> (BP);
    5c20:	81 a4       	R1 = W[P0 + 0x4] (Z);
    5c22:	48 e4 38 0a 	R0 = W[P1 + 0x1470] (Z);
    5c26:	01 08       	CC = R1 == R0;
    5c28:	1f 18       	IF CC JUMP 0x5c66 <_mDNSCoreReceiveRawTransportPacket+0x3de>;
    5c2a:	44 0c       	CC = P4 == 0x0;
    5c2c:	22 18       	IF CC JUMP 0x5c70 <_mDNSCoreReceiveRawTransportPacket+0x3e8>;
    5c2e:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0x1918(6424) */
    5c32:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x1474 */
    5c36:	06 e1 84 01 	R6.L = 0x184;		/* (388)	R6=0x184(388) */
    5c3a:	61 a0       	R1 = [P4 + 0x4];
    5c3c:	20 91       	R0 = [P4];
    5c3e:	01 56       	R0 = R1 | R0;
    5c40:	a1 a0       	R1 = [P4 + 0x8];
    5c42:	08 56       	R0 = R0 | R1;
    5c44:	e1 a0       	R1 = [P4 + 0xc];
    5c46:	08 56       	R0 = R0 | R1;
    5c48:	00 0c       	CC = R0 == 0x0;
    5c4a:	0a e1 60 01 	P2.L = 0x160;		/* (352)	P2=0x160 */
    5c4e:	72 06       	IF !CC R6 = P2;
    5c50:	14 20       	JUMP.S 0x5c78 <_mDNSCoreReceiveRawTransportPacket+0x3f0>;
    5c52:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0x184(388) */
    5c56:	06 e1 f0 01 	R6.L = 0x1f0;		/* (496)	R6=0x1f0(496) */
    5c5a:	0f 20       	JUMP.S 0x5c78 <_mDNSCoreReceiveRawTransportPacket+0x3f0>;
    5c5c:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0x1f0(496) */
    5c60:	06 e1 cc 01 	R6.L = 0x1cc;		/* (460)	R6=0x1cc(460) */
    5c64:	0a 20       	JUMP.S 0x5c78 <_mDNSCoreReceiveRawTransportPacket+0x3f0>;
    5c66:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0x1cc(460) */
    5c6a:	06 e1 a8 01 	R6.L = 0x1a8;		/* (424)	R6=0x1a8(424) */
    5c6e:	05 20       	JUMP.S 0x5c78 <_mDNSCoreReceiveRawTransportPacket+0x3f0>;
    5c70:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0x1a8(424) */
    5c74:	06 e1 60 01 	R6.L = 0x160;		/* (352)	R6=0x160(352) */
    5c78:	04 32       	P0 = R4;
    5c7a:	00 91       	R0 = [P0];
    5c7c:	00 0c       	CC = R0 == 0x0;
    5c7e:	20 1c       	IF CC JUMP 0x5cbe <_mDNSCoreReceiveRawTransportPacket+0x436> (BP);
    5c80:	59 a2       	R1 = [P3 + 0x24];
    5c82:	43 30       	R0 = P3;
    5c84:	57 30       	R2 = FP;
    5c86:	21 64       	R1 += 0x4;		/* (  4) */
    5c88:	ba 65       	R2 += 0x37;		/* ( 55) */
    5c8a:	20 64       	R0 += 0x4;		/* (  4) */
    5c8c:	ff e3 ba d1 	CALL 0x0 <_AddRecordToResponseList>;
    5c90:	2a e1 4c 00 	P2 = 0x4c (X);		/*		P2=0x4c( 76) */
    5c94:	93 5a       	P2 = P3 + P2;
    5c96:	4d 30       	R1 = P5;
    5c98:	41 64       	R1 += 0x8;		/* (  8) */
    5c9a:	f2 bd       	[SP + 0x1c] = P2;
    5c9c:	b1 b1       	[SP + 0x18] = R1;
    5c9e:	2a e1 54 00 	P2 = 0x54 (X);		/*		P2=0x54( 84) */
    5ca2:	93 5a       	P2 = P3 + P2;
    5ca4:	70 b2       	[SP + 0x24] = R0;
    5ca6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x8(  8) */
    5caa:	f6 b0       	[SP + 0xc] = R6;
    5cac:	37 b1       	[SP + 0x10] = R7;
    5cae:	74 bd       	[SP + 0x14] = P4;
    5cb0:	32 be       	[SP + 0x20] = P2;
    5cb2:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    5cb4:	01 e1 d8 1a 	R1.L = 0x1ad8;		/* (6872)	R1=0x1ad8(6872) */
    5cb8:	32 a3       	R2 = [SP + 0x30];
    5cba:	ff e3 a3 d1 	CALL 0x0 <_AddRecordToResponseList>;
    5cbe:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x2(  2) */
    5cc2:	00 e1 f0 01 	R0.L = 0x1f0;		/* (496)	R0=0x1f0(496) */
    5cc6:	06 08       	CC = R6 == R0;
    5cc8:	06 14       	IF !CC JUMP 0x5cd4 <_mDNSCoreReceiveRawTransportPacket+0x44c> (BP);
    5cca:	47 30       	R0 = FP;
    5ccc:	4b 30       	R1 = P3;
    5cce:	ff e3 ab d5 	CALL 0x824 <_RestartARPProbing>;
    5cd2:	48 20       	JUMP.S 0x5d62 <_mDNSCoreReceiveRawTransportPacket+0x4da>;
    5cd4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1ad8(6872) */
    5cd8:	01 e1 a8 01 	R1.L = 0x1a8;		/* (424)	R1=0x1a8(424) */
    5cdc:	0e 08       	CC = R6 == R1;
    5cde:	12 14       	IF !CC JUMP 0x5d02 <_mDNSCoreReceiveRawTransportPacket+0x47a> (BP);
    5ce0:	78 a0       	R0 = [FP + 0x4];
    5ce2:	00 48       	CC = !BITTST (R0, 0x0);		/* bit  0 */
    5ce4:	3f 14       	IF !CC JUMP 0x5d62 <_mDNSCoreReceiveRawTransportPacket+0x4da> (BP);
    5ce6:	2a e1 64 00 	P2 = 0x64 (X);		/*		P2=0x64(100) */
    5cea:	93 5a       	P2 = P3 + P2;
    5cec:	70 af       	P0 = [SP + 0x34];
    5cee:	4a 30       	R1 = P2;
    5cf0:	2a e1 54 00 	P2 = 0x54 (X);		/*		P2=0x54( 84) */
    5cf4:	93 5a       	P2 = P3 + P2;
    5cf6:	52 30       	R2 = P2;
    5cf8:	f0 bc       	[SP + 0xc] = P0;
    5cfa:	47 30       	R0 = FP;
    5cfc:	ff e3 82 d1 	CALL 0x0 <_AddRecordToResponseList>;
    5d00:	31 20       	JUMP.S 0x5d62 <_mDNSCoreReceiveRawTransportPacket+0x4da>;
    5d02:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x1f0(496) */
    5d06:	00 e1 84 01 	R0.L = 0x184;		/* (388)	R0=0x184(388) */
    5d0a:	06 08       	CC = R6 == R0;
    5d0c:	0f 14       	IF !CC JUMP 0x5d2a <_mDNSCoreReceiveRawTransportPacket+0x4a2> (BP);
    5d0e:	45 30       	R0 = P5;
    5d10:	40 64       	R0 += 0x8;		/* (  8) */
    5d12:	30 b1       	[SP + 0x10] = R0;
    5d14:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5d16:	70 b1       	[SP + 0x14] = R0;
    5d18:	f3 bc       	[SP + 0xc] = P3;
    5d1a:	b4 bd       	[SP + 0x18] = P4;
    5d1c:	f7 b1       	[SP + 0x1c] = R7;
    5d1e:	47 30       	R0 = FP;
    5d20:	21 e1 88 ff 	R1 = -0x78 (X);		/*		R1=0xffffff88(-120) */
    5d24:	22 e1 40 00 	R2 = 0x40 (X);		/*		R2=0x40( 64) */
    5d28:	1b 20       	JUMP.S 0x5d5e <_mDNSCoreReceiveRawTransportPacket+0x4d6>;
    5d2a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xff88(65416) */
    5d2e:	01 e1 60 01 	R1.L = 0x160;		/* (352)	R1=0x160(352) */
    5d32:	0e 08       	CC = R6 == R1;
    5d34:	17 14       	IF !CC JUMP 0x5d62 <_mDNSCoreReceiveRawTransportPacket+0x4da> (BP);
    5d36:	45 30       	R0 = P5;
    5d38:	40 64       	R0 += 0x8;		/* (  8) */
    5d3a:	30 b1       	[SP + 0x10] = R0;
    5d3c:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x40( 64) */
    5d40:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5d42:	02 e1 00 00 	R2.L = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    5d46:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0x9e4 */
    5d4a:	70 b1       	[SP + 0x14] = R0;
    5d4c:	b2 b1       	[SP + 0x18] = R2;
    5d4e:	08 e1 00 00 	P0.L = 0x0;		/* (  0)	P0=0x0 <_AddRecordToResponseList> */
    5d52:	f3 bc       	[SP + 0xc] = P3;
    5d54:	f0 bd       	[SP + 0x1c] = P0;
    5d56:	47 30       	R0 = FP;
    5d58:	21 e1 88 ff 	R1 = -0x78 (X);		/*		R1=0xffffff88(-120) */
    5d5c:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    5d5e:	ff e3 ff de 	CALL 0x1b5c <_SendNDP>;
    5d62:	00 00       	NOP;
    5d64:	5b 91       	P3 = [P3];
    5d66:	43 0c       	CC = P3 == 0x0;
    5d68:	20 17       	IF !CC JUMP 0x5ba8 <_mDNSCoreReceiveRawTransportPacket+0x320> (BP);
    5d6a:	0f 32       	P1 = R7;
    5d6c:	15 32       	P2 = R5;
    5d6e:	09 91       	R1 = [P1];
    5d70:	10 e4 1b 05 	R0 = [P2 + 0x146c];
    5d74:	01 08       	CC = R1 == R0;
    5d76:	06 14       	IF !CC JUMP 0x5d82 <_mDNSCoreReceiveRawTransportPacket+0x4fa> (BP);
    5d78:	89 a4       	R1 = W[P1 + 0x4] (Z);
    5d7a:	50 e4 38 0a 	R0 = W[P2 + 0x1470] (Z);
    5d7e:	01 08       	CC = R1 == R0;
    5d80:	a7 18       	IF CC JUMP 0x5ece <_mDNSCoreReceiveRawTransportPacket+0x646>;
    5d82:	21 e1 88 00 	R1 = 0x88 (X);		/*		R1=0x88 <_CheckSum>(136) */
    5d86:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x54 */
    5d8a:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    5d8e:	28 99       	R0 = B[P5] (Z);
    5d90:	08 08       	CC = R0 == R1;
    5d92:	45 30       	R0 = P5;
    5d94:	40 64       	R0 += 0x8;		/* (  8) */
    5d96:	a0 07       	IF CC P4 = R0;
    5d98:	21 91       	R1 = [P4];
    5d9a:	10 91       	R0 = [P2];
    5d9c:	01 08       	CC = R1 == R0;
    5d9e:	0d 14       	IF !CC JUMP 0x5db8 <_mDNSCoreReceiveRawTransportPacket+0x530> (BP);
    5da0:	61 a0       	R1 = [P4 + 0x4];
    5da2:	50 a0       	R0 = [P2 + 0x4];
    5da4:	01 08       	CC = R1 == R0;
    5da6:	09 14       	IF !CC JUMP 0x5db8 <_mDNSCoreReceiveRawTransportPacket+0x530> (BP);
    5da8:	a1 a0       	R1 = [P4 + 0x8];
    5daa:	90 a0       	R0 = [P2 + 0x8];
    5dac:	01 08       	CC = R1 == R0;
    5dae:	05 14       	IF !CC JUMP 0x5db8 <_mDNSCoreReceiveRawTransportPacket+0x530> (BP);
    5db0:	e1 a0       	R1 = [P4 + 0xc];
    5db2:	d0 a0       	R0 = [P2 + 0xc];
    5db4:	01 08       	CC = R1 == R0;
    5db6:	8c 18       	IF CC JUMP 0x5ece <_mDNSCoreReceiveRawTransportPacket+0x646>;
    5db8:	05 32       	P0 = R5;
    5dba:	57 30       	R2 = FP;
    5dbc:	2a e1 74 14 	P2 = 0x1474 (X);		/*		P2=0x1474(5236) */
    5dc0:	ba 65       	R2 += 0x37;		/* ( 55) */
    5dc2:	6d 30       	R5 = P5;
    5dc4:	10 5a       	P0 = P0 + P2;
    5dc6:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0x160(352) */
    5dca:	3b e5 f2 07 	P3 = [FP + 0x1fc8];
    5dce:	32 b3       	[SP + 0x30] = R2;
    5dd0:	b0 bf       	[SP + 0x38] = P0;
    5dd2:	45 64       	R5 += 0x8;		/* (  8) */
    5dd4:	06 e1 00 00 	R6.L = 0x0;		/* (  0)	R6=0x0 <_AddRecordToResponseList>(  0) */
    5dd8:	79 20       	JUMP.S 0x5eca <_mDNSCoreReceiveRawTransportPacket+0x642>;
    5dda:	71 a3       	R1 = [SP + 0x34];
    5ddc:	d8 a1       	R0 = [P3 + 0x1c];
    5dde:	08 08       	CC = R0 == R1;
    5de0:	73 14       	IF !CC JUMP 0x5ec6 <_mDNSCoreReceiveRawTransportPacket+0x63e> (BP);
    5de2:	98 e4 04 00 	R0 = B[P3 + 0x4] (Z);
    5de6:	08 0c       	CC = R0 == 0x1;
    5de8:	6f 1c       	IF CC JUMP 0x5ec6 <_mDNSCoreReceiveRawTransportPacket+0x63e> (BP);
    5dea:	32 60       	R2 = 0x6 (X);		/*		R2=0x6(  6) */
    5dec:	18 e4 19 00 	R0 = [P3 + 0x64];
    5df0:	10 08       	CC = R0 == R2;
    5df2:	6a 14       	IF !CC JUMP 0x5ec6 <_mDNSCoreReceiveRawTransportPacket+0x63e> (BP);
    5df4:	19 e4 1a 00 	R1 = [P3 + 0x68];
    5df8:	20 91       	R0 = [P4];
    5dfa:	01 08       	CC = R1 == R0;
    5dfc:	65 14       	IF !CC JUMP 0x5ec6 <_mDNSCoreReceiveRawTransportPacket+0x63e> (BP);
    5dfe:	19 e4 1b 00 	R1 = [P3 + 0x6c];
    5e02:	60 a0       	R0 = [P4 + 0x4];
    5e04:	01 08       	CC = R1 == R0;
    5e06:	60 14       	IF !CC JUMP 0x5ec6 <_mDNSCoreReceiveRawTransportPacket+0x63e> (BP);
    5e08:	19 e4 1c 00 	R1 = [P3 + 0x70];
    5e0c:	a0 a0       	R0 = [P4 + 0x8];
    5e0e:	01 08       	CC = R1 == R0;
    5e10:	5b 14       	IF !CC JUMP 0x5ec6 <_mDNSCoreReceiveRawTransportPacket+0x63e> (BP);
    5e12:	19 e4 1d 00 	R1 = [P3 + 0x74];
    5e16:	e0 a0       	R0 = [P4 + 0xc];
    5e18:	01 08       	CC = R1 == R0;
    5e1a:	56 14       	IF !CC JUMP 0x5ec6 <_mDNSCoreReceiveRawTransportPacket+0x63e> (BP);
    5e1c:	47 30       	R0 = FP;
    5e1e:	4b 30       	R1 = P3;
    5e20:	ff e3 02 d5 	CALL 0x824 <_RestartARPProbing>;
    5e24:	07 32       	P0 = R7;
    5e26:	18 e4 15 00 	R0 = [P3 + 0x54];
    5e2a:	01 91       	R1 = [P0];
    5e2c:	01 08       	CC = R1 == R0;
    5e2e:	2c 14       	IF !CC JUMP 0x5e86 <_mDNSCoreReceiveRawTransportPacket+0x5fe> (BP);
    5e30:	81 a4       	R1 = W[P0 + 0x4] (Z);
    5e32:	58 e4 2c 00 	R0 = W[P3 + 0x58] (Z);
    5e36:	01 08       	CC = R1 == R0;
    5e38:	27 14       	IF !CC JUMP 0x5e86 <_mDNSCoreReceiveRawTransportPacket+0x5fe> (BP);
    5e3a:	0e 32       	P1 = R6;
    5e3c:	08 91       	R0 = [P1];
    5e3e:	00 0c       	CC = R0 == 0x0;
    5e40:	43 1c       	IF CC JUMP 0x5ec6 <_mDNSCoreReceiveRawTransportPacket+0x63e> (BP);
    5e42:	28 99       	R0 = B[P5] (Z);
    5e44:	21 e1 87 00 	R1 = 0x87 (X);		/*		R1=0x87(135) */
    5e48:	44 e1 00 00 	R4.H = 0x0;		/* (  0)	R4=0x0 <_AddRecordToResponseList>(  0) */
    5e4c:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x6(  6) */
    5e50:	08 08       	CC = R0 == R1;
    5e52:	02 e1 2c 1a 	R2.L = 0x1a2c;		/* (6700)	R2=0x1a2c(6700) */
    5e56:	04 e1 1c 1a 	R4.L = 0x1a1c;		/* (6684)	R4=0x1a1c(6684) */
    5e5a:	22 06       	IF !CC R4 = R2;
    5e5c:	59 a2       	R1 = [P3 + 0x24];
    5e5e:	43 30       	R0 = P3;
    5e60:	32 a3       	R2 = [SP + 0x30];
    5e62:	21 64       	R1 += 0x4;		/* (  4) */
    5e64:	20 64       	R0 += 0x4;		/* (  4) */
    5e66:	ff e3 cd d0 	CALL 0x0 <_AddRecordToResponseList>;
    5e6a:	f0 b1       	[SP + 0x1c] = R0;
    5e6c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x87(135) */
    5e70:	f4 b0       	[SP + 0xc] = R4;
    5e72:	37 b1       	[SP + 0x10] = R7;
    5e74:	74 bd       	[SP + 0x14] = P4;
    5e76:	b5 b1       	[SP + 0x18] = R5;
    5e78:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    5e7a:	01 e1 14 1b 	R1.L = 0x1b14;		/* (6932)	R1=0x1b14(6932) */
    5e7e:	b2 a3       	R2 = [SP + 0x38];
    5e80:	ff e3 c0 d0 	CALL 0x0 <_AddRecordToResponseList>;
    5e84:	21 20       	JUMP.S 0x5ec6 <_mDNSCoreReceiveRawTransportPacket+0x63e>;
    5e86:	43 30       	R0 = P3;
    5e88:	21 e1 4c 00 	R1 = 0x4c (X);		/*		R1=0x4c( 76) */
    5e8c:	08 51       	R4 = R0 + R1;
    5e8e:	59 a2       	R1 = [P3 + 0x24];
    5e90:	21 64       	R1 += 0x4;		/* (  4) */
    5e92:	32 a3       	R2 = [SP + 0x30];
    5e94:	20 64       	R0 += 0x4;		/* (  4) */
    5e96:	ff e3 b5 d0 	CALL 0x0 <_AddRecordToResponseList>;
    5e9a:	28 e1 54 00 	P0 = 0x54 (X);		/*		P0=0x54( 84) */
    5e9e:	83 5a       	P2 = P3 + P0;
    5ea0:	30 b2       	[SP + 0x20] = R0;
    5ea2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4c( 76) */
    5ea6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5ea8:	01 e1 60 1b 	R1.L = 0x1b60;		/* (7008)	R1=0x1b60(7008) */
    5eac:	b2 a3       	R2 = [SP + 0x38];
    5eae:	f7 b0       	[SP + 0xc] = R7;
    5eb0:	34 bd       	[SP + 0x10] = P4;
    5eb2:	75 b1       	[SP + 0x14] = R5;
    5eb4:	b4 b1       	[SP + 0x18] = R4;
    5eb6:	f2 bd       	[SP + 0x1c] = P2;
    5eb8:	ff e3 a4 d0 	CALL 0x0 <_AddRecordToResponseList>;
    5ebc:	d9 a1       	R1 = [P3 + 0x1c];
    5ebe:	47 30       	R0 = FP;
    5ec0:	14 30       	R2 = R4;
    5ec2:	ff e3 bd fc 	CALL 0x583c <_ScheduleWakeup>;
    5ec6:	00 00       	NOP;
    5ec8:	5b 91       	P3 = [P3];
    5eca:	43 0c       	CC = P3 == 0x0;
    5ecc:	87 17       	IF !CC JUMP 0x5dda <_mDNSCoreReceiveRawTransportPacket+0x552> (BP);
    5ece:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1b60(7008) */
    5ed2:	47 30       	R0 = FP;
    5ed4:	01 e1 14 02 	R1.L = 0x214;		/* (532)	R1=0x214(532) */
    5ed8:	ff 20       	JUMP.S 0x60d6 <_mDNSCoreReceiveRawTransportPacket+0x84e>;
    5eda:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x1474 */
    5ede:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    5ee2:	10 91       	R0 = [P2];
    5ee4:	00 0c       	CC = R0 == 0x0;
    5ee6:	11 1d       	IF CC JUMP 0x6108 <_mDNSCoreReceiveRawTransportPacket+0x880> (BP);
    5ee8:	a8 e4 02 00 	R0 = B[P5 + 0x2] (Z);
    5eec:	30 e6 1b 00 	[SP + 0x6c] = R0;
    5ef0:	a8 e4 03 00 	R0 = B[P5 + 0x3] (Z);
    5ef4:	30 e6 1c 00 	[SP + 0x70] = R0;
    5ef8:	34 e6 1d 00 	[SP + 0x74] = R4;
    5efc:	33 e7 1e 00 	[SP + 0x78] = P3;
    5f00:	e6 6d       	SP += 0x3c;		/* ( 60) */
    5f02:	77 90       	FP = [SP++];
    5f04:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x214(532) */
    5f08:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    5f0a:	01 e1 b4 1b 	R1.L = 0x1bb4;		/* (7092)	R1=0x1bb4(7092) */
    5f0e:	27 01       	RETS = [SP++];
    5f10:	a3 05       	(R7:4, P5:3) = [SP++];
    5f12:	ff e2 77 d0 	JUMP.L 0x0 <_AddRecordToResponseList>;
    5f16:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    5f1a:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    5f1e:	10 91       	R0 = [P2];
    5f20:	00 0c       	CC = R0 == 0x0;
    5f22:	f3 1c       	IF CC JUMP 0x6108 <_mDNSCoreReceiveRawTransportPacket+0x880> (BP);
    5f24:	44 30       	R0 = P4;
    5f26:	85 52       	R2 = R5 - R0;
    5f28:	b0 e4 30 00 	R0 = B[SP + 0x30] (Z);
    5f2c:	30 e6 1b 00 	[SP + 0x6c] = R0;
    5f30:	34 e6 1c 00 	[SP + 0x70] = R4;
    5f34:	33 e7 1d 00 	[SP + 0x74] = P3;
    5f38:	e6 6d       	SP += 0x3c;		/* ( 60) */
    5f3a:	77 90       	FP = [SP++];
    5f3c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1bb4(7092) */
    5f40:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    5f42:	01 e1 e4 1b 	R1.L = 0x1be4;		/* (7140)	R1=0x1be4(7140) */
    5f46:	27 01       	RETS = [SP++];
    5f48:	a3 05       	(R7:4, P5:3) = [SP++];
    5f4a:	ff e2 5b d0 	JUMP.L 0x0 <_AddRecordToResponseList>;
    5f4e:	07 0c       	CC = R7 == 0x0;
    5f50:	dc 18       	IF CC JUMP 0x6108 <_mDNSCoreReceiveRawTransportPacket+0x880>;
    5f52:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1be4(7140) */
    5f56:	47 30       	R0 = FP;
    5f58:	01 e1 3c 01 	R1.L = 0x13c;		/* (316)	R1=0x13c(316) */
    5f5c:	ff e3 52 d0 	CALL 0x0 <_AddRecordToResponseList>;
    5f60:	b0 e4 30 00 	R0 = B[SP + 0x30] (Z);
    5f64:	31 60       	R1 = 0x6 (X);		/*		R1=0x6(  6) */
    5f66:	f7 42       	R7 = R6.L (Z);
    5f68:	08 08       	CC = R0 == R1;
    5f6a:	76 43       	R6 = R6.B (Z);
    5f6c:	01 02       	R1 = CC;
    5f6e:	46 4f       	R6 <<= 0x8;
    5f70:	82 c6 c7 8b 	R5 = R7 >> 0x8;
    5f74:	3d e5 f2 07 	P5 = [FP + 0x1fc8];
    5f78:	b1 e6 30 00 	B[SP + 0x30] = R1;
    5f7c:	75 57       	R5 = R5 | R6;
    5f7e:	a5 20       	JUMP.S 0x60c8 <_mDNSCoreReceiveRawTransportPacket+0x840>;
    5f80:	72 a3       	R2 = [SP + 0x34];
    5f82:	e8 a1       	R0 = [P5 + 0x1c];
    5f84:	10 08       	CC = R0 == R2;
    5f86:	9f 14       	IF !CC JUMP 0x60c4 <_mDNSCoreReceiveRawTransportPacket+0x83c> (BP);
    5f88:	a8 e4 04 00 	R0 = B[P5 + 0x4] (Z);
    5f8c:	08 0c       	CC = R0 == 0x1;
    5f8e:	9b 1c       	IF CC JUMP 0x60c4 <_mDNSCoreReceiveRawTransportPacket+0x83c> (BP);
    5f90:	28 e4 19 00 	R0 = [P5 + 0x64];
    5f94:	00 0c       	CC = R0 == 0x0;
    5f96:	97 1c       	IF CC JUMP 0x60c4 <_mDNSCoreReceiveRawTransportPacket+0x83c> (BP);
    5f98:	2a e1 64 00 	P2 = 0x64 (X);		/*		P2=0x64(100) */
    5f9c:	95 5a       	P2 = P5 + P2;
    5f9e:	42 30       	R0 = P2;
    5fa0:	4b 30       	R1 = P3;
    5fa2:	ff e3 2f d0 	CALL 0x0 <_AddRecordToResponseList>;
    5fa6:	00 0c       	CC = R0 == 0x0;
    5fa8:	8e 1c       	IF CC JUMP 0x60c4 <_mDNSCoreReceiveRawTransportPacket+0x83c> (BP);
    5faa:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x2(  2) */
    5fae:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0x0 <_AddRecordToResponseList>(  0) */
    5fb2:	b1 e4 30 00 	R1 = B[SP + 0x30] (Z);
    5fb6:	00 e1 24 1c 	R0.L = 0x1c24;		/* (7204)	R0=0x1c24(7204) */
    5fba:	06 e1 48 13 	R6.L = 0x1348;		/* (4936)	R6=0x1348(4936) */
    5fbe:	09 02       	CC = R1;
    5fc0:	30 07       	IF CC R6 = R0;
    5fc2:	3c e5 f2 07 	P4 = [FP + 0x1fc8];
    5fc6:	41 20       	JUMP.S 0x6048 <_mDNSCoreReceiveRawTransportPacket+0x7c0>;
    5fc8:	72 a3       	R2 = [SP + 0x34];
    5fca:	e0 a1       	R0 = [P4 + 0x1c];
    5fcc:	10 08       	CC = R0 == R2;
    5fce:	3b 14       	IF !CC JUMP 0x6044 <_mDNSCoreReceiveRawTransportPacket+0x7bc> (BP);
    5fd0:	21 e4 13 00 	R1 = [P4 + 0x4c];
    5fd4:	28 e4 13 00 	R0 = [P5 + 0x4c];
    5fd8:	01 08       	CC = R1 == R0;
    5fda:	35 14       	IF !CC JUMP 0x6044 <_mDNSCoreReceiveRawTransportPacket+0x7bc> (BP);
    5fdc:	61 e4 28 00 	R1 = W[P4 + 0x50] (Z);
    5fe0:	68 e4 28 00 	R0 = W[P5 + 0x50] (Z);
    5fe4:	01 08       	CC = R1 == R0;
    5fe6:	2f 14       	IF !CC JUMP 0x6044 <_mDNSCoreReceiveRawTransportPacket+0x7bc> (BP);
    5fe8:	a0 e4 04 00 	R0 = B[P4 + 0x4] (Z);
    5fec:	08 0c       	CC = R0 == 0x1;
    5fee:	2b 1c       	IF CC JUMP 0x6044 <_mDNSCoreReceiveRawTransportPacket+0x7bc> (BP);
    5ff0:	09 61       	R1 = 0x21 (X);		/*		R1=0x21( 33) */
    5ff2:	e0 a4       	R0 = W[P4 + 0x6] (Z);
    5ff4:	08 08       	CC = R0 == R1;
    5ff6:	27 14       	IF !CC JUMP 0x6044 <_mDNSCoreReceiveRawTransportPacket+0x7bc> (BP);
    5ff8:	62 ae       	P2 = [P4 + 0x24];
    5ffa:	10 a5       	R0 = W[P2 + 0x8] (Z);
    5ffc:	38 08       	CC = R0 == R7;
    5ffe:	23 14       	IF !CC JUMP 0x6044 <_mDNSCoreReceiveRawTransportPacket+0x7bc> (BP);
    6000:	22 ae       	P2 = [P4 + 0x20];
    6002:	50 99       	R0 = B[P2] (X);
    6004:	41 43       	R1 = R0.B (Z);
    6006:	01 0c       	CC = R1 == 0x0;
    6008:	04 1c       	IF CC JUMP 0x6010 <_mDNSCoreReceiveRawTransportPacket+0x788> (BP);
    600a:	09 32       	P1 = R1;
    600c:	09 6c       	P1 += 0x1;		/* (  1) */
    600e:	02 20       	JUMP.S 0x6012 <_mDNSCoreReceiveRawTransportPacket+0x78a>;
    6010:	01 68       	P1 = 0x0 (X);		/*		P1=0x0(  0) */
    6012:	0a 5a       	P0 = P2 + P1;
    6014:	01 99       	R1 = B[P0] (Z);
    6016:	01 0c       	CC = R1 == 0x0;
    6018:	0c 1c       	IF CC JUMP 0x6030 <_mDNSCoreReceiveRawTransportPacket+0x7a8> (BP);
    601a:	40 43       	R0 = R0.B (Z);
    601c:	00 0c       	CC = R0 == 0x0;
    601e:	04 1c       	IF CC JUMP 0x6026 <_mDNSCoreReceiveRawTransportPacket+0x79e> (BP);
    6020:	00 32       	P0 = R0;
    6022:	08 6c       	P0 += 0x1;		/* (  1) */
    6024:	02 20       	JUMP.S 0x6028 <_mDNSCoreReceiveRawTransportPacket+0x7a0>;
    6026:	00 68       	P0 = 0x0 (X);		/*		P0=0x0(  0) */
    6028:	02 5a       	P0 = P2 + P0;
    602a:	00 99       	R0 = B[P0] (Z);
    602c:	08 64       	R0 += 0x1;		/* (  1) */
    602e:	02 20       	JUMP.S 0x6032 <_mDNSCoreReceiveRawTransportPacket+0x7aa>;
    6030:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    6032:	00 32       	P0 = R0;
    6034:	0e 30       	R1 = R6;
    6036:	48 5a       	P1 = P0 + P1;
    6038:	4a 5a       	P1 = P2 + P1;
    603a:	41 30       	R0 = P1;
    603c:	ff e3 e2 cf 	CALL 0x0 <_AddRecordToResponseList>;
    6040:	00 0c       	CC = R0 == 0x0;
    6042:	07 14       	IF !CC JUMP 0x6050 <_mDNSCoreReceiveRawTransportPacket+0x7c8> (BP);
    6044:	00 00       	NOP;
    6046:	64 91       	P4 = [P4];
    6048:	44 0c       	CC = P4 == 0x0;
    604a:	bf 17       	IF !CC JUMP 0x5fc8 <_mDNSCoreReceiveRawTransportPacket+0x740> (BP);
    604c:	4b 20       	JUMP.S 0x60e2 <_mDNSCoreReceiveRawTransportPacket+0x85a>;
    604e:	65 32       	P4 = P5;
    6050:	00 00       	NOP;
    6052:	e9 a1       	R1 = [P5 + 0x1c];
    6054:	47 30       	R0 = FP;
    6056:	ff e3 c3 e3 	CALL 0x27dc <_InterfaceNameForID>;
    605a:	20 30       	R4 = R0;
    605c:	2a e1 4c 00 	P2 = 0x4c (X);		/*		P2=0x4c( 76) */
    6060:	95 5a       	P2 = P5 + P2;
    6062:	61 a2       	R1 = [P4 + 0x24];
    6064:	44 30       	R0 = P4;
    6066:	57 30       	R2 = FP;
    6068:	72 30       	R6 = P2;
    606a:	21 64       	R1 += 0x4;		/* (  4) */
    606c:	ba 65       	R2 += 0x37;		/* ( 55) */
    606e:	20 64       	R0 += 0x4;		/* (  4) */
    6070:	ff e3 c8 cf 	CALL 0x0 <_AddRecordToResponseList>;
    6074:	2a e1 54 00 	P2 = 0x54 (X);		/*		P2=0x54( 84) */
    6078:	95 5a       	P2 = P5 + P2;
    607a:	b0 b1       	[SP + 0x18] = R0;
    607c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x21( 33) */
    6080:	14 30       	R2 = R4;
    6082:	f3 bc       	[SP + 0xc] = P3;
    6084:	36 b1       	[SP + 0x10] = R6;
    6086:	72 bd       	[SP + 0x14] = P2;
    6088:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    608a:	01 e1 2c 1c 	R1.L = 0x1c2c;		/* (7212)	R1=0x1c2c(7212) */
    608e:	ff e3 b9 cf 	CALL 0x0 <_AddRecordToResponseList>;
    6092:	e9 a1       	R1 = [P5 + 0x1c];
    6094:	47 30       	R0 = FP;
    6096:	16 30       	R2 = R6;
    6098:	ff e3 d2 fb 	CALL 0x583c <_ScheduleWakeup>;
    609c:	14 20       	JUMP.S 0x60c4 <_mDNSCoreReceiveRawTransportPacket+0x83c>;
    609e:	e9 a1       	R1 = [P5 + 0x1c];
    60a0:	47 30       	R0 = FP;
    60a2:	ff e3 9d e3 	CALL 0x27dc <_InterfaceNameForID>;
    60a6:	2a e1 4c 00 	P2 = 0x4c (X);		/*		P2=0x4c( 76) */
    60aa:	10 30       	R2 = R0;
    60ac:	95 5a       	P2 = P5 + P2;
    60ae:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1c2c(7212) */
    60b2:	f3 bc       	[SP + 0xc] = P3;
    60b4:	32 bd       	[SP + 0x10] = P2;
    60b6:	76 b1       	[SP + 0x14] = R6;
    60b8:	b5 b1       	[SP + 0x18] = R5;
    60ba:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    60bc:	01 e1 60 1c 	R1.L = 0x1c60;		/* (7264)	R1=0x1c60(7264) */
    60c0:	ff e3 a0 cf 	CALL 0x0 <_AddRecordToResponseList>;
    60c4:	00 00       	NOP;
    60c6:	6d 91       	P5 = [P5];
    60c8:	45 0c       	CC = P5 == 0x0;
    60ca:	5b 17       	IF !CC JUMP 0x5f80 <_mDNSCoreReceiveRawTransportPacket+0x6f8> (BP);
    60cc:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1c60(7264) */
    60d0:	47 30       	R0 = FP;
    60d2:	01 e1 3c 01 	R1.L = 0x13c;		/* (316)	R1=0x13c(316) */
    60d6:	e6 6d       	SP += 0x3c;		/* ( 60) */
    60d8:	77 90       	FP = [SP++];
    60da:	27 01       	RETS = [SP++];
    60dc:	a3 05       	(R7:4, P5:3) = [SP++];
    60de:	ff e2 91 cf 	JUMP.L 0x0 <_AddRecordToResponseList>;
    60e2:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x4c */
    60e6:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    60ea:	10 95       	R0 = W[P2] (Z);
    60ec:	07 08       	CC = R7 == R0;
    60ee:	b0 1b       	IF CC JUMP 0x604e <_mDNSCoreReceiveRawTransportPacket+0x7c6>;
    60f0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    60f4:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    60f8:	10 91       	R0 = [P2];
    60fa:	00 0c       	CC = R0 == 0x0;
    60fc:	e4 1f       	IF CC JUMP 0x60c4 <_mDNSCoreReceiveRawTransportPacket+0x83c> (BP);
    60fe:	d0 2f       	JUMP.S 0x609e <_mDNSCoreReceiveRawTransportPacket+0x816>;
    6100:	2a e1 c0 00 	P2 = 0xc0 (X);		/*		P2=0xc0(192) */
    6104:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    6106:	9c 2c       	JUMP.S 0x5a3e <_mDNSCoreReceiveRawTransportPacket+0x1b6>;
    6108:	e6 6d       	SP += 0x3c;		/* ( 60) */
    610a:	77 90       	FP = [SP++];
    610c:	27 01       	RETS = [SP++];
    610e:	a3 05       	(R7:4, P5:3) = [SP++];
    6110:	10 00       	RTS;
	...

00006114 <_SPSRecordCallback>:
_SPSRecordCallback():
    6114:	fb 05       	[--SP] = (R7:7, P5:3);
    6116:	67 01       	[--SP] = RETS;
    6118:	66 6f       	SP += -0x14;		/* (-20) */
    611a:	20 32       	P4 = R0;
    611c:	29 32       	P5 = R1;
    611e:	3a 30       	R7 = R2;
    6120:	02 0c       	CC = R2 == 0x0;
    6122:	6e 1c       	IF CC JUMP 0x61fe <_SPSRecordCallback+0xea> (BP);
    6124:	20 e1 ff fe 	R0 = -0x101 (X);		/*		R0=0xfffffeff(-257) */
    6128:	40 4f       	R0 <<= 0x8;
    612a:	02 08       	CC = R2 == R0;
    612c:	5b 18       	IF CC JUMP 0x61e2 <_SPSRecordCallback+0xce>;
    612e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0xc0 */
    6132:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    6136:	10 91       	R0 = [P2];
    6138:	00 0c       	CC = R0 == 0x0;
    613a:	12 1c       	IF CC JUMP 0x615e <_SPSRecordCallback+0x4a> (BP);
    613c:	01 30       	R0 = R1;
    613e:	69 a2       	R1 = [P5 + 0x24];
    6140:	54 30       	R2 = P4;
    6142:	21 64       	R1 += 0x4;		/* (  4) */
    6144:	ba 65       	R2 += 0x37;		/* ( 55) */
    6146:	20 64       	R0 += 0x4;		/* (  4) */
    6148:	ff e3 5c cf 	CALL 0x0 <_AddRecordToResponseList>;
    614c:	f0 b0       	[SP + 0xc] = R0;
    614e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x13c(316) */
    6152:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    6154:	01 e1 98 1c 	R1.L = 0x1c98;		/* (7320)	R1=0x1c98(7320) */
    6158:	17 30       	R2 = R7;
    615a:	ff e3 53 cf 	CALL 0x0 <_AddRecordToResponseList>;
    615e:	20 e1 fd bf 	R0 = -0x4003 (X);		/*		R0=0xffffbffd(-16387) */
    6162:	10 4f       	R0 <<= 0x2;
    6164:	07 08       	CC = R7 == R0;
    6166:	4c 14       	IF !CC JUMP 0x61fe <_SPSRecordCallback+0xea> (BP);
    6168:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1c98(7320) */
    616c:	44 30       	R0 = P4;
    616e:	01 e1 48 04 	R1.L = 0x448;		/* (1096)	R1=0x448(1096) */
    6172:	ff e3 47 cf 	CALL 0x0 <_AddRecordToResponseList>;
    6176:	e9 a1       	R1 = [P5 + 0x1c];
    6178:	44 30       	R0 = P4;
    617a:	ff e3 31 e3 	CALL 0x27dc <_InterfaceNameForID>;
    617e:	38 30       	R7 = R0;
    6180:	69 a2       	R1 = [P5 + 0x24];
    6182:	45 30       	R0 = P5;
    6184:	54 30       	R2 = P4;
    6186:	21 64       	R1 += 0x4;		/* (  4) */
    6188:	ba 65       	R2 += 0x37;		/* ( 55) */
    618a:	20 64       	R0 += 0x4;		/* (  4) */
    618c:	ff e3 3a cf 	CALL 0x0 <_AddRecordToResponseList>;
    6190:	2b e1 4c 00 	P3 = 0x4c (X);		/*		P3=0x4c( 76) */
    6194:	30 b1       	[SP + 0x10] = R0;
    6196:	dd 5a       	P3 = P5 + P3;
    6198:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x448(1096) */
    619c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    619e:	f3 bc       	[SP + 0xc] = P3;
    61a0:	01 e1 ac 1c 	R1.L = 0x1cac;		/* (7340)	R1=0x1cac(7340) */
    61a4:	17 30       	R2 = R7;
    61a6:	ff e3 2d cf 	CALL 0x0 <_AddRecordToResponseList>;
    61aa:	28 e4 13 00 	R0 = [P5 + 0x4c];
    61ae:	00 0c       	CC = R0 == 0x0;
    61b0:	12 1c       	IF CC JUMP 0x61d4 <_SPSRecordCallback+0xc0> (BP);
    61b2:	2a e1 54 00 	P2 = 0x54 (X);		/*		P2=0x54( 84) */
    61b6:	95 5a       	P2 = P5 + P2;
    61b8:	52 30       	R2 = P2;
    61ba:	2a e1 5c 00 	P2 = 0x5c (X);		/*		P2=0x5c( 92) */
    61be:	95 5a       	P2 = P5 + P2;
    61c0:	e9 a1       	R1 = [P5 + 0x1c];
    61c2:	44 30       	R0 = P4;
    61c4:	f2 bc       	[SP + 0xc] = P2;
    61c6:	ff e3 1b de 	CALL 0x1dfc <_SendWakeup>;
    61ca:	e9 a1       	R1 = [P5 + 0x1c];
    61cc:	44 30       	R0 = P4;
    61ce:	53 30       	R2 = P3;
    61d0:	ff e3 36 fb 	CALL 0x583c <_ScheduleWakeup>;
    61d4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1cac(7340) */
    61d8:	44 30       	R0 = P4;
    61da:	01 e1 48 04 	R1.L = 0x448;		/* (1096)	R1=0x448(1096) */
    61de:	ff e3 11 cf 	CALL 0x0 <_AddRecordToResponseList>;
    61e2:	20 e4 a4 0d 	R0 = [P4 + 0x3690];
    61e6:	f8 67       	R0 += -0x1;		/* ( -1) */
    61e8:	20 e6 a4 0d 	[P4 + 0x3690] = R0;
    61ec:	45 30       	R0 = P5;
    61ee:	ff e3 09 cf 	CALL 0x0 <_AddRecordToResponseList>;
    61f2:	a6 6c       	SP += 0x14;		/* ( 20) */
    61f4:	27 01       	RETS = [SP++];
    61f6:	44 30       	R0 = P4;
    61f8:	bb 05       	(R7:7, P5:3) = [SP++];
    61fa:	ff e2 cb ee 	JUMP.L 0x3f90 <_mDNS_UpdateAllowSleep>;
    61fe:	a6 6c       	SP += 0x14;		/* ( 20) */
    6200:	27 01       	RETS = [SP++];
    6202:	bb 05       	(R7:7, P5:3) = [SP++];
    6204:	10 00       	RTS;
	...

00006208 <_ClearProxyRecords>:
_ClearProxyRecords():
    6208:	e3 05       	[--SP] = (R7:4, P5:3);
    620a:	20 32       	P4 = R0;
    620c:	00 e8 0e 00 	LINK 0x38;		/* (56) */
    6210:	39 32       	FP = R1;
    6212:	3a 30       	R7 = R2;
    6214:	22 e5 f5 07 	P2 = [P4 + 0x1fd4];
    6218:	42 0c       	CC = P2 == 0x0;
    621a:	11 18       	IF CC JUMP 0x623c <_ClearProxyRecords+0x34>;
    621c:	42 30       	R0 = P2;
    621e:	54 30       	R2 = P4;
    6220:	ba 65       	R2 += 0x37;		/* ( 55) */
    6222:	51 a2       	R1 = [P2 + 0x24];
    6224:	21 64       	R1 += 0x4;		/* (  4) */
    6226:	20 64       	R0 += 0x4;		/* (  4) */
    6228:	ff e3 ec ce 	CALL 0x0 <_AddRecordToResponseList>;
    622c:	10 30       	R2 = R0;
    622e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x448(1096) */
    6232:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    6234:	01 e1 d4 1c 	R1.L = 0x1cd4;		/* (7380)	R1=0x1cd4(7380) */
    6238:	ff e3 e4 ce 	CALL 0x0 <_AddRecordToResponseList>;
    623c:	27 e6 f5 07 	[P4 + 0x1fd4] = R7;
    6240:	44 30       	R0 = P4;
    6242:	47 e1 00 00 	R7.H = 0x0;		/* (  0)	R7=0x0 <_AddRecordToResponseList>(  0) */
    6246:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x4c */
    624a:	b8 65       	R0 += 0x37;		/* ( 55) */
    624c:	07 e1 00 00 	R7.L = 0x0;		/* (  0)	R7=0x0 <_AddRecordToResponseList>(  0) */
    6250:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
    6254:	70 b3       	[SP + 0x34] = R0;
    6256:	24 e1 4c 00 	R4 = 0x4c (X);		/*		R4=0x4c( 76) */
    625a:	81 20       	JUMP.S 0x635c <_ClearProxyRecords+0x154>;
    625c:	00 00       	NOP;
    625e:	21 e4 28 1f 	R1 = [P4 + 0x7ca0];
    6262:	e8 a1       	R0 = [P5 + 0x1c];
    6264:	01 08       	CC = R1 == R0;
    6266:	73 14       	IF !CC JUMP 0x634c <_ClearProxyRecords+0x144> (BP);
    6268:	79 a0       	R1 = [FP + 0x4];
    626a:	28 e4 13 00 	R0 = [P5 + 0x4c];
    626e:	01 08       	CC = R1 == R0;
    6270:	6e 14       	IF !CC JUMP 0x634c <_ClearProxyRecords+0x144> (BP);
    6272:	39 a5       	R1 = W[FP + 0x8] (Z);
    6274:	68 e4 28 00 	R0 = W[P5 + 0x50] (Z);
    6278:	01 08       	CC = R1 == R0;
    627a:	69 14       	IF !CC JUMP 0x634c <_ClearProxyRecords+0x144> (BP);
    627c:	bd e5 01 00 	R5 = B[FP + 0x1] (X);
    6280:	ae e5 49 00 	R6 = B[P5 + 0x49] (X);
    6284:	29 43       	R1 = R5.B (X);
    6286:	30 43       	R0 = R6.B (X);
    6288:	01 08       	CC = R1 == R0;
    628a:	0f 14       	IF !CC JUMP 0x62a8 <_ClearProxyRecords+0xa0> (BP);
    628c:	28 e4 1e 00 	R0 = [P5 + 0x78];
    6290:	21 e4 37 00 	R1 = [P4 + 0xdc];
    6294:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    6298:	41 52       	R1 = R1 - R0;
    629a:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    629e:	08 91       	R0 = [P1];
    62a0:	e2 61       	R2 = 0x3c (X);		/*		R2=0x3c( 60) */
    62a2:	d0 40       	R0 *= R2;
    62a4:	01 09       	CC = R1 <= R0;
    62a6:	53 1c       	IF CC JUMP 0x634c <_ClearProxyRecords+0x144> (BP);
    62a8:	0f 32       	P1 = R7;
    62aa:	08 91       	R0 = [P1];
    62ac:	00 0c       	CC = R0 == 0x0;
    62ae:	29 1c       	IF CC JUMP 0x6300 <_ClearProxyRecords+0xf8> (BP);
    62b0:	22 e5 a4 0d 	P2 = [P4 + 0x3690];
    62b4:	a8 e4 04 00 	R0 = B[P5 + 0x4] (Z);
    62b8:	30 b3       	[SP + 0x30] = R0;
    62ba:	ab e4 86 00 	R3 = B[P5 + 0x86] (Z);
    62be:	69 a2       	R1 = [P5 + 0x24];
    62c0:	45 30       	R0 = P5;
    62c2:	f2 be       	[SP + 0x2c] = P2;
    62c4:	21 64       	R1 += 0x4;		/* (  4) */
    62c6:	72 a3       	R2 = [SP + 0x34];
    62c8:	b3 b2       	[SP + 0x28] = R3;
    62ca:	20 64       	R0 += 0x4;		/* (  4) */
    62cc:	ff e3 9a ce 	CALL 0x0 <_AddRecordToResponseList>;
    62d0:	0c 32       	P1 = R4;
    62d2:	31 a3       	R1 = [SP + 0x30];
    62d4:	31 b1       	[SP + 0x10] = R1;
    62d6:	b3 a2       	R3 = [SP + 0x28];
    62d8:	36 43       	R6 = R6.B (X);
    62da:	8d 5a       	P2 = P5 + P1;
    62dc:	72 bd       	[SP + 0x14] = P2;
    62de:	29 e1 54 00 	P1 = 0x54 (X);		/*		P1=0x54( 84) */
    62e2:	8d 5a       	P2 = P5 + P1;
    62e4:	2d 43       	R5 = R5.B (X);
    62e6:	70 b2       	[SP + 0x24] = R0;
    62e8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1cd4(7380) */
    62ec:	f3 b0       	[SP + 0xc] = R3;
    62ee:	b2 bd       	[SP + 0x18] = P2;
    62f0:	f6 b1       	[SP + 0x1c] = R6;
    62f2:	35 b2       	[SP + 0x20] = R5;
    62f4:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    62f6:	01 e1 0c 1d 	R1.L = 0x1d0c;		/* (7436)	R1=0x1d0c(7436) */
    62fa:	f2 a2       	R2 = [SP + 0x2c];
    62fc:	ff e3 82 ce 	CALL 0x0 <_AddRecordToResponseList>;
    6300:	00 00       	NOP;
    6302:	a8 e4 04 00 	R0 = B[P5 + 0x4] (Z);
    6306:	08 0c       	CC = R0 == 0x1;
    6308:	04 14       	IF !CC JUMP 0x6310 <_ClearProxyRecords+0x108> (BP);
    630a:	40 60       	R0 = 0x8 (X);		/*		R0=0x8(  8) */
    630c:	a8 e6 04 00 	B[P5 + 0x4] = R0;
    6310:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    6312:	18 91       	R0 = [P3];
    6314:	28 e6 13 00 	[P5 + 0x4c] = R0;
    6318:	58 a0       	R0 = [P3 + 0x4];
    631a:	28 e6 14 00 	[P5 + 0x50] = R0;
    631e:	a9 e6 87 00 	B[P5 + 0x87] = R1;
    6322:	4d 30       	R1 = P5;
    6324:	44 30       	R0 = P4;
    6326:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    6328:	ff e3 6a f6 	CALL 0x4ffc <_mDNS_Deregister_internal>;
    632c:	21 e4 27 0a 	R1 = [P4 + 0x289c];
    6330:	01 0c       	CC = R1 == 0x0;
    6332:	08 1c       	IF CC JUMP 0x6342 <_ClearProxyRecords+0x13a> (BP);
    6334:	20 e4 28 1f 	R0 = [P4 + 0x7ca0];
    6338:	01 08       	CC = R1 == R0;
    633a:	04 18       	IF CC JUMP 0x6342 <_ClearProxyRecords+0x13a>;
    633c:	44 30       	R0 = P4;
    633e:	ff e3 61 ce 	CALL 0x0 <_AddRecordToResponseList>;
    6342:	00 00       	NOP;
    6344:	20 e4 28 1f 	R0 = [P4 + 0x7ca0];
    6348:	20 e6 27 0a 	[P4 + 0x289c] = R0;
    634c:	00 00       	NOP;
    634e:	22 e5 f5 07 	P2 = [P4 + 0x1fd4];
    6352:	6a 08       	CC = P2 == P5;
    6354:	04 14       	IF !CC JUMP 0x635c <_ClearProxyRecords+0x154> (BP);
    6356:	10 91       	R0 = [P2];
    6358:	20 e6 f5 07 	[P4 + 0x1fd4] = R0;
    635c:	00 00       	NOP;
    635e:	25 e5 f5 07 	P5 = [P4 + 0x1fd4];
    6362:	45 0c       	CC = P5 == 0x0;
    6364:	7c 17       	IF !CC JUMP 0x625c <_ClearProxyRecords+0x54> (BP);
    6366:	c6 6d       	SP += 0x38;		/* ( 56) */
    6368:	77 90       	FP = [SP++];
    636a:	27 01       	RETS = [SP++];
    636c:	a3 05       	(R7:4, P5:3) = [SP++];
    636e:	10 00       	RTS;

00006370 <_ProcessQuery>:
_ProcessQuery():
    6370:	e3 05       	[--SP] = (R7:4, P5:3);
    6372:	00 e8 50 01 	LINK 0x540;		/* (1344) */
    6376:	33 e5 5c 01 	P3 = [SP + 0x570];
    637a:	28 32       	P5 = R0;
    637c:	31 30       	R6 = R1;
    637e:	32 e6 5b 01 	[SP + 0x56c] = R2;
    6382:	35 e4 5d 01 	R5 = [SP + 0x574];
    6386:	37 e5 61 01 	FP = [SP + 0x584];
    638a:	43 0c       	CC = P3 == 0x0;
    638c:	0a 18       	IF CC JUMP 0x63a0 <_ProcessQuery+0x30>;
    638e:	0d 30       	R1 = R5;
    6390:	53 30       	R2 = P3;
    6392:	ff e3 ad e1 	CALL 0x26ec <_mDNS_AddressIsLocalSubnet>;
    6396:	00 0c       	CC = R0 == 0x0;
    6398:	00 02       	R0 = CC;
    639a:	00 4b       	BITTGL (R0, 0x0);		/* bit  0 */
    639c:	f0 b2       	[SP + 0x2c] = R0;
    639e:	03 20       	JUMP.S 0x63a4 <_ProcessQuery+0x34>;
    63a0:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    63a2:	f1 b2       	[SP + 0x2c] = R1;
    63a4:	56 30       	R2 = SP;
    63a6:	23 e1 3c 05 	R3 = 0x53c (X);		/*		R3=0x53c(1340) */
    63aa:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    63ac:	5a 50       	R1 = R2 + R3;
    63ae:	30 e6 4f 01 	[SP + 0x53c] = R0;
    63b2:	31 e6 4e 01 	[SP + 0x538] = R1;
    63b6:	30 e6 4d 01 	[SP + 0x534] = R0;
    63ba:	30 e6 4c 01 	[SP + 0x530] = R0;
    63be:	62 60       	R2 = 0xc (X);		/*		R2=0xc( 12) */
    63c0:	06 30       	R0 = R6;
    63c2:	31 e4 5b 01 	R1 = [SP + 0x56c];
    63c6:	ff e3 1d ce 	CALL 0x0 <_AddRecordToResponseList>;
    63ca:	10 30       	R2 = R0;
    63cc:	00 0c       	CC = R0 == 0x0;
    63ce:	46 18       	IF CC JUMP 0x645a <_ProcessQuery+0xea>;
    63d0:	20 e1 80 ff 	R0 = -0x80 (X);		/*		R0=0xffffff80(-128) */
    63d4:	2a e1 84 7c 	P2 = 0x7c84 (X);		/*		P2=0x7c84(31876) */
    63d8:	b0 e6 14 00 	B[SP + 0x14] = R0;
    63dc:	34 e4 5b 01 	R4 = [SP + 0x56c];
    63e0:	95 5a       	P2 = P5 + P2;
    63e2:	f4 b0       	[SP + 0xc] = R4;
    63e4:	35 b1       	[SP + 0x10] = R5;
    63e6:	b2 bd       	[SP + 0x18] = P2;
    63e8:	45 30       	R0 = P5;
    63ea:	0e 30       	R1 = R6;
    63ec:	ff e3 0a ce 	CALL 0x0 <_AddRecordToResponseList>;
    63f0:	00 0c       	CC = R0 == 0x0;
    63f2:	31 1c       	IF CC JUMP 0x6454 <_ProcessQuery+0xe4> (BP);
    63f4:	27 e1 f0 00 	R7 = 0xf0 (X);		/*		R7=0xf0(240) */
    63f8:	a8 e4 88 7c 	R0 = B[P5 + 0x7c88] (Z);
    63fc:	38 08       	CC = R0 == R7;
    63fe:	2b 1c       	IF CC JUMP 0x6454 <_ProcessQuery+0xe4> (BP);
    6400:	49 61       	R1 = 0x29 (X);		/*		R1=0x29( 41) */
    6402:	68 e4 45 3e 	R0 = W[P5 + 0x7c8a] (Z);
    6406:	08 08       	CC = R0 == R1;
    6408:	26 14       	IF !CC JUMP 0x6454 <_ProcessQuery+0xe4> (BP);
    640a:	28 e4 2a 1f 	R0 = [P5 + 0x7ca8];
    640e:	20 64       	R0 += 0x4;		/* (  4) */
    6410:	6c e4 4a 3e 	R4 = W[P5 + 0x7c94] (Z);
    6414:	20 51       	R4 = R0 + R4;
    6416:	20 32       	P4 = R0;
    6418:	1b 20       	JUMP.S 0x644e <_ProcessQuery+0xde>;
    641a:	22 60       	R2 = 0x4 (X);		/*		R2=0x4(  4) */
    641c:	20 95       	R0 = W[P4] (Z);
    641e:	10 08       	CC = R0 == R2;
    6420:	16 14       	IF !CC JUMP 0x644c <_ProcessQuery+0xdc> (BP);
    6422:	a0 e4 04 00 	R0 = B[P4 + 0x4] (Z);
    6426:	00 0c       	CC = R0 == 0x0;
    6428:	12 14       	IF !CC JUMP 0x644c <_ProcessQuery+0xdc> (BP);
    642a:	a0 a0       	R0 = [P4 + 0x8];
    642c:	00 0c       	CC = R0 == 0x0;
    642e:	0f 1c       	IF CC JUMP 0x644c <_ProcessQuery+0xdc> (BP);
    6430:	7c 30       	R7 = P4;
    6432:	27 64       	R7 += 0x4;		/* (  4) */
    6434:	2a e4 f3 07 	R2 = [P5 + 0x1fcc];
    6438:	45 30       	R0 = P5;
    643a:	0f 30       	R1 = R7;
    643c:	ff e3 e6 fe 	CALL 0x6208 <_ClearProxyRecords>;
    6440:	2a e4 f2 07 	R2 = [P5 + 0x1fc8];
    6444:	45 30       	R0 = P5;
    6446:	0f 30       	R1 = R7;
    6448:	ff e3 e0 fe 	CALL 0x6208 <_ClearProxyRecords>;
    644c:	04 6d       	P4 += 0x20;		/* ( 32) */
    644e:	5c 30       	R3 = P4;
    6450:	a3 09       	CC = R3 < R4 (IU);
    6452:	e4 1f       	IF CC JUMP 0x641a <_ProcessQuery+0xaa> (BP);
    6454:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    6456:	a8 e6 88 7c 	B[P5 + 0x7c88] = R0;
    645a:	2a e1 84 7c 	P2 = 0x7c84 (X);		/*		P2=0x7c84(31876) */
    645e:	95 5a       	P2 = P5 + P2;
    6460:	26 30       	R4 = R6;
    6462:	32 e7 14 00 	[SP + 0x50] = P2;
    6466:	64 64       	R4 += 0xc;		/* ( 12) */
    6468:	28 e1 30 05 	P0 = 0x530 (X);		/*		P0=0x530(1328) */
    646c:	29 e1 34 05 	P1 = 0x534 (X);		/*		P1=0x534(1332) */
    6470:	2a e1 88 7c 	P2 = 0x7c88 (X);		/*		P2=0x7c88(31880) */
    6474:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    6476:	b4 b3       	[SP + 0x38] = R4;
    6478:	b4 b2       	[SP + 0x28] = R4;
    647a:	06 5a       	P0 = SP + P0;
    647c:	4e 5a       	P1 = SP + P1;
    647e:	95 5a       	P2 = P5 + P2;
    6480:	33 e7 18 00 	[SP + 0x60] = P3;
    6484:	37 e6 10 00 	[SP + 0x40] = R7;
    6488:	f0 bf       	[SP + 0x3c] = P0;
    648a:	71 bf       	[SP + 0x34] = P1;
    648c:	32 e7 17 00 	[SP + 0x5c] = P2;
    6490:	27 30       	R4 = R7;
    6492:	65 32       	P4 = P5;
    6494:	1e 32       	P3 = R6;
    6496:	37 e7 19 00 	[SP + 0x64] = FP;
    649a:	90 22       	JUMP.S 0x69ba <_ProcessQuery+0x64a>;
    649c:	2a e1 cc 02 	P2 = 0x2cc (X);		/*		P2=0x2cc(716) */
    64a0:	b2 5a       	P2 = P2 + SP;
    64a2:	f5 b0       	[SP + 0xc] = R5;
    64a4:	32 bd       	[SP + 0x10] = P2;
    64a6:	43 30       	R0 = P3;
    64a8:	b1 a2       	R1 = [SP + 0x28];
    64aa:	32 e4 5b 01 	R2 = [SP + 0x56c];
    64ae:	ff e3 a9 cd 	CALL 0x0 <_AddRecordToResponseList>;
    64b2:	b0 b2       	[SP + 0x28] = R0;
    64b4:	00 0c       	CC = R0 == 0x0;
    64b6:	02 14       	IF !CC JUMP 0x64ba <_ProcessQuery+0x14a> (BP);
    64b8:	dc 25       	JUMP.S 0x7070 <_ProcessQuery+0xd00>;
    64ba:	30 e4 5f 01 	R0 = [SP + 0x57c];
    64be:	00 0c       	CC = R0 == 0x0;
    64c0:	0b 1c       	IF CC JUMP 0x64d6 <_ProcessQuery+0x166> (BP);
    64c2:	31 e4 5e 01 	R1 = [SP + 0x578];
    64c6:	01 0c       	CC = R1 == 0x0;
    64c8:	0a 14       	IF !CC JUMP 0x64dc <_ProcessQuery+0x16c> (BP);
    64ca:	70 e5 81 02 	R0 = W[SP + 0x502] (X);
    64ce:	c0 43       	R0 =~ R0;
    64d0:	f8 4e       	R0 >>= 0x1f;
    64d2:	30 b3       	[SP + 0x30] = R0;
    64d4:	06 20       	JUMP.S 0x64e0 <_ProcessQuery+0x170>;
    64d6:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    64d8:	32 b3       	[SP + 0x30] = R2;
    64da:	03 20       	JUMP.S 0x64e0 <_ProcessQuery+0x170>;
    64dc:	03 60       	R3 = 0x0 (X);		/*		R3=0x0(  0) */
    64de:	33 b3       	[SP + 0x30] = R3;
    64e0:	22 e5 f5 07 	P2 = [P4 + 0x1fd4];
    64e4:	70 e5 81 02 	R0 = W[SP + 0x502] (X);
    64e8:	21 e1 ff 7f 	R1 = 0x7fff (X);		/*		R1=0x7fff(32767) */
    64ec:	01 54       	R0 = R1 & R0;
    64ee:	70 e6 81 02 	W[SP + 0x502] = R0;
    64f2:	42 0c       	CC = P2 == 0x0;
    64f4:	11 18       	IF CC JUMP 0x6516 <_ProcessQuery+0x1a6>;
    64f6:	42 30       	R0 = P2;
    64f8:	54 30       	R2 = P4;
    64fa:	ba 65       	R2 += 0x37;		/* ( 55) */
    64fc:	51 a2       	R1 = [P2 + 0x24];
    64fe:	21 64       	R1 += 0x4;		/* (  4) */
    6500:	20 64       	R0 += 0x4;		/* (  4) */
    6502:	ff e3 7f cd 	CALL 0x0 <_AddRecordToResponseList>;
    6506:	10 30       	R2 = R0;
    6508:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x7fff(32767) */
    650c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    650e:	01 e1 68 1d 	R1.L = 0x1d68;		/* (7528)	R1=0x1d68(7528) */
    6512:	ff e3 77 cd 	CALL 0x0 <_AddRecordToResponseList>;
    6516:	20 e4 f2 07 	R0 = [P4 + 0x1fc8];
    651a:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    651c:	20 e6 f5 07 	[P4 + 0x1fd4] = R0;
    6520:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
    6522:	37 e6 11 00 	[SP + 0x44] = R7;
    6526:	9f 21       	JUMP.S 0x6864 <_ProcessQuery+0x4f4>;
    6528:	7d 32       	FP = P5;
    652a:	38 90       	R0 = [FP++];
    652c:	28 e1 cc 02 	P0 = 0x2cc (X);		/*		P0=0x2cc(716) */
    6530:	20 e6 f5 07 	[P4 + 0x1fd4] = R0;
    6534:	30 5a       	P0 = P0 + SP;
    6536:	47 30       	R0 = FP;
    6538:	48 30       	R1 = P0;
    653a:	ff e3 63 cd 	CALL 0x0 <_AddRecordToResponseList>;
    653e:	00 0c       	CC = R0 == 0x0;
    6540:	92 1d       	IF CC JUMP 0x6864 <_ProcessQuery+0x4f4> (BP);
    6542:	30 e4 5f 01 	R0 = [SP + 0x57c];
    6546:	00 0c       	CC = R0 == 0x0;
    6548:	09 14       	IF !CC JUMP 0x655a <_ProcessQuery+0x1ea> (BP);
    654a:	31 e4 60 01 	R1 = [SP + 0x580];
    654e:	01 0c       	CC = R1 == 0x0;
    6550:	05 14       	IF !CC JUMP 0x655a <_ProcessQuery+0x1ea> (BP);
    6552:	a8 e4 45 00 	R0 = B[P5 + 0x45] (Z);
    6556:	00 0c       	CC = R0 == 0x0;
    6558:	86 1d       	IF CC JUMP 0x6864 <_ProcessQuery+0x4f4> (BP);
    655a:	2a 60       	R2 = 0x5 (X);		/*		R2=0x5(  5) */
    655c:	e9 a4       	R1 = W[P5 + 0x6] (Z);
    655e:	11 08       	CC = R1 == R2;
    6560:	1f 18       	IF CC JUMP 0x659e <_ProcessQuery+0x22e>;
    6562:	70 e4 80 02 	R0 = W[SP + 0x500] (Z);
    6566:	01 08       	CC = R1 == R0;
    6568:	1b 18       	IF CC JUMP 0x659e <_ProcessQuery+0x22e>;
    656a:	23 e1 ff 00 	R3 = 0xff (X);		/*		R3=0xff(255) */
    656e:	18 08       	CC = R0 == R3;
    6570:	17 18       	IF CC JUMP 0x659e <_ProcessQuery+0x22e>;
    6572:	7f 61       	R7 = 0x2f (X);		/*		R7=0x2f( 47) */
    6574:	39 08       	CC = R1 == R7;
    6576:	4f 15       	IF !CC JUMP 0x6814 <_ProcessQuery+0x4a4> (BP);
    6578:	21 e1 fe 00 	R1 = 0xfe (X);		/*		R1=0xfe(254) */
    657c:	08 0a       	CC = R0 <= R1 (IU);
    657e:	4b 15       	IF !CC JUMP 0x6814 <_ProcessQuery+0x4a4> (BP);
    6580:	82 c6 e8 83 	R1 = R0 >> 0x3;
    6584:	6a ae       	P2 = [P5 + 0x24];
    6586:	01 32       	P0 = R1;
    6588:	39 60       	R1 = 0x7 (X);		/*		R1=0x7(  7) */
    658a:	08 54       	R0 = R0 & R1;
    658c:	21 e1 80 00 	R1 = 0x80 (X);		/*		R1=0x80(128) */
    6590:	01 40       	R1 >>>= R0;
    6592:	82 5a       	P2 = P2 + P0;
    6594:	92 e4 04 00 	R2 = B[P2 + 0x4] (Z);
    6598:	4a 54       	R1 = R2 & R1;
    659a:	01 0c       	CC = R1 == 0x0;
    659c:	3c 15       	IF !CC JUMP 0x6814 <_ProcessQuery+0x4a4> (BP);
    659e:	a9 e4 04 00 	R1 = B[P5 + 0x4] (Z);
    65a2:	11 0c       	CC = R1 == 0x2;
    65a4:	dc 14       	IF !CC JUMP 0x675c <_ProcessQuery+0x3ec> (BP);
    65a6:	31 e4 5b 01 	R1 = [SP + 0x56c];
    65aa:	43 30       	R0 = P3;
    65ac:	ff e3 2a cd 	CALL 0x0 <_AddRecordToResponseList>;
    65b0:	30 e6 12 00 	[SP + 0x48] = R0;
    65b4:	4c 30       	R1 = P4;
    65b6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    65b8:	b9 65       	R1 += 0x37;		/* ( 55) */
    65ba:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    65bc:	30 e6 13 00 	[SP + 0x4c] = R0;
    65c0:	31 e6 16 00 	[SP + 0x58] = R1;
    65c4:	ad 20       	JUMP.S 0x671e <_ProcessQuery+0x3ae>;
    65c6:	23 e1 a0 ff 	R3 = -0x60 (X);		/*		R3=0xffffffa0(-96) */
    65ca:	30 e5 14 00 	P0 = [SP + 0x50];
    65ce:	32 e4 5b 01 	R2 = [SP + 0x56c];
    65d2:	30 e4 f9 00 	R0 = [SP + 0x3e4];
    65d6:	f2 b0       	[SP + 0xc] = R2;
    65d8:	30 b1       	[SP + 0x10] = R0;
    65da:	b3 e6 14 00 	B[SP + 0x14] = R3;
    65de:	b0 bd       	[SP + 0x18] = P0;
    65e0:	44 30       	R0 = P4;
    65e2:	4b 30       	R1 = P3;
    65e4:	32 e4 12 00 	R2 = [SP + 0x48];
    65e8:	ff e3 0c cd 	CALL 0x0 <_AddRecordToResponseList>;
    65ec:	30 e6 12 00 	[SP + 0x48] = R0;
    65f0:	00 0c       	CC = R0 == 0x0;
    65f2:	9b 1c       	IF CC JUMP 0x6728 <_ProcessQuery+0x3b8> (BP);
    65f4:	21 e1 f0 00 	R1 = 0xf0 (X);		/*		R1=0xf0(240) */
    65f8:	a0 e4 88 7c 	R0 = B[P4 + 0x7c88] (Z);
    65fc:	08 08       	CC = R0 == R1;
    65fe:	88 18       	IF CC JUMP 0x670e <_ProcessQuery+0x39e>;
    6600:	28 e1 cc 02 	P0 = 0x2cc (X);		/*		P0=0x2cc(716) */
    6604:	30 5a       	P0 = P0 + SP;
    6606:	48 30       	R1 = P0;
    6608:	30 e4 17 00 	R0 = [SP + 0x5c];
    660c:	ff e3 fa cc 	CALL 0x0 <_AddRecordToResponseList>;
    6610:	00 0c       	CC = R0 == 0x0;
    6612:	7e 1c       	IF CC JUMP 0x670e <_ProcessQuery+0x39e> (BP);
    6614:	44 30       	R0 = P4;
    6616:	4d 30       	R1 = P5;
    6618:	32 e4 14 00 	R2 = [SP + 0x50];
    661c:	ff e3 d6 d4 	CALL 0xfc8 <_PacketRRConflict>;
    6620:	00 0c       	CC = R0 == 0x0;
    6622:	75 1c       	IF CC JUMP 0x670c <_ProcessQuery+0x39c> (BP);
    6624:	2f a5       	R7 = W[P5 + 0x8] (Z);
    6626:	60 e4 46 3e 	R0 = W[P4 + 0x7c8c] (Z);
    662a:	c7 53       	R7 = R7 - R0;
    662c:	07 0c       	CC = R7 == 0x0;
    662e:	0f 14       	IF !CC JUMP 0x664c <_ProcessQuery+0x2dc> (BP);
    6630:	ef a4       	R7 = W[P5 + 0x6] (Z);
    6632:	60 e4 45 3e 	R0 = W[P4 + 0x7c8a] (Z);
    6636:	c7 53       	R7 = R7 - R0;
    6638:	07 0c       	CC = R7 == 0x0;
    663a:	09 10       	IF !CC JUMP 0x664c <_ProcessQuery+0x2dc>;
    663c:	45 30       	R0 = P5;
    663e:	31 e4 14 00 	R1 = [SP + 0x50];
    6642:	ff e3 c1 d6 	CALL 0x13c4 <_CompareRData>;
    6646:	38 30       	R7 = R0;
    6648:	00 0c       	CC = R0 == 0x0;
    664a:	61 1c       	IF CC JUMP 0x670c <_ProcessQuery+0x39c> (BP);
    664c:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x534 */
    6650:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x2cc */
    6654:	87 0c       	CC = R7 < 0x0;
    6656:	0a e1 60 1d 	P2.L = 0x1d60;		/* (7520)	P2=0x1d60 */
    665a:	30 e4 f9 00 	R0 = [SP + 0x3e4];
    665e:	09 e1 58 1d 	P1.L = 0x1d58;		/* (7512)	P1=0x1d58 */
    6662:	ca 06       	IF !CC P1 = P2;
    6664:	23 e4 27 1f 	R3 = [P4 + 0x7c9c];
    6668:	21 e4 2a 1f 	R1 = [P4 + 0x7ca8];
    666c:	30 e6 15 00 	[SP + 0x54] = R0;
    6670:	71 be       	[SP + 0x24] = P1;
    6672:	21 64       	R1 += 0x4;		/* (  4) */
    6674:	32 e4 16 00 	R2 = [SP + 0x58];
    6678:	33 b2       	[SP + 0x20] = R3;
    667a:	30 e4 17 00 	R0 = [SP + 0x5c];
    667e:	ff e3 c1 cc 	CALL 0x0 <_AddRecordToResponseList>;
    6682:	33 a2       	R3 = [SP + 0x20];
    6684:	30 b1       	[SP + 0x10] = R0;
    6686:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xf0(240) */
    668a:	f3 b0       	[SP + 0xc] = R3;
    668c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    668e:	01 e1 9c 1d 	R1.L = 0x1d9c;		/* (7580)	R1=0x1d9c(7580) */
    6692:	32 e4 15 00 	R2 = [SP + 0x54];
    6696:	ff e3 b5 cc 	CALL 0x0 <_AddRecordToResponseList>;
    669a:	aa ad       	P2 = [P5 + 0x18];
    669c:	e9 a1       	R1 = [P5 + 0x1c];
    669e:	31 e6 15 00 	[SP + 0x54] = R1;
    66a2:	ab e4 85 00 	R3 = B[P5 + 0x85] (Z);
    66a6:	69 a2       	R1 = [P5 + 0x24];
    66a8:	21 64       	R1 += 0x4;		/* (  4) */
    66aa:	32 e4 16 00 	R2 = [SP + 0x58];
    66ae:	33 b2       	[SP + 0x20] = R3;
    66b0:	f2 bd       	[SP + 0x1c] = P2;
    66b2:	47 30       	R0 = FP;
    66b4:	ff e3 a6 cc 	CALL 0x0 <_AddRecordToResponseList>;
    66b8:	71 ae       	P1 = [SP + 0x24];
    66ba:	f2 ad       	P2 = [SP + 0x1c];
    66bc:	33 a2       	R3 = [SP + 0x20];
    66be:	b0 b1       	[SP + 0x18] = R0;
    66c0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1d9c(7580) */
    66c4:	f3 b0       	[SP + 0xc] = R3;
    66c6:	31 bd       	[SP + 0x10] = P1;
    66c8:	72 bd       	[SP + 0x14] = P2;
    66ca:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    66cc:	01 e1 d8 1d 	R1.L = 0x1dd8;		/* (7640)	R1=0x1dd8(7640) */
    66d0:	32 e4 15 00 	R2 = [SP + 0x54];
    66d4:	ff e3 96 cc 	CALL 0x0 <_AddRecordToResponseList>;
    66d8:	87 0c       	CC = R7 < 0x0;
    66da:	19 14       	IF !CC JUMP 0x670c <_ProcessQuery+0x39c> (BP);
    66dc:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0x2cc */
    66e0:	08 e1 00 00 	P0.L = 0x0;		/* (  0)	P0=0x0 <_AddRecordToResponseList> */
    66e4:	20 e4 37 00 	R0 = [P4 + 0xdc];
    66e8:	01 91       	R1 = [P0];
    66ea:	01 50       	R0 = R1 + R0;
    66ec:	00 0c       	CC = R0 == 0x0;
    66ee:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    66f0:	01 07       	IF CC R0 = R1;
    66f2:	20 e6 fa 07 	[P4 + 0x1fe8] = R0;
    66f6:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    66f8:	a8 e6 85 00 	B[P5 + 0x85] = R0;
    66fc:	40 60       	R0 = 0x8 (X);		/*		R0=0x8(  8) */
    66fe:	a8 e6 86 00 	B[P5 + 0x86] = R0;
    6702:	44 30       	R0 = P4;
    6704:	4d 30       	R1 = P5;
    6706:	ff e3 75 cf 	CALL 0x5f0 <_InitializeLastAPTime>;
    670a:	25 20       	JUMP.S 0x6754 <_ProcessQuery+0x3e4>;
    670c:	0f 60       	R7 = 0x1 (X);		/*		R7=0x1(  1) */
    670e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    6710:	a0 e6 88 7c 	B[P4 + 0x7c88] = R0;
    6714:	30 e4 13 00 	R0 = [SP + 0x4c];
    6718:	08 64       	R0 += 0x1;		/* (  1) */
    671a:	30 e6 13 00 	[SP + 0x4c] = R0;
    671e:	18 a5       	R0 = W[P3 + 0x8] (Z);
    6720:	31 e4 13 00 	R1 = [SP + 0x4c];
    6724:	81 08       	CC = R1 < R0;
    6726:	50 1f       	IF CC JUMP 0x65c6 <_ProcessQuery+0x256> (BP);
    6728:	07 0c       	CC = R7 == 0x0;
    672a:	15 10       	IF !CC JUMP 0x6754 <_ProcessQuery+0x3e4>;
    672c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x1d60 */
    6730:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    6734:	10 91       	R0 = [P2];
    6736:	00 0c       	CC = R0 == 0x0;
    6738:	0e 1c       	IF CC JUMP 0x6754 <_ProcessQuery+0x3e4> (BP);
    673a:	2f a2       	R7 = [P5 + 0x20];
    673c:	e8 a8       	R0 = W[P5 + 0x6] (X);
    673e:	ff e3 61 cc 	CALL 0x0 <_AddRecordToResponseList>;
    6742:	f0 b0       	[SP + 0xc] = R0;
    6744:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1(  1) */
    6748:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    674a:	01 e1 10 1e 	R1.L = 0x1e10;		/* (7696)	R1=0x1e10(7696) */
    674e:	17 30       	R2 = R7;
    6750:	ff e3 58 cc 	CALL 0x0 <_AddRecordToResponseList>;
    6754:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    6756:	a0 e6 88 7c 	B[P4 + 0x7c88] = R0;
    675a:	85 20       	JUMP.S 0x6864 <_ProcessQuery+0x4f4>;
    675c:	e0 61       	R0 = 0x3c (X);		/*		R0=0x3c( 60) */
    675e:	41 54       	R1 = R1 & R0;
    6760:	01 0c       	CC = R1 == 0x0;
    6762:	81 1c       	IF CC JUMP 0x6864 <_ProcessQuery+0x4f4> (BP);
    6764:	ea ae       	P2 = [P5 + 0x2c];
    6766:	42 0c       	CC = P2 == 0x0;
    6768:	06 1c       	IF CC JUMP 0x6774 <_ProcessQuery+0x404> (BP);
    676a:	91 e4 04 00 	R1 = B[P2 + 0x4] (Z);
    676e:	01 54       	R0 = R1 & R0;
    6770:	00 0c       	CC = R0 == 0x0;
    6772:	79 1c       	IF CC JUMP 0x6864 <_ProcessQuery+0x4f4> (BP);
    6774:	00 00       	NOP;
    6776:	2a af       	P2 = [P5 + 0x30];
    6778:	42 0c       	CC = P2 == 0x0;
    677a:	07 1c       	IF CC JUMP 0x6788 <_ProcessQuery+0x418> (BP);
    677c:	e0 61       	R0 = 0x3c (X);		/*		R0=0x3c( 60) */
    677e:	91 e4 04 00 	R1 = B[P2 + 0x4] (Z);
    6782:	01 54       	R0 = R1 & R0;
    6784:	00 0c       	CC = R0 == 0x0;
    6786:	6f 1c       	IF CC JUMP 0x6864 <_ProcessQuery+0x4f4> (BP);
    6788:	00 00       	NOP;
    678a:	6a af       	P2 = [P5 + 0x34];
    678c:	42 0c       	CC = P2 == 0x0;
    678e:	07 1c       	IF CC JUMP 0x679c <_ProcessQuery+0x42c> (BP);
    6790:	e0 61       	R0 = 0x3c (X);		/*		R0=0x3c( 60) */
    6792:	91 e4 04 00 	R1 = B[P2 + 0x4] (Z);
    6796:	01 54       	R0 = R1 & R0;
    6798:	00 0c       	CC = R0 == 0x0;
    679a:	65 1c       	IF CC JUMP 0x6864 <_ProcessQuery+0x4f4> (BP);
    679c:	32 e4 11 00 	R2 = [SP + 0x44];
    67a0:	0a 64       	R2 += 0x1;		/* (  1) */
    67a2:	33 a3       	R3 = [SP + 0x30];
    67a4:	32 e6 11 00 	[SP + 0x44] = R2;
    67a8:	03 0c       	CC = R3 == 0x0;
    67aa:	0c 14       	IF !CC JUMP 0x67c2 <_ProcessQuery+0x452> (BP);
    67ac:	f7 a2       	R7 = [SP + 0x2c];
    67ae:	07 0c       	CC = R7 == 0x0;
    67b0:	24 14       	IF !CC JUMP 0x67f8 <_ProcessQuery+0x488> (BP);
    67b2:	30 e4 5f 01 	R0 = [SP + 0x57c];
    67b6:	00 0c       	CC = R0 == 0x0;
    67b8:	20 1c       	IF CC JUMP 0x67f8 <_ProcessQuery+0x488> (BP);
    67ba:	31 e4 5e 01 	R1 = [SP + 0x578];
    67be:	01 0c       	CC = R1 == 0x0;
    67c0:	1c 14       	IF !CC JUMP 0x67f8 <_ProcessQuery+0x488> (BP);
    67c2:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0x0 <_AddRecordToResponseList> */
    67c6:	08 e1 00 00 	P0.L = 0x0;		/* (  0)	P0=0x0 <_AddRecordToResponseList> */
    67ca:	00 91       	R0 = [P0];
    67cc:	29 e4 31 00 	R1 = [P5 + 0xc4];
    67d0:	80 43       	R0 = -R0;
    67d2:	08 52       	R0 = R0 - R1;
    67d4:	21 e4 37 00 	R1 = [P4 + 0xdc];
    67d8:	08 50       	R0 = R0 + R1;
    67da:	80 0c       	CC = R0 < 0x0;
    67dc:	0c 14       	IF !CC JUMP 0x67f4 <_ProcessQuery+0x484> (BP);
    67de:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x1d58 */
    67e2:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    67e6:	28 e4 32 00 	R0 = [P5 + 0xc8];
    67ea:	09 91       	R1 = [P1];
    67ec:	08 08       	CC = R0 == R1;
    67ee:	3b 18       	IF CC JUMP 0x6864 <_ProcessQuery+0x4f4>;
    67f0:	28 08       	CC = R0 == R5;
    67f2:	39 18       	IF CC JUMP 0x6864 <_ProcessQuery+0x4f4>;
    67f4:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
    67f6:	0c 20       	JUMP.S 0x680e <_ProcessQuery+0x49e>;
    67f8:	00 00       	NOP;
    67fa:	28 e4 2d 00 	R0 = [P5 + 0xb4];
    67fe:	00 0c       	CC = R0 == 0x0;
    6800:	32 14       	IF !CC JUMP 0x6864 <_ProcessQuery+0x4f4> (BP);
    6802:	30 e4 5e 01 	R0 = [SP + 0x578];
    6806:	00 0c       	CC = R0 == 0x0;
    6808:	f0 63       	R0 = -0x2 (X);		/*		R0=0xfffffffe( -2) */
    680a:	b1 a2       	R1 = [SP + 0x28];
    680c:	01 06       	IF !CC R0 = R1;
    680e:	28 e6 2d 00 	[P5 + 0xb4] = R0;
    6812:	29 20       	JUMP.S 0x6864 <_ProcessQuery+0x4f4>;
    6814:	80 61       	R0 = 0x30 (X);		/*		R0=0x30( 48) */
    6816:	a9 e4 04 00 	R1 = B[P5 + 0x4] (Z);
    681a:	01 54       	R0 = R1 & R0;
    681c:	00 0c       	CC = R0 == 0x0;
    681e:	23 1c       	IF CC JUMP 0x6864 <_ProcessQuery+0x4f4> (BP);
    6820:	e0 61       	R0 = 0x3c (X);		/*		R0=0x3c( 60) */
    6822:	41 54       	R1 = R1 & R0;
    6824:	01 0c       	CC = R1 == 0x0;
    6826:	1f 1c       	IF CC JUMP 0x6864 <_ProcessQuery+0x4f4> (BP);
    6828:	ea ae       	P2 = [P5 + 0x2c];
    682a:	42 0c       	CC = P2 == 0x0;
    682c:	06 1c       	IF CC JUMP 0x6838 <_ProcessQuery+0x4c8> (BP);
    682e:	91 e4 04 00 	R1 = B[P2 + 0x4] (Z);
    6832:	01 54       	R0 = R1 & R0;
    6834:	00 0c       	CC = R0 == 0x0;
    6836:	17 1c       	IF CC JUMP 0x6864 <_ProcessQuery+0x4f4> (BP);
    6838:	00 00       	NOP;
    683a:	2a af       	P2 = [P5 + 0x30];
    683c:	42 0c       	CC = P2 == 0x0;
    683e:	07 1c       	IF CC JUMP 0x684c <_ProcessQuery+0x4dc> (BP);
    6840:	e0 61       	R0 = 0x3c (X);		/*		R0=0x3c( 60) */
    6842:	91 e4 04 00 	R1 = B[P2 + 0x4] (Z);
    6846:	01 54       	R0 = R1 & R0;
    6848:	00 0c       	CC = R0 == 0x0;
    684a:	0d 1c       	IF CC JUMP 0x6864 <_ProcessQuery+0x4f4> (BP);
    684c:	00 00       	NOP;
    684e:	6a af       	P2 = [P5 + 0x34];
    6850:	42 0c       	CC = P2 == 0x0;
    6852:	07 1c       	IF CC JUMP 0x6860 <_ProcessQuery+0x4f0> (BP);
    6854:	e0 61       	R0 = 0x3c (X);		/*		R0=0x3c( 60) */
    6856:	91 e4 04 00 	R1 = B[P2 + 0x4] (Z);
    685a:	01 54       	R0 = R1 & R0;
    685c:	00 0c       	CC = R0 == 0x0;
    685e:	03 1c       	IF CC JUMP 0x6864 <_ProcessQuery+0x4f4> (BP);
    6860:	06 0c       	CC = R6 == 0x0;
    6862:	75 07       	IF CC R6 = P5;
    6864:	00 00       	NOP;
    6866:	25 e5 f5 07 	P5 = [P4 + 0x1fd4];
    686a:	45 0c       	CC = P5 == 0x0;
    686c:	5e 16       	IF !CC JUMP 0x6528 <_ProcessQuery+0x1b8> (BP);
    686e:	32 e4 11 00 	R2 = [SP + 0x44];
    6872:	02 0c       	CC = R2 == 0x0;
    6874:	0b 14       	IF !CC JUMP 0x688a <_ProcessQuery+0x51a> (BP);
    6876:	06 0c       	CC = R6 == 0x0;
    6878:	02 14       	IF !CC JUMP 0x687c <_ProcessQuery+0x50c> (BP);
    687a:	9c 24       	JUMP.S 0x71b2 <_ProcessQuery+0xe42>;
    687c:	06 32       	P0 = R6;
    687e:	20 e4 37 00 	R0 = [P4 + 0xdc];
    6882:	05 e6 23 00 	[P0 + 0x8c] = R5;
    6886:	20 e6 3f 00 	[P4 + 0xfc] = R0;
    688a:	30 a3       	R0 = [SP + 0x30];
    688c:	00 0c       	CC = R0 == 0x0;
    688e:	91 1c       	IF CC JUMP 0x69b0 <_ProcessQuery+0x640> (BP);
    6890:	98 e4 02 00 	R0 = B[P3 + 0x2] (Z);
    6894:	08 48       	CC = !BITTST (R0, 0x1);		/* bit  1 */
    6896:	8d 14       	IF !CC JUMP 0x69b0 <_ProcessQuery+0x640> (BP);
    6898:	28 e1 00 04 	P0 = 0x400 (X);		/*		P0=0x400(1024) */
    689c:	30 5a       	P0 = P0 + SP;
    689e:	40 30       	R0 = P0;
    68a0:	ff e3 b0 cb 	CALL 0x0 <_AddRecordToResponseList>;
    68a4:	41 e1 d5 20 	R1.H = 0x20d5;		/* (8405)	R1=0x20d51e10(550837776) */
    68a8:	38 30       	R7 = R0;
    68aa:	01 e1 39 6b 	R1.L = 0x6b39;		/* (27449)	R1=0x20d56b39(550857529) */
    68ae:	ff e3 a9 cb 	CALL 0x0 <_AddRecordToResponseList>;
    68b2:	82 c6 d0 83 	R1 = R0 >> 0x6;
    68b6:	20 e1 f3 01 	R0 = 0x1f3 (X);		/*		R0=0x1f3(499) */
    68ba:	c1 40       	R1 *= R0;
    68bc:	29 e1 00 04 	P1 = 0x400 (X);		/*		P1=0x400(1024) */
    68c0:	71 5a       	P1 = P1 + SP;
    68c2:	4f 52       	R1 = R7 - R1;
    68c4:	f1 bc       	[SP + 0xc] = P1;
    68c6:	44 30       	R0 = P4;
    68c8:	32 e4 b4 00 	R2 = [SP + 0x2d0];
    68cc:	ff e3 8c dd 	CALL 0x23e4 <_CacheGroupForName>;
    68d0:	10 32       	P2 = R0;
    68d2:	42 0c       	CC = P2 == 0x0;
    68d4:	03 1c       	IF CC JUMP 0x68da <_ProcessQuery+0x56a> (BP);
    68d6:	95 ac       	P5 = [P2 + 0x8];
    68d8:	02 20       	JUMP.S 0x68dc <_ProcessQuery+0x56c>;
    68da:	05 68       	P5 = 0x0 (X);		/*		P5=0x0(  0) */
    68dc:	77 af       	FP = [SP + 0x34];
    68de:	1b 20       	JUMP.S 0x6914 <_ProcessQuery+0x5a4>;
    68e0:	2a e1 cc 02 	P2 = 0x2cc (X);		/*		P2=0x2cc(716) */
    68e4:	b2 5a       	P2 = P2 + SP;
    68e6:	45 30       	R0 = P5;
    68e8:	20 64       	R0 += 0x4;		/* (  4) */
    68ea:	4a 30       	R1 = P2;
    68ec:	ff e3 8a cb 	CALL 0x0 <_AddRecordToResponseList>;
    68f0:	00 0c       	CC = R0 == 0x0;
    68f2:	0f 1c       	IF CC JUMP 0x6910 <_ProcessQuery+0x5a0> (BP);
    68f4:	28 a6       	R0 = W[P5 + 0x10] (Z);
    68f6:	21 e1 00 04 	R1 = 0x400 (X);		/*		R1=0x400(1024) */
    68fa:	08 0a       	CC = R0 <= R1 (IU);
    68fc:	0a 14       	IF !CC JUMP 0x6910 <_ProcessQuery+0x5a0> (BP);
    68fe:	e8 a2       	R0 = [P5 + 0x2c];
    6900:	00 0c       	CC = R0 == 0x0;
    6902:	07 14       	IF !CC JUMP 0x6910 <_ProcessQuery+0x5a0> (BP);
    6904:	55 32       	P2 = P5;
    6906:	62 6d       	P2 += 0x2c;		/* ( 44) */
    6908:	57 08       	CC = FP == P2;
    690a:	03 1c       	IF CC JUMP 0x6910 <_ProcessQuery+0x5a0> (BP);
    690c:	7d 93       	[FP] = P5;
    690e:	7a 32       	FP = P2;
    6910:	00 00       	NOP;
    6912:	6d 91       	P5 = [P5];
    6914:	45 0c       	CC = P5 == 0x0;
    6916:	e5 17       	IF !CC JUMP 0x68e0 <_ProcessQuery+0x570> (BP);
    6918:	77 bf       	[SP + 0x34] = FP;
    691a:	25 e5 4c 00 	P5 = [P4 + 0x130];
    691e:	47 20       	JUMP.S 0x69ac <_ProcessQuery+0x63c>;
    6920:	00 00       	NOP;
    6922:	28 e4 47 00 	R0 = [P5 + 0x11c];
    6926:	00 0c       	CC = R0 == 0x0;
    6928:	40 14       	IF !CC JUMP 0x69a8 <_ProcessQuery+0x638> (BP);
    692a:	28 a1       	R0 = [P5 + 0x10];
    692c:	00 0d       	CC = R0 <= 0x0;
    692e:	3d 1c       	IF CC JUMP 0x69a8 <_ProcessQuery+0x638> (BP);
    6930:	a8 a3       	R0 = [P5 + 0x38];
    6932:	00 0c       	CC = R0 == 0x0;
    6934:	3a 14       	IF !CC JUMP 0x69a8 <_ProcessQuery+0x638> (BP);
    6936:	28 e4 2b 00 	R0 = [P5 + 0xac];
    693a:	21 e4 37 00 	R1 = [P4 + 0xdc];
    693e:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0x400 */
    6942:	41 52       	R1 = R1 - R0;
    6944:	08 e1 00 00 	P0.L = 0x0;		/* (  0)	P0=0x0 <_AddRecordToResponseList> */
    6948:	00 91       	R0 = [P0];
    694a:	10 30       	R2 = R0;
    694c:	80 0c       	CC = R0 < 0x0;
    694e:	1a 64       	R2 += 0x3;		/* (  3) */
    6950:	02 07       	IF CC R0 = R2;
    6952:	10 4d       	R0 >>>= 0x2;
    6954:	01 09       	CC = R1 <= R0;
    6956:	29 1c       	IF CC JUMP 0x69a8 <_ProcessQuery+0x638> (BP);
    6958:	28 e4 46 00 	R0 = [P5 + 0x118];
    695c:	00 0c       	CC = R0 == 0x0;
    695e:	03 18       	IF CC JUMP 0x6964 <_ProcessQuery+0x5f4>;
    6960:	28 08       	CC = R0 == R5;
    6962:	23 14       	IF !CC JUMP 0x69a8 <_ProcessQuery+0x638> (BP);
    6964:	e8 a3       	R0 = [P5 + 0x3c];
    6966:	00 0c       	CC = R0 == 0x0;
    6968:	20 14       	IF !CC JUMP 0x69a8 <_ProcessQuery+0x638> (BP);
    696a:	f1 af       	P1 = [SP + 0x3c];
    696c:	7d 32       	FP = P5;
    696e:	e7 6d       	FP += 0x3c;		/* ( 60) */
    6970:	79 08       	CC = P1 == FP;
    6972:	1b 1c       	IF CC JUMP 0x69a8 <_ProcessQuery+0x638> (BP);
    6974:	29 e4 8d 00 	R1 = [P5 + 0x234];
    6978:	30 e4 40 01 	R0 = [SP + 0x500];
    697c:	01 08       	CC = R1 == R0;
    697e:	15 14       	IF !CC JUMP 0x69a8 <_ProcessQuery+0x638> (BP);
    6980:	69 a0       	R1 = [P5 + 0x4];
    6982:	30 e4 b4 00 	R0 = [SP + 0x2d0];
    6986:	01 08       	CC = R1 == R0;
    6988:	10 14       	IF !CC JUMP 0x69a8 <_ProcessQuery+0x638> (BP);
    698a:	4d 30       	R1 = P5;
    698c:	22 e1 34 01 	R2 = 0x134 (X);		/*		R2=0x134(308) */
    6990:	28 e1 00 04 	P0 = 0x400 (X);		/*		P0=0x400(1024) */
    6994:	11 50       	R0 = R1 + R2;
    6996:	30 5a       	P0 = P0 + SP;
    6998:	48 30       	R1 = P0;
    699a:	ff e3 33 cb 	CALL 0x0 <_AddRecordToResponseList>;
    699e:	00 0c       	CC = R0 == 0x0;
    69a0:	04 1c       	IF CC JUMP 0x69a8 <_ProcessQuery+0x638> (BP);
    69a2:	f1 af       	P1 = [SP + 0x3c];
    69a4:	4d 93       	[P1] = P5;
    69a6:	f7 bf       	[SP + 0x3c] = FP;
    69a8:	00 00       	NOP;
    69aa:	6d 91       	P5 = [P5];
    69ac:	45 0c       	CC = P5 == 0x0;
    69ae:	b9 17       	IF !CC JUMP 0x6920 <_ProcessQuery+0x5b0> (BP);
    69b0:	30 e4 10 00 	R0 = [SP + 0x40];
    69b4:	08 64       	R0 += 0x1;		/* (  1) */
    69b6:	30 e6 10 00 	[SP + 0x40] = R0;
    69ba:	98 a4       	R0 = W[P3 + 0x4] (Z);
    69bc:	31 e4 10 00 	R1 = [SP + 0x40];
    69c0:	81 08       	CC = R1 < R0;
    69c2:	02 10       	IF !CC JUMP 0x69c6 <_ProcessQuery+0x656>;
    69c4:	6c 2d       	JUMP.S 0x649c <_ProcessQuery+0x12c>;
    69c6:	3c 30       	R7 = R4;
    69c8:	6c 32       	P5 = P4;
    69ca:	73 30       	R6 = P3;
    69cc:	56 30       	R2 = SP;
    69ce:	23 e1 38 05 	R3 = 0x538 (X);		/*		R3=0x538(1336) */
    69d2:	33 e5 18 00 	P3 = [SP + 0x60];
    69d6:	37 e5 19 00 	FP = [SP + 0x64];
    69da:	24 e5 f2 07 	P4 = [P4 + 0x1fc8];
    69de:	1a 51       	R4 = R2 + R3;
    69e0:	0c 20       	JUMP.S 0x69f8 <_ProcessQuery+0x688>;
    69e2:	00 00       	NOP;
    69e4:	20 e4 2d 00 	R0 = [P4 + 0xb4];
    69e8:	00 0c       	CC = R0 == 0x0;
    69ea:	06 18       	IF CC JUMP 0x69f6 <_ProcessQuery+0x686>;
    69ec:	04 30       	R0 = R4;
    69ee:	4c 30       	R1 = P4;
    69f0:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    69f2:	ff e3 07 cb 	CALL 0x0 <_AddRecordToResponseList>;
    69f6:	64 91       	P4 = [P4];
    69f8:	44 0c       	CC = P4 == 0x0;
    69fa:	f4 17       	IF !CC JUMP 0x69e2 <_ProcessQuery+0x672> (BP);
    69fc:	66 30       	R4 = SP;
    69fe:	23 e1 38 05 	R3 = 0x538 (X);		/*		R3=0x538(1336) */
    6a02:	9c 50       	R2 = R4 + R3;
    6a04:	f5 b0       	[SP + 0xc] = R5;
    6a06:	45 30       	R0 = P5;
    6a08:	31 e4 4f 01 	R1 = [SP + 0x53c];
    6a0c:	ff e3 38 cf 	CALL 0x87c <_AddAdditionalsToResponseList>;
    6a10:	2a e1 84 7c 	P2 = 0x7c84 (X);		/*		P2=0x7c84(31876) */
    6a14:	95 5a       	P2 = P5 + P2;
    6a16:	04 60       	R4 = 0x0 (X);		/*		R4=0x0(  0) */
    6a18:	32 bf       	[SP + 0x30] = P2;
    6a1a:	f4 b2       	[SP + 0x2c] = R4;
    6a1c:	2a e1 88 7c 	P2 = 0x7c88 (X);		/*		P2=0x7c88(31880) */
    6a20:	44 e1 00 00 	R4.H = 0x0;		/* (  0)	R4=0x0 <_AddRecordToResponseList>(  0) */
    6a24:	95 5a       	P2 = P5 + P2;
    6a26:	04 e1 00 00 	R4.L = 0x0;		/* (  0)	R4=0x0 <_AddRecordToResponseList>(  0) */
    6a2a:	72 bf       	[SP + 0x34] = P2;
    6a2c:	65 32       	P4 = P5;
    6a2e:	0c 21       	JUMP.S 0x6c46 <_ProcessQuery+0x8d6>;
    6a30:	31 af       	P1 = [SP + 0x30];
    6a32:	30 e5 5b 01 	P0 = [SP + 0x56c];
    6a36:	00 62       	R0 = -0x40 (X);		/*		R0=0xffffffc0(-64) */
    6a38:	b0 e6 14 00 	B[SP + 0x14] = R0;
    6a3c:	35 b1       	[SP + 0x10] = R5;
    6a3e:	f0 bc       	[SP + 0xc] = P0;
    6a40:	b1 bd       	[SP + 0x18] = P1;
    6a42:	44 30       	R0 = P4;
    6a44:	0e 30       	R1 = R6;
    6a46:	b2 a2       	R2 = [SP + 0x28];
    6a48:	ff e3 dc ca 	CALL 0x0 <_AddRecordToResponseList>;
    6a4c:	b0 b2       	[SP + 0x28] = R0;
    6a4e:	00 0c       	CC = R0 == 0x0;
    6a50:	02 14       	IF !CC JUMP 0x6a54 <_ProcessQuery+0x6e4> (BP);
    6a52:	14 23       	JUMP.S 0x707a <_ProcessQuery+0xd0a>;
    6a54:	21 e1 f0 00 	R1 = 0xf0 (X);		/*		R1=0xf0(240) */
    6a58:	a0 e4 88 7c 	R0 = B[P4 + 0x7c88] (Z);
    6a5c:	08 08       	CC = R0 == R1;
    6a5e:	ee 18       	IF CC JUMP 0x6c3a <_ProcessQuery+0x8ca>;
    6a60:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    6a62:	35 e5 4f 01 	P5 = [SP + 0x53c];
    6a66:	19 20       	JUMP.S 0x6a98 <_ProcessQuery+0x728>;
    6a68:	00 00       	NOP;
    6a6a:	28 e4 2d 00 	R0 = [P5 + 0xb4];
    6a6e:	00 0c       	CC = R0 == 0x0;
    6a70:	05 14       	IF !CC JUMP 0x6a7a <_ProcessQuery+0x70a> (BP);
    6a72:	28 e4 2e 00 	R0 = [P5 + 0xb8];
    6a76:	00 0c       	CC = R0 == 0x0;
    6a78:	0d 18       	IF CC JUMP 0x6a92 <_ProcessQuery+0x722>;
    6a7a:	72 b2       	[SP + 0x24] = R2;
    6a7c:	30 a3       	R0 = [SP + 0x30];
    6a7e:	4d 30       	R1 = P5;
    6a80:	ff e3 6e d3 	CALL 0x115c <_ShouldSuppressKnownAnswer>;
    6a84:	00 0c       	CC = R0 == 0x0;
    6a86:	72 a2       	R2 = [SP + 0x24];
    6a88:	05 1c       	IF CC JUMP 0x6a92 <_ProcessQuery+0x722> (BP);
    6a8a:	2a e6 2d 00 	[P5 + 0xb4] = R2;
    6a8e:	2a e6 2e 00 	[P5 + 0xb8] = R2;
    6a92:	00 00       	NOP;
    6a94:	2d e5 2c 00 	P5 = [P5 + 0xb0];
    6a98:	45 0c       	CC = P5 == 0x0;
    6a9a:	e7 17       	IF !CC JUMP 0x6a68 <_ProcessQuery+0x6f8> (BP);
    6a9c:	25 e5 f2 07 	P5 = [P4 + 0x1fc8];
    6aa0:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    6aa2:	03 60       	R3 = 0x0 (X);		/*		R3=0x0(  0) */
    6aa4:	2a e1 a0 00 	P2 = 0xa0 (X);		/*		P2=0xa0(160) */
    6aa8:	68 20       	JUMP.S 0x6b78 <_ProcessQuery+0x808>;
    6aaa:	00 00       	NOP;
    6aac:	28 e4 24 00 	R0 = [P5 + 0x90];
    6ab0:	28 08       	CC = R0 == R5;
    6ab2:	61 14       	IF !CC JUMP 0x6b74 <_ProcessQuery+0x804> (BP);
    6ab4:	72 b2       	[SP + 0x24] = R2;
    6ab6:	33 b2       	[SP + 0x20] = R3;
    6ab8:	f2 bd       	[SP + 0x1c] = P2;
    6aba:	30 a3       	R0 = [SP + 0x30];
    6abc:	4d 30       	R1 = P5;
    6abe:	ff e3 4f d3 	CALL 0x115c <_ShouldSuppressKnownAnswer>;
    6ac2:	00 0c       	CC = R0 == 0x0;
    6ac4:	72 a2       	R2 = [SP + 0x24];
    6ac6:	33 a2       	R3 = [SP + 0x20];
    6ac8:	f2 ad       	P2 = [SP + 0x1c];
    6aca:	55 1c       	IF CC JUMP 0x6b74 <_ProcessQuery+0x804> (BP);
    6acc:	18 91       	R0 = [P3];
    6ace:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
    6ad0:	08 08       	CC = R0 == R1;
    6ad2:	0e 14       	IF !CC JUMP 0x6aee <_ProcessQuery+0x77e> (BP);
    6ad4:	29 e4 27 00 	R1 = [P5 + 0x9c];
    6ad8:	58 a0       	R0 = [P3 + 0x4];
    6ada:	01 08       	CC = R1 == R0;
    6adc:	36 14       	IF !CC JUMP 0x6b48 <_ProcessQuery+0x7d8> (BP);
    6ade:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0x400 */
    6ae2:	08 e1 00 00 	P0.L = 0x0;		/* (  0)	P0=0x0 <_AddRecordToResponseList> */
    6ae6:	00 91       	R0 = [P0];
    6ae8:	28 e6 27 00 	[P5 + 0x9c] = R0;
    6aec:	2e 20       	JUMP.S 0x6b48 <_ProcessQuery+0x7d8>;
    6aee:	31 60       	R1 = 0x6 (X);		/*		R1=0x6(  6) */
    6af0:	08 08       	CC = R0 == R1;
    6af2:	2b 14       	IF !CC JUMP 0x6b48 <_ProcessQuery+0x7d8> (BP);
    6af4:	29 e4 28 00 	R1 = [P5 + 0xa0];
    6af8:	58 a0       	R0 = [P3 + 0x4];
    6afa:	01 08       	CC = R1 == R0;
    6afc:	26 14       	IF !CC JUMP 0x6b48 <_ProcessQuery+0x7d8> (BP);
    6afe:	29 e4 29 00 	R1 = [P5 + 0xa4];
    6b02:	98 a0       	R0 = [P3 + 0x8];
    6b04:	01 08       	CC = R1 == R0;
    6b06:	21 14       	IF !CC JUMP 0x6b48 <_ProcessQuery+0x7d8> (BP);
    6b08:	29 e4 2a 00 	R1 = [P5 + 0xa8];
    6b0c:	d8 a0       	R0 = [P3 + 0xc];
    6b0e:	01 08       	CC = R1 == R0;
    6b10:	1c 14       	IF !CC JUMP 0x6b48 <_ProcessQuery+0x7d8> (BP);
    6b12:	29 e4 2b 00 	R1 = [P5 + 0xac];
    6b16:	18 a1       	R0 = [P3 + 0x10];
    6b18:	01 08       	CC = R1 == R0;
    6b1a:	17 14       	IF !CC JUMP 0x6b48 <_ProcessQuery+0x7d8> (BP);
    6b1c:	04 32       	P0 = R4;
    6b1e:	55 5a       	P1 = P5 + P2;
    6b20:	00 91       	R0 = [P0];
    6b22:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0x0 <_AddRecordToResponseList> */
    6b26:	08 92       	[P1++] = R0;
    6b28:	08 e1 04 00 	P0.L = 0x4;		/* (  4)	P0=0x4 */
    6b2c:	00 91       	R0 = [P0];
    6b2e:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0x4 */
    6b32:	08 92       	[P1++] = R0;
    6b34:	08 e1 08 00 	P0.L = 0x8;		/* (  8)	P0=0x8 */
    6b38:	00 91       	R0 = [P0];
    6b3a:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0x8 */
    6b3e:	08 92       	[P1++] = R0;
    6b40:	08 e1 0c 00 	P0.L = 0xc;		/* ( 12)	P0=0xc */
    6b44:	00 91       	R0 = [P0];
    6b46:	08 93       	[P1] = R0;
    6b48:	00 00       	NOP;
    6b4a:	28 e4 27 00 	R0 = [P5 + 0x9c];
    6b4e:	00 0c       	CC = R0 == 0x0;
    6b50:	12 14       	IF !CC JUMP 0x6b74 <_ProcessQuery+0x804> (BP);
    6b52:	29 e4 29 00 	R1 = [P5 + 0xa4];
    6b56:	28 e4 28 00 	R0 = [P5 + 0xa0];
    6b5a:	01 56       	R0 = R1 | R0;
    6b5c:	29 e4 2a 00 	R1 = [P5 + 0xa8];
    6b60:	08 56       	R0 = R0 | R1;
    6b62:	29 e4 2b 00 	R1 = [P5 + 0xac];
    6b66:	08 56       	R0 = R0 | R1;
    6b68:	00 0c       	CC = R0 == 0x0;
    6b6a:	05 14       	IF !CC JUMP 0x6b74 <_ProcessQuery+0x804> (BP);
    6b6c:	2a e6 24 00 	[P5 + 0x90] = R2;
    6b70:	ab e6 8a 00 	B[P5 + 0x8a] = R3;
    6b74:	00 00       	NOP;
    6b76:	6d 91       	P5 = [P5];
    6b78:	45 0c       	CC = P5 == 0x0;
    6b7a:	98 17       	IF !CC JUMP 0x6aaa <_ProcessQuery+0x73a> (BP);
    6b7c:	44 30       	R0 = P4;
    6b7e:	71 a3       	R1 = [SP + 0x34];
    6b80:	ff e3 52 dc 	CALL 0x2424 <_FindIdenticalRecordInCache>;
    6b84:	29 e1 34 05 	P1 = 0x534 (X);		/*		P1=0x534(1332) */
    6b88:	f0 b3       	[SP + 0x3c] = R0;
    6b8a:	8e 5a       	P2 = SP + P1;
    6b8c:	39 20       	JUMP.S 0x6bfe <_ProcessQuery+0x88e>;
    6b8e:	00 00       	NOP;
    6b90:	e8 a1       	R0 = [P5 + 0x1c];
    6b92:	28 08       	CC = R0 == R5;
    6b94:	33 14       	IF !CC JUMP 0x6bfa <_ProcessQuery+0x88a> (BP);
    6b96:	61 e4 45 3e 	R1 = W[P4 + 0x7c8a] (Z);
    6b9a:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    6b9c:	01 08       	CC = R1 == R0;
    6b9e:	2e 14       	IF !CC JUMP 0x6bfa <_ProcessQuery+0x88a> (BP);
    6ba0:	61 e4 46 3e 	R1 = W[P4 + 0x7c8c] (Z);
    6ba4:	28 a5       	R0 = W[P5 + 0x8] (Z);
    6ba6:	01 08       	CC = R1 == R0;
    6ba8:	29 14       	IF !CC JUMP 0x6bfa <_ProcessQuery+0x88a> (BP);
    6baa:	21 e4 26 1f 	R1 = [P4 + 0x7c98];
    6bae:	68 a1       	R0 = [P5 + 0x14];
    6bb0:	01 08       	CC = R1 == R0;
    6bb2:	24 14       	IF !CC JUMP 0x6bfa <_ProcessQuery+0x88a> (BP);
    6bb4:	61 e4 4a 3e 	R1 = W[P4 + 0x7c94] (Z);
    6bb8:	28 a6       	R0 = W[P5 + 0x10] (Z);
    6bba:	01 08       	CC = R1 == R0;
    6bbc:	1f 14       	IF !CC JUMP 0x6bfa <_ProcessQuery+0x88a> (BP);
    6bbe:	21 e4 27 1f 	R1 = [P4 + 0x7c9c];
    6bc2:	a8 a1       	R0 = [P5 + 0x18];
    6bc4:	01 08       	CC = R1 == R0;
    6bc6:	1a 14       	IF !CC JUMP 0x6bfa <_ProcessQuery+0x88a> (BP);
    6bc8:	69 a2       	R1 = [P5 + 0x24];
    6bca:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    6bce:	21 64       	R1 += 0x4;		/* (  4) */
    6bd0:	70 a3       	R0 = [SP + 0x34];
    6bd2:	02 e1 00 00 	R2.L = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    6bd6:	f2 bd       	[SP + 0x1c] = P2;
    6bd8:	ff e3 14 ca 	CALL 0x0 <_AddRecordToResponseList>;
    6bdc:	00 0c       	CC = R0 == 0x0;
    6bde:	0e 1c       	IF CC JUMP 0x6bfa <_ProcessQuery+0x88a> (BP);
    6be0:	20 e4 29 1f 	R0 = [P4 + 0x7ca4];
    6be4:	29 a2       	R1 = [P5 + 0x20];
    6be6:	ff e3 0d ca 	CALL 0x0 <_AddRecordToResponseList>;
    6bea:	00 0c       	CC = R0 == 0x0;
    6bec:	f2 ad       	P2 = [SP + 0x1c];
    6bee:	06 1c       	IF CC JUMP 0x6bfa <_ProcessQuery+0x88a> (BP);
    6bf0:	e8 a2       	R0 = [P5 + 0x2c];
    6bf2:	10 93       	[P2] = R0;
    6bf4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    6bf6:	e8 b2       	[P5 + 0x2c] = R0;
    6bf8:	03 20       	JUMP.S 0x6bfe <_ProcessQuery+0x88e>;
    6bfa:	55 32       	P2 = P5;
    6bfc:	62 6d       	P2 += 0x2c;		/* ( 44) */
    6bfe:	55 91       	P5 = [P2];
    6c00:	45 0c       	CC = P5 == 0x0;
    6c02:	c6 17       	IF !CC JUMP 0x6b8e <_ProcessQuery+0x81e> (BP);
    6c04:	f1 a3       	R1 = [SP + 0x3c];
    6c06:	01 0c       	CC = R1 == 0x0;
    6c08:	19 14       	IF !CC JUMP 0x6c3a <_ProcessQuery+0x8ca> (BP);
    6c0a:	28 e1 30 05 	P0 = 0x530 (X);		/*		P0=0x530(1328) */
    6c0e:	86 5a       	P2 = SP + P0;
    6c10:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    6c12:	11 20       	JUMP.S 0x6c34 <_ProcessQuery+0x8c4>;
    6c14:	72 b2       	[SP + 0x24] = R2;
    6c16:	f2 bd       	[SP + 0x1c] = P2;
    6c18:	70 a3       	R0 = [SP + 0x34];
    6c1a:	4d 30       	R1 = P5;
    6c1c:	ff e3 f2 c9 	CALL 0x0 <_AddRecordToResponseList>;
    6c20:	00 0c       	CC = R0 == 0x0;
    6c22:	72 a2       	R2 = [SP + 0x24];
    6c24:	f2 ad       	P2 = [SP + 0x1c];
    6c26:	05 1c       	IF CC JUMP 0x6c30 <_ProcessQuery+0x8c0> (BP);
    6c28:	e8 a3       	R0 = [P5 + 0x3c];
    6c2a:	10 93       	[P2] = R0;
    6c2c:	ea b3       	[P5 + 0x3c] = R2;
    6c2e:	03 20       	JUMP.S 0x6c34 <_ProcessQuery+0x8c4>;
    6c30:	55 32       	P2 = P5;
    6c32:	e2 6d       	P2 += 0x3c;		/* ( 60) */
    6c34:	55 91       	P5 = [P2];
    6c36:	45 0c       	CC = P5 == 0x0;
    6c38:	ee 17       	IF !CC JUMP 0x6c14 <_ProcessQuery+0x8a4> (BP);
    6c3a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    6c3c:	a0 e6 88 7c 	B[P4 + 0x7c88] = R0;
    6c40:	f0 a2       	R0 = [SP + 0x2c];
    6c42:	08 64       	R0 += 0x1;		/* (  1) */
    6c44:	f0 b2       	[SP + 0x2c] = R0;
    6c46:	06 32       	P0 = R6;
    6c48:	f1 a2       	R1 = [SP + 0x2c];
    6c4a:	c0 a4       	R0 = W[P0 + 0x6] (Z);
    6c4c:	81 08       	CC = R1 < R0;
    6c4e:	f1 1e       	IF CC JUMP 0x6a30 <_ProcessQuery+0x6c0> (BP);
    6c50:	6c 32       	P5 = P4;
    6c52:	32 e5 4f 01 	P2 = [SP + 0x53c];
    6c56:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    6c58:	15 20       	JUMP.S 0x6c82 <_ProcessQuery+0x912>;
    6c5a:	00 00       	NOP;
    6c5c:	11 e5 2e 00 	P1 = [P2 + 0xb8];
    6c60:	41 0c       	CC = P1 == 0x0;
    6c62:	0d 1c       	IF CC JUMP 0x6c7c <_ProcessQuery+0x90c> (BP);
    6c64:	09 e4 2d 00 	R1 = [P1 + 0xb4];
    6c68:	01 0c       	CC = R1 == 0x0;
    6c6a:	09 14       	IF !CC JUMP 0x6c7c <_ProcessQuery+0x90c> (BP);
    6c6c:	09 e4 2e 00 	R1 = [P1 + 0xb8];
    6c70:	01 0c       	CC = R1 == 0x0;
    6c72:	05 14       	IF !CC JUMP 0x6c7c <_ProcessQuery+0x90c> (BP);
    6c74:	10 e6 2d 00 	[P2 + 0xb4] = R0;
    6c78:	10 e6 2e 00 	[P2 + 0xb8] = R0;
    6c7c:	00 00       	NOP;
    6c7e:	12 e5 2c 00 	P2 = [P2 + 0xb0];
    6c82:	42 0c       	CC = P2 == 0x0;
    6c84:	eb 17       	IF !CC JUMP 0x6c5a <_ProcessQuery+0x8ea> (BP);
    6c86:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0x530 */
    6c8a:	08 e1 00 00 	P0.L = 0x0;		/* (  0)	P0=0x0 <_AddRecordToResponseList> */
    6c8e:	58 30       	R3 = P0;
    6c90:	43 64       	R3 += 0x8;		/* (  8) */
    6c92:	43 34       	I0 = P3;
    6c94:	50 30       	R2 = P0;
    6c96:	03 36       	B0 = R3;
    6c98:	68 9f       	I0 += 0x4;		/* (  4) */
    6c9a:	22 64       	R2 += 0x4;		/* (  4) */
    6c9c:	98 30       	R3 = I0;
    6c9e:	0a 36       	B1 = R2;
    6ca0:	23 64       	R3 += 0x4;		/* (  4) */
    6ca2:	4c e1 00 00 	P4.H = 0x0;		/* (  0)	P4=0x0 <_AddRecordToResponseList> */
    6ca6:	58 34       	I3 = P0;
    6ca8:	34 e1 0c 00 	M0 = 0xc (X);		/*		M0=0xc( 12) */
    6cac:	13 30       	R2 = R3;
    6cae:	52 e1 00 00 	I2.H = 0x0;		/* (  0)	I2=0xb0 <_IPv6CheckSum>(176) */
    6cb2:	51 e1 00 00 	I1.H = 0x0;		/* (  0)	I1=0x0 <_AddRecordToResponseList>(  0) */
    6cb6:	32 e5 4f 01 	P2 = [SP + 0x53c];
    6cba:	04 60       	R4 = 0x0 (X);		/*		R4=0x0(  0) */
    6cbc:	0c e1 00 00 	P4.L = 0x0;		/* (  0)	P4=0x0 <_AddRecordToResponseList> */
    6cc0:	63 9e       	I3 += M0;
    6cc2:	22 64       	R2 += 0x4;		/* (  4) */
    6cc4:	12 e1 00 00 	I2.L = 0x0;		/* (  0)	I2=0x0 <_AddRecordToResponseList>(  0) */
    6cc8:	11 e1 00 00 	I1.L = 0x0;		/* (  0)	I1=0x0 <_AddRecordToResponseList>(  0) */
    6ccc:	77 34       	M2 = FP;
    6cce:	ba 20       	JUMP.S 0x6e42 <_ProcessQuery+0xad2>;
    6cd0:	00 00       	NOP;
    6cd2:	17 e5 2d 00 	FP = [P2 + 0xb4];
    6cd6:	47 0c       	CC = FP == 0x0;
    6cd8:	a7 1c       	IF CC JUMP 0x6e26 <_ProcessQuery+0xab6> (BP);
    6cda:	29 e4 37 00 	R1 = [P5 + 0xdc];
    6cde:	10 e4 31 00 	R0 = [P2 + 0xc4];
    6ce2:	01 52       	R0 = R1 - R0;
    6ce4:	18 36       	B3 = R0;
    6ce6:	21 91       	R1 = [P4];
    6ce8:	d0 a0       	R0 = [P2 + 0xc];
    6cea:	c8 40       	R0 *= R1;
    6cec:	08 32       	P1 = R0;
    6cee:	80 0c       	CC = R0 < 0x0;
    6cf0:	cb 30       	R1 = B3;
    6cf2:	19 6c       	P1 += 0x3;		/* (  3) */
    6cf4:	41 07       	IF CC R0 = P1;
    6cf6:	10 4d       	R0 >>>= 0x2;
    6cf8:	01 52       	R0 = R1 - R0;
    6cfa:	80 0c       	CC = R0 < 0x0;
    6cfc:	07 18       	IF CC JUMP 0x6d0a <_ProcessQuery+0x99a>;
    6cfe:	77 0c       	CC = FP == -0x2;
    6d00:	07 14       	IF !CC JUMP 0x6d0e <_ProcessQuery+0x99e> (BP);
    6d02:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
    6d04:	10 e6 2d 00 	[P2 + 0xb4] = R0;
    6d08:	03 20       	JUMP.S 0x6d0e <_ProcessQuery+0x99e>;
    6d0a:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    6d0c:	02 20       	JUMP.S 0x6d10 <_ProcessQuery+0x9a0>;
    6d0e:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    6d10:	10 e4 2d 00 	R0 = [P2 + 0xb4];
    6d14:	38 0c       	CC = R0 == -0x1;
    6d16:	0f 18       	IF CC JUMP 0x6d34 <_ProcessQuery+0x9c4>;
    6d18:	30 0c       	CC = R0 == -0x2;
    6d1a:	06 18       	IF CC JUMP 0x6d26 <_ProcessQuery+0x9b6>;
    6d1c:	00 0c       	CC = R0 == 0x0;
    6d1e:	09 68       	P1 = 0x1 (X);		/*		P1=0x1(  1) */
    6d20:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    6d22:	61 06       	IF !CC R4 = P1;
    6d24:	02 20       	JUMP.S 0x6d28 <_ProcessQuery+0x9b8>;
    6d26:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    6d28:	01 0c       	CC = R1 == 0x0;
    6d2a:	06 10       	IF !CC JUMP 0x6d36 <_ProcessQuery+0x9c6>;
    6d2c:	00 0c       	CC = R0 == 0x0;
    6d2e:	6c 1c       	IF CC JUMP 0x6e06 <_ProcessQuery+0xa96> (BP);
    6d30:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    6d32:	02 20       	JUMP.S 0x6d36 <_ProcessQuery+0x9c6>;
    6d34:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    6d36:	29 e4 37 00 	R1 = [P5 + 0xdc];
    6d3a:	29 e6 3f 00 	[P5 + 0xfc] = R1;
    6d3e:	11 e4 24 00 	R1 = [P2 + 0x90];
    6d42:	01 0c       	CC = R1 == 0x0;
    6d44:	07 18       	IF CC JUMP 0x6d52 <_ProcessQuery+0x9e2>;
    6d46:	29 08       	CC = R1 == R5;
    6d48:	05 18       	IF CC JUMP 0x6d52 <_ProcessQuery+0x9e2>;
    6d4a:	08 9d       	R0 = [I1];
    6d4c:	10 e6 24 00 	[P2 + 0x90] = R0;
    6d50:	5b 20       	JUMP.S 0x6e06 <_ProcessQuery+0xa96>;
    6d52:	15 e6 24 00 	[P2 + 0x90] = R5;
    6d56:	00 0c       	CC = R0 == 0x0;
    6d58:	04 1c       	IF CC JUMP 0x6d60 <_ProcessQuery+0x9f0> (BP);
    6d5a:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    6d5c:	90 e6 8a 00 	B[P2 + 0x8a] = R0;
    6d60:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
    6d62:	18 91       	R0 = [P3];
    6d64:	08 08       	CC = R0 == R1;
    6d66:	0f 14       	IF !CC JUMP 0x6d84 <_ProcessQuery+0xa14> (BP);
    6d68:	10 e4 27 00 	R0 = [P2 + 0x9c];
    6d6c:	00 0c       	CC = R0 == 0x0;
    6d6e:	03 14       	IF !CC JUMP 0x6d74 <_ProcessQuery+0xa04> (BP);
    6d70:	58 a0       	R0 = [P3 + 0x4];
    6d72:	06 20       	JUMP.S 0x6d7e <_ProcessQuery+0xa0e>;
    6d74:	00 00       	NOP;
    6d76:	59 a0       	R1 = [P3 + 0x4];
    6d78:	08 08       	CC = R0 == R1;
    6d7a:	46 18       	IF CC JUMP 0x6e06 <_ProcessQuery+0xa96>;
    6d7c:	10 9d       	R0 = [I2];
    6d7e:	10 e6 27 00 	[P2 + 0x9c] = R0;
    6d82:	42 20       	JUMP.S 0x6e06 <_ProcessQuery+0xa96>;
    6d84:	31 60       	R1 = 0x6 (X);		/*		R1=0x6(  6) */
    6d86:	08 08       	CC = R0 == R1;
    6d88:	3f 14       	IF !CC JUMP 0x6e06 <_ProcessQuery+0xa96> (BP);
    6d8a:	11 e5 28 00 	P1 = [P2 + 0xa0];
    6d8e:	17 e5 2a 00 	FP = [P2 + 0xa8];
    6d92:	10 e4 2b 00 	R0 = [P2 + 0xac];
    6d96:	28 34       	M1 = R0;
    6d98:	51 36       	B2 = P1;
    6d9a:	11 e5 29 00 	P1 = [P2 + 0xa4];
    6d9e:	c2 30       	R0 = B2;
    6da0:	67 34       	M0 = FP;
    6da2:	49 30       	R1 = P1;
    6da4:	41 56       	R1 = R1 | R0;
    6da6:	47 30       	R0 = FP;
    6da8:	41 56       	R1 = R1 | R0;
    6daa:	85 30       	R0 = M1;
    6dac:	41 56       	R1 = R1 | R0;
    6dae:	01 0c       	CC = R1 == 0x0;
    6db0:	0e 14       	IF !CC JUMP 0x6dcc <_ProcessQuery+0xa5c> (BP);
    6db2:	3b 32       	FP = R3;
    6db4:	29 e1 a0 00 	P1 = 0xa0 (X);		/*		P1=0xa0(160) */
    6db8:	00 9d       	R0 = [I0];
    6dba:	4a 5a       	P1 = P2 + P1;
    6dbc:	08 92       	[P1++] = R0;
    6dbe:	38 91       	R0 = [FP];
    6dc0:	3a 32       	FP = R2;
    6dc2:	08 92       	[P1++] = R0;
    6dc4:	38 91       	R0 = [FP];
    6dc6:	08 92       	[P1++] = R0;
    6dc8:	78 a0       	R0 = [FP + 0x4];
    6dca:	1d 20       	JUMP.S 0x6e04 <_ProcessQuery+0xa94>;
    6dcc:	ca 30       	R1 = B2;
    6dce:	58 a0       	R0 = [P3 + 0x4];
    6dd0:	01 08       	CC = R1 == R0;
    6dd2:	0d 14       	IF !CC JUMP 0x6dec <_ProcessQuery+0xa7c> (BP);
    6dd4:	99 a0       	R1 = [P3 + 0x8];
    6dd6:	39 32       	FP = R1;
    6dd8:	79 08       	CC = P1 == FP;
    6dda:	09 14       	IF !CC JUMP 0x6dec <_ProcessQuery+0xa7c> (BP);
    6ddc:	d9 ac       	P1 = [P3 + 0xc];
    6dde:	bc 32       	FP = M0;
    6de0:	4f 08       	CC = FP == P1;
    6de2:	05 14       	IF !CC JUMP 0x6dec <_ProcessQuery+0xa7c> (BP);
    6de4:	19 a1       	R1 = [P3 + 0x10];
    6de6:	85 30       	R0 = M1;
    6de8:	08 08       	CC = R0 == R1;
    6dea:	0e 18       	IF CC JUMP 0x6e06 <_ProcessQuery+0xa96>;
    6dec:	29 e1 a0 00 	P1 = 0xa0 (X);		/*		P1=0xa0(160) */
    6df0:	4a 5a       	P1 = P2 + P1;
    6df2:	f9 32       	FP = B1;
    6df4:	00 91       	R0 = [P0];
    6df6:	08 92       	[P1++] = R0;
    6df8:	38 91       	R0 = [FP];
    6dfa:	08 92       	[P1++] = R0;
    6dfc:	f8 32       	FP = B0;
    6dfe:	38 91       	R0 = [FP];
    6e00:	08 92       	[P1++] = R0;
    6e02:	18 9d       	R0 = [I3];
    6e04:	08 93       	[P1] = R0;
    6e06:	0e 32       	P1 = R6;
    6e08:	88 e4 02 00 	R0 = B[P1 + 0x2] (Z);
    6e0c:	08 48       	CC = !BITTST (R0, 0x1);		/* bit  1 */
    6e0e:	05 1c       	IF CC JUMP 0x6e18 <_ProcessQuery+0xaa8> (BP);
    6e10:	a7 60       	R7 = 0x14 (X);		/*		R7=0x14( 20) */
    6e12:	20 91       	R0 = [P4];
    6e14:	c7 40       	R7 *= R0;
    6e16:	13 20       	JUMP.S 0x6e3c <_ProcessQuery+0xacc>;
    6e18:	41 60       	R1 = 0x8 (X);		/*		R1=0x8(  8) */
    6e1a:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
    6e1e:	08 08       	CC = R0 == R1;
    6e20:	20 91       	R0 = [P4];
    6e22:	38 07       	IF CC R7 = R0;
    6e24:	0c 20       	JUMP.S 0x6e3c <_ProcessQuery+0xacc>;
    6e26:	00 00       	NOP;
    6e28:	11 e5 2e 00 	P1 = [P2 + 0xb8];
    6e2c:	41 0c       	CC = P1 == 0x0;
    6e2e:	07 1c       	IF CC JUMP 0x6e3c <_ProcessQuery+0xacc> (BP);
    6e30:	08 e4 2d 00 	R0 = [P1 + 0xb4];
    6e34:	38 0c       	CC = R0 == -0x1;
    6e36:	03 14       	IF !CC JUMP 0x6e3c <_ProcessQuery+0xacc> (BP);
    6e38:	15 e6 25 00 	[P2 + 0x94] = R5;
    6e3c:	00 00       	NOP;
    6e3e:	12 e5 2c 00 	P2 = [P2 + 0xb0];
    6e42:	42 0c       	CC = P2 == 0x0;
    6e44:	46 17       	IF !CC JUMP 0x6cd0 <_ProcessQuery+0x960> (BP);
    6e46:	be 32       	FP = M2;
    6e48:	07 0c       	CC = R7 == 0x0;
    6e4a:	2c 1c       	IF CC JUMP 0x6ea2 <_ProcessQuery+0xb32> (BP);
    6e4c:	28 e4 3b 00 	R0 = [P5 + 0xec];
    6e50:	00 0c       	CC = R0 == 0x0;
    6e52:	0e 18       	IF CC JUMP 0x6e6e <_ProcessQuery+0xafe>;
    6e54:	00 32       	P0 = R0;
    6e56:	07 30       	R0 = R7;
    6e58:	91 61       	R1 = 0x32 (X);		/*		R1=0x32( 50) */
    6e5a:	2c e5 37 00 	P4 = [P5 + 0xdc];
    6e5e:	88 65       	R0 += 0x31;		/* ( 49) */
    6e60:	20 44       	P0 -= P4;
    6e62:	60 32       	P4 = P0;
    6e64:	ff e3 ce c8 	CALL 0x0 <_AddRecordToResponseList>;
    6e68:	4c 30       	R1 = P4;
    6e6a:	81 08       	CC = R1 < R0;
    6e6c:	1b 14       	IF !CC JUMP 0x6ea2 <_ProcessQuery+0xb32> (BP);
    6e6e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0xa0 */
    6e72:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    6e76:	10 91       	R0 = [P2];
    6e78:	82 c6 10 82 	R1 = R0 << 0x2;
    6e7c:	2c e5 37 00 	P4 = [P5 + 0xdc];
    6e80:	01 50       	R0 = R1 + R0;
    6e82:	ff e3 bf c8 	CALL 0x0 <_AddRecordToResponseList>;
    6e86:	8f 65       	R7 += 0x31;		/* ( 49) */
    6e88:	07 50       	R0 = R7 + R0;
    6e8a:	91 61       	R1 = 0x32 (X);		/*		R1=0x32( 50) */
    6e8c:	ff e3 ba c8 	CALL 0x0 <_AddRecordToResponseList>;
    6e90:	54 30       	R2 = P4;
    6e92:	10 50       	R0 = R0 + R2;
    6e94:	28 e6 3b 00 	[P5 + 0xec] = R0;
    6e98:	00 0c       	CC = R0 == 0x0;
    6e9a:	04 14       	IF !CC JUMP 0x6ea2 <_ProcessQuery+0xb32> (BP);
    6e9c:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    6e9e:	28 e6 3b 00 	[P5 + 0xec] = R0;
    6ea2:	04 0c       	CC = R4 == 0x0;
    6ea4:	ec 1c       	IF CC JUMP 0x707c <_ProcessQuery+0xd0c> (BP);
    6ea6:	7f 30       	R7 = FP;
    6ea8:	67 64       	R7 += 0xc;		/* ( 12) */
    6eaa:	07 32       	P0 = R7;
    6eac:	0e 32       	P1 = R6;
    6eae:	2a e1 ec 22 	P2 = 0x22ec (X);		/*		P2=0x22ec(8940) */
    6eb2:	47 30       	R0 = FP;
    6eb4:	34 e5 4f 01 	P4 = [SP + 0x53c];
    6eb8:	10 5a       	P0 = P0 + P2;
    6eba:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x22ec */
    6ebe:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    6ec2:	b0 be       	[SP + 0x28] = P0;
    6ec4:	09 95       	R1 = W[P1] (Z);
    6ec6:	12 95       	R2 = W[P2] (Z);
    6ec8:	ff e3 9c c8 	CALL 0x0 <_AddRecordToResponseList>;
    6ecc:	30 e4 5e 01 	R0 = [SP + 0x578];
    6ed0:	00 0c       	CC = R0 == 0x0;
    6ed2:	3f 1c       	IF CC JUMP 0x6f50 <_ProcessQuery+0xbe0> (BP);
    6ed4:	04 60       	R4 = 0x0 (X);		/*		R4=0x0(  0) */
    6ed6:	2f 20       	JUMP.S 0x6f34 <_ProcessQuery+0xbc4>;
    6ed8:	28 e1 68 00 	P0 = 0x68 (X);		/*		P0=0x68(104) */
    6edc:	30 5a       	P0 = P0 + SP;
    6ede:	f5 b0       	[SP + 0xc] = R5;
    6ee0:	30 bd       	[SP + 0x10] = P0;
    6ee2:	06 30       	R0 = R6;
    6ee4:	b1 a3       	R1 = [SP + 0x38];
    6ee6:	32 e4 5b 01 	R2 = [SP + 0x56c];
    6eea:	ff e3 8b c8 	CALL 0x0 <_AddRecordToResponseList>;
    6eee:	b0 b3       	[SP + 0x38] = R0;
    6ef0:	00 0c       	CC = R0 == 0x0;
    6ef2:	c5 18       	IF CC JUMP 0x707c <_ProcessQuery+0xd0c>;
    6ef4:	54 32       	P2 = P4;
    6ef6:	1c 20       	JUMP.S 0x6f2e <_ProcessQuery+0xbbe>;
    6ef8:	b1 a3       	R1 = [SP + 0x38];
    6efa:	10 e4 2d 00 	R0 = [P2 + 0xb4];
    6efe:	08 08       	CC = R0 == R1;
    6f00:	14 14       	IF !CC JUMP 0x6f28 <_ProcessQuery+0xbb8> (BP);
    6f02:	70 e5 4e 01 	R0 = W[SP + 0x29c] (X);
    6f06:	30 b6       	W[SP + 0x10] = R0;
    6f08:	70 e5 4f 01 	R0 = W[SP + 0x29e] (X);
    6f0c:	28 e1 9c 01 	P0 = 0x19c (X);		/*		P0=0x19c(412) */
    6f10:	30 5a       	P0 = P0 + SP;
    6f12:	b0 b6       	W[SP + 0x14] = R0;
    6f14:	0f 30       	R1 = R7;
    6f16:	f0 bc       	[SP + 0xc] = P0;
    6f18:	47 30       	R0 = FP;
    6f1a:	b2 a2       	R2 = [SP + 0x28];
    6f1c:	ff e3 72 c8 	CALL 0x0 <_AddRecordToResponseList>;
    6f20:	38 30       	R7 = R0;
    6f22:	00 0c       	CC = R0 == 0x0;
    6f24:	07 14       	IF !CC JUMP 0x6f32 <_ProcessQuery+0xbc2> (BP);
    6f26:	ac 20       	JUMP.S 0x707e <_ProcessQuery+0xd0e>;
    6f28:	00 00       	NOP;
    6f2a:	12 e5 2c 00 	P2 = [P2 + 0xb0];
    6f2e:	42 0c       	CC = P2 == 0x0;
    6f30:	e4 17       	IF !CC JUMP 0x6ef8 <_ProcessQuery+0xb88> (BP);
    6f32:	0c 64       	R4 += 0x1;		/* (  1) */
    6f34:	0e 32       	P1 = R6;
    6f36:	88 a4       	R0 = W[P1 + 0x4] (Z);
    6f38:	84 08       	CC = R4 < R0;
    6f3a:	cf 1f       	IF CC JUMP 0x6ed8 <_ProcessQuery+0xb68> (BP);
    6f3c:	b8 a4       	R0 = W[FP + 0x4] (Z);
    6f3e:	00 0c       	CC = R0 == 0x0;
    6f40:	0b 14       	IF !CC JUMP 0x6f56 <_ProcessQuery+0xbe6> (BP);
    6f42:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x32( 50) */
    6f46:	01 e1 4c 1e 	R1.L = 0x1e4c;		/* (7756)	R1=0x1e4c(7756) */
    6f4a:	ff e3 5b c8 	CALL 0x0 <_AddRecordToResponseList>;
    6f4e:	97 20       	JUMP.S 0x707c <_ProcessQuery+0xd0c>;
    6f50:	3b 60       	R3 = 0x7 (X);		/*		R3=0x7(  7) */
    6f52:	e3 4f       	R3 <<= 0x1c;
    6f54:	02 20       	JUMP.S 0x6f58 <_ProcessQuery+0xbe8>;
    6f56:	53 60       	R3 = 0xa (X);		/*		R3=0xa( 10) */
    6f58:	06 30       	R0 = R6;
    6f5a:	33 30       	R6 = R3;
    6f5c:	64 30       	R4 = P4;
    6f5e:	57 32       	P2 = FP;
    6f60:	5c 30       	R3 = P4;
    6f62:	32 6c       	P2 += 0x6;		/* (  6) */
    6f64:	65 32       	P4 = P5;
    6f66:	b2 be       	[SP + 0x28] = P2;
    6f68:	2c 32       	P5 = R4;
    6f6a:	2a e1 a0 05 	P2 = 0x5a0 (X);		/*		P2=0x5a0(1440) */
    6f6e:	29 e1 ec 22 	P1 = 0x22ec (X);		/*		P1=0x22ec(8940) */
    6f72:	20 30       	R4 = R0;
    6f74:	36 20       	JUMP.S 0x6fe0 <_ProcessQuery+0xc70>;
    6f76:	00 00       	NOP;
    6f78:	28 e4 2d 00 	R0 = [P5 + 0xb4];
    6f7c:	00 0c       	CC = R0 == 0x0;
    6f7e:	2e 1c       	IF CC JUMP 0x6fda <_ProcessQuery+0xc6a> (BP);
    6f80:	55 30       	R2 = P5;
    6f82:	22 64       	R2 += 0x4;		/* (  4) */
    6f84:	e8 a0       	R0 = [P5 + 0xc];
    6f86:	06 0a       	CC = R6 <= R0 (IU);
    6f88:	0e 07       	IF CC R1 = R6;
    6f8a:	08 06       	IF !CC R1 = R0;
    6f8c:	f8 a4       	R0 = W[FP + 0x6] (Z);
    6f8e:	00 0c       	CC = R0 == 0x0;
    6f90:	09 14       	IF !CC JUMP 0x6fa2 <_ProcessQuery+0xc32> (BP);
    6f92:	38 a5       	R0 = W[FP + 0x8] (Z);
    6f94:	00 0c       	CC = R0 == 0x0;
    6f96:	06 14       	IF !CC JUMP 0x6fa2 <_ProcessQuery+0xc32> (BP);
    6f98:	78 a5       	R0 = W[FP + 0xa] (Z);
    6f9a:	00 0c       	CC = R0 == 0x0;
    6f9c:	41 07       	IF CC R0 = P1;
    6f9e:	42 06       	IF !CC R0 = P2;
    6fa0:	03 20       	JUMP.S 0x6fa6 <_ProcessQuery+0xc36>;
    6fa2:	20 e1 a0 05 	R0 = 0x5a0 (X);		/*		R0=0x5a0(1440) */
    6fa6:	00 32       	P0 = R0;
    6fa8:	f2 b0       	[SP + 0xc] = R2;
    6faa:	31 b1       	[SP + 0x10] = R1;
    6fac:	33 b2       	[SP + 0x20] = R3;
    6fae:	71 be       	[SP + 0x24] = P1;
    6fb0:	60 6c       	P0 += 0xc;		/* ( 12) */
    6fb2:	07 5a       	P0 = FP + P0;
    6fb4:	f2 bd       	[SP + 0x1c] = P2;
    6fb6:	70 bd       	[SP + 0x14] = P0;
    6fb8:	47 30       	R0 = FP;
    6fba:	0f 30       	R1 = R7;
    6fbc:	b2 a2       	R2 = [SP + 0x28];
    6fbe:	ff e3 21 c8 	CALL 0x0 <_AddRecordToResponseList>;
    6fc2:	00 0c       	CC = R0 == 0x0;
    6fc4:	33 a2       	R3 = [SP + 0x20];
    6fc6:	71 ae       	P1 = [SP + 0x24];
    6fc8:	f2 ad       	P2 = [SP + 0x1c];
    6fca:	07 14       	IF !CC JUMP 0x6fd8 <_ProcessQuery+0xc68> (BP);
    6fcc:	b8 e5 02 00 	R0 = B[FP + 0x2] (X);
    6fd0:	08 4a       	BITSET (R0, 0x1);		/* bit  1 */
    6fd2:	b8 e6 02 00 	B[FP + 0x2] = R0;
    6fd6:	02 20       	JUMP.S 0x6fda <_ProcessQuery+0xc6a>;
    6fd8:	38 30       	R7 = R0;
    6fda:	00 00       	NOP;
    6fdc:	2d e5 2c 00 	P5 = [P5 + 0xb0];
    6fe0:	45 0c       	CC = P5 == 0x0;
    6fe2:	ca 17       	IF !CC JUMP 0x6f76 <_ProcessQuery+0xc06> (BP);
    6fe4:	32 20       	JUMP.S 0x7048 <_ProcessQuery+0xcd8>;
    6fe6:	00 00       	NOP;
    6fe8:	20 e4 2e 00 	R0 = [P4 + 0xb8];
    6fec:	00 0c       	CC = R0 == 0x0;
    6fee:	29 1c       	IF CC JUMP 0x7040 <_ProcessQuery+0xcd0> (BP);
    6ff0:	20 e4 2d 00 	R0 = [P4 + 0xb4];
    6ff4:	00 0c       	CC = R0 == 0x0;
    6ff6:	25 14       	IF !CC JUMP 0x7040 <_ProcessQuery+0xcd0> (BP);
    6ff8:	e0 a0       	R0 = [P4 + 0xc];
    6ffa:	06 0a       	CC = R6 <= R0 (IU);
    6ffc:	0e 07       	IF CC R1 = R6;
    6ffe:	08 06       	IF !CC R1 = R0;
    7000:	54 30       	R2 = P4;
    7002:	f8 a4       	R0 = W[FP + 0x6] (Z);
    7004:	22 64       	R2 += 0x4;		/* (  4) */
    7006:	00 0c       	CC = R0 == 0x0;
    7008:	09 14       	IF !CC JUMP 0x701a <_ProcessQuery+0xcaa> (BP);
    700a:	38 a5       	R0 = W[FP + 0x8] (Z);
    700c:	00 0c       	CC = R0 == 0x0;
    700e:	06 14       	IF !CC JUMP 0x701a <_ProcessQuery+0xcaa> (BP);
    7010:	78 a5       	R0 = W[FP + 0xa] (Z);
    7012:	00 0c       	CC = R0 == 0x0;
    7014:	42 07       	IF CC R0 = P2;
    7016:	04 06       	IF !CC R0 = R4;
    7018:	03 20       	JUMP.S 0x701e <_ProcessQuery+0xcae>;
    701a:	20 e1 a0 05 	R0 = 0x5a0 (X);		/*		R0=0x5a0(1440) */
    701e:	08 32       	P1 = R0;
    7020:	f2 b0       	[SP + 0xc] = R2;
    7022:	31 b1       	[SP + 0x10] = R1;
    7024:	0f 30       	R1 = R7;
    7026:	33 b2       	[SP + 0x20] = R3;
    7028:	61 6c       	P1 += 0xc;		/* ( 12) */
    702a:	4f 5a       	P1 = FP + P1;
    702c:	f2 bd       	[SP + 0x1c] = P2;
    702e:	71 bd       	[SP + 0x14] = P1;
    7030:	47 30       	R0 = FP;
    7032:	b2 a2       	R2 = [SP + 0x28];
    7034:	ff e3 e6 c7 	CALL 0x0 <_AddRecordToResponseList>;
    7038:	00 0c       	CC = R0 == 0x0;
    703a:	38 06       	IF !CC R7 = R0;
    703c:	f2 ad       	P2 = [SP + 0x1c];
    703e:	33 a2       	R3 = [SP + 0x20];
    7040:	00 00       	NOP;
    7042:	24 e5 2c 00 	P4 = [P4 + 0xb0];
    7046:	10 20       	JUMP.S 0x7066 <_ProcessQuery+0xcf6>;
    7048:	6c 32       	P5 = P4;
    704a:	23 32       	P4 = R3;
    704c:	47 30       	R0 = FP;
    704e:	1e 30       	R3 = R6;
    7050:	50 64       	R0 += 0xa;		/* ( 10) */
    7052:	34 30       	R6 = R4;
    7054:	b0 b2       	[SP + 0x28] = R0;
    7056:	06 30       	R0 = R6;
    7058:	33 30       	R6 = R3;
    705a:	5d 30       	R3 = P5;
    705c:	24 e1 a0 05 	R4 = 0x5a0 (X);		/*		R4=0x5a0(1440) */
    7060:	2a e1 ec 22 	P2 = 0x22ec (X);		/*		P2=0x22ec(8940) */
    7064:	28 32       	P5 = R0;
    7066:	44 0c       	CC = P4 == 0x0;
    7068:	bf 17       	IF !CC JUMP 0x6fe6 <_ProcessQuery+0xc76> (BP);
    706a:	75 30       	R6 = P5;
    706c:	2b 32       	P5 = R3;
    706e:	08 20       	JUMP.S 0x707e <_ProcessQuery+0xd0e>;
    7070:	73 30       	R6 = P3;
    7072:	6c 32       	P5 = P4;
    7074:	33 e5 18 00 	P3 = [SP + 0x60];
    7078:	02 20       	JUMP.S 0x707c <_ProcessQuery+0xd0c>;
    707a:	6c 32       	P5 = P4;
    707c:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    707e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7080:	a8 e6 88 7c 	B[P5 + 0x7c88] = R0;
    7084:	32 e5 4f 01 	P2 = [SP + 0x53c];
    7088:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    708a:	0a 20       	JUMP.S 0x709e <_ProcessQuery+0xd2e>;
    708c:	10 e6 2d 00 	[P2 + 0xb4] = R0;
    7090:	11 e4 2c 00 	R1 = [P2 + 0xb0];
    7094:	10 e6 2c 00 	[P2 + 0xb0] = R0;
    7098:	10 e6 2e 00 	[P2 + 0xb8] = R0;
    709c:	11 32       	P2 = R1;
    709e:	42 0c       	CC = P2 == 0x0;
    70a0:	f6 17       	IF !CC JUMP 0x708c <_ProcessQuery+0xd1c> (BP);
    70a2:	4f e1 00 00 	FP.H = 0x0;		/* (  0)	FP=0x1fcc */
    70a6:	32 e7 4f 01 	[SP + 0x53c] = P2;
    70aa:	04 60       	R4 = 0x0 (X);		/*		R4=0x0(  0) */
    70ac:	0f e1 00 00 	FP.L = 0x0;		/* (  0)	FP=0x0 <_AddRecordToResponseList> */
    70b0:	65 32       	P4 = P5;
    70b2:	2e 20       	JUMP.S 0x710e <_ProcessQuery+0xd9e>;
    70b4:	06 32       	P0 = R6;
    70b6:	e8 a2       	R0 = [P5 + 0x2c];
    70b8:	30 e6 4d 01 	[SP + 0x534] = R0;
    70bc:	ec b2       	[P5 + 0x2c] = R4;
    70be:	80 e4 02 00 	R0 = B[P0 + 0x2] (Z);
    70c2:	08 48       	CC = !BITTST (R0, 0x1);		/* bit  1 */
    70c4:	18 14       	IF !CC JUMP 0x70f4 <_ProcessQuery+0xd84> (BP);
    70c6:	28 e4 11 00 	R0 = [P5 + 0x44];
    70ca:	00 0c       	CC = R0 == 0x0;
    70cc:	09 1c       	IF CC JUMP 0x70de <_ProcessQuery+0xd6e> (BP);
    70ce:	29 e4 12 00 	R1 = [P5 + 0x48];
    70d2:	22 e4 37 00 	R2 = [P4 + 0xdc];
    70d6:	8a 52       	R2 = R2 - R1;
    70d8:	39 91       	R1 = [FP];
    70da:	8a 08       	CC = R2 < R1;
    70dc:	0c 1c       	IF CC JUMP 0x70f4 <_ProcessQuery+0xd84> (BP);
    70de:	08 64       	R0 += 0x1;		/* (  1) */
    70e0:	28 e6 11 00 	[P5 + 0x44] = R0;
    70e4:	20 e4 37 00 	R0 = [P4 + 0xdc];
    70e8:	28 e6 12 00 	[P5 + 0x48] = R0;
    70ec:	44 30       	R0 = P4;
    70ee:	4d 30       	R1 = P5;
    70f0:	ff e3 9c db 	CALL 0x2828 <_SetNextCacheCheckTimeForRecord>;
    70f4:	00 00       	NOP;
    70f6:	28 e4 11 00 	R0 = [P5 + 0x44];
    70fa:	18 0e       	CC = R0 <= 0x3 (IU);
    70fc:	09 1c       	IF CC JUMP 0x710e <_ProcessQuery+0xd9e> (BP);
    70fe:	38 91       	R0 = [FP];
    7100:	82 c6 10 84 	R2 = R0 << 0x2;
    7104:	82 50       	R2 = R2 + R0;
    7106:	44 30       	R0 = P4;
    7108:	4d 30       	R1 = P5;
    710a:	ff e3 05 dc 	CALL 0x2914 <_mDNS_Reconfirm_internal>;
    710e:	35 e5 4d 01 	P5 = [SP + 0x534];
    7112:	45 0c       	CC = P5 == 0x0;
    7114:	d0 17       	IF !CC JUMP 0x70b4 <_ProcessQuery+0xd44> (BP);
    7116:	6c 32       	P5 = P4;
    7118:	32 e5 4c 01 	P2 = [SP + 0x530];
    711c:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
    711e:	62 60       	R2 = 0xc (X);		/*		R2=0xc( 12) */
    7120:	07 34       	I0 = R7;
    7122:	4b 34       	I1 = P3;
    7124:	3d 20       	JUMP.S 0x719e <_ProcessQuery+0xe2e>;
    7126:	42 32       	P0 = P2;
    7128:	d1 af       	P1 = [P2 + 0x3c];
    712a:	d6 b3       	[P2 + 0x3c] = R6;
    712c:	0b 9d       	R3 = [I1];
    712e:	2f e5 37 00 	FP = [P5 + 0xdc];
    7132:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7134:	51 34       	I2 = P1;
    7136:	4a 32       	P1 = P2;
    7138:	44 68       	P4 = 0x8 (X);		/*		P4=0x8(  8) */
    713a:	b2 e0 0b 40 	LSETUP(0x713e <_ProcessQuery+0xdce>, 0x7150 <_ProcessQuery+0xde0>) LC1 = P4;
    713e:	01 e4 11 00 	R1 = [P0 + 0x44];
    7142:	29 08       	CC = R1 == R5;
    7144:	05 14       	IF !CC JUMP 0x714e <_ProcessQuery+0xdde> (BP);
    7146:	01 e4 12 00 	R1 = [P0 + 0x48];
    714a:	19 08       	CC = R1 == R3;
    714c:	1f 18       	IF CC JUMP 0x718a <_ProcessQuery+0xe1a>;
    714e:	08 64       	R0 += 0x1;		/* (  1) */
    7150:	60 6c       	P0 += 0xc;		/* ( 12) */
    7152:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7154:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    7156:	38 68       	P0 = 0x7 (X);		/*		P0=0x7(  7) */
    7158:	b2 e0 18 00 	LSETUP(0x715c <_ProcessQuery+0xdec>, 0x7188 <_ProcessQuery+0xe18>) LC1 = P0;
    715c:	20 30       	R4 = R0;
    715e:	d4 40       	R4 *= R2;
    7160:	24 32       	P4 = R4;
    7162:	22 5b       	P4 = P2 + P4;
    7164:	27 e4 11 00 	R7 = [P4 + 0x44];
    7168:	07 0c       	CC = R7 == 0x0;
    716a:	10 1c       	IF CC JUMP 0x718a <_ProcessQuery+0xe1a> (BP);
    716c:	0f e4 14 00 	R7 = [P1 + 0x50];
    7170:	07 0c       	CC = R7 == 0x0;
    7172:	09 1c       	IF CC JUMP 0x7184 <_ProcessQuery+0xe14> (BP);
    7174:	0c e4 13 00 	R4 = [P1 + 0x4c];
    7178:	27 e4 10 00 	R7 = [P4 + 0x40];
    717c:	3c 53       	R4 = R4 - R7;
    717e:	84 0c       	CC = R4 < 0x0;
    7180:	01 07       	IF CC R0 = R1;
    7182:	02 20       	JUMP.S 0x7186 <_ProcessQuery+0xe16>;
    7184:	01 30       	R0 = R1;
    7186:	09 64       	R1 += 0x1;		/* (  1) */
    7188:	61 6c       	P1 += 0xc;		/* ( 12) */
    718a:	d0 40       	R0 *= R2;
    718c:	00 32       	P0 = R0;
    718e:	82 5a       	P2 = P2 + P0;
    7190:	17 e7 10 00 	[P2 + 0x40] = FP;
    7194:	15 e6 11 00 	[P2 + 0x44] = R5;
    7198:	13 e6 12 00 	[P2 + 0x48] = R3;
    719c:	92 32       	P2 = I2;
    719e:	42 0c       	CC = P2 == 0x0;
    71a0:	c3 17       	IF !CC JUMP 0x7126 <_ProcessQuery+0xdb6> (BP);
    71a2:	29 e1 40 05 	P1 = 0x540 (X);		/*		P1=0x540(1344) */
    71a6:	8e 5b       	SP = SP + P1;
    71a8:	77 90       	FP = [SP++];
    71aa:	80 30       	R0 = I0;
    71ac:	27 01       	RETS = [SP++];
    71ae:	a3 05       	(R7:4, P5:3) = [SP++];
    71b0:	10 00       	RTS;
    71b2:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x540 */
    71b6:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    71ba:	0c 91       	R4 = [P1];
    71bc:	67 2b       	JUMP.S 0x688a <_ProcessQuery+0x51a>;
	...

000071c0 <_ClearIdenticalProxyRecords>:
_ClearIdenticalProxyRecords():
    71c0:	e3 05       	[--SP] = (R7:4, P5:3);
    71c2:	28 32       	P5 = R0;
    71c4:	00 e8 0c 00 	LINK 0x30;		/* (48) */
    71c8:	39 32       	FP = R1;
    71ca:	3a 30       	R7 = R2;
    71cc:	2a e5 f5 07 	P2 = [P5 + 0x1fd4];
    71d0:	42 0c       	CC = P2 == 0x0;
    71d2:	11 18       	IF CC JUMP 0x71f4 <_ClearIdenticalProxyRecords+0x34>;
    71d4:	42 30       	R0 = P2;
    71d6:	55 30       	R2 = P5;
    71d8:	ba 65       	R2 += 0x37;		/* ( 55) */
    71da:	51 a2       	R1 = [P2 + 0x24];
    71dc:	21 64       	R1 += 0x4;		/* (  4) */
    71de:	20 64       	R0 += 0x4;		/* (  4) */
    71e0:	ff e3 10 c7 	CALL 0x0 <_AddRecordToResponseList>;
    71e4:	10 30       	R2 = R0;
    71e6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1(  1) */
    71ea:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    71ec:	01 e1 80 1e 	R1.L = 0x1e80;		/* (7808)	R1=0x1e80(7808) */
    71f0:	ff e3 08 c7 	CALL 0x0 <_AddRecordToResponseList>;
    71f4:	2f e6 f5 07 	[P5 + 0x1fd4] = R7;
    71f8:	45 30       	R0 = P5;
    71fa:	47 e1 00 00 	R7.H = 0x0;		/* (  0)	R7=0x0 <_AddRecordToResponseList>(  0) */
    71fe:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
    7202:	b8 65       	R0 += 0x37;		/* ( 55) */
    7204:	07 e1 00 00 	R7.L = 0x0;		/* (  0)	R7=0x0 <_AddRecordToResponseList>(  0) */
    7208:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
    720c:	f0 b2       	[SP + 0x2c] = R0;
    720e:	25 e1 4c 00 	R5 = 0x4c (X);		/*		R5=0x4c( 76) */
    7212:	24 e1 54 00 	R4 = 0x54 (X);		/*		R4=0x54( 84) */
    7216:	8b 20       	JUMP.S 0x732c <_ClearIdenticalProxyRecords+0x16c>;
    7218:	00 00       	NOP;
    721a:	29 e4 28 1f 	R1 = [P5 + 0x7ca0];
    721e:	e0 a1       	R0 = [P4 + 0x1c];
    7220:	01 08       	CC = R1 == R0;
    7222:	7d 14       	IF !CC JUMP 0x731c <_ClearIdenticalProxyRecords+0x15c> (BP);
    7224:	79 a0       	R1 = [FP + 0x4];
    7226:	20 e4 13 00 	R0 = [P4 + 0x4c];
    722a:	01 08       	CC = R1 == R0;
    722c:	78 14       	IF !CC JUMP 0x731c <_ClearIdenticalProxyRecords+0x15c> (BP);
    722e:	39 a5       	R1 = W[FP + 0x8] (Z);
    7230:	60 e4 28 00 	R0 = W[P4 + 0x50] (Z);
    7234:	01 08       	CC = R1 == R0;
    7236:	73 14       	IF !CC JUMP 0x731c <_ClearIdenticalProxyRecords+0x15c> (BP);
    7238:	e1 a4       	R1 = W[P4 + 0x6] (Z);
    723a:	68 e4 45 3e 	R0 = W[P5 + 0x7c8a] (Z);
    723e:	01 08       	CC = R1 == R0;
    7240:	6e 14       	IF !CC JUMP 0x731c <_ClearIdenticalProxyRecords+0x15c> (BP);
    7242:	21 a5       	R1 = W[P4 + 0x8] (Z);
    7244:	68 e4 46 3e 	R0 = W[P5 + 0x7c8c] (Z);
    7248:	01 08       	CC = R1 == R0;
    724a:	69 14       	IF !CC JUMP 0x731c <_ClearIdenticalProxyRecords+0x15c> (BP);
    724c:	61 a1       	R1 = [P4 + 0x14];
    724e:	28 e4 26 1f 	R0 = [P5 + 0x7c98];
    7252:	01 08       	CC = R1 == R0;
    7254:	64 14       	IF !CC JUMP 0x731c <_ClearIdenticalProxyRecords+0x15c> (BP);
    7256:	21 a6       	R1 = W[P4 + 0x10] (Z);
    7258:	68 e4 4a 3e 	R0 = W[P5 + 0x7c94] (Z);
    725c:	01 08       	CC = R1 == R0;
    725e:	5f 14       	IF !CC JUMP 0x731c <_ClearIdenticalProxyRecords+0x15c> (BP);
    7260:	a1 a1       	R1 = [P4 + 0x18];
    7262:	28 e4 27 1f 	R0 = [P5 + 0x7c9c];
    7266:	01 08       	CC = R1 == R0;
    7268:	5a 14       	IF !CC JUMP 0x731c <_ClearIdenticalProxyRecords+0x15c> (BP);
    726a:	74 30       	R6 = P4;
    726c:	29 e4 2a 1f 	R1 = [P5 + 0x7ca8];
    7270:	26 64       	R6 += 0x4;		/* (  4) */
    7272:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0xc( 12) */
    7276:	21 64       	R1 += 0x4;		/* (  4) */
    7278:	06 30       	R0 = R6;
    727a:	02 e1 00 00 	R2.L = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    727e:	ff e3 c1 c6 	CALL 0x0 <_AddRecordToResponseList>;
    7282:	00 0c       	CC = R0 == 0x0;
    7284:	4c 1c       	IF CC JUMP 0x731c <_ClearIdenticalProxyRecords+0x15c> (BP);
    7286:	20 a2       	R0 = [P4 + 0x20];
    7288:	29 e4 29 1f 	R1 = [P5 + 0x7ca4];
    728c:	ff e3 ba c6 	CALL 0x0 <_AddRecordToResponseList>;
    7290:	00 0c       	CC = R0 == 0x0;
    7292:	45 1c       	IF CC JUMP 0x731c <_ClearIdenticalProxyRecords+0x15c> (BP);
    7294:	0f 32       	P1 = R7;
    7296:	08 91       	R0 = [P1];
    7298:	00 0c       	CC = R0 == 0x0;
    729a:	23 1c       	IF CC JUMP 0x72e0 <_ClearIdenticalProxyRecords+0x120> (BP);
    729c:	2a e5 a4 0d 	P2 = [P5 + 0x3690];
    72a0:	b8 e5 01 00 	R0 = B[FP + 0x1] (X);
    72a4:	a3 e5 49 00 	R3 = B[P4 + 0x49] (X);
    72a8:	61 a2       	R1 = [P4 + 0x24];
    72aa:	b0 b2       	[SP + 0x28] = R0;
    72ac:	72 be       	[SP + 0x24] = P2;
    72ae:	21 64       	R1 += 0x4;		/* (  4) */
    72b0:	f2 a2       	R2 = [SP + 0x2c];
    72b2:	33 b2       	[SP + 0x20] = R3;
    72b4:	06 30       	R0 = R6;
    72b6:	ff e3 a5 c6 	CALL 0x0 <_AddRecordToResponseList>;
    72ba:	0d 32       	P1 = R5;
    72bc:	b1 a2       	R1 = [SP + 0x28];
    72be:	b1 b1       	[SP + 0x18] = R1;
    72c0:	33 a2       	R3 = [SP + 0x20];
    72c2:	f0 b1       	[SP + 0x1c] = R0;
    72c4:	8c 5a       	P2 = P4 + P1;
    72c6:	0c 32       	P1 = R4;
    72c8:	f2 bc       	[SP + 0xc] = P2;
    72ca:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1e80(7808) */
    72ce:	73 b1       	[SP + 0x14] = R3;
    72d0:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    72d2:	8c 5a       	P2 = P4 + P1;
    72d4:	32 bd       	[SP + 0x10] = P2;
    72d6:	01 e1 c4 1e 	R1.L = 0x1ec4;		/* (7876)	R1=0x1ec4(7876) */
    72da:	72 a2       	R2 = [SP + 0x24];
    72dc:	ff e3 92 c6 	CALL 0x0 <_AddRecordToResponseList>;
    72e0:	4c 30       	R1 = P4;
    72e2:	18 91       	R0 = [P3];
    72e4:	20 e6 13 00 	[P4 + 0x4c] = R0;
    72e8:	58 a0       	R0 = [P3 + 0x4];
    72ea:	20 e6 14 00 	[P4 + 0x50] = R0;
    72ee:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    72f0:	a0 e6 87 00 	B[P4 + 0x87] = R0;
    72f4:	45 30       	R0 = P5;
    72f6:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    72f8:	ff e3 82 ee 	CALL 0x4ffc <_mDNS_Deregister_internal>;
    72fc:	29 e4 27 0a 	R1 = [P5 + 0x289c];
    7300:	01 0c       	CC = R1 == 0x0;
    7302:	08 1c       	IF CC JUMP 0x7312 <_ClearIdenticalProxyRecords+0x152> (BP);
    7304:	28 e4 28 1f 	R0 = [P5 + 0x7ca0];
    7308:	01 08       	CC = R1 == R0;
    730a:	04 18       	IF CC JUMP 0x7312 <_ClearIdenticalProxyRecords+0x152>;
    730c:	45 30       	R0 = P5;
    730e:	ff e3 79 c6 	CALL 0x0 <_AddRecordToResponseList>;
    7312:	00 00       	NOP;
    7314:	28 e4 28 1f 	R0 = [P5 + 0x7ca0];
    7318:	28 e6 27 0a 	[P5 + 0x289c] = R0;
    731c:	00 00       	NOP;
    731e:	2a e5 f5 07 	P2 = [P5 + 0x1fd4];
    7322:	62 08       	CC = P2 == P4;
    7324:	04 14       	IF !CC JUMP 0x732c <_ClearIdenticalProxyRecords+0x16c> (BP);
    7326:	10 91       	R0 = [P2];
    7328:	28 e6 f5 07 	[P5 + 0x1fd4] = R0;
    732c:	00 00       	NOP;
    732e:	2c e5 f5 07 	P4 = [P5 + 0x1fd4];
    7332:	44 0c       	CC = P4 == 0x0;
    7334:	72 17       	IF !CC JUMP 0x7218 <_ClearIdenticalProxyRecords+0x58> (BP);
    7336:	86 6d       	SP += 0x30;		/* ( 48) */
    7338:	77 90       	FP = [SP++];
    733a:	27 01       	RETS = [SP++];
    733c:	a3 05       	(R7:4, P5:3) = [SP++];
    733e:	10 00       	RTS;

00007340 <_CheckProxyRecords>:
_CheckProxyRecords():
    7340:	e3 05       	[--SP] = (R7:4, P5:3);
    7342:	28 32       	P5 = R0;
    7344:	00 e8 07 00 	LINK 0x1c;		/* (28) */
    7348:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
    734c:	20 30       	R4 = R0;
    734e:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
    7352:	29 e6 f5 07 	[P5 + 0x1fd4] = R1;
    7356:	bc 65       	R4 += 0x37;		/* ( 55) */
    7358:	2f e1 4c 00 	FP = 0x4c (X);		/*		FP=0x4c( 76) */
    735c:	27 e1 54 00 	R7 = 0x54 (X);		/*		R7=0x54( 84) */
    7360:	56 20       	JUMP.S 0x740c <_CheckProxyRecords+0xcc>;
    7362:	00 00       	NOP;
    7364:	a0 e4 04 00 	R0 = B[P4 + 0x4] (Z);
    7368:	08 0c       	CC = R0 == 0x1;
    736a:	49 1c       	IF CC JUMP 0x73fc <_CheckProxyRecords+0xbc> (BP);
    736c:	20 e4 13 00 	R0 = [P4 + 0x4c];
    7370:	00 0c       	CC = R0 == 0x0;
    7372:	45 1c       	IF CC JUMP 0x73fc <_CheckProxyRecords+0xbc> (BP);
    7374:	28 e4 28 0a 	R0 = [P5 + 0x28a0];
    7378:	00 0c       	CC = R0 == 0x0;
    737a:	10 1c       	IF CC JUMP 0x739a <_CheckProxyRecords+0x5a> (BP);
    737c:	20 e4 1f 00 	R0 = [P4 + 0x7c];
    7380:	29 e4 37 00 	R1 = [P5 + 0xdc];
    7384:	41 52       	R1 = R1 - R0;
    7386:	81 0c       	CC = R1 < 0x0;
    7388:	09 14       	IF !CC JUMP 0x739a <_CheckProxyRecords+0x5a> (BP);
    738a:	29 e4 41 00 	R1 = [P5 + 0x104];
    738e:	41 52       	R1 = R1 - R0;
    7390:	01 0d       	CC = R1 <= 0x0;
    7392:	35 18       	IF CC JUMP 0x73fc <_CheckProxyRecords+0xbc>;
    7394:	28 e6 41 00 	[P5 + 0x104] = R0;
    7398:	32 20       	JUMP.S 0x73fc <_CheckProxyRecords+0xbc>;
    739a:	18 91       	R0 = [P3];
    739c:	00 0c       	CC = R0 == 0x0;
    739e:	1b 1c       	IF CC JUMP 0x73d4 <_CheckProxyRecords+0x94> (BP);
    73a0:	61 a2       	R1 = [P4 + 0x24];
    73a2:	44 30       	R0 = P4;
    73a4:	2d e4 a4 0d 	R5 = [P5 + 0x3690];
    73a8:	a6 e5 49 00 	R6 = B[P4 + 0x49] (X);
    73ac:	21 64       	R1 += 0x4;		/* (  4) */
    73ae:	14 30       	R2 = R4;
    73b0:	20 64       	R0 += 0x4;		/* (  4) */
    73b2:	ff e3 27 c6 	CALL 0x0 <_AddRecordToResponseList>;
    73b6:	0f 32       	P1 = R7;
    73b8:	bc 5a       	P2 = P4 + FP;
    73ba:	f2 bc       	[SP + 0xc] = P2;
    73bc:	b0 b1       	[SP + 0x18] = R0;
    73be:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1ec4(7876) */
    73c2:	8c 5a       	P2 = P4 + P1;
    73c4:	32 bd       	[SP + 0x10] = P2;
    73c6:	76 b1       	[SP + 0x14] = R6;
    73c8:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    73ca:	01 e1 0c 1f 	R1.L = 0x1f0c;		/* (7948)	R1=0x1f0c(7948) */
    73ce:	15 30       	R2 = R5;
    73d0:	ff e3 18 c6 	CALL 0x0 <_AddRecordToResponseList>;
    73d4:	00 00       	NOP;
    73d6:	29 e4 27 0a 	R1 = [P5 + 0x289c];
    73da:	01 0c       	CC = R1 == 0x0;
    73dc:	07 1c       	IF CC JUMP 0x73ea <_CheckProxyRecords+0xaa> (BP);
    73de:	e0 a1       	R0 = [P4 + 0x1c];
    73e0:	01 08       	CC = R1 == R0;
    73e2:	04 18       	IF CC JUMP 0x73ea <_CheckProxyRecords+0xaa>;
    73e4:	45 30       	R0 = P5;
    73e6:	ff e3 0d c6 	CALL 0x0 <_AddRecordToResponseList>;
    73ea:	00 00       	NOP;
    73ec:	e0 a1       	R0 = [P4 + 0x1c];
    73ee:	28 e6 27 0a 	[P5 + 0x289c] = R0;
    73f2:	45 30       	R0 = P5;
    73f4:	4c 30       	R1 = P4;
    73f6:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    73f8:	ff e3 02 ee 	CALL 0x4ffc <_mDNS_Deregister_internal>;
    73fc:	00 00       	NOP;
    73fe:	2a e5 f5 07 	P2 = [P5 + 0x1fd4];
    7402:	62 08       	CC = P2 == P4;
    7404:	04 14       	IF !CC JUMP 0x740c <_CheckProxyRecords+0xcc> (BP);
    7406:	10 91       	R0 = [P2];
    7408:	28 e6 f5 07 	[P5 + 0x1fd4] = R0;
    740c:	00 00       	NOP;
    740e:	2c e5 f5 07 	P4 = [P5 + 0x1fd4];
    7412:	44 0c       	CC = P4 == 0x0;
    7414:	a7 17       	IF !CC JUMP 0x7362 <_CheckProxyRecords+0x22> (BP);
    7416:	e6 6c       	SP += 0x1c;		/* ( 28) */
    7418:	77 90       	FP = [SP++];
    741a:	27 01       	RETS = [SP++];
    741c:	a3 05       	(R7:4, P5:3) = [SP++];
    741e:	10 00       	RTS;

00007420 <_ActivateUnicastRegistration>:
_ActivateUnicastRegistration():
    7420:	eb 05       	[--SP] = (R7:5, P5:3);
    7422:	29 32       	P5 = R1;
    7424:	20 32       	P4 = R0;
    7426:	67 01       	[--SP] = RETS;
    7428:	09 61       	R1 = 0x21 (X);		/*		R1=0x21( 33) */
    742a:	46 6f       	SP += -0x18;		/* (-24) */
    742c:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    742e:	08 08       	CC = R0 == R1;
    7430:	47 18       	IF CC JUMP 0x74be <_ActivateUnicastRegistration+0x9e>;
    7432:	61 60       	R1 = 0xc (X);		/*		R1=0xc( 12) */
    7434:	08 08       	CC = R0 == R1;
    7436:	03 14       	IF !CC JUMP 0x743c <_ActivateUnicastRegistration+0x1c> (BP);
    7438:	eb ae       	P3 = [P5 + 0x2c];
    743a:	05 20       	JUMP.S 0x7444 <_ActivateUnicastRegistration+0x24>;
    743c:	81 60       	R1 = 0x10 (X);		/*		R1=0x10( 16) */
    743e:	08 08       	CC = R0 == R1;
    7440:	3f 14       	IF !CC JUMP 0x74be <_ActivateUnicastRegistration+0x9e> (BP);
    7442:	6b af       	P3 = [P5 + 0x34];
    7444:	43 0c       	CC = P3 == 0x0;
    7446:	3c 1c       	IF CC JUMP 0x74be <_ActivateUnicastRegistration+0x9e> (BP);
    7448:	09 61       	R1 = 0x21 (X);		/*		R1=0x21( 33) */
    744a:	d8 a4       	R0 = W[P3 + 0x6] (Z);
    744c:	08 08       	CC = R0 == R1;
    744e:	12 18       	IF CC JUMP 0x7472 <_ActivateUnicastRegistration+0x52>;
    7450:	43 30       	R0 = P3;
    7452:	54 30       	R2 = P4;
    7454:	ba 65       	R2 += 0x37;		/* ( 55) */
    7456:	59 a2       	R1 = [P3 + 0x24];
    7458:	21 64       	R1 += 0x4;		/* (  4) */
    745a:	20 64       	R0 += 0x4;		/* (  4) */
    745c:	ff e3 d2 c5 	CALL 0x0 <_AddRecordToResponseList>;
    7460:	10 30       	R2 = R0;
    7462:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x21( 33) */
    7466:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7468:	01 e1 48 1f 	R1.L = 0x1f48;		/* (8008)	R1=0x1f48(8008) */
    746c:	ff e3 ca c5 	CALL 0x0 <_AddRecordToResponseList>;
    7470:	27 20       	JUMP.S 0x74be <_ActivateUnicastRegistration+0x9e>;
    7472:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x22ec */
    7476:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    747a:	10 91       	R0 = [P2];
    747c:	00 0c       	CC = R0 == 0x0;
    747e:	1b 1c       	IF CC JUMP 0x74b4 <_ActivateUnicastRegistration+0x94> (BP);
    7480:	59 a2       	R1 = [P3 + 0x24];
    7482:	43 30       	R0 = P3;
    7484:	54 30       	R2 = P4;
    7486:	21 64       	R1 += 0x4;		/* (  4) */
    7488:	ba 65       	R2 += 0x37;		/* ( 55) */
    748a:	20 64       	R0 += 0x4;		/* (  4) */
    748c:	ff e3 ba c5 	CALL 0x0 <_AddRecordToResponseList>;
    7490:	28 30       	R5 = R0;
    7492:	1f e4 39 00 	R7 = [P3 + 0xe4];
    7496:	2e a2       	R6 = [P5 + 0x20];
    7498:	e8 a8       	R0 = W[P5 + 0x6] (X);
    749a:	ff e3 b3 c5 	CALL 0x0 <_AddRecordToResponseList>;
    749e:	70 b1       	[SP + 0x14] = R0;
    74a0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1f48(8008) */
    74a4:	f7 b0       	[SP + 0xc] = R7;
    74a6:	36 b1       	[SP + 0x10] = R6;
    74a8:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    74aa:	01 e1 9c 1f 	R1.L = 0x1f9c;		/* (8092)	R1=0x1f9c(8092) */
    74ae:	15 30       	R2 = R5;
    74b0:	ff e3 a8 c5 	CALL 0x0 <_AddRecordToResponseList>;
    74b4:	00 00       	NOP;
    74b6:	18 e4 39 00 	R0 = [P3 + 0xe4];
    74ba:	28 e6 39 00 	[P5 + 0xe4] = R0;
    74be:	41 60       	R1 = 0x8 (X);		/*		R1=0x8(  8) */
    74c0:	28 e4 39 00 	R0 = [P5 + 0xe4];
    74c4:	08 08       	CC = R0 == R1;
    74c6:	1b 14       	IF !CC JUMP 0x74fc <_ActivateUnicastRegistration+0xdc> (BP);
    74c8:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    74cc:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    74d0:	10 91       	R0 = [P2];
    74d2:	00 0c       	CC = R0 == 0x0;
    74d4:	9b 1c       	IF CC JUMP 0x760a <_ActivateUnicastRegistration+0x1ea> (BP);
    74d6:	69 a2       	R1 = [P5 + 0x24];
    74d8:	45 30       	R0 = P5;
    74da:	54 30       	R2 = P4;
    74dc:	21 64       	R1 += 0x4;		/* (  4) */
    74de:	ba 65       	R2 += 0x37;		/* ( 55) */
    74e0:	20 64       	R0 += 0x4;		/* (  4) */
    74e2:	ff e3 8f c5 	CALL 0x0 <_AddRecordToResponseList>;
    74e6:	c6 6c       	SP += 0x18;		/* ( 24) */
    74e8:	27 01       	RETS = [SP++];
    74ea:	10 30       	R2 = R0;
    74ec:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x8(  8) */
    74f0:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    74f2:	01 e1 ec 1f 	R1.L = 0x1fec;		/* (8172)	R1=0x1fec(8172) */
    74f6:	ab 05       	(R7:5, P5:3) = [SP++];
    74f8:	ff e2 84 c5 	JUMP.L 0x0 <_AddRecordToResponseList>;
    74fc:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    7500:	a8 e4 04 00 	R0 = B[P5 + 0x4] (Z);
    7504:	08 0c       	CC = R0 == 0x1;
    7506:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    750a:	19 14       	IF !CC JUMP 0x753c <_ActivateUnicastRegistration+0x11c> (BP);
    750c:	10 91       	R0 = [P2];
    750e:	00 0c       	CC = R0 == 0x0;
    7510:	14 1c       	IF CC JUMP 0x7538 <_ActivateUnicastRegistration+0x118> (BP);
    7512:	69 a2       	R1 = [P5 + 0x24];
    7514:	45 30       	R0 = P5;
    7516:	54 30       	R2 = P4;
    7518:	21 64       	R1 += 0x4;		/* (  4) */
    751a:	ba 65       	R2 += 0x37;		/* ( 55) */
    751c:	20 64       	R0 += 0x4;		/* (  4) */
    751e:	ff e3 71 c5 	CALL 0x0 <_AddRecordToResponseList>;
    7522:	10 30       	R2 = R0;
    7524:	28 e4 39 00 	R0 = [P5 + 0xe4];
    7528:	f0 b0       	[SP + 0xc] = R0;
    752a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1fec(8172) */
    752e:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    7530:	01 e1 38 20 	R1.L = 0x2038;		/* (8248)	R1=0x2038(8248) */
    7534:	ff e3 66 c5 	CALL 0x0 <_AddRecordToResponseList>;
    7538:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    753a:	18 20       	JUMP.S 0x756a <_ActivateUnicastRegistration+0x14a>;
    753c:	10 91       	R0 = [P2];
    753e:	00 0c       	CC = R0 == 0x0;
    7540:	14 1c       	IF CC JUMP 0x7568 <_ActivateUnicastRegistration+0x148> (BP);
    7542:	69 a2       	R1 = [P5 + 0x24];
    7544:	45 30       	R0 = P5;
    7546:	54 30       	R2 = P4;
    7548:	21 64       	R1 += 0x4;		/* (  4) */
    754a:	ba 65       	R2 += 0x37;		/* ( 55) */
    754c:	20 64       	R0 += 0x4;		/* (  4) */
    754e:	ff e3 59 c5 	CALL 0x0 <_AddRecordToResponseList>;
    7552:	10 30       	R2 = R0;
    7554:	28 e4 39 00 	R0 = [P5 + 0xe4];
    7558:	f0 b0       	[SP + 0xc] = R0;
    755a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2038(8248) */
    755e:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    7560:	01 e1 94 20 	R1.L = 0x2094;		/* (8340)	R1=0x2094(8340) */
    7564:	ff e3 4e c5 	CALL 0x0 <_AddRecordToResponseList>;
    7568:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    756a:	28 e6 39 00 	[P5 + 0xe4] = R0;
    756e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7570:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    7574:	a8 e6 85 00 	B[P5 + 0x85] = R0;
    7578:	a8 e6 86 00 	B[P5 + 0x86] = R0;
    757c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    7580:	10 91       	R0 = [P2];
    7582:	21 e4 37 00 	R1 = [P4 + 0xdc];
    7586:	28 e6 2f 00 	[P5 + 0xbc] = R0;
    758a:	01 52       	R0 = R1 - R0;
    758c:	28 e6 30 00 	[P5 + 0xc0] = R0;
    7590:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    7592:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    7596:	28 e6 3a 00 	[P5 + 0xe8] = R0;
    759a:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    759e:	10 95       	R0 = W[P2] (Z);
    75a0:	68 e6 7a 00 	W[P5 + 0xf4] = R0;
    75a4:	03 68       	P3 = 0x0 (X);		/*		P3=0x0(  0) */
    75a6:	28 e4 4f 00 	R0 = [P5 + 0x13c];
    75aa:	2b e7 3b 00 	[P5 + 0xec] = P3;
    75ae:	2b e7 50 00 	[P5 + 0x140] = P3;
    75b2:	2b e7 53 00 	[P5 + 0x14c] = P3;
    75b6:	00 0c       	CC = R0 == 0x0;
    75b8:	0a 18       	IF CC JUMP 0x75cc <_ActivateUnicastRegistration+0x1ac>;
    75ba:	2a e1 04 01 	P2 = 0x104 (X);		/*		P2=0x104(260) */
    75be:	95 5a       	P2 = P5 + P2;
    75c0:	4a 30       	R1 = P2;
    75c2:	44 30       	R0 = P4;
    75c4:	ff e3 1e c5 	CALL 0x0 <_AddRecordToResponseList>;
    75c8:	2b e7 4f 00 	[P5 + 0x13c] = P3;
    75cc:	29 e4 3f 00 	R1 = [P5 + 0xfc];
    75d0:	01 0c       	CC = R1 == 0x0;
    75d2:	07 18       	IF CC JUMP 0x75e0 <_ActivateUnicastRegistration+0x1c0>;
    75d4:	44 30       	R0 = P4;
    75d6:	ff e3 79 eb 	CALL 0x4cc8 <_CancelGetZoneData>;
    75da:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    75dc:	28 e6 3f 00 	[P5 + 0xfc] = R0;
    75e0:	28 e4 40 00 	R0 = [P5 + 0x100];
    75e4:	00 0c       	CC = R0 == 0x0;
    75e6:	06 18       	IF CC JUMP 0x75f2 <_ActivateUnicastRegistration+0x1d2>;
    75e8:	ff e3 0c c5 	CALL 0x0 <_AddRecordToResponseList>;
    75ec:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    75ee:	28 e6 40 00 	[P5 + 0x100] = R0;
    75f2:	29 e4 2f 00 	R1 = [P5 + 0xbc];
    75f6:	28 e4 30 00 	R0 = [P5 + 0xc0];
    75fa:	01 50       	R0 = R1 + R0;
    75fc:	21 e4 fb 07 	R1 = [P4 + 0x1fec];
    7600:	41 52       	R1 = R1 - R0;
    7602:	81 0c       	CC = R1 < 0x0;
    7604:	03 18       	IF CC JUMP 0x760a <_ActivateUnicastRegistration+0x1ea>;
    7606:	20 e6 fb 07 	[P4 + 0x1fec] = R0;
    760a:	c6 6c       	SP += 0x18;		/* ( 24) */
    760c:	27 01       	RETS = [SP++];
    760e:	ab 05       	(R7:5, P5:3) = [SP++];
    7610:	10 00       	RTS;
	...

00007614 <_mDNS_Register_internal>:
_mDNS_Register_internal():
    7614:	eb 05       	[--SP] = (R7:5, P5:3);
    7616:	29 32       	P5 = R1;
    7618:	20 32       	P4 = R0;
    761a:	00 e8 05 00 	LINK 0x14;		/* (20) */
    761e:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    7620:	10 0c       	CC = R0 == 0x2;
    7622:	0a 18       	IF CC JUMP 0x7636 <_mDNS_Register_internal+0x22>;
    7624:	29 60       	R1 = 0x5 (X);		/*		R1=0x5(  5) */
    7626:	08 08       	CC = R0 == R1;
    7628:	07 18       	IF CC JUMP 0x7636 <_mDNS_Register_internal+0x22>;
    762a:	62 60       	R2 = 0xc (X);		/*		R2=0xc( 12) */
    762c:	10 08       	CC = R0 == R2;
    762e:	04 18       	IF CC JUMP 0x7636 <_mDNS_Register_internal+0x22>;
    7630:	3b 61       	R3 = 0x27 (X);		/*		R3=0x27( 39) */
    7632:	18 08       	CC = R0 == R3;
    7634:	04 14       	IF !CC JUMP 0x763c <_mDNS_Register_internal+0x28> (BP);
    7636:	6b ae       	P3 = [P5 + 0x24];
    7638:	23 6c       	P3 += 0x4;		/* (  4) */
    763a:	17 20       	JUMP.S 0x7668 <_mDNS_Register_internal+0x54>;
    763c:	79 60       	R1 = 0xf (X);		/*		R1=0xf( 15) */
    763e:	08 08       	CC = R0 == R1;
    7640:	0a 18       	IF CC JUMP 0x7654 <_mDNS_Register_internal+0x40>;
    7642:	92 60       	R2 = 0x12 (X);		/*		R2=0x12( 18) */
    7644:	10 08       	CC = R0 == R2;
    7646:	07 18       	IF CC JUMP 0x7654 <_mDNS_Register_internal+0x40>;
    7648:	ab 60       	R3 = 0x15 (X);		/*		R3=0x15( 21) */
    764a:	18 08       	CC = R0 == R3;
    764c:	04 18       	IF CC JUMP 0x7654 <_mDNS_Register_internal+0x40>;
    764e:	21 61       	R1 = 0x24 (X);		/*		R1=0x24( 36) */
    7650:	08 08       	CC = R0 == R1;
    7652:	04 14       	IF !CC JUMP 0x765a <_mDNS_Register_internal+0x46> (BP);
    7654:	6b ae       	P3 = [P5 + 0x24];
    7656:	33 6c       	P3 += 0x6;		/* (  6) */
    7658:	08 20       	JUMP.S 0x7668 <_mDNS_Register_internal+0x54>;
    765a:	0a 61       	R2 = 0x21 (X);		/*		R2=0x21( 33) */
    765c:	10 08       	CC = R0 == R2;
    765e:	04 14       	IF !CC JUMP 0x7666 <_mDNS_Register_internal+0x52> (BP);
    7660:	6b ae       	P3 = [P5 + 0x24];
    7662:	53 6c       	P3 += 0xa;		/* ( 10) */
    7664:	02 20       	JUMP.S 0x7668 <_mDNS_Register_internal+0x54>;
    7666:	03 68       	P3 = 0x0 (X);		/*		P3=0x0(  0) */
    7668:	ef a0       	R7 = [P5 + 0xc];
    766a:	07 0d       	CC = R7 <= 0x0;
    766c:	13 14       	IF !CC JUMP 0x7692 <_mDNS_Register_internal+0x7e> (BP);
    766e:	69 a2       	R1 = [P5 + 0x24];
    7670:	45 30       	R0 = P5;
    7672:	54 30       	R2 = P4;
    7674:	21 64       	R1 += 0x4;		/* (  4) */
    7676:	ba 65       	R2 += 0x37;		/* ( 55) */
    7678:	20 64       	R0 += 0x4;		/* (  4) */
    767a:	ff e3 c3 c4 	CALL 0x0 <_AddRecordToResponseList>;
    767e:	f0 b0       	[SP + 0xc] = R0;
    7680:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x24( 36) */
    7684:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7686:	01 e1 ec 20 	R1.L = 0x20ec;		/* (8428)	R1=0x20ec(8428) */
    768a:	17 30       	R2 = R7;
    768c:	ff e3 ba c4 	CALL 0x0 <_AddRecordToResponseList>;
    7690:	16 20       	JUMP.S 0x76bc <_mDNS_Register_internal+0xa8>;
    7692:	00 00       	NOP;
    7694:	a8 e4 04 00 	R0 = B[P5 + 0x4] (Z);
    7698:	00 0c       	CC = R0 == 0x0;
    769a:	15 14       	IF !CC JUMP 0x76c4 <_mDNS_Register_internal+0xb0> (BP);
    769c:	69 a2       	R1 = [P5 + 0x24];
    769e:	45 30       	R0 = P5;
    76a0:	54 30       	R2 = P4;
    76a2:	21 64       	R1 += 0x4;		/* (  4) */
    76a4:	ba 65       	R2 += 0x37;		/* ( 55) */
    76a6:	20 64       	R0 += 0x4;		/* (  4) */
    76a8:	ff e3 ac c4 	CALL 0x0 <_AddRecordToResponseList>;
    76ac:	10 30       	R2 = R0;
    76ae:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x20ec(8428) */
    76b2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    76b4:	01 e1 28 21 	R1.L = 0x2128;		/* (8488)	R1=0x2128(8488) */
    76b8:	ff e3 a4 c4 	CALL 0x0 <_AddRecordToResponseList>;
    76bc:	20 e1 ff bf 	R0 = -0x4001 (X);		/*		R0=0xffffbfff(-16385) */
    76c0:	10 4f       	R0 <<= 0x2;
    76c2:	24 24       	JUMP.S 0x7f0a <_mDNS_Register_internal+0x8f6>;
    76c4:	00 00       	NOP;
    76c6:	20 e4 3a 00 	R0 = [P4 + 0xe8];
    76ca:	00 0c       	CC = R0 == 0x0;
    76cc:	13 1c       	IF CC JUMP 0x76f2 <_mDNS_Register_internal+0xde> (BP);
    76ce:	69 a2       	R1 = [P5 + 0x24];
    76d0:	45 30       	R0 = P5;
    76d2:	54 30       	R2 = P4;
    76d4:	21 64       	R1 += 0x4;		/* (  4) */
    76d6:	ba 65       	R2 += 0x37;		/* ( 55) */
    76d8:	20 64       	R0 += 0x4;		/* (  4) */
    76da:	ff e3 93 c4 	CALL 0x0 <_AddRecordToResponseList>;
    76de:	10 30       	R2 = R0;
    76e0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2128(8488) */
    76e4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    76e6:	01 e1 60 21 	R1.L = 0x2160;		/* (8544)	R1=0x2160(8544) */
    76ea:	ff e3 8b c4 	CALL 0x0 <_AddRecordToResponseList>;
    76ee:	28 63       	R0 = -0x1b (X);		/*		R0=0xffffffe5(-27) */
    76f0:	09 24       	JUMP.S 0x7f02 <_mDNS_Register_internal+0x8ee>;
    76f2:	00 00       	NOP;
    76f4:	20 a1       	R0 = [P4 + 0x10];
    76f6:	00 0c       	CC = R0 == 0x0;
    76f8:	58 1c       	IF CC JUMP 0x77a8 <_mDNS_Register_internal+0x194> (BP);
    76fa:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x104 */
    76fe:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    7702:	16 91       	R6 = [P2];
    7704:	e8 a1       	R0 = [P5 + 0x1c];
    7706:	30 08       	CC = R0 == R6;
    7708:	0a 14       	IF !CC JUMP 0x771c <_mDNS_Register_internal+0x108> (BP);
    770a:	a8 e4 46 00 	R0 = B[P5 + 0x46] (Z);
    770e:	00 0c       	CC = R0 == 0x0;
    7710:	06 14       	IF !CC JUMP 0x771c <_mDNS_Register_internal+0x108> (BP);
    7712:	28 a2       	R0 = [P5 + 0x20];
    7714:	ff e3 76 c4 	CALL 0x0 <_AddRecordToResponseList>;
    7718:	00 0c       	CC = R0 == 0x0;
    771a:	47 1c       	IF CC JUMP 0x77a8 <_mDNS_Register_internal+0x194> (BP);
    771c:	00 00       	NOP;
    771e:	ef a1       	R7 = [P5 + 0x1c];
    7720:	37 08       	CC = R7 == R6;
    7722:	08 18       	IF CC JUMP 0x7732 <_mDNS_Register_internal+0x11e>;
    7724:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    7728:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    772c:	10 91       	R0 = [P2];
    772e:	07 08       	CC = R7 == R0;
    7730:	0a 14       	IF !CC JUMP 0x7744 <_mDNS_Register_internal+0x130> (BP);
    7732:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    7736:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    773a:	10 91       	R0 = [P2];
    773c:	e8 b1       	[P5 + 0x1c] = R0;
    773e:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    7740:	28 e6 20 00 	[P5 + 0x80] = R0;
    7744:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    7748:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    774c:	e9 a1       	R1 = [P5 + 0x1c];
    774e:	16 91       	R6 = [P2];
    7750:	31 08       	CC = R1 == R6;
    7752:	10 1c       	IF CC JUMP 0x7772 <_mDNS_Register_internal+0x15e> (BP);
    7754:	20 e4 f7 07 	R0 = [P4 + 0x1fdc];
    7758:	ff e3 64 d1 	CALL 0x1a20 <_FirstInterfaceForID.clone.0>;
    775c:	10 32       	P2 = R0;
    775e:	42 0c       	CC = P2 == 0x0;
    7760:	09 1c       	IF CC JUMP 0x7772 <_mDNS_Register_internal+0x15e> (BP);
    7762:	90 e4 b4 14 	R0 = B[P2 + 0x14b4] (Z);
    7766:	00 0c       	CC = R0 == 0x0;
    7768:	05 14       	IF !CC JUMP 0x7772 <_mDNS_Register_internal+0x15e> (BP);
    776a:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    776c:	ee b1       	[P5 + 0x1c] = R6;
    776e:	28 e6 20 00 	[P5 + 0x80] = R0;
    7772:	00 00       	NOP;
    7774:	e8 a1       	R0 = [P5 + 0x1c];
    7776:	38 08       	CC = R0 == R7;
    7778:	18 18       	IF CC JUMP 0x77a8 <_mDNS_Register_internal+0x194>;
    777a:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    777e:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    7782:	10 91       	R0 = [P2];
    7784:	00 0c       	CC = R0 == 0x0;
    7786:	11 1c       	IF CC JUMP 0x77a8 <_mDNS_Register_internal+0x194> (BP);
    7788:	69 a2       	R1 = [P5 + 0x24];
    778a:	45 30       	R0 = P5;
    778c:	54 30       	R2 = P4;
    778e:	21 64       	R1 += 0x4;		/* (  4) */
    7790:	ba 65       	R2 += 0x37;		/* ( 55) */
    7792:	20 64       	R0 += 0x4;		/* (  4) */
    7794:	ff e3 36 c4 	CALL 0x0 <_AddRecordToResponseList>;
    7798:	10 30       	R2 = R0;
    779a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2160(8544) */
    779e:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    77a0:	01 e1 9c 21 	R1.L = 0x219c;		/* (8604)	R1=0x219c(8604) */
    77a4:	ff e3 2e c4 	CALL 0x0 <_AddRecordToResponseList>;
    77a8:	2a e1 c8 1f 	P2 = 0x1fc8 (X);		/*		P2=0x1fc8 <_SetNextQueryTime>(8136) */
    77ac:	28 e4 20 00 	R0 = [P5 + 0x80];
    77b0:	94 5a       	P2 = P4 + P2;
    77b2:	f0 67       	R0 += -0x2;		/* ( -2) */
    77b4:	7a 30       	R7 = P2;
    77b6:	08 0e       	CC = R0 <= 0x1 (IU);
    77b8:	33 14       	IF !CC JUMP 0x781e <_mDNS_Register_internal+0x20a> (BP);
    77ba:	28 a2       	R0 = [P5 + 0x20];
    77bc:	ff e3 22 c4 	CALL 0x0 <_AddRecordToResponseList>;
    77c0:	2f e1 f4 10 	FP = 0x10f4 (X);		/*		FP=0x10f4(4340) */
    77c4:	41 e1 d5 20 	R1.H = 0x20d5;		/* (8405)	R1=0x20d5219c(550838684) */
    77c8:	fc 5b       	FP = P4 + FP;
    77ca:	30 30       	R6 = R0;
    77cc:	01 e1 39 6b 	R1.L = 0x6b39;		/* (27449)	R1=0x20d56b39(550857529) */
    77d0:	ff e3 18 c4 	CALL 0x0 <_AddRecordToResponseList>;
    77d4:	82 c6 d0 83 	R1 = R0 >> 0x6;
    77d8:	20 e1 f3 01 	R0 = 0x1f3 (X);		/*		R0=0x1f3(499) */
    77dc:	c1 40       	R1 *= R0;
    77de:	55 30       	R2 = P5;
    77e0:	4e 52       	R1 = R6 - R1;
    77e2:	22 64       	R2 += 0x4;		/* (  4) */
    77e4:	47 30       	R0 = FP;
    77e6:	ff e3 41 d4 	CALL 0x2068 <_AuthGroupForRecord>;
    77ea:	10 32       	P2 = R0;
    77ec:	42 0c       	CC = P2 == 0x0;
    77ee:	21 1c       	IF CC JUMP 0x7830 <_mDNS_Register_internal+0x21c> (BP);
    77f0:	92 ac       	P2 = [P2 + 0x8];
    77f2:	12 20       	JUMP.S 0x7816 <_mDNS_Register_internal+0x202>;
    77f4:	6a 08       	CC = P2 == P5;
    77f6:	03 1c       	IF CC JUMP 0x77fc <_mDNS_Register_internal+0x1e8> (BP);
    77f8:	52 91       	P2 = [P2];
    77fa:	0e 20       	JUMP.S 0x7816 <_mDNS_Register_internal+0x202>;
    77fc:	00 00       	NOP;
    77fe:	2f a2       	R7 = [P5 + 0x20];
    7800:	e8 a8       	R0 = W[P5 + 0x6] (X);
    7802:	ff e3 ff c3 	CALL 0x0 <_AddRecordToResponseList>;
    7806:	30 b1       	[SP + 0x10] = R0;
    7808:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x6b39(27449) */
    780c:	f7 b0       	[SP + 0xc] = R7;
    780e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7810:	01 e1 d8 21 	R1.L = 0x21d8;		/* (8664)	R1=0x21d8(8664) */
    7814:	34 20       	JUMP.S 0x787c <_mDNS_Register_internal+0x268>;
    7816:	42 0c       	CC = P2 == 0x0;
    7818:	ee 17       	IF !CC JUMP 0x77f4 <_mDNS_Register_internal+0x1e0> (BP);
    781a:	0b 20       	JUMP.S 0x7830 <_mDNS_Register_internal+0x21c>;
    781c:	38 30       	R7 = R0;
    781e:	17 32       	P2 = R7;
    7820:	10 91       	R0 = [P2];
    7822:	00 0c       	CC = R0 == 0x0;
    7824:	06 18       	IF CC JUMP 0x7830 <_mDNS_Register_internal+0x21c>;
    7826:	4d 30       	R1 = P5;
    7828:	08 08       	CC = R0 == R1;
    782a:	f9 17       	IF !CC JUMP 0x781c <_mDNS_Register_internal+0x208> (BP);
    782c:	00 0c       	CC = R0 == 0x0;
    782e:	06 10       	IF !CC JUMP 0x783a <_mDNS_Register_internal+0x226>;
    7830:	2a e1 cc 1f 	P2 = 0x1fcc (X);		/*		P2=0x1fcc(8140) */
    7834:	94 5a       	P2 = P4 + P2;
    7836:	72 30       	R6 = P2;
    7838:	0e 20       	JUMP.S 0x7854 <_mDNS_Register_internal+0x240>;
    783a:	2f a2       	R7 = [P5 + 0x20];
    783c:	e8 a8       	R0 = W[P5 + 0x6] (X);
    783e:	ff e3 e1 c3 	CALL 0x0 <_AddRecordToResponseList>;
    7842:	30 b1       	[SP + 0x10] = R0;
    7844:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x21d8(8664) */
    7848:	f7 b0       	[SP + 0xc] = R7;
    784a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    784c:	01 e1 48 22 	R1.L = 0x2248;		/* (8776)	R1=0x2248(8776) */
    7850:	16 20       	JUMP.S 0x787c <_mDNS_Register_internal+0x268>;
    7852:	30 30       	R6 = R0;
    7854:	16 32       	P2 = R6;
    7856:	10 91       	R0 = [P2];
    7858:	00 0c       	CC = R0 == 0x0;
    785a:	16 18       	IF CC JUMP 0x7886 <_mDNS_Register_internal+0x272>;
    785c:	4d 30       	R1 = P5;
    785e:	08 08       	CC = R0 == R1;
    7860:	f9 17       	IF !CC JUMP 0x7852 <_mDNS_Register_internal+0x23e> (BP);
    7862:	00 0c       	CC = R0 == 0x0;
    7864:	11 1c       	IF CC JUMP 0x7886 <_mDNS_Register_internal+0x272> (BP);
    7866:	2f a2       	R7 = [P5 + 0x20];
    7868:	e8 a8       	R0 = W[P5 + 0x6] (X);
    786a:	ff e3 cb c3 	CALL 0x0 <_AddRecordToResponseList>;
    786e:	30 b1       	[SP + 0x10] = R0;
    7870:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2248(8776) */
    7874:	f7 b0       	[SP + 0xc] = R7;
    7876:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7878:	01 e1 b0 22 	R1.L = 0x22b0;		/* (8880)	R1=0x22b0(8880) */
    787c:	55 30       	R2 = P5;
    787e:	ff e3 c1 c3 	CALL 0x0 <_AddRecordToResponseList>;
    7882:	a8 63       	R0 = -0xb (X);		/*		R0=0xfffffff5(-11) */
    7884:	3f 23       	JUMP.S 0x7f02 <_mDNS_Register_internal+0x8ee>;
    7886:	00 00       	NOP;
    7888:	6a af       	P2 = [P5 + 0x34];
    788a:	42 0c       	CC = P2 == 0x0;
    788c:	2f 1c       	IF CC JUMP 0x78ea <_mDNS_Register_internal+0x2d6> (BP);
    788e:	a8 e4 04 00 	R0 = B[P5 + 0x4] (Z);
    7892:	10 0c       	CC = R0 == 0x2;
    7894:	0b 10       	IF !CC JUMP 0x78aa <_mDNS_Register_internal+0x296>;
    7896:	80 60       	R0 = 0x10 (X);		/*		R0=0x10( 16) */
    7898:	a8 e6 04 00 	B[P5 + 0x4] = R0;
    789c:	90 61       	R0 = 0x32 (X);		/*		R0=0x32( 50) */
    789e:	91 e4 04 00 	R1 = B[P2 + 0x4] (Z);
    78a2:	01 54       	R0 = R1 & R0;
    78a4:	00 0c       	CC = R0 == 0x0;
    78a6:	22 14       	IF !CC JUMP 0x78ea <_mDNS_Register_internal+0x2d6> (BP);
    78a8:	0f 20       	JUMP.S 0x78c6 <_mDNS_Register_internal+0x2b2>;
    78aa:	2f a2       	R7 = [P5 + 0x20];
    78ac:	e8 a8       	R0 = W[P5 + 0x6] (X);
    78ae:	ff e3 a9 c3 	CALL 0x0 <_AddRecordToResponseList>;
    78b2:	f0 b0       	[SP + 0xc] = R0;
    78b4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x22b0(8880) */
    78b8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    78ba:	01 e1 20 23 	R1.L = 0x2320;		/* (8992)	R1=0x2320(8992) */
    78be:	17 30       	R2 = R7;
    78c0:	ff e3 a0 c3 	CALL 0x0 <_AddRecordToResponseList>;
    78c4:	48 21       	JUMP.S 0x7b54 <_mDNS_Register_internal+0x540>;
    78c6:	2f a2       	R7 = [P5 + 0x20];
    78c8:	e8 a8       	R0 = W[P5 + 0x6] (X);
    78ca:	ff e3 9b c3 	CALL 0x0 <_AddRecordToResponseList>;
    78ce:	6a af       	P2 = [P5 + 0x34];
    78d0:	f0 b0       	[SP + 0xc] = R0;
    78d2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2320(8992) */
    78d6:	01 e1 80 23 	R1.L = 0x2380;		/* (9088)	R1=0x2380(9088) */
    78da:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
    78de:	30 b1       	[SP + 0x10] = R0;
    78e0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    78e2:	17 30       	R2 = R7;
    78e4:	ff e3 8e c3 	CALL 0x0 <_AddRecordToResponseList>;
    78e8:	36 21       	JUMP.S 0x7b54 <_mDNS_Register_internal+0x540>;
    78ea:	00 00       	NOP;
    78ec:	e9 a1       	R1 = [P5 + 0x1c];
    78ee:	01 0c       	CC = R1 == 0x0;
    78f0:	0e 1c       	IF CC JUMP 0x790c <_mDNS_Register_internal+0x2f8> (BP);
    78f2:	28 e4 20 00 	R0 = [P5 + 0x80];
    78f6:	10 0c       	CC = R0 == 0x2;
    78f8:	0a 18       	IF CC JUMP 0x790c <_mDNS_Register_internal+0x2f8>;
    78fa:	18 0c       	CC = R0 == 0x3;
    78fc:	08 1c       	IF CC JUMP 0x790c <_mDNS_Register_internal+0x2f8> (BP);
    78fe:	20 e4 f7 07 	R0 = [P4 + 0x1fdc];
    7902:	ff e3 8f d0 	CALL 0x1a20 <_FirstInterfaceForID.clone.0>;
    7906:	00 0c       	CC = R0 == 0x0;
    7908:	02 14       	IF !CC JUMP 0x790c <_mDNS_Register_internal+0x2f8> (BP);
    790a:	fb 22       	JUMP.S 0x7f00 <_mDNS_Register_internal+0x8ec>;
    790c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    790e:	28 93       	[P5] = R0;
    7910:	a8 e4 44 00 	R0 = B[P5 + 0x44] (Z);
    7914:	00 0c       	CC = R0 == 0x0;
    7916:	05 1c       	IF CC JUMP 0x7920 <_mDNS_Register_internal+0x30c> (BP);
    7918:	43 0c       	CC = P3 == 0x0;
    791a:	03 18       	IF CC JUMP 0x7920 <_mDNS_Register_internal+0x30c>;
    791c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    791e:	18 9b       	B[P3] = R0;
    7920:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7922:	a9 e4 04 00 	R1 = B[P5 + 0x4] (Z);
    7926:	11 0c       	CC = R1 == 0x2;
    7928:	19 60       	R1 = 0x3 (X);		/*		R1=0x3(  3) */
    792a:	08 06       	IF !CC R1 = R0;
    792c:	a9 e6 85 00 	B[P5 + 0x85] = R1;
    7930:	41 60       	R1 = 0x8 (X);		/*		R1=0x8(  8) */
    7932:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x1fcc */
    7936:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    793a:	a9 e6 86 00 	B[P5 + 0x86] = R1;
    793e:	11 91       	R1 = [P2];
    7940:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    7944:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    7948:	29 e6 27 00 	[P5 + 0x9c] = R1;
    794c:	2a e1 a0 00 	P2 = 0xa0 (X);		/*		P2=0xa0(160) */
    7950:	95 5a       	P2 = P5 + P2;
    7952:	09 91       	R1 = [P1];
    7954:	11 92       	[P2++] = R1;
    7956:	49 a0       	R1 = [P1 + 0x4];
    7958:	11 92       	[P2++] = R1;
    795a:	a8 e6 84 00 	B[P5 + 0x84] = R0;
    795e:	a8 e6 87 00 	B[P5 + 0x87] = R0;
    7962:	a8 e6 88 00 	B[P5 + 0x88] = R0;
    7966:	a8 e6 89 00 	B[P5 + 0x89] = R0;
    796a:	a8 e6 8a 00 	B[P5 + 0x8a] = R0;
    796e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7970:	89 a0       	R1 = [P1 + 0x8];
    7972:	11 92       	[P2++] = R1;
    7974:	28 e6 23 00 	[P5 + 0x8c] = R0;
    7978:	28 e6 24 00 	[P5 + 0x90] = R0;
    797c:	28 e6 25 00 	[P5 + 0x94] = R0;
    7980:	28 e6 26 00 	[P5 + 0x98] = R0;
    7984:	28 e6 2c 00 	[P5 + 0xb0] = R0;
    7988:	28 e6 2d 00 	[P5 + 0xb4] = R0;
    798c:	28 e6 2e 00 	[P5 + 0xb8] = R0;
    7990:	c9 a0       	R1 = [P1 + 0xc];
    7992:	a8 e4 44 00 	R0 = B[P5 + 0x44] (Z);
    7996:	11 93       	[P2] = R1;
    7998:	00 0c       	CC = R0 == 0x0;
    799a:	05 14       	IF !CC JUMP 0x79a4 <_mDNS_Register_internal+0x390> (BP);
    799c:	44 30       	R0 = P4;
    799e:	4d 30       	R1 = P5;
    79a0:	ff e3 28 c6 	CALL 0x5f0 <_InitializeLastAPTime>;
    79a4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    79a6:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    79a8:	28 e6 33 00 	[P5 + 0xcc] = R0;
    79ac:	69 e6 68 00 	W[P5 + 0xd0] = R1;
    79b0:	28 e6 35 00 	[P5 + 0xd4] = R0;
    79b4:	28 e6 37 00 	[P5 + 0xdc] = R0;
    79b8:	28 e6 38 00 	[P5 + 0xe0] = R0;
    79bc:	51 60       	R1 = 0xa (X);		/*		R1=0xa( 10) */
    79be:	28 e4 13 00 	R0 = [P5 + 0x4c];
    79c2:	29 e6 36 00 	[P5 + 0xd8] = R1;
    79c6:	00 0c       	CC = R0 == 0x0;
    79c8:	08 1c       	IF CC JUMP 0x79d8 <_mDNS_Register_internal+0x3c4> (BP);
    79ca:	28 e4 19 00 	R0 = [P5 + 0x64];
    79ce:	00 0c       	CC = R0 == 0x0;
    79d0:	04 14       	IF !CC JUMP 0x79d8 <_mDNS_Register_internal+0x3c4> (BP);
    79d2:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    79d4:	a8 e6 86 00 	B[P5 + 0x86] = R0;
    79d8:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0xa0 */
    79dc:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    79e0:	11 95       	R1 = W[P2] (Z);
    79e2:	69 e6 7a 00 	W[P5 + 0xf4] = R1;
    79e6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    79e8:	29 a2       	R1 = [P5 + 0x20];
    79ea:	28 e6 39 00 	[P5 + 0xe4] = R0;
    79ee:	28 e6 3a 00 	[P5 + 0xe8] = R0;
    79f2:	28 e6 3b 00 	[P5 + 0xec] = R0;
    79f6:	28 e6 3c 00 	[P5 + 0xf0] = R0;
    79fa:	29 e6 3e 00 	[P5 + 0xf8] = R1;
    79fe:	28 e6 3f 00 	[P5 + 0xfc] = R0;
    7a02:	28 e6 40 00 	[P5 + 0x100] = R0;
    7a06:	28 e6 57 00 	[P5 + 0x15c] = R0;
    7a0a:	28 e6 58 00 	[P5 + 0x160] = R0;
    7a0e:	28 e6 59 00 	[P5 + 0x164] = R0;
    7a12:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    7a14:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    7a16:	82 60       	R2 = 0x10 (X);		/*		R2=0x10( 16) */
    7a18:	69 e6 aa 00 	W[P5 + 0x154] = R1;
    7a1c:	69 e6 ab 00 	W[P5 + 0x156] = R1;
    7a20:	69 e6 ac 00 	W[P5 + 0x158] = R1;
    7a24:	10 08       	CC = R0 == R2;
    7a26:	0a 14       	IF !CC JUMP 0x7a3a <_mDNS_Register_internal+0x426> (BP);
    7a28:	28 a6       	R0 = W[P5 + 0x10] (Z);
    7a2a:	00 0c       	CC = R0 == 0x0;
    7a2c:	07 14       	IF !CC JUMP 0x7a3a <_mDNS_Register_internal+0x426> (BP);
    7a2e:	6a ae       	P2 = [P5 + 0x24];
    7a30:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    7a32:	28 b6       	W[P5 + 0x10] = R0;
    7a34:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7a36:	90 e6 04 00 	B[P2 + 0x4] = R0;
    7a3a:	00 00       	NOP;
    7a3c:	a8 e4 44 00 	R0 = B[P5 + 0x44] (Z);
    7a40:	00 0c       	CC = R0 == 0x0;
    7a42:	4b 1c       	IF CC JUMP 0x7ad8 <_mDNS_Register_internal+0x4c4> (BP);
    7a44:	44 30       	R0 = P4;
    7a46:	4d 30       	R1 = P5;
    7a48:	ff e3 d4 c9 	CALL 0xdf0 <_SetTargetToHostName>;
    7a4c:	28 e4 39 00 	R0 = [P5 + 0xe4];
    7a50:	43 60       	R3 = 0x8 (X);		/*		R3=0x8(  8) */
    7a52:	18 08       	CC = R0 == R3;
    7a54:	4e 14       	IF !CC JUMP 0x7af0 <_mDNS_Register_internal+0x4dc> (BP);
    7a56:	e9 a8       	R1 = W[P5 + 0x6] (X);
    7a58:	c8 42       	R0 = R1.L (Z);
    7a5a:	10 0c       	CC = R0 == 0x2;
    7a5c:	0a 18       	IF CC JUMP 0x7a70 <_mDNS_Register_internal+0x45c>;
    7a5e:	2a 60       	R2 = 0x5 (X);		/*		R2=0x5(  5) */
    7a60:	10 08       	CC = R0 == R2;
    7a62:	07 18       	IF CC JUMP 0x7a70 <_mDNS_Register_internal+0x45c>;
    7a64:	63 60       	R3 = 0xc (X);		/*		R3=0xc( 12) */
    7a66:	18 08       	CC = R0 == R3;
    7a68:	04 18       	IF CC JUMP 0x7a70 <_mDNS_Register_internal+0x45c>;
    7a6a:	3a 61       	R2 = 0x27 (X);		/*		R2=0x27( 39) */
    7a6c:	10 08       	CC = R0 == R2;
    7a6e:	04 14       	IF !CC JUMP 0x7a76 <_mDNS_Register_internal+0x462> (BP);
    7a70:	6a ae       	P2 = [P5 + 0x24];
    7a72:	22 6c       	P2 += 0x4;		/* (  4) */
    7a74:	16 20       	JUMP.S 0x7aa0 <_mDNS_Register_internal+0x48c>;
    7a76:	7b 60       	R3 = 0xf (X);		/*		R3=0xf( 15) */
    7a78:	18 08       	CC = R0 == R3;
    7a7a:	0a 18       	IF CC JUMP 0x7a8e <_mDNS_Register_internal+0x47a>;
    7a7c:	92 60       	R2 = 0x12 (X);		/*		R2=0x12( 18) */
    7a7e:	10 08       	CC = R0 == R2;
    7a80:	07 18       	IF CC JUMP 0x7a8e <_mDNS_Register_internal+0x47a>;
    7a82:	ab 60       	R3 = 0x15 (X);		/*		R3=0x15( 21) */
    7a84:	18 08       	CC = R0 == R3;
    7a86:	04 18       	IF CC JUMP 0x7a8e <_mDNS_Register_internal+0x47a>;
    7a88:	22 61       	R2 = 0x24 (X);		/*		R2=0x24( 36) */
    7a8a:	10 08       	CC = R0 == R2;
    7a8c:	04 14       	IF !CC JUMP 0x7a94 <_mDNS_Register_internal+0x480> (BP);
    7a8e:	6a ae       	P2 = [P5 + 0x24];
    7a90:	32 6c       	P2 += 0x6;		/* (  6) */
    7a92:	07 20       	JUMP.S 0x7aa0 <_mDNS_Register_internal+0x48c>;
    7a94:	c9 42       	R1 = R1.L (Z);
    7a96:	0b 61       	R3 = 0x21 (X);		/*		R3=0x21( 33) */
    7a98:	19 08       	CC = R1 == R3;
    7a9a:	07 14       	IF !CC JUMP 0x7aa8 <_mDNS_Register_internal+0x494> (BP);
    7a9c:	6a ae       	P2 = [P5 + 0x24];
    7a9e:	52 6c       	P2 += 0xa;		/* ( 10) */
    7aa0:	42 0c       	CC = P2 == 0x0;
    7aa2:	03 18       	IF CC JUMP 0x7aa8 <_mDNS_Register_internal+0x494>;
    7aa4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7aa6:	10 9b       	B[P2] = R0;
    7aa8:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    7aac:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    7ab0:	10 91       	R0 = [P2];
    7ab2:	00 0c       	CC = R0 == 0x0;
    7ab4:	1e 1c       	IF CC JUMP 0x7af0 <_mDNS_Register_internal+0x4dc> (BP);
    7ab6:	69 a2       	R1 = [P5 + 0x24];
    7ab8:	45 30       	R0 = P5;
    7aba:	54 30       	R2 = P4;
    7abc:	21 64       	R1 += 0x4;		/* (  4) */
    7abe:	ba 65       	R2 += 0x37;		/* ( 55) */
    7ac0:	20 64       	R0 += 0x4;		/* (  4) */
    7ac2:	ff e3 9f c2 	CALL 0x0 <_AddRecordToResponseList>;
    7ac6:	10 30       	R2 = R0;
    7ac8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    7acc:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    7ace:	01 e1 d4 23 	R1.L = 0x23d4;		/* (9172)	R1=0x23d4(9172) */
    7ad2:	ff e3 97 c2 	CALL 0x0 <_AddRecordToResponseList>;
    7ad6:	0d 20       	JUMP.S 0x7af0 <_mDNS_Register_internal+0x4dc>;
    7ad8:	6d 30       	R5 = P5;
    7ada:	25 64       	R5 += 0x4;		/* (  4) */
    7adc:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    7ade:	05 30       	R0 = R5;
    7ae0:	ff e3 90 c2 	CALL 0x0 <_AddRecordToResponseList>;
    7ae4:	28 b6       	W[P5 + 0x10] = R0;
    7ae6:	05 30       	R0 = R5;
    7ae8:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    7aea:	ff e3 8b c2 	CALL 0x0 <_AddRecordToResponseList>;
    7aee:	68 b6       	W[P5 + 0x12] = R0;
    7af0:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    7af4:	28 a2       	R0 = [P5 + 0x20];
    7af6:	48 50       	R1 = R0 + R1;
    7af8:	ff e3 84 c2 	CALL 0x0 <_AddRecordToResponseList>;
    7afc:	c0 42       	R0 = R0.L (Z);
    7afe:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    7b02:	08 0a       	CC = R0 <= R1 (IU);
    7b04:	6a a2       	R2 = [P5 + 0x24];
    7b06:	10 1c       	IF CC JUMP 0x7b26 <_mDNS_Register_internal+0x512> (BP);
    7b08:	0a 30       	R1 = R2;
    7b0a:	45 30       	R0 = P5;
    7b0c:	54 30       	R2 = P4;
    7b0e:	21 64       	R1 += 0x4;		/* (  4) */
    7b10:	ba 65       	R2 += 0x37;		/* ( 55) */
    7b12:	20 64       	R0 += 0x4;		/* (  4) */
    7b14:	ff e3 76 c2 	CALL 0x0 <_AddRecordToResponseList>;
    7b18:	10 30       	R2 = R0;
    7b1a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x100(256) */
    7b1e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7b20:	01 e1 08 24 	R1.L = 0x2408;		/* (9224)	R1=0x2408(9224) */
    7b24:	16 20       	JUMP.S 0x7b50 <_mDNS_Register_internal+0x53c>;
    7b26:	00 00       	NOP;
    7b28:	e8 a8       	R0 = W[P5 + 0x6] (X);
    7b2a:	29 aa       	R1 = W[P5 + 0x10] (X);
    7b2c:	ff e3 6a c2 	CALL 0x0 <_AddRecordToResponseList>;
    7b30:	00 0c       	CC = R0 == 0x0;
    7b32:	13 14       	IF !CC JUMP 0x7b58 <_mDNS_Register_internal+0x544> (BP);
    7b34:	69 a2       	R1 = [P5 + 0x24];
    7b36:	45 30       	R0 = P5;
    7b38:	54 30       	R2 = P4;
    7b3a:	21 64       	R1 += 0x4;		/* (  4) */
    7b3c:	ba 65       	R2 += 0x37;		/* ( 55) */
    7b3e:	20 64       	R0 += 0x4;		/* (  4) */
    7b40:	ff e3 60 c2 	CALL 0x0 <_AddRecordToResponseList>;
    7b44:	10 30       	R2 = R0;
    7b46:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2408(9224) */
    7b4a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7b4c:	01 e1 3c 24 	R1.L = 0x243c;		/* (9276)	R1=0x243c(9276) */
    7b50:	ff e3 58 c2 	CALL 0x0 <_AddRecordToResponseList>;
    7b54:	98 63       	R0 = -0xd (X);		/*		R0=0xfffffff3(-13) */
    7b56:	d6 21       	JUMP.S 0x7f02 <_mDNS_Register_internal+0x8ee>;
    7b58:	00 00       	NOP;
    7b5a:	28 a2       	R0 = [P5 + 0x20];
    7b5c:	ff e3 52 c2 	CALL 0x0 <_AddRecordToResponseList>;
    7b60:	68 b1       	[P5 + 0x14] = R0;
    7b62:	43 0c       	CC = P3 == 0x0;
    7b64:	05 18       	IF CC JUMP 0x7b6e <_mDNS_Register_internal+0x55a>;
    7b66:	43 30       	R0 = P3;
    7b68:	ff e3 4c c2 	CALL 0x0 <_AddRecordToResponseList>;
    7b6c:	05 20       	JUMP.S 0x7b76 <_mDNS_Register_internal+0x562>;
    7b6e:	45 30       	R0 = P5;
    7b70:	20 64       	R0 += 0x4;		/* (  4) */
    7b72:	ff e3 47 c2 	CALL 0x0 <_AddRecordToResponseList>;
    7b76:	a8 b1       	[P5 + 0x18] = R0;
    7b78:	28 e4 20 00 	R0 = [P5 + 0x80];
    7b7c:	f0 67       	R0 += -0x2;		/* ( -2) */
    7b7e:	08 0e       	CC = R0 <= 0x1 (IU);
    7b80:	6e 14       	IF !CC JUMP 0x7c5c <_mDNS_Register_internal+0x648> (BP);
    7b82:	a9 e4 04 00 	R1 = B[P5 + 0x4] (Z);
    7b86:	90 61       	R0 = 0x32 (X);		/*		R0=0x32( 50) */
    7b88:	01 54       	R0 = R1 & R0;
    7b8a:	00 0c       	CC = R0 == 0x0;
    7b8c:	68 1c       	IF CC JUMP 0x7c5c <_mDNS_Register_internal+0x648> (BP);
    7b8e:	28 a2       	R0 = [P5 + 0x20];
    7b90:	ff e3 38 c2 	CALL 0x0 <_AddRecordToResponseList>;
    7b94:	7d 32       	FP = P5;
    7b96:	41 e1 d5 20 	R1.H = 0x20d5;		/* (8405)	R1=0x20d5243c(550839356) */
    7b9a:	27 6c       	FP += 0x4;		/* (  4) */
    7b9c:	28 30       	R5 = R0;
    7b9e:	01 e1 39 6b 	R1.L = 0x6b39;		/* (27449)	R1=0x20d56b39(550857529) */
    7ba2:	ff e3 2f c2 	CALL 0x0 <_AddRecordToResponseList>;
    7ba6:	82 c6 d0 83 	R1 = R0 >> 0x6;
    7baa:	20 e1 f3 01 	R0 = 0x1f3 (X);		/*		R0=0x1f3(499) */
    7bae:	c1 40       	R1 *= R0;
    7bb0:	2b e1 f4 10 	P3 = 0x10f4 (X);		/*		P3=0x10f4(4340) */
    7bb4:	dc 5a       	P3 = P4 + P3;
    7bb6:	4d 52       	R1 = R5 - R1;
    7bb8:	43 30       	R0 = P3;
    7bba:	57 30       	R2 = FP;
    7bbc:	ff e3 56 d2 	CALL 0x2068 <_AuthGroupForRecord>;
    7bc0:	00 0c       	CC = R0 == 0x0;
    7bc2:	4d 18       	IF CC JUMP 0x7c5c <_mDNS_Register_internal+0x648>;
    7bc4:	18 32       	P3 = R0;
    7bc6:	43 6c       	P3 += 0x8;		/* (  8) */
    7bc8:	33 20       	JUMP.S 0x7c2e <_mDNS_Register_internal+0x61a>;
    7bca:	00 00       	NOP;
    7bcc:	a9 a3       	R1 = [P5 + 0x38];
    7bce:	01 0c       	CC = R1 == 0x0;
    7bd0:	4d 07       	IF CC R1 = P5;
    7bd2:	90 a3       	R0 = [P2 + 0x38];
    7bd4:	00 0c       	CC = R0 == 0x0;
    7bd6:	42 07       	IF CC R0 = P2;
    7bd8:	01 08       	CC = R1 == R0;
    7bda:	28 1c       	IF CC JUMP 0x7c2a <_mDNS_Register_internal+0x616> (BP);
    7bdc:	d1 a4       	R1 = W[P2 + 0x6] (Z);
    7bde:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    7be0:	01 08       	CC = R1 == R0;
    7be2:	24 14       	IF !CC JUMP 0x7c2a <_mDNS_Register_internal+0x616> (BP);
    7be4:	42 30       	R0 = P2;
    7be6:	4d 30       	R1 = P5;
    7be8:	ff e3 8a c4 	CALL 0x4fc <_SameResourceRecordNameClassInterface>;
    7bec:	00 0c       	CC = R0 == 0x0;
    7bee:	1e 1c       	IF CC JUMP 0x7c2a <_mDNS_Register_internal+0x616> (BP);
    7bf0:	5a 91       	P2 = [P3];
    7bf2:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    7bf4:	d1 a4       	R1 = W[P2 + 0x6] (Z);
    7bf6:	01 08       	CC = R1 == R0;
    7bf8:	8e 15       	IF !CC JUMP 0x7f14 <_mDNS_Register_internal+0x900> (BP);
    7bfa:	11 a5       	R1 = W[P2 + 0x8] (Z);
    7bfc:	28 a5       	R0 = W[P5 + 0x8] (Z);
    7bfe:	01 08       	CC = R1 == R0;
    7c00:	8a 15       	IF !CC JUMP 0x7f14 <_mDNS_Register_internal+0x900> (BP);
    7c02:	11 a6       	R1 = W[P2 + 0x10] (Z);
    7c04:	28 a6       	R0 = W[P5 + 0x10] (Z);
    7c06:	01 08       	CC = R1 == R0;
    7c08:	86 15       	IF !CC JUMP 0x7f14 <_mDNS_Register_internal+0x900> (BP);
    7c0a:	91 a1       	R1 = [P2 + 0x18];
    7c0c:	a8 a1       	R0 = [P5 + 0x18];
    7c0e:	01 08       	CC = R1 == R0;
    7c10:	82 11       	IF !CC JUMP 0x7f14 <_mDNS_Register_internal+0x900>;
    7c12:	42 30       	R0 = P2;
    7c14:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x24( 36) */
    7c18:	20 64       	R0 += 0x4;		/* (  4) */
    7c1a:	69 a2       	R1 = [P5 + 0x24];
    7c1c:	21 64       	R1 += 0x4;		/* (  4) */
    7c1e:	02 e1 00 00 	R2.L = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    7c22:	ff e3 ef c1 	CALL 0x0 <_AddRecordToResponseList>;
    7c26:	00 0c       	CC = R0 == 0x0;
    7c28:	76 1d       	IF CC JUMP 0x7f14 <_mDNS_Register_internal+0x900> (BP);
    7c2a:	00 00       	NOP;
    7c2c:	5b 91       	P3 = [P3];
    7c2e:	5a 91       	P2 = [P3];
    7c30:	42 0c       	CC = P2 == 0x0;
    7c32:	cc 17       	IF !CC JUMP 0x7bca <_mDNS_Register_internal+0x5b6> (BP);
    7c34:	14 20       	JUMP.S 0x7c5c <_mDNS_Register_internal+0x648>;
    7c36:	69 a2       	R1 = [P5 + 0x24];
    7c38:	54 30       	R2 = P4;
    7c3a:	21 64       	R1 += 0x4;		/* (  4) */
    7c3c:	ba 65       	R2 += 0x37;		/* ( 55) */
    7c3e:	47 30       	R0 = FP;
    7c40:	ff e3 e0 c1 	CALL 0x0 <_AddRecordToResponseList>;
    7c44:	10 30       	R2 = R0;
    7c46:	e8 a1       	R0 = [P5 + 0x1c];
    7c48:	30 b1       	[SP + 0x10] = R0;
    7c4a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x6b39(27449) */
    7c4e:	f5 bc       	[SP + 0xc] = P5;
    7c50:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    7c52:	01 e1 70 24 	R1.L = 0x2470;		/* (9328)	R1=0x2470(9328) */
    7c56:	ff e3 d5 c1 	CALL 0x0 <_AddRecordToResponseList>;
    7c5a:	64 21       	JUMP.S 0x7f22 <_mDNS_Register_internal+0x90e>;
    7c5c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    7c60:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    7c64:	e9 a1       	R1 = [P5 + 0x1c];
    7c66:	10 91       	R0 = [P2];
    7c68:	01 08       	CC = R1 == R0;
    7c6a:	2d 14       	IF !CC JUMP 0x7cc4 <_mDNS_Register_internal+0x6b0> (BP);
    7c6c:	a8 e4 46 00 	R0 = B[P5 + 0x46] (Z);
    7c70:	00 0c       	CC = R0 == 0x0;
    7c72:	29 14       	IF !CC JUMP 0x7cc4 <_mDNS_Register_internal+0x6b0> (BP);
    7c74:	28 a2       	R0 = [P5 + 0x20];
    7c76:	ff e3 c5 c1 	CALL 0x0 <_AddRecordToResponseList>;
    7c7a:	00 0c       	CC = R0 == 0x0;
    7c7c:	24 14       	IF !CC JUMP 0x7cc4 <_mDNS_Register_internal+0x6b0> (BP);
    7c7e:	20 e4 f4 07 	R0 = [P4 + 0x1fd0];
    7c82:	00 0c       	CC = R0 == 0x0;
    7c84:	05 14       	IF !CC JUMP 0x7c8e <_mDNS_Register_internal+0x67a> (BP);
    7c86:	25 e7 f4 07 	[P4 + 0x1fd0] = P5;
    7c8a:	02 20       	JUMP.S 0x7c8e <_mDNS_Register_internal+0x67a>;
    7c8c:	38 30       	R7 = R0;
    7c8e:	17 32       	P2 = R7;
    7c90:	10 91       	R0 = [P2];
    7c92:	00 0c       	CC = R0 == 0x0;
    7c94:	fc 17       	IF !CC JUMP 0x7c8c <_mDNS_Register_internal+0x678> (BP);
    7c96:	55 93       	[P2] = P5;
    7c98:	a8 e4 04 00 	R0 = B[P5 + 0x4] (Z);
    7c9c:	10 0c       	CC = R0 == 0x2;
    7c9e:	04 14       	IF !CC JUMP 0x7ca6 <_mDNS_Register_internal+0x692> (BP);
    7ca0:	80 60       	R0 = 0x10 (X);		/*		R0=0x10( 16) */
    7ca2:	a8 e6 04 00 	B[P5 + 0x4] = R0;
    7ca6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7ca8:	a8 e6 85 00 	B[P5 + 0x85] = R0;
    7cac:	a8 e6 86 00 	B[P5 + 0x86] = R0;
    7cb0:	28 e4 39 00 	R0 = [P5 + 0xe4];
    7cb4:	41 60       	R1 = 0x8 (X);		/*		R1=0x8(  8) */
    7cb6:	08 08       	CC = R0 == R1;
    7cb8:	28 19       	IF CC JUMP 0x7f08 <_mDNS_Register_internal+0x8f4>;
    7cba:	44 30       	R0 = P4;
    7cbc:	4d 30       	R1 = P5;
    7cbe:	ff e3 b1 fb 	CALL 0x7420 <_ActivateUnicastRegistration>;
    7cc2:	23 21       	JUMP.S 0x7f08 <_mDNS_Register_internal+0x8f4>;
    7cc4:	00 00       	NOP;
    7cc6:	28 e4 20 00 	R0 = [P5 + 0x80];
    7cca:	f0 67       	R0 += -0x2;		/* ( -2) */
    7ccc:	08 0e       	CC = R0 <= 0x1 (IU);
    7cce:	71 14       	IF !CC JUMP 0x7db0 <_mDNS_Register_internal+0x79c> (BP);
    7cd0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7cd2:	a8 e6 85 00 	B[P5 + 0x85] = R0;
    7cd6:	a8 e6 86 00 	B[P5 + 0x86] = R0;
    7cda:	28 a2       	R0 = [P5 + 0x20];
    7cdc:	ff e3 92 c1 	CALL 0x0 <_AddRecordToResponseList>;
    7ce0:	41 e1 d5 20 	R1.H = 0x20d5;		/* (8405)	R1=0x20d50008(550830088) */
    7ce4:	28 30       	R5 = R0;
    7ce6:	01 e1 39 6b 	R1.L = 0x6b39;		/* (27449)	R1=0x20d56b39(550857529) */
    7cea:	ff e3 8b c1 	CALL 0x0 <_AddRecordToResponseList>;
    7cee:	82 c6 d0 83 	R1 = R0 >> 0x6;
    7cf2:	20 e1 f3 01 	R0 = 0x1f3 (X);		/*		R0=0x1f3(499) */
    7cf6:	c1 40       	R1 *= R0;
    7cf8:	2b e1 f4 10 	P3 = 0x10f4 (X);		/*		P3=0x10f4(4340) */
    7cfc:	dc 5a       	P3 = P4 + P3;
    7cfe:	55 30       	R2 = P5;
    7d00:	4d 52       	R1 = R5 - R1;
    7d02:	22 64       	R2 += 0x4;		/* (  4) */
    7d04:	43 30       	R0 = P3;
    7d06:	ff e3 b1 d1 	CALL 0x2068 <_AuthGroupForRecord>;
    7d0a:	00 0c       	CC = R0 == 0x0;
    7d0c:	ac 1c       	IF CC JUMP 0x7e64 <_mDNS_Register_internal+0x850> (BP);
    7d0e:	38 32       	FP = R0;
    7d10:	05 60       	R5 = 0x0 (X);		/*		R5=0x0(  0) */
    7d12:	47 6c       	FP += 0x8;		/* (  8) */
    7d14:	47 20       	JUMP.S 0x7da2 <_mDNS_Register_internal+0x78e>;
    7d16:	00 00       	NOP;
    7d18:	d1 a1       	R1 = [P2 + 0x1c];
    7d1a:	e8 a1       	R0 = [P5 + 0x1c];
    7d1c:	01 08       	CC = R1 == R0;
    7d1e:	40 14       	IF !CC JUMP 0x7d9e <_mDNS_Register_internal+0x78a> (BP);
    7d20:	92 e5 04 00 	R2 = B[P2 + 0x4] (X);
    7d24:	ab e5 04 00 	R3 = B[P5 + 0x4] (X);
    7d28:	51 43       	R1 = R2.B (Z);
    7d2a:	58 43       	R0 = R3.B (Z);
    7d2c:	01 08       	CC = R1 == R0;
    7d2e:	0a 18       	IF CC JUMP 0x7d42 <_mDNS_Register_internal+0x72e>;
    7d30:	93 56       	R2 = R3 | R2;
    7d32:	52 43       	R2 = R2.B (Z);
    7d34:	93 60       	R3 = 0x12 (X);		/*		R3=0x12( 18) */
    7d36:	1a 08       	CC = R2 == R3;
    7d38:	05 18       	IF CC JUMP 0x7d42 <_mDNS_Register_internal+0x72e>;
    7d3a:	09 0c       	CC = R1 == 0x1;
    7d3c:	03 18       	IF CC JUMP 0x7d42 <_mDNS_Register_internal+0x72e>;
    7d3e:	08 0c       	CC = R0 == 0x1;
    7d40:	2f 14       	IF !CC JUMP 0x7d9e <_mDNS_Register_internal+0x78a> (BP);
    7d42:	d1 a4       	R1 = W[P2 + 0x6] (Z);
    7d44:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    7d46:	01 08       	CC = R1 == R0;
    7d48:	2b 14       	IF !CC JUMP 0x7d9e <_mDNS_Register_internal+0x78a> (BP);
    7d4a:	11 a5       	R1 = W[P2 + 0x8] (Z);
    7d4c:	28 a5       	R0 = W[P5 + 0x8] (Z);
    7d4e:	01 08       	CC = R1 == R0;
    7d50:	27 14       	IF !CC JUMP 0x7d9e <_mDNS_Register_internal+0x78a> (BP);
    7d52:	51 a1       	R1 = [P2 + 0x14];
    7d54:	68 a1       	R0 = [P5 + 0x14];
    7d56:	01 08       	CC = R1 == R0;
    7d58:	23 14       	IF !CC JUMP 0x7d9e <_mDNS_Register_internal+0x78a> (BP);
    7d5a:	11 a6       	R1 = W[P2 + 0x10] (Z);
    7d5c:	28 a6       	R0 = W[P5 + 0x10] (Z);
    7d5e:	01 08       	CC = R1 == R0;
    7d60:	1f 14       	IF !CC JUMP 0x7d9e <_mDNS_Register_internal+0x78a> (BP);
    7d62:	91 a1       	R1 = [P2 + 0x18];
    7d64:	a8 a1       	R0 = [P5 + 0x18];
    7d66:	01 08       	CC = R1 == R0;
    7d68:	1b 10       	IF !CC JUMP 0x7d9e <_mDNS_Register_internal+0x78a>;
    7d6a:	42 30       	R0 = P2;
    7d6c:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    7d70:	20 64       	R0 += 0x4;		/* (  4) */
    7d72:	69 a2       	R1 = [P5 + 0x24];
    7d74:	21 64       	R1 += 0x4;		/* (  4) */
    7d76:	02 e1 00 00 	R2.L = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    7d7a:	ff e3 43 c1 	CALL 0x0 <_AddRecordToResponseList>;
    7d7e:	00 0c       	CC = R0 == 0x0;
    7d80:	0f 1c       	IF CC JUMP 0x7d9e <_mDNS_Register_internal+0x78a> (BP);
    7d82:	7a 91       	P2 = [FP];
    7d84:	29 a2       	R1 = [P5 + 0x20];
    7d86:	10 a2       	R0 = [P2 + 0x20];
    7d88:	ff e3 3c c1 	CALL 0x0 <_AddRecordToResponseList>;
    7d8c:	00 0c       	CC = R0 == 0x0;
    7d8e:	08 1c       	IF CC JUMP 0x7d9e <_mDNS_Register_internal+0x78a> (BP);
    7d90:	7b 91       	P3 = [FP];
    7d92:	98 e4 04 00 	R0 = B[P3 + 0x4] (Z);
    7d96:	08 0c       	CC = R0 == 0x1;
    7d98:	09 14       	IF !CC JUMP 0x7daa <_mDNS_Register_internal+0x796> (BP);
    7d9a:	9d e6 86 00 	B[P3 + 0x86] = R5;
    7d9e:	00 00       	NOP;
    7da0:	7f 91       	FP = [FP];
    7da2:	7a 91       	P2 = [FP];
    7da4:	42 0c       	CC = P2 == 0x0;
    7da6:	b8 17       	IF !CC JUMP 0x7d16 <_mDNS_Register_internal+0x702> (BP);
    7da8:	5e 20       	JUMP.S 0x7e64 <_mDNS_Register_internal+0x850>;
    7daa:	43 0c       	CC = P3 == 0x0;
    7dac:	4d 14       	IF !CC JUMP 0x7e46 <_mDNS_Register_internal+0x832> (BP);
    7dae:	5b 20       	JUMP.S 0x7e64 <_mDNS_Register_internal+0x850>;
    7db0:	05 60       	R5 = 0x0 (X);		/*		R5=0x0(  0) */
    7db2:	23 e5 f2 07 	P3 = [P4 + 0x1fc8];
    7db6:	45 20       	JUMP.S 0x7e40 <_mDNS_Register_internal+0x82c>;
    7db8:	00 00       	NOP;
    7dba:	d9 a1       	R1 = [P3 + 0x1c];
    7dbc:	e8 a1       	R0 = [P5 + 0x1c];
    7dbe:	01 08       	CC = R1 == R0;
    7dc0:	3e 14       	IF !CC JUMP 0x7e3c <_mDNS_Register_internal+0x828> (BP);
    7dc2:	9a e5 04 00 	R2 = B[P3 + 0x4] (X);
    7dc6:	ab e5 04 00 	R3 = B[P5 + 0x4] (X);
    7dca:	51 43       	R1 = R2.B (Z);
    7dcc:	58 43       	R0 = R3.B (Z);
    7dce:	01 08       	CC = R1 == R0;
    7dd0:	0a 18       	IF CC JUMP 0x7de4 <_mDNS_Register_internal+0x7d0>;
    7dd2:	93 56       	R2 = R3 | R2;
    7dd4:	52 43       	R2 = R2.B (Z);
    7dd6:	93 60       	R3 = 0x12 (X);		/*		R3=0x12( 18) */
    7dd8:	1a 08       	CC = R2 == R3;
    7dda:	05 18       	IF CC JUMP 0x7de4 <_mDNS_Register_internal+0x7d0>;
    7ddc:	09 0c       	CC = R1 == 0x1;
    7dde:	03 18       	IF CC JUMP 0x7de4 <_mDNS_Register_internal+0x7d0>;
    7de0:	08 0c       	CC = R0 == 0x1;
    7de2:	2d 14       	IF !CC JUMP 0x7e3c <_mDNS_Register_internal+0x828> (BP);
    7de4:	d9 a4       	R1 = W[P3 + 0x6] (Z);
    7de6:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    7de8:	01 08       	CC = R1 == R0;
    7dea:	29 14       	IF !CC JUMP 0x7e3c <_mDNS_Register_internal+0x828> (BP);
    7dec:	19 a5       	R1 = W[P3 + 0x8] (Z);
    7dee:	28 a5       	R0 = W[P5 + 0x8] (Z);
    7df0:	01 08       	CC = R1 == R0;
    7df2:	25 14       	IF !CC JUMP 0x7e3c <_mDNS_Register_internal+0x828> (BP);
    7df4:	59 a1       	R1 = [P3 + 0x14];
    7df6:	68 a1       	R0 = [P5 + 0x14];
    7df8:	01 08       	CC = R1 == R0;
    7dfa:	21 14       	IF !CC JUMP 0x7e3c <_mDNS_Register_internal+0x828> (BP);
    7dfc:	19 a6       	R1 = W[P3 + 0x10] (Z);
    7dfe:	28 a6       	R0 = W[P5 + 0x10] (Z);
    7e00:	01 08       	CC = R1 == R0;
    7e02:	1d 14       	IF !CC JUMP 0x7e3c <_mDNS_Register_internal+0x828> (BP);
    7e04:	99 a1       	R1 = [P3 + 0x18];
    7e06:	a8 a1       	R0 = [P5 + 0x18];
    7e08:	01 08       	CC = R1 == R0;
    7e0a:	19 14       	IF !CC JUMP 0x7e3c <_mDNS_Register_internal+0x828> (BP);
    7e0c:	69 a2       	R1 = [P5 + 0x24];
    7e0e:	43 30       	R0 = P3;
    7e10:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    7e14:	20 64       	R0 += 0x4;		/* (  4) */
    7e16:	21 64       	R1 += 0x4;		/* (  4) */
    7e18:	02 e1 00 00 	R2.L = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    7e1c:	ff e3 f2 c0 	CALL 0x0 <_AddRecordToResponseList>;
    7e20:	00 0c       	CC = R0 == 0x0;
    7e22:	0d 1c       	IF CC JUMP 0x7e3c <_mDNS_Register_internal+0x828> (BP);
    7e24:	18 a2       	R0 = [P3 + 0x20];
    7e26:	29 a2       	R1 = [P5 + 0x20];
    7e28:	ff e3 ec c0 	CALL 0x0 <_AddRecordToResponseList>;
    7e2c:	00 0c       	CC = R0 == 0x0;
    7e2e:	07 1c       	IF CC JUMP 0x7e3c <_mDNS_Register_internal+0x828> (BP);
    7e30:	98 e4 04 00 	R0 = B[P3 + 0x4] (Z);
    7e34:	08 0c       	CC = R0 == 0x1;
    7e36:	08 14       	IF !CC JUMP 0x7e46 <_mDNS_Register_internal+0x832> (BP);
    7e38:	9d e6 86 00 	B[P3 + 0x86] = R5;
    7e3c:	00 00       	NOP;
    7e3e:	5b 91       	P3 = [P3];
    7e40:	43 0c       	CC = P3 == 0x0;
    7e42:	bb 17       	IF !CC JUMP 0x7db8 <_mDNS_Register_internal+0x7a4> (BP);
    7e44:	10 20       	JUMP.S 0x7e64 <_mDNS_Register_internal+0x850>;
    7e46:	16 32       	P2 = R6;
    7e48:	55 93       	[P2] = P5;
    7e4a:	a8 e4 04 00 	R0 = B[P5 + 0x4] (Z);
    7e4e:	10 0c       	CC = R0 == 0x2;
    7e50:	38 14       	IF !CC JUMP 0x7ec0 <_mDNS_Register_internal+0x8ac> (BP);
    7e52:	98 e4 04 00 	R0 = B[P3 + 0x4] (Z);
    7e56:	81 60       	R1 = 0x10 (X);		/*		R1=0x10( 16) */
    7e58:	08 08       	CC = R0 == R1;
    7e5a:	33 14       	IF !CC JUMP 0x7ec0 <_mDNS_Register_internal+0x8ac> (BP);
    7e5c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7e5e:	a8 e6 85 00 	B[P5 + 0x85] = R0;
    7e62:	2f 20       	JUMP.S 0x7ec0 <_mDNS_Register_internal+0x8ac>;
    7e64:	00 00       	NOP;
    7e66:	28 e4 20 00 	R0 = [P5 + 0x80];
    7e6a:	f0 67       	R0 += -0x2;		/* ( -2) */
    7e6c:	08 0e       	CC = R0 <= 0x1 (IU);
    7e6e:	20 14       	IF !CC JUMP 0x7eae <_mDNS_Register_internal+0x89a> (BP);
    7e70:	2a e1 f4 10 	P2 = 0x10f4 (X);		/*		P2=0x10f4(4340) */
    7e74:	94 5a       	P2 = P4 + P2;
    7e76:	4a 30       	R1 = P2;
    7e78:	44 30       	R0 = P4;
    7e7a:	55 30       	R2 = P5;
    7e7c:	ff e3 02 d1 	CALL 0x2080 <_InsertAuthRecord>;
    7e80:	10 32       	P2 = R0;
    7e82:	42 0c       	CC = P2 == 0x0;
    7e84:	08 1c       	IF CC JUMP 0x7e94 <_mDNS_Register_internal+0x880> (BP);
    7e86:	50 a1       	R0 = [P2 + 0x14];
    7e88:	00 0c       	CC = R0 == 0x0;
    7e8a:	05 14       	IF !CC JUMP 0x7e94 <_mDNS_Register_internal+0x880> (BP);
    7e8c:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    7e8e:	20 e6 f6 07 	[P4 + 0x1fd8] = R0;
    7e92:	55 bd       	[P2 + 0x14] = P5;
    7e94:	00 00       	NOP;
    7e96:	a8 e4 04 00 	R0 = B[P5 + 0x4] (Z);
    7e9a:	10 0c       	CC = R0 == 0x2;
    7e9c:	04 14       	IF !CC JUMP 0x7ea4 <_mDNS_Register_internal+0x890> (BP);
    7e9e:	80 60       	R0 = 0x10 (X);		/*		R0=0x10( 16) */
    7ea0:	a8 e6 04 00 	B[P5 + 0x4] = R0;
    7ea4:	44 30       	R0 = P4;
    7ea6:	4d 30       	R1 = P5;
    7ea8:	ff e3 08 c2 	CALL 0x2b8 <_AcknowledgeRecord>;
    7eac:	2e 20       	JUMP.S 0x7f08 <_mDNS_Register_internal+0x8f4>;
    7eae:	00 00       	NOP;
    7eb0:	20 e4 f4 07 	R0 = [P4 + 0x1fd0];
    7eb4:	00 0c       	CC = R0 == 0x0;
    7eb6:	03 14       	IF !CC JUMP 0x7ebc <_mDNS_Register_internal+0x8a8> (BP);
    7eb8:	25 e7 f4 07 	[P4 + 0x1fd0] = P5;
    7ebc:	17 32       	P2 = R7;
    7ebe:	55 93       	[P2] = P5;
    7ec0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x10f4 */
    7ec4:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    7ec8:	e9 a1       	R1 = [P5 + 0x1c];
    7eca:	10 91       	R0 = [P2];
    7ecc:	01 08       	CC = R1 == R0;
    7ece:	0a 14       	IF !CC JUMP 0x7ee2 <_mDNS_Register_internal+0x8ce> (BP);
    7ed0:	a8 e4 46 00 	R0 = B[P5 + 0x46] (Z);
    7ed4:	00 0c       	CC = R0 == 0x0;
    7ed6:	06 14       	IF !CC JUMP 0x7ee2 <_mDNS_Register_internal+0x8ce> (BP);
    7ed8:	28 a2       	R0 = [P5 + 0x20];
    7eda:	ff e3 93 c0 	CALL 0x0 <_AddRecordToResponseList>;
    7ede:	00 0c       	CC = R0 == 0x0;
    7ee0:	14 1c       	IF CC JUMP 0x7f08 <_mDNS_Register_internal+0x8f4> (BP);
    7ee2:	00 00       	NOP;
    7ee4:	a8 e5 04 00 	R0 = B[P5 + 0x4] (X);
    7ee8:	f8 67       	R0 += -0x1;		/* ( -1) */
    7eea:	40 43       	R0 = R0.B (Z);
    7eec:	08 0e       	CC = R0 <= 0x1 (IU);
    7eee:	05 18       	IF CC JUMP 0x7ef8 <_mDNS_Register_internal+0x8e4>;
    7ef0:	44 30       	R0 = P4;
    7ef2:	4d 30       	R1 = P5;
    7ef4:	ff e3 e2 c1 	CALL 0x2b8 <_AcknowledgeRecord>;
    7ef8:	44 30       	R0 = P4;
    7efa:	ff e3 4b e0 	CALL 0x3f90 <_mDNS_UpdateAllowSleep>;
    7efe:	05 20       	JUMP.S 0x7f08 <_mDNS_Register_internal+0x8f4>;
    7f00:	d8 63       	R0 = -0x5 (X);		/*		R0=0xfffffffb( -5) */
    7f02:	40 e1 fe ff 	R0.H = 0xfffe;		/* ( -2)	R0=0xfffefffb(-65541) */
    7f06:	02 20       	JUMP.S 0x7f0a <_mDNS_Register_internal+0x8f6>;
    7f08:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7f0a:	a6 6c       	SP += 0x14;		/* ( 20) */
    7f0c:	77 90       	FP = [SP++];
    7f0e:	27 01       	RETS = [SP++];
    7f10:	ab 05       	(R7:5, P5:3) = [SP++];
    7f12:	10 00       	RTS;
    7f14:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    7f18:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    7f1c:	10 91       	R0 = [P2];
    7f1e:	00 0c       	CC = R0 == 0x0;
    7f20:	8b 12       	IF !CC JUMP 0x7c36 <_mDNS_Register_internal+0x622>;
    7f22:	20 e1 fd bf 	R0 = -0x4003 (X);		/*		R0=0xffffbffd(-16387) */
    7f26:	cd 2b       	JUMP.S 0x76c0 <_mDNS_Register_internal+0xac>;

00007f28 <_AdvertiseInterface>:
_AdvertiseInterface():
    7f28:	10 32       	P2 = R0;
    7f2a:	e3 05       	[--SP] = (R7:4, P5:3);
    7f2c:	00 e8 1d 00 	LINK 0x74;		/* (116) */
    7f30:	30 30       	R6 = R0;
    7f32:	29 32       	P5 = R1;
    7f34:	14 e5 f7 07 	P4 = [P2 + 0x1fdc];
    7f38:	07 20       	JUMP.S 0x7f46 <_AdvertiseInterface+0x1e>;
    7f3a:	00 00       	NOP;
    7f3c:	a0 e4 b4 14 	R0 = B[P4 + 0x14b4] (Z);
    7f40:	00 0c       	CC = R0 == 0x0;
    7f42:	05 14       	IF !CC JUMP 0x7f4c <_AdvertiseInterface+0x24> (BP);
    7f44:	64 91       	P4 = [P4];
    7f46:	44 0c       	CC = P4 == 0x0;
    7f48:	f9 17       	IF !CC JUMP 0x7f3a <_AdvertiseInterface+0x12> (BP);
    7f4a:	65 32       	P4 = P5;
    7f4c:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    7f4e:	b0 b5       	W[SP + 0xc] = R0;
    7f50:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x1(  1) */
    7f54:	00 e1 40 87 	R0.L = 0x8740;		/* (-30912)	R0=0x8740 <_mDNS_HostNameCallback>(34624) */
    7f58:	2b e1 e4 09 	P3 = 0x9e4 (X);		/*		P3=0x9e4(2532) */
    7f5c:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    7f5e:	25 e1 78 00 	R5 = 0x78 (X);		/*		R5=0x78(120) */
    7f62:	dd 5a       	P3 = P5 + P3;
    7f64:	14 60       	R4 = 0x2 (X);		/*		R4=0x2(  2) */
    7f66:	f0 b1       	[SP + 0x1c] = R0;
    7f68:	2a e4 10 05 	R2 = [P5 + 0x1440];
    7f6c:	b7 b1       	[SP + 0x18] = R7;
    7f6e:	43 30       	R0 = P3;
    7f70:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    7f72:	73 be       	[SP + 0x24] = P3;
    7f74:	35 b1       	[SP + 0x10] = R5;
    7f76:	b4 e6 14 00 	B[SP + 0x14] = R4;
    7f7a:	35 be       	[SP + 0x20] = P5;
    7f7c:	ff e3 42 c0 	CALL 0x0 <_AddRecordToResponseList>;
    7f80:	60 60       	R0 = 0xc (X);		/*		R0=0xc( 12) */
    7f82:	b0 b5       	W[SP + 0xc] = R0;
    7f84:	00 61       	R0 = 0x20 (X);		/*		R0=0x20( 32) */
    7f86:	2f e1 58 0d 	FP = 0xd58 (X);		/*		FP=0xd58(3416) */
    7f8a:	fd 5b       	FP = P5 + FP;
    7f8c:	b0 e6 14 00 	B[SP + 0x14] = R0;
    7f90:	2a e4 10 05 	R2 = [P5 + 0x1440];
    7f94:	b7 b1       	[SP + 0x18] = R7;
    7f96:	f7 b1       	[SP + 0x1c] = R7;
    7f98:	37 b2       	[SP + 0x20] = R7;
    7f9a:	47 30       	R0 = FP;
    7f9c:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    7f9e:	35 b1       	[SP + 0x10] = R5;
    7fa0:	ff e3 30 c0 	CALL 0x0 <_AddRecordToResponseList>;
    7fa4:	69 60       	R1 = 0xd (X);		/*		R1=0xd( 13) */
    7fa6:	2a e1 cc 10 	P2 = 0x10cc (X);		/*		P2=0x10cc(4300) */
    7faa:	95 5a       	P2 = P5 + P2;
    7fac:	b1 b5       	W[SP + 0xc] = R1;
    7fae:	42 30       	R0 = P2;
    7fb0:	2a e4 10 05 	R2 = [P5 + 0x1440];
    7fb4:	b7 b1       	[SP + 0x18] = R7;
    7fb6:	f7 b1       	[SP + 0x1c] = R7;
    7fb8:	37 b2       	[SP + 0x20] = R7;
    7fba:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    7fbc:	35 b1       	[SP + 0x10] = R5;
    7fbe:	b4 e6 14 00 	B[SP + 0x14] = R4;
    7fc2:	ff e3 1f c0 	CALL 0x0 <_AddRecordToResponseList>;
    7fc6:	27 e1 54 19 	R7 = 0x1954 (X);		/*		R7=0x1954(6484) */
    7fca:	fe 51       	R7 = R6 + R7;
    7fcc:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    7fd0:	4f 50       	R1 = R7 + R1;
    7fd2:	07 30       	R0 = R7;
    7fd4:	ff e3 16 c0 	CALL 0x0 <_AddRecordToResponseList>;
    7fd8:	c2 42       	R2 = R0.L (Z);
    7fda:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    7fde:	02 0a       	CC = R2 <= R0 (IU);
    7fe0:	09 14       	IF !CC JUMP 0x7ff2 <_AdvertiseInterface+0xca> (BP);
    7fe2:	2a e1 4c 0b 	P2 = 0xb4c (X);		/*		P2=0xb4c(2892) */
    7fe6:	95 5a       	P2 = P5 + P2;
    7fe8:	42 30       	R0 = P2;
    7fea:	0f 30       	R1 = R7;
    7fec:	ff e3 0a c0 	CALL 0x0 <_AddRecordToResponseList>;
    7ff0:	04 20       	JUMP.S 0x7ff8 <_AdvertiseInterface+0xd0>;
    7ff2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7ff4:	a8 e6 4c 0b 	B[P5 + 0xb4c] = R0;
    7ff8:	28 e4 11 05 	R0 = [P5 + 0x1444];
    7ffc:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
    7ffe:	08 08       	CC = R0 == R1;
    8000:	20 14       	IF !CC JUMP 0x8040 <_AdvertiseInterface+0x118> (BP);
    8002:	2a e5 82 02 	P2 = [P5 + 0xa08];
    8006:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    8008:	68 e6 f5 04 	W[P5 + 0x9ea] = R0;
    800c:	28 e4 12 05 	R0 = [P5 + 0x1448];
    8010:	50 b0       	[P2 + 0x4] = R0;
    8012:	a8 e4 4b 14 	R0 = B[P5 + 0x144b] (Z);
    8016:	f0 b0       	[SP + 0xc] = R0;
    8018:	a8 e4 4a 14 	R0 = B[P5 + 0x144a] (Z);
    801c:	30 b1       	[SP + 0x10] = R0;
    801e:	a8 e4 49 14 	R0 = B[P5 + 0x1449] (Z);
    8022:	70 b1       	[SP + 0x14] = R0;
    8024:	a8 e4 48 14 	R0 = B[P5 + 0x1448] (Z);
    8028:	b0 b1       	[SP + 0x18] = R0;
    802a:	46 30       	R0 = SP;
    802c:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    8030:	21 e1 4a 00 	R1 = 0x4a (X);		/*		R1=0x4a( 74) */
    8034:	02 e1 b0 24 	R2.L = 0x24b0;		/* (9392)	R2=0x24b0(9392) */
    8038:	40 65       	R0 += 0x28;		/* ( 40) */
    803a:	ff e3 e3 bf 	CALL 0x0 <_AddRecordToResponseList>;
    803e:	3f 20       	JUMP.S 0x80bc <_AdvertiseInterface+0x194>;
    8040:	32 60       	R2 = 0x6 (X);		/*		R2=0x6(  6) */
    8042:	10 08       	CC = R0 == R2;
    8044:	3c 14       	IF !CC JUMP 0x80bc <_AdvertiseInterface+0x194> (BP);
    8046:	29 e5 82 02 	P1 = [P5 + 0xa08];
    804a:	e0 60       	R0 = 0x1c (X);		/*		R0=0x1c( 28) */
    804c:	2a e1 48 14 	P2 = 0x1448 (X);		/*		P2=0x1448(5192) */
    8050:	68 e6 f5 04 	W[P5 + 0x9ea] = R0;
    8054:	95 5a       	P2 = P5 + P2;
    8056:	10 90       	R0 = [P2++];
    8058:	48 b0       	[P1 + 0x4] = R0;
    805a:	10 90       	R0 = [P2++];
    805c:	41 6c       	P1 += 0x8;		/* (  8) */
    805e:	08 92       	[P1++] = R0;
    8060:	10 90       	R0 = [P2++];
    8062:	08 92       	[P1++] = R0;
    8064:	10 91       	R0 = [P2];
    8066:	08 93       	[P1] = R0;
    8068:	28 e1 57 14 	P0 = 0x1457 (X);		/*		P0=0x1457(5207) */
    806c:	56 32       	P2 = SP;
    806e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4a( 74) */
    8072:	05 5a       	P0 = P5 + P0;
    8074:	42 6d       	P2 += 0x28;		/* ( 40) */
    8076:	01 e1 cc 02 	R1.L = 0x2cc;		/* (716)	R1=0x2cc(716) */
    807a:	7b 60       	R3 = 0xf (X);		/*		R3=0xf( 15) */
    807c:	70 61       	R0 = 0x2e (X);		/*		R0=0x2e( 46) */
    807e:	81 68       	P1 = 0x10 (X);		/*		P1=0x10( 16) */
    8080:	b2 e0 12 10 	LSETUP(0x8084 <_AdvertiseInterface+0x15c>, 0x80a4 <_AdvertiseInterface+0x17c>) LC1 = P1;
    8084:	82 98       	R2 = B[P0--] (Z);
    8086:	da 55       	R7 = R2 & R3;
    8088:	f9 51       	R7 = R1 + R7;
    808a:	1f 32       	P3 = R7;
    808c:	22 4e       	R2 >>= 0x4;
    808e:	91 50       	R2 = R1 + R2;
    8090:	90 e6 01 00 	B[P2 + 0x1] = R0;
    8094:	90 e6 03 00 	B[P2 + 0x3] = R0;
    8098:	5f 99       	R7 = B[P3] (X);
    809a:	1a 32       	P3 = R2;
    809c:	17 9b       	B[P2] = R7;
    809e:	5a 99       	R2 = B[P3] (X);
    80a0:	92 e6 02 00 	B[P2 + 0x2] = R2;
    80a4:	22 6c       	P2 += 0x4;		/* (  4) */
    80a6:	4e 30       	R1 = SP;
    80a8:	22 e1 68 00 	R2 = 0x68 (X);		/*		R2=0x68(104) */
    80ac:	11 50       	R0 = R1 + R2;
    80ae:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x68(104) */
    80b2:	51 60       	R1 = 0xa (X);		/*		R1=0xa( 10) */
    80b4:	02 e1 cc 24 	R2.L = 0x24cc;		/* (9420)	R2=0x24cc <_CheckForSoonToExpireRecords>(9420) */
    80b8:	ff e3 a4 bf 	CALL 0x0 <_AddRecordToResponseList>;
    80bc:	2a e1 c0 0e 	P2 = 0xec0 (X);		/*		P2=0xec0(3776) */
    80c0:	95 5a       	P2 = P5 + P2;
    80c2:	4e 30       	R1 = SP;
    80c4:	42 30       	R0 = P2;
    80c6:	41 65       	R1 += 0x28;		/* ( 40) */
    80c8:	ff e3 9c bf 	CALL 0x0 <_AddRecordToResponseList>;
    80cc:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    80ce:	2a e1 e4 09 	P2 = 0x9e4 (X);		/*		P2=0x9e4(2532) */
    80d2:	14 5b       	P4 = P4 + P2;
    80d4:	a8 e6 9c 0d 	B[P5 + 0xd9c] = R0;
    80d8:	a8 e6 9e 0d 	B[P5 + 0xd9e] = R0;
    80dc:	71 a2       	R1 = [SP + 0x24];
    80de:	2c e7 87 02 	[P5 + 0xa1c] = P4;
    80e2:	06 30       	R0 = R6;
    80e4:	ff e3 98 fa 	CALL 0x7614 <_mDNS_Register_internal>;
    80e8:	06 30       	R0 = R6;
    80ea:	4f 30       	R1 = FP;
    80ec:	ff e3 94 fa 	CALL 0x7614 <_mDNS_Register_internal>;
    80f0:	e6 6d       	SP += 0x3c;		/* ( 60) */
    80f2:	c6 6d       	SP += 0x38;		/* ( 56) */
    80f4:	77 90       	FP = [SP++];
    80f6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    80f8:	a8 e6 d0 10 	B[P5 + 0x10d0] = R0;
    80fc:	27 01       	RETS = [SP++];
    80fe:	a3 05       	(R7:4, P5:3) = [SP++];
    8100:	10 00       	RTS;
	...

00008104 <_mDNS_StopQuery>:
_mDNS_StopQuery():
    8104:	68 05       	[--SP] = (R7:5);
    8106:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0x0 <_AddRecordToResponseList>(  0) */
    810a:	67 01       	[--SP] = RETS;
    810c:	29 30       	R5 = R1;
    810e:	06 e1 c8 03 	R6.L = 0x3c8;		/* (968)	R6=0x3c8(968) */
    8112:	a6 6f       	SP += -0xc;		/* (-12) */
    8114:	38 30       	R7 = R0;
    8116:	0e 30       	R1 = R6;
    8118:	ff e3 74 bf 	CALL 0x0 <_AddRecordToResponseList>;
    811c:	0d 30       	R1 = R5;
    811e:	07 30       	R0 = R7;
    8120:	ff e3 be e3 	CALL 0x489c <_mDNS_StopQuery_internal>;
    8124:	28 30       	R5 = R0;
    8126:	07 30       	R0 = R7;
    8128:	0e 30       	R1 = R6;
    812a:	ff e3 6b bf 	CALL 0x0 <_AddRecordToResponseList>;
    812e:	66 6c       	SP += 0xc;		/* ( 12) */
    8130:	05 30       	R0 = R5;
    8132:	27 01       	RETS = [SP++];
    8134:	28 05       	(R7:5) = [SP++];
    8136:	10 00       	RTS;

00008138 <_mDNS_StopQueryWithRemoves>:
_mDNS_StopQueryWithRemoves():
    8138:	f3 05       	[--SP] = (R7:6, P5:3);
    813a:	18 32       	P3 = R0;
    813c:	29 32       	P5 = R1;
    813e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xa( 10) */
    8142:	00 e8 04 00 	LINK 0x10;		/* (16) */
    8146:	01 e1 ac 03 	R1.L = 0x3ac;		/* (940)	R1=0x3ac(940) */
    814a:	ff e3 5b bf 	CALL 0x0 <_AddRecordToResponseList>;
    814e:	1c e5 4d 00 	P4 = [P3 + 0x134];
    8152:	04 20       	JUMP.S 0x815a <_mDNS_StopQueryWithRemoves+0x22>;
    8154:	6c 08       	CC = P4 == P5;
    8156:	04 1c       	IF CC JUMP 0x815e <_mDNS_StopQueryWithRemoves+0x26> (BP);
    8158:	64 91       	P4 = [P4];
    815a:	44 0c       	CC = P4 == 0x0;
    815c:	fc 17       	IF !CC JUMP 0x8154 <_mDNS_StopQueryWithRemoves+0x1c> (BP);
    815e:	43 30       	R0 = P3;
    8160:	4d 30       	R1 = P5;
    8162:	ff e3 9d e3 	CALL 0x489c <_mDNS_StopQuery_internal>;
    8166:	30 30       	R6 = R0;
    8168:	00 0c       	CC = R0 == 0x0;
    816a:	53 10       	IF !CC JUMP 0x8210 <_mDNS_StopQueryWithRemoves+0xd8>;
    816c:	44 0c       	CC = P4 == 0x0;
    816e:	51 14       	IF !CC JUMP 0x8210 <_mDNS_StopQueryWithRemoves+0xd8> (BP);
    8170:	2c e1 34 01 	P4 = 0x134 (X);		/*		P4=0x134(308) */
    8174:	25 5b       	P4 = P5 + P4;
    8176:	44 30       	R0 = P4;
    8178:	ff e3 44 bf 	CALL 0x0 <_AddRecordToResponseList>;
    817c:	41 e1 d5 20 	R1.H = 0x20d5;		/* (8405)	R1=0x20d503ac(550831020) */
    8180:	38 30       	R7 = R0;
    8182:	01 e1 39 6b 	R1.L = 0x6b39;		/* (27449)	R1=0x20d56b39(550857529) */
    8186:	ff e3 3d bf 	CALL 0x0 <_AddRecordToResponseList>;
    818a:	82 c6 d0 83 	R1 = R0 >> 0x6;
    818e:	6a a0       	R2 = [P5 + 0x4];
    8190:	20 e1 f3 01 	R0 = 0x1f3 (X);		/*		R0=0x1f3(499) */
    8194:	c1 40       	R1 *= R0;
    8196:	f4 bc       	[SP + 0xc] = P4;
    8198:	4f 52       	R1 = R7 - R1;
    819a:	43 30       	R0 = P3;
    819c:	ff e3 24 d1 	CALL 0x23e4 <_CacheGroupForName>;
    81a0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x9e4 */
    81a4:	38 32       	FP = R0;
    81a6:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    81aa:	10 91       	R0 = [P2];
    81ac:	00 0c       	CC = R0 == 0x0;
    81ae:	0e 1c       	IF CC JUMP 0x81ca <_mDNS_StopQueryWithRemoves+0x92> (BP);
    81b0:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    81b4:	ff e3 26 bf 	CALL 0x0 <_AddRecordToResponseList>;
    81b8:	f0 b0       	[SP + 0xc] = R0;
    81ba:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x6b39(27449) */
    81be:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    81c0:	01 e1 d8 24 	R1.L = 0x24d8;		/* (9432)	R1=0x24d8(9432) */
    81c4:	54 30       	R2 = P4;
    81c6:	ff e3 1d bf 	CALL 0x0 <_AddRecordToResponseList>;
    81ca:	47 0c       	CC = FP == 0x0;
    81cc:	03 1c       	IF CC JUMP 0x81d2 <_mDNS_StopQueryWithRemoves+0x9a> (BP);
    81ce:	bc ac       	P4 = [FP + 0x8];
    81d0:	1d 20       	JUMP.S 0x820a <_mDNS_StopQueryWithRemoves+0xd2>;
    81d2:	04 68       	P4 = 0x0 (X);		/*		P4=0x0(  0) */
    81d4:	1b 20       	JUMP.S 0x820a <_mDNS_StopQueryWithRemoves+0xd2>;
    81d6:	21 e1 f0 00 	R1 = 0xf0 (X);		/*		R1=0xf0(240) */
    81da:	a0 e4 04 00 	R0 = B[P4 + 0x4] (Z);
    81de:	08 08       	CC = R0 == R1;
    81e0:	12 18       	IF CC JUMP 0x8204 <_mDNS_StopQueryWithRemoves+0xcc>;
    81e2:	7c 30       	R7 = P4;
    81e4:	27 64       	R7 += 0x4;		/* (  4) */
    81e6:	07 30       	R0 = R7;
    81e8:	4d 30       	R1 = P5;
    81ea:	ff e3 0b bf 	CALL 0x0 <_AddRecordToResponseList>;
    81ee:	00 0c       	CC = R0 == 0x0;
    81f0:	0a 1c       	IF CC JUMP 0x8204 <_mDNS_StopQueryWithRemoves+0xcc> (BP);
    81f2:	2a e5 97 00 	P2 = [P5 + 0x25c];
    81f6:	42 0c       	CC = P2 == 0x0;
    81f8:	06 18       	IF CC JUMP 0x8204 <_mDNS_StopQueryWithRemoves+0xcc>;
    81fa:	f7 bc       	[SP + 0xc] = FP;
    81fc:	43 30       	R0 = P3;
    81fe:	4d 30       	R1 = P5;
    8200:	17 30       	R2 = R7;
    8202:	62 00       	CALL (P2);
    8204:	00 00       	NOP;
    8206:	64 91       	P4 = [P4];
    8208:	02 20       	JUMP.S 0x820c <_mDNS_StopQueryWithRemoves+0xd4>;
    820a:	07 68       	FP = 0x0 (X);		/*		FP=0x0(  0) */
    820c:	44 0c       	CC = P4 == 0x0;
    820e:	e4 17       	IF !CC JUMP 0x81d6 <_mDNS_StopQueryWithRemoves+0x9e> (BP);
    8210:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xf0(240) */
    8214:	43 30       	R0 = P3;
    8216:	01 e1 ac 03 	R1.L = 0x3ac;		/* (940)	R1=0x3ac(940) */
    821a:	ff e3 f3 be 	CALL 0x0 <_AddRecordToResponseList>;
    821e:	86 6c       	SP += 0x10;		/* ( 16) */
    8220:	77 90       	FP = [SP++];
    8222:	06 30       	R0 = R6;
    8224:	27 01       	RETS = [SP++];
    8226:	b3 05       	(R7:6, P5:3) = [SP++];
    8228:	10 00       	RTS;
	...

0000822c <_mDNS_Reconfirm>:
_mDNS_Reconfirm():
    822c:	f5 05       	[--SP] = (R7:6, P5:5);
    822e:	29 32       	P5 = R1;
    8230:	67 01       	[--SP] = RETS;
    8232:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3ac(940) */
    8236:	38 30       	R7 = R0;
    8238:	86 6f       	SP += -0x10;		/* (-16) */
    823a:	01 e1 9c 03 	R1.L = 0x39c;		/* (924)	R1=0x39c(924) */
    823e:	ff e3 e1 be 	CALL 0x0 <_AddRecordToResponseList>;
    8242:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    8246:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    824a:	10 91       	R0 = [P2];
    824c:	82 c6 10 84 	R2 = R0 << 0x2;
    8250:	82 50       	R2 = R2 + R0;
    8252:	07 30       	R0 = R7;
    8254:	4d 30       	R1 = P5;
    8256:	ff e3 5f d3 	CALL 0x2914 <_mDNS_Reconfirm_internal>;
    825a:	30 30       	R6 = R0;
    825c:	00 0c       	CC = R0 == 0x0;
    825e:	08 14       	IF !CC JUMP 0x826e <_mDNS_Reconfirm+0x42> (BP);
    8260:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    8262:	f0 b0       	[SP + 0xc] = R0;
    8264:	29 a2       	R1 = [P5 + 0x20];
    8266:	6a a1       	R2 = [P5 + 0x14];
    8268:	07 30       	R0 = R7;
    826a:	ff e3 b1 d3 	CALL 0x29cc <_ReconfirmAntecedents>;
    826e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x39c(924) */
    8272:	07 30       	R0 = R7;
    8274:	01 e1 9c 03 	R1.L = 0x39c;		/* (924)	R1=0x39c(924) */
    8278:	ff e3 c4 be 	CALL 0x0 <_AddRecordToResponseList>;
    827c:	86 6c       	SP += 0x10;		/* ( 16) */
    827e:	06 30       	R0 = R6;
    8280:	27 01       	RETS = [SP++];
    8282:	b5 05       	(R7:6, P5:5) = [SP++];
    8284:	10 00       	RTS;
	...

00008288 <_mDNS_ReconfirmByValue>:
_mDNS_ReconfirmByValue():
    8288:	f5 05       	[--SP] = (R7:6, P5:5);
    828a:	31 30       	R6 = R1;
    828c:	67 01       	[--SP] = RETS;
    828e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x39c(924) */
    8292:	86 6f       	SP += -0x10;		/* (-16) */
    8294:	38 30       	R7 = R0;
    8296:	01 e1 84 03 	R1.L = 0x384;		/* (900)	R1=0x384(900) */
    829a:	ff e3 b3 be 	CALL 0x0 <_AddRecordToResponseList>;
    829e:	07 30       	R0 = R7;
    82a0:	0e 30       	R1 = R6;
    82a2:	ff e3 c1 d0 	CALL 0x2424 <_FindIdenticalRecordInCache>;
    82a6:	28 32       	P5 = R0;
    82a8:	45 0c       	CC = P5 == 0x0;
    82aa:	18 18       	IF CC JUMP 0x82da <_mDNS_ReconfirmByValue+0x52>;
    82ac:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    82b0:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    82b4:	4d 30       	R1 = P5;
    82b6:	10 91       	R0 = [P2];
    82b8:	82 c6 10 84 	R2 = R0 << 0x2;
    82bc:	82 50       	R2 = R2 + R0;
    82be:	07 30       	R0 = R7;
    82c0:	ff e3 2a d3 	CALL 0x2914 <_mDNS_Reconfirm_internal>;
    82c4:	30 30       	R6 = R0;
    82c6:	00 0c       	CC = R0 == 0x0;
    82c8:	0c 14       	IF !CC JUMP 0x82e0 <_mDNS_ReconfirmByValue+0x58> (BP);
    82ca:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    82cc:	29 a2       	R1 = [P5 + 0x20];
    82ce:	6a a1       	R2 = [P5 + 0x14];
    82d0:	f0 b0       	[SP + 0xc] = R0;
    82d2:	07 30       	R0 = R7;
    82d4:	ff e3 7c d3 	CALL 0x29cc <_ReconfirmAntecedents>;
    82d8:	04 20       	JUMP.S 0x82e0 <_mDNS_ReconfirmByValue+0x58>;
    82da:	de 63       	R6 = -0x5 (X);		/*		R6=0xfffffffb( -5) */
    82dc:	46 e1 fe ff 	R6.H = 0xfffe;		/* ( -2)	R6=0xfffefffb(-65541) */
    82e0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x384(900) */
    82e4:	07 30       	R0 = R7;
    82e6:	01 e1 84 03 	R1.L = 0x384;		/* (900)	R1=0x384(900) */
    82ea:	ff e3 8b be 	CALL 0x0 <_AddRecordToResponseList>;
    82ee:	86 6c       	SP += 0x10;		/* ( 16) */
    82f0:	06 30       	R0 = R6;
    82f2:	27 01       	RETS = [SP++];
    82f4:	b5 05       	(R7:6, P5:5) = [SP++];
    82f6:	10 00       	RTS;

000082f8 <_mDNS_StopResolveService>:
_mDNS_StopResolveService():
    82f8:	fd 05       	[--SP] = (R7:7, P5:5);
    82fa:	29 32       	P5 = R1;
    82fc:	67 01       	[--SP] = RETS;
    82fe:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x384(900) */
    8302:	38 30       	R7 = R0;
    8304:	a6 6f       	SP += -0xc;		/* (-12) */
    8306:	01 e1 3c 03 	R1.L = 0x33c;		/* (828)	R1=0x33c(828) */
    830a:	ff e3 7b be 	CALL 0x0 <_AddRecordToResponseList>;
    830e:	28 a1       	R0 = [P5 + 0x10];
    8310:	80 0c       	CC = R0 < 0x0;
    8312:	05 18       	IF CC JUMP 0x831c <_mDNS_StopResolveService+0x24>;
    8314:	07 30       	R0 = R7;
    8316:	4d 30       	R1 = P5;
    8318:	ff e3 c2 e2 	CALL 0x489c <_mDNS_StopQuery_internal>;
    831c:	28 e4 9d 00 	R0 = [P5 + 0x274];
    8320:	80 0c       	CC = R0 < 0x0;
    8322:	08 18       	IF CC JUMP 0x8332 <_mDNS_StopResolveService+0x3a>;
    8324:	2a e1 64 02 	P2 = 0x264 (X);		/*		P2=0x264(612) */
    8328:	95 5a       	P2 = P5 + P2;
    832a:	4a 30       	R1 = P2;
    832c:	07 30       	R0 = R7;
    832e:	ff e3 b7 e2 	CALL 0x489c <_mDNS_StopQuery_internal>;
    8332:	28 e4 36 01 	R0 = [P5 + 0x4d8];
    8336:	80 0c       	CC = R0 < 0x0;
    8338:	08 18       	IF CC JUMP 0x8348 <_mDNS_StopResolveService+0x50>;
    833a:	2a e1 c8 04 	P2 = 0x4c8 (X);		/*		P2=0x4c8(1224) */
    833e:	95 5a       	P2 = P5 + P2;
    8340:	4a 30       	R1 = P2;
    8342:	07 30       	R0 = R7;
    8344:	ff e3 ac e2 	CALL 0x489c <_mDNS_StopQuery_internal>;
    8348:	28 e4 cf 01 	R0 = [P5 + 0x73c];
    834c:	80 0c       	CC = R0 < 0x0;
    834e:	08 18       	IF CC JUMP 0x835e <_mDNS_StopResolveService+0x66>;
    8350:	2a e1 2c 07 	P2 = 0x72c (X);		/*		P2=0x72c(1836) */
    8354:	95 5a       	P2 = P5 + P2;
    8356:	4a 30       	R1 = P2;
    8358:	07 30       	R0 = R7;
    835a:	ff e3 a1 e2 	CALL 0x489c <_mDNS_StopQuery_internal>;
    835e:	66 6c       	SP += 0xc;		/* ( 12) */
    8360:	27 01       	RETS = [SP++];
    8362:	07 30       	R0 = R7;
    8364:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x33c(828) */
    8368:	01 e1 3c 03 	R1.L = 0x33c;		/* (828)	R1=0x33c(828) */
    836c:	bd 05       	(R7:7, P5:5) = [SP++];
    836e:	ff e2 49 be 	JUMP.L 0x0 <_AddRecordToResponseList>;
	...

00008374 <_mDNS_Register>:
_mDNS_Register():
    8374:	68 05       	[--SP] = (R7:5);
    8376:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0xfffb(65531) */
    837a:	67 01       	[--SP] = RETS;
    837c:	29 30       	R5 = R1;
    837e:	06 e1 2c 03 	R6.L = 0x32c;		/* (812)	R6=0x32c(812) */
    8382:	a6 6f       	SP += -0xc;		/* (-12) */
    8384:	38 30       	R7 = R0;
    8386:	0e 30       	R1 = R6;
    8388:	ff e3 3c be 	CALL 0x0 <_AddRecordToResponseList>;
    838c:	0d 30       	R1 = R5;
    838e:	07 30       	R0 = R7;
    8390:	ff e3 42 f9 	CALL 0x7614 <_mDNS_Register_internal>;
    8394:	28 30       	R5 = R0;
    8396:	07 30       	R0 = R7;
    8398:	0e 30       	R1 = R6;
    839a:	ff e3 33 be 	CALL 0x0 <_AddRecordToResponseList>;
    839e:	66 6c       	SP += 0xc;		/* ( 12) */
    83a0:	05 30       	R0 = R5;
    83a2:	27 01       	RETS = [SP++];
    83a4:	28 05       	(R7:5) = [SP++];
    83a6:	10 00       	RTS;

000083a8 <_mDNS_Update>:
_mDNS_Update():
    83a8:	ec 05       	[--SP] = (R7:5, P5:4);
    83aa:	29 32       	P5 = R1;
    83ac:	67 01       	[--SP] = RETS;
    83ae:	66 6f       	SP += -0x14;		/* (-20) */
    83b0:	75 e5 1c 00 	R5 = W[SP + 0x38] (X);
    83b4:	f6 a3       	R6 = [SP + 0x3c];
    83b6:	20 32       	P4 = R0;
    83b8:	3a 30       	R7 = R2;
    83ba:	e8 a8       	R0 = W[P5 + 0x6] (X);
    83bc:	0d 30       	R1 = R5;
    83be:	16 30       	R2 = R6;
    83c0:	ff e3 20 be 	CALL 0x0 <_AddRecordToResponseList>;
    83c4:	00 0c       	CC = R0 == 0x0;
    83c6:	15 14       	IF !CC JUMP 0x83f0 <_mDNS_Update+0x48> (BP);
    83c8:	45 30       	R0 = P5;
    83ca:	0e 30       	R1 = R6;
    83cc:	54 30       	R2 = P4;
    83ce:	21 64       	R1 += 0x4;		/* (  4) */
    83d0:	ba 65       	R2 += 0x37;		/* ( 55) */
    83d2:	20 64       	R0 += 0x4;		/* (  4) */
    83d4:	ff e3 16 be 	CALL 0x0 <_AddRecordToResponseList>;
    83d8:	10 30       	R2 = R0;
    83da:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x33c(828) */
    83de:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    83e0:	01 e1 08 25 	R1.L = 0x2508;		/* (9480)	R1=0x2508(9480) */
    83e4:	9f 63       	R7 = -0xd (X);		/*		R7=0xfffffff3(-13) */
    83e6:	ff e3 0d be 	CALL 0x0 <_AddRecordToResponseList>;
    83ea:	47 e1 fe ff 	R7.H = 0xfffe;		/* ( -2)	R7=0xfffefff3(-65549) */
    83ee:	ec 20       	JUMP.S 0x85c6 <_mDNS_Update+0x21e>;
    83f0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2508(9480) */
    83f4:	44 30       	R0 = P4;
    83f6:	01 e1 20 03 	R1.L = 0x320;		/* (800)	R1=0x320(800) */
    83fa:	ff e3 03 be 	CALL 0x0 <_AddRecordToResponseList>;
    83fe:	07 0c       	CC = R7 == 0x0;
    8400:	02 14       	IF !CC JUMP 0x8404 <_mDNS_Update+0x5c> (BP);
    8402:	ef a0       	R7 = [P5 + 0xc];
    8404:	00 00       	NOP;
    8406:	2a e4 33 00 	R2 = [P5 + 0xcc];
    840a:	02 0c       	CC = R2 == 0x0;
    840c:	0e 1c       	IF CC JUMP 0x8428 <_mDNS_Update+0x80> (BP);
    840e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    8410:	28 e6 33 00 	[P5 + 0xcc] = R0;
    8414:	2a e5 35 00 	P2 = [P5 + 0xd4];
    8418:	42 0c       	CC = P2 == 0x0;
    841a:	07 1c       	IF CC JUMP 0x8428 <_mDNS_Update+0x80> (BP);
    841c:	4d 30       	R1 = P5;
    841e:	68 e5 68 00 	R0 = W[P5 + 0xd0] (X);
    8422:	b0 b5       	W[SP + 0xc] = R0;
    8424:	44 30       	R0 = P4;
    8426:	62 00       	CALL (P2);
    8428:	30 e4 10 00 	R0 = [SP + 0x40];
    842c:	28 e6 35 00 	[P5 + 0xd4] = R0;
    8430:	28 e4 20 00 	R0 = [P5 + 0x80];
    8434:	f0 67       	R0 += -0x2;		/* ( -2) */
    8436:	2e e6 33 00 	[P5 + 0xcc] = R6;
    843a:	6d e6 68 00 	W[P5 + 0xd0] = R5;
    843e:	08 0e       	CC = R0 <= 0x1 (IU);
    8440:	1a 1c       	IF CC JUMP 0x8474 <_mDNS_Update+0xcc> (BP);
    8442:	28 a2       	R0 = [P5 + 0x20];
    8444:	ff e3 de bd 	CALL 0x0 <_AddRecordToResponseList>;
    8448:	00 0c       	CC = R0 == 0x0;
    844a:	15 14       	IF !CC JUMP 0x8474 <_mDNS_Update+0xcc> (BP);
    844c:	44 30       	R0 = P4;
    844e:	4d 30       	R1 = P5;
    8450:	ff e3 d8 bd 	CALL 0x0 <_AddRecordToResponseList>;
    8454:	38 30       	R7 = R0;
    8456:	00 0c       	CC = R0 == 0x0;
    8458:	06 18       	IF CC JUMP 0x8464 <_mDNS_Update+0xbc>;
    845a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    845c:	28 e6 33 00 	[P5 + 0xcc] = R0;
    8460:	68 e6 68 00 	W[P5 + 0xd0] = R0;
    8464:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x320(800) */
    8468:	44 30       	R0 = P4;
    846a:	01 e1 20 03 	R1.L = 0x320;		/* (800)	R1=0x320(800) */
    846e:	ff e3 c9 bd 	CALL 0x0 <_AddRecordToResponseList>;
    8472:	aa 20       	JUMP.S 0x85c6 <_mDNS_Update+0x21e>;
    8474:	00 00       	NOP;
    8476:	28 e4 20 00 	R0 = [P5 + 0x80];
    847a:	f0 67       	R0 += -0x2;		/* ( -2) */
    847c:	08 0e       	CC = R0 <= 0x1 (IU);
    847e:	10 1c       	IF CC JUMP 0x849e <_mDNS_Update+0xf6> (BP);
    8480:	e8 a0       	R0 = [P5 + 0xc];
    8482:	38 08       	CC = R0 == R7;
    8484:	12 14       	IF !CC JUMP 0x84a8 <_mDNS_Update+0x100> (BP);
    8486:	2a a6       	R2 = W[P5 + 0x10] (Z);
    8488:	ed 42       	R5 = R5.L (Z);
    848a:	2a 08       	CC = R2 == R5;
    848c:	0e 14       	IF !CC JUMP 0x84a8 <_mDNS_Update+0x100> (BP);
    848e:	68 a2       	R0 = [P5 + 0x24];
    8490:	0e 30       	R1 = R6;
    8492:	20 64       	R0 += 0x4;		/* (  4) */
    8494:	21 64       	R1 += 0x4;		/* (  4) */
    8496:	ff e3 b5 bd 	CALL 0x0 <_AddRecordToResponseList>;
    849a:	00 0c       	CC = R0 == 0x0;
    849c:	06 1c       	IF CC JUMP 0x84a8 <_mDNS_Update+0x100> (BP);
    849e:	44 30       	R0 = P4;
    84a0:	4d 30       	R1 = P5;
    84a2:	ff e3 33 c3 	CALL 0xb08 <_CompleteRDataUpdate>;
    84a6:	88 20       	JUMP.S 0x85b6 <_mDNS_Update+0x20e>;
    84a8:	40 60       	R0 = 0x8 (X);		/*		R0=0x8(  8) */
    84aa:	a8 e6 86 00 	B[P5 + 0x86] = R0;
    84ae:	44 30       	R0 = P4;
    84b0:	4d 30       	R1 = P5;
    84b2:	ff e3 9f c0 	CALL 0x5f0 <_InitializeLastAPTime>;
    84b6:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x72c */
    84ba:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    84be:	32 60       	R2 = 0x6 (X);		/*		R2=0x6(  6) */
    84c0:	10 91       	R0 = [P2];
    84c2:	c2 40       	R2 *= R0;
    84c4:	0e 60       	R6 = 0x1 (X);		/*		R6=0x1(  1) */
    84c6:	03 60       	R3 = 0x0 (X);		/*		R3=0x0(  0) */
    84c8:	11 20       	JUMP.S 0x84ea <_mDNS_Update+0x142>;
    84ca:	4d 60       	R5 = 0x9 (X);		/*		R5=0x9(  9) */
    84cc:	29 e4 36 00 	R1 = [P5 + 0xd8];
    84d0:	09 64       	R1 += 0x1;		/* (  1) */
    84d2:	29 e6 36 00 	[P5 + 0xd8] = R1;
    84d6:	29 0a       	CC = R1 <= R5 (IU);
    84d8:	04 1c       	IF CC JUMP 0x84e0 <_mDNS_Update+0x138> (BP);
    84da:	2b e6 37 00 	[P5 + 0xdc] = R3;
    84de:	06 20       	JUMP.S 0x84ea <_mDNS_Update+0x142>;
    84e0:	02 50       	R0 = R2 + R0;
    84e2:	00 0c       	CC = R0 == 0x0;
    84e4:	06 07       	IF CC R0 = R6;
    84e6:	28 e6 37 00 	[P5 + 0xdc] = R0;
    84ea:	28 e4 37 00 	R0 = [P5 + 0xdc];
    84ee:	00 0c       	CC = R0 == 0x0;
    84f0:	06 1c       	IF CC JUMP 0x84fc <_mDNS_Update+0x154> (BP);
    84f2:	21 e4 37 00 	R1 = [P4 + 0xdc];
    84f6:	41 52       	R1 = R1 - R0;
    84f8:	81 0c       	CC = R1 < 0x0;
    84fa:	e8 17       	IF !CC JUMP 0x84ca <_mDNS_Update+0x122> (BP);
    84fc:	00 00       	NOP;
    84fe:	29 e4 38 00 	R1 = [P5 + 0xe0];
    8502:	01 0c       	CC = R1 == 0x0;
    8504:	08 14       	IF !CC JUMP 0x8514 <_mDNS_Update+0x16c> (BP);
    8506:	29 e4 36 00 	R1 = [P5 + 0xd8];
    850a:	01 0c       	CC = R1 == 0x0;
    850c:	04 1c       	IF CC JUMP 0x8514 <_mDNS_Update+0x16c> (BP);
    850e:	f9 67       	R1 += -0x1;		/* ( -1) */
    8510:	29 e6 36 00 	[P5 + 0xd8] = R1;
    8514:	00 0c       	CC = R0 == 0x0;
    8516:	10 14       	IF !CC JUMP 0x8536 <_mDNS_Update+0x18e> (BP);
    8518:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    851c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    8520:	11 91       	R1 = [P2];
    8522:	30 60       	R0 = 0x6 (X);		/*		R0=0x6(  6) */
    8524:	c8 40       	R0 *= R1;
    8526:	21 e4 37 00 	R1 = [P4 + 0xdc];
    852a:	08 50       	R0 = R0 + R1;
    852c:	00 0c       	CC = R0 == 0x0;
    852e:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    8530:	01 07       	IF CC R0 = R1;
    8532:	28 e6 37 00 	[P5 + 0xdc] = R0;
    8536:	00 00       	NOP;
    8538:	28 e4 36 00 	R0 = [P5 + 0xd8];
    853c:	08 30       	R1 = R0;
    853e:	aa e4 86 00 	R2 = B[P5 + 0x86] (Z);
    8542:	09 64       	R1 += 0x1;		/* (  1) */
    8544:	0a 0a       	CC = R2 <= R1 (IU);
    8546:	03 1c       	IF CC JUMP 0x854c <_mDNS_Update+0x1a4> (BP);
    8548:	a9 e6 86 00 	B[P5 + 0x86] = R1;
    854c:	28 0e       	CC = R0 <= 0x5 (IU);
    854e:	33 14       	IF !CC JUMP 0x85b4 <_mDNS_Update+0x20c> (BP);
    8550:	31 60       	R1 = 0x6 (X);		/*		R1=0x6(  6) */
    8552:	41 52       	R1 = R1 - R0;
    8554:	28 e4 38 00 	R0 = [P5 + 0xe0];
    8558:	00 0c       	CC = R0 == 0x0;
    855a:	0f 14       	IF !CC JUMP 0x8578 <_mDNS_Update+0x1d0> (BP);
    855c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    8560:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    8564:	10 91       	R0 = [P2];
    8566:	c8 40       	R0 *= R1;
    8568:	22 e4 37 00 	R2 = [P4 + 0xdc];
    856c:	10 50       	R0 = R0 + R2;
    856e:	00 0c       	CC = R0 == 0x0;
    8570:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
    8572:	02 07       	IF CC R0 = R2;
    8574:	28 e6 38 00 	[P5 + 0xe0] = R0;
    8578:	43 e1 00 00 	R3.H = 0x0;		/* (  0)	R3=0x0 <_AddRecordToResponseList>(  0) */
    857c:	28 e4 2f 00 	R0 = [P5 + 0xbc];
    8580:	10 4f       	R0 <<= 0x2;
    8582:	2a e4 38 00 	R2 = [P5 + 0xe0];
    8586:	28 e6 2f 00 	[P5 + 0xbc] = R0;
    858a:	02 52       	R0 = R2 - R0;
    858c:	28 e6 30 00 	[P5 + 0xc0] = R0;
    8590:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x6(  6) */
    8594:	09 0c       	CC = R1 == 0x1;
    8596:	00 e1 04 25 	R0.L = 0x2504;		/* (9476)	R0=0x2504(9476) */
    859a:	03 e1 44 12 	R3.L = 0x1244;		/* (4676)	R3=0x1244(4676) */
    859e:	03 07       	IF CC R0 = R3;
    85a0:	f1 b0       	[SP + 0xc] = R1;
    85a2:	30 b1       	[SP + 0x10] = R0;
    85a4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x6(  6) */
    85a8:	2a a2       	R2 = [P5 + 0x20];
    85aa:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    85ac:	01 e1 38 25 	R1.L = 0x2538;		/* (9528)	R1=0x2538(9528) */
    85b0:	ff e3 28 bd 	CALL 0x0 <_AddRecordToResponseList>;
    85b4:	ef b0       	[P5 + 0xc] = R7;
    85b6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2538(9528) */
    85ba:	44 30       	R0 = P4;
    85bc:	01 e1 20 03 	R1.L = 0x320;		/* (800)	R1=0x320(800) */
    85c0:	ff e3 20 bd 	CALL 0x0 <_AddRecordToResponseList>;
    85c4:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    85c6:	a6 6c       	SP += 0x14;		/* ( 20) */
    85c8:	07 30       	R0 = R7;
    85ca:	27 01       	RETS = [SP++];
    85cc:	ac 05       	(R7:5, P5:4) = [SP++];
    85ce:	10 00       	RTS;

000085d0 <_mDNS_Deregister>:
_mDNS_Deregister():
    85d0:	68 05       	[--SP] = (R7:5);
    85d2:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0x1(  1) */
    85d6:	67 01       	[--SP] = RETS;
    85d8:	29 30       	R5 = R1;
    85da:	06 e1 10 03 	R6.L = 0x310;		/* (784)	R6=0x310(784) */
    85de:	a6 6f       	SP += -0xc;		/* (-12) */
    85e0:	38 30       	R7 = R0;
    85e2:	0e 30       	R1 = R6;
    85e4:	ff e3 0e bd 	CALL 0x0 <_AddRecordToResponseList>;
    85e8:	0d 30       	R1 = R5;
    85ea:	07 30       	R0 = R7;
    85ec:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    85ee:	ff e3 07 e5 	CALL 0x4ffc <_mDNS_Deregister_internal>;
    85f2:	28 30       	R5 = R0;
    85f4:	07 30       	R0 = R7;
    85f6:	0e 30       	R1 = R6;
    85f8:	ff e3 04 bd 	CALL 0x0 <_AddRecordToResponseList>;
    85fc:	66 6c       	SP += 0xc;		/* ( 12) */
    85fe:	05 30       	R0 = R5;
    8600:	27 01       	RETS = [SP++];
    8602:	28 05       	(R7:5) = [SP++];
    8604:	10 00       	RTS;
	...

00008608 <_mDNS_SetFQDN>:
_mDNS_SetFQDN():
    8608:	fb 05       	[--SP] = (R7:7, P5:3);
    860a:	28 32       	P5 = R0;
    860c:	67 01       	[--SP] = RETS;
    860e:	29 e1 f4 fe 	P1 = -0x10c (X);		/*		P1=0xfffffef4(-268) */
    8612:	8e 5b       	SP = SP + P1;
    8614:	66 32       	P4 = SP;
    8616:	2a e1 14 19 	P2 = 0x1914 (X);		/*		P2=0x1914(6420) */
    861a:	95 5a       	P2 = P5 + P2;
    861c:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    861e:	64 6c       	P4 += 0xc;		/* ( 12) */
    8620:	b7 e6 0c 00 	B[SP + 0xc] = R7;
    8624:	4a 30       	R1 = P2;
    8626:	44 30       	R0 = P4;
    8628:	ff e3 ec bc 	CALL 0x0 <_AddRecordToResponseList>;
    862c:	00 0c       	CC = R0 == 0x0;
    862e:	0a 18       	IF CC JUMP 0x8642 <_mDNS_SetFQDN+0x3a>;
    8630:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x320(800) */
    8634:	44 30       	R0 = P4;
    8636:	01 e1 b8 25 	R1.L = 0x25b8;		/* (9656)	R1=0x25b8(9656) */
    863a:	ff e3 e3 bc 	CALL 0x0 <_AddRecordToResponseList>;
    863e:	00 0c       	CC = R0 == 0x0;
    8640:	08 14       	IF !CC JUMP 0x8650 <_mDNS_SetFQDN+0x48> (BP);
    8642:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_AddRecordToResponseList>(  0) */
    8646:	00 e1 80 25 	R0.L = 0x2580;		/* (9600)	R0=0x2580(9600) */
    864a:	ff e3 db bc 	CALL 0x0 <_AddRecordToResponseList>;
    864e:	72 20       	JUMP.S 0x8732 <_mDNS_SetFQDN+0x12a>;
    8650:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x25b8(9656) */
    8654:	45 30       	R0 = P5;
    8656:	01 e1 00 03 	R1.L = 0x300;		/* (768)	R1=0x300(768) */
    865a:	2b e1 54 19 	P3 = 0x1954 (X);		/*		P3=0x1954(6484) */
    865e:	ff e3 d1 bc 	CALL 0x0 <_AddRecordToResponseList>;
    8662:	dd 5a       	P3 = P5 + P3;
    8664:	43 30       	R0 = P3;
    8666:	4c 30       	R1 = P4;
    8668:	ff e3 cc bc 	CALL 0x0 <_AddRecordToResponseList>;
    866c:	00 0c       	CC = R0 == 0x0;
    866e:	08 1c       	IF CC JUMP 0x867e <_mDNS_SetFQDN+0x76> (BP);
    8670:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x2580(9600) */
    8674:	00 e1 c0 25 	R0.L = 0x25c0;		/* (9664)	R0=0x25c0(9664) */
    8678:	ff e3 c4 bc 	CALL 0x0 <_AddRecordToResponseList>;
    867c:	34 20       	JUMP.S 0x86e4 <_mDNS_SetFQDN+0xdc>;
    867e:	2a e1 0c 01 	P2 = 0x10c (X);		/*		P2=0x10c(268) */
    8682:	b2 5a       	P2 = P2 + SP;
    8684:	44 30       	R0 = P4;
    8686:	4a 30       	R1 = P2;
    8688:	ff e3 bc bc 	CALL 0x0 <_AddRecordToResponseList>;
    868c:	c2 42       	R2 = R0.L (Z);
    868e:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    8692:	02 0a       	CC = R2 <= R0 (IU);
    8694:	06 14       	IF !CC JUMP 0x86a0 <_mDNS_SetFQDN+0x98> (BP);
    8696:	43 30       	R0 = P3;
    8698:	4c 30       	R1 = P4;
    869a:	ff e3 b3 bc 	CALL 0x0 <_AddRecordToResponseList>;
    869e:	03 20       	JUMP.S 0x86a4 <_mDNS_SetFQDN+0x9c>;
    86a0:	af e6 54 19 	B[P5 + 0x1954] = R7;
    86a4:	2c e5 f7 07 	P4 = [P5 + 0x1fdc];
    86a8:	0c 20       	JUMP.S 0x86c0 <_mDNS_SetFQDN+0xb8>;
    86aa:	00 00       	NOP;
    86ac:	a0 e4 b4 14 	R0 = B[P4 + 0x14b4] (Z);
    86b0:	00 0c       	CC = R0 == 0x0;
    86b2:	05 1c       	IF CC JUMP 0x86bc <_mDNS_SetFQDN+0xb4> (BP);
    86b4:	45 30       	R0 = P5;
    86b6:	4c 30       	R1 = P4;
    86b8:	ff e3 ca e7 	CALL 0x564c <_DeadvertiseInterface>;
    86bc:	00 00       	NOP;
    86be:	64 91       	P4 = [P4];
    86c0:	44 0c       	CC = P4 == 0x0;
    86c2:	f4 17       	IF !CC JUMP 0x86aa <_mDNS_SetFQDN+0xa2> (BP);
    86c4:	2c e5 f7 07 	P4 = [P5 + 0x1fdc];
    86c8:	0c 20       	JUMP.S 0x86e0 <_mDNS_SetFQDN+0xd8>;
    86ca:	00 00       	NOP;
    86cc:	a0 e4 b4 14 	R0 = B[P4 + 0x14b4] (Z);
    86d0:	00 0c       	CC = R0 == 0x0;
    86d2:	05 1c       	IF CC JUMP 0x86dc <_mDNS_SetFQDN+0xd4> (BP);
    86d4:	45 30       	R0 = P5;
    86d6:	4c 30       	R1 = P4;
    86d8:	ff e3 28 fc 	CALL 0x7f28 <_AdvertiseInterface>;
    86dc:	00 00       	NOP;
    86de:	64 91       	P4 = [P4];
    86e0:	44 0c       	CC = P4 == 0x0;
    86e2:	f4 17       	IF !CC JUMP 0x86ca <_mDNS_SetFQDN+0xc2> (BP);
    86e4:	2c e5 f2 07 	P4 = [P5 + 0x1fc8];
    86e8:	0c 20       	JUMP.S 0x8700 <_mDNS_SetFQDN+0xf8>;
    86ea:	00 00       	NOP;
    86ec:	a0 e4 44 00 	R0 = B[P4 + 0x44] (Z);
    86f0:	00 0c       	CC = R0 == 0x0;
    86f2:	05 1c       	IF CC JUMP 0x86fc <_mDNS_SetFQDN+0xf4> (BP);
    86f4:	45 30       	R0 = P5;
    86f6:	4c 30       	R1 = P4;
    86f8:	ff e3 7c c3 	CALL 0xdf0 <_SetTargetToHostName>;
    86fc:	00 00       	NOP;
    86fe:	64 91       	P4 = [P4];
    8700:	44 0c       	CC = P4 == 0x0;
    8702:	f4 17       	IF !CC JUMP 0x86ea <_mDNS_SetFQDN+0xe2> (BP);
    8704:	2c e5 f3 07 	P4 = [P5 + 0x1fcc];
    8708:	0c 20       	JUMP.S 0x8720 <_mDNS_SetFQDN+0x118>;
    870a:	00 00       	NOP;
    870c:	a0 e4 44 00 	R0 = B[P4 + 0x44] (Z);
    8710:	00 0c       	CC = R0 == 0x0;
    8712:	05 1c       	IF CC JUMP 0x871c <_mDNS_SetFQDN+0x114> (BP);
    8714:	45 30       	R0 = P5;
    8716:	4c 30       	R1 = P4;
    8718:	ff e3 6c c3 	CALL 0xdf0 <_SetTargetToHostName>;
    871c:	00 00       	NOP;
    871e:	64 91       	P4 = [P4];
    8720:	44 0c       	CC = P4 == 0x0;
    8722:	f4 17       	IF !CC JUMP 0x870a <_mDNS_SetFQDN+0x102> (BP);
    8724:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x300(768) */
    8728:	45 30       	R0 = P5;
    872a:	01 e1 00 03 	R1.L = 0x300;		/* (768)	R1=0x300(768) */
    872e:	ff e3 69 bc 	CALL 0x0 <_AddRecordToResponseList>;
    8732:	29 e1 0c 01 	P1 = 0x10c (X);		/*		P1=0x10c(268) */
    8736:	8e 5b       	SP = SP + P1;
    8738:	27 01       	RETS = [SP++];
    873a:	bb 05       	(R7:7, P5:3) = [SP++];
    873c:	10 00       	RTS;
	...

00008740 <_mDNS_HostNameCallback>:
_mDNS_HostNameCallback():
    8740:	c4 04       	[--SP] = (P5:4);
    8742:	67 01       	[--SP] = RETS;
    8744:	26 6e       	SP += -0x3c;		/* (-60) */
    8746:	66 6f       	SP += -0x14;		/* (-20) */
    8748:	28 32       	P5 = R0;
    874a:	11 32       	P2 = R1;
    874c:	02 0c       	CC = R2 == 0x0;
    874e:	07 14       	IF !CC JUMP 0x875c <_mDNS_HostNameCallback+0x1c> (BP);
    8750:	6a ae       	P2 = [P5 + 0x24];
    8752:	42 0c       	CC = P2 == 0x0;
    8754:	43 1c       	IF CC JUMP 0x87da <_mDNS_HostNameCallback+0x9a> (BP);
    8756:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    8758:	62 00       	CALL (P2);
    875a:	40 20       	JUMP.S 0x87da <_mDNS_HostNameCallback+0x9a>;
    875c:	20 e1 fd bf 	R0 = -0x4003 (X);		/*		R0=0xffffbffd(-16387) */
    8760:	10 4f       	R0 <<= 0x2;
    8762:	02 08       	CC = R2 == R0;
    8764:	2d 14       	IF !CC JUMP 0x87be <_mDNS_HostNameCallback+0x7e> (BP);
    8766:	2a e1 14 19 	P2 = 0x1914 (X);		/*		P2=0x1914(6420) */
    876a:	95 5a       	P2 = P5 + P2;
    876c:	46 30       	R0 = SP;
    876e:	4a 30       	R1 = P2;
    8770:	80 64       	R0 += 0x10;		/* ( 16) */
    8772:	22 e1 40 00 	R2 = 0x40 (X);		/*		R2=0x40( 64) */
    8776:	ff e3 45 bc 	CALL 0x0 <_AddRecordToResponseList>;
    877a:	6a ae       	P2 = [P5 + 0x24];
    877c:	42 0c       	CC = P2 == 0x0;
    877e:	06 18       	IF CC JUMP 0x878a <_mDNS_HostNameCallback+0x4a>;
    8780:	21 e1 fd bf 	R1 = -0x4003 (X);		/*		R1=0xffffbffd(-16387) */
    8784:	45 30       	R0 = P5;
    8786:	11 4f       	R1 <<= 0x2;
    8788:	62 00       	CALL (P2);
    878a:	2c e1 14 19 	P4 = 0x1914 (X);		/*		P4=0x1914(6420) */
    878e:	25 5b       	P4 = P5 + P4;
    8790:	4e 30       	R1 = SP;
    8792:	44 30       	R0 = P4;
    8794:	81 64       	R1 += 0x10;		/* ( 16) */
    8796:	ff e3 35 bc 	CALL 0x0 <_AddRecordToResponseList>;
    879a:	00 0c       	CC = R0 == 0x0;
    879c:	05 1c       	IF CC JUMP 0x87a6 <_mDNS_HostNameCallback+0x66> (BP);
    879e:	44 30       	R0 = P4;
    87a0:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    87a2:	ff e3 2f bc 	CALL 0x0 <_AddRecordToResponseList>;
    87a6:	45 30       	R0 = P5;
    87a8:	ff e3 30 ff 	CALL 0x8608 <_mDNS_SetFQDN>;
    87ac:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    87b0:	56 30       	R2 = SP;
    87b2:	f4 bc       	[SP + 0xc] = P4;
    87b4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    87b6:	01 e1 e4 25 	R1.L = 0x25e4;		/* (9700)	R1=0x25e4(9700) */
    87ba:	82 64       	R2 += 0x10;		/* ( 16) */
    87bc:	0d 20       	JUMP.S 0x87d6 <_mDNS_HostNameCallback+0x96>;
    87be:	20 e1 ff fe 	R0 = -0x101 (X);		/*		R0=0xfffffeff(-257) */
    87c2:	40 4f       	R0 <<= 0x8;
    87c4:	02 08       	CC = R2 == R0;
    87c6:	0a 1c       	IF CC JUMP 0x87da <_mDNS_HostNameCallback+0x9a> (BP);
    87c8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x25e4(9700) */
    87cc:	01 e1 28 26 	R1.L = 0x2628;		/* (9768)	R1=0x2628(9768) */
    87d0:	10 a2       	R0 = [P2 + 0x20];
    87d2:	f0 b0       	[SP + 0xc] = R0;
    87d4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    87d6:	ff e3 15 bc 	CALL 0x0 <_AddRecordToResponseList>;
    87da:	e6 6d       	SP += 0x3c;		/* ( 60) */
    87dc:	a6 6c       	SP += 0x14;		/* ( 20) */
    87de:	27 01       	RETS = [SP++];
    87e0:	84 04       	(P5:4) = [SP++];
    87e2:	10 00       	RTS;

000087e4 <_mDNS_DeactivateNetWake_internal>:
_mDNS_DeactivateNetWake_internal():
    87e4:	e3 05       	[--SP] = (R7:4, P5:3);
    87e6:	20 32       	P4 = R0;
    87e8:	67 01       	[--SP] = RETS;
    87ea:	66 6f       	SP += -0x14;		/* (-20) */
    87ec:	29 32       	P5 = R1;
    87ee:	22 e5 f7 07 	P2 = [P4 + 0x1fdc];
    87f2:	03 20       	JUMP.S 0x87f8 <_mDNS_DeactivateNetWake_internal+0x14>;
    87f4:	00 00       	NOP;
    87f6:	52 91       	P2 = [P2];
    87f8:	42 0c       	CC = P2 == 0x0;
    87fa:	07 18       	IF CC JUMP 0x8808 <_mDNS_DeactivateNetWake_internal+0x24>;
    87fc:	6a 08       	CC = P2 == P5;
    87fe:	fb 17       	IF !CC JUMP 0x87f4 <_mDNS_DeactivateNetWake_internal+0x10> (BP);
    8800:	a8 a1       	R0 = [P5 + 0x18];
    8802:	80 0c       	CC = R0 < 0x0;
    8804:	0d 14       	IF !CC JUMP 0x881e <_mDNS_DeactivateNetWake_internal+0x3a> (BP);
    8806:	8b 20       	JUMP.S 0x891c <_mDNS_DeactivateNetWake_internal+0x138>;
    8808:	a6 6c       	SP += 0x14;		/* ( 20) */
    880a:	27 01       	RETS = [SP++];
    880c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2628(9768) */
    8810:	55 30       	R2 = P5;
    8812:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    8814:	01 e1 70 26 	R1.L = 0x2670;		/* (9840)	R1=0x2670(9840) */
    8818:	a3 05       	(R7:4, P5:3) = [SP++];
    881a:	ff e2 f3 bb 	JUMP.L 0x0 <_AddRecordToResponseList>;
    881e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x1914 */
    8822:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    8826:	10 91       	R0 = [P2];
    8828:	00 0c       	CC = R0 == 0x0;
    882a:	10 1c       	IF CC JUMP 0x884a <_mDNS_DeactivateNetWake_internal+0x66> (BP);
    882c:	2a e1 74 14 	P2 = 0x1474 (X);		/*		P2=0x1474(5236) */
    8830:	95 5a       	P2 = P5 + P2;
    8832:	52 30       	R2 = P2;
    8834:	2a e1 44 14 	P2 = 0x1444 (X);		/*		P2=0x1444(5188) */
    8838:	95 5a       	P2 = P5 + P2;
    883a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2670(9840) */
    883e:	f2 bc       	[SP + 0xc] = P2;
    8840:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    8842:	01 e1 c4 26 	R1.L = 0x26c4;		/* (9924)	R1=0x26c4(9924) */
    8846:	ff e3 dd bb 	CALL 0x0 <_AddRecordToResponseList>;
    884a:	6d 30       	R5 = P5;
    884c:	45 64       	R5 += 0x8;		/* (  8) */
    884e:	44 30       	R0 = P4;
    8850:	0d 30       	R1 = R5;
    8852:	ff e3 25 e0 	CALL 0x489c <_mDNS_StopQuery_internal>;
    8856:	5d 32       	P3 = P5;
    8858:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    885a:	26 e1 64 02 	R6 = 0x264 (X);		/*		R6=0x264(612) */
    885e:	24 e1 6c 02 	R4 = 0x26c (X);		/*		R4=0x26c(620) */
    8862:	00 00       	NOP;
    8864:	18 e4 9f 00 	R0 = [P3 + 0x27c];
    8868:	80 0c       	CC = R0 < 0x0;
    886a:	0c 18       	IF CC JUMP 0x8882 <_mDNS_DeactivateNetWake_internal+0x9e>;
    886c:	07 30       	R0 = R7;
    886e:	f0 40       	R0 *= R6;
    8870:	24 34       	M0 = R4;
    8872:	00 34       	I0 = R0;
    8874:	45 30       	R0 = P5;
    8876:	60 9e       	I0 += M0;
    8878:	90 30       	R2 = I0;
    887a:	50 50       	R1 = R0 + R2;
    887c:	44 30       	R0 = P4;
    887e:	ff e3 0f e0 	CALL 0x489c <_mDNS_StopQuery_internal>;
    8882:	16 32       	P2 = R6;
    8884:	0f 64       	R7 += 0x1;		/* (  1) */
    8886:	1f 0c       	CC = R7 == 0x3;
    8888:	d3 5a       	P3 = P3 + P2;
    888a:	ec 17       	IF !CC JUMP 0x8862 <_mDNS_DeactivateNetWake_internal+0x7e> (BP);
    888c:	20 e4 a3 0d 	R0 = [P4 + 0x368c];
    8890:	00 0c       	CC = R0 == 0x0;
    8892:	30 1c       	IF CC JUMP 0x88f2 <_mDNS_DeactivateNetWake_internal+0x10e> (BP);
    8894:	20 a3       	R0 = [P4 + 0x30];
    8896:	08 64       	R0 += 0x1;		/* (  1) */
    8898:	e1 a2       	R1 = [P4 + 0x2c];
    889a:	20 b3       	[P4 + 0x30] = R0;
    889c:	01 08       	CC = R1 == R0;
    889e:	0e 18       	IF CC JUMP 0x88ba <_mDNS_DeactivateNetWake_internal+0xd6>;
    88a0:	f1 b0       	[SP + 0xc] = R1;
    88a2:	30 b1       	[SP + 0x10] = R0;
    88a4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x26c4(9924) */
    88a8:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x40( 64) */
    88ac:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    88ae:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    88b2:	02 e1 e0 02 	R2.L = 0x2e0;		/* (736)	R2=0x2e0(736) */
    88b6:	ff e3 a5 bb 	CALL 0x0 <_AddRecordToResponseList>;
    88ba:	22 e5 a3 0d 	P2 = [P4 + 0x368c];
    88be:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    88c0:	f0 b0       	[SP + 0xc] = R0;
    88c2:	44 30       	R0 = P4;
    88c4:	0d 30       	R1 = R5;
    88c6:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    88c8:	62 00       	CALL (P2);
    88ca:	e1 a2       	R1 = [P4 + 0x2c];
    88cc:	20 a3       	R0 = [P4 + 0x30];
    88ce:	01 08       	CC = R1 == R0;
    88d0:	0e 18       	IF CC JUMP 0x88ec <_mDNS_DeactivateNetWake_internal+0x108>;
    88d2:	f1 b0       	[SP + 0xc] = R1;
    88d4:	30 b1       	[SP + 0x10] = R0;
    88d6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    88da:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    88de:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    88e0:	01 e1 40 00 	R1.L = 0x40;		/* ( 64)	R1=0x40( 64) */
    88e4:	02 e1 e0 02 	R2.L = 0x2e0;		/* (736)	R2=0x2e0(736) */
    88e8:	ff e3 8c bb 	CALL 0x0 <_AddRecordToResponseList>;
    88ec:	20 a3       	R0 = [P4 + 0x30];
    88ee:	f8 67       	R0 += -0x1;		/* ( -1) */
    88f0:	20 b3       	[P4 + 0x30] = R0;
    88f2:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
    88f4:	a8 b1       	[P5 + 0x18] = R0;
    88f6:	28 e6 9f 00 	[P5 + 0x27c] = R0;
    88fa:	28 e6 38 01 	[P5 + 0x4e0] = R0;
    88fe:	28 e6 d1 01 	[P5 + 0x744] = R0;
    8902:	28 e6 77 02 	[P5 + 0x9dc] = R0;
    8906:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    8908:	20 e4 37 00 	R0 = [P4 + 0xdc];
    890c:	29 e6 66 02 	[P5 + 0x998] = R1;
    8910:	29 e6 6b 02 	[P5 + 0x9ac] = R1;
    8914:	29 e6 70 02 	[P5 + 0x9c0] = R1;
    8918:	28 e6 78 02 	[P5 + 0x9e0] = R0;
    891c:	a6 6c       	SP += 0x14;		/* ( 20) */
    891e:	27 01       	RETS = [SP++];
    8920:	a3 05       	(R7:4, P5:3) = [SP++];
    8922:	10 00       	RTS;

00008924 <_mDNS_AddRecordToService>:
_mDNS_AddRecordToService():
    8924:	f3 05       	[--SP] = (R7:6, P5:3);
    8926:	29 32       	P5 = R1;
    8928:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x1444 */
    892c:	67 01       	[--SP] = RETS;
    892e:	30 30       	R6 = R0;
    8930:	22 32       	P4 = R2;
    8932:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    8936:	2a e4 ea 00 	R2 = [P5 + 0x3a8];
    893a:	10 91       	R0 = [P2];
    893c:	e6 6e       	SP += -0x24;		/* (-36) */
    893e:	02 08       	CC = R2 == R0;
    8940:	0e 18       	IF CC JUMP 0x895c <_mDNS_AddRecordToService+0x38>;
    8942:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    8946:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    894a:	10 91       	R0 = [P2];
    894c:	02 08       	CC = R2 == R0;
    894e:	09 14       	IF !CC JUMP 0x8960 <_mDNS_AddRecordToService+0x3c> (BP);
    8950:	30 e4 14 00 	R0 = [SP + 0x50];
    8954:	00 0c       	CC = R0 == 0x0;
    8956:	00 02       	R0 = CC;
    8958:	00 4b       	BITTGL (R0, 0x0);		/* bit  0 */
    895a:	04 20       	JUMP.S 0x8962 <_mDNS_AddRecordToService+0x3e>;
    895c:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    895e:	02 20       	JUMP.S 0x8962 <_mDNS_AddRecordToService+0x3e>;
    8960:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    8962:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    8964:	21 93       	[P4] = R1;
    8966:	e1 a9       	R1 = W[P4 + 0xe] (X);
    8968:	b1 b5       	W[SP + 0xc] = R1;
    896a:	31 e4 13 00 	R1 = [SP + 0x4c];
    896e:	b0 b1       	[SP + 0x18] = R0;
    8970:	31 b1       	[SP + 0x10] = R1;
    8972:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_AddRecordToResponseList>(  0) */
    8976:	11 60       	R1 = 0x2 (X);		/*		R1=0x2(  2) */
    8978:	00 e1 84 8b 	R0.L = 0x8b84;		/* (-29820)	R0=0x8b84 <_ServiceCallback>(35716) */
    897c:	7c 30       	R7 = P4;
    897e:	b1 e6 14 00 	B[SP + 0x14] = R1;
    8982:	f0 b1       	[SP + 0x1c] = R0;
    8984:	47 64       	R7 += 0x8;		/* (  8) */
    8986:	07 30       	R0 = R7;
    8988:	31 e4 12 00 	R1 = [SP + 0x48];
    898c:	35 be       	[SP + 0x20] = P5;
    898e:	ff e3 39 bb 	CALL 0x0 <_AddRecordToResponseList>;
    8992:	28 e4 c8 01 	R0 = [P5 + 0x720];
    8996:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    899a:	48 50       	R1 = R0 + R1;
    899c:	ff e3 32 bb 	CALL 0x0 <_AddRecordToResponseList>;
    89a0:	c2 42       	R2 = R0.L (Z);
    89a2:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    89a6:	02 0a       	CC = R2 <= R0 (IU);
    89a8:	0a 14       	IF !CC JUMP 0x89bc <_mDNS_AddRecordToService+0x98> (BP);
    89aa:	2a e1 70 01 	P2 = 0x170 (X);		/*		P2=0x170(368) */
    89ae:	94 5a       	P2 = P4 + P2;
    89b0:	42 30       	R0 = P2;
    89b2:	29 e4 c8 01 	R1 = [P5 + 0x720];
    89b6:	ff e3 25 bb 	CALL 0x0 <_AddRecordToResponseList>;
    89ba:	04 20       	JUMP.S 0x89c2 <_mDNS_AddRecordToService+0x9e>;
    89bc:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    89be:	a0 e6 70 01 	B[P4 + 0x170] = R0;
    89c2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x100(256) */
    89c6:	06 30       	R0 = R6;
    89c8:	01 e1 68 02 	R1.L = 0x268;		/* (616)	R1=0x268(616) */
    89cc:	ff e3 1a bb 	CALL 0x0 <_AddRecordToResponseList>;
    89d0:	5d 32       	P3 = P5;
    89d2:	63 6c       	P3 += 0xc;		/* ( 12) */
    89d4:	ea ac       	P2 = [P5 + 0xc];
    89d6:	03 20       	JUMP.S 0x89dc <_mDNS_AddRecordToService+0xb8>;
    89d8:	5a 32       	P3 = P2;
    89da:	52 91       	P2 = [P2];
    89dc:	42 0c       	CC = P2 == 0x0;
    89de:	fd 17       	IF !CC JUMP 0x89d8 <_mDNS_AddRecordToService+0xb4> (BP);
    89e0:	2a e1 00 07 	P2 = 0x700 (X);		/*		P2=0x700(1792) */
    89e4:	55 5b       	P5 = P5 + P2;
    89e6:	0f 30       	R1 = R7;
    89e8:	e5 bf       	[P4 + 0x3c] = P5;
    89ea:	06 30       	R0 = R6;
    89ec:	ff e3 14 f6 	CALL 0x7614 <_mDNS_Register_internal>;
    89f0:	38 30       	R7 = R0;
    89f2:	00 0c       	CC = R0 == 0x0;
    89f4:	02 10       	IF !CC JUMP 0x89f8 <_mDNS_AddRecordToService+0xd4>;
    89f6:	5c 93       	[P3] = P4;
    89f8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x268(616) */
    89fc:	06 30       	R0 = R6;
    89fe:	01 e1 68 02 	R1.L = 0x268;		/* (616)	R1=0x268(616) */
    8a02:	ff e3 ff ba 	CALL 0x0 <_AddRecordToResponseList>;
    8a06:	26 6d       	SP += 0x24;		/* ( 36) */
    8a08:	07 30       	R0 = R7;
    8a0a:	27 01       	RETS = [SP++];
    8a0c:	b3 05       	(R7:6, P5:3) = [SP++];
    8a0e:	10 00       	RTS;

00008a10 <_mDNS_RemoveRecordFromService>:
_mDNS_RemoveRecordFromService():
    8a10:	fc 05       	[--SP] = (R7:7, P5:4);
    8a12:	21 32       	P4 = R1;
    8a14:	67 01       	[--SP] = RETS;
    8a16:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x268(616) */
    8a1a:	a6 6f       	SP += -0xc;		/* (-12) */
    8a1c:	38 30       	R7 = R0;
    8a1e:	2a 32       	P5 = R2;
    8a20:	01 e1 48 02 	R1.L = 0x248;		/* (584)	R1=0x248(584) */
    8a24:	ff e3 ee ba 	CALL 0x0 <_AddRecordToResponseList>;
    8a28:	4c 32       	P1 = P4;
    8a2a:	61 6c       	P1 += 0xc;		/* ( 12) */
    8a2c:	e2 ac       	P2 = [P4 + 0xc];
    8a2e:	03 20       	JUMP.S 0x8a34 <_mDNS_RemoveRecordFromService+0x24>;
    8a30:	4a 32       	P1 = P2;
    8a32:	52 91       	P2 = [P2];
    8a34:	42 0c       	CC = P2 == 0x0;
    8a36:	14 18       	IF CC JUMP 0x8a5e <_mDNS_RemoveRecordFromService+0x4e>;
    8a38:	6a 08       	CC = P2 == P5;
    8a3a:	fb 17       	IF !CC JUMP 0x8a30 <_mDNS_RemoveRecordFromService+0x20> (BP);
    8a3c:	b0 a2       	R0 = [SP + 0x28];
    8a3e:	4a 91       	P2 = [P1];
    8a40:	28 e6 11 00 	[P5 + 0x44] = R0;
    8a44:	f0 a2       	R0 = [SP + 0x2c];
    8a46:	28 e6 12 00 	[P5 + 0x48] = R0;
    8a4a:	10 91       	R0 = [P2];
    8a4c:	08 93       	[P1] = R0;
    8a4e:	4d 30       	R1 = P5;
    8a50:	41 64       	R1 += 0x8;		/* (  8) */
    8a52:	07 30       	R0 = R7;
    8a54:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    8a56:	ff e3 d3 e2 	CALL 0x4ffc <_mDNS_Deregister_internal>;
    8a5a:	28 32       	P5 = R0;
    8a5c:	05 20       	JUMP.S 0x8a66 <_mDNS_RemoveRecordFromService+0x56>;
    8a5e:	4d e1 fe ff 	P5.H = 0xfffe;		/* ( -2)	P5=0xfffe0000(-131072) */
    8a62:	0d e1 fb ff 	P5.L = 0xfffb;		/* ( -5)	P5=0xfffefffb(-65541) */
    8a66:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x248(584) */
    8a6a:	07 30       	R0 = R7;
    8a6c:	01 e1 48 02 	R1.L = 0x248;		/* (584)	R1=0x248(584) */
    8a70:	ff e3 c8 ba 	CALL 0x0 <_AddRecordToResponseList>;
    8a74:	66 6c       	SP += 0xc;		/* ( 12) */
    8a76:	45 30       	R0 = P5;
    8a78:	27 01       	RETS = [SP++];
    8a7a:	bc 05       	(R7:7, P5:4) = [SP++];
    8a7c:	10 00       	RTS;
	...

00008a80 <_mDNS_DeregisterService_drt>:
_mDNS_DeregisterService_drt():
    8a80:	e4 05       	[--SP] = (R7:4, P5:4);
    8a82:	29 32       	P5 = R1;
    8a84:	67 01       	[--SP] = RETS;
    8a86:	38 30       	R7 = R0;
    8a88:	a6 6f       	SP += -0xc;		/* (-12) */
    8a8a:	2a 30       	R5 = R2;
    8a8c:	2a e5 c9 01 	P2 = [P5 + 0x724];
    8a90:	10 a5       	R0 = W[P2 + 0x8] (Z);
    8a92:	00 0c       	CC = R0 == 0x0;
    8a94:	0b 10       	IF !CC JUMP 0x8aaa <_mDNS_DeregisterService_drt+0x2a>;
    8a96:	66 6c       	SP += 0xc;		/* ( 12) */
    8a98:	2a e1 00 07 	P2 = 0x700 (X);		/*		P2=0x700(1792) */
    8a9c:	95 5a       	P2 = P5 + P2;
    8a9e:	27 01       	RETS = [SP++];
    8aa0:	07 30       	R0 = R7;
    8aa2:	4a 30       	R1 = P2;
    8aa4:	a4 05       	(R7:4, P5:4) = [SP++];
    8aa6:	ff e2 95 fd 	JUMP.L 0x85d0 <_mDNS_Deregister>;
    8aaa:	a8 e4 90 03 	R0 = B[P5 + 0x390] (Z);
    8aae:	00 0c       	CC = R0 == 0x0;
    8ab0:	60 18       	IF CC JUMP 0x8b70 <_mDNS_DeregisterService_drt+0xf0>;
    8ab2:	08 0c       	CC = R0 == 0x1;
    8ab4:	15 14       	IF !CC JUMP 0x8ade <_mDNS_DeregisterService_drt+0x5e> (BP);
    8ab6:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x700 */
    8aba:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    8abe:	10 91       	R0 = [P2];
    8ac0:	00 0c       	CC = R0 == 0x0;
    8ac2:	0a 1c       	IF CC JUMP 0x8ad6 <_mDNS_DeregisterService_drt+0x56> (BP);
    8ac4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x248(584) */
    8ac8:	2a e4 c8 01 	R2 = [P5 + 0x720];
    8acc:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    8ace:	01 e1 e4 26 	R1.L = 0x26e4;		/* (9956)	R1=0x26e4(9956) */
    8ad2:	ff e3 97 ba 	CALL 0x0 <_AddRecordToResponseList>;
    8ad6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    8ad8:	a8 b0       	[P5 + 0x8] = R0;
    8ada:	05 68       	P5 = 0x0 (X);		/*		P5=0x0(  0) */
    8adc:	4e 20       	JUMP.S 0x8b78 <_mDNS_DeregisterService_drt+0xf8>;
    8ade:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x26e4(9956) */
    8ae2:	07 30       	R0 = R7;
    8ae4:	01 e1 2c 02 	R1.L = 0x22c;		/* (556)	R1=0x22c(556) */
    8ae8:	ff e3 8c ba 	CALL 0x0 <_AddRecordToResponseList>;
    8aec:	2a e1 00 07 	P2 = 0x700 (X);		/*		P2=0x700(1792) */
    8af0:	95 5a       	P2 = P5 + P2;
    8af2:	4a 30       	R1 = P2;
    8af4:	ec ac       	P4 = [P5 + 0xc];
    8af6:	07 30       	R0 = R7;
    8af8:	1a 60       	R2 = 0x3 (X);		/*		R2=0x3(  3) */
    8afa:	ff e3 81 e2 	CALL 0x4ffc <_mDNS_Deregister_internal>;
    8afe:	2a e1 74 0a 	P2 = 0xa74 (X);		/*		P2=0xa74(2676) */
    8b02:	95 5a       	P2 = P5 + P2;
    8b04:	4a 30       	R1 = P2;
    8b06:	07 30       	R0 = R7;
    8b08:	1a 60       	R2 = 0x3 (X);		/*		R2=0x3(  3) */
    8b0a:	ff e3 79 e2 	CALL 0x4ffc <_mDNS_Deregister_internal>;
    8b0e:	4d 30       	R1 = P5;
    8b10:	c1 64       	R1 += 0x18;		/* ( 24) */
    8b12:	07 30       	R0 = R7;
    8b14:	15 30       	R2 = R5;
    8b16:	ff e3 73 e2 	CALL 0x4ffc <_mDNS_Deregister_internal>;
    8b1a:	08 20       	JUMP.S 0x8b2a <_mDNS_DeregisterService_drt+0xaa>;
    8b1c:	4c 30       	R1 = P4;
    8b1e:	41 64       	R1 += 0x8;		/* (  8) */
    8b20:	07 30       	R0 = R7;
    8b22:	1a 60       	R2 = 0x3 (X);		/*		R2=0x3(  3) */
    8b24:	ff e3 6c e2 	CALL 0x4ffc <_mDNS_Deregister_internal>;
    8b28:	64 91       	P4 = [P4];
    8b2a:	44 0c       	CC = P4 == 0x0;
    8b2c:	f8 17       	IF !CC JUMP 0x8b1c <_mDNS_DeregisterService_drt+0x9c> (BP);
    8b2e:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
    8b30:	24 e1 74 03 	R4 = 0x374 (X);		/*		R4=0x374(884) */
    8b34:	09 20       	JUMP.S 0x8b46 <_mDNS_DeregisterService_drt+0xc6>;
    8b36:	07 30       	R0 = R7;
    8b38:	69 a1       	R1 = [P5 + 0x14];
    8b3a:	71 50       	R1 = R1 + R6;
    8b3c:	15 30       	R2 = R5;
    8b3e:	ff e3 5f e2 	CALL 0x4ffc <_mDNS_Deregister_internal>;
    8b42:	0c 6c       	P4 += 0x1;		/* (  1) */
    8b44:	a6 51       	R6 = R6 + R4;
    8b46:	28 a1       	R0 = [P5 + 0x10];
    8b48:	4c 30       	R1 = P4;
    8b4a:	81 09       	CC = R1 < R0 (IU);
    8b4c:	f5 1f       	IF CC JUMP 0x8b36 <_mDNS_DeregisterService_drt+0xb6> (BP);
    8b4e:	2a e1 8c 03 	P2 = 0x38c (X);		/*		P2=0x38c(908) */
    8b52:	95 5a       	P2 = P5 + P2;
    8b54:	4a 30       	R1 = P2;
    8b56:	07 30       	R0 = R7;
    8b58:	15 30       	R2 = R5;
    8b5a:	ff e3 51 e2 	CALL 0x4ffc <_mDNS_Deregister_internal>;
    8b5e:	28 32       	P5 = R0;
    8b60:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x22c(556) */
    8b64:	07 30       	R0 = R7;
    8b66:	01 e1 2c 02 	R1.L = 0x22c;		/* (556)	R1=0x22c(556) */
    8b6a:	ff e3 4b ba 	CALL 0x0 <_AddRecordToResponseList>;
    8b6e:	05 20       	JUMP.S 0x8b78 <_mDNS_DeregisterService_drt+0xf8>;
    8b70:	4d e1 fe ff 	P5.H = 0xfffe;		/* ( -2)	P5=0xfffe0000(-131072) */
    8b74:	0d e1 fb ff 	P5.L = 0xfffb;		/* ( -5)	P5=0xfffefffb(-65541) */
    8b78:	66 6c       	SP += 0xc;		/* ( 12) */
    8b7a:	45 30       	R0 = P5;
    8b7c:	27 01       	RETS = [SP++];
    8b7e:	a4 05       	(R7:4, P5:4) = [SP++];
    8b80:	10 00       	RTS;
	...

00008b84 <_ServiceCallback>:
_ServiceCallback():
    8b84:	11 32       	P2 = R1;
    8b86:	f4 05       	[--SP] = (R7:6, P5:4);
    8b88:	67 01       	[--SP] = RETS;
    8b8a:	86 6f       	SP += -0x10;		/* (-16) */
    8b8c:	30 30       	R6 = R0;
    8b8e:	3a 30       	R7 = R2;
    8b90:	15 e5 10 00 	P5 = [P2 + 0x40];
    8b94:	02 0c       	CC = R2 == 0x0;
    8b96:	07 14       	IF !CC JUMP 0x8ba4 <_ServiceCallback+0x20> (BP);
    8b98:	29 e1 00 07 	P1 = 0x700 (X);		/*		P1=0x700(1792) */
    8b9c:	4d 5a       	P1 = P5 + P1;
    8b9e:	4a 08       	CC = P2 == P1;
    8ba0:	6f 14       	IF !CC JUMP 0x8c7e <_ServiceCallback+0xfa> (BP);
    8ba2:	45 20       	JUMP.S 0x8c2c <_ServiceCallback+0xa8>;
    8ba4:	20 e1 fd bf 	R0 = -0x4003 (X);		/*		R0=0xffffbffd(-16387) */
    8ba8:	10 4f       	R0 <<= 0x2;
    8baa:	02 08       	CC = R2 == R0;
    8bac:	0b 14       	IF !CC JUMP 0x8bc2 <_ServiceCallback+0x3e> (BP);
    8bae:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    8bb0:	a8 b0       	[P5 + 0x8] = R0;
    8bb2:	86 6c       	SP += 0x10;		/* ( 16) */
    8bb4:	27 01       	RETS = [SP++];
    8bb6:	06 30       	R0 = R6;
    8bb8:	4d 30       	R1 = P5;
    8bba:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    8bbc:	b4 05       	(R7:6, P5:4) = [SP++];
    8bbe:	ff e2 61 ff 	JUMP.L 0x8a80 <_mDNS_DeregisterService_drt>;
    8bc2:	20 e1 ff fe 	R0 = -0x101 (X);		/*		R0=0xfffffeff(-257) */
    8bc6:	40 4f       	R0 <<= 0x8;
    8bc8:	02 08       	CC = R2 == R0;
    8bca:	31 14       	IF !CC JUMP 0x8c2c <_ServiceCallback+0xa8> (BP);
    8bcc:	a8 e4 04 07 	R0 = B[P5 + 0x704] (Z);
    8bd0:	ea ac       	P2 = [P5 + 0xc];
    8bd2:	00 0c       	CC = R0 == 0x0;
    8bd4:	55 14       	IF !CC JUMP 0x8c7e <_ServiceCallback+0xfa> (BP);
    8bd6:	a8 e4 78 0a 	R0 = B[P5 + 0xa78] (Z);
    8bda:	00 0c       	CC = R0 == 0x0;
    8bdc:	51 14       	IF !CC JUMP 0x8c7e <_ServiceCallback+0xfa> (BP);
    8bde:	a8 e4 90 03 	R0 = B[P5 + 0x390] (Z);
    8be2:	00 0c       	CC = R0 == 0x0;
    8be4:	4d 14       	IF !CC JUMP 0x8c7e <_ServiceCallback+0xfa> (BP);
    8be6:	a8 e4 1c 00 	R0 = B[P5 + 0x1c] (Z);
    8bea:	00 0c       	CC = R0 == 0x0;
    8bec:	49 14       	IF !CC JUMP 0x8c7e <_ServiceCallback+0xfa> (BP);
    8bee:	01 68       	P1 = 0x0 (X);		/*		P1=0x0(  0) */
    8bf0:	21 e1 74 03 	R1 = 0x374 (X);		/*		R1=0x374(884) */
    8bf4:	2a a1       	R2 = [P5 + 0x10];
    8bf6:	0a 20       	JUMP.S 0x8c0a <_ServiceCallback+0x86>;
    8bf8:	21 32       	P4 = R1;
    8bfa:	68 ad       	P0 = [P5 + 0x14];
    8bfc:	08 5a       	P0 = P0 + P1;
    8bfe:	83 e4 04 00 	R3 = B[P0 + 0x4] (Z);
    8c02:	61 5a       	P1 = P1 + P4;
    8c04:	03 0c       	CC = R3 == 0x0;
    8c06:	3c 10       	IF !CC JUMP 0x8c7e <_ServiceCallback+0xfa>;
    8c08:	08 64       	R0 += 0x1;		/* (  1) */
    8c0a:	90 09       	CC = R0 < R2 (IU);
    8c0c:	f6 1f       	IF CC JUMP 0x8bf8 <_ServiceCallback+0x74> (BP);
    8c0e:	07 20       	JUMP.S 0x8c1c <_ServiceCallback+0x98>;
    8c10:	00 00       	NOP;
    8c12:	90 e4 0c 00 	R0 = B[P2 + 0xc] (Z);
    8c16:	00 0c       	CC = R0 == 0x0;
    8c18:	33 14       	IF !CC JUMP 0x8c7e <_ServiceCallback+0xfa> (BP);
    8c1a:	52 91       	P2 = [P2];
    8c1c:	42 0c       	CC = P2 == 0x0;
    8c1e:	f9 17       	IF !CC JUMP 0x8c10 <_ServiceCallback+0x8c> (BP);
    8c20:	a8 a0       	R0 = [P5 + 0x8];
    8c22:	00 0c       	CC = R0 == 0x0;
    8c24:	20 e1 fd bf 	R0 = -0x4003 (X);		/*		R0=0xffffbffd(-16387) */
    8c28:	10 4f       	R0 <<= 0x2;
    8c2a:	38 06       	IF !CC R7 = R0;
    8c2c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x38c */
    8c30:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    8c34:	10 91       	R0 = [P2];
    8c36:	00 0c       	CC = R0 == 0x0;
    8c38:	18 1c       	IF CC JUMP 0x8c68 <_ServiceCallback+0xe4> (BP);
    8c3a:	20 e1 ff fe 	R0 = -0x101 (X);		/*		R0=0xfffffeff(-257) */
    8c3e:	40 4f       	R0 <<= 0x8;
    8c40:	07 08       	CC = R7 == R0;
    8c42:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0xfeff(65279) */
    8c46:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    8c4a:	00 e1 24 27 	R0.L = 0x2724;		/* (10020)	R0=0x2724(10020) */
    8c4e:	02 e1 34 27 	R2.L = 0x2734;		/* (10036)	R2=0x2734(10036) */
    8c52:	10 07       	IF CC R2 = R0;
    8c54:	28 e4 eb 00 	R0 = [P5 + 0x3ac];
    8c58:	f0 b0       	[SP + 0xc] = R0;
    8c5a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x374(884) */
    8c5e:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    8c60:	01 e1 40 27 	R1.L = 0x2740;		/* (10048)	R1=0x2740(10048) */
    8c64:	ff e3 ce b9 	CALL 0x0 <_AddRecordToResponseList>;
    8c68:	00 00       	NOP;
    8c6a:	6a 91       	P2 = [P5];
    8c6c:	42 0c       	CC = P2 == 0x0;
    8c6e:	08 18       	IF CC JUMP 0x8c7e <_ServiceCallback+0xfa>;
    8c70:	86 6c       	SP += 0x10;		/* ( 16) */
    8c72:	06 30       	R0 = R6;
    8c74:	4d 30       	R1 = P5;
    8c76:	27 01       	RETS = [SP++];
    8c78:	17 30       	R2 = R7;
    8c7a:	b4 05       	(R7:6, P5:4) = [SP++];
    8c7c:	52 00       	JUMP (P2);
    8c7e:	86 6c       	SP += 0x10;		/* ( 16) */
    8c80:	27 01       	RETS = [SP++];
    8c82:	b4 05       	(R7:6, P5:4) = [SP++];
    8c84:	10 00       	RTS;
	...

00008c88 <_mDNS_RegisterNoSuchService>:
_mDNS_RegisterNoSuchService():
    8c88:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    8c8c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    8c90:	52 91       	P2 = [P2];
    8c92:	e3 05       	[--SP] = (R7:4, P5:3);
    8c94:	67 01       	[--SP] = RETS;
    8c96:	e6 6e       	SP += -0x24;		/* (-36) */
    8c98:	1a 32       	P3 = R2;
    8c9a:	20 30       	R4 = R0;
    8c9c:	29 32       	P5 = R1;
    8c9e:	32 e4 17 00 	R2 = [SP + 0x5c];
    8ca2:	6a 30       	R5 = P2;
    8ca4:	36 e4 14 00 	R6 = [SP + 0x50];
    8ca8:	37 e4 15 00 	R7 = [SP + 0x54];
    8cac:	34 e5 16 00 	P4 = [SP + 0x58];
    8cb0:	33 e4 18 00 	R3 = [SP + 0x60];
    8cb4:	31 e4 19 00 	R1 = [SP + 0x64];
    8cb8:	30 e4 1a 00 	R0 = [SP + 0x68];
    8cbc:	2a 08       	CC = R2 == R5;
    8cbe:	15 18       	IF CC JUMP 0x8ce8 <_mDNS_RegisterNoSuchService+0x60>;
    8cc0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    8cc4:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    8cc8:	52 91       	P2 = [P2];
    8cca:	6a 30       	R5 = P2;
    8ccc:	2a 08       	CC = R2 == R5;
    8cce:	0f 18       	IF CC JUMP 0x8cec <_mDNS_RegisterNoSuchService+0x64>;
    8cd0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    8cd4:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    8cd8:	52 91       	P2 = [P2];
    8cda:	6a 30       	R5 = P2;
    8cdc:	2a 08       	CC = R2 == R5;
    8cde:	09 14       	IF !CC JUMP 0x8cf0 <_mDNS_RegisterNoSuchService+0x68> (BP);
    8ce0:	00 0c       	CC = R0 == 0x0;
    8ce2:	00 02       	R0 = CC;
    8ce4:	00 4b       	BITTGL (R0, 0x0);		/* bit  0 */
    8ce6:	06 20       	JUMP.S 0x8cf2 <_mDNS_RegisterNoSuchService+0x6a>;
    8ce8:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    8cea:	04 20       	JUMP.S 0x8cf2 <_mDNS_RegisterNoSuchService+0x6a>;
    8cec:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    8cee:	02 20       	JUMP.S 0x8cf2 <_mDNS_RegisterNoSuchService+0x6a>;
    8cf0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    8cf2:	0a 69       	P2 = 0x21 (X);		/*		P2=0x21( 33) */
    8cf4:	6a 30       	R5 = P2;
    8cf6:	2a e1 78 00 	P2 = 0x78 (X);		/*		P2=0x78(120) */
    8cfa:	32 bd       	[SP + 0x10] = P2;
    8cfc:	12 68       	P2 = 0x2 (X);		/*		P2=0x2(  2) */
    8cfe:	b5 b5       	W[SP + 0xc] = R5;
    8d00:	6a 30       	R5 = P2;
    8d02:	b0 b1       	[SP + 0x18] = R0;
    8d04:	31 b2       	[SP + 0x20] = R1;
    8d06:	f3 b1       	[SP + 0x1c] = R3;
    8d08:	45 30       	R0 = P5;
    8d0a:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    8d0c:	b5 e6 14 00 	B[SP + 0x14] = R5;
    8d10:	ff e3 78 b9 	CALL 0x0 <_AddRecordToResponseList>;
    8d14:	2a e1 68 01 	P2 = 0x168 (X);		/*		P2=0x168(360) */
    8d18:	95 5a       	P2 = P5 + P2;
    8d1a:	42 30       	R0 = P2;
    8d1c:	f7 b0       	[SP + 0xc] = R7;
    8d1e:	4b 30       	R1 = P3;
    8d20:	16 30       	R2 = R6;
    8d22:	ff e3 6f b9 	CALL 0x0 <_AddRecordToResponseList>;
    8d26:	00 0c       	CC = R0 == 0x0;
    8d28:	33 18       	IF CC JUMP 0x8d8e <_mDNS_RegisterNoSuchService+0x106>;
    8d2a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    8d2c:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    8d30:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    8d34:	6a ae       	P2 = [P5 + 0x24];
    8d36:	44 0c       	CC = P4 == 0x0;
    8d38:	90 b4       	W[P2 + 0x4] = R0;
    8d3a:	6a ae       	P2 = [P5 + 0x24];
    8d3c:	d0 b4       	W[P2 + 0x6] = R0;
    8d3e:	6a ae       	P2 = [P5 + 0x24];
    8d40:	08 95       	R0 = W[P1] (Z);
    8d42:	10 b5       	W[P2 + 0x8] = R0;
    8d44:	1b 1c       	IF CC JUMP 0x8d7a <_mDNS_RegisterNoSuchService+0xf2> (BP);
    8d46:	20 99       	R0 = B[P4] (Z);
    8d48:	00 0c       	CC = R0 == 0x0;
    8d4a:	18 1c       	IF CC JUMP 0x8d7a <_mDNS_RegisterNoSuchService+0xf2> (BP);
    8d4c:	2a e1 00 01 	P2 = 0x100 (X);		/*		P2=0x100(256) */
    8d50:	94 5a       	P2 = P4 + P2;
    8d52:	4a 30       	R1 = P2;
    8d54:	44 30       	R0 = P4;
    8d56:	ff e3 55 b9 	CALL 0x0 <_AddRecordToResponseList>;
    8d5a:	c2 42       	R2 = R0.L (Z);
    8d5c:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    8d60:	02 0a       	CC = R2 <= R0 (IU);
    8d62:	6a ae       	P2 = [P5 + 0x24];
    8d64:	07 14       	IF !CC JUMP 0x8d72 <_mDNS_RegisterNoSuchService+0xea> (BP);
    8d66:	42 30       	R0 = P2;
    8d68:	50 64       	R0 += 0xa;		/* ( 10) */
    8d6a:	4c 30       	R1 = P4;
    8d6c:	ff e3 4a b9 	CALL 0x0 <_AddRecordToResponseList>;
    8d70:	08 20       	JUMP.S 0x8d80 <_mDNS_RegisterNoSuchService+0xf8>;
    8d72:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    8d74:	90 e6 0a 00 	B[P2 + 0xa] = R0;
    8d78:	04 20       	JUMP.S 0x8d80 <_mDNS_RegisterNoSuchService+0xf8>;
    8d7a:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    8d7c:	a8 e6 44 00 	B[P5 + 0x44] = R0;
    8d80:	26 6d       	SP += 0x24;		/* ( 36) */
    8d82:	27 01       	RETS = [SP++];
    8d84:	04 30       	R0 = R4;
    8d86:	4d 30       	R1 = P5;
    8d88:	a3 05       	(R7:4, P5:3) = [SP++];
    8d8a:	ff e2 f5 fa 	JUMP.L 0x8374 <_mDNS_Register>;
    8d8e:	26 6d       	SP += 0x24;		/* ( 36) */
    8d90:	27 01       	RETS = [SP++];
    8d92:	20 e1 ff bf 	R0 = -0x4001 (X);		/*		R0=0xffffbfff(-16385) */
    8d96:	10 4f       	R0 <<= 0x2;
    8d98:	a3 05       	(R7:4, P5:3) = [SP++];
    8d9a:	10 00       	RTS;

00008d9c <_mDNS_RegisterService>:
_mDNS_RegisterService():
    8d9c:	e3 05       	[--SP] = (R7:4, P5:3);
    8d9e:	00 e8 53 00 	LINK 0x14c;		/* (332) */
    8da2:	32 e5 6a 00 	P2 = [SP + 0x1a8];
    8da6:	30 30       	R6 = R0;
    8da8:	29 32       	P5 = R1;
    8daa:	11 60       	R1 = 0x2 (X);		/*		R1=0x2(  2) */
    8dac:	42 30       	R0 = P2;
    8dae:	08 48       	CC = !BITTST (R0, 0x1);		/* bit  1 */
    8db0:	00 61       	R0 = 0x20 (X);		/*		R0=0x20( 32) */
    8db2:	01 07       	IF CC R0 = R1;
    8db4:	b0 e6 30 00 	B[SP + 0x30] = R0;
    8db8:	30 e4 68 00 	R0 = [SP + 0x1a0];
    8dbc:	28 93       	[P5] = R0;
    8dbe:	30 e4 69 00 	R0 = [SP + 0x1a4];
    8dc2:	68 b0       	[P5 + 0x4] = R0;
    8dc4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    8dc6:	a8 b0       	[P5 + 0x8] = R0;
    8dc8:	e8 b0       	[P5 + 0xc] = R0;
    8dca:	30 e4 65 00 	R0 = [SP + 0x194];
    8dce:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    8dd2:	68 b1       	[P5 + 0x14] = R0;
    8dd4:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    8dd8:	35 e4 67 00 	R5 = [SP + 0x19c];
    8ddc:	31 e4 66 00 	R1 = [SP + 0x198];
    8de0:	08 91       	R0 = [P1];
    8de2:	32 e6 5e 00 	[SP + 0x178] = R2;
    8de6:	34 e4 60 00 	R4 = [SP + 0x180];
    8dea:	37 e5 61 00 	FP = [SP + 0x184];
    8dee:	29 b1       	[P5 + 0x10] = R1;
    8df0:	05 08       	CC = R5 == R0;
    8df2:	13 18       	IF CC JUMP 0x8e18 <_mDNS_RegisterService+0x7c>;
    8df4:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    8df8:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    8dfc:	08 91       	R0 = [P1];
    8dfe:	05 08       	CC = R5 == R0;
    8e00:	0e 18       	IF CC JUMP 0x8e1c <_mDNS_RegisterService+0x80>;
    8e02:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    8e06:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    8e0a:	08 91       	R0 = [P1];
    8e0c:	05 08       	CC = R5 == R0;
    8e0e:	09 14       	IF !CC JUMP 0x8e20 <_mDNS_RegisterService+0x84> (BP);
    8e10:	0f 60       	R7 = 0x1 (X);		/*		R7=0x1(  1) */
    8e12:	52 30       	R2 = P2;
    8e14:	fa 55       	R7 = R2 & R7;
    8e16:	06 20       	JUMP.S 0x8e22 <_mDNS_RegisterService+0x86>;
    8e18:	17 60       	R7 = 0x2 (X);		/*		R7=0x2(  2) */
    8e1a:	04 20       	JUMP.S 0x8e22 <_mDNS_RegisterService+0x86>;
    8e1c:	1f 60       	R7 = 0x3 (X);		/*		R7=0x3(  3) */
    8e1e:	02 20       	JUMP.S 0x8e22 <_mDNS_RegisterService+0x86>;
    8e20:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    8e22:	63 68       	P3 = 0xc (X);		/*		P3=0xc( 12) */
    8e24:	43 30       	R0 = P3;
    8e26:	b0 b5       	W[SP + 0xc] = R0;
    8e28:	20 60       	R0 = 0x4 (X);		/*		R0=0x4(  4) */
    8e2a:	45 32       	P0 = P5;
    8e2c:	4c e1 00 00 	P4.H = 0x0;		/* (  0)	P4=0x1914 */
    8e30:	c0 6c       	P0 += 0x18;		/* ( 24) */
    8e32:	23 e1 94 11 	R3 = 0x1194 (X);		/*		R3=0x1194(4500) */
    8e36:	0c e1 84 8b 	P4.L = 0x8b84;		/* (-29820)	P4=0x8b84 <_ServiceCallback> */
    8e3a:	b0 e6 14 00 	B[SP + 0x14] = R0;
    8e3e:	40 30       	R0 = P0;
    8e40:	b2 be       	[SP + 0x28] = P2;
    8e42:	b0 bf       	[SP + 0x38] = P0;
    8e44:	33 b1       	[SP + 0x10] = R3;
    8e46:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    8e48:	15 30       	R2 = R5;
    8e4a:	f3 b2       	[SP + 0x2c] = R3;
    8e4c:	b7 b1       	[SP + 0x18] = R7;
    8e4e:	f4 bd       	[SP + 0x1c] = P4;
    8e50:	35 be       	[SP + 0x20] = P5;
    8e52:	ff e3 d7 b8 	CALL 0x0 <_AddRecordToResponseList>;
    8e56:	4b 30       	R1 = P3;
    8e58:	40 60       	R0 = 0x8 (X);		/*		R0=0x8(  8) */
    8e5a:	29 e1 8c 03 	P1 = 0x38c (X);		/*		P1=0x38c(908) */
    8e5e:	4d 5a       	P1 = P5 + P1;
    8e60:	f3 a2       	R3 = [SP + 0x2c];
    8e62:	b1 b5       	W[SP + 0xc] = R1;
    8e64:	b0 e6 14 00 	B[SP + 0x14] = R0;
    8e68:	41 30       	R0 = P1;
    8e6a:	f1 bf       	[SP + 0x3c] = P1;
    8e6c:	33 b1       	[SP + 0x10] = R3;
    8e6e:	15 30       	R2 = R5;
    8e70:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    8e72:	b7 b1       	[SP + 0x18] = R7;
    8e74:	f4 bd       	[SP + 0x1c] = P4;
    8e76:	35 be       	[SP + 0x20] = P5;
    8e78:	ff e3 c4 b8 	CALL 0x0 <_AddRecordToResponseList>;
    8e7c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    8e80:	01 e1 6c 27 	R1.L = 0x276c;		/* (10092)	R1=0x276c(10092) */
    8e84:	30 e4 5f 00 	R0 = [SP + 0x17c];
    8e88:	ff e3 bc b8 	CALL 0x0 <_AddRecordToResponseList>;
    8e8c:	00 0c       	CC = R0 == 0x0;
    8e8e:	21 e1 78 00 	R1 = 0x78 (X);		/*		R1=0x78(120) */
    8e92:	50 60       	R0 = 0xa (X);		/*		R0=0xa( 10) */
    8e94:	01 07       	IF CC R0 = R1;
    8e96:	b2 e5 30 00 	R2 = B[SP + 0x30] (X);
    8e9a:	09 61       	R1 = 0x21 (X);		/*		R1=0x21( 33) */
    8e9c:	2b e1 00 07 	P3 = 0x700 (X);		/*		P3=0x700(1792) */
    8ea0:	b1 b5       	W[SP + 0xc] = R1;
    8ea2:	30 b1       	[SP + 0x10] = R0;
    8ea4:	b2 e6 14 00 	B[SP + 0x14] = R2;
    8ea8:	dd 5a       	P3 = P5 + P3;
    8eaa:	43 30       	R0 = P3;
    8eac:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    8eae:	15 30       	R2 = R5;
    8eb0:	b7 b1       	[SP + 0x18] = R7;
    8eb2:	f4 bd       	[SP + 0x1c] = P4;
    8eb4:	35 be       	[SP + 0x20] = P5;
    8eb6:	ff e3 a5 b8 	CALL 0x0 <_AddRecordToResponseList>;
    8eba:	80 60       	R0 = 0x10 (X);		/*		R0=0x10( 16) */
    8ebc:	b0 b5       	W[SP + 0xc] = R0;
    8ebe:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    8ec0:	29 e1 74 0a 	P1 = 0xa74 (X);		/*		P1=0xa74(2676) */
    8ec4:	4d 5a       	P1 = P5 + P1;
    8ec6:	f3 a2       	R3 = [SP + 0x2c];
    8ec8:	b0 e6 14 00 	B[SP + 0x14] = R0;
    8ecc:	41 30       	R0 = P1;
    8ece:	31 bf       	[SP + 0x30] = P1;
    8ed0:	33 b1       	[SP + 0x10] = R3;
    8ed2:	b7 b1       	[SP + 0x18] = R7;
    8ed4:	f4 bd       	[SP + 0x1c] = P4;
    8ed6:	35 be       	[SP + 0x20] = P5;
    8ed8:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    8eda:	15 30       	R2 = R5;
    8edc:	ff e3 92 b8 	CALL 0x0 <_AddRecordToResponseList>;
    8ee0:	70 e4 c4 00 	R0 = W[SP + 0x188] (Z);
    8ee4:	00 0c       	CC = R0 == 0x0;
    8ee6:	b2 ae       	P2 = [SP + 0x28];
    8ee8:	19 10       	IF !CC JUMP 0x8f1a <_mDNS_RegisterService+0x17e>;
    8eea:	70 b1       	[SP + 0x14] = R0;
    8eec:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x2(  2) */
    8ef0:	00 e1 60 02 	R0.L = 0x260;		/* (608)	R0=0x260 <_NSSCallback>(608) */
    8ef4:	30 e5 5f 00 	P0 = [SP + 0x17c];
    8ef8:	f0 b1       	[SP + 0x1c] = R0;
    8efa:	4a 30       	R1 = P2;
    8efc:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    8efe:	01 54       	R0 = R1 & R0;
    8f00:	70 b2       	[SP + 0x24] = R0;
    8f02:	f0 bc       	[SP + 0xc] = P0;
    8f04:	34 b1       	[SP + 0x10] = R4;
    8f06:	b5 b1       	[SP + 0x18] = R5;
    8f08:	35 be       	[SP + 0x20] = P5;
    8f0a:	06 30       	R0 = R6;
    8f0c:	4b 30       	R1 = P3;
    8f0e:	32 e4 5e 00 	R2 = [SP + 0x178];
    8f12:	ff e3 bb fe 	CALL 0x8c88 <_mDNS_RegisterNoSuchService>;
    8f16:	38 30       	R7 = R0;
    8f18:	a6 21       	JUMP.S 0x9264 <_mDNS_RegisterService+0x4c8>;
    8f1a:	2a e5 a6 02 	P2 = [P5 + 0xa98];
    8f1e:	70 e4 c8 00 	R0 = W[SP + 0x190] (Z);
    8f22:	11 95       	R1 = W[P2] (Z);
    8f24:	81 09       	CC = R1 < R0 (IU);
    8f26:	04 14       	IF !CC JUMP 0x8f2e <_mDNS_RegisterService+0x192> (BP);
    8f28:	72 e5 c8 00 	R2 = W[SP + 0x190] (X);
    8f2c:	12 97       	W[P2] = R2;
    8f2e:	2a e1 80 01 	P2 = 0x180 (X);		/*		P2=0x180(384) */
    8f32:	95 5a       	P2 = P5 + P2;
    8f34:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    8f38:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x2734(10036) */
    8f3c:	42 30       	R0 = P2;
    8f3e:	f4 b0       	[SP + 0xc] = R4;
    8f40:	01 e1 78 27 	R1.L = 0x2778;		/* (10104)	R1=0x2778(10104) */
    8f44:	02 e1 84 27 	R2.L = 0x2784;		/* (10116)	R2=0x2784(10116) */
    8f48:	ff e3 5c b8 	CALL 0x0 <_AddRecordToResponseList>;
    8f4c:	00 0c       	CC = R0 == 0x0;
    8f4e:	88 1d       	IF CC JUMP 0x925e <_mDNS_RegisterService+0x4c2> (BP);
    8f50:	2a e1 f4 04 	P2 = 0x4f4 (X);		/*		P2=0x4f4(1268) */
    8f54:	95 5a       	P2 = P5 + P2;
    8f56:	42 30       	R0 = P2;
    8f58:	f4 b0       	[SP + 0xc] = R4;
    8f5a:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    8f5c:	32 e4 5f 00 	R2 = [SP + 0x17c];
    8f60:	ff e3 50 b8 	CALL 0x0 <_AddRecordToResponseList>;
    8f64:	00 0c       	CC = R0 == 0x0;
    8f66:	7c 1d       	IF CC JUMP 0x925e <_mDNS_RegisterService+0x4c2> (BP);
    8f68:	2a e1 68 08 	P2 = 0x868 (X);		/*		P2=0x868(2152) */
    8f6c:	95 5a       	P2 = P5 + P2;
    8f6e:	32 e7 10 00 	[SP + 0x40] = P2;
    8f72:	f4 b0       	[SP + 0xc] = R4;
    8f74:	42 30       	R0 = P2;
    8f76:	31 e4 5e 00 	R1 = [SP + 0x178];
    8f7a:	32 e4 5f 00 	R2 = [SP + 0x17c];
    8f7e:	ff e3 41 b8 	CALL 0x0 <_AddRecordToResponseList>;
    8f82:	00 0c       	CC = R0 == 0x0;
    8f84:	6d 1d       	IF CC JUMP 0x925e <_mDNS_RegisterService+0x4c2> (BP);
    8f86:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    8f8a:	28 e4 c8 01 	R0 = [P5 + 0x720];
    8f8e:	48 50       	R1 = R0 + R1;
    8f90:	ff e3 38 b8 	CALL 0x0 <_AddRecordToResponseList>;
    8f94:	c2 42       	R2 = R0.L (Z);
    8f96:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    8f9a:	02 0a       	CC = R2 <= R0 (IU);
    8f9c:	0a 14       	IF !CC JUMP 0x8fb0 <_mDNS_RegisterService+0x214> (BP);
    8f9e:	2a e1 dc 0b 	P2 = 0xbdc (X);		/*		P2=0xbdc(3036) */
    8fa2:	95 5a       	P2 = P5 + P2;
    8fa4:	42 30       	R0 = P2;
    8fa6:	29 e4 c8 01 	R1 = [P5 + 0x720];
    8faa:	ff e3 2b b8 	CALL 0x0 <_AddRecordToResponseList>;
    8fae:	04 20       	JUMP.S 0x8fb6 <_mDNS_RegisterService+0x21a>;
    8fb0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    8fb2:	a8 e6 dc 0b 	B[P5 + 0xbdc] = R0;
    8fb6:	28 e4 eb 00 	R0 = [P5 + 0x3ac];
    8fba:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    8fbe:	48 50       	R1 = R0 + R1;
    8fc0:	ff e3 20 b8 	CALL 0x0 <_AddRecordToResponseList>;
    8fc4:	c2 42       	R2 = R0.L (Z);
    8fc6:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    8fca:	0a 0a       	CC = R2 <= R1 (IU);
    8fcc:	ea af       	P2 = [P5 + 0x3c];
    8fce:	08 14       	IF !CC JUMP 0x8fde <_mDNS_RegisterService+0x242> (BP);
    8fd0:	42 30       	R0 = P2;
    8fd2:	20 64       	R0 += 0x4;		/* (  4) */
    8fd4:	29 e4 eb 00 	R1 = [P5 + 0x3ac];
    8fd8:	ff e3 14 b8 	CALL 0x0 <_AddRecordToResponseList>;
    8fdc:	04 20       	JUMP.S 0x8fe4 <_mDNS_RegisterService+0x248>;
    8fde:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    8fe0:	90 e6 04 00 	B[P2 + 0x4] = R0;
    8fe4:	28 e4 c8 01 	R0 = [P5 + 0x720];
    8fe8:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    8fec:	48 50       	R1 = R0 + R1;
    8fee:	ff e3 09 b8 	CALL 0x0 <_AddRecordToResponseList>;
    8ff2:	c2 42       	R2 = R0.L (Z);
    8ff4:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    8ff8:	02 0a       	CC = R2 <= R0 (IU);
    8ffa:	2a e5 ec 00 	P2 = [P5 + 0x3b0];
    8ffe:	08 14       	IF !CC JUMP 0x900e <_mDNS_RegisterService+0x272> (BP);
    9000:	42 30       	R0 = P2;
    9002:	20 64       	R0 += 0x4;		/* (  4) */
    9004:	29 e4 c8 01 	R1 = [P5 + 0x720];
    9008:	ff e3 fc b7 	CALL 0x0 <_AddRecordToResponseList>;
    900c:	04 20       	JUMP.S 0x9014 <_mDNS_RegisterService+0x278>;
    900e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    9010:	90 e6 04 00 	B[P2 + 0x4] = R0;
    9014:	30 af       	P0 = [SP + 0x30];
    9016:	2a e1 68 08 	P2 = 0x868 (X);		/*		P2=0x868(2152) */
    901a:	95 5a       	P2 = P5 + P2;
    901c:	32 e7 11 00 	[SP + 0x44] = P2;
    9020:	28 e7 ef 00 	[P5 + 0x3bc] = P0;
    9024:	28 e1 00 01 	P0 = 0x100 (X);		/*		P0=0x100(256) */
    9028:	01 68       	P1 = 0x0 (X);		/*		P1=0x0(  0) */
    902a:	82 5a       	P2 = P2 + P0;
    902c:	2b e7 ee 00 	[P5 + 0x3b8] = P3;
    9030:	04 68       	P4 = 0x0 (X);		/*		P4=0x0(  0) */
    9032:	71 bf       	[SP + 0x34] = P1;
    9034:	32 e7 12 00 	[SP + 0x48] = P2;
    9038:	76 20       	JUMP.S 0x9124 <_mDNS_RegisterService+0x388>;
    903a:	22 e1 00 01 	R2 = 0x100 (X);		/*		R2=0x100(256) */
    903e:	6a ad       	P2 = [P5 + 0x14];
    9040:	a2 5a       	P2 = P2 + P4;
    9042:	10 a2       	R0 = [P2 + 0x20];
    9044:	50 50       	R1 = R0 + R2;
    9046:	ff e3 dd b7 	CALL 0x0 <_AddRecordToResponseList>;
    904a:	c2 42       	R2 = R0.L (Z);
    904c:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    9050:	02 0a       	CC = R2 <= R0 (IU);
    9052:	0b 14       	IF !CC JUMP 0x9068 <_mDNS_RegisterService+0x2cc> (BP);
    9054:	6a ad       	P2 = [P5 + 0x14];
    9056:	28 e1 4c 00 	P0 = 0x4c (X);		/*		P0=0x4c( 76) */
    905a:	30 5a       	P0 = P0 + SP;
    905c:	40 30       	R0 = P0;
    905e:	a2 5a       	P2 = P2 + P4;
    9060:	11 a2       	R1 = [P2 + 0x20];
    9062:	ff e3 cf b7 	CALL 0x0 <_AddRecordToResponseList>;
    9066:	04 20       	JUMP.S 0x906e <_mDNS_RegisterService+0x2d2>;
    9068:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    906a:	b0 e6 4c 00 	B[SP + 0x4c] = R0;
    906e:	b0 e4 4c 00 	R0 = B[SP + 0x4c] (Z);
    9072:	00 32       	P0 = R0;
    9074:	29 e1 4d 00 	P1 = 0x4d (X);		/*		P1=0x4d( 77) */
    9078:	71 5a       	P1 = P1 + SP;
    907a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    907c:	81 5a       	P2 = P1 + P0;
    907e:	28 e1 4c 00 	P0 = 0x4c (X);		/*		P0=0x4c( 76) */
    9082:	10 9b       	B[P2] = R0;
    9084:	30 5a       	P0 = P0 + SP;
    9086:	40 30       	R0 = P0;
    9088:	31 e4 5f 00 	R1 = [SP + 0x17c];
    908c:	ff e3 ba b7 	CALL 0x0 <_AddRecordToResponseList>;
    9090:	68 a1       	R0 = [P5 + 0x14];
    9092:	4c 30       	R1 = P4;
    9094:	08 50       	R0 = R0 + R1;
    9096:	61 60       	R1 = 0xc (X);		/*		R1=0xc( 12) */
    9098:	b1 b5       	W[SP + 0xc] = R1;
    909a:	21 e1 94 11 	R1 = 0x1194 (X);		/*		R1=0x1194(4500) */
    909e:	31 b1       	[SP + 0x10] = R1;
    90a0:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x100(256) */
    90a4:	41 60       	R1 = 0x8 (X);		/*		R1=0x8(  8) */
    90a6:	02 e1 84 8b 	R2.L = 0x8b84;		/* (-29820)	R2=0x8b84 <_ServiceCallback>(35716) */
    90aa:	b1 e6 14 00 	B[SP + 0x14] = R1;
    90ae:	f2 b1       	[SP + 0x1c] = R2;
    90b0:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    90b2:	15 30       	R2 = R5;
    90b4:	b7 b1       	[SP + 0x18] = R7;
    90b6:	35 be       	[SP + 0x20] = P5;
    90b8:	ff e3 a4 b7 	CALL 0x0 <_AddRecordToResponseList>;
    90bc:	69 ad       	P1 = [P5 + 0x14];
    90be:	2a e1 68 01 	P2 = 0x168 (X);		/*		P2=0x168(360) */
    90c2:	28 e1 4c 00 	P0 = 0x4c (X);		/*		P0=0x4c( 76) */
    90c6:	30 5a       	P0 = P0 + SP;
    90c8:	61 5a       	P1 = P1 + P4;
    90ca:	91 5a       	P2 = P1 + P2;
    90cc:	42 30       	R0 = P2;
    90ce:	f4 b0       	[SP + 0xc] = R4;
    90d0:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    90d2:	50 30       	R2 = P0;
    90d4:	ff e3 96 b7 	CALL 0x0 <_AddRecordToResponseList>;
    90d8:	00 0c       	CC = R0 == 0x0;
    90da:	c2 18       	IF CC JUMP 0x925e <_mDNS_RegisterService+0x4c2>;
    90dc:	30 e4 10 00 	R0 = [SP + 0x40];
    90e0:	31 e4 12 00 	R1 = [SP + 0x48];
    90e4:	ff e3 8e b7 	CALL 0x0 <_AddRecordToResponseList>;
    90e8:	c2 42       	R2 = R0.L (Z);
    90ea:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    90ee:	02 0a       	CC = R2 <= R0 (IU);
    90f0:	6a ad       	P2 = [P5 + 0x14];
    90f2:	09 14       	IF !CC JUMP 0x9104 <_mDNS_RegisterService+0x368> (BP);
    90f4:	a2 5a       	P2 = P2 + P4;
    90f6:	50 a2       	R0 = [P2 + 0x24];
    90f8:	20 64       	R0 += 0x4;		/* (  4) */
    90fa:	31 e4 11 00 	R1 = [SP + 0x44];
    90fe:	ff e3 81 b7 	CALL 0x0 <_AddRecordToResponseList>;
    9102:	06 20       	JUMP.S 0x910e <_mDNS_RegisterService+0x372>;
    9104:	a2 5a       	P2 = P2 + P4;
    9106:	52 ae       	P2 = [P2 + 0x24];
    9108:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    910a:	91 e6 04 00 	B[P2 + 0x4] = R1;
    910e:	6a ad       	P2 = [P5 + 0x14];
    9110:	30 af       	P0 = [SP + 0x30];
    9112:	71 af       	P1 = [SP + 0x34];
    9114:	a2 5a       	P2 = P2 + P4;
    9116:	d3 be       	[P2 + 0x2c] = P3;
    9118:	10 bf       	[P2 + 0x30] = P0;
    911a:	09 6c       	P1 += 0x1;		/* (  1) */
    911c:	2a e1 74 03 	P2 = 0x374 (X);		/*		P2=0x374(884) */
    9120:	71 bf       	[SP + 0x34] = P1;
    9122:	14 5b       	P4 = P4 + P2;
    9124:	70 a3       	R0 = [SP + 0x34];
    9126:	31 e4 66 00 	R1 = [SP + 0x198];
    912a:	88 09       	CC = R0 < R1 (IU);
    912c:	87 1f       	IF CC JUMP 0x903a <_mDNS_RegisterService+0x29e> (BP);
    912e:	2a e5 c9 01 	P2 = [P5 + 0x724];
    9132:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    9134:	72 e5 c4 00 	R2 = W[SP + 0x188] (X);
    9138:	47 0c       	CC = FP == 0x0;
    913a:	90 b4       	W[P2 + 0x4] = R0;
    913c:	2a e5 c9 01 	P2 = [P5 + 0x724];
    9140:	d0 b4       	W[P2 + 0x6] = R0;
    9142:	2a e5 c9 01 	P2 = [P5 + 0x724];
    9146:	12 b5       	W[P2 + 0x8] = R2;
    9148:	18 1c       	IF CC JUMP 0x9178 <_mDNS_RegisterService+0x3dc> (BP);
    914a:	38 99       	R0 = B[FP] (Z);
    914c:	00 0c       	CC = R0 == 0x0;
    914e:	15 1c       	IF CC JUMP 0x9178 <_mDNS_RegisterService+0x3dc> (BP);
    9150:	2a e1 00 01 	P2 = 0x100 (X);		/*		P2=0x100(256) */
    9154:	97 5a       	P2 = FP + P2;
    9156:	4a 30       	R1 = P2;
    9158:	47 30       	R0 = FP;
    915a:	ff e3 53 b7 	CALL 0x0 <_AddRecordToResponseList>;
    915e:	c2 42       	R2 = R0.L (Z);
    9160:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    9164:	02 0a       	CC = R2 <= R0 (IU);
    9166:	2a e5 c9 01 	P2 = [P5 + 0x724];
    916a:	0c 14       	IF !CC JUMP 0x9182 <_mDNS_RegisterService+0x3e6> (BP);
    916c:	42 30       	R0 = P2;
    916e:	50 64       	R0 += 0xa;		/* ( 10) */
    9170:	4f 30       	R1 = FP;
    9172:	ff e3 47 b7 	CALL 0x0 <_AddRecordToResponseList>;
    9176:	09 20       	JUMP.S 0x9188 <_mDNS_RegisterService+0x3ec>;
    9178:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    917a:	a8 e6 44 07 	B[P5 + 0x744] = R0;
    917e:	2a e5 c9 01 	P2 = [P5 + 0x724];
    9182:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    9184:	90 e6 0a 00 	B[P2 + 0xa] = R0;
    9188:	31 e4 63 00 	R1 = [SP + 0x18c];
    918c:	01 0c       	CC = R1 == 0x0;
    918e:	05 14       	IF !CC JUMP 0x9198 <_mDNS_RegisterService+0x3fc> (BP);
    9190:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    9192:	68 e6 42 05 	W[P5 + 0xa84] = R0;
    9196:	16 20       	JUMP.S 0x91c2 <_mDNS_RegisterService+0x426>;
    9198:	00 00       	NOP;
    919a:	2a e5 a6 02 	P2 = [P5 + 0xa98];
    919e:	32 e4 63 00 	R2 = [SP + 0x18c];
    91a2:	42 30       	R0 = P2;
    91a4:	20 64       	R0 += 0x4;		/* (  4) */
    91a6:	02 08       	CC = R2 == R0;
    91a8:	0d 1c       	IF CC JUMP 0x91c2 <_mDNS_RegisterService+0x426> (BP);
    91aa:	71 e5 c8 00 	R1 = W[SP + 0x190] (X);
    91ae:	ca 42       	R2 = R1.L (Z);
    91b0:	69 e6 42 05 	W[P5 + 0xa84] = R1;
    91b4:	11 95       	R1 = W[P2] (Z);
    91b6:	0a 0a       	CC = R2 <= R1 (IU);
    91b8:	53 14       	IF !CC JUMP 0x925e <_mDNS_RegisterService+0x4c2> (BP);
    91ba:	31 e4 63 00 	R1 = [SP + 0x18c];
    91be:	ff e3 21 b7 	CALL 0x0 <_AddRecordToResponseList>;
    91c2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    91c6:	06 30       	R0 = R6;
    91c8:	01 e1 80 02 	R1.L = 0x280;		/* (640)	R1=0x280(640) */
    91cc:	2b e7 aa 02 	[P5 + 0xaa8] = P3;
    91d0:	ff e3 18 b7 	CALL 0x0 <_AddRecordToResponseList>;
    91d4:	06 30       	R0 = R6;
    91d6:	4b 30       	R1 = P3;
    91d8:	ff e3 1e f2 	CALL 0x7614 <_mDNS_Register_internal>;
    91dc:	38 30       	R7 = R0;
    91de:	00 0c       	CC = R0 == 0x0;
    91e0:	09 1c       	IF CC JUMP 0x91f2 <_mDNS_RegisterService+0x456> (BP);
    91e2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x280(640) */
    91e6:	06 30       	R0 = R6;
    91e8:	01 e1 80 02 	R1.L = 0x280;		/* (640)	R1=0x280(640) */
    91ec:	ff e3 0a b7 	CALL 0x0 <_AddRecordToResponseList>;
    91f0:	3a 20       	JUMP.S 0x9264 <_mDNS_RegisterService+0x4c8>;
    91f2:	06 30       	R0 = R6;
    91f4:	31 a3       	R1 = [SP + 0x30];
    91f6:	ff e3 0f f2 	CALL 0x7614 <_mDNS_Register_internal>;
    91fa:	38 30       	R7 = R0;
    91fc:	00 0c       	CC = R0 == 0x0;
    91fe:	06 14       	IF !CC JUMP 0x920a <_mDNS_RegisterService+0x46e> (BP);
    9200:	06 30       	R0 = R6;
    9202:	b1 a3       	R1 = [SP + 0x38];
    9204:	ff e3 08 f2 	CALL 0x7614 <_mDNS_Register_internal>;
    9208:	38 30       	R7 = R0;
    920a:	05 60       	R5 = 0x0 (X);		/*		R5=0x0(  0) */
    920c:	04 60       	R4 = 0x0 (X);		/*		R4=0x0(  0) */
    920e:	2c e1 74 03 	P4 = 0x374 (X);		/*		P4=0x374(884) */
    9212:	0c 20       	JUMP.S 0x922a <_mDNS_RegisterService+0x48e>;
    9214:	07 0c       	CC = R7 == 0x0;
    9216:	07 14       	IF !CC JUMP 0x9224 <_mDNS_RegisterService+0x488> (BP);
    9218:	69 a1       	R1 = [P5 + 0x14];
    921a:	69 50       	R1 = R1 + R5;
    921c:	06 30       	R0 = R6;
    921e:	ff e3 fb f1 	CALL 0x7614 <_mDNS_Register_internal>;
    9222:	38 30       	R7 = R0;
    9224:	54 30       	R2 = P4;
    9226:	0c 64       	R4 += 0x1;		/* (  1) */
    9228:	55 51       	R5 = R5 + R2;
    922a:	30 e4 66 00 	R0 = [SP + 0x198];
    922e:	84 09       	CC = R4 < R0 (IU);
    9230:	f2 1f       	IF CC JUMP 0x9214 <_mDNS_RegisterService+0x478> (BP);
    9232:	07 0c       	CC = R7 == 0x0;
    9234:	06 14       	IF !CC JUMP 0x9240 <_mDNS_RegisterService+0x4a4> (BP);
    9236:	06 30       	R0 = R6;
    9238:	f1 a3       	R1 = [SP + 0x3c];
    923a:	ff e3 ed f1 	CALL 0x7614 <_mDNS_Register_internal>;
    923e:	38 30       	R7 = R0;
    9240:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x280(640) */
    9244:	06 30       	R0 = R6;
    9246:	01 e1 80 02 	R1.L = 0x280;		/* (640)	R1=0x280(640) */
    924a:	ff e3 db b6 	CALL 0x0 <_AddRecordToResponseList>;
    924e:	07 0c       	CC = R7 == 0x0;
    9250:	0a 1c       	IF CC JUMP 0x9264 <_mDNS_RegisterService+0x4c8> (BP);
    9252:	06 30       	R0 = R6;
    9254:	4d 30       	R1 = P5;
    9256:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    9258:	ff e3 14 fc 	CALL 0x8a80 <_mDNS_DeregisterService_drt>;
    925c:	04 20       	JUMP.S 0x9264 <_mDNS_RegisterService+0x4c8>;
    925e:	27 e1 ff bf 	R7 = -0x4001 (X);		/*		R7=0xffffbfff(-16385) */
    9262:	17 4f       	R7 <<= 0x2;
    9264:	29 e1 4c 01 	P1 = 0x14c (X);		/*		P1=0x14c(332) */
    9268:	8e 5b       	SP = SP + P1;
    926a:	77 90       	FP = [SP++];
    926c:	07 30       	R0 = R7;
    926e:	27 01       	RETS = [SP++];
    9270:	a3 05       	(R7:4, P5:3) = [SP++];
    9272:	10 00       	RTS;

00009274 <_mDNS_RenameAndReregisterService>:
_mDNS_RenameAndReregisterService():
    9274:	eb 05       	[--SP] = (R7:5, P5:3);
    9276:	21 32       	P4 = R1;
    9278:	30 30       	R6 = R0;
    927a:	00 e8 af 00 	LINK 0x2bc;		/* (700) */
    927e:	2a 32       	P5 = R2;
    9280:	a0 e4 44 07 	R0 = B[P4 + 0x744] (Z);
    9284:	00 0c       	CC = R0 == 0x0;
    9286:	05 14       	IF !CC JUMP 0x9290 <_mDNS_RenameAndReregisterService+0x1c> (BP);
    9288:	27 e4 c9 01 	R7 = [P4 + 0x724];
    928c:	57 64       	R7 += 0xa;		/* ( 10) */
    928e:	02 20       	JUMP.S 0x9292 <_mDNS_RenameAndReregisterService+0x1e>;
    9290:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    9292:	29 e1 7c 02 	P1 = 0x27c (X);		/*		P1=0x27c(636) */
    9296:	56 32       	P2 = SP;
    9298:	ce 5b       	FP = SP + P1;
    929a:	e2 6d       	P2 += 0x3c;		/* ( 60) */
    929c:	5e 30       	R3 = SP;
    929e:	25 e1 3c 01 	R5 = 0x13c (X);		/*		R5=0x13c(316) */
    92a2:	e3 ac       	P3 = [P4 + 0xc];
    92a4:	20 e4 c8 01 	R0 = [P4 + 0x720];
    92a8:	f2 bc       	[SP + 0xc] = P2;
    92aa:	4f 30       	R1 = FP;
    92ac:	ab 50       	R2 = R3 + R5;
    92ae:	ff e3 a9 b6 	CALL 0x0 <_AddRecordToResponseList>;
    92b2:	45 0c       	CC = P5 == 0x0;
    92b4:	0e 14       	IF !CC JUMP 0x92d0 <_mDNS_RenameAndReregisterService+0x5c> (BP);
    92b6:	29 e1 3c 02 	P1 = 0x23c (X);		/*		P1=0x23c(572) */
    92ba:	4e 5b       	P5 = SP + P1;
    92bc:	4f 30       	R1 = FP;
    92be:	45 30       	R0 = P5;
    92c0:	22 e1 40 00 	R2 = 0x40 (X);		/*		R2=0x40( 64) */
    92c4:	ff e3 9e b6 	CALL 0x0 <_AddRecordToResponseList>;
    92c8:	45 30       	R0 = P5;
    92ca:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    92cc:	ff e3 9a b6 	CALL 0x0 <_AddRecordToResponseList>;
    92d0:	7e 32       	FP = SP;
    92d2:	e7 6d       	FP += 0x3c;		/* ( 60) */
    92d4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1(  1) */
    92d8:	01 e1 94 27 	R1.L = 0x2794;		/* (10132)	R1=0x2794(10132) */
    92dc:	47 30       	R0 = FP;
    92de:	ff e3 91 b6 	CALL 0x0 <_AddRecordToResponseList>;
    92e2:	29 e1 3c 01 	P1 = 0x13c (X);		/*		P1=0x13c(316) */
    92e6:	8e 5a       	P2 = SP + P1;
    92e8:	f2 bc       	[SP + 0xc] = P2;
    92ea:	22 e5 c9 01 	P2 = [P4 + 0x724];
    92ee:	77 b1       	[SP + 0x14] = R7;
    92f0:	37 bd       	[SP + 0x10] = FP;
    92f2:	4c 30       	R1 = P4;
    92f4:	10 a9       	R0 = W[P2 + 0x8] (X);
    92f6:	30 b7       	W[SP + 0x18] = R0;
    92f8:	20 e4 a6 02 	R0 = [P4 + 0xa98];
    92fc:	20 64       	R0 += 0x4;		/* (  4) */
    92fe:	f0 b1       	[SP + 0x1c] = R0;
    9300:	60 e5 42 05 	R0 = W[P4 + 0xa84] (X);
    9304:	70 e6 10 00 	W[SP + 0x20] = R0;
    9308:	60 a1       	R0 = [P4 + 0x14];
    930a:	70 b2       	[SP + 0x24] = R0;
    930c:	20 a1       	R0 = [P4 + 0x10];
    930e:	b0 b2       	[SP + 0x28] = R0;
    9310:	20 e4 ea 00 	R0 = [P4 + 0x3a8];
    9314:	f0 b2       	[SP + 0x2c] = R0;
    9316:	20 91       	R0 = [P4];
    9318:	30 b3       	[SP + 0x30] = R0;
    931a:	60 a0       	R0 = [P4 + 0x4];
    931c:	70 b3       	[SP + 0x34] = R0;
    931e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    9320:	b0 b3       	[SP + 0x38] = R0;
    9322:	06 30       	R0 = R6;
    9324:	55 30       	R2 = P5;
    9326:	ff e3 3b fd 	CALL 0x8d9c <_mDNS_RegisterService>;
    932a:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    932c:	0d 20       	JUMP.S 0x9346 <_mDNS_RenameAndReregisterService+0xd2>;
    932e:	53 30       	R2 = P3;
    9330:	d8 a2       	R0 = [P3 + 0x2c];
    9332:	5d 91       	P5 = [P3];
    9334:	f0 b0       	[SP + 0xc] = R0;
    9336:	58 a1       	R0 = [P3 + 0x14];
    9338:	30 b1       	[SP + 0x10] = R0;
    933a:	77 b1       	[SP + 0x14] = R7;
    933c:	06 30       	R0 = R6;
    933e:	4c 30       	R1 = P4;
    9340:	ff e3 f2 fa 	CALL 0x8924 <_mDNS_AddRecordToService>;
    9344:	5d 32       	P3 = P5;
    9346:	00 0c       	CC = R0 == 0x0;
    9348:	03 10       	IF !CC JUMP 0x934e <_mDNS_RenameAndReregisterService+0xda>;
    934a:	43 0c       	CC = P3 == 0x0;
    934c:	f1 17       	IF !CC JUMP 0x932e <_mDNS_RenameAndReregisterService+0xba> (BP);
    934e:	29 e1 bc 02 	P1 = 0x2bc (X);		/*		P1=0x2bc(700) */
    9352:	8e 5b       	SP = SP + P1;
    9354:	77 90       	FP = [SP++];
    9356:	27 01       	RETS = [SP++];
    9358:	ab 05       	(R7:5, P5:3) = [SP++];
    935a:	10 00       	RTS;

0000935c <_SleepProxyServerCallback>:
_SleepProxyServerCallback():
    935c:	c4 04       	[--SP] = (P5:4);
    935e:	28 32       	P5 = R0;
    9360:	20 e1 fd bf 	R0 = -0x4003 (X);		/*		R0=0xffffbffd(-16387) */
    9364:	67 01       	[--SP] = RETS;
    9366:	29 e1 84 ff 	P1 = -0x7c (X);		/*		P1=0xffffff84(-124) */
    936a:	10 4f       	R0 <<= 0x2;
    936c:	8e 5b       	SP = SP + P1;
    936e:	21 32       	P4 = R1;
    9370:	02 08       	CC = R2 == R0;
    9372:	06 14       	IF !CC JUMP 0x937e <_SleepProxyServerCallback+0x22> (BP);
    9374:	45 30       	R0 = P5;
    9376:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    9378:	ff e3 7e ff 	CALL 0x9274 <_mDNS_RenameAndReregisterService>;
    937c:	7d 20       	JUMP.S 0x9476 <_SleepProxyServerCallback+0x11a>;
    937e:	20 e1 ff fe 	R0 = -0x101 (X);		/*		R0=0xfffffeff(-257) */
    9382:	40 4f       	R0 <<= 0x8;
    9384:	02 08       	CC = R2 == R0;
    9386:	78 14       	IF !CC JUMP 0x9476 <_SleepProxyServerCallback+0x11a> (BP);
    9388:	a8 e4 15 01 	R0 = B[P5 + 0x115] (Z);
    938c:	00 0c       	CC = R0 == 0x0;
    938e:	05 1c       	IF CC JUMP 0x9398 <_SleepProxyServerCallback+0x3c> (BP);
    9390:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    9392:	a8 e6 98 28 	B[P5 + 0x2898] = R0;
    9396:	70 20       	JUMP.S 0x9476 <_SleepProxyServerCallback+0x11a>;
    9398:	00 00       	NOP;
    939a:	28 e4 28 0a 	R0 = [P5 + 0x28a0];
    939e:	00 0c       	CC = R0 == 0x0;
    93a0:	00 02       	R0 = CC;
    93a2:	00 4b       	BITTGL (R0, 0x0);		/* bit  0 */
    93a4:	a8 e6 98 28 	B[P5 + 0x2898] = R0;
    93a8:	00 48       	CC = !BITTST (R0, 0x0);		/* bit  0 */
    93aa:	49 1c       	IF CC JUMP 0x943c <_SleepProxyServerCallback+0xe0> (BP);
    93ac:	a8 e4 94 28 	R0 = B[P5 + 0x2894] (Z);
    93b0:	f0 b0       	[SP + 0xc] = R0;
    93b2:	a8 e4 95 28 	R0 = B[P5 + 0x2895] (Z);
    93b6:	30 b1       	[SP + 0x10] = R0;
    93b8:	a8 e4 96 28 	R0 = B[P5 + 0x2896] (Z);
    93bc:	70 b1       	[SP + 0x14] = R0;
    93be:	a8 e4 97 28 	R0 = B[P5 + 0x2897] (Z);
    93c2:	b0 b1       	[SP + 0x18] = R0;
    93c4:	2a e1 d4 18 	P2 = 0x18d4 (X);		/*		P2=0x18d4(6356) */
    93c8:	95 5a       	P2 = P5 + P2;
    93ca:	46 30       	R0 = SP;
    93cc:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    93d0:	f2 bd       	[SP + 0x1c] = P2;
    93d2:	f1 61       	R1 = 0x3e (X);		/*		R1=0x3e( 62) */
    93d4:	02 e1 ac 27 	R2.L = 0x27ac;		/* (10156)	R2=0x27ac(10156) */
    93d8:	e8 65       	R0 += 0x3d;		/* ( 61) */
    93da:	ff e3 13 b6 	CALL 0x0 <_AddRecordToResponseList>;
    93de:	b0 e6 3c 00 	B[SP + 0x3c] = R0;
    93e2:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x3(  3) */
    93e6:	00 e1 bc 27 	R0.L = 0x27bc;		/* (10172)	R0=0x27bc(10172) */
    93ea:	f0 b0       	[SP + 0xc] = R0;
    93ec:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x27bc(10172) */
    93f0:	00 e1 94 27 	R0.L = 0x2794;		/* (10132)	R0=0x2794(10132) */
    93f4:	2a e5 28 0a 	P2 = [P5 + 0x28a0];
    93f8:	30 b1       	[SP + 0x10] = R0;
    93fa:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    93fc:	70 b1       	[SP + 0x14] = R0;
    93fe:	11 95       	R1 = W[P2] (Z);
    9400:	31 b7       	W[SP + 0x18] = R1;
    9402:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3e( 62) */
    9406:	01 e1 44 12 	R1.L = 0x1244;		/* (4676)	R1=0x1244(4676) */
    940a:	f1 b1       	[SP + 0x1c] = R1;
    940c:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    940e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x18d4 */
    9412:	71 e6 10 00 	W[SP + 0x20] = R1;
    9416:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    941a:	11 91       	R1 = [P2];
    941c:	f1 b2       	[SP + 0x2c] = R1;
    941e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1(  1) */
    9422:	01 e1 5c 93 	R1.L = 0x935c;		/* (-27812)	R1=0x935c <_SleepProxyServerCallback>(37724) */
    9426:	70 b2       	[SP + 0x24] = R0;
    9428:	b0 b2       	[SP + 0x28] = R0;
    942a:	31 b3       	[SP + 0x30] = R1;
    942c:	70 b3       	[SP + 0x34] = R0;
    942e:	b0 b3       	[SP + 0x38] = R0;
    9430:	56 30       	R2 = SP;
    9432:	45 30       	R0 = P5;
    9434:	4c 30       	R1 = P4;
    9436:	e2 65       	R2 += 0x3c;		/* ( 60) */
    9438:	ff e3 b2 fc 	CALL 0x8d9c <_mDNS_RegisterService>;
    943c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    9440:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    9444:	10 91       	R0 = [P2];
    9446:	00 0c       	CC = R0 == 0x0;
    9448:	17 1c       	IF CC JUMP 0x9476 <_SleepProxyServerCallback+0x11a> (BP);
    944a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x935c <_SleepProxyServerCallback>(37724) */
    944e:	01 e1 a4 27 	R1.L = 0x27a4;		/* (10148)	R1=0x27a4(10148) */
    9452:	a8 e4 98 28 	R0 = B[P5 + 0x2898] (Z);
    9456:	00 0c       	CC = R0 == 0x0;
    9458:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_AddRecordToResponseList>(  0) */
    945c:	00 e1 9c 27 	R0.L = 0x279c;		/* (10140)	R0=0x279c(10140) */
    9460:	01 07       	IF CC R0 = R1;
    9462:	f0 b0       	[SP + 0xc] = R0;
    9464:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x27a4(10148) */
    9468:	22 e4 c8 01 	R2 = [P4 + 0x720];
    946c:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    946e:	01 e1 d0 27 	R1.L = 0x27d0;		/* (10192)	R1=0x27d0(10192) */
    9472:	ff e3 c7 b5 	CALL 0x0 <_AddRecordToResponseList>;
    9476:	29 e1 7c 00 	P1 = 0x7c (X);		/*		P1=0x7c(124) */
    947a:	8e 5b       	SP = SP + P1;
    947c:	27 01       	RETS = [SP++];
    947e:	84 04       	(P5:4) = [SP++];
    9480:	10 00       	RTS;
	...

00009484 <_mDNS_AdvertiseDomains>:
_mDNS_AdvertiseDomains():
    9484:	ed 05       	[--SP] = (R7:5, P5:5);
    9486:	67 01       	[--SP] = RETS;
    9488:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    948c:	e6 6e       	SP += -0x24;		/* (-36) */
    948e:	28 30       	R5 = R0;
    9490:	2a 32       	P5 = R2;
    9492:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    9496:	32 e4 11 00 	R2 = [SP + 0x44];
    949a:	10 91       	R0 = [P2];
    949c:	39 30       	R7 = R1;
    949e:	36 e4 12 00 	R6 = [SP + 0x48];
    94a2:	02 08       	CC = R2 == R0;
    94a4:	0b 18       	IF CC JUMP 0x94ba <_mDNS_AdvertiseDomains+0x36>;
    94a6:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    94aa:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    94ae:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    94b0:	10 91       	R0 = [P2];
    94b2:	02 08       	CC = R2 == R0;
    94b4:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    94b6:	01 06       	IF !CC R0 = R1;
    94b8:	02 20       	JUMP.S 0x94bc <_mDNS_AdvertiseDomains+0x38>;
    94ba:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    94bc:	61 60       	R1 = 0xc (X);		/*		R1=0xc( 12) */
    94be:	b1 b5       	W[SP + 0xc] = R1;
    94c0:	21 e1 94 11 	R1 = 0x1194 (X);		/*		R1=0x1194(4500) */
    94c4:	31 b1       	[SP + 0x10] = R1;
    94c6:	b0 b1       	[SP + 0x18] = R0;
    94c8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    94ca:	41 60       	R1 = 0x8 (X);		/*		R1=0x8(  8) */
    94cc:	b1 e6 14 00 	B[SP + 0x14] = R1;
    94d0:	f0 b1       	[SP + 0x1c] = R0;
    94d2:	30 b2       	[SP + 0x20] = R0;
    94d4:	07 30       	R0 = R7;
    94d6:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    94d8:	ff e3 94 b5 	CALL 0x0 <_AddRecordToResponseList>;
    94dc:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    94e0:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    94e4:	6a 5f       	P5 = P2 + (P5 << 0x2);
    94e6:	20 e1 68 01 	R0 = 0x168 (X);		/*		R0=0x168(360) */
    94ea:	07 50       	R0 = R7 + R0;
    94ec:	29 91       	R1 = [P5];
    94ee:	ff e3 89 b5 	CALL 0x0 <_AddRecordToResponseList>;
    94f2:	00 0c       	CC = R0 == 0x0;
    94f4:	10 1c       	IF CC JUMP 0x9514 <_mDNS_AdvertiseDomains+0x90> (BP);
    94f6:	17 32       	P2 = R7;
    94f8:	0e 30       	R1 = R6;
    94fa:	50 a2       	R0 = [P2 + 0x24];
    94fc:	20 64       	R0 += 0x4;		/* (  4) */
    94fe:	ff e3 81 b5 	CALL 0x0 <_AddRecordToResponseList>;
    9502:	00 0c       	CC = R0 == 0x0;
    9504:	08 18       	IF CC JUMP 0x9514 <_mDNS_AdvertiseDomains+0x90>;
    9506:	26 6d       	SP += 0x24;		/* ( 36) */
    9508:	05 30       	R0 = R5;
    950a:	0f 30       	R1 = R7;
    950c:	27 01       	RETS = [SP++];
    950e:	ad 05       	(R7:5, P5:5) = [SP++];
    9510:	ff e2 32 f7 	JUMP.L 0x8374 <_mDNS_Register>;
    9514:	26 6d       	SP += 0x24;		/* ( 36) */
    9516:	27 01       	RETS = [SP++];
    9518:	20 e1 ff bf 	R0 = -0x4001 (X);		/*		R0=0xffffbfff(-16385) */
    951c:	10 4f       	R0 <<= 0x2;
    951e:	ad 05       	(R7:5, P5:5) = [SP++];
    9520:	10 00       	RTS;
	...

00009524 <_mDNS_NewMessageID>:
_mDNS_NewMessageID():
    9524:	f5 05       	[--SP] = (R7:6, P5:5);
    9526:	67 01       	[--SP] = RETS;
    9528:	a6 6f       	SP += -0xc;		/* (-12) */
    952a:	28 32       	P5 = R0;
    952c:	57 60       	R7 = 0xa (X);		/*		R7=0xa( 10) */
    952e:	80 e1 fe ff 	R0 = 0xfffe (Z);		/*		R0=0xfffe(65534) */
    9532:	ff e3 67 b5 	CALL 0x0 <_AddRecordToResponseList>;
    9536:	08 64       	R0 += 0x1;		/* (  1) */
    9538:	c1 42       	R1 = R0.L (Z);
    953a:	41 4e       	R1 >>= 0x8;
    953c:	42 43       	R2 = R0.B (Z);
    953e:	4b 43       	R3 = R1.B (Z);
    9540:	42 4f       	R2 <<= 0x8;
    9542:	93 56       	R2 = R3 | R2;
    9544:	2a e5 f2 07 	P2 = [P5 + 0x1fc8];
    9548:	d3 42       	R3 = R2.L (Z);
    954a:	07 20       	JUMP.S 0x9558 <_mDNS_NewMessageID+0x34>;
    954c:	00 00       	NOP;
    954e:	56 e4 7a 00 	R6 = W[P2 + 0xf4] (Z);
    9552:	33 08       	CC = R3 == R6;
    9554:	0e 1c       	IF CC JUMP 0x9570 <_mDNS_NewMessageID+0x4c> (BP);
    9556:	52 91       	P2 = [P2];
    9558:	42 0c       	CC = P2 == 0x0;
    955a:	f9 17       	IF !CC JUMP 0x954c <_mDNS_NewMessageID+0x28> (BP);
    955c:	15 20       	JUMP.S 0x9586 <_mDNS_NewMessageID+0x62>;
    955e:	00 00       	NOP;
    9560:	53 e4 99 00 	R3 = W[P2 + 0x132] (Z);
    9564:	1a 08       	CC = R2 == R3;
    9566:	05 1c       	IF CC JUMP 0x9570 <_mDNS_NewMessageID+0x4c> (BP);
    9568:	52 91       	P2 = [P2];
    956a:	42 0c       	CC = P2 == 0x0;
    956c:	f9 17       	IF !CC JUMP 0x955e <_mDNS_NewMessageID+0x3a> (BP);
    956e:	04 20       	JUMP.S 0x9576 <_mDNS_NewMessageID+0x52>;
    9570:	ff 67       	R7 += -0x1;		/* ( -1) */
    9572:	07 0c       	CC = R7 == 0x0;
    9574:	dd 17       	IF !CC JUMP 0x952e <_mDNS_NewMessageID+0xa> (BP);
    9576:	66 6c       	SP += 0xc;		/* ( 12) */
    9578:	40 43       	R0 = R0.B (Z);
    957a:	27 01       	RETS = [SP++];
    957c:	40 4f       	R0 <<= 0x8;
    957e:	49 43       	R1 = R1.B (Z);
    9580:	01 56       	R0 = R1 | R0;
    9582:	b5 05       	(R7:6, P5:5) = [SP++];
    9584:	10 00       	RTS;
    9586:	2a e5 4c 00 	P2 = [P5 + 0x130];
    958a:	d2 42       	R2 = R2.L (Z);
    958c:	ef 2f       	JUMP.S 0x956a <_mDNS_NewMessageID+0x46>;
	...

00009590 <_mDNS_StartQuery_internal>:
_mDNS_StartQuery_internal():
    9590:	e3 05       	[--SP] = (R7:4, P5:3);
    9592:	29 32       	P5 = R1;
    9594:	00 e8 0b 00 	LINK 0x2c;		/* (44) */
    9598:	20 32       	P4 = R0;
    959a:	2a e4 47 00 	R2 = [P5 + 0x11c];
    959e:	02 0c       	CC = R2 == 0x0;
    95a0:	2c 1c       	IF CC JUMP 0x95f8 <_mDNS_StartQuery_internal+0x68> (BP);
    95a2:	20 60       	R0 = 0x4 (X);		/*		R0=0x4(  4) */
    95a4:	02 08       	CC = R2 == R0;
    95a6:	04 18       	IF CC JUMP 0x95ae <_mDNS_StartQuery_internal+0x1e>;
    95a8:	31 60       	R1 = 0x6 (X);		/*		R1=0x6(  6) */
    95aa:	0a 08       	CC = R2 == R1;
    95ac:	11 14       	IF !CC JUMP 0x95ce <_mDNS_StartQuery_internal+0x3e> (BP);
    95ae:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    95b2:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    95b6:	68 e4 98 00 	R0 = W[P5 + 0x130] (Z);
    95ba:	11 95       	R1 = W[P2] (Z);
    95bc:	08 08       	CC = R0 == R1;
    95be:	1d 18       	IF CC JUMP 0x95f8 <_mDNS_StartQuery_internal+0x68>;
    95c0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    95c4:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    95c8:	11 95       	R1 = W[P2] (Z);
    95ca:	08 08       	CC = R0 == R1;
    95cc:	16 18       	IF CC JUMP 0x95f8 <_mDNS_StartQuery_internal+0x68>;
    95ce:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    95d2:	95 5a       	P2 = P5 + P2;
    95d4:	32 bd       	[SP + 0x10] = P2;
    95d6:	a8 e4 30 01 	R0 = B[P5 + 0x130] (Z);
    95da:	a9 e4 31 01 	R1 = B[P5 + 0x131] (Z);
    95de:	40 4f       	R0 <<= 0x8;
    95e0:	01 56       	R0 = R1 | R0;
    95e2:	f0 b0       	[SP + 0xc] = R0;
    95e4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x6(  6) */
    95e8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    95ea:	01 e1 ec 27 	R1.L = 0x27ec;		/* (10220)	R1=0x27ec(10220) */
    95ee:	ff e3 09 b5 	CALL 0x0 <_AddRecordToResponseList>;
    95f2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    95f4:	28 e6 47 00 	[P5 + 0x11c] = R0;
    95f8:	00 00       	NOP;
    95fa:	28 e4 47 00 	R0 = [P5 + 0x11c];
    95fe:	00 0c       	CC = R0 == 0x0;
    9600:	2b 14       	IF !CC JUMP 0x9656 <_mDNS_StartQuery_internal+0xc6> (BP);
    9602:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    9606:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    960a:	10 95       	R0 = W[P2] (Z);
    960c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    9610:	68 e6 98 00 	W[P5 + 0x130] = R0;
    9614:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    9618:	28 e4 46 00 	R0 = [P5 + 0x118];
    961c:	11 91       	R1 = [P2];
    961e:	08 08       	CC = R0 == R1;
    9620:	1b 18       	IF CC JUMP 0x9656 <_mDNS_StartQuery_internal+0xc6>;
    9622:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    9626:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    962a:	11 91       	R1 = [P2];
    962c:	08 08       	CC = R0 == R1;
    962e:	18 18       	IF CC JUMP 0x965e <_mDNS_StartQuery_internal+0xce>;
    9630:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    9634:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    9638:	11 91       	R1 = [P2];
    963a:	08 08       	CC = R0 == R1;
    963c:	11 1c       	IF CC JUMP 0x965e <_mDNS_StartQuery_internal+0xce> (BP);
    963e:	28 e4 90 00 	R0 = [P5 + 0x240];
    9642:	00 0c       	CC = R0 == 0x0;
    9644:	0d 14       	IF !CC JUMP 0x965e <_mDNS_StartQuery_internal+0xce> (BP);
    9646:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    964a:	95 5a       	P2 = P5 + P2;
    964c:	42 30       	R0 = P2;
    964e:	ff e3 d9 b4 	CALL 0x0 <_AddRecordToResponseList>;
    9652:	00 0c       	CC = R0 == 0x0;
    9654:	05 14       	IF !CC JUMP 0x965e <_mDNS_StartQuery_internal+0xce> (BP);
    9656:	44 30       	R0 = P4;
    9658:	ff e3 66 ff 	CALL 0x9524 <_mDNS_NewMessageID>;
    965c:	06 20       	JUMP.S 0x9668 <_mDNS_StartQuery_internal+0xd8>;
    965e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    9662:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    9666:	10 95       	R0 = W[P2] (Z);
    9668:	68 e6 99 00 	W[P5 + 0x132] = R0;
    966c:	20 e4 52 00 	R0 = [P4 + 0x148];
    9670:	00 0c       	CC = R0 == 0x0;
    9672:	02 10       	IF !CC JUMP 0x9676 <_mDNS_StartQuery_internal+0xe6>;
    9674:	2b 23       	JUMP.S 0x9cca <_mDNS_StartQuery_internal+0x73a>;
    9676:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    967a:	95 5a       	P2 = P5 + P2;
    967c:	7a 30       	R7 = P2;
    967e:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    9682:	4f 50       	R1 = R7 + R1;
    9684:	42 30       	R0 = P2;
    9686:	ff e3 bd b4 	CALL 0x0 <_AddRecordToResponseList>;
    968a:	c0 42       	R0 = R0.L (Z);
    968c:	22 e1 00 01 	R2 = 0x100 (X);		/*		R2=0x100(256) */
    9690:	10 0a       	CC = R0 <= R2 (IU);
    9692:	10 1c       	IF CC JUMP 0x96b2 <_mDNS_StartQuery_internal+0x122> (BP);
    9694:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    9698:	ff e3 b4 b4 	CALL 0x0 <_AddRecordToResponseList>;
    969c:	f0 b0       	[SP + 0xc] = R0;
    969e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x100(256) */
    96a2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    96a4:	01 e1 7c 28 	R1.L = 0x287c;		/* (10364)	R1=0x287c(10364) */
    96a8:	17 30       	R2 = R7;
    96aa:	ff e3 ab b4 	CALL 0x0 <_AddRecordToResponseList>;
    96ae:	98 63       	R0 = -0xd (X);		/*		R0=0xfffffff3(-13) */
    96b0:	0e 23       	JUMP.S 0x9ccc <_mDNS_StartQuery_internal+0x73c>;
    96b2:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    96b6:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    96ba:	2e e4 46 00 	R6 = [P5 + 0x118];
    96be:	11 91       	R1 = [P2];
    96c0:	0e 08       	CC = R6 == R1;
    96c2:	0b 18       	IF CC JUMP 0x96d8 <_mDNS_StartQuery_internal+0x148>;
    96c4:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    96c8:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    96cc:	10 91       	R0 = [P2];
    96ce:	06 08       	CC = R6 == R0;
    96d0:	04 18       	IF CC JUMP 0x96d8 <_mDNS_StartQuery_internal+0x148>;
    96d2:	2a e1 30 01 	P2 = 0x130 (X);		/*		P2=0x130 <_ExpireDupSuppressInfo>(304) */
    96d6:	03 20       	JUMP.S 0x96dc <_mDNS_StartQuery_internal+0x14c>;
    96d8:	2a e1 3c 01 	P2 = 0x13c (X);		/*		P2=0x13c(316) */
    96dc:	94 5a       	P2 = P4 + P2;
    96de:	02 20       	JUMP.S 0x96e2 <_mDNS_StartQuery_internal+0x152>;
    96e0:	10 32       	P2 = R0;
    96e2:	10 91       	R0 = [P2];
    96e4:	00 0c       	CC = R0 == 0x0;
    96e6:	16 18       	IF CC JUMP 0x9712 <_mDNS_StartQuery_internal+0x182>;
    96e8:	55 30       	R2 = P5;
    96ea:	10 08       	CC = R0 == R2;
    96ec:	fa 17       	IF !CC JUMP 0x96e0 <_mDNS_StartQuery_internal+0x150> (BP);
    96ee:	00 0c       	CC = R0 == 0x0;
    96f0:	11 1c       	IF CC JUMP 0x9712 <_mDNS_StartQuery_internal+0x182> (BP);
    96f2:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    96f6:	ff e3 85 b4 	CALL 0x0 <_AddRecordToResponseList>;
    96fa:	f0 b0       	[SP + 0xc] = R0;
    96fc:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x287c(10364) */
    9700:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    9702:	35 bd       	[SP + 0x10] = P5;
    9704:	01 e1 b0 28 	R1.L = 0x28b0;		/* (10416)	R1=0x28b0(10416) */
    9708:	17 30       	R2 = R7;
    970a:	ff e3 7b b4 	CALL 0x0 <_AddRecordToResponseList>;
    970e:	a8 63       	R0 = -0xb (X);		/*		R0=0xfffffff5(-11) */
    9710:	de 22       	JUMP.S 0x9ccc <_mDNS_StartQuery_internal+0x73c>;
    9712:	55 93       	[P2] = P5;
    9714:	06 0c       	CC = R6 == 0x0;
    9716:	26 18       	IF CC JUMP 0x9762 <_mDNS_StartQuery_internal+0x1d2>;
    9718:	0e 08       	CC = R6 == R1;
    971a:	24 18       	IF CC JUMP 0x9762 <_mDNS_StartQuery_internal+0x1d2>;
    971c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x13c */
    9720:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    9724:	10 91       	R0 = [P2];
    9726:	06 08       	CC = R6 == R0;
    9728:	1d 18       	IF CC JUMP 0x9762 <_mDNS_StartQuery_internal+0x1d2>;
    972a:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    972e:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    9732:	10 91       	R0 = [P2];
    9734:	06 08       	CC = R6 == R0;
    9736:	16 1c       	IF CC JUMP 0x9762 <_mDNS_StartQuery_internal+0x1d2> (BP);
    9738:	0e 30       	R1 = R6;
    973a:	20 e4 f7 07 	R0 = [P4 + 0x1fdc];
    973e:	ff e3 71 c1 	CALL 0x1a20 <_FirstInterfaceForID.clone.0>;
    9742:	00 0c       	CC = R0 == 0x0;
    9744:	0f 14       	IF !CC JUMP 0x9762 <_mDNS_StartQuery_internal+0x1d2> (BP);
    9746:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    974a:	ff e3 5b b4 	CALL 0x0 <_AddRecordToResponseList>;
    974e:	30 b1       	[SP + 0x10] = R0;
    9750:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x28b0(10416) */
    9754:	f7 b0       	[SP + 0xc] = R7;
    9756:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    9758:	01 e1 00 29 	R1.L = 0x2900;		/* (10496)	R1=0x2900(10496) */
    975c:	16 30       	R2 = R6;
    975e:	ff e3 51 b4 	CALL 0x0 <_AddRecordToResponseList>;
    9762:	03 68       	P3 = 0x0 (X);		/*		P3=0x0(  0) */
    9764:	6b 93       	[P5] = P3;
    9766:	07 30       	R0 = R7;
    9768:	ff e3 4c b4 	CALL 0x0 <_AddRecordToResponseList>;
    976c:	28 30       	R5 = R0;
    976e:	68 b0       	[P5 + 0x4] = R0;
    9770:	07 30       	R0 = R7;
    9772:	ff e3 47 b4 	CALL 0x0 <_AddRecordToResponseList>;
    9776:	41 e1 d5 20 	R1.H = 0x20d5;		/* (8405)	R1=0x20d52900(550840576) */
    977a:	30 30       	R6 = R0;
    977c:	01 e1 39 6b 	R1.L = 0x6b39;		/* (27449)	R1=0x20d56b39(550857529) */
    9780:	ff e3 40 b4 	CALL 0x0 <_AddRecordToResponseList>;
    9784:	21 e1 f3 01 	R1 = 0x1f3 (X);		/*		R1=0x1f3(499) */
    9788:	30 4e       	R0 >>= 0x6;
    978a:	c8 40       	R0 *= R1;
    978c:	86 53       	R6 = R6 - R0;
    978e:	15 30       	R2 = R5;
    9790:	0f 30       	R1 = R7;
    9792:	f6 b0       	[SP + 0xc] = R6;
    9794:	44 30       	R0 = P4;
    9796:	ff e3 9b c6 	CALL 0x24cc <_CheckForSoonToExpireRecords>;
    979a:	a8 b0       	[P5 + 0x8] = R0;
    979c:	20 e4 37 00 	R0 = [P4 + 0xdc];
    97a0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    97a4:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    97a8:	e8 b0       	[P5 + 0xc] = R0;
    97aa:	10 91       	R0 = [P2];
    97ac:	19 60       	R1 = 0x3 (X);		/*		R1=0x3(  3) */
    97ae:	10 64       	R0 += 0x2;		/* (  2) */
    97b0:	ff e3 28 b4 	CALL 0x0 <_AddRecordToResponseList>;
    97b4:	28 b1       	[P5 + 0x10] = R0;
    97b6:	20 e4 44 00 	R0 = [P4 + 0x110];
    97ba:	a8 b1       	[P5 + 0x18] = R0;
    97bc:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    97be:	a8 e6 b8 00 	B[P5 + 0xb8] = R0;
    97c2:	6b bd       	[P5 + 0x14] = P3;
    97c4:	eb bd       	[P5 + 0x1c] = P3;
    97c6:	2b be       	[P5 + 0x20] = P3;
    97c8:	6b be       	[P5 + 0x24] = P3;
    97ca:	ab be       	[P5 + 0x28] = P3;
    97cc:	eb be       	[P5 + 0x2c] = P3;
    97ce:	2b bf       	[P5 + 0x30] = P3;
    97d0:	44 30       	R0 = P4;
    97d2:	4d 30       	R1 = P5;
    97d4:	ff e3 16 b4 	CALL 0x0 <_AddRecordToResponseList>;
    97d8:	68 b3       	[P5 + 0x34] = R0;
    97da:	28 e4 92 00 	R0 = [P5 + 0x248];
    97de:	00 0c       	CC = R0 == 0x0;
    97e0:	0d 1c       	IF CC JUMP 0x97fa <_mDNS_StartQuery_internal+0x26a> (BP);
    97e2:	28 e4 46 00 	R0 = [P5 + 0x118];
    97e6:	f0 b0       	[SP + 0xc] = R0;
    97e8:	6a e5 1a 01 	R2 = W[P5 + 0x234] (X);
    97ec:	44 30       	R0 = P4;
    97ee:	0f 30       	R1 = R7;
    97f0:	ff e3 ac b9 	CALL 0xb48 <_ShouldSuppressQuery>;
    97f4:	28 e6 2d 00 	[P5 + 0xb4] = R0;
    97f8:	03 20       	JUMP.S 0x97fe <_mDNS_StartQuery_internal+0x26e>;
    97fa:	2b e7 2d 00 	[P5 + 0xb4] = P3;
    97fe:	2f e1 1c 01 	FP = 0x11c (X);		/*		FP=0x11c(284) */
    9802:	bd 5a       	P2 = P5 + FP;
    9804:	23 e5 4c 00 	P3 = [P4 + 0x130];
    9808:	26 e1 34 01 	R6 = 0x134 (X);		/*		R6=0x134(308) */
    980c:	6a 30       	R5 = P2;
    980e:	5c 20       	JUMP.S 0x98c6 <_mDNS_StartQuery_internal+0x336>;
    9810:	00 00       	NOP;
    9812:	19 e4 46 00 	R1 = [P3 + 0x118];
    9816:	28 e4 46 00 	R0 = [P5 + 0x118];
    981a:	01 08       	CC = R1 == R0;
    981c:	53 14       	IF !CC JUMP 0x98c2 <_mDNS_StartQuery_internal+0x332> (BP);
    981e:	18 e4 47 00 	R0 = [P3 + 0x11c];
    9822:	00 0c       	CC = R0 == 0x0;
    9824:	05 14       	IF !CC JUMP 0x982e <_mDNS_StartQuery_internal+0x29e> (BP);
    9826:	28 e4 47 00 	R0 = [P5 + 0x11c];
    982a:	00 0c       	CC = R0 == 0x0;
    982c:	0e 1c       	IF CC JUMP 0x9848 <_mDNS_StartQuery_internal+0x2b8> (BP);
    982e:	bb 5a       	P2 = P3 + FP;
    9830:	42 30       	R0 = P2;
    9832:	0d 30       	R1 = R5;
    9834:	ff e3 e6 b3 	CALL 0x0 <_AddRecordToResponseList>;
    9838:	00 0c       	CC = R0 == 0x0;
    983a:	44 1c       	IF CC JUMP 0x98c2 <_mDNS_StartQuery_internal+0x332> (BP);
    983c:	59 e4 98 00 	R1 = W[P3 + 0x130] (Z);
    9840:	68 e4 98 00 	R0 = W[P5 + 0x130] (Z);
    9844:	01 08       	CC = R1 == R0;
    9846:	3e 14       	IF !CC JUMP 0x98c2 <_mDNS_StartQuery_internal+0x332> (BP);
    9848:	00 00       	NOP;
    984a:	19 e4 8d 00 	R1 = [P3 + 0x234];
    984e:	28 e4 8d 00 	R0 = [P5 + 0x234];
    9852:	01 08       	CC = R1 == R0;
    9854:	37 14       	IF !CC JUMP 0x98c2 <_mDNS_StartQuery_internal+0x332> (BP);
    9856:	18 e4 8e 00 	R0 = [P3 + 0x238];
    985a:	00 0c       	CC = R0 == 0x0;
    985c:	09 1c       	IF CC JUMP 0x986e <_mDNS_StartQuery_internal+0x2de> (BP);
    985e:	58 e5 99 00 	R0 = W[P3 + 0x132] (X);
    9862:	06 c4 00 80 	R0 = ABS R0 (V);
    9866:	80 43       	R0 = -R0;
    9868:	78 49       	CC = BITTST (R0, 0xf);		/* bit 15 */
    986a:	00 02       	R0 = CC;
    986c:	02 20       	JUMP.S 0x9870 <_mDNS_StartQuery_internal+0x2e0>;
    986e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    9870:	08 30       	R1 = R0;
    9872:	28 e4 8e 00 	R0 = [P5 + 0x238];
    9876:	01 4b       	BITTGL (R1, 0x0);		/* bit  0 */
    9878:	00 0c       	CC = R0 == 0x0;
    987a:	09 1c       	IF CC JUMP 0x988c <_mDNS_StartQuery_internal+0x2fc> (BP);
    987c:	68 e5 99 00 	R0 = W[P5 + 0x132] (X);
    9880:	06 c4 00 80 	R0 = ABS R0 (V);
    9884:	80 43       	R0 = -R0;
    9886:	78 49       	CC = BITTST (R0, 0xf);		/* bit 15 */
    9888:	00 02       	R0 = CC;
    988a:	02 20       	JUMP.S 0x988e <_mDNS_StartQuery_internal+0x2fe>;
    988c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    988e:	01 08       	CC = R1 == R0;
    9890:	19 1c       	IF CC JUMP 0x98c2 <_mDNS_StartQuery_internal+0x332> (BP);
    9892:	58 a3       	R0 = [P3 + 0x34];
    9894:	00 0c       	CC = R0 == 0x0;
    9896:	04 1c       	IF CC JUMP 0x989e <_mDNS_StartQuery_internal+0x30e> (BP);
    9898:	68 a3       	R0 = [P5 + 0x34];
    989a:	00 0c       	CC = R0 == 0x0;
    989c:	13 1c       	IF CC JUMP 0x98c2 <_mDNS_StartQuery_internal+0x332> (BP);
    989e:	00 00       	NOP;
    98a0:	19 e4 2d 00 	R1 = [P3 + 0xb4];
    98a4:	28 e4 2d 00 	R0 = [P5 + 0xb4];
    98a8:	01 08       	CC = R1 == R0;
    98aa:	0c 14       	IF !CC JUMP 0x98c2 <_mDNS_StartQuery_internal+0x332> (BP);
    98ac:	59 a0       	R1 = [P3 + 0x4];
    98ae:	68 a0       	R0 = [P5 + 0x4];
    98b0:	01 08       	CC = R1 == R0;
    98b2:	08 10       	IF !CC JUMP 0x98c2 <_mDNS_StartQuery_internal+0x332>;
    98b4:	4b 30       	R1 = P3;
    98b6:	31 50       	R0 = R1 + R6;
    98b8:	0f 30       	R1 = R7;
    98ba:	ff e3 a3 b3 	CALL 0x0 <_AddRecordToResponseList>;
    98be:	00 0c       	CC = R0 == 0x0;
    98c0:	08 14       	IF !CC JUMP 0x98d0 <_mDNS_StartQuery_internal+0x340> (BP);
    98c2:	00 00       	NOP;
    98c4:	5b 91       	P3 = [P3];
    98c6:	43 0c       	CC = P3 == 0x0;
    98c8:	04 18       	IF CC JUMP 0x98d0 <_mDNS_StartQuery_internal+0x340>;
    98ca:	6b 08       	CC = P3 == P5;
    98cc:	a2 17       	IF !CC JUMP 0x9810 <_mDNS_StartQuery_internal+0x280> (BP);
    98ce:	03 68       	P3 = 0x0 (X);		/*		P3=0x0(  0) */
    98d0:	00 00       	NOP;
    98d2:	20 e4 37 00 	R0 = [P4 + 0xdc];
    98d6:	ab bf       	[P5 + 0x38] = P3;
    98d8:	2a e1 e0 00 	P2 = 0xe0 (X);		/*		P2=0xe0(224) */
    98dc:	03 68       	P3 = 0x0 (X);		/*		P3=0x0(  0) */
    98de:	95 5a       	P2 = P5 + P2;
    98e0:	28 e6 2b 00 	[P5 + 0xac] = R0;
    98e4:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
    98e6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3(  3) */
    98ea:	42 30       	R0 = P2;
    98ec:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    98f0:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
    98f2:	eb bf       	[P5 + 0x3c] = P3;
    98f4:	2b e7 28 00 	[P5 + 0xa0] = P3;
    98f8:	2b e7 29 00 	[P5 + 0xa4] = P3;
    98fc:	2b e7 2a 00 	[P5 + 0xa8] = P3;
    9900:	2b e7 2c 00 	[P5 + 0xb0] = P3;
    9904:	2b e7 30 00 	[P5 + 0xc0] = P3;
    9908:	2b e7 31 00 	[P5 + 0xc4] = P3;
    990c:	2b e7 32 00 	[P5 + 0xc8] = P3;
    9910:	ae e6 d8 00 	B[P5 + 0xd8] = R6;
    9914:	2b e7 37 00 	[P5 + 0xdc] = P3;
    9918:	ff e3 74 b3 	CALL 0x0 <_AddRecordToResponseList>;
    991c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0xe0 */
    9920:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    9924:	10 95       	R0 = W[P2] (Z);
    9926:	68 e6 7a 00 	W[P5 + 0xf4] = R0;
    992a:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    992c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    9930:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    9934:	28 e6 40 00 	[P5 + 0x100] = R0;
    9938:	10 91       	R0 = [P2];
    993a:	28 e6 44 00 	[P5 + 0x110] = R0;
    993e:	28 e6 33 00 	[P5 + 0xcc] = R0;
    9942:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    9944:	51 a0       	R1 = [P2 + 0x4];
    9946:	a8 e4 51 02 	R0 = B[P5 + 0x251] (Z);
    994a:	2b e7 3e 00 	[P5 + 0xf8] = P3;
    994e:	ae e6 fe 00 	B[P5 + 0xfe] = R6;
    9952:	2b e7 41 00 	[P5 + 0x104] = P3;
    9956:	2b e7 42 00 	[P5 + 0x108] = P3;
    995a:	6a e6 86 00 	W[P5 + 0x10c] = R2;
    995e:	29 e6 45 00 	[P5 + 0x114] = R1;
    9962:	29 e6 34 00 	[P5 + 0xd0] = R1;
    9966:	6a e6 6b 00 	W[P5 + 0xd6] = R2;
    996a:	6a e6 6a 00 	W[P5 + 0xd4] = R2;
    996e:	2b e7 2f 00 	[P5 + 0xbc] = P3;
    9972:	00 0c       	CC = R0 == 0x0;
    9974:	49 1c       	IF CC JUMP 0x9a06 <_mDNS_StartQuery_internal+0x476> (BP);
    9976:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    9978:	a8 e6 b9 00 	B[P5 + 0xb9] = R0;
    997c:	07 30       	R0 = R7;
    997e:	ff e3 41 b3 	CALL 0x0 <_AddRecordToResponseList>;
    9982:	41 e1 d5 20 	R1.H = 0x20d5;		/* (8405)	R1=0x20d50000(550830080) */
    9986:	30 30       	R6 = R0;
    9988:	01 e1 39 6b 	R1.L = 0x6b39;		/* (27449)	R1=0x20d56b39(550857529) */
    998c:	ff e3 3a b3 	CALL 0x0 <_AddRecordToResponseList>;
    9990:	82 c6 d0 83 	R1 = R0 >> 0x6;
    9994:	6a a0       	R2 = [P5 + 0x4];
    9996:	20 e1 f3 01 	R0 = 0x1f3 (X);		/*		R0=0x1f3(499) */
    999a:	c1 40       	R1 *= R0;
    999c:	f7 b0       	[SP + 0xc] = R7;
    999e:	4e 52       	R1 = R6 - R1;
    99a0:	44 30       	R0 = P4;
    99a2:	ff e3 21 c5 	CALL 0x23e4 <_CacheGroupForName>;
    99a6:	10 32       	P2 = R0;
    99a8:	42 0c       	CC = P2 == 0x0;
    99aa:	03 1c       	IF CC JUMP 0x99b0 <_mDNS_StartQuery_internal+0x420> (BP);
    99ac:	93 ac       	P3 = [P2 + 0x8];
    99ae:	23 20       	JUMP.S 0x99f4 <_mDNS_StartQuery_internal+0x464>;
    99b0:	03 68       	P3 = 0x0 (X);		/*		P3=0x0(  0) */
    99b2:	21 20       	JUMP.S 0x99f4 <_mDNS_StartQuery_internal+0x464>;
    99b4:	73 30       	R6 = P3;
    99b6:	26 64       	R6 += 0x4;		/* (  4) */
    99b8:	06 30       	R0 = R6;
    99ba:	4d 30       	R1 = P5;
    99bc:	ff e3 22 b3 	CALL 0x0 <_AddRecordToResponseList>;
    99c0:	00 0c       	CC = R0 == 0x0;
    99c2:	16 1c       	IF CC JUMP 0x99ee <_mDNS_StartQuery_internal+0x45e> (BP);
    99c4:	38 91       	R0 = [FP];
    99c6:	00 0c       	CC = R0 == 0x0;
    99c8:	0f 1c       	IF CC JUMP 0x99e6 <_mDNS_StartQuery_internal+0x456> (BP);
    99ca:	59 a2       	R1 = [P3 + 0x24];
    99cc:	21 64       	R1 += 0x4;		/* (  4) */
    99ce:	15 30       	R2 = R5;
    99d0:	06 30       	R0 = R6;
    99d2:	ff e3 17 b3 	CALL 0x0 <_AddRecordToResponseList>;
    99d6:	10 30       	R2 = R0;
    99d8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x6b39(27449) */
    99dc:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    99de:	01 e1 5c 29 	R1.L = 0x295c;		/* (10588)	R1=0x295c(10588) */
    99e2:	ff e3 0f b3 	CALL 0x0 <_AddRecordToResponseList>;
    99e6:	44 30       	R0 = P4;
    99e8:	4b 30       	R1 = P3;
    99ea:	ff e3 e9 d1 	CALL 0x3dbc <_mDNS_PurgeCacheResourceRecord>;
    99ee:	00 00       	NOP;
    99f0:	5b 91       	P3 = [P3];
    99f2:	07 20       	JUMP.S 0x9a00 <_mDNS_StartQuery_internal+0x470>;
    99f4:	4f e1 00 00 	FP.H = 0x0;		/* (  0)	FP=0x11c */
    99f8:	6c 30       	R5 = P4;
    99fa:	0f e1 00 00 	FP.L = 0x0;		/* (  0)	FP=0x0 <_AddRecordToResponseList> */
    99fe:	bd 65       	R5 += 0x37;		/* ( 55) */
    9a00:	43 0c       	CC = P3 == 0x0;
    9a02:	d9 17       	IF !CC JUMP 0x99b4 <_mDNS_StartQuery_internal+0x424> (BP);
    9a04:	03 20       	JUMP.S 0x9a0a <_mDNS_StartQuery_internal+0x47a>;
    9a06:	ae e6 b9 00 	B[P5 + 0xb9] = R6;
    9a0a:	aa af       	P2 = [P5 + 0x38];
    9a0c:	42 0c       	CC = P2 == 0x0;
    9a0e:	03 1c       	IF CC JUMP 0x9a14 <_mDNS_StartQuery_internal+0x484> (BP);
    9a10:	50 a3       	R0 = [P2 + 0x34];
    9a12:	68 b3       	[P5 + 0x34] = R0;
    9a14:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    9a16:	28 e6 11 00 	[P5 + 0x44] = R0;
    9a1a:	28 e6 14 00 	[P5 + 0x50] = R0;
    9a1e:	28 e6 17 00 	[P5 + 0x5c] = R0;
    9a22:	28 e6 1a 00 	[P5 + 0x68] = R0;
    9a26:	28 e6 1d 00 	[P5 + 0x74] = R0;
    9a2a:	28 e6 20 00 	[P5 + 0x80] = R0;
    9a2e:	28 e6 23 00 	[P5 + 0x8c] = R0;
    9a32:	28 e6 26 00 	[P5 + 0x98] = R0;
    9a36:	a8 a0       	R0 = [P5 + 0x8];
    9a38:	00 0c       	CC = R0 == 0x0;
    9a3a:	19 1c       	IF CC JUMP 0x9a6c <_mDNS_StartQuery_internal+0x4dc> (BP);
    9a3c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    9a40:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    9a44:	11 91       	R1 = [P2];
    9a46:	01 0c       	CC = R1 == 0x0;
    9a48:	12 1c       	IF CC JUMP 0x9a6c <_mDNS_StartQuery_internal+0x4dc> (BP);
    9a4a:	26 e4 37 00 	R6 = [P4 + 0xdc];
    9a4e:	b0 53       	R6 = R0 - R6;
    9a50:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    9a54:	ff e3 d6 b2 	CALL 0x0 <_AddRecordToResponseList>;
    9a58:	30 b1       	[SP + 0x10] = R0;
    9a5a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x295c(10588) */
    9a5e:	f7 b0       	[SP + 0xc] = R7;
    9a60:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    9a62:	01 e1 84 29 	R1.L = 0x2984;		/* (10628)	R1=0x2984(10628) */
    9a66:	16 30       	R2 = R6;
    9a68:	ff e3 cc b2 	CALL 0x0 <_AddRecordToResponseList>;
    9a6c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    9a70:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    9a74:	28 e4 46 00 	R0 = [P5 + 0x118];
    9a78:	11 91       	R1 = [P2];
    9a7a:	08 08       	CC = R0 == R1;
    9a7c:	08 18       	IF CC JUMP 0x9a8c <_mDNS_StartQuery_internal+0x4fc>;
    9a7e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    9a82:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    9a86:	11 91       	R1 = [P2];
    9a88:	08 08       	CC = R0 == R1;
    9a8a:	08 14       	IF !CC JUMP 0x9a9a <_mDNS_StartQuery_internal+0x50a> (BP);
    9a8c:	20 e4 50 00 	R0 = [P4 + 0x140];
    9a90:	00 0c       	CC = R0 == 0x0;
    9a92:	20 15       	IF !CC JUMP 0x9cd2 <_mDNS_StartQuery_internal+0x742> (BP);
    9a94:	25 e7 50 00 	[P4 + 0x140] = P5;
    9a98:	1e 21       	JUMP.S 0x9cd4 <_mDNS_StartQuery_internal+0x744>;
    9a9a:	00 00       	NOP;
    9a9c:	20 e4 4d 00 	R0 = [P4 + 0x134];
    9aa0:	00 0c       	CC = R0 == 0x0;
    9aa2:	03 14       	IF !CC JUMP 0x9aa8 <_mDNS_StartQuery_internal+0x518> (BP);
    9aa4:	25 e7 4d 00 	[P4 + 0x134] = P5;
    9aa8:	00 00       	NOP;
    9aaa:	68 e4 99 00 	R0 = W[P5 + 0x132] (Z);
    9aae:	00 0c       	CC = R0 == 0x0;
    9ab0:	9d 1c       	IF CC JUMP 0x9bea <_mDNS_StartQuery_internal+0x65a> (BP);
    9ab2:	44 30       	R0 = P4;
    9ab4:	4d 30       	R1 = P5;
    9ab6:	ff e3 47 d5 	CALL 0x4544 <_SetValidDNSServers>;
    9aba:	30 30       	R6 = R0;
    9abc:	a8 e4 50 02 	R0 = B[P5 + 0x250] (Z);
    9ac0:	00 0c       	CC = R0 == 0x0;
    9ac2:	0f 1c       	IF CC JUMP 0x9ae0 <_mDNS_StartQuery_internal+0x550> (BP);
    9ac4:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    9ac8:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    9acc:	10 91       	R0 = [P2];
    9ace:	f0 40       	R0 *= R6;
    9ad0:	21 e4 37 00 	R1 = [P4 + 0xdc];
    9ad4:	08 50       	R0 = R0 + R1;
    9ad6:	00 0c       	CC = R0 == 0x0;
    9ad8:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    9ada:	01 07       	IF CC R0 = R1;
    9adc:	28 e6 2f 00 	[P5 + 0xbc] = R0;
    9ae0:	4f e1 00 00 	FP.H = 0x0;		/* (  0)	FP=0x0 <_AddRecordToResponseList> */
    9ae4:	ab af       	P3 = [P5 + 0x38];
    9ae6:	0f e1 00 00 	FP.L = 0x0;		/* (  0)	FP=0x0 <_AddRecordToResponseList> */
    9aea:	43 0c       	CC = P3 == 0x0;
    9aec:	31 1c       	IF CC JUMP 0x9b4e <_mDNS_StartQuery_internal+0x5be> (BP);
    9aee:	18 e4 33 00 	R0 = [P3 + 0xcc];
    9af2:	19 e4 34 00 	R1 = [P3 + 0xd0];
    9af6:	28 e6 33 00 	[P5 + 0xcc] = R0;
    9afa:	18 e4 32 00 	R0 = [P3 + 0xc8];
    9afe:	28 e6 32 00 	[P5 + 0xc8] = R0;
    9b02:	38 91       	R0 = [FP];
    9b04:	29 e6 34 00 	[P5 + 0xd0] = R1;
    9b08:	00 0c       	CC = R0 == 0x0;
    9b0a:	4a 1c       	IF CC JUMP 0x9b9e <_mDNS_StartQuery_internal+0x60e> (BP);
    9b0c:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    9b10:	ff e3 78 b2 	CALL 0x0 <_AddRecordToResponseList>;
    9b14:	2a e5 32 00 	P2 = [P5 + 0xc8];
    9b18:	42 0c       	CC = P2 == 0x0;
    9b1a:	e2 1c       	IF CC JUMP 0x9cde <_mDNS_StartQuery_internal+0x74e> (BP);
    9b1c:	4a 30       	R1 = P2;
    9b1e:	41 64       	R1 += 0x8;		/* (  8) */
    9b20:	93 e5 1c 00 	R3 = B[P2 + 0x1c] (X);
    9b24:	92 e5 1d 00 	R2 = B[P2 + 0x1d] (X);
    9b28:	5b 43       	R3 = R3.B (Z);
    9b2a:	43 4f       	R3 <<= 0x8;
    9b2c:	52 43       	R2 = R2.B (Z);
    9b2e:	9a 56       	R2 = R2 | R3;
    9b30:	f1 b1       	[SP + 0x1c] = R1;
    9b32:	70 b1       	[SP + 0x14] = R0;
    9b34:	32 b2       	[SP + 0x20] = R2;
    9b36:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1(  1) */
    9b3a:	f3 bc       	[SP + 0xc] = P3;
    9b3c:	37 b1       	[SP + 0x10] = R7;
    9b3e:	b6 b1       	[SP + 0x18] = R6;
    9b40:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    9b42:	01 e1 e4 29 	R1.L = 0x29e4;		/* (10724)	R1=0x29e4(10724) */
    9b46:	55 30       	R2 = P5;
    9b48:	ff e3 5c b2 	CALL 0x0 <_AddRecordToResponseList>;
    9b4c:	29 20       	JUMP.S 0x9b9e <_mDNS_StartQuery_internal+0x60e>;
    9b4e:	44 30       	R0 = P4;
    9b50:	4d 30       	R1 = P5;
    9b52:	ff e3 01 d6 	CALL 0x4754 <_GetServerForQuestion>;
    9b56:	28 e6 32 00 	[P5 + 0xc8] = R0;
    9b5a:	38 91       	R0 = [FP];
    9b5c:	00 0c       	CC = R0 == 0x0;
    9b5e:	20 1c       	IF CC JUMP 0x9b9e <_mDNS_StartQuery_internal+0x60e> (BP);
    9b60:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    9b64:	ff e3 4e b2 	CALL 0x0 <_AddRecordToResponseList>;
    9b68:	2a e5 32 00 	P2 = [P5 + 0xc8];
    9b6c:	42 0c       	CC = P2 == 0x0;
    9b6e:	c1 1c       	IF CC JUMP 0x9cf0 <_mDNS_StartQuery_internal+0x760> (BP);
    9b70:	4a 30       	R1 = P2;
    9b72:	41 64       	R1 += 0x8;		/* (  8) */
    9b74:	93 e5 1c 00 	R3 = B[P2 + 0x1c] (X);
    9b78:	92 e5 1d 00 	R2 = B[P2 + 0x1d] (X);
    9b7c:	5b 43       	R3 = R3.B (Z);
    9b7e:	43 4f       	R3 <<= 0x8;
    9b80:	52 43       	R2 = R2.B (Z);
    9b82:	9a 56       	R2 = R2 | R3;
    9b84:	b1 b1       	[SP + 0x18] = R1;
    9b86:	30 b1       	[SP + 0x10] = R0;
    9b88:	f2 b1       	[SP + 0x1c] = R2;
    9b8a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x29e4(10724) */
    9b8e:	f7 b0       	[SP + 0xc] = R7;
    9b90:	76 b1       	[SP + 0x14] = R6;
    9b92:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    9b94:	01 e1 44 2a 	R1.L = 0x2a44;		/* (10820)	R1=0x2a44(10820) */
    9b98:	55 30       	R2 = P5;
    9b9a:	ff e3 33 b2 	CALL 0x0 <_AddRecordToResponseList>;
    9b9e:	44 30       	R0 = P4;
    9ba0:	4d 30       	R1 = P5;
    9ba2:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    9ba4:	ff e3 be d8 	CALL 0x4d20 <_ActivateUnicastQuery>;
    9ba8:	28 e4 8e 00 	R0 = [P5 + 0x238];
    9bac:	00 0c       	CC = R0 == 0x0;
    9bae:	6d 1c       	IF CC JUMP 0x9c88 <_mDNS_StartQuery_internal+0x6f8> (BP);
    9bb0:	20 e4 ef 09 	R0 = [P4 + 0x27bc];
    9bb4:	00 0c       	CC = R0 == 0x0;
    9bb6:	69 14       	IF !CC JUMP 0x9c88 <_mDNS_StartQuery_internal+0x6f8> (BP);
    9bb8:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    9bba:	a0 e6 ac 27 	B[P4 + 0x27ac] = R0;
    9bbe:	20 ab       	R0 = W[P4 + 0x18] (X);
    9bc0:	60 e6 d7 13 	W[P4 + 0x27ae] = R0;
    9bc4:	60 e6 d8 13 	W[P4 + 0x27b0] = R0;
    9bc8:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x1(  1) */
    9bcc:	00 e1 30 13 	R0.L = 0x1330;		/* (4912)	R0=0x1330 <_LLQNATCallback>(4912) */
    9bd0:	20 e6 ee 09 	[P4 + 0x27b8] = R0;
    9bd4:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    9bd6:	2a e1 84 27 	P2 = 0x2784 (X);		/*		P2=0x2784(10116) */
    9bda:	20 e6 ef 09 	[P4 + 0x27bc] = R0;
    9bde:	94 5a       	P2 = P4 + P2;
    9be0:	4a 30       	R1 = P2;
    9be2:	44 30       	R0 = P4;
    9be4:	ff e3 0e b2 	CALL 0x0 <_AddRecordToResponseList>;
    9be8:	50 20       	JUMP.S 0x9c88 <_mDNS_StartQuery_internal+0x6f8>;
    9bea:	00 00       	NOP;
    9bec:	a8 e4 50 02 	R0 = B[P5 + 0x250] (Z);
    9bf0:	00 0c       	CC = R0 == 0x0;
    9bf2:	4b 1c       	IF CC JUMP 0x9c88 <_mDNS_StartQuery_internal+0x6f8> (BP);
    9bf4:	22 e4 37 00 	R2 = [P4 + 0xdc];
    9bf8:	72 b2       	[SP + 0x24] = R2;
    9bfa:	07 30       	R0 = R7;
    9bfc:	ff e3 02 b2 	CALL 0x0 <_AddRecordToResponseList>;
    9c00:	b0 b2       	[SP + 0x28] = R0;
    9c02:	27 e5 fe 07 	FP = [P4 + 0x1ff8];
    9c06:	fd 63       	R5 = -0x1 (X);		/*		R5=0xffffffff( -1) */
    9c08:	03 68       	P3 = 0x0 (X);		/*		P3=0x0(  0) */
    9c0a:	13 20       	JUMP.S 0x9c30 <_mDNS_StartQuery_internal+0x6a0>;
    9c0c:	67 30       	R4 = FP;
    9c0e:	64 64       	R4 += 0xc;		/* ( 12) */
    9c10:	04 30       	R0 = R4;
    9c12:	ff e3 f7 b1 	CALL 0x0 <_AddRecordToResponseList>;
    9c16:	30 30       	R6 = R0;
    9c18:	f0 b0       	[SP + 0xc] = R0;
    9c1a:	35 b1       	[SP + 0x10] = R5;
    9c1c:	07 30       	R0 = R7;
    9c1e:	b1 a2       	R1 = [SP + 0x28];
    9c20:	14 30       	R2 = R4;
    9c22:	ff e3 d3 ba 	CALL 0x11c8 <_BetterMatchForName>;
    9c26:	08 0c       	CC = R0 == 0x1;
    9c28:	35 06       	IF !CC R6 = R5;
    9c2a:	df 07       	IF CC P3 = FP;
    9c2c:	7f 91       	FP = [FP];
    9c2e:	2e 30       	R5 = R6;
    9c30:	47 0c       	CC = FP == 0x0;
    9c32:	ed 17       	IF !CC JUMP 0x9c0c <_mDNS_StartQuery_internal+0x67c> (BP);
    9c34:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x2784 */
    9c38:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    9c3c:	10 91       	R0 = [P2];
    9c3e:	00 0c       	CC = R0 == 0x0;
    9c40:	11 1c       	IF CC JUMP 0x9c62 <_mDNS_StartQuery_internal+0x6d2> (BP);
    9c42:	43 0c       	CC = P3 == 0x0;
    9c44:	04 1c       	IF CC JUMP 0x9c4c <_mDNS_StartQuery_internal+0x6bc> (BP);
    9c46:	18 e4 43 00 	R0 = [P3 + 0x10c];
    9c4a:	02 20       	JUMP.S 0x9c4e <_mDNS_StartQuery_internal+0x6be>;
    9c4c:	28 60       	R0 = 0x5 (X);		/*		R0=0x5(  5) */
    9c4e:	30 b1       	[SP + 0x10] = R0;
    9c50:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2a44(10820) */
    9c54:	f3 bc       	[SP + 0xc] = P3;
    9c56:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    9c58:	01 e1 94 2a 	R1.L = 0x2a94;		/* (10900)	R1=0x2a94(10900) */
    9c5c:	17 30       	R2 = R7;
    9c5e:	ff e3 d1 b1 	CALL 0x0 <_AddRecordToResponseList>;
    9c62:	43 0c       	CC = P3 == 0x0;
    9c64:	04 1c       	IF CC JUMP 0x9c6c <_mDNS_StartQuery_internal+0x6dc> (BP);
    9c66:	19 e4 43 00 	R1 = [P3 + 0x10c];
    9c6a:	02 20       	JUMP.S 0x9c6e <_mDNS_StartQuery_internal+0x6de>;
    9c6c:	29 60       	R1 = 0x5 (X);		/*		R1=0x5(  5) */
    9c6e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    9c72:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    9c76:	10 91       	R0 = [P2];
    9c78:	c8 40       	R0 *= R1;
    9c7a:	71 a2       	R1 = [SP + 0x24];
    9c7c:	08 50       	R0 = R0 + R1;
    9c7e:	00 0c       	CC = R0 == 0x0;
    9c80:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    9c82:	01 07       	IF CC R0 = R1;
    9c84:	28 e6 2f 00 	[P5 + 0xbc] = R0;
    9c88:	00 00       	NOP;
    9c8a:	28 e4 2f 00 	R0 = [P5 + 0xbc];
    9c8e:	00 0c       	CC = R0 == 0x0;
    9c90:	18 1c       	IF CC JUMP 0x9cc0 <_mDNS_StartQuery_internal+0x730> (BP);
    9c92:	20 a3       	R0 = [P4 + 0x30];
    9c94:	08 30       	R1 = R0;
    9c96:	e2 a2       	R2 = [P4 + 0x2c];
    9c98:	09 64       	R1 += 0x1;		/* (  1) */
    9c9a:	0a 08       	CC = R2 == R1;
    9c9c:	09 18       	IF CC JUMP 0x9cae <_mDNS_StartQuery_internal+0x71e>;
    9c9e:	f0 b0       	[SP + 0xc] = R0;
    9ca0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1(  1) */
    9ca4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    9ca6:	01 e1 bc 07 	R1.L = 0x7bc;		/* (1980)	R1=0x7bc(1980) */
    9caa:	ff e3 ab b1 	CALL 0x0 <_AddRecordToResponseList>;
    9cae:	28 e4 2f 00 	R0 = [P5 + 0xbc];
    9cb2:	21 e4 4b 00 	R1 = [P4 + 0x12c];
    9cb6:	41 52       	R1 = R1 - R0;
    9cb8:	01 0d       	CC = R1 <= 0x0;
    9cba:	03 18       	IF CC JUMP 0x9cc0 <_mDNS_StartQuery_internal+0x730>;
    9cbc:	20 e6 4b 00 	[P4 + 0x12c] = R0;
    9cc0:	44 30       	R0 = P4;
    9cc2:	4d 30       	R1 = P5;
    9cc4:	ff e3 82 c1 	CALL 0x1fc8 <_SetNextQueryTime>;
    9cc8:	05 20       	JUMP.S 0x9cd2 <_mDNS_StartQuery_internal+0x742>;
    9cca:	b0 63       	R0 = -0xa (X);		/*		R0=0xfffffff6(-10) */
    9ccc:	40 e1 fe ff 	R0.H = 0xfffe;		/* ( -2)	R0=0xfffefff6(-65546) */
    9cd0:	02 20       	JUMP.S 0x9cd4 <_mDNS_StartQuery_internal+0x744>;
    9cd2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    9cd4:	66 6d       	SP += 0x2c;		/* ( 44) */
    9cd6:	77 90       	FP = [SP++];
    9cd8:	27 01       	RETS = [SP++];
    9cda:	a3 05       	(R7:4, P5:3) = [SP++];
    9cdc:	10 00       	RTS;
    9cde:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    9ce2:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    9ce6:	53 99       	R3 = B[P2] (X);
    9ce8:	92 e5 01 00 	R2 = B[P2 + 0x1] (X);
    9cec:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    9cee:	1d 2f       	JUMP.S 0x9b28 <_mDNS_StartQuery_internal+0x598>;
    9cf0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    9cf4:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    9cf8:	53 99       	R3 = B[P2] (X);
    9cfa:	92 e5 01 00 	R2 = B[P2 + 0x1] (X);
    9cfe:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    9d00:	3e 2f       	JUMP.S 0x9b7c <_mDNS_StartQuery_internal+0x5ec>;
	...

00009d04 <_mDNS_ActivateNetWake_internal>:
_mDNS_ActivateNetWake_internal():
    9d04:	fc 05       	[--SP] = (R7:7, P5:4);
    9d06:	20 32       	P4 = R0;
    9d08:	67 01       	[--SP] = RETS;
    9d0a:	86 6f       	SP += -0x10;		/* (-16) */
    9d0c:	29 32       	P5 = R1;
    9d0e:	22 e5 f7 07 	P2 = [P4 + 0x1fdc];
    9d12:	03 20       	JUMP.S 0x9d18 <_mDNS_ActivateNetWake_internal+0x14>;
    9d14:	00 00       	NOP;
    9d16:	52 91       	P2 = [P2];
    9d18:	42 0c       	CC = P2 == 0x0;
    9d1a:	08 18       	IF CC JUMP 0x9d2a <_mDNS_ActivateNetWake_internal+0x26>;
    9d1c:	6a 08       	CC = P2 == P5;
    9d1e:	fb 17       	IF !CC JUMP 0x9d14 <_mDNS_ActivateNetWake_internal+0x10> (BP);
    9d20:	a8 e4 04 00 	R0 = B[P5 + 0x4] (Z);
    9d24:	00 0c       	CC = R0 == 0x0;
    9d26:	0d 14       	IF !CC JUMP 0x9d40 <_mDNS_ActivateNetWake_internal+0x3c> (BP);
    9d28:	70 20       	JUMP.S 0x9e08 <_mDNS_ActivateNetWake_internal+0x104>;
    9d2a:	86 6c       	SP += 0x10;		/* ( 16) */
    9d2c:	27 01       	RETS = [SP++];
    9d2e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    9d32:	55 30       	R2 = P5;
    9d34:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    9d36:	01 e1 d8 2a 	R1.L = 0x2ad8;		/* (10968)	R1=0x2ad8(10968) */
    9d3a:	bc 05       	(R7:7, P5:4) = [SP++];
    9d3c:	ff e2 62 b1 	JUMP.L 0x0 <_AddRecordToResponseList>;
    9d40:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    9d44:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    9d48:	10 91       	R0 = [P2];
    9d4a:	00 0c       	CC = R0 == 0x0;
    9d4c:	10 1c       	IF CC JUMP 0x9d6c <_mDNS_ActivateNetWake_internal+0x68> (BP);
    9d4e:	2a e1 74 14 	P2 = 0x1474 (X);		/*		P2=0x1474(5236) */
    9d52:	95 5a       	P2 = P5 + P2;
    9d54:	52 30       	R2 = P2;
    9d56:	2a e1 44 14 	P2 = 0x1444 (X);		/*		P2=0x1444(5188) */
    9d5a:	95 5a       	P2 = P5 + P2;
    9d5c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2ad8(10968) */
    9d60:	f2 bc       	[SP + 0xc] = P2;
    9d62:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    9d64:	01 e1 28 2b 	R1.L = 0x2b28;		/* (11048)	R1=0x2b28(11048) */
    9d68:	ff e3 4c b1 	CALL 0x0 <_AddRecordToResponseList>;
    9d6c:	2a e1 24 01 	P2 = 0x124 (X);		/*		P2=0x124(292) */
    9d70:	27 e4 a3 0d 	R7 = [P4 + 0x368c];
    9d74:	28 e4 10 05 	R0 = [P5 + 0x1440];
    9d78:	95 5a       	P2 = P5 + P2;
    9d7a:	28 e6 48 00 	[P5 + 0x120] = R0;
    9d7e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2b28(11048) */
    9d82:	42 30       	R0 = P2;
    9d84:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    9d88:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
    9d8a:	ff e3 3b b1 	CALL 0x0 <_AddRecordToResponseList>;
    9d8e:	60 60       	R0 = 0xc (X);		/*		R0=0xc( 12) */
    9d90:	68 e6 1e 01 	W[P5 + 0x23c] = R0;
    9d94:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    9d96:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    9d98:	68 e6 1f 01 	W[P5 + 0x23e] = R0;
    9d9c:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    9d9e:	a9 e6 5a 02 	B[P5 + 0x25a] = R1;
    9da2:	a9 e6 5b 02 	B[P5 + 0x25b] = R1;
    9da6:	a9 e6 58 02 	B[P5 + 0x258] = R1;
    9daa:	a9 e6 59 02 	B[P5 + 0x259] = R1;
    9dae:	28 e6 90 00 	[P5 + 0x240] = R0;
    9db2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    9db6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    9db8:	01 e1 94 27 	R1.L = 0x2794;		/* (10132)	R1=0x2794(10132) */
    9dbc:	2a e1 3c 01 	P2 = 0x13c (X);		/*		P2=0x13c(316) */
    9dc0:	28 e6 91 00 	[P5 + 0x244] = R0;
    9dc4:	28 e6 92 00 	[P5 + 0x248] = R0;
    9dc8:	28 e6 93 00 	[P5 + 0x24c] = R0;
    9dcc:	28 e6 94 00 	[P5 + 0x250] = R0;
    9dd0:	28 e6 95 00 	[P5 + 0x254] = R0;
    9dd4:	28 e6 98 00 	[P5 + 0x260] = R0;
    9dd8:	95 5a       	P2 = P5 + P2;
    9dda:	f1 b0       	[SP + 0xc] = R1;
    9ddc:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x14( 20) */
    9de0:	2f e6 99 00 	[P5 + 0x264] = R7;
    9de4:	2d e7 9a 00 	[P5 + 0x268] = P5;
    9de8:	42 30       	R0 = P2;
    9dea:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    9dec:	02 e1 bc 27 	R2.L = 0x27bc;		/* (10172)	R2=0x27bc(10172) */
    9df0:	ff e3 08 b1 	CALL 0x0 <_AddRecordToResponseList>;
    9df4:	00 0c       	CC = R0 == 0x0;
    9df6:	09 18       	IF CC JUMP 0x9e08 <_mDNS_ActivateNetWake_internal+0x104>;
    9df8:	86 6c       	SP += 0x10;		/* ( 16) */
    9dfa:	4d 30       	R1 = P5;
    9dfc:	44 30       	R0 = P4;
    9dfe:	27 01       	RETS = [SP++];
    9e00:	41 64       	R1 += 0x8;		/* (  8) */
    9e02:	bc 05       	(R7:7, P5:4) = [SP++];
    9e04:	ff e2 c6 fb 	JUMP.L 0x9590 <_mDNS_StartQuery_internal>;
    9e08:	86 6c       	SP += 0x10;		/* ( 16) */
    9e0a:	27 01       	RETS = [SP++];
    9e0c:	bc 05       	(R7:7, P5:4) = [SP++];
    9e0e:	10 00       	RTS;

00009e10 <_mDNS_StartBrowse>:
_mDNS_StartBrowse():
    9e10:	f5 05       	[--SP] = (R7:6, P5:5);
    9e12:	29 32       	P5 = R1;
    9e14:	67 01       	[--SP] = RETS;
    9e16:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    9e1a:	86 6f       	SP += -0x10;		/* (-16) */
    9e1c:	32 30       	R6 = R2;
    9e1e:	38 30       	R7 = R0;
    9e20:	01 e1 70 03 	R1.L = 0x370;		/* (880)	R1=0x370(880) */
    9e24:	ff e3 ee b0 	CALL 0x0 <_AddRecordToResponseList>;
    9e28:	30 a3       	R0 = [SP + 0x30];
    9e2a:	2a e1 1c 01 	P2 = 0x11c (X);		/*		P2=0x11c(284) */
    9e2e:	95 5a       	P2 = P5 + P2;
    9e30:	28 e6 46 00 	[P5 + 0x118] = R0;
    9e34:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x370(880) */
    9e38:	42 30       	R0 = P2;
    9e3a:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    9e3e:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
    9e40:	ff e3 e0 b0 	CALL 0x0 <_AddRecordToResponseList>;
    9e44:	60 60       	R0 = 0xc (X);		/*		R0=0xc( 12) */
    9e46:	68 e6 1a 01 	W[P5 + 0x234] = R0;
    9e4a:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    9e4c:	68 e6 1b 01 	W[P5 + 0x236] = R0;
    9e50:	71 a3       	R1 = [SP + 0x34];
    9e52:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    9e54:	28 e6 8e 00 	[P5 + 0x238] = R0;
    9e58:	29 e6 90 00 	[P5 + 0x240] = R1;
    9e5c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    9e5e:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    9e60:	a9 e6 52 02 	B[P5 + 0x252] = R1;
    9e64:	a9 e6 53 02 	B[P5 + 0x253] = R1;
    9e68:	a9 e6 50 02 	B[P5 + 0x250] = R1;
    9e6c:	a9 e6 51 02 	B[P5 + 0x251] = R1;
    9e70:	28 e6 8f 00 	[P5 + 0x23c] = R0;
    9e74:	28 e6 91 00 	[P5 + 0x244] = R0;
    9e78:	28 e6 92 00 	[P5 + 0x248] = R0;
    9e7c:	28 e6 93 00 	[P5 + 0x24c] = R0;
    9e80:	28 e6 96 00 	[P5 + 0x258] = R0;
    9e84:	b0 a3       	R0 = [SP + 0x38];
    9e86:	28 e6 97 00 	[P5 + 0x25c] = R0;
    9e8a:	f0 a3       	R0 = [SP + 0x3c];
    9e8c:	28 e6 98 00 	[P5 + 0x260] = R0;
    9e90:	f1 a2       	R1 = [SP + 0x2c];
    9e92:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    9e96:	95 5a       	P2 = P5 + P2;
    9e98:	f1 b0       	[SP + 0xc] = R1;
    9e9a:	42 30       	R0 = P2;
    9e9c:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    9e9e:	16 30       	R2 = R6;
    9ea0:	ff e3 b0 b0 	CALL 0x0 <_AddRecordToResponseList>;
    9ea4:	00 0c       	CC = R0 == 0x0;
    9ea6:	07 18       	IF CC JUMP 0x9eb4 <_mDNS_StartBrowse+0xa4>;
    9ea8:	4d 30       	R1 = P5;
    9eaa:	07 30       	R0 = R7;
    9eac:	ff e3 72 fb 	CALL 0x9590 <_mDNS_StartQuery_internal>;
    9eb0:	28 32       	P5 = R0;
    9eb2:	04 20       	JUMP.S 0x9eba <_mDNS_StartBrowse+0xaa>;
    9eb4:	2d e1 ff bf 	P5 = -0x4001 (X);		/*		P5=0xffffbfff(-16385) */
    9eb8:	6d 44       	P5 = P5 << 0x2;
    9eba:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    9ebe:	07 30       	R0 = R7;
    9ec0:	01 e1 70 03 	R1.L = 0x370;		/* (880)	R1=0x370(880) */
    9ec4:	ff e3 9e b0 	CALL 0x0 <_AddRecordToResponseList>;
    9ec8:	86 6c       	SP += 0x10;		/* ( 16) */
    9eca:	45 30       	R0 = P5;
    9ecc:	27 01       	RETS = [SP++];
    9ece:	b5 05       	(R7:6, P5:5) = [SP++];
    9ed0:	10 00       	RTS;
	...

00009ed4 <_mDNS_StartResolveService>:
_mDNS_StartResolveService():
    9ed4:	e3 05       	[--SP] = (R7:4, P5:3);
    9ed6:	29 32       	P5 = R1;
    9ed8:	22 32       	P4 = R2;
    9eda:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x370(880) */
    9ede:	00 e8 04 00 	LINK 0x10;		/* (16) */
    9ee2:	20 30       	R4 = R0;
    9ee4:	01 e1 54 03 	R1.L = 0x354;		/* (852)	R1=0x354(852) */
    9ee8:	ff e3 8c b0 	CALL 0x0 <_AddRecordToResponseList>;
    9eec:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
    9eee:	28 b1       	[P5 + 0x10] = R0;
    9ef0:	20 e4 40 00 	R0 = [P4 + 0x100];
    9ef4:	2a e1 1c 01 	P2 = 0x11c (X);		/*		P2=0x11c(284) */
    9ef8:	95 5a       	P2 = P5 + P2;
    9efa:	28 e6 46 00 	[P5 + 0x118] = R0;
    9efe:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x354(852) */
    9f02:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
    9f04:	42 30       	R0 = P2;
    9f06:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    9f0a:	2b e1 00 01 	P3 = 0x100 (X);		/*		P3=0x100(256) */
    9f0e:	ff e3 79 b0 	CALL 0x0 <_AddRecordToResponseList>;
    9f12:	dc 5a       	P3 = P4 + P3;
    9f14:	44 30       	R0 = P4;
    9f16:	4b 30       	R1 = P3;
    9f18:	ff e3 74 b0 	CALL 0x0 <_AddRecordToResponseList>;
    9f1c:	c2 42       	R2 = R0.L (Z);
    9f1e:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    9f22:	02 0a       	CC = R2 <= R0 (IU);
    9f24:	09 14       	IF !CC JUMP 0x9f36 <_mDNS_StartResolveService+0x62> (BP);
    9f26:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    9f2a:	95 5a       	P2 = P5 + P2;
    9f2c:	42 30       	R0 = P2;
    9f2e:	4c 30       	R1 = P4;
    9f30:	ff e3 68 b0 	CALL 0x0 <_AddRecordToResponseList>;
    9f34:	04 20       	JUMP.S 0x9f3c <_mDNS_StartResolveService+0x68>;
    9f36:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    9f38:	a8 e6 34 01 	B[P5 + 0x134] = R0;
    9f3c:	08 61       	R0 = 0x21 (X);		/*		R0=0x21( 33) */
    9f3e:	68 e6 1a 01 	W[P5 + 0x234] = R0;
    9f42:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    9f44:	68 e6 1b 01 	W[P5 + 0x236] = R0;
    9f48:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    9f4a:	28 e6 8e 00 	[P5 + 0x238] = R0;
    9f4e:	28 e6 90 00 	[P5 + 0x240] = R0;
    9f52:	28 e6 91 00 	[P5 + 0x244] = R0;
    9f56:	28 e6 92 00 	[P5 + 0x248] = R0;
    9f5a:	28 e6 93 00 	[P5 + 0x24c] = R0;
    9f5e:	28 e6 96 00 	[P5 + 0x258] = R0;
    9f62:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_AddRecordToResponseList>(  0) */
    9f66:	00 e1 84 a2 	R0.L = 0xa284;		/* (-23932)	R0=0xa284 <_FoundServiceInfoSRV>(41604) */
    9f6a:	28 e6 97 00 	[P5 + 0x25c] = R0;
    9f6e:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    9f70:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
    9f72:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    9f74:	af e6 52 02 	B[P5 + 0x252] = R7;
    9f78:	af e6 53 02 	B[P5 + 0x253] = R7;
    9f7c:	af e6 50 02 	B[P5 + 0x250] = R7;
    9f80:	af e6 51 02 	B[P5 + 0x251] = R7;
    9f84:	28 e6 9d 00 	[P5 + 0x274] = R0;
    9f88:	20 e4 40 00 	R0 = [P4 + 0x100];
    9f8c:	29 e6 8f 00 	[P5 + 0x23c] = R1;
    9f90:	2a e1 80 03 	P2 = 0x380 (X);		/*		P2=0x380(896) */
    9f94:	95 5a       	P2 = P5 + P2;
    9f96:	28 e6 df 00 	[P5 + 0x37c] = R0;
    9f9a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1(  1) */
    9f9e:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
    9fa0:	42 30       	R0 = P2;
    9fa2:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    9fa6:	2d e7 98 00 	[P5 + 0x260] = P5;
    9faa:	ff e3 2b b0 	CALL 0x0 <_AddRecordToResponseList>;
    9fae:	44 30       	R0 = P4;
    9fb0:	4b 30       	R1 = P3;
    9fb2:	ff e3 27 b0 	CALL 0x0 <_AddRecordToResponseList>;
    9fb6:	c2 42       	R2 = R0.L (Z);
    9fb8:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    9fbc:	02 0a       	CC = R2 <= R0 (IU);
    9fbe:	09 14       	IF !CC JUMP 0x9fd0 <_mDNS_StartResolveService+0xfc> (BP);
    9fc0:	2a e1 98 03 	P2 = 0x398 (X);		/*		P2=0x398(920) */
    9fc4:	95 5a       	P2 = P5 + P2;
    9fc6:	42 30       	R0 = P2;
    9fc8:	4c 30       	R1 = P4;
    9fca:	ff e3 1b b0 	CALL 0x0 <_AddRecordToResponseList>;
    9fce:	03 20       	JUMP.S 0x9fd4 <_mDNS_StartResolveService+0x100>;
    9fd0:	af e6 98 03 	B[P5 + 0x398] = R7;
    9fd4:	80 60       	R0 = 0x10 (X);		/*		R0=0x10( 16) */
    9fd6:	68 e6 4c 02 	W[P5 + 0x498] = R0;
    9fda:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x10( 16) */
    9fde:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
    9fe0:	00 e1 64 05 	R0.L = 0x564;		/* (1380)	R0=0x564 <_FoundServiceInfoTXT>(1380) */
    9fe4:	ae e6 b6 04 	B[P5 + 0x4b6] = R6;
    9fe8:	ae e6 b7 04 	B[P5 + 0x4b7] = R6;
    9fec:	ae e6 b4 04 	B[P5 + 0x4b4] = R6;
    9ff0:	ae e6 b5 04 	B[P5 + 0x4b5] = R6;
    9ff4:	28 e6 30 01 	[P5 + 0x4c0] = R0;
    9ff8:	20 e4 40 00 	R0 = [P4 + 0x100];
    9ffc:	2a e1 e4 05 	P2 = 0x5e4 (X);		/*		P2=0x5e4 <_DynDNSHostNameCallback>(1508) */
    a000:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    a002:	0d 60       	R5 = 0x1 (X);		/*		R5=0x1(  1) */
    a004:	fb 63       	R3 = -0x1 (X);		/*		R3=0xffffffff( -1) */
    a006:	0b 68       	P3 = 0x1 (X);		/*		P3=0x1(  1) */
    a008:	95 5a       	P2 = P5 + P2;
    a00a:	28 e6 78 01 	[P5 + 0x5e0] = R0;
    a00e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    a012:	2f e6 27 01 	[P5 + 0x49c] = R7;
    a016:	2f e6 29 01 	[P5 + 0x4a4] = R7;
    a01a:	2f e6 2a 01 	[P5 + 0x4a8] = R7;
    a01e:	2f e6 2b 01 	[P5 + 0x4ac] = R7;
    a022:	2f e6 2c 01 	[P5 + 0x4b0] = R7;
    a026:	2f e6 2f 01 	[P5 + 0x4bc] = R7;
    a02a:	2b e6 36 01 	[P5 + 0x4d8] = R3;
    a02e:	42 30       	R0 = P2;
    a030:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    a034:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
    a036:	f3 b0       	[SP + 0xc] = R3;
    a038:	6d e6 4d 02 	W[P5 + 0x49a] = R5;
    a03c:	2b e7 28 01 	[P5 + 0x4a0] = P3;
    a040:	2d e7 31 01 	[P5 + 0x4c4] = P5;
    a044:	ff e3 de af 	CALL 0x0 <_AddRecordToResponseList>;
    a048:	ae e6 fc 05 	B[P5 + 0x5fc] = R6;
    a04c:	ae e6 1a 07 	B[P5 + 0x71a] = R6;
    a050:	ae e6 1b 07 	B[P5 + 0x71b] = R6;
    a054:	ae e6 18 07 	B[P5 + 0x718] = R6;
    a058:	ae e6 19 07 	B[P5 + 0x719] = R6;
    a05c:	20 e4 40 00 	R0 = [P4 + 0x100];
    a060:	4f e1 00 00 	FP.H = 0x0;		/* (  0)	FP=0x0 <_AddRecordToResponseList> */
    a064:	2a e1 48 08 	P2 = 0x848 (X);		/*		P2=0x848(2120) */
    a068:	0f e1 d8 01 	FP.L = 0x1d8;		/* (472)	FP=0x1d8 <_FoundServiceInfo> */
    a06c:	f3 a0       	R3 = [SP + 0xc];
    a06e:	95 5a       	P2 = P5 + P2;
    a070:	28 e6 11 02 	[P5 + 0x844] = R0;
    a074:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    a078:	2b e6 cf 01 	[P5 + 0x73c] = R3;
    a07c:	2f e6 c0 01 	[P5 + 0x700] = R7;
    a080:	2f e6 c2 01 	[P5 + 0x708] = R7;
    a084:	2f e6 c3 01 	[P5 + 0x70c] = R7;
    a088:	2f e6 c4 01 	[P5 + 0x710] = R7;
    a08c:	2f e6 c5 01 	[P5 + 0x714] = R7;
    a090:	2f e6 c8 01 	[P5 + 0x720] = R7;
    a094:	42 30       	R0 = P2;
    a096:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    a09a:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
    a09c:	6d e6 7e 03 	W[P5 + 0x6fc] = R5;
    a0a0:	6d e6 7f 03 	W[P5 + 0x6fe] = R5;
    a0a4:	2b e7 c1 01 	[P5 + 0x704] = P3;
    a0a8:	2f e7 c9 01 	[P5 + 0x724] = FP;
    a0ac:	2d e7 ca 01 	[P5 + 0x728] = P5;
    a0b0:	ff e3 a8 af 	CALL 0x0 <_AddRecordToResponseList>;
    a0b4:	e0 60       	R0 = 0x1c (X);		/*		R0=0x1c( 28) */
    a0b6:	68 e6 b0 04 	W[P5 + 0x960] = R0;
    a0ba:	30 e4 10 00 	R0 = [SP + 0x40];
    a0be:	28 e6 67 02 	[P5 + 0x99c] = R0;
    a0c2:	30 e4 11 00 	R0 = [SP + 0x44];
    a0c6:	2a e1 04 01 	P2 = 0x104 (X);		/*		P2=0x104(260) */
    a0ca:	94 5a       	P2 = P4 + P2;
    a0cc:	28 e6 68 02 	[P5 + 0x9a0] = R0;
    a0d0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    a0d4:	2f e6 59 02 	[P5 + 0x964] = R7;
    a0d8:	2f e6 5b 02 	[P5 + 0x96c] = R7;
    a0dc:	2f e6 5c 02 	[P5 + 0x970] = R7;
    a0e0:	2f e6 5d 02 	[P5 + 0x974] = R7;
    a0e4:	2f e6 5e 02 	[P5 + 0x978] = R7;
    a0e8:	2f e6 61 02 	[P5 + 0x984] = R7;
    a0ec:	2f e6 65 02 	[P5 + 0x994] = R7;
    a0f0:	42 30       	R0 = P2;
    a0f2:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    a0f6:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
    a0f8:	ae e6 60 08 	B[P5 + 0x860] = R6;
    a0fc:	6d e6 b1 04 	W[P5 + 0x962] = R5;
    a100:	2b e7 5a 02 	[P5 + 0x968] = P3;
    a104:	ae e6 7e 09 	B[P5 + 0x97e] = R6;
    a108:	ae e6 7f 09 	B[P5 + 0x97f] = R6;
    a10c:	ae e6 7c 09 	B[P5 + 0x97c] = R6;
    a110:	ae e6 7d 09 	B[P5 + 0x97d] = R6;
    a114:	2f e7 62 02 	[P5 + 0x988] = FP;
    a118:	2d e7 63 02 	[P5 + 0x98c] = P5;
    a11c:	ae e6 90 09 	B[P5 + 0x990] = R6;
    a120:	ae e6 91 09 	B[P5 + 0x991] = R6;
    a124:	ae e6 92 09 	B[P5 + 0x992] = R6;
    a128:	2c e7 66 02 	[P5 + 0x998] = P4;
    a12c:	ff e3 6a af 	CALL 0x0 <_AddRecordToResponseList>;
    a130:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x104 */
    a134:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    a138:	10 95       	R0 = W[P2] (Z);
    a13a:	60 e6 8c 00 	W[P4 + 0x118] = R0;
    a13e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    a140:	60 e6 8d 00 	W[P4 + 0x11a] = R0;
    a144:	04 30       	R0 = R4;
    a146:	4d 30       	R1 = P5;
    a148:	ff e3 24 fa 	CALL 0x9590 <_mDNS_StartQuery_internal>;
    a14c:	38 30       	R7 = R0;
    a14e:	00 0c       	CC = R0 == 0x0;
    a150:	0b 14       	IF !CC JUMP 0xa166 <_mDNS_StartResolveService+0x292> (BP);
    a152:	2a e1 64 02 	P2 = 0x264 (X);		/*		P2=0x264(612) */
    a156:	95 5a       	P2 = P5 + P2;
    a158:	4a 30       	R1 = P2;
    a15a:	04 30       	R0 = R4;
    a15c:	ff e3 1a fa 	CALL 0x9590 <_mDNS_StartQuery_internal>;
    a160:	38 30       	R7 = R0;
    a162:	00 0c       	CC = R0 == 0x0;
    a164:	05 1c       	IF CC JUMP 0xa16e <_mDNS_StartResolveService+0x29a> (BP);
    a166:	04 30       	R0 = R4;
    a168:	4d 30       	R1 = P5;
    a16a:	ff e3 c7 f0 	CALL 0x82f8 <_mDNS_StopResolveService>;
    a16e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    a172:	04 30       	R0 = R4;
    a174:	01 e1 54 03 	R1.L = 0x354;		/* (852)	R1=0x354(852) */
    a178:	ff e3 44 af 	CALL 0x0 <_AddRecordToResponseList>;
    a17c:	86 6c       	SP += 0x10;		/* ( 16) */
    a17e:	77 90       	FP = [SP++];
    a180:	07 30       	R0 = R7;
    a182:	27 01       	RETS = [SP++];
    a184:	a3 05       	(R7:4, P5:3) = [SP++];
    a186:	10 00       	RTS;

0000a188 <_mDNS_StartQuery>:
_mDNS_StartQuery():
    a188:	68 05       	[--SP] = (R7:5);
    a18a:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0x0 <_AddRecordToResponseList>(  0) */
    a18e:	67 01       	[--SP] = RETS;
    a190:	29 30       	R5 = R1;
    a192:	06 e1 d8 03 	R6.L = 0x3d8;		/* (984)	R6=0x3d8(984) */
    a196:	a6 6f       	SP += -0xc;		/* (-12) */
    a198:	38 30       	R7 = R0;
    a19a:	0e 30       	R1 = R6;
    a19c:	ff e3 32 af 	CALL 0x0 <_AddRecordToResponseList>;
    a1a0:	0d 30       	R1 = R5;
    a1a2:	07 30       	R0 = R7;
    a1a4:	ff e3 f6 f9 	CALL 0x9590 <_mDNS_StartQuery_internal>;
    a1a8:	28 30       	R5 = R0;
    a1aa:	07 30       	R0 = R7;
    a1ac:	0e 30       	R1 = R6;
    a1ae:	ff e3 29 af 	CALL 0x0 <_AddRecordToResponseList>;
    a1b2:	66 6c       	SP += 0xc;		/* ( 12) */
    a1b4:	05 30       	R0 = R5;
    a1b6:	27 01       	RETS = [SP++];
    a1b8:	28 05       	(R7:5) = [SP++];
    a1ba:	10 00       	RTS;

0000a1bc <_mDNS_GetDomains>:
_mDNS_GetDomains():
    a1bc:	eb 05       	[--SP] = (R7:5, P5:3);
    a1be:	29 32       	P5 = R1;
    a1c0:	67 01       	[--SP] = RETS;
    a1c2:	a6 6f       	SP += -0xc;		/* (-12) */
    a1c4:	28 30       	R5 = R0;
    a1c6:	b0 a3       	R0 = [SP + 0x38];
    a1c8:	2a e1 1c 01 	P2 = 0x11c (X);		/*		P2=0x11c(284) */
    a1cc:	1a 32       	P3 = R2;
    a1ce:	28 e6 46 00 	[P5 + 0x118] = R0;
    a1d2:	95 5a       	P2 = P5 + P2;
    a1d4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x354(852) */
    a1d8:	f4 af       	P4 = [SP + 0x3c];
    a1da:	36 e4 10 00 	R6 = [SP + 0x40];
    a1de:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    a1e2:	77 a3       	R7 = [SP + 0x34];
    a1e4:	42 30       	R0 = P2;
    a1e6:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
    a1e8:	ff e3 0c af 	CALL 0x0 <_AddRecordToResponseList>;
    a1ec:	60 60       	R0 = 0xc (X);		/*		R0=0xc( 12) */
    a1ee:	68 e6 1a 01 	W[P5 + 0x234] = R0;
    a1f2:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    a1f4:	68 e6 1b 01 	W[P5 + 0x236] = R0;
    a1f8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    a1fa:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    a1fc:	28 e6 8e 00 	[P5 + 0x238] = R0;
    a200:	28 e6 8f 00 	[P5 + 0x23c] = R0;
    a204:	28 e6 90 00 	[P5 + 0x240] = R0;
    a208:	28 e6 91 00 	[P5 + 0x244] = R0;
    a20c:	28 e6 92 00 	[P5 + 0x248] = R0;
    a210:	a9 e6 52 02 	B[P5 + 0x252] = R1;
    a214:	a9 e6 53 02 	B[P5 + 0x253] = R1;
    a218:	28 e6 93 00 	[P5 + 0x24c] = R0;
    a21c:	a9 e6 50 02 	B[P5 + 0x250] = R1;
    a220:	a9 e6 51 02 	B[P5 + 0x251] = R1;
    a224:	28 e6 96 00 	[P5 + 0x258] = R0;
    a228:	2c e7 97 00 	[P5 + 0x25c] = P4;
    a22c:	2e e6 98 00 	[P5 + 0x260] = R6;
    a230:	63 0e       	CC = P3 <= 0x4 (IU);
    a232:	22 14       	IF !CC JUMP 0xa276 <_mDNS_GetDomains+0xba> (BP);
    a234:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x11c */
    a238:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    a23c:	2c e1 34 01 	P4 = 0x134 (X);		/*		P4=0x134(308) */
    a240:	da 5e       	P3 = P2 + (P3 << 0x2);
    a242:	25 5b       	P4 = P5 + P4;
    a244:	44 30       	R0 = P4;
    a246:	19 91       	R1 = [P3];
    a248:	ff e3 dc ae 	CALL 0x0 <_AddRecordToResponseList>;
    a24c:	00 0c       	CC = R0 == 0x0;
    a24e:	14 1c       	IF CC JUMP 0xa276 <_mDNS_GetDomains+0xba> (BP);
    a250:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_AddRecordToResponseList>(  0) */
    a254:	07 0c       	CC = R7 == 0x0;
    a256:	00 e1 94 27 	R0.L = 0x2794;		/* (10132)	R0=0x2794(10132) */
    a25a:	38 07       	IF CC R7 = R0;
    a25c:	44 30       	R0 = P4;
    a25e:	0f 30       	R1 = R7;
    a260:	ff e3 d0 ae 	CALL 0x0 <_AddRecordToResponseList>;
    a264:	00 0c       	CC = R0 == 0x0;
    a266:	08 18       	IF CC JUMP 0xa276 <_mDNS_GetDomains+0xba>;
    a268:	66 6c       	SP += 0xc;		/* ( 12) */
    a26a:	05 30       	R0 = R5;
    a26c:	4d 30       	R1 = P5;
    a26e:	27 01       	RETS = [SP++];
    a270:	ab 05       	(R7:5, P5:3) = [SP++];
    a272:	ff e2 8b ff 	JUMP.L 0xa188 <_mDNS_StartQuery>;
    a276:	66 6c       	SP += 0xc;		/* ( 12) */
    a278:	27 01       	RETS = [SP++];
    a27a:	20 e1 ff bf 	R0 = -0x4001 (X);		/*		R0=0xffffbfff(-16385) */
    a27e:	10 4f       	R0 <<= 0x2;
    a280:	ab 05       	(R7:5, P5:3) = [SP++];
    a282:	10 00       	RTS;

0000a284 <_FoundServiceInfoSRV>:
_FoundServiceInfoSRV():
    a284:	11 32       	P2 = R1;
    a286:	fb 05       	[--SP] = (R7:7, P5:3);
    a288:	00 e8 03 00 	LINK 0xc;		/* (12) */
    a28c:	22 32       	P4 = R2;
    a28e:	18 32       	P3 = R0;
    a290:	15 e5 98 00 	P5 = [P2 + 0x260];
    a294:	32 a3       	R2 = [SP + 0x30];
    a296:	02 0c       	CC = R2 == 0x0;
    a298:	21 ae       	P1 = [P4 + 0x20];
    a29a:	2a e5 66 02 	P2 = [P5 + 0x998];
    a29e:	08 a9       	R0 = W[P1 + 0x8] (X);
    a2a0:	51 e5 8c 00 	R1 = W[P2 + 0x118] (X);
    a2a4:	03 1d       	IF CC JUMP 0xa4aa <_FoundServiceInfoSRV+0x226> (BP);
    a2a6:	0b 61       	R3 = 0x21 (X);		/*		R3=0x21( 33) */
    a2a8:	62 a4       	R2 = W[P4 + 0x2] (Z);
    a2aa:	1a 08       	CC = R2 == R3;
    a2ac:	ff 14       	IF !CC JUMP 0xa4aa <_FoundServiceInfoSRV+0x226> (BP);
    a2ae:	50 e6 8c 00 	W[P2 + 0x118] = R0;
    a2b2:	aa e4 90 09 	R2 = B[P5 + 0x990] (Z);
    a2b6:	02 0c       	CC = R2 == 0x0;
    a2b8:	4e 14       	IF !CC JUMP 0xa354 <_FoundServiceInfoSRV+0xd0> (BP);
    a2ba:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    a2bc:	a8 e6 90 09 	B[P5 + 0x990] = R0;
    a2c0:	a0 a1       	R0 = [P4 + 0x18];
    a2c2:	28 e6 78 01 	[P5 + 0x5e0] = R0;
    a2c6:	20 a2       	R0 = [P4 + 0x20];
    a2c8:	50 64       	R0 += 0xa;		/* ( 10) */
    a2ca:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    a2ce:	48 50       	R1 = R0 + R1;
    a2d0:	ff e3 98 ae 	CALL 0x0 <_AddRecordToResponseList>;
    a2d4:	c2 42       	R2 = R0.L (Z);
    a2d6:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    a2da:	02 0a       	CC = R2 <= R0 (IU);
    a2dc:	0a 14       	IF !CC JUMP 0xa2f0 <_FoundServiceInfoSRV+0x6c> (BP);
    a2de:	2a e1 fc 05 	P2 = 0x5fc (X);		/*		P2=0x5fc(1532) */
    a2e2:	95 5a       	P2 = P5 + P2;
    a2e4:	21 a2       	R1 = [P4 + 0x20];
    a2e6:	42 30       	R0 = P2;
    a2e8:	51 64       	R1 += 0xa;		/* ( 10) */
    a2ea:	ff e3 8b ae 	CALL 0x0 <_AddRecordToResponseList>;
    a2ee:	04 20       	JUMP.S 0xa2f6 <_FoundServiceInfoSRV+0x72>;
    a2f0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    a2f2:	a8 e6 fc 05 	B[P5 + 0x5fc] = R0;
    a2f6:	a0 a1       	R0 = [P4 + 0x18];
    a2f8:	28 e6 11 02 	[P5 + 0x844] = R0;
    a2fc:	20 a2       	R0 = [P4 + 0x20];
    a2fe:	50 64       	R0 += 0xa;		/* ( 10) */
    a300:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    a304:	48 50       	R1 = R0 + R1;
    a306:	ff e3 7d ae 	CALL 0x0 <_AddRecordToResponseList>;
    a30a:	c2 42       	R2 = R0.L (Z);
    a30c:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    a310:	0a 0a       	CC = R2 <= R1 (IU);
    a312:	0a 14       	IF !CC JUMP 0xa326 <_FoundServiceInfoSRV+0xa2> (BP);
    a314:	2a e1 60 08 	P2 = 0x860 (X);		/*		P2=0x860(2144) */
    a318:	95 5a       	P2 = P5 + P2;
    a31a:	21 a2       	R1 = [P4 + 0x20];
    a31c:	42 30       	R0 = P2;
    a31e:	51 64       	R1 += 0xa;		/* ( 10) */
    a320:	ff e3 70 ae 	CALL 0x0 <_AddRecordToResponseList>;
    a324:	04 20       	JUMP.S 0xa32c <_FoundServiceInfoSRV+0xa8>;
    a326:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    a328:	a8 e6 60 08 	B[P5 + 0x860] = R0;
    a32c:	2a e1 c8 04 	P2 = 0x4c8 (X);		/*		P2=0x4c8(1224) */
    a330:	95 5a       	P2 = P5 + P2;
    a332:	4a 30       	R1 = P2;
    a334:	43 30       	R0 = P3;
    a336:	ff e3 29 ff 	CALL 0xa188 <_mDNS_StartQuery>;
    a33a:	1a e5 f7 07 	P2 = [P3 + 0x1fdc];
    a33e:	33 60       	R3 = 0x6 (X);		/*		R3=0x6(  6) */
    a340:	07 20       	JUMP.S 0xa34e <_FoundServiceInfoSRV+0xca>;
    a342:	00 00       	NOP;
    a344:	10 e4 11 05 	R0 = [P2 + 0x1444];
    a348:	18 08       	CC = R0 == R3;
    a34a:	8a 1c       	IF CC JUMP 0xa45e <_FoundServiceInfoSRV+0x1da> (BP);
    a34c:	52 91       	P2 = [P2];
    a34e:	42 0c       	CC = P2 == 0x0;
    a350:	f9 17       	IF !CC JUMP 0xa342 <_FoundServiceInfoSRV+0xbe> (BP);
    a352:	ac 20       	JUMP.S 0xa4aa <_FoundServiceInfoSRV+0x226>;
    a354:	01 58       	R0 = R1 ^ R0;
    a356:	06 c4 00 80 	R0 = ABS R0 (V);
    a35a:	80 43       	R0 = -R0;
    a35c:	78 49       	CC = BITTST (R0, 0xf);		/* bit 15 */
    a35e:	07 02       	R7 = CC;
    a360:	28 e4 78 01 	R0 = [P5 + 0x5e0];
    a364:	29 e4 46 00 	R1 = [P5 + 0x118];
    a368:	08 08       	CC = R0 == R1;
    a36a:	04 1c       	IF CC JUMP 0xa372 <_FoundServiceInfoSRV+0xee> (BP);
    a36c:	a1 a1       	R1 = [P4 + 0x18];
    a36e:	08 08       	CC = R0 == R1;
    a370:	0b 14       	IF !CC JUMP 0xa386 <_FoundServiceInfoSRV+0x102> (BP);
    a372:	2a e1 fc 05 	P2 = 0x5fc (X);		/*		P2=0x5fc(1532) */
    a376:	95 5a       	P2 = P5 + P2;
    a378:	21 a2       	R1 = [P4 + 0x20];
    a37a:	42 30       	R0 = P2;
    a37c:	51 64       	R1 += 0xa;		/* ( 10) */
    a37e:	ff e3 41 ae 	CALL 0x0 <_AddRecordToResponseList>;
    a382:	00 0c       	CC = R0 == 0x0;
    a384:	78 14       	IF !CC JUMP 0xa474 <_FoundServiceInfoSRV+0x1f0> (BP);
    a386:	2f e1 c8 04 	FP = 0x4c8 (X);		/*		FP=0x4c8(1224) */
    a38a:	fd 5b       	FP = P5 + FP;
    a38c:	43 30       	R0 = P3;
    a38e:	4f 30       	R1 = FP;
    a390:	ff e3 ba ee 	CALL 0x8104 <_mDNS_StopQuery>;
    a394:	28 e4 cf 01 	R0 = [P5 + 0x73c];
    a398:	80 0c       	CC = R0 < 0x0;
    a39a:	08 18       	IF CC JUMP 0xa3aa <_FoundServiceInfoSRV+0x126>;
    a39c:	2a e1 2c 07 	P2 = 0x72c (X);		/*		P2=0x72c(1836) */
    a3a0:	95 5a       	P2 = P5 + P2;
    a3a2:	4a 30       	R1 = P2;
    a3a4:	43 30       	R0 = P3;
    a3a6:	ff e3 af ee 	CALL 0x8104 <_mDNS_StopQuery>;
    a3aa:	2a e1 fc 05 	P2 = 0x5fc (X);		/*		P2=0x5fc(1532) */
    a3ae:	95 5a       	P2 = P5 + P2;
    a3b0:	21 a2       	R1 = [P4 + 0x20];
    a3b2:	42 30       	R0 = P2;
    a3b4:	51 64       	R1 += 0xa;		/* ( 10) */
    a3b6:	ff e3 25 ae 	CALL 0x0 <_AddRecordToResponseList>;
    a3ba:	00 0c       	CC = R0 == 0x0;
    a3bc:	0a 18       	IF CC JUMP 0xa3d0 <_FoundServiceInfoSRV+0x14c>;
    a3be:	07 0c       	CC = R7 == 0x0;
    a3c0:	08 14       	IF !CC JUMP 0xa3d0 <_FoundServiceInfoSRV+0x14c> (BP);
    a3c2:	28 e4 46 00 	R0 = [P5 + 0x118];
    a3c6:	28 e6 78 01 	[P5 + 0x5e0] = R0;
    a3ca:	28 e6 11 02 	[P5 + 0x844] = R0;
    a3ce:	37 20       	JUMP.S 0xa43c <_FoundServiceInfoSRV+0x1b8>;
    a3d0:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    a3d4:	a0 a1       	R0 = [P4 + 0x18];
    a3d6:	28 e6 78 01 	[P5 + 0x5e0] = R0;
    a3da:	20 a2       	R0 = [P4 + 0x20];
    a3dc:	50 64       	R0 += 0xa;		/* ( 10) */
    a3de:	48 50       	R1 = R0 + R1;
    a3e0:	ff e3 10 ae 	CALL 0x0 <_AddRecordToResponseList>;
    a3e4:	c2 42       	R2 = R0.L (Z);
    a3e6:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    a3ea:	02 0a       	CC = R2 <= R0 (IU);
    a3ec:	0a 14       	IF !CC JUMP 0xa400 <_FoundServiceInfoSRV+0x17c> (BP);
    a3ee:	2a e1 fc 05 	P2 = 0x5fc (X);		/*		P2=0x5fc(1532) */
    a3f2:	95 5a       	P2 = P5 + P2;
    a3f4:	21 a2       	R1 = [P4 + 0x20];
    a3f6:	42 30       	R0 = P2;
    a3f8:	51 64       	R1 += 0xa;		/* ( 10) */
    a3fa:	ff e3 03 ae 	CALL 0x0 <_AddRecordToResponseList>;
    a3fe:	04 20       	JUMP.S 0xa406 <_FoundServiceInfoSRV+0x182>;
    a400:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    a402:	a8 e6 fc 05 	B[P5 + 0x5fc] = R0;
    a406:	a0 a1       	R0 = [P4 + 0x18];
    a408:	28 e6 11 02 	[P5 + 0x844] = R0;
    a40c:	20 a2       	R0 = [P4 + 0x20];
    a40e:	50 64       	R0 += 0xa;		/* ( 10) */
    a410:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    a414:	48 50       	R1 = R0 + R1;
    a416:	ff e3 f5 ad 	CALL 0x0 <_AddRecordToResponseList>;
    a41a:	c2 42       	R2 = R0.L (Z);
    a41c:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    a420:	0a 0a       	CC = R2 <= R1 (IU);
    a422:	0a 14       	IF !CC JUMP 0xa436 <_FoundServiceInfoSRV+0x1b2> (BP);
    a424:	2a e1 60 08 	P2 = 0x860 (X);		/*		P2=0x860(2144) */
    a428:	95 5a       	P2 = P5 + P2;
    a42a:	21 a2       	R1 = [P4 + 0x20];
    a42c:	42 30       	R0 = P2;
    a42e:	51 64       	R1 += 0xa;		/* ( 10) */
    a430:	ff e3 e8 ad 	CALL 0x0 <_AddRecordToResponseList>;
    a434:	04 20       	JUMP.S 0xa43c <_FoundServiceInfoSRV+0x1b8>;
    a436:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    a438:	a8 e6 60 08 	B[P5 + 0x860] = R0;
    a43c:	43 30       	R0 = P3;
    a43e:	4f 30       	R1 = FP;
    a440:	ff e3 a4 fe 	CALL 0xa188 <_mDNS_StartQuery>;
    a444:	1a e5 f7 07 	P2 = [P3 + 0x1fdc];
    a448:	33 60       	R3 = 0x6 (X);		/*		R3=0x6(  6) */
    a44a:	07 20       	JUMP.S 0xa458 <_FoundServiceInfoSRV+0x1d4>;
    a44c:	00 00       	NOP;
    a44e:	10 e4 11 05 	R0 = [P2 + 0x1444];
    a452:	18 08       	CC = R0 == R3;
    a454:	05 1c       	IF CC JUMP 0xa45e <_FoundServiceInfoSRV+0x1da> (BP);
    a456:	52 91       	P2 = [P2];
    a458:	42 0c       	CC = P2 == 0x0;
    a45a:	f9 17       	IF !CC JUMP 0xa44c <_FoundServiceInfoSRV+0x1c8> (BP);
    a45c:	27 20       	JUMP.S 0xa4aa <_FoundServiceInfoSRV+0x226>;
    a45e:	66 6c       	SP += 0xc;		/* ( 12) */
    a460:	77 90       	FP = [SP++];
    a462:	2a e1 2c 07 	P2 = 0x72c (X);		/*		P2=0x72c(1836) */
    a466:	95 5a       	P2 = P5 + P2;
    a468:	43 30       	R0 = P3;
    a46a:	27 01       	RETS = [SP++];
    a46c:	4a 30       	R1 = P2;
    a46e:	bb 05       	(R7:7, P5:3) = [SP++];
    a470:	ff e2 8c fe 	JUMP.L 0xa188 <_mDNS_StartQuery>;
    a474:	00 00       	NOP;
    a476:	2a e5 67 02 	P2 = [P5 + 0x99c];
    a47a:	42 0c       	CC = P2 == 0x0;
    a47c:	17 1c       	IF CC JUMP 0xa4aa <_FoundServiceInfoSRV+0x226> (BP);
    a47e:	a8 e4 92 09 	R0 = B[P5 + 0x992] (Z);
    a482:	00 0c       	CC = R0 == 0x0;
    a484:	13 1c       	IF CC JUMP 0xa4aa <_FoundServiceInfoSRV+0x226> (BP);
    a486:	a8 e4 91 09 	R0 = B[P5 + 0x991] (Z);
    a48a:	00 0c       	CC = R0 == 0x0;
    a48c:	0f 18       	IF CC JUMP 0xa4aa <_FoundServiceInfoSRV+0x226>;
    a48e:	07 0c       	CC = R7 == 0x0;
    a490:	0d 1c       	IF CC JUMP 0xa4aa <_FoundServiceInfoSRV+0x226> (BP);
    a492:	28 e4 65 02 	R0 = [P5 + 0x994];
    a496:	08 64       	R0 += 0x1;		/* (  1) */
    a498:	28 e6 65 02 	[P5 + 0x994] = R0;
    a49c:	66 6c       	SP += 0xc;		/* ( 12) */
    a49e:	77 90       	FP = [SP++];
    a4a0:	43 30       	R0 = P3;
    a4a2:	4d 30       	R1 = P5;
    a4a4:	27 01       	RETS = [SP++];
    a4a6:	bb 05       	(R7:7, P5:3) = [SP++];
    a4a8:	52 00       	JUMP (P2);
    a4aa:	66 6c       	SP += 0xc;		/* ( 12) */
    a4ac:	77 90       	FP = [SP++];
    a4ae:	27 01       	RETS = [SP++];
    a4b0:	bb 05       	(R7:7, P5:3) = [SP++];
    a4b2:	10 00       	RTS;

0000a4b4 <_AnswerQuestionByFollowingCNAME>:
_AnswerQuestionByFollowingCNAME():
    a4b4:	e3 05       	[--SP] = (R7:4, P5:3);
    a4b6:	29 32       	P5 = R1;
    a4b8:	22 32       	P4 = R2;
    a4ba:	2b e1 34 01 	P3 = 0x134 (X);		/*		P3=0x134(308) */
    a4be:	67 01       	[--SP] = RETS;
    a4c0:	38 30       	R7 = R0;
    a4c2:	dd 5a       	P3 = P5 + P3;
    a4c4:	21 a2       	R1 = [P4 + 0x20];
    a4c6:	06 6f       	SP += -0x20;		/* (-32) */
    a4c8:	21 64       	R1 += 0x4;		/* (  4) */
    a4ca:	43 30       	R0 = P3;
    a4cc:	ff e3 9a ad 	CALL 0x0 <_AddRecordToResponseList>;
    a4d0:	30 30       	R6 = R0;
    a4d2:	2d e4 2c 00 	R5 = [P5 + 0xb0];
    a4d6:	48 60       	R0 = 0x9 (X);		/*		R0=0x9(  9) */
    a4d8:	05 0a       	CC = R5 <= R0 (IU);
    a4da:	03 10       	IF !CC JUMP 0xa4e0 <_AnswerQuestionByFollowingCNAME+0x2c>;
    a4dc:	06 0c       	CC = R6 == 0x0;
    a4de:	2a 1c       	IF CC JUMP 0xa532 <_AnswerQuestionByFollowingCNAME+0x7e> (BP);
    a4e0:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    a4e4:	ff e3 8e ad 	CALL 0x0 <_AddRecordToResponseList>;
    a4e8:	06 0c       	CC = R6 == 0x0;
    a4ea:	20 30       	R4 = R0;
    a4ec:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x9(  9) */
    a4f0:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0x3d8(984) */
    a4f4:	00 e1 48 2b 	R0.L = 0x2b48;		/* (11080)	R0=0x2b48(11080) */
    a4f8:	06 e1 44 12 	R6.L = 0x1244;		/* (4676)	R6=0x1244(4676) */
    a4fc:	30 06       	IF !CC R6 = R0;
    a4fe:	21 a2       	R1 = [P4 + 0x20];
    a500:	17 30       	R2 = R7;
    a502:	2d e4 2c 00 	R5 = [P5 + 0xb0];
    a506:	21 64       	R1 += 0x4;		/* (  4) */
    a508:	ba 65       	R2 += 0x37;		/* ( 55) */
    a50a:	44 30       	R0 = P4;
    a50c:	ff e3 7a ad 	CALL 0x0 <_AddRecordToResponseList>;
    a510:	2b e1 34 01 	P3 = 0x134 (X);		/*		P3=0x134(308) */
    a514:	dd 5a       	P3 = P5 + P3;
    a516:	f0 b1       	[SP + 0x1c] = R0;
    a518:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x100(256) */
    a51c:	f3 bc       	[SP + 0xc] = P3;
    a51e:	34 b1       	[SP + 0x10] = R4;
    a520:	75 b1       	[SP + 0x14] = R5;
    a522:	b6 b1       	[SP + 0x18] = R6;
    a524:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    a526:	01 e1 5c 2b 	R1.L = 0x2b5c;		/* (11100)	R1=0x2b5c(11100) */
    a52a:	55 30       	R2 = P5;
    a52c:	ff e3 6a ad 	CALL 0x0 <_AddRecordToResponseList>;
    a530:	7a 20       	JUMP.S 0xa624 <_AnswerQuestionByFollowingCNAME+0x170>;
    a532:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x72c */
    a536:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    a53a:	10 91       	R0 = [P2];
    a53c:	0d 64       	R5 += 0x1;		/* (  1) */
    a53e:	00 0c       	CC = R0 == 0x0;
    a540:	1b 1c       	IF CC JUMP 0xa576 <_AnswerQuestionByFollowingCNAME+0xc2> (BP);
    a542:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    a546:	ff e3 5d ad 	CALL 0x0 <_AddRecordToResponseList>;
    a54a:	20 30       	R4 = R0;
    a54c:	21 a2       	R1 = [P4 + 0x20];
    a54e:	17 30       	R2 = R7;
    a550:	2e e4 2c 00 	R6 = [P5 + 0xb0];
    a554:	21 64       	R1 += 0x4;		/* (  4) */
    a556:	ba 65       	R2 += 0x37;		/* ( 55) */
    a558:	44 30       	R0 = P4;
    a55a:	ff e3 53 ad 	CALL 0x0 <_AddRecordToResponseList>;
    a55e:	b0 b1       	[SP + 0x18] = R0;
    a560:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2b5c(11100) */
    a564:	f3 bc       	[SP + 0xc] = P3;
    a566:	34 b1       	[SP + 0x10] = R4;
    a568:	76 b1       	[SP + 0x14] = R6;
    a56a:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    a56c:	01 e1 b4 2b 	R1.L = 0x2bb4;		/* (11188)	R1=0x2bb4(11188) */
    a570:	55 30       	R2 = P5;
    a572:	ff e3 47 ad 	CALL 0x0 <_AddRecordToResponseList>;
    a576:	4d 30       	R1 = P5;
    a578:	07 30       	R0 = R7;
    a57a:	ff e3 91 d1 	CALL 0x489c <_mDNS_StopQuery_internal>;
    a57e:	20 a2       	R0 = [P4 + 0x20];
    a580:	20 64       	R0 += 0x4;		/* (  4) */
    a582:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    a586:	48 50       	R1 = R0 + R1;
    a588:	ff e3 3c ad 	CALL 0x0 <_AddRecordToResponseList>;
    a58c:	c2 42       	R2 = R0.L (Z);
    a58e:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    a592:	02 0a       	CC = R2 <= R0 (IU);
    a594:	0a 14       	IF !CC JUMP 0xa5a8 <_AnswerQuestionByFollowingCNAME+0xf4> (BP);
    a596:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    a59a:	95 5a       	P2 = P5 + P2;
    a59c:	21 a2       	R1 = [P4 + 0x20];
    a59e:	42 30       	R0 = P2;
    a5a0:	21 64       	R1 += 0x4;		/* (  4) */
    a5a2:	ff e3 2f ad 	CALL 0x0 <_AddRecordToResponseList>;
    a5a6:	04 20       	JUMP.S 0xa5ae <_AnswerQuestionByFollowingCNAME+0xfa>;
    a5a8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    a5aa:	a8 e6 34 01 	B[P5 + 0x134] = R0;
    a5ae:	43 30       	R0 = P3;
    a5b0:	ff e3 28 ad 	CALL 0x0 <_AddRecordToResponseList>;
    a5b4:	68 b0       	[P5 + 0x4] = R0;
    a5b6:	68 e4 99 00 	R0 = W[P5 + 0x132] (Z);
    a5ba:	00 0c       	CC = R0 == 0x0;
    a5bc:	2e 1c       	IF CC JUMP 0xa618 <_AnswerQuestionByFollowingCNAME+0x164> (BP);
    a5be:	43 30       	R0 = P3;
    a5c0:	ff e3 20 ad 	CALL 0x0 <_AddRecordToResponseList>;
    a5c4:	00 0c       	CC = R0 == 0x0;
    a5c6:	29 1c       	IF CC JUMP 0xa618 <_AnswerQuestionByFollowingCNAME+0x164> (BP);
    a5c8:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    a5cc:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    a5d0:	10 91       	R0 = [P2];
    a5d2:	00 0c       	CC = R0 == 0x0;
    a5d4:	1b 1c       	IF CC JUMP 0xa60a <_AnswerQuestionByFollowingCNAME+0x156> (BP);
    a5d6:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    a5da:	ff e3 13 ad 	CALL 0x0 <_AddRecordToResponseList>;
    a5de:	30 30       	R6 = R0;
    a5e0:	21 a2       	R1 = [P4 + 0x20];
    a5e2:	17 30       	R2 = R7;
    a5e4:	21 64       	R1 += 0x4;		/* (  4) */
    a5e6:	ba 65       	R2 += 0x37;		/* ( 55) */
    a5e8:	44 30       	R0 = P4;
    a5ea:	ff e3 0b ad 	CALL 0x0 <_AddRecordToResponseList>;
    a5ee:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    a5f2:	95 5a       	P2 = P5 + P2;
    a5f4:	70 b1       	[SP + 0x14] = R0;
    a5f6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x100(256) */
    a5fa:	f2 bc       	[SP + 0xc] = P2;
    a5fc:	36 b1       	[SP + 0x10] = R6;
    a5fe:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    a600:	01 e1 04 2c 	R1.L = 0x2c04;		/* (11268)	R1=0x2c04(11268) */
    a604:	55 30       	R2 = P5;
    a606:	ff e3 fd ac 	CALL 0x0 <_AddRecordToResponseList>;
    a60a:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    a60e:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    a612:	10 91       	R0 = [P2];
    a614:	28 e6 46 00 	[P5 + 0x118] = R0;
    a618:	07 30       	R0 = R7;
    a61a:	4d 30       	R1 = P5;
    a61c:	ff e3 ba f7 	CALL 0x9590 <_mDNS_StartQuery_internal>;
    a620:	2d e6 2c 00 	[P5 + 0xb0] = R5;
    a624:	06 6d       	SP += 0x20;		/* ( 32) */
    a626:	27 01       	RETS = [SP++];
    a628:	a3 05       	(R7:4, P5:3) = [SP++];
    a62a:	10 00       	RTS;

0000a62c <_AnswerLocalQuestionWithLocalAuthRecord>:
_AnswerLocalQuestionWithLocalAuthRecord():
    a62c:	eb 05       	[--SP] = (R7:5, P5:3);
    a62e:	28 32       	P5 = R0;
    a630:	67 01       	[--SP] = RETS;
    a632:	66 6f       	SP += -0x14;		/* (-20) */
    a634:	19 32       	P3 = R1;
    a636:	3a 30       	R7 = R2;
    a638:	2c e5 4e 00 	P4 = [P5 + 0x138];
    a63c:	44 0c       	CC = P4 == 0x0;
    a63e:	14 14       	IF !CC JUMP 0xa666 <_AnswerLocalQuestionWithLocalAuthRecord+0x3a> (BP);
    a640:	01 30       	R0 = R1;
    a642:	59 a2       	R1 = [P3 + 0x24];
    a644:	55 30       	R2 = P5;
    a646:	21 64       	R1 += 0x4;		/* (  4) */
    a648:	ba 65       	R2 += 0x37;		/* ( 55) */
    a64a:	20 64       	R0 += 0x4;		/* (  4) */
    a64c:	ff e3 da ac 	CALL 0x0 <_AddRecordToResponseList>;
    a650:	a6 6c       	SP += 0x14;		/* ( 20) */
    a652:	27 01       	RETS = [SP++];
    a654:	10 30       	R2 = R0;
    a656:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2c04(11268) */
    a65a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    a65c:	01 e1 5c 2c 	R1.L = 0x2c5c;		/* (11356)	R1=0x2c5c(11356) */
    a660:	ab 05       	(R7:5, P5:3) = [SP++];
    a662:	ff e2 cf ac 	JUMP.L 0x0 <_AddRecordToResponseList>;
    a666:	02 0c       	CC = R2 == 0x0;
    a668:	11 1c       	IF CC JUMP 0xa68a <_AnswerLocalQuestionWithLocalAuthRecord+0x5e> (BP);
    a66a:	60 e4 1a 01 	R0 = W[P4 + 0x234] (Z);
    a66e:	29 60       	R1 = 0x5 (X);		/*		R1=0x5(  5) */
    a670:	08 08       	CC = R0 == R1;
    a672:	0c 1c       	IF CC JUMP 0xa68a <_AnswerLocalQuestionWithLocalAuthRecord+0x5e> (BP);
    a674:	21 e1 f0 00 	R1 = 0xf0 (X);		/*		R1=0xf0(240) */
    a678:	98 e4 04 00 	R0 = B[P3 + 0x4] (Z);
    a67c:	08 08       	CC = R0 == R1;
    a67e:	06 1c       	IF CC JUMP 0xa68a <_AnswerLocalQuestionWithLocalAuthRecord+0x5e> (BP);
    a680:	29 60       	R1 = 0x5 (X);		/*		R1=0x5(  5) */
    a682:	d8 a4       	R0 = W[P3 + 0x6] (Z);
    a684:	08 08       	CC = R0 == R1;
    a686:	06 02       	R6 = CC;
    a688:	02 20       	JUMP.S 0xa68c <_AnswerLocalQuestionWithLocalAuthRecord+0x60>;
    a68a:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
    a68c:	9d e4 04 00 	R5 = B[P3 + 0x4] (Z);
    a690:	e0 61       	R0 = 0x3c (X);		/*		R0=0x3c( 60) */
    a692:	05 54       	R0 = R5 & R0;
    a694:	00 0c       	CC = R0 == 0x0;
    a696:	1e 14       	IF !CC JUMP 0xa6d2 <_AnswerLocalQuestionWithLocalAuthRecord+0xa6> (BP);
    a698:	07 0c       	CC = R7 == 0x0;
    a69a:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x3c( 60) */
    a69e:	47 e1 00 00 	R7.H = 0x0;		/* (  0)	R7=0x0 <_AddRecordToResponseList>(  0) */
    a6a2:	00 e1 54 2c 	R0.L = 0x2c54;		/* (11348)	R0=0x2c54(11348) */
    a6a6:	07 e1 58 2c 	R7.L = 0x2c58;		/* (11352)	R7=0x2c58(11352) */
    a6aa:	38 06       	IF !CC R7 = R0;
    a6ac:	59 a2       	R1 = [P3 + 0x24];
    a6ae:	43 30       	R0 = P3;
    a6b0:	55 30       	R2 = P5;
    a6b2:	21 64       	R1 += 0x4;		/* (  4) */
    a6b4:	ba 65       	R2 += 0x37;		/* ( 55) */
    a6b6:	20 64       	R0 += 0x4;		/* (  4) */
    a6b8:	ff e3 a4 ac 	CALL 0x0 <_AddRecordToResponseList>;
    a6bc:	30 b1       	[SP + 0x10] = R0;
    a6be:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5(  5) */
    a6c2:	f5 b0       	[SP + 0xc] = R5;
    a6c4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    a6c6:	01 e1 bc 2c 	R1.L = 0x2cbc;		/* (11452)	R1=0x2cbc(11452) */
    a6ca:	17 30       	R2 = R7;
    a6cc:	ff e3 9a ac 	CALL 0x0 <_AddRecordToResponseList>;
    a6d0:	92 20       	JUMP.S 0xa7f4 <_AnswerLocalQuestionWithLocalAuthRecord+0x1c8>;
    a6d2:	07 0c       	CC = R7 == 0x0;
    a6d4:	04 1c       	IF CC JUMP 0xa6dc <_AnswerLocalQuestionWithLocalAuthRecord+0xb0> (BP);
    a6d6:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    a6d8:	98 e6 88 00 	B[P3 + 0x88] = R0;
    a6dc:	00 00       	NOP;
    a6de:	28 a3       	R0 = [P5 + 0x30];
    a6e0:	08 64       	R0 += 0x1;		/* (  1) */
    a6e2:	e9 a2       	R1 = [P5 + 0x2c];
    a6e4:	28 b3       	[P5 + 0x30] = R0;
    a6e6:	01 08       	CC = R1 == R0;
    a6e8:	0e 18       	IF CC JUMP 0xa704 <_AnswerLocalQuestionWithLocalAuthRecord+0xd8>;
    a6ea:	f1 b0       	[SP + 0xc] = R1;
    a6ec:	30 b1       	[SP + 0x10] = R0;
    a6ee:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2cbc(11452) */
    a6f2:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x14( 20) */
    a6f6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    a6f8:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    a6fc:	02 e1 f8 03 	R2.L = 0x3f8;		/* (1016)	R2=0x3f8(1016) */
    a700:	ff e3 80 ac 	CALL 0x0 <_AddRecordToResponseList>;
    a704:	22 e5 97 00 	P2 = [P4 + 0x25c];
    a708:	42 0c       	CC = P2 == 0x0;
    a70a:	60 1c       	IF CC JUMP 0xa7ca <_AnswerLocalQuestionWithLocalAuthRecord+0x19e> (BP);
    a70c:	a0 e4 fe 00 	R0 = B[P4 + 0xfe] (Z);
    a710:	00 0c       	CC = R0 == 0x0;
    a712:	5c 14       	IF !CC JUMP 0xa7ca <_AnswerLocalQuestionWithLocalAuthRecord+0x19e> (BP);
    a714:	07 0c       	CC = R7 == 0x0;
    a716:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    a718:	fa 63       	R2 = -0x1 (X);		/*		R2=0xffffffff( -1) */
    a71a:	21 a2       	R1 = [P4 + 0x20];
    a71c:	02 07       	IF CC R0 = R2;
    a71e:	08 50       	R0 = R0 + R1;
    a720:	20 b2       	[P4 + 0x20] = R0;
    a722:	18 e4 20 00 	R0 = [P3 + 0x80];
    a726:	10 0c       	CC = R0 == 0x2;
    a728:	4b 14       	IF !CC JUMP 0xa7be <_AnswerLocalQuestionWithLocalAuthRecord+0x192> (BP);
    a72a:	99 e4 04 00 	R1 = B[P3 + 0x4] (Z);
    a72e:	90 61       	R0 = 0x32 (X);		/*		R0=0x32( 50) */
    a730:	01 54       	R0 = R1 & R0;
    a732:	00 0c       	CC = R0 == 0x0;
    a734:	45 1c       	IF CC JUMP 0xa7be <_AnswerLocalQuestionWithLocalAuthRecord+0x192> (BP);
    a736:	d8 a4       	R0 = W[P3 + 0x6] (Z);
    a738:	08 0c       	CC = R0 == 0x1;
    a73a:	07 18       	IF CC JUMP 0xa748 <_AnswerLocalQuestionWithLocalAuthRecord+0x11c>;
    a73c:	e1 60       	R1 = 0x1c (X);		/*		R1=0x1c( 28) */
    a73e:	08 08       	CC = R0 == R1;
    a740:	04 18       	IF CC JUMP 0xa748 <_AnswerLocalQuestionWithLocalAuthRecord+0x11c>;
    a742:	29 60       	R1 = 0x5 (X);		/*		R1=0x5(  5) */
    a744:	08 08       	CC = R0 == R1;
    a746:	3c 14       	IF !CC JUMP 0xa7be <_AnswerLocalQuestionWithLocalAuthRecord+0x192> (BP);
    a748:	06 0c       	CC = R6 == 0x0;
    a74a:	05 1c       	IF CC JUMP 0xa754 <_AnswerLocalQuestionWithLocalAuthRecord+0x128> (BP);
    a74c:	20 e4 91 00 	R0 = [P4 + 0x244];
    a750:	00 0c       	CC = R0 == 0x0;
    a752:	12 1c       	IF CC JUMP 0xa776 <_AnswerLocalQuestionWithLocalAuthRecord+0x14a> (BP);
    a754:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    a756:	20 b1       	[P4 + 0x10] = R0;
    a758:	fa 63       	R2 = -0x1 (X);		/*		R2=0xffffffff( -1) */
    a75a:	07 0c       	CC = R7 == 0x0;
    a75c:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    a75e:	a1 e5 b8 00 	R1 = B[P4 + 0xb8] (X);
    a762:	02 07       	IF CC R0 = R2;
    a764:	08 50       	R0 = R0 + R1;
    a766:	a0 e6 b8 00 	B[P4 + 0xb8] = R0;
    a76a:	53 30       	R2 = P3;
    a76c:	22 64       	R2 += 0x4;		/* (  4) */
    a76e:	f7 b0       	[SP + 0xc] = R7;
    a770:	45 30       	R0 = P5;
    a772:	4c 30       	R1 = P4;
    a774:	62 00       	CALL (P2);
    a776:	00 00       	NOP;
    a778:	e9 a2       	R1 = [P5 + 0x2c];
    a77a:	28 a3       	R0 = [P5 + 0x30];
    a77c:	01 08       	CC = R1 == R0;
    a77e:	0e 18       	IF CC JUMP 0xa79a <_AnswerLocalQuestionWithLocalAuthRecord+0x16e>;
    a780:	f1 b0       	[SP + 0xc] = R1;
    a782:	30 b1       	[SP + 0x10] = R0;
    a784:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5(  5) */
    a788:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0xffff(65535) */
    a78c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    a78e:	01 e1 40 00 	R1.L = 0x40;		/* ( 64)	R1=0x40( 64) */
    a792:	02 e1 f8 03 	R2.L = 0x3f8;		/* (1016)	R2=0x3f8(1016) */
    a796:	ff e3 35 ac 	CALL 0x0 <_AddRecordToResponseList>;
    a79a:	28 a3       	R0 = [P5 + 0x30];
    a79c:	f8 67       	R0 += -0x1;		/* ( -1) */
    a79e:	28 b3       	[P5 + 0x30] = R0;
    a7a0:	06 0c       	CC = R6 == 0x0;
    a7a2:	29 1c       	IF CC JUMP 0xa7f4 <_AnswerLocalQuestionWithLocalAuthRecord+0x1c8> (BP);
    a7a4:	44 30       	R0 = P4;
    a7a6:	29 e4 4e 00 	R1 = [P5 + 0x138];
    a7aa:	01 08       	CC = R1 == R0;
    a7ac:	24 14       	IF !CC JUMP 0xa7f4 <_AnswerLocalQuestionWithLocalAuthRecord+0x1c8> (BP);
    a7ae:	a6 6c       	SP += 0x14;		/* ( 20) */
    a7b0:	53 30       	R2 = P3;
    a7b2:	27 01       	RETS = [SP++];
    a7b4:	45 30       	R0 = P5;
    a7b6:	22 64       	R2 += 0x4;		/* (  4) */
    a7b8:	ab 05       	(R7:5, P5:3) = [SP++];
    a7ba:	ff e2 7d fe 	JUMP.L 0xa4b4 <_AnswerQuestionByFollowingCNAME>;
    a7be:	53 30       	R2 = P3;
    a7c0:	22 64       	R2 += 0x4;		/* (  4) */
    a7c2:	f7 b0       	[SP + 0xc] = R7;
    a7c4:	45 30       	R0 = P5;
    a7c6:	4c 30       	R1 = P4;
    a7c8:	62 00       	CALL (P2);
    a7ca:	00 00       	NOP;
    a7cc:	e9 a2       	R1 = [P5 + 0x2c];
    a7ce:	28 a3       	R0 = [P5 + 0x30];
    a7d0:	01 08       	CC = R1 == R0;
    a7d2:	0e 18       	IF CC JUMP 0xa7ee <_AnswerLocalQuestionWithLocalAuthRecord+0x1c2>;
    a7d4:	f1 b0       	[SP + 0xc] = R1;
    a7d6:	30 b1       	[SP + 0x10] = R0;
    a7d8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x40( 64) */
    a7dc:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x3f8(1016) */
    a7e0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    a7e2:	01 e1 40 00 	R1.L = 0x40;		/* ( 64)	R1=0x40( 64) */
    a7e6:	02 e1 f8 03 	R2.L = 0x3f8;		/* (1016)	R2=0x3f8(1016) */
    a7ea:	ff e3 0b ac 	CALL 0x0 <_AddRecordToResponseList>;
    a7ee:	28 a3       	R0 = [P5 + 0x30];
    a7f0:	f8 67       	R0 += -0x1;		/* ( -1) */
    a7f2:	28 b3       	[P5 + 0x30] = R0;
    a7f4:	a6 6c       	SP += 0x14;		/* ( 20) */
    a7f6:	27 01       	RETS = [SP++];
    a7f8:	ab 05       	(R7:5, P5:3) = [SP++];
    a7fa:	10 00       	RTS;

0000a7fc <_LocalRecordRmvEventsForQuestion>:
_LocalRecordRmvEventsForQuestion():
    a7fc:	eb 05       	[--SP] = (R7:5, P5:3);
    a7fe:	18 32       	P3 = R0;
    a800:	00 e8 07 00 	LINK 0x1c;		/* (28) */
    a804:	29 32       	P5 = R1;
    a806:	1c e5 4e 00 	P4 = [P3 + 0x138];
    a80a:	44 0c       	CC = P4 == 0x0;
    a80c:	11 1c       	IF CC JUMP 0xa82e <_LocalRecordRmvEventsForQuestion+0x32> (BP);
    a80e:	60 e5 1a 01 	R0 = W[P4 + 0x234] (X);
    a812:	ff e3 f7 ab 	CALL 0x0 <_AddRecordToResponseList>;
    a816:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    a81a:	94 5a       	P2 = P4 + P2;
    a81c:	f0 b0       	[SP + 0xc] = R0;
    a81e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x40( 64) */
    a822:	52 30       	R2 = P2;
    a824:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    a826:	01 e1 1c 2d 	R1.L = 0x2d1c;		/* (11548)	R1=0x2d1c(11548) */
    a82a:	ff e3 eb ab 	CALL 0x0 <_AddRecordToResponseList>;
    a82e:	00 00       	NOP;
    a830:	1a e5 4d 00 	P2 = [P3 + 0x134];
    a834:	04 20       	JUMP.S 0xa83c <_LocalRecordRmvEventsForQuestion+0x40>;
    a836:	6a 08       	CC = P2 == P5;
    a838:	05 1c       	IF CC JUMP 0xa842 <_LocalRecordRmvEventsForQuestion+0x46> (BP);
    a83a:	52 91       	P2 = [P2];
    a83c:	42 0c       	CC = P2 == 0x0;
    a83e:	fc 17       	IF !CC JUMP 0xa836 <_LocalRecordRmvEventsForQuestion+0x3a> (BP);
    a840:	85 20       	JUMP.S 0xa94a <_LocalRecordRmvEventsForQuestion+0x14e>;
    a842:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    a846:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    a84a:	10 91       	R0 = [P2];
    a84c:	00 0c       	CC = R0 == 0x0;
    a84e:	78 1c       	IF CC JUMP 0xa93e <_LocalRecordRmvEventsForQuestion+0x142> (BP);
    a850:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    a854:	ff e3 d6 ab 	CALL 0x0 <_AddRecordToResponseList>;
    a858:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    a85c:	95 5a       	P2 = P5 + P2;
    a85e:	f0 b0       	[SP + 0xc] = R0;
    a860:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2d1c(11548) */
    a864:	52 30       	R2 = P2;
    a866:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    a868:	01 e1 70 2d 	R1.L = 0x2d70;		/* (11632)	R1=0x2d70(11632) */
    a86c:	ff e3 ca ab 	CALL 0x0 <_AddRecordToResponseList>;
    a870:	67 20       	JUMP.S 0xa93e <_LocalRecordRmvEventsForQuestion+0x142>;
    a872:	47 e1 00 00 	R7.H = 0x0;		/* (  0)	R7=0x2c58(11352) */
    a876:	6b 30       	R5 = P3;
    a878:	94 ac       	P4 = [P2 + 0x8];
    a87a:	96 61       	R6 = 0x32 (X);		/*		R6=0x32( 50) */
    a87c:	07 e1 00 00 	R7.L = 0x0;		/* (  0)	R7=0x0 <_AddRecordToResponseList>(  0) */
    a880:	bd 65       	R5 += 0x37;		/* ( 55) */
    a882:	59 20       	JUMP.S 0xa934 <_LocalRecordRmvEventsForQuestion+0x138>;
    a884:	00 00       	NOP;
    a886:	20 e4 20 00 	R0 = [P4 + 0x80];
    a88a:	10 0c       	CC = R0 == 0x2;
    a88c:	52 14       	IF !CC JUMP 0xa930 <_LocalRecordRmvEventsForQuestion+0x134> (BP);
    a88e:	a0 e4 04 00 	R0 = B[P4 + 0x4] (Z);
    a892:	30 54       	R0 = R0 & R6;
    a894:	00 0c       	CC = R0 == 0x0;
    a896:	4d 1c       	IF CC JUMP 0xa930 <_LocalRecordRmvEventsForQuestion+0x134> (BP);
    a898:	e0 a4       	R0 = W[P4 + 0x6] (Z);
    a89a:	08 0c       	CC = R0 == 0x1;
    a89c:	07 18       	IF CC JUMP 0xa8aa <_LocalRecordRmvEventsForQuestion+0xae>;
    a89e:	e1 60       	R1 = 0x1c (X);		/*		R1=0x1c( 28) */
    a8a0:	08 08       	CC = R0 == R1;
    a8a2:	04 18       	IF CC JUMP 0xa8aa <_LocalRecordRmvEventsForQuestion+0xae>;
    a8a4:	29 60       	R1 = 0x5 (X);		/*		R1=0x5(  5) */
    a8a6:	08 08       	CC = R0 == R1;
    a8a8:	44 14       	IF !CC JUMP 0xa930 <_LocalRecordRmvEventsForQuestion+0x134> (BP);
    a8aa:	44 30       	R0 = P4;
    a8ac:	4d 30       	R1 = P5;
    a8ae:	ff e3 a9 ab 	CALL 0x0 <_AddRecordToResponseList>;
    a8b2:	00 0c       	CC = R0 == 0x0;
    a8b4:	3e 1c       	IF CC JUMP 0xa930 <_LocalRecordRmvEventsForQuestion+0x134> (BP);
    a8b6:	17 32       	P2 = R7;
    a8b8:	10 91       	R0 = [P2];
    a8ba:	00 0c       	CC = R0 == 0x0;
    a8bc:	10 1c       	IF CC JUMP 0xa8dc <_LocalRecordRmvEventsForQuestion+0xe0> (BP);
    a8be:	61 a2       	R1 = [P4 + 0x24];
    a8c0:	44 30       	R0 = P4;
    a8c2:	21 64       	R1 += 0x4;		/* (  4) */
    a8c4:	15 30       	R2 = R5;
    a8c6:	20 64       	R0 += 0x4;		/* (  4) */
    a8c8:	ff e3 9c ab 	CALL 0x0 <_AddRecordToResponseList>;
    a8cc:	10 30       	R2 = R0;
    a8ce:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5(  5) */
    a8d2:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    a8d4:	01 e1 a8 2d 	R1.L = 0x2da8;		/* (11688)	R1=0x2da8(11688) */
    a8d8:	ff e3 94 ab 	CALL 0x0 <_AddRecordToResponseList>;
    a8dc:	00 00       	NOP;
    a8de:	28 a2       	R0 = [P5 + 0x20];
    a8e0:	00 0c       	CC = R0 == 0x0;
    a8e2:	05 1c       	IF CC JUMP 0xa8ec <_LocalRecordRmvEventsForQuestion+0xf0> (BP);
    a8e4:	a8 e4 b8 00 	R0 = B[P5 + 0xb8] (Z);
    a8e8:	00 0c       	CC = R0 == 0x0;
    a8ea:	16 14       	IF !CC JUMP 0xa916 <_LocalRecordRmvEventsForQuestion+0x11a> (BP);
    a8ec:	00 00       	NOP;
    a8ee:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    a8f2:	ff e3 87 ab 	CALL 0x0 <_AddRecordToResponseList>;
    a8f6:	30 b1       	[SP + 0x10] = R0;
    a8f8:	28 a2       	R0 = [P5 + 0x20];
    a8fa:	70 b1       	[SP + 0x14] = R0;
    a8fc:	a8 e4 b8 00 	R0 = B[P5 + 0xb8] (Z);
    a900:	b0 b1       	[SP + 0x18] = R0;
    a902:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2da8(11688) */
    a906:	f7 bc       	[SP + 0xc] = FP;
    a908:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    a90a:	01 e1 f8 2d 	R1.L = 0x2df8;		/* (11768)	R1=0x2df8(11768) */
    a90e:	55 30       	R2 = P5;
    a910:	ff e3 78 ab 	CALL 0x0 <_AddRecordToResponseList>;
    a914:	0e 20       	JUMP.S 0xa930 <_LocalRecordRmvEventsForQuestion+0x134>;
    a916:	43 30       	R0 = P3;
    a918:	4c 30       	R1 = P4;
    a91a:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    a91c:	ff e3 88 fe 	CALL 0xa62c <_AnswerLocalQuestionWithLocalAuthRecord>;
    a920:	1a e5 4e 00 	P2 = [P3 + 0x138];
    a924:	6a 08       	CC = P2 == P5;
    a926:	05 1c       	IF CC JUMP 0xa930 <_LocalRecordRmvEventsForQuestion+0x134> (BP);
    a928:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    a92a:	18 e6 4e 00 	[P3 + 0x138] = R0;
    a92e:	09 20       	JUMP.S 0xa940 <_LocalRecordRmvEventsForQuestion+0x144>;
    a930:	00 00       	NOP;
    a932:	64 91       	P4 = [P4];
    a934:	44 0c       	CC = P4 == 0x0;
    a936:	a7 17       	IF !CC JUMP 0xa884 <_LocalRecordRmvEventsForQuestion+0x88> (BP);
    a938:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    a93a:	18 e6 4e 00 	[P3 + 0x138] = R0;
    a93e:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    a940:	e6 6c       	SP += 0x1c;		/* ( 28) */
    a942:	77 90       	FP = [SP++];
    a944:	27 01       	RETS = [SP++];
    a946:	ab 05       	(R7:5, P5:3) = [SP++];
    a948:	10 00       	RTS;
    a94a:	2f e1 34 01 	FP = 0x134 (X);		/*		FP=0x134(308) */
    a94e:	fd 5b       	FP = P5 + FP;
    a950:	1d e7 4e 00 	[P3 + 0x138] = P5;
    a954:	47 30       	R0 = FP;
    a956:	ff e3 55 ab 	CALL 0x0 <_AddRecordToResponseList>;
    a95a:	41 e1 d5 20 	R1.H = 0x20d5;		/* (8405)	R1=0x20d52df8(550841848) */
    a95e:	38 30       	R7 = R0;
    a960:	01 e1 39 6b 	R1.L = 0x6b39;		/* (27449)	R1=0x20d56b39(550857529) */
    a964:	ff e3 4e ab 	CALL 0x0 <_AddRecordToResponseList>;
    a968:	82 c6 d0 83 	R1 = R0 >> 0x6;
    a96c:	6a a0       	R2 = [P5 + 0x4];
    a96e:	20 e1 f3 01 	R0 = 0x1f3 (X);		/*		R0=0x1f3(499) */
    a972:	c1 40       	R1 *= R0;
    a974:	2c e1 f4 10 	P4 = 0x10f4 (X);		/*		P4=0x10f4(4340) */
    a978:	23 5b       	P4 = P3 + P4;
    a97a:	4f 52       	R1 = R7 - R1;
    a97c:	f7 bc       	[SP + 0xc] = FP;
    a97e:	44 30       	R0 = P4;
    a980:	ff e3 56 bb 	CALL 0x202c <_AuthGroupForName>;
    a984:	10 32       	P2 = R0;
    a986:	42 0c       	CC = P2 == 0x0;
    a988:	75 17       	IF !CC JUMP 0xa872 <_LocalRecordRmvEventsForQuestion+0x76> (BP);
    a98a:	d7 2f       	JUMP.S 0xa938 <_LocalRecordRmvEventsForQuestion+0x13c>;

0000a98c <_AnswerAllLocalQuestionsWithLocalAuthRecord>:
_AnswerAllLocalQuestionsWithLocalAuthRecord():
    a98c:	f3 05       	[--SP] = (R7:6, P5:3);
    a98e:	28 32       	P5 = R0;
    a990:	67 01       	[--SP] = RETS;
    a992:	86 6f       	SP += -0x10;		/* (-16) */
    a994:	21 32       	P4 = R1;
    a996:	3a 30       	R7 = R2;
    a998:	2b e5 4e 00 	P3 = [P5 + 0x138];
    a99c:	43 0c       	CC = P3 == 0x0;
    a99e:	11 1c       	IF CC JUMP 0xa9c0 <_AnswerAllLocalQuestionsWithLocalAuthRecord+0x34> (BP);
    a9a0:	58 e5 1a 01 	R0 = W[P3 + 0x234] (X);
    a9a4:	ff e3 2e ab 	CALL 0x0 <_AddRecordToResponseList>;
    a9a8:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    a9ac:	93 5a       	P2 = P3 + P2;
    a9ae:	f0 b0       	[SP + 0xc] = R0;
    a9b0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x6b39(27449) */
    a9b4:	52 30       	R2 = P2;
    a9b6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    a9b8:	01 e1 80 2e 	R1.L = 0x2e80;		/* (11904)	R1=0x2e80(11904) */
    a9bc:	ff e3 22 ab 	CALL 0x0 <_AddRecordToResponseList>;
    a9c0:	00 00       	NOP;
    a9c2:	28 e4 4f 00 	R0 = [P5 + 0x13c];
    a9c6:	74 30       	R6 = P4;
    a9c8:	28 e6 4e 00 	[P5 + 0x138] = R0;
    a9cc:	26 64       	R6 += 0x4;		/* (  4) */
    a9ce:	1e 20       	JUMP.S 0xaa0a <_AnswerAllLocalQuestionsWithLocalAuthRecord+0x7e>;
    a9d0:	00 00       	NOP;
    a9d2:	20 e4 20 00 	R0 = [P4 + 0x80];
    a9d6:	08 0e       	CC = R0 <= 0x1 (IU);
    a9d8:	06 14       	IF !CC JUMP 0xa9e4 <_AnswerAllLocalQuestionsWithLocalAuthRecord+0x58> (BP);
    a9da:	06 30       	R0 = R6;
    a9dc:	4b 30       	R1 = P3;
    a9de:	ff e3 11 ab 	CALL 0x0 <_AddRecordToResponseList>;
    a9e2:	05 20       	JUMP.S 0xa9ec <_AnswerAllLocalQuestionsWithLocalAuthRecord+0x60>;
    a9e4:	44 30       	R0 = P4;
    a9e6:	4b 30       	R1 = P3;
    a9e8:	ff e3 0c ab 	CALL 0x0 <_AddRecordToResponseList>;
    a9ec:	00 0c       	CC = R0 == 0x0;
    a9ee:	06 1c       	IF CC JUMP 0xa9fa <_AnswerAllLocalQuestionsWithLocalAuthRecord+0x6e> (BP);
    a9f0:	45 30       	R0 = P5;
    a9f2:	4c 30       	R1 = P4;
    a9f4:	17 30       	R2 = R7;
    a9f6:	ff e3 1b fe 	CALL 0xa62c <_AnswerLocalQuestionWithLocalAuthRecord>;
    a9fa:	00 00       	NOP;
    a9fc:	2a e5 4e 00 	P2 = [P5 + 0x138];
    aa00:	5a 08       	CC = P2 == P3;
    aa02:	04 14       	IF !CC JUMP 0xaa0a <_AnswerAllLocalQuestionsWithLocalAuthRecord+0x7e> (BP);
    aa04:	10 91       	R0 = [P2];
    aa06:	28 e6 4e 00 	[P5 + 0x138] = R0;
    aa0a:	00 00       	NOP;
    aa0c:	2b e5 4e 00 	P3 = [P5 + 0x138];
    aa10:	43 0c       	CC = P3 == 0x0;
    aa12:	06 1c       	IF CC JUMP 0xaa1e <_AnswerAllLocalQuestionsWithLocalAuthRecord+0x92> (BP);
    aa14:	4b 30       	R1 = P3;
    aa16:	28 e4 50 00 	R0 = [P5 + 0x140];
    aa1a:	01 08       	CC = R1 == R0;
    aa1c:	da 17       	IF !CC JUMP 0xa9d0 <_AnswerAllLocalQuestionsWithLocalAuthRecord+0x44> (BP);
    aa1e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    aa20:	28 e6 4e 00 	[P5 + 0x138] = R0;
    aa24:	20 e4 20 00 	R0 = [P4 + 0x80];
    aa28:	f0 67       	R0 += -0x2;		/* ( -2) */
    aa2a:	08 0e       	CC = R0 <= 0x1 (IU);
    aa2c:	32 14       	IF !CC JUMP 0xaa90 <_AnswerAllLocalQuestionsWithLocalAuthRecord+0x104> (BP);
    aa2e:	28 e4 4c 00 	R0 = [P5 + 0x130];
    aa32:	74 30       	R6 = P4;
    aa34:	28 e6 4e 00 	[P5 + 0x138] = R0;
    aa38:	26 64       	R6 += 0x4;		/* (  4) */
    aa3a:	1e 20       	JUMP.S 0xaa76 <_AnswerAllLocalQuestionsWithLocalAuthRecord+0xea>;
    aa3c:	00 00       	NOP;
    aa3e:	20 e4 20 00 	R0 = [P4 + 0x80];
    aa42:	08 0e       	CC = R0 <= 0x1 (IU);
    aa44:	06 14       	IF !CC JUMP 0xaa50 <_AnswerAllLocalQuestionsWithLocalAuthRecord+0xc4> (BP);
    aa46:	06 30       	R0 = R6;
    aa48:	4b 30       	R1 = P3;
    aa4a:	ff e3 db aa 	CALL 0x0 <_AddRecordToResponseList>;
    aa4e:	05 20       	JUMP.S 0xaa58 <_AnswerAllLocalQuestionsWithLocalAuthRecord+0xcc>;
    aa50:	44 30       	R0 = P4;
    aa52:	4b 30       	R1 = P3;
    aa54:	ff e3 d6 aa 	CALL 0x0 <_AddRecordToResponseList>;
    aa58:	00 0c       	CC = R0 == 0x0;
    aa5a:	06 1c       	IF CC JUMP 0xaa66 <_AnswerAllLocalQuestionsWithLocalAuthRecord+0xda> (BP);
    aa5c:	45 30       	R0 = P5;
    aa5e:	4c 30       	R1 = P4;
    aa60:	17 30       	R2 = R7;
    aa62:	ff e3 e5 fd 	CALL 0xa62c <_AnswerLocalQuestionWithLocalAuthRecord>;
    aa66:	00 00       	NOP;
    aa68:	2a e5 4e 00 	P2 = [P5 + 0x138];
    aa6c:	5a 08       	CC = P2 == P3;
    aa6e:	04 14       	IF !CC JUMP 0xaa76 <_AnswerAllLocalQuestionsWithLocalAuthRecord+0xea> (BP);
    aa70:	10 91       	R0 = [P2];
    aa72:	28 e6 4e 00 	[P5 + 0x138] = R0;
    aa76:	00 00       	NOP;
    aa78:	2b e5 4e 00 	P3 = [P5 + 0x138];
    aa7c:	43 0c       	CC = P3 == 0x0;
    aa7e:	06 1c       	IF CC JUMP 0xaa8a <_AnswerAllLocalQuestionsWithLocalAuthRecord+0xfe> (BP);
    aa80:	4b 30       	R1 = P3;
    aa82:	28 e4 4d 00 	R0 = [P5 + 0x134];
    aa86:	01 08       	CC = R1 == R0;
    aa88:	da 17       	IF !CC JUMP 0xaa3c <_AnswerAllLocalQuestionsWithLocalAuthRecord+0xb0> (BP);
    aa8a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    aa8c:	28 e6 4e 00 	[P5 + 0x138] = R0;
    aa90:	86 6c       	SP += 0x10;		/* ( 16) */
    aa92:	27 01       	RETS = [SP++];
    aa94:	b3 05       	(R7:6, P5:3) = [SP++];
    aa96:	10 00       	RTS;

0000aa98 <_CompleteDeregistration>:
_CompleteDeregistration():
    aa98:	f5 05       	[--SP] = (R7:6, P5:5);
    aa9a:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    aa9e:	67 01       	[--SP] = RETS;
    aaa0:	38 30       	R7 = R0;
    aaa2:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    aaa6:	10 91       	R0 = [P2];
    aaa8:	a6 6f       	SP += -0xc;		/* (-12) */
    aaaa:	29 32       	P5 = R1;
    aaac:	00 0c       	CC = R0 == 0x0;
    aaae:	11 1c       	IF CC JUMP 0xaad0 <_CompleteDeregistration+0x38> (BP);
    aab0:	01 30       	R0 = R1;
    aab2:	69 a2       	R1 = [P5 + 0x24];
    aab4:	17 30       	R2 = R7;
    aab6:	21 64       	R1 += 0x4;		/* (  4) */
    aab8:	ba 65       	R2 += 0x37;		/* ( 55) */
    aaba:	20 64       	R0 += 0x4;		/* (  4) */
    aabc:	ff e3 a2 aa 	CALL 0x0 <_AddRecordToResponseList>;
    aac0:	10 30       	R2 = R0;
    aac2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2e80(11904) */
    aac6:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    aac8:	01 e1 dc 2e 	R1.L = 0x2edc;		/* (11996)	R1=0x2edc(11996) */
    aacc:	ff e3 9a aa 	CALL 0x0 <_AddRecordToResponseList>;
    aad0:	40 60       	R0 = 0x8 (X);		/*		R0=0x8(  8) */
    aad2:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    aad6:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    aada:	a8 e6 04 00 	B[P5 + 0x4] = R0;
    aade:	10 91       	R0 = [P2];
    aae0:	28 e6 13 00 	[P5 + 0x4c] = R0;
    aae4:	50 a0       	R0 = [P2 + 0x4];
    aae6:	28 e6 14 00 	[P5 + 0x50] = R0;
    aaea:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
    aaec:	a8 e4 88 00 	R0 = B[P5 + 0x88] (Z);
    aaf0:	ae e6 87 00 	B[P5 + 0x87] = R6;
    aaf4:	00 0c       	CC = R0 == 0x0;
    aaf6:	08 1c       	IF CC JUMP 0xab06 <_CompleteDeregistration+0x6e> (BP);
    aaf8:	07 30       	R0 = R7;
    aafa:	4d 30       	R1 = P5;
    aafc:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    aafe:	ff e3 47 ff 	CALL 0xa98c <_AnswerAllLocalQuestionsWithLocalAuthRecord>;
    ab02:	ae e6 88 00 	B[P5 + 0x88] = R6;
    ab06:	66 6c       	SP += 0xc;		/* ( 12) */
    ab08:	27 01       	RETS = [SP++];
    ab0a:	07 30       	R0 = R7;
    ab0c:	4d 30       	R1 = P5;
    ab0e:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    ab10:	b5 05       	(R7:6, P5:5) = [SP++];
    ab12:	ff e2 75 d2 	JUMP.L 0x4ffc <_mDNS_Deregister_internal>;
	...

0000ab18 <_DiscardDeregistrations>:
_DiscardDeregistrations():
    ab18:	c3 04       	[--SP] = (P5:3);
    ab1a:	20 32       	P4 = R0;
    ab1c:	67 01       	[--SP] = RETS;
    ab1e:	a6 6f       	SP += -0xc;		/* (-12) */
    ab20:	22 e5 f5 07 	P2 = [P4 + 0x1fd4];
    ab24:	42 0c       	CC = P2 == 0x0;
    ab26:	11 18       	IF CC JUMP 0xab48 <_DiscardDeregistrations+0x30>;
    ab28:	42 30       	R0 = P2;
    ab2a:	54 30       	R2 = P4;
    ab2c:	ba 65       	R2 += 0x37;		/* ( 55) */
    ab2e:	51 a2       	R1 = [P2 + 0x24];
    ab30:	21 64       	R1 += 0x4;		/* (  4) */
    ab32:	20 64       	R0 += 0x4;		/* (  4) */
    ab34:	ff e3 66 aa 	CALL 0x0 <_AddRecordToResponseList>;
    ab38:	10 30       	R2 = R0;
    ab3a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2edc(11996) */
    ab3e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    ab40:	01 e1 14 2f 	R1.L = 0x2f14;		/* (12052)	R1=0x2f14(12052) */
    ab44:	ff e3 5e aa 	CALL 0x0 <_AddRecordToResponseList>;
    ab48:	20 e4 f2 07 	R0 = [P4 + 0x1fc8];
    ab4c:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x134 */
    ab50:	20 e6 f5 07 	[P4 + 0x1fd4] = R0;
    ab54:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
    ab58:	1d 20       	JUMP.S 0xab92 <_DiscardDeregistrations+0x7a>;
    ab5a:	00 00       	NOP;
    ab5c:	e9 a1       	R1 = [P5 + 0x1c];
    ab5e:	18 91       	R0 = [P3];
    ab60:	01 08       	CC = R1 == R0;
    ab62:	0a 14       	IF !CC JUMP 0xab76 <_DiscardDeregistrations+0x5e> (BP);
    ab64:	a8 e4 46 00 	R0 = B[P5 + 0x46] (Z);
    ab68:	00 0c       	CC = R0 == 0x0;
    ab6a:	06 14       	IF !CC JUMP 0xab76 <_DiscardDeregistrations+0x5e> (BP);
    ab6c:	28 a2       	R0 = [P5 + 0x20];
    ab6e:	ff e3 49 aa 	CALL 0x0 <_AddRecordToResponseList>;
    ab72:	00 0c       	CC = R0 == 0x0;
    ab74:	0b 1c       	IF CC JUMP 0xab8a <_DiscardDeregistrations+0x72> (BP);
    ab76:	00 00       	NOP;
    ab78:	a8 e4 04 00 	R0 = B[P5 + 0x4] (Z);
    ab7c:	08 0c       	CC = R0 == 0x1;
    ab7e:	06 14       	IF !CC JUMP 0xab8a <_DiscardDeregistrations+0x72> (BP);
    ab80:	44 30       	R0 = P4;
    ab82:	4d 30       	R1 = P5;
    ab84:	ff e3 8a ff 	CALL 0xaa98 <_CompleteDeregistration>;
    ab88:	05 20       	JUMP.S 0xab92 <_DiscardDeregistrations+0x7a>;
    ab8a:	00 00       	NOP;
    ab8c:	28 91       	R0 = [P5];
    ab8e:	20 e6 f5 07 	[P4 + 0x1fd4] = R0;
    ab92:	25 e5 f5 07 	P5 = [P4 + 0x1fd4];
    ab96:	45 0c       	CC = P5 == 0x0;
    ab98:	e1 17       	IF !CC JUMP 0xab5a <_DiscardDeregistrations+0x42> (BP);
    ab9a:	66 6c       	SP += 0xc;		/* ( 12) */
    ab9c:	27 01       	RETS = [SP++];
    ab9e:	83 04       	(P5:3) = [SP++];
    aba0:	10 00       	RTS;
	...

0000aba4 <_CheckRmvEventsForLocalRecords>:
_CheckRmvEventsForLocalRecords():
    aba4:	ec 05       	[--SP] = (R7:5, P5:4);
    aba6:	67 01       	[--SP] = RETS;
    aba8:	a6 6f       	SP += -0xc;		/* (-12) */
    abaa:	20 32       	P4 = R0;
    abac:	47 60       	R7 = 0x8 (X);		/*		R7=0x8(  8) */
    abae:	0e 60       	R6 = 0x1 (X);		/*		R6=0x1(  1) */
    abb0:	05 60       	R5 = 0x0 (X);		/*		R5=0x0(  0) */
    abb2:	2a 20       	JUMP.S 0xac06 <_CheckRmvEventsForLocalRecords+0x62>;
    abb4:	00 00       	NOP;
    abb6:	a8 e4 88 00 	R0 = B[P5 + 0x88] (Z);
    abba:	00 0c       	CC = R0 == 0x0;
    abbc:	1d 1c       	IF CC JUMP 0xabf6 <_CheckRmvEventsForLocalRecords+0x52> (BP);
    abbe:	a8 e4 04 00 	R0 = B[P5 + 0x4] (Z);
    abc2:	08 0c       	CC = R0 == 0x1;
    abc4:	19 14       	IF !CC JUMP 0xabf6 <_CheckRmvEventsForLocalRecords+0x52> (BP);
    abc6:	af e6 04 00 	B[P5 + 0x4] = R7;
    abca:	44 30       	R0 = P4;
    abcc:	4d 30       	R1 = P5;
    abce:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    abd0:	ff e3 de fe 	CALL 0xa98c <_AnswerAllLocalQuestionsWithLocalAuthRecord>;
    abd4:	22 e5 f5 07 	P2 = [P4 + 0x1fd4];
    abd8:	6a 08       	CC = P2 == P5;
    abda:	0e 14       	IF !CC JUMP 0xabf6 <_CheckRmvEventsForLocalRecords+0x52> (BP);
    abdc:	10 e4 20 00 	R0 = [P2 + 0x80];
    abe0:	f0 67       	R0 += -0x2;		/* ( -2) */
    abe2:	96 e6 04 00 	B[P2 + 0x4] = R6;
    abe6:	95 e6 88 00 	B[P2 + 0x88] = R5;
    abea:	08 0e       	CC = R0 <= 0x1 (IU);
    abec:	05 14       	IF !CC JUMP 0xabf6 <_CheckRmvEventsForLocalRecords+0x52> (BP);
    abee:	44 30       	R0 = P4;
    abf0:	4a 30       	R1 = P2;
    abf2:	ff e3 53 ff 	CALL 0xaa98 <_CompleteDeregistration>;
    abf6:	00 00       	NOP;
    abf8:	22 e5 f5 07 	P2 = [P4 + 0x1fd4];
    abfc:	6a 08       	CC = P2 == P5;
    abfe:	04 14       	IF !CC JUMP 0xac06 <_CheckRmvEventsForLocalRecords+0x62> (BP);
    ac00:	10 91       	R0 = [P2];
    ac02:	20 e6 f5 07 	[P4 + 0x1fd4] = R0;
    ac06:	00 00       	NOP;
    ac08:	25 e5 f5 07 	P5 = [P4 + 0x1fd4];
    ac0c:	45 0c       	CC = P5 == 0x0;
    ac0e:	d3 17       	IF !CC JUMP 0xabb4 <_CheckRmvEventsForLocalRecords+0x10> (BP);
    ac10:	66 6c       	SP += 0xc;		/* ( 12) */
    ac12:	27 01       	RETS = [SP++];
    ac14:	ac 05       	(R7:5, P5:4) = [SP++];
    ac16:	10 00       	RTS;

0000ac18 <_AnswerCurrentQuestionWithResourceRecord>:
_AnswerCurrentQuestionWithResourceRecord():
    ac18:	f3 05       	[--SP] = (R7:6, P5:3);
    ac1a:	18 32       	P3 = R0;
    ac1c:	00 e8 2f 00 	LINK 0xbc;		/* (188) */
    ac20:	21 32       	P4 = R1;
    ac22:	3a 30       	R7 = R2;
    ac24:	02 0c       	CC = R2 == 0x0;
    ac26:	1d e5 4e 00 	P5 = [P3 + 0x138];
    ac2a:	10 1c       	IF CC JUMP 0xac4a <_AnswerCurrentQuestionWithResourceRecord+0x32> (BP);
    ac2c:	68 e4 1a 01 	R0 = W[P5 + 0x234] (Z);
    ac30:	29 60       	R1 = 0x5 (X);		/*		R1=0x5(  5) */
    ac32:	08 08       	CC = R0 == R1;
    ac34:	0b 1c       	IF CC JUMP 0xac4a <_AnswerCurrentQuestionWithResourceRecord+0x32> (BP);
    ac36:	22 e1 f0 00 	R2 = 0xf0 (X);		/*		R2=0xf0(240) */
    ac3a:	a0 e4 04 00 	R0 = B[P4 + 0x4] (Z);
    ac3e:	10 08       	CC = R0 == R2;
    ac40:	05 1c       	IF CC JUMP 0xac4a <_AnswerCurrentQuestionWithResourceRecord+0x32> (BP);
    ac42:	e0 a4       	R0 = W[P4 + 0x6] (Z);
    ac44:	08 08       	CC = R0 == R1;
    ac46:	06 02       	R6 = CC;
    ac48:	02 20       	JUMP.S 0xac4c <_AnswerCurrentQuestionWithResourceRecord+0x34>;
    ac4a:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
    ac4c:	a8 e4 b8 00 	R0 = B[P5 + 0xb8] (Z);
    ac50:	00 0c       	CC = R0 == 0x0;
    ac52:	27 1c       	IF CC JUMP 0xaca0 <_AnswerCurrentQuestionWithResourceRecord+0x88> (BP);
    ac54:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    ac58:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    ac5c:	10 91       	R0 = [P2];
    ac5e:	00 0c       	CC = R0 == 0x0;
    ac60:	37 1d       	IF CC JUMP 0xaece <_AnswerCurrentQuestionWithResourceRecord+0x2b6> (BP);
    ac62:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    ac66:	ff e3 cd a9 	CALL 0x0 <_AddRecordToResponseList>;
    ac6a:	38 30       	R7 = R0;
    ac6c:	61 a2       	R1 = [P4 + 0x24];
    ac6e:	44 30       	R0 = P4;
    ac70:	53 30       	R2 = P3;
    ac72:	21 64       	R1 += 0x4;		/* (  4) */
    ac74:	ba 65       	R2 += 0x37;		/* ( 55) */
    ac76:	20 64       	R0 += 0x4;		/* (  4) */
    ac78:	ff e3 c4 a9 	CALL 0x0 <_AddRecordToResponseList>;
    ac7c:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    ac80:	95 5a       	P2 = P5 + P2;
    ac82:	f2 bc       	[SP + 0xc] = P2;
    ac84:	37 b1       	[SP + 0x10] = R7;
    ac86:	70 b1       	[SP + 0x14] = R0;
    ac88:	a8 e4 b8 00 	R0 = B[P5 + 0xb8] (Z);
    ac8c:	b0 b1       	[SP + 0x18] = R0;
    ac8e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5(  5) */
    ac92:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    ac94:	01 e1 54 2f 	R1.L = 0x2f54;		/* (12116)	R1=0x2f54(12116) */
    ac98:	55 30       	R2 = P5;
    ac9a:	ff e3 b3 a9 	CALL 0x0 <_AddRecordToResponseList>;
    ac9e:	18 21       	JUMP.S 0xaece <_AnswerCurrentQuestionWithResourceRecord+0x2b6>;
    aca0:	00 00       	NOP;
    aca2:	28 e4 92 00 	R0 = [P5 + 0x248];
    aca6:	00 0c       	CC = R0 == 0x0;
    aca8:	16 1c       	IF CC JUMP 0xacd4 <_AnswerCurrentQuestionWithResourceRecord+0xbc> (BP);
    acaa:	28 e4 2d 00 	R0 = [P5 + 0xb4];
    acae:	00 0c       	CC = R0 == 0x0;
    acb0:	12 1c       	IF CC JUMP 0xacd4 <_AnswerCurrentQuestionWithResourceRecord+0xbc> (BP);
    acb2:	a8 e4 50 02 	R0 = B[P5 + 0x250] (Z);
    acb6:	00 0c       	CC = R0 == 0x0;
    acb8:	0b 1d       	IF CC JUMP 0xaece <_AnswerCurrentQuestionWithResourceRecord+0x2b6> (BP);
    acba:	21 e1 f0 00 	R1 = 0xf0 (X);		/*		R1=0xf0(240) */
    acbe:	a0 e4 04 00 	R0 = B[P4 + 0x4] (Z);
    acc2:	08 08       	CC = R0 == R1;
    acc4:	05 15       	IF !CC JUMP 0xaece <_AnswerCurrentQuestionWithResourceRecord+0x2b6> (BP);
    acc6:	19 e4 37 00 	R1 = [P3 + 0xdc];
    acca:	28 e4 2f 00 	R0 = [P5 + 0xbc];
    acce:	01 52       	R0 = R1 - R0;
    acd0:	80 0c       	CC = R0 < 0x0;
    acd2:	fe 1c       	IF CC JUMP 0xaece <_AnswerCurrentQuestionWithResourceRecord+0x2b6> (BP);
    acd4:	0f 0c       	CC = R7 == 0x1;
    acd6:	18 e4 37 00 	R0 = [P3 + 0xdc];
    acda:	e0 b3       	[P4 + 0x3c] = R0;
    acdc:	16 14       	IF !CC JUMP 0xad08 <_AnswerCurrentQuestionWithResourceRecord+0xf0> (BP);
    acde:	a8 a3       	R0 = [P5 + 0x38];
    ace0:	00 0c       	CC = R0 == 0x0;
    ace2:	f0 14       	IF !CC JUMP 0xaec2 <_AnswerCurrentQuestionWithResourceRecord+0x2aa> (BP);
    ace4:	22 e5 10 00 	P2 = [P4 + 0x40];
    ace8:	6a 08       	CC = P2 == P5;
    acea:	ec 18       	IF CC JUMP 0xaec2 <_AnswerCurrentQuestionWithResourceRecord+0x2aa>;
    acec:	42 0c       	CC = P2 == 0x0;
    acee:	06 14       	IF !CC JUMP 0xacfa <_AnswerCurrentQuestionWithResourceRecord+0xe2> (BP);
    acf0:	18 e4 54 00 	R0 = [P3 + 0x150];
    acf4:	08 64       	R0 += 0x1;		/* (  1) */
    acf6:	18 e6 54 00 	[P3 + 0x150] = R0;
    acfa:	25 e7 10 00 	[P4 + 0x40] = P5;
    acfe:	43 30       	R0 = P3;
    ad00:	4c 30       	R1 = P4;
    ad02:	ff e3 93 bd 	CALL 0x2828 <_SetNextCacheCheckTimeForRecord>;
    ad06:	de 20       	JUMP.S 0xaec2 <_AnswerCurrentQuestionWithResourceRecord+0x2aa>;
    ad08:	17 0c       	CC = R7 == 0x2;
    ad0a:	2e 14       	IF !CC JUMP 0xad66 <_AnswerCurrentQuestionWithResourceRecord+0x14e> (BP);
    ad0c:	28 e4 2a 00 	R0 = [P5 + 0xa8];
    ad10:	00 0c       	CC = R0 == 0x0;
    ad12:	06 1c       	IF CC JUMP 0xad1e <_AnswerCurrentQuestionWithResourceRecord+0x106> (BP);
    ad14:	29 20       	JUMP.S 0xad66 <_AnswerCurrentQuestionWithResourceRecord+0x14e>;
    ad16:	a0 e4 04 00 	R0 = B[P4 + 0x4] (Z);
    ad1a:	20 48       	CC = !BITTST (R0, 0x4);		/* bit  4 */
    ad1c:	25 1c       	IF CC JUMP 0xad66 <_AnswerCurrentQuestionWithResourceRecord+0x14e> (BP);
    ad1e:	00 00       	NOP;
    ad20:	28 a1       	R0 = [P5 + 0x10];
    ad22:	00 0d       	CC = R0 <= 0x0;
    ad24:	21 1c       	IF CC JUMP 0xad66 <_AnswerCurrentQuestionWithResourceRecord+0x14e> (BP);
    ad26:	a8 a3       	R0 = [P5 + 0x38];
    ad28:	00 0c       	CC = R0 == 0x0;
    ad2a:	1e 14       	IF !CC JUMP 0xad66 <_AnswerCurrentQuestionWithResourceRecord+0x14e> (BP);
    ad2c:	68 e4 99 00 	R0 = W[P5 + 0x132] (Z);
    ad30:	00 0c       	CC = R0 == 0x0;
    ad32:	05 1c       	IF CC JUMP 0xad3c <_AnswerCurrentQuestionWithResourceRecord+0x124> (BP);
    ad34:	28 e4 8e 00 	R0 = [P5 + 0x238];
    ad38:	00 0c       	CC = R0 == 0x0;
    ad3a:	16 14       	IF !CC JUMP 0xad66 <_AnswerCurrentQuestionWithResourceRecord+0x14e> (BP);
    ad3c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    ad40:	18 e4 37 00 	R0 = [P3 + 0xdc];
    ad44:	e8 b0       	[P5 + 0xc] = R0;
    ad46:	28 e6 2b 00 	[P5 + 0xac] = R0;
    ad4a:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    ad4e:	10 91       	R0 = [P2];
    ad50:	22 e1 10 0e 	R2 = 0xe10 (X);		/*		R2=0xe10(3600) */
    ad54:	d0 40       	R0 *= R2;
    ad56:	28 b1       	[P5 + 0x10] = R0;
    ad58:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    ad5a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    ad5c:	e9 b1       	[P5 + 0x1c] = R1;
    ad5e:	29 e6 2a 00 	[P5 + 0xa8] = R1;
    ad62:	a8 e6 d8 00 	B[P5 + 0xd8] = R0;
    ad66:	00 00       	NOP;
    ad68:	60 a3       	R0 = [P4 + 0x34];
    ad6a:	00 0c       	CC = R0 == 0x0;
    ad6c:	b1 14       	IF !CC JUMP 0xaece <_AnswerCurrentQuestionWithResourceRecord+0x2b6> (BP);
    ad6e:	22 e1 f0 00 	R2 = 0xf0 (X);		/*		R2=0xf0(240) */
    ad72:	a0 e4 04 00 	R0 = B[P4 + 0x4] (Z);
    ad76:	10 08       	CC = R0 == R2;
    ad78:	1d 1c       	IF CC JUMP 0xadb2 <_AnswerCurrentQuestionWithResourceRecord+0x19a> (BP);
    ad7a:	79 61       	R1 = 0x2f (X);		/*		R1=0x2f( 47) */
    ad7c:	68 e4 1a 01 	R0 = W[P5 + 0x234] (Z);
    ad80:	08 08       	CC = R0 == R1;
    ad82:	1e 1c       	IF CC JUMP 0xadbe <_AnswerCurrentQuestionWithResourceRecord+0x1a6> (BP);
    ad84:	7a 61       	R2 = 0x2f (X);		/*		R2=0x2f( 47) */
    ad86:	e1 a4       	R1 = W[P4 + 0x6] (Z);
    ad88:	11 08       	CC = R1 == R2;
    ad8a:	1a 14       	IF !CC JUMP 0xadbe <_AnswerCurrentQuestionWithResourceRecord+0x1a6> (BP);
    ad8c:	21 e1 fe 00 	R1 = 0xfe (X);		/*		R1=0xfe(254) */
    ad90:	08 0a       	CC = R0 <= R1 (IU);
    ad92:	16 14       	IF !CC JUMP 0xadbe <_AnswerCurrentQuestionWithResourceRecord+0x1a6> (BP);
    ad94:	82 c6 e8 83 	R1 = R0 >> 0x3;
    ad98:	62 ae       	P2 = [P4 + 0x24];
    ad9a:	09 32       	P1 = R1;
    ad9c:	39 60       	R1 = 0x7 (X);		/*		R1=0x7(  7) */
    ad9e:	08 54       	R0 = R0 & R1;
    ada0:	21 e1 80 00 	R1 = 0x80 (X);		/*		R1=0x80(128) */
    ada4:	01 40       	R1 >>>= R0;
    ada6:	8a 5a       	P2 = P2 + P1;
    ada8:	92 e4 04 00 	R2 = B[P2 + 0x4] (Z);
    adac:	4a 54       	R1 = R2 & R1;
    adae:	01 0c       	CC = R1 == 0x0;
    adb0:	07 14       	IF !CC JUMP 0xadbe <_AnswerCurrentQuestionWithResourceRecord+0x1a6> (BP);
    adb2:	07 0c       	CC = R7 == 0x0;
    adb4:	8d 1c       	IF CC JUMP 0xaece <_AnswerCurrentQuestionWithResourceRecord+0x2b6> (BP);
    adb6:	28 e4 91 00 	R0 = [P5 + 0x244];
    adba:	00 0c       	CC = R0 == 0x0;
    adbc:	89 1c       	IF CC JUMP 0xaece <_AnswerCurrentQuestionWithResourceRecord+0x2b6> (BP);
    adbe:	00 00       	NOP;
    adc0:	28 e4 97 00 	R0 = [P5 + 0x25c];
    adc4:	00 0c       	CC = R0 == 0x0;
    adc6:	71 1c       	IF CC JUMP 0xaea8 <_AnswerCurrentQuestionWithResourceRecord+0x290> (BP);
    adc8:	a8 e4 fe 00 	R0 = B[P5 + 0xfe] (Z);
    adcc:	00 0c       	CC = R0 == 0x0;
    adce:	6d 14       	IF !CC JUMP 0xaea8 <_AnswerCurrentQuestionWithResourceRecord+0x290> (BP);
    add0:	06 0c       	CC = R6 == 0x0;
    add2:	05 1c       	IF CC JUMP 0xaddc <_AnswerCurrentQuestionWithResourceRecord+0x1c4> (BP);
    add4:	28 e4 91 00 	R0 = [P5 + 0x244];
    add8:	00 0c       	CC = R0 == 0x0;
    adda:	69 1c       	IF CC JUMP 0xaeac <_AnswerCurrentQuestionWithResourceRecord+0x294> (BP);
    addc:	00 00       	NOP;
    adde:	18 a3       	R0 = [P3 + 0x30];
    ade0:	08 64       	R0 += 0x1;		/* (  1) */
    ade2:	d9 a2       	R1 = [P3 + 0x2c];
    ade4:	18 b3       	[P3 + 0x30] = R0;
    ade6:	01 08       	CC = R1 == R0;
    ade8:	0e 18       	IF CC JUMP 0xae04 <_AnswerCurrentQuestionWithResourceRecord+0x1ec>;
    adea:	f1 b0       	[SP + 0xc] = R1;
    adec:	30 b1       	[SP + 0x10] = R0;
    adee:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x80(128) */
    adf2:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x2f( 47) */
    adf6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    adf8:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    adfc:	02 e1 d0 04 	R2.L = 0x4d0;		/* (1232)	R2=0x4d0(1232) */
    ae00:	ff e3 00 a9 	CALL 0x0 <_AddRecordToResponseList>;
    ae04:	6b e5 1a 01 	R3 = W[P5 + 0x234] (X);
    ae08:	d8 42       	R0 = R3.L (Z);
    ae0a:	79 61       	R1 = 0x2f (X);		/*		R1=0x2f( 47) */
    ae0c:	08 08       	CC = R0 == R1;
    ae0e:	31 1c       	IF CC JUMP 0xae70 <_AnswerCurrentQuestionWithResourceRecord+0x258> (BP);
    ae10:	7a 61       	R2 = 0x2f (X);		/*		R2=0x2f( 47) */
    ae12:	e1 a4       	R1 = W[P4 + 0x6] (Z);
    ae14:	11 08       	CC = R1 == R2;
    ae16:	2d 14       	IF !CC JUMP 0xae70 <_AnswerCurrentQuestionWithResourceRecord+0x258> (BP);
    ae18:	21 e1 fe 00 	R1 = 0xfe (X);		/*		R1=0xfe(254) */
    ae1c:	08 0a       	CC = R0 <= R1 (IU);
    ae1e:	29 14       	IF !CC JUMP 0xae70 <_AnswerCurrentQuestionWithResourceRecord+0x258> (BP);
    ae20:	82 c6 e8 83 	R1 = R0 >> 0x3;
    ae24:	62 ae       	P2 = [P4 + 0x24];
    ae26:	09 32       	P1 = R1;
    ae28:	39 60       	R1 = 0x7 (X);		/*		R1=0x7(  7) */
    ae2a:	08 54       	R0 = R0 & R1;
    ae2c:	21 e1 80 00 	R1 = 0x80 (X);		/*		R1=0x80(128) */
    ae30:	01 40       	R1 >>>= R0;
    ae32:	8a 5a       	P2 = P2 + P1;
    ae34:	92 e4 04 00 	R2 = B[P2 + 0x4] (Z);
    ae38:	4a 54       	R1 = R2 & R1;
    ae3a:	01 0c       	CC = R1 == 0x0;
    ae3c:	1a 14       	IF !CC JUMP 0xae70 <_AnswerCurrentQuestionWithResourceRecord+0x258> (BP);
    ae3e:	68 a0       	R0 = [P5 + 0x4];
    ae40:	f0 b0       	[SP + 0xc] = R0;
    ae42:	33 b6       	W[SP + 0x10] = R3;
    ae44:	68 e5 1b 01 	R0 = W[P5 + 0x236] (X);
    ae48:	b0 b6       	W[SP + 0x14] = R0;
    ae4a:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    ae4c:	b0 b1       	[SP + 0x18] = R0;
    ae4e:	e0 a1       	R0 = [P4 + 0x1c];
    ae50:	f0 b1       	[SP + 0x1c] = R0;
    ae52:	28 e4 32 00 	R0 = [P5 + 0xc8];
    ae56:	7e 32       	FP = SP;
    ae58:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    ae5c:	27 6d       	FP += 0x24;		/* ( 36) */
    ae5e:	95 5a       	P2 = P5 + P2;
    ae60:	30 b2       	[SP + 0x20] = R0;
    ae62:	52 30       	R2 = P2;
    ae64:	43 30       	R0 = P3;
    ae66:	4f 30       	R1 = FP;
    ae68:	ff e3 4a ca 	CALL 0x42fc <_MakeNegativeCacheRecord>;
    ae6c:	57 30       	R2 = FP;
    ae6e:	02 20       	JUMP.S 0xae72 <_AnswerCurrentQuestionWithResourceRecord+0x25a>;
    ae70:	54 30       	R2 = P4;
    ae72:	f7 b0       	[SP + 0xc] = R7;
    ae74:	2a e5 97 00 	P2 = [P5 + 0x25c];
    ae78:	43 30       	R0 = P3;
    ae7a:	4d 30       	R1 = P5;
    ae7c:	22 64       	R2 += 0x4;		/* (  4) */
    ae7e:	62 00       	CALL (P2);
    ae80:	d9 a2       	R1 = [P3 + 0x2c];
    ae82:	18 a3       	R0 = [P3 + 0x30];
    ae84:	01 08       	CC = R1 == R0;
    ae86:	0e 18       	IF CC JUMP 0xaea2 <_AnswerCurrentQuestionWithResourceRecord+0x28a>;
    ae88:	f1 b0       	[SP + 0xc] = R1;
    ae8a:	30 b1       	[SP + 0x10] = R0;
    ae8c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x80(128) */
    ae90:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x2f( 47) */
    ae94:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    ae96:	01 e1 40 00 	R1.L = 0x40;		/* ( 64)	R1=0x40( 64) */
    ae9a:	02 e1 d0 04 	R2.L = 0x4d0;		/* (1232)	R2=0x4d0(1232) */
    ae9e:	ff e3 b1 a8 	CALL 0x0 <_AddRecordToResponseList>;
    aea2:	18 a3       	R0 = [P3 + 0x30];
    aea4:	f8 67       	R0 += -0x1;		/* ( -1) */
    aea6:	18 b3       	[P3 + 0x30] = R0;
    aea8:	06 0c       	CC = R6 == 0x0;
    aeaa:	12 1c       	IF CC JUMP 0xaece <_AnswerCurrentQuestionWithResourceRecord+0x2b6> (BP);
    aeac:	45 30       	R0 = P5;
    aeae:	19 e4 4e 00 	R1 = [P3 + 0x138];
    aeb2:	01 08       	CC = R1 == R0;
    aeb4:	0d 14       	IF !CC JUMP 0xaece <_AnswerCurrentQuestionWithResourceRecord+0x2b6> (BP);
    aeb6:	54 30       	R2 = P4;
    aeb8:	22 64       	R2 += 0x4;		/* (  4) */
    aeba:	43 30       	R0 = P3;
    aebc:	ff e3 fc fa 	CALL 0xa4b4 <_AnswerQuestionByFollowingCNAME>;
    aec0:	07 20       	JUMP.S 0xaece <_AnswerCurrentQuestionWithResourceRecord+0x2b6>;
    aec2:	00 00       	NOP;
    aec4:	28 e4 8f 00 	R0 = [P5 + 0x23c];
    aec8:	00 0c       	CC = R0 == 0x0;
    aeca:	2a 17       	IF !CC JUMP 0xad1e <_AnswerCurrentQuestionWithResourceRecord+0x106> (BP);
    aecc:	25 2f       	JUMP.S 0xad16 <_AnswerCurrentQuestionWithResourceRecord+0xfe>;
    aece:	29 e1 bc 00 	P1 = 0xbc (X);		/*		P1=0xbc(188) */
    aed2:	8e 5b       	SP = SP + P1;
    aed4:	77 90       	FP = [SP++];
    aed6:	27 01       	RETS = [SP++];
    aed8:	b3 05       	(R7:6, P5:3) = [SP++];
    aeda:	10 00       	RTS;

0000aedc <_CacheRecordRmvEventsForQuestion>:
_CacheRecordRmvEventsForQuestion():
    aedc:	e3 05       	[--SP] = (R7:4, P5:3);
    aede:	00 e8 08 00 	LINK 0x20;		/* (32) */
    aee2:	38 32       	FP = R0;
    aee4:	29 32       	P5 = R1;
    aee6:	3c e5 4e 00 	P4 = [FP + 0x138];
    aeea:	44 0c       	CC = P4 == 0x0;
    aeec:	11 1c       	IF CC JUMP 0xaf0e <_CacheRecordRmvEventsForQuestion+0x32> (BP);
    aeee:	60 e5 1a 01 	R0 = W[P4 + 0x234] (X);
    aef2:	ff e3 87 a8 	CALL 0x0 <_AddRecordToResponseList>;
    aef6:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    aefa:	94 5a       	P2 = P4 + P2;
    aefc:	f0 b0       	[SP + 0xc] = R0;
    aefe:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x40( 64) */
    af02:	52 30       	R2 = P2;
    af04:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    af06:	01 e1 cc 2f 	R1.L = 0x2fcc;		/* (12236)	R1=0x2fcc(12236) */
    af0a:	ff e3 7b a8 	CALL 0x0 <_AddRecordToResponseList>;
    af0e:	00 00       	NOP;
    af10:	3a e5 4d 00 	P2 = [FP + 0x134];
    af14:	04 20       	JUMP.S 0xaf1c <_CacheRecordRmvEventsForQuestion+0x40>;
    af16:	6a 08       	CC = P2 == P5;
    af18:	e4 1c       	IF CC JUMP 0xb0e0 <_CacheRecordRmvEventsForQuestion+0x204> (BP);
    af1a:	52 91       	P2 = [P2];
    af1c:	42 0c       	CC = P2 == 0x0;
    af1e:	fc 17       	IF !CC JUMP 0xaf16 <_CacheRecordRmvEventsForQuestion+0x3a> (BP);
    af20:	fe 20       	JUMP.S 0xb11c <_CacheRecordRmvEventsForQuestion+0x240>;
    af22:	2c e1 34 01 	P4 = 0x134 (X);		/*		P4=0x134(308) */
    af26:	25 5b       	P4 = P5 + P4;
    af28:	3d e7 4e 00 	[FP + 0x138] = P5;
    af2c:	44 30       	R0 = P4;
    af2e:	ff e3 69 a8 	CALL 0x0 <_AddRecordToResponseList>;
    af32:	41 e1 d5 20 	R1.H = 0x20d5;		/* (8405)	R1=0x20d52fcc(550842316) */
    af36:	38 30       	R7 = R0;
    af38:	01 e1 39 6b 	R1.L = 0x6b39;		/* (27449)	R1=0x20d56b39(550857529) */
    af3c:	ff e3 62 a8 	CALL 0x0 <_AddRecordToResponseList>;
    af40:	82 c6 d0 83 	R1 = R0 >> 0x6;
    af44:	6a a0       	R2 = [P5 + 0x4];
    af46:	20 e1 f3 01 	R0 = 0x1f3 (X);		/*		R0=0x1f3(499) */
    af4a:	c1 40       	R1 *= R0;
    af4c:	f4 bc       	[SP + 0xc] = P4;
    af4e:	4f 52       	R1 = R7 - R1;
    af50:	47 30       	R0 = FP;
    af52:	ff e3 49 ba 	CALL 0x23e4 <_CacheGroupForName>;
    af56:	10 32       	P2 = R0;
    af58:	42 0c       	CC = P2 == 0x0;
    af5a:	03 1c       	IF CC JUMP 0xaf60 <_CacheRecordRmvEventsForQuestion+0x84> (BP);
    af5c:	94 ac       	P4 = [P2 + 0x8];
    af5e:	a8 20       	JUMP.S 0xb0ae <_CacheRecordRmvEventsForQuestion+0x1d2>;
    af60:	04 68       	P4 = 0x0 (X);		/*		P4=0x0(  0) */
    af62:	a6 20       	JUMP.S 0xb0ae <_CacheRecordRmvEventsForQuestion+0x1d2>;
    af64:	21 e1 f0 00 	R1 = 0xf0 (X);		/*		R1=0xf0(240) */
    af68:	a0 e4 04 00 	R0 = B[P4 + 0x4] (Z);
    af6c:	08 08       	CC = R0 == R1;
    af6e:	22 14       	IF !CC JUMP 0xafb2 <_CacheRecordRmvEventsForQuestion+0xd6> (BP);
    af70:	17 32       	P2 = R7;
    af72:	10 91       	R0 = [P2];
    af74:	00 0c       	CC = R0 == 0x0;
    af76:	99 1c       	IF CC JUMP 0xb0a8 <_CacheRecordRmvEventsForQuestion+0x1cc> (BP);
    af78:	61 a2       	R1 = [P4 + 0x24];
    af7a:	44 30       	R0 = P4;
    af7c:	15 30       	R2 = R5;
    af7e:	21 64       	R1 += 0x4;		/* (  4) */
    af80:	20 64       	R0 += 0x4;		/* (  4) */
    af82:	ff e3 3f a8 	CALL 0x0 <_AddRecordToResponseList>;
    af86:	30 30       	R6 = R0;
    af88:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    af8c:	ff e3 3a a8 	CALL 0x0 <_AddRecordToResponseList>;
    af90:	f5 bc       	[SP + 0xc] = P5;
    af92:	34 b1       	[SP + 0x10] = R4;
    af94:	70 b1       	[SP + 0x14] = R0;
    af96:	20 e4 10 00 	R0 = [P4 + 0x40];
    af9a:	b0 b1       	[SP + 0x18] = R0;
    af9c:	28 a2       	R0 = [P5 + 0x20];
    af9e:	f0 b1       	[SP + 0x1c] = R0;
    afa0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xf0(240) */
    afa4:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    afa6:	01 e1 20 30 	R1.L = 0x3020;		/* (12320)	R1=0x3020(12320) */
    afaa:	16 30       	R2 = R6;
    afac:	ff e3 2a a8 	CALL 0x0 <_AddRecordToResponseList>;
    afb0:	7c 20       	JUMP.S 0xb0a8 <_CacheRecordRmvEventsForQuestion+0x1cc>;
    afb2:	74 30       	R6 = P4;
    afb4:	26 64       	R6 += 0x4;		/* (  4) */
    afb6:	06 30       	R0 = R6;
    afb8:	4d 30       	R1 = P5;
    afba:	ff e3 23 a8 	CALL 0x0 <_AddRecordToResponseList>;
    afbe:	00 0c       	CC = R0 == 0x0;
    afc0:	74 1c       	IF CC JUMP 0xb0a8 <_CacheRecordRmvEventsForQuestion+0x1cc> (BP);
    afc2:	17 32       	P2 = R7;
    afc4:	10 91       	R0 = [P2];
    afc6:	00 0c       	CC = R0 == 0x0;
    afc8:	13 1c       	IF CC JUMP 0xafee <_CacheRecordRmvEventsForQuestion+0x112> (BP);
    afca:	61 a2       	R1 = [P4 + 0x24];
    afcc:	21 64       	R1 += 0x4;		/* (  4) */
    afce:	15 30       	R2 = R5;
    afd0:	06 30       	R0 = R6;
    afd2:	ff e3 17 a8 	CALL 0x0 <_AddRecordToResponseList>;
    afd6:	f0 b0       	[SP + 0xc] = R0;
    afd8:	a8 e4 b8 00 	R0 = B[P5 + 0xb8] (Z);
    afdc:	30 b1       	[SP + 0x10] = R0;
    afde:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3020(12320) */
    afe2:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    afe4:	01 e1 b0 30 	R1.L = 0x30b0;		/* (12464)	R1=0x30b0(12464) */
    afe8:	14 30       	R2 = R4;
    afea:	ff e3 0b a8 	CALL 0x0 <_AddRecordToResponseList>;
    afee:	21 e1 00 04 	R1 = 0x400 (X);		/*		R1=0x400(1024) */
    aff2:	28 a2       	R0 = [P5 + 0x20];
    aff4:	f8 67       	R0 += -0x1;		/* ( -1) */
    aff6:	28 b2       	[P5 + 0x20] = R0;
    aff8:	20 a6       	R0 = W[P4 + 0x10] (Z);
    affa:	08 0a       	CC = R0 <= R1 (IU);
    affc:	04 1c       	IF CC JUMP 0xb004 <_CacheRecordRmvEventsForQuestion+0x128> (BP);
    affe:	68 a2       	R0 = [P5 + 0x24];
    b000:	f8 67       	R0 += -0x1;		/* ( -1) */
    b002:	68 b2       	[P5 + 0x24] = R0;
    b004:	00 00       	NOP;
    b006:	a0 e4 04 00 	R0 = B[P4 + 0x4] (Z);
    b00a:	20 48       	CC = !BITTST (R0, 0x4);		/* bit  4 */
    b00c:	04 1c       	IF CC JUMP 0xb014 <_CacheRecordRmvEventsForQuestion+0x138> (BP);
    b00e:	a8 a2       	R0 = [P5 + 0x28];
    b010:	f8 67       	R0 += -0x1;		/* ( -1) */
    b012:	a8 b2       	[P5 + 0x28] = R0;
    b014:	00 00       	NOP;
    b016:	22 e5 10 00 	P2 = [P4 + 0x40];
    b01a:	6a 08       	CC = P2 == P5;
    b01c:	3d 14       	IF !CC JUMP 0xb096 <_CacheRecordRmvEventsForQuestion+0x1ba> (BP);
    b01e:	3b e5 4c 00 	P3 = [FP + 0x130];
    b022:	11 20       	JUMP.S 0xb044 <_CacheRecordRmvEventsForQuestion+0x168>;
    b024:	6b 08       	CC = P3 == P5;
    b026:	0d 1c       	IF CC JUMP 0xb040 <_CacheRecordRmvEventsForQuestion+0x164> (BP);
    b028:	18 a1       	R0 = [P3 + 0x10];
    b02a:	00 0d       	CC = R0 <= 0x0;
    b02c:	0a 1c       	IF CC JUMP 0xb040 <_CacheRecordRmvEventsForQuestion+0x164> (BP);
    b02e:	98 a3       	R0 = [P3 + 0x38];
    b030:	00 0c       	CC = R0 == 0x0;
    b032:	07 14       	IF !CC JUMP 0xb040 <_CacheRecordRmvEventsForQuestion+0x164> (BP);
    b034:	06 30       	R0 = R6;
    b036:	4b 30       	R1 = P3;
    b038:	ff e3 e4 a7 	CALL 0x0 <_AddRecordToResponseList>;
    b03c:	00 0c       	CC = R0 == 0x0;
    b03e:	06 14       	IF !CC JUMP 0xb04a <_CacheRecordRmvEventsForQuestion+0x16e> (BP);
    b040:	00 00       	NOP;
    b042:	5b 91       	P3 = [P3];
    b044:	43 0c       	CC = P3 == 0x0;
    b046:	ef 17       	IF !CC JUMP 0xb024 <_CacheRecordRmvEventsForQuestion+0x148> (BP);
    b048:	1e 20       	JUMP.S 0xb084 <_CacheRecordRmvEventsForQuestion+0x1a8>;
    b04a:	17 32       	P2 = R7;
    b04c:	10 91       	R0 = [P2];
    b04e:	00 0c       	CC = R0 == 0x0;
    b050:	1a 1c       	IF CC JUMP 0xb084 <_CacheRecordRmvEventsForQuestion+0x1a8> (BP);
    b052:	61 a2       	R1 = [P4 + 0x24];
    b054:	21 64       	R1 += 0x4;		/* (  4) */
    b056:	15 30       	R2 = R5;
    b058:	06 30       	R0 = R6;
    b05a:	ff e3 d3 a7 	CALL 0x0 <_AddRecordToResponseList>;
    b05e:	f0 b0       	[SP + 0xc] = R0;
    b060:	28 a2       	R0 = [P5 + 0x20];
    b062:	30 b1       	[SP + 0x10] = R0;
    b064:	18 a2       	R0 = [P3 + 0x20];
    b066:	70 b1       	[SP + 0x14] = R0;
    b068:	18 e4 92 00 	R0 = [P3 + 0x248];
    b06c:	b0 b1       	[SP + 0x18] = R0;
    b06e:	18 e4 2d 00 	R0 = [P3 + 0xb4];
    b072:	f0 b1       	[SP + 0x1c] = R0;
    b074:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x400(1024) */
    b078:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    b07a:	01 e1 4c 31 	R1.L = 0x314c;		/* (12620)	R1=0x314c(12620) */
    b07e:	53 30       	R2 = P3;
    b080:	ff e3 c0 a7 	CALL 0x0 <_AddRecordToResponseList>;
    b084:	23 e7 10 00 	[P4 + 0x40] = P3;
    b088:	43 0c       	CC = P3 == 0x0;
    b08a:	06 14       	IF !CC JUMP 0xb096 <_CacheRecordRmvEventsForQuestion+0x1ba> (BP);
    b08c:	38 e4 54 00 	R0 = [FP + 0x150];
    b090:	f8 67       	R0 += -0x1;		/* ( -1) */
    b092:	38 e6 54 00 	[FP + 0x150] = R0;
    b096:	47 30       	R0 = FP;
    b098:	4c 30       	R1 = P4;
    b09a:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    b09c:	ff e3 be fd 	CALL 0xac18 <_AnswerCurrentQuestionWithResourceRecord>;
    b0a0:	3a e5 4e 00 	P2 = [FP + 0x138];
    b0a4:	6a 08       	CC = P2 == P5;
    b0a6:	10 14       	IF !CC JUMP 0xb0c6 <_CacheRecordRmvEventsForQuestion+0x1ea> (BP);
    b0a8:	00 00       	NOP;
    b0aa:	64 91       	P4 = [P4];
    b0ac:	0b 20       	JUMP.S 0xb0c2 <_CacheRecordRmvEventsForQuestion+0x1e6>;
    b0ae:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    b0b2:	47 e1 00 00 	R7.H = 0x0;		/* (  0)	R7=0x8(  8) */
    b0b6:	6f 30       	R5 = FP;
    b0b8:	95 5a       	P2 = P5 + P2;
    b0ba:	07 e1 00 00 	R7.L = 0x0;		/* (  0)	R7=0x0 <_AddRecordToResponseList>(  0) */
    b0be:	bd 65       	R5 += 0x37;		/* ( 55) */
    b0c0:	62 30       	R4 = P2;
    b0c2:	44 0c       	CC = P4 == 0x0;
    b0c4:	50 17       	IF !CC JUMP 0xaf64 <_CacheRecordRmvEventsForQuestion+0x88> (BP);
    b0c6:	00 00       	NOP;
    b0c8:	3a e5 4e 00 	P2 = [FP + 0x138];
    b0cc:	6a 08       	CC = P2 == P5;
    b0ce:	05 18       	IF CC JUMP 0xb0d8 <_CacheRecordRmvEventsForQuestion+0x1fc>;
    b0d0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    b0d2:	38 e6 4e 00 	[FP + 0x138] = R0;
    b0d6:	1e 20       	JUMP.S 0xb112 <_CacheRecordRmvEventsForQuestion+0x236>;
    b0d8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    b0da:	38 e6 4e 00 	[FP + 0x138] = R0;
    b0de:	19 20       	JUMP.S 0xb110 <_CacheRecordRmvEventsForQuestion+0x234>;
    b0e0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    b0e4:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    b0e8:	10 91       	R0 = [P2];
    b0ea:	00 0c       	CC = R0 == 0x0;
    b0ec:	12 1c       	IF CC JUMP 0xb110 <_CacheRecordRmvEventsForQuestion+0x234> (BP);
    b0ee:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    b0f2:	ff e3 87 a7 	CALL 0x0 <_AddRecordToResponseList>;
    b0f6:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    b0fa:	95 5a       	P2 = P5 + P2;
    b0fc:	30 b1       	[SP + 0x10] = R0;
    b0fe:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x314c(12620) */
    b102:	f2 bc       	[SP + 0xc] = P2;
    b104:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    b106:	01 e1 14 32 	R1.L = 0x3214;		/* (12820)	R1=0x3214(12820) */
    b10a:	55 30       	R2 = P5;
    b10c:	ff e3 7a a7 	CALL 0x0 <_AddRecordToResponseList>;
    b110:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    b112:	06 6d       	SP += 0x20;		/* ( 32) */
    b114:	77 90       	FP = [SP++];
    b116:	27 01       	RETS = [SP++];
    b118:	a3 05       	(R7:4, P5:3) = [SP++];
    b11a:	10 00       	RTS;
    b11c:	a8 e4 b8 00 	R0 = B[P5 + 0xb8] (Z);
    b120:	00 0c       	CC = R0 == 0x0;
    b122:	df 17       	IF !CC JUMP 0xb0e0 <_CacheRecordRmvEventsForQuestion+0x204> (BP);
    b124:	ff 2e       	JUMP.S 0xaf22 <_CacheRecordRmvEventsForQuestion+0x46>;
	...

0000b128 <_CacheRecordDeferredAdd>:
_CacheRecordDeferredAdd():
    b128:	fb 05       	[--SP] = (R7:7, P5:3);
    b12a:	28 32       	P5 = R0;
    b12c:	19 32       	P3 = R1;
    b12e:	67 01       	[--SP] = RETS;
    b130:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    b132:	86 6f       	SP += -0x10;		/* (-16) */
    b134:	2c e5 4e 00 	P4 = [P5 + 0x138];
    b138:	58 b3       	[P3 + 0x34] = R0;
    b13a:	44 0c       	CC = P4 == 0x0;
    b13c:	11 1c       	IF CC JUMP 0xb15e <_CacheRecordDeferredAdd+0x36> (BP);
    b13e:	60 e5 1a 01 	R0 = W[P4 + 0x234] (X);
    b142:	ff e3 5f a7 	CALL 0x0 <_AddRecordToResponseList>;
    b146:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    b14a:	94 5a       	P2 = P4 + P2;
    b14c:	f0 b0       	[SP + 0xc] = R0;
    b14e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3214(12820) */
    b152:	52 30       	R2 = P2;
    b154:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    b156:	01 e1 60 32 	R1.L = 0x3260;		/* (12896)	R1=0x3260(12896) */
    b15a:	ff e3 53 a7 	CALL 0x0 <_AddRecordToResponseList>;
    b15e:	00 00       	NOP;
    b160:	28 e4 4c 00 	R0 = [P5 + 0x130];
    b164:	7b 30       	R7 = P3;
    b166:	28 e6 4e 00 	[P5 + 0x138] = R0;
    b16a:	27 64       	R7 += 0x4;		/* (  4) */
    b16c:	14 20       	JUMP.S 0xb194 <_CacheRecordDeferredAdd+0x6c>;
    b16e:	07 30       	R0 = R7;
    b170:	4c 30       	R1 = P4;
    b172:	ff e3 47 a7 	CALL 0x0 <_AddRecordToResponseList>;
    b176:	00 0c       	CC = R0 == 0x0;
    b178:	06 1c       	IF CC JUMP 0xb184 <_CacheRecordDeferredAdd+0x5c> (BP);
    b17a:	45 30       	R0 = P5;
    b17c:	4b 30       	R1 = P3;
    b17e:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
    b180:	ff e3 4c fd 	CALL 0xac18 <_AnswerCurrentQuestionWithResourceRecord>;
    b184:	00 00       	NOP;
    b186:	2a e5 4e 00 	P2 = [P5 + 0x138];
    b18a:	62 08       	CC = P2 == P4;
    b18c:	04 14       	IF !CC JUMP 0xb194 <_CacheRecordDeferredAdd+0x6c> (BP);
    b18e:	10 91       	R0 = [P2];
    b190:	28 e6 4e 00 	[P5 + 0x138] = R0;
    b194:	00 00       	NOP;
    b196:	2c e5 4e 00 	P4 = [P5 + 0x138];
    b19a:	44 0c       	CC = P4 == 0x0;
    b19c:	06 1c       	IF CC JUMP 0xb1a8 <_CacheRecordDeferredAdd+0x80> (BP);
    b19e:	4c 30       	R1 = P4;
    b1a0:	28 e4 4d 00 	R0 = [P5 + 0x134];
    b1a4:	01 08       	CC = R1 == R0;
    b1a6:	e4 17       	IF !CC JUMP 0xb16e <_CacheRecordDeferredAdd+0x46> (BP);
    b1a8:	86 6c       	SP += 0x10;		/* ( 16) */
    b1aa:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    b1ac:	27 01       	RETS = [SP++];
    b1ae:	28 e6 4e 00 	[P5 + 0x138] = R0;
    b1b2:	bb 05       	(R7:7, P5:3) = [SP++];
    b1b4:	10 00       	RTS;
	...

0000b1b8 <_GenerateNegativeResponse>:
_GenerateNegativeResponse():
    b1b8:	fb 05       	[--SP] = (R7:7, P5:3);
    b1ba:	20 32       	P4 = R0;
    b1bc:	67 01       	[--SP] = RETS;
    b1be:	e6 6e       	SP += -0x24;		/* (-36) */
    b1c0:	25 e5 4e 00 	P5 = [P4 + 0x138];
    b1c4:	45 0c       	CC = P5 == 0x0;
    b1c6:	0b 14       	IF !CC JUMP 0xb1dc <_GenerateNegativeResponse+0x24> (BP);
    b1c8:	26 6d       	SP += 0x24;		/* ( 36) */
    b1ca:	27 01       	RETS = [SP++];
    b1cc:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3260(12896) */
    b1d0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    b1d2:	01 e1 a8 32 	R1.L = 0x32a8;		/* (12968)	R1=0x32a8(12968) */
    b1d6:	bb 05       	(R7:7, P5:3) = [SP++];
    b1d8:	ff e2 14 a7 	JUMP.L 0x0 <_AddRecordToResponseList>;
    b1dc:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    b1e0:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    b1e4:	10 91       	R0 = [P2];
    b1e6:	00 0c       	CC = R0 == 0x0;
    b1e8:	11 1c       	IF CC JUMP 0xb20a <_GenerateNegativeResponse+0x52> (BP);
    b1ea:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    b1ee:	ff e3 09 a7 	CALL 0x0 <_AddRecordToResponseList>;
    b1f2:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    b1f6:	95 5a       	P2 = P5 + P2;
    b1f8:	f0 b0       	[SP + 0xc] = R0;
    b1fa:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x32a8(12968) */
    b1fe:	52 30       	R2 = P2;
    b200:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    b202:	01 e1 e4 32 	R1.L = 0x32e4;		/* (13028)	R1=0x32e4(13028) */
    b206:	ff e3 fd a6 	CALL 0x0 <_AddRecordToResponseList>;
    b20a:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    b20e:	68 a0       	R0 = [P5 + 0x4];
    b210:	f0 b0       	[SP + 0xc] = R0;
    b212:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    b216:	30 b6       	W[SP + 0x10] = R0;
    b218:	68 e5 1b 01 	R0 = W[P5 + 0x236] (X);
    b21c:	95 5a       	P2 = P5 + P2;
    b21e:	52 30       	R2 = P2;
    b220:	b0 b6       	W[SP + 0x14] = R0;
    b222:	e0 61       	R0 = 0x3c (X);		/*		R0=0x3c( 60) */
    b224:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    b228:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    b22c:	b0 b1       	[SP + 0x18] = R0;
    b22e:	10 91       	R0 = [P2];
    b230:	2b e1 84 7c 	P3 = 0x7c84 (X);		/*		P3=0x7c84(31876) */
    b234:	dc 5a       	P3 = P4 + P3;
    b236:	f0 b1       	[SP + 0x1c] = R0;
    b238:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    b23a:	44 30       	R0 = P4;
    b23c:	4b 30       	R1 = P3;
    b23e:	37 b2       	[SP + 0x20] = R7;
    b240:	ff e3 5e c8 	CALL 0x42fc <_MakeNegativeCacheRecord>;
    b244:	44 30       	R0 = P4;
    b246:	4b 30       	R1 = P3;
    b248:	12 60       	R2 = 0x2 (X);		/*		R2=0x2(  2) */
    b24a:	ff e3 e7 fc 	CALL 0xac18 <_AnswerCurrentQuestionWithResourceRecord>;
    b24e:	22 e5 4e 00 	P2 = [P4 + 0x138];
    b252:	6a 08       	CC = P2 == P5;
    b254:	02 14       	IF !CC JUMP 0xb258 <_GenerateNegativeResponse+0xa0> (BP);
    b256:	17 b1       	[P2 + 0x10] = R7;
    b258:	26 6d       	SP += 0x24;		/* ( 36) */
    b25a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    b25c:	27 01       	RETS = [SP++];
    b25e:	a0 e6 88 7c 	B[P4 + 0x7c88] = R0;
    b262:	bb 05       	(R7:7, P5:3) = [SP++];
    b264:	10 00       	RTS;
	...

0000b268 <_CreateNewCacheEntry>:
_CreateNewCacheEntry():
    b268:	e3 05       	[--SP] = (R7:4, P5:3);
    b26a:	28 32       	P5 = R0;
    b26c:	00 e8 07 00 	LINK 0x1c;		/* (28) */
    b270:	3a 32       	FP = R2;
    b272:	2a e1 88 7c 	P2 = 0x7c88 (X);		/*		P2=0x7c88(31880) */
    b276:	31 30       	R6 = R1;
    b278:	95 5a       	P2 = P5 + P2;
    b27a:	6a 30       	R5 = P2;
    b27c:	42 30       	R0 = P2;
    b27e:	ff e3 65 a7 	CALL 0x148 <_GetRDLengthMem>;
    b282:	38 30       	R7 = R0;
    b284:	47 0c       	CC = FP == 0x0;
    b286:	89 14       	IF !CC JUMP 0xb398 <_CreateNewCacheEntry+0x130> (BP);
    b288:	28 e4 29 1f 	R0 = [P5 + 0x7ca4];
    b28c:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    b290:	48 50       	R1 = R0 + R1;
    b292:	ff e3 b7 a6 	CALL 0x0 <_AddRecordToResponseList>;
    b296:	20 30       	R4 = R0;
    b298:	45 30       	R0 = P5;
    b29a:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    b29c:	ff e3 aa b2 	CALL 0x17f0 <_GetCacheEntity>;
    b2a0:	20 32       	P4 = R0;
    b2a2:	38 32       	FP = R0;
    b2a4:	44 0c       	CC = P4 == 0x0;
    b2a6:	0b 14       	IF !CC JUMP 0xb2bc <_CreateNewCacheEntry+0x54> (BP);
    b2a8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    b2ac:	2a e4 29 1f 	R2 = [P5 + 0x7ca4];
    b2b0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    b2b2:	01 e1 34 33 	R1.L = 0x3334;		/* (13108)	R1=0x3334(13108) */
    b2b6:	ff e3 a5 a6 	CALL 0x0 <_AddRecordToResponseList>;
    b2ba:	93 20       	JUMP.S 0xb3e0 <_CreateNewCacheEntry+0x178>;
    b2bc:	20 e1 57 00 	R0 = 0x57 (X);		/*		R0=0x57( 87) */
    b2c0:	70 41       	R0 = (R0 + R6) << 0x2;
    b2c2:	08 32       	P1 = R0;
    b2c4:	21 e1 84 00 	R1 = 0x84 (X);		/*		R1=0x84(132) */
    b2c8:	8d 5a       	P2 = P5 + P1;
    b2ca:	10 91       	R0 = [P2];
    b2cc:	20 93       	[P4] = R0;
    b2ce:	28 e4 26 1f 	R0 = [P5 + 0x7c98];
    b2d2:	60 b0       	[P4 + 0x4] = R0;
    b2d4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    b2d6:	a0 b0       	[P4 + 0x8] = R0;
    b2d8:	44 30       	R0 = P4;
    b2da:	40 64       	R0 += 0x8;		/* (  8) */
    b2dc:	e0 b0       	[P4 + 0xc] = R0;
    b2de:	60 64       	R0 += 0xc;		/* ( 12) */
    b2e0:	20 b1       	[P4 + 0x10] = R0;
    b2e2:	e0 42       	R0 = R4.L (Z);
    b2e4:	08 0a       	CC = R0 <= R1 (IU);
    b2e6:	04 1c       	IF CC JUMP 0xb2ee <_CreateNewCacheEntry+0x86> (BP);
    b2e8:	ff e3 8c a6 	CALL 0x0 <_AddRecordToResponseList>;
    b2ec:	20 b1       	[P4 + 0x10] = R0;
    b2ee:	00 00       	NOP;
    b2f0:	20 a1       	R0 = [P4 + 0x10];
    b2f2:	00 0c       	CC = R0 == 0x0;
    b2f4:	2a e4 29 1f 	R2 = [P5 + 0x7ca4];
    b2f8:	0d 14       	IF !CC JUMP 0xb312 <_CreateNewCacheEntry+0xaa> (BP);
    b2fa:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x84(132) */
    b2fe:	01 e1 68 33 	R1.L = 0x3368;		/* (13160)	R1=0x3368(13160) */
    b302:	ff e3 7f a6 	CALL 0x0 <_AddRecordToResponseList>;
    b306:	28 e4 56 00 	R0 = [P5 + 0x158];
    b30a:	20 93       	[P4] = R0;
    b30c:	2c e7 56 00 	[P5 + 0x158] = P4;
    b310:	63 20       	JUMP.S 0xb3d6 <_CreateNewCacheEntry+0x16e>;
    b312:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    b316:	4a 50       	R1 = R2 + R1;
    b318:	02 30       	R0 = R2;
    b31a:	ff e3 73 a6 	CALL 0x0 <_AddRecordToResponseList>;
    b31e:	c2 42       	R2 = R0.L (Z);
    b320:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    b324:	02 0a       	CC = R2 <= R0 (IU);
    b326:	20 a1       	R0 = [P4 + 0x10];
    b328:	06 14       	IF !CC JUMP 0xb334 <_CreateNewCacheEntry+0xcc> (BP);
    b32a:	29 e4 29 1f 	R1 = [P5 + 0x7ca4];
    b32e:	ff e3 69 a6 	CALL 0x0 <_AddRecordToResponseList>;
    b332:	04 20       	JUMP.S 0xb33a <_CreateNewCacheEntry+0xd2>;
    b334:	08 32       	P1 = R0;
    b336:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    b338:	09 9b       	B[P1] = R1;
    b33a:	28 e4 29 1f 	R0 = [P5 + 0x7ca4];
    b33e:	f0 b0       	[SP + 0xc] = R0;
    b340:	2a e4 26 1f 	R2 = [P5 + 0x7c98];
    b344:	45 30       	R0 = P5;
    b346:	0e 30       	R1 = R6;
    b348:	ff e3 4e b8 	CALL 0x23e4 <_CacheGroupForName>;
    b34c:	00 0c       	CC = R0 == 0x0;
    b34e:	0a 18       	IF CC JUMP 0xb362 <_CreateNewCacheEntry+0xfa>;
    b350:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    b354:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    b356:	01 e1 a0 33 	R1.L = 0x33a0;		/* (13216)	R1=0x33a0(13216) */
    b35a:	2a e4 29 1f 	R2 = [P5 + 0x7ca4];
    b35e:	ff e3 51 a6 	CALL 0x0 <_AddRecordToResponseList>;
    b362:	20 e1 57 00 	R0 = 0x57 (X);		/*		R0=0x57( 87) */
    b366:	70 41       	R0 = (R0 + R6) << 0x2;
    b368:	08 32       	P1 = R0;
    b36a:	28 e4 29 1f 	R0 = [P5 + 0x7ca4];
    b36e:	0e 30       	R1 = R6;
    b370:	2a e4 26 1f 	R2 = [P5 + 0x7c98];
    b374:	8d 5a       	P2 = P5 + P1;
    b376:	54 93       	[P2] = P4;
    b378:	f0 b0       	[SP + 0xc] = R0;
    b37a:	45 30       	R0 = P5;
    b37c:	ff e3 34 b8 	CALL 0x23e4 <_CacheGroupForName>;
    b380:	4c 30       	R1 = P4;
    b382:	08 08       	CC = R0 == R1;
    b384:	0a 18       	IF CC JUMP 0xb398 <_CreateNewCacheEntry+0x130>;
    b386:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x33a0(13216) */
    b38a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    b38c:	01 e1 d0 33 	R1.L = 0x33d0;		/* (13264)	R1=0x33d0(13264) */
    b390:	2a e4 29 1f 	R2 = [P5 + 0x7ca4];
    b394:	ff e3 36 a6 	CALL 0x0 <_AddRecordToResponseList>;
    b398:	45 30       	R0 = P5;
    b39a:	4f 30       	R1 = FP;
    b39c:	ff e3 2a b2 	CALL 0x17f0 <_GetCacheEntity>;
    b3a0:	18 32       	P3 = R0;
    b3a2:	43 0c       	CC = P3 == 0x0;
    b3a4:	1e 18       	IF CC JUMP 0xb3e0 <_CreateNewCacheEntry+0x178>;
    b3a6:	2c e1 50 00 	P4 = 0x50 (X);		/*		P4=0x50( 80) */
    b3aa:	23 5b       	P4 = P3 + P4;
    b3ac:	f8 42       	R0 = R7.L (Z);
    b3ae:	22 e1 44 00 	R2 = 0x44 (X);		/*		R2=0x44( 68) */
    b3b2:	5c be       	[P3 + 0x24] = P4;
    b3b4:	10 0a       	CC = R0 <= R2 (IU);
    b3b6:	71 1d       	IF CC JUMP 0xb698 <_CreateNewCacheEntry+0x430> (BP);
    b3b8:	20 64       	R0 += 0x4;		/* (  4) */
    b3ba:	ff e3 23 a6 	CALL 0x0 <_AddRecordToResponseList>;
    b3be:	10 32       	P2 = R0;
    b3c0:	58 b2       	[P3 + 0x24] = R0;
    b3c2:	42 0c       	CC = P2 == 0x0;
    b3c4:	04 18       	IF CC JUMP 0xb3cc <_CreateNewCacheEntry+0x164>;
    b3c6:	1f b6       	W[P3 + 0x10] = R7;
    b3c8:	17 97       	W[P2] = R7;
    b3ca:	67 21       	JUMP.S 0xb698 <_CreateNewCacheEntry+0x430>;
    b3cc:	28 e4 56 00 	R0 = [P5 + 0x158];
    b3d0:	18 93       	[P3] = R0;
    b3d2:	2b e7 56 00 	[P5 + 0x158] = P3;
    b3d6:	28 e4 53 00 	R0 = [P5 + 0x14c];
    b3da:	f8 67       	R0 += -0x1;		/* ( -1) */
    b3dc:	28 e6 53 00 	[P5 + 0x14c] = R0;
    b3e0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x33d0(13264) */
    b3e4:	2a e4 29 1f 	R2 = [P5 + 0x7ca4];
    b3e8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    b3ea:	01 e1 00 34 	R1.L = 0x3400;		/* (13312)	R1=0x3400(13312) */
    b3ee:	ff e3 09 a6 	CALL 0x0 <_AddRecordToResponseList>;
    b3f2:	2c e5 4e 00 	P4 = [P5 + 0x138];
    b3f6:	2b e1 84 7c 	P3 = 0x7c84 (X);		/*		P3=0x7c84(31876) */
    b3fa:	dd 5a       	P3 = P5 + P3;
    b3fc:	44 0c       	CC = P4 == 0x0;
    b3fe:	11 1c       	IF CC JUMP 0xb420 <_CreateNewCacheEntry+0x1b8> (BP);
    b400:	60 e5 1a 01 	R0 = W[P4 + 0x234] (X);
    b404:	ff e3 fe a5 	CALL 0x0 <_AddRecordToResponseList>;
    b408:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    b40c:	94 5a       	P2 = P4 + P2;
    b40e:	f0 b0       	[SP + 0xc] = R0;
    b410:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3400(13312) */
    b414:	52 30       	R2 = P2;
    b416:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    b418:	01 e1 38 34 	R1.L = 0x3438;		/* (13368)	R1=0x3438(13368) */
    b41c:	ff e3 f2 a5 	CALL 0x0 <_AddRecordToResponseList>;
    b420:	00 00       	NOP;
    b422:	28 e4 4c 00 	R0 = [P5 + 0x130];
    b426:	12 20       	JUMP.S 0xb44a <_CreateNewCacheEntry+0x1e2>;
    b428:	05 30       	R0 = R5;
    b42a:	4c 30       	R1 = P4;
    b42c:	ff e3 ea a5 	CALL 0x0 <_AddRecordToResponseList>;
    b430:	00 0c       	CC = R0 == 0x0;
    b432:	06 1c       	IF CC JUMP 0xb43e <_CreateNewCacheEntry+0x1d6> (BP);
    b434:	45 30       	R0 = P5;
    b436:	4b 30       	R1 = P3;
    b438:	12 60       	R2 = 0x2 (X);		/*		R2=0x2(  2) */
    b43a:	ff e3 ef fb 	CALL 0xac18 <_AnswerCurrentQuestionWithResourceRecord>;
    b43e:	00 00       	NOP;
    b440:	2a e5 4e 00 	P2 = [P5 + 0x138];
    b444:	62 08       	CC = P2 == P4;
    b446:	04 14       	IF !CC JUMP 0xb44e <_CreateNewCacheEntry+0x1e6> (BP);
    b448:	10 91       	R0 = [P2];
    b44a:	28 e6 4e 00 	[P5 + 0x138] = R0;
    b44e:	00 00       	NOP;
    b450:	2c e5 4e 00 	P4 = [P5 + 0x138];
    b454:	44 0c       	CC = P4 == 0x0;
    b456:	e9 17       	IF !CC JUMP 0xb428 <_CreateNewCacheEntry+0x1c0> (BP);
    b458:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    b45a:	28 e6 4e 00 	[P5 + 0x138] = R0;
    b45e:	03 68       	P3 = 0x0 (X);		/*		P3=0x0(  0) */
    b460:	0e 21       	JUMP.S 0xb67c <_CreateNewCacheEntry+0x414>;
    b462:	f8 42       	R0 = R7.L (Z);
    b464:	21 e1 44 00 	R1 = 0x44 (X);		/*		R1=0x44( 68) */
    b468:	08 0a       	CC = R0 <= R1 (IU);
    b46a:	19 1c       	IF CC JUMP 0xb49c <_CreateNewCacheEntry+0x234> (BP);
    b46c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x44( 68) */
    b470:	2a e4 29 1f 	R2 = [P5 + 0x7ca4];
    b474:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    b476:	01 e1 78 34 	R1.L = 0x3478;		/* (13432)	R1=0x3478(13432) */
    b47a:	ff e3 c3 a5 	CALL 0x0 <_AddRecordToResponseList>;
    b47e:	05 21       	JUMP.S 0xb688 <_CreateNewCacheEntry+0x420>;
    b480:	f8 42       	R0 = R7.L (Z);
    b482:	22 e1 44 00 	R2 = 0x44 (X);		/*		R2=0x44( 68) */
    b486:	10 0a       	CC = R0 <= R2 (IU);
    b488:	00 15       	IF !CC JUMP 0xb688 <_CreateNewCacheEntry+0x420> (BP);
    b48a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3478(13432) */
    b48e:	2a e4 29 1f 	R2 = [P5 + 0x7ca4];
    b492:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    b494:	01 e1 c4 34 	R1.L = 0x34c4;		/* (13508)	R1=0x34c4(13508) */
    b498:	ff e3 b4 a5 	CALL 0x0 <_AddRecordToResponseList>;
    b49c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    b49e:	fa ac       	P2 = [FP + 0xc];
    b4a0:	18 93       	[P3] = R0;
    b4a2:	4b 32       	P1 = P3;
    b4a4:	21 6c       	P1 += 0x4;		/* (  4) */
    b4a6:	53 93       	[P2] = P3;
    b4a8:	fb bc       	[FP + 0xc] = P3;
    b4aa:	47 e1 00 00 	R7.H = 0x0;		/* (  0)	R7=0x0 <_AddRecordToResponseList>(  0) */
    b4ae:	4f e1 00 00 	FP.H = 0x0;		/* (  0)	FP=0x134 */
    b4b2:	2c e5 4c 00 	P4 = [P5 + 0x130];
    b4b6:	b1 bd       	[SP + 0x18] = P1;
    b4b8:	07 e1 08 00 	R7.L = 0x8;		/* (  8)	R7=0x8(  8) */
    b4bc:	26 e1 34 01 	R6 = 0x134 (X);		/*		R6=0x134(308) */
    b4c0:	0f e1 00 00 	FP.L = 0x0;		/* (  0)	FP=0x0 <_AddRecordToResponseList> */
    b4c4:	92 20       	JUMP.S 0xb5e8 <_CreateNewCacheEntry+0x380>;
    b4c6:	b0 a1       	R0 = [SP + 0x18];
    b4c8:	4c 30       	R1 = P4;
    b4ca:	ff e3 9b a5 	CALL 0x0 <_AddRecordToResponseList>;
    b4ce:	00 0c       	CC = R0 == 0x0;
    b4d0:	8a 1c       	IF CC JUMP 0xb5e4 <_CreateNewCacheEntry+0x37c> (BP);
    b4d2:	28 e4 44 00 	R0 = [P5 + 0x110];
    b4d6:	a1 a1       	R1 = [P4 + 0x18];
    b4d8:	01 08       	CC = R1 == R0;
    b4da:	4e 1c       	IF CC JUMP 0xb576 <_CreateNewCacheEntry+0x30e> (BP);
    b4dc:	a0 b1       	[P4 + 0x18] = R0;
    b4de:	60 e4 99 00 	R0 = W[P4 + 0x132] (Z);
    b4e2:	00 0c       	CC = R0 == 0x0;
    b4e4:	49 14       	IF !CC JUMP 0xb576 <_CreateNewCacheEntry+0x30e> (BP);
    b4e6:	25 a1       	R5 = [P4 + 0x10];
    b4e8:	05 0d       	CC = R5 <= 0x0;
    b4ea:	46 1c       	IF CC JUMP 0xb576 <_CreateNewCacheEntry+0x30e> (BP);
    b4ec:	a0 a3       	R0 = [P4 + 0x38];
    b4ee:	00 0c       	CC = R0 == 0x0;
    b4f0:	43 14       	IF !CC JUMP 0xb576 <_CreateNewCacheEntry+0x30e> (BP);
    b4f2:	e0 a1       	R0 = [P4 + 0x1c];
    b4f4:	08 64       	R0 += 0x1;		/* (  1) */
    b4f6:	49 60       	R1 = 0x9 (X);		/*		R1=0x9(  9) */
    b4f8:	e0 b1       	[P4 + 0x1c] = R0;
    b4fa:	08 0a       	CC = R0 <= R1 (IU);
    b4fc:	3d 1c       	IF CC JUMP 0xb576 <_CreateNewCacheEntry+0x30e> (BP);
    b4fe:	3c 91       	R4 = [FP];
    b500:	04 30       	R0 = R4;
    b502:	19 60       	R1 = 0x3 (X);		/*		R1=0x3(  3) */
    b504:	10 64       	R0 += 0x2;		/* (  2) */
    b506:	ff e3 7d a5 	CALL 0x0 <_AddRecordToResponseList>;
    b50a:	d9 60       	R1 = 0x1b (X);		/*		R1=0x1b( 27) */
    b50c:	c8 40       	R0 *= R1;
    b50e:	05 09       	CC = R5 <= R0;
    b510:	33 1c       	IF CC JUMP 0xb576 <_CreateNewCacheEntry+0x30e> (BP);
    b512:	29 e4 37 00 	R1 = [P5 + 0xdc];
    b516:	20 e4 2b 00 	R0 = [P4 + 0xac];
    b51a:	01 52       	R0 = R1 - R0;
    b51c:	a0 08       	CC = R0 < R4;
    b51e:	2c 14       	IF !CC JUMP 0xb576 <_CreateNewCacheEntry+0x30e> (BP);
    b520:	60 e5 1a 01 	R0 = W[P4 + 0x234] (X);
    b524:	ff e3 6e a5 	CALL 0x0 <_AddRecordToResponseList>;
    b528:	f0 b0       	[SP + 0xc] = R0;
    b52a:	e0 a1       	R0 = [P4 + 0x1c];
    b52c:	4c 30       	R1 = P4;
    b52e:	30 b1       	[SP + 0x10] = R0;
    b530:	b1 50       	R2 = R1 + R6;
    b532:	20 a1       	R0 = [P4 + 0x10];
    b534:	70 b1       	[SP + 0x14] = R0;
    b536:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1b( 27) */
    b53a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    b53c:	01 e1 10 35 	R1.L = 0x3510;		/* (13584)	R1=0x3510(13584) */
    b540:	ff e3 60 a5 	CALL 0x0 <_AddRecordToResponseList>;
    b544:	3c 91       	R4 = [FP];
    b546:	04 30       	R0 = R4;
    b548:	e9 63       	R1 = -0x3 (X);		/*		R1=0xfffffffd( -3) */
    b54a:	10 64       	R0 += 0x2;		/* (  2) */
    b54c:	ff e3 5a a5 	CALL 0x0 <_AddRecordToResponseList>;
    b550:	29 e4 37 00 	R1 = [P5 + 0xdc];
    b554:	48 51       	R5 = R0 + R1;
    b556:	82 c6 14 80 	R0 = R4 << 0x2;
    b55a:	ff e3 53 a5 	CALL 0x0 <_AddRecordToResponseList>;
    b55e:	45 51       	R5 = R5 + R0;
    b560:	38 91       	R0 = [FP];
    b562:	19 60       	R1 = 0x3 (X);		/*		R1=0x3(  3) */
    b564:	e5 b0       	[P4 + 0xc] = R5;
    b566:	10 64       	R0 += 0x2;		/* (  2) */
    b568:	ff e3 4c a5 	CALL 0x0 <_AddRecordToResponseList>;
    b56c:	20 b1       	[P4 + 0x10] = R0;
    b56e:	45 30       	R0 = P5;
    b570:	4c 30       	R1 = P4;
    b572:	ff e3 2b b5 	CALL 0x1fc8 <_SetNextQueryTime>;
    b576:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    b578:	20 a2       	R0 = [P4 + 0x20];
    b57a:	a2 e6 d8 00 	B[P4 + 0xd8] = R2;
    b57e:	08 64       	R0 += 0x1;		/* (  1) */
    b580:	19 a6       	R1 = W[P3 + 0x10] (Z);
    b582:	22 e1 00 04 	R2 = 0x400 (X);		/*		R2=0x400(1024) */
    b586:	20 b2       	[P4 + 0x20] = R0;
    b588:	11 0a       	CC = R1 <= R2 (IU);
    b58a:	04 1c       	IF CC JUMP 0xb592 <_CreateNewCacheEntry+0x32a> (BP);
    b58c:	61 a2       	R1 = [P4 + 0x24];
    b58e:	09 64       	R1 += 0x1;		/* (  1) */
    b590:	61 b2       	[P4 + 0x24] = R1;
    b592:	00 00       	NOP;
    b594:	99 e4 04 00 	R1 = B[P3 + 0x4] (Z);
    b598:	21 48       	CC = !BITTST (R1, 0x4);		/* bit  4 */
    b59a:	04 1c       	IF CC JUMP 0xb5a2 <_CreateNewCacheEntry+0x33a> (BP);
    b59c:	a1 a2       	R1 = [P4 + 0x28];
    b59e:	09 64       	R1 += 0x1;		/* (  1) */
    b5a0:	a1 b2       	[P4 + 0x28] = R1;
    b5a2:	21 e1 a0 0f 	R1 = 0xfa0 (X);		/*		R1=0xfa0(4000) */
    b5a6:	08 0a       	CC = R0 <= R1 (IU);
    b5a8:	1e 1c       	IF CC JUMP 0xb5e4 <_CreateNewCacheEntry+0x37c> (BP);
    b5aa:	0f 32       	P1 = R7;
    b5ac:	08 91       	R0 = [P1];
    b5ae:	08 30       	R1 = R0;
    b5b0:	09 64       	R1 += 0x1;		/* (  1) */
    b5b2:	09 93       	[P1] = R1;
    b5b4:	49 60       	R1 = 0x9 (X);		/*		R1=0x9(  9) */
    b5b6:	08 09       	CC = R0 <= R1;
    b5b8:	11 14       	IF !CC JUMP 0xb5da <_CreateNewCacheEntry+0x372> (BP);
    b5ba:	60 e5 1a 01 	R0 = W[P4 + 0x234] (X);
    b5be:	ff e3 21 a5 	CALL 0x0 <_AddRecordToResponseList>;
    b5c2:	4c 30       	R1 = P4;
    b5c4:	f0 b0       	[SP + 0xc] = R0;
    b5c6:	20 a2       	R0 = [P4 + 0x20];
    b5c8:	b1 50       	R2 = R1 + R6;
    b5ca:	30 b1       	[SP + 0x10] = R0;
    b5cc:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x9(  9) */
    b5d0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    b5d2:	01 e1 78 35 	R1.L = 0x3578;		/* (13688)	R1=0x3578(13688) */
    b5d6:	ff e3 15 a5 	CALL 0x0 <_AddRecordToResponseList>;
    b5da:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    b5dc:	21 68       	P1 = 0x4 (X);		/*		P1=0x4(  4) */
    b5de:	da b0       	[P3 + 0xc] = R2;
    b5e0:	19 e7 11 00 	[P3 + 0x44] = P1;
    b5e4:	00 00       	NOP;
    b5e6:	64 91       	P4 = [P4];
    b5e8:	44 0c       	CC = P4 == 0x0;
    b5ea:	05 1c       	IF CC JUMP 0xb5f4 <_CreateNewCacheEntry+0x38c> (BP);
    b5ec:	2a e5 4d 00 	P2 = [P5 + 0x134];
    b5f0:	54 08       	CC = P4 == P2;
    b5f2:	6a 17       	IF !CC JUMP 0xb4c6 <_CreateNewCacheEntry+0x25e> (BP);
    b5f4:	00 00       	NOP;
    b5f6:	58 a3       	R0 = [P3 + 0x34];
    b5f8:	00 0c       	CC = R0 == 0x0;
    b5fa:	3d 14       	IF !CC JUMP 0xb674 <_CreateNewCacheEntry+0x40c> (BP);
    b5fc:	2c e5 4e 00 	P4 = [P5 + 0x138];
    b600:	44 0c       	CC = P4 == 0x0;
    b602:	11 1c       	IF CC JUMP 0xb624 <_CreateNewCacheEntry+0x3bc> (BP);
    b604:	60 e5 1a 01 	R0 = W[P4 + 0x234] (X);
    b608:	ff e3 fc a4 	CALL 0x0 <_AddRecordToResponseList>;
    b60c:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    b610:	94 5a       	P2 = P4 + P2;
    b612:	f0 b0       	[SP + 0xc] = R0;
    b614:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3578(13688) */
    b618:	52 30       	R2 = P2;
    b61a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    b61c:	01 e1 c8 35 	R1.L = 0x35c8;		/* (13768)	R1=0x35c8(13768) */
    b620:	ff e3 f0 a4 	CALL 0x0 <_AddRecordToResponseList>;
    b624:	00 00       	NOP;
    b626:	28 e4 4c 00 	R0 = [P5 + 0x130];
    b62a:	7b 30       	R7 = P3;
    b62c:	28 e6 4e 00 	[P5 + 0x138] = R0;
    b630:	27 64       	R7 += 0x4;		/* (  4) */
    b632:	14 20       	JUMP.S 0xb65a <_CreateNewCacheEntry+0x3f2>;
    b634:	07 30       	R0 = R7;
    b636:	4c 30       	R1 = P4;
    b638:	ff e3 e4 a4 	CALL 0x0 <_AddRecordToResponseList>;
    b63c:	00 0c       	CC = R0 == 0x0;
    b63e:	06 1c       	IF CC JUMP 0xb64a <_CreateNewCacheEntry+0x3e2> (BP);
    b640:	45 30       	R0 = P5;
    b642:	4b 30       	R1 = P3;
    b644:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
    b646:	ff e3 e9 fa 	CALL 0xac18 <_AnswerCurrentQuestionWithResourceRecord>;
    b64a:	00 00       	NOP;
    b64c:	2a e5 4e 00 	P2 = [P5 + 0x138];
    b650:	62 08       	CC = P2 == P4;
    b652:	04 14       	IF !CC JUMP 0xb65a <_CreateNewCacheEntry+0x3f2> (BP);
    b654:	10 91       	R0 = [P2];
    b656:	28 e6 4e 00 	[P5 + 0x138] = R0;
    b65a:	00 00       	NOP;
    b65c:	2c e5 4e 00 	P4 = [P5 + 0x138];
    b660:	44 0c       	CC = P4 == 0x0;
    b662:	06 1c       	IF CC JUMP 0xb66e <_CreateNewCacheEntry+0x406> (BP);
    b664:	4c 30       	R1 = P4;
    b666:	28 e4 4d 00 	R0 = [P5 + 0x134];
    b66a:	01 08       	CC = R1 == R0;
    b66c:	e4 17       	IF !CC JUMP 0xb634 <_CreateNewCacheEntry+0x3cc> (BP);
    b66e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    b670:	28 e6 4e 00 	[P5 + 0x138] = R0;
    b674:	45 30       	R0 = P5;
    b676:	4b 30       	R1 = P3;
    b678:	ff e3 d8 b8 	CALL 0x2828 <_SetNextCacheCheckTimeForRecord>;
    b67c:	e6 6c       	SP += 0x1c;		/* ( 28) */
    b67e:	77 90       	FP = [SP++];
    b680:	43 30       	R0 = P3;
    b682:	27 01       	RETS = [SP++];
    b684:	a3 05       	(R7:4, P5:3) = [SP++];
    b686:	10 00       	RTS;
    b688:	fa 42       	R2 = R7.L (Z);
    b68a:	58 a2       	R0 = [P3 + 0x24];
    b68c:	29 e4 2a 1f 	R1 = [P5 + 0x7ca8];
    b690:	22 64       	R2 += 0x4;		/* (  4) */
    b692:	ff e3 b7 a4 	CALL 0x0 <_AddRecordToResponseList>;
    b696:	03 2f       	JUMP.S 0xb49c <_CreateNewCacheEntry+0x234>;
    b698:	2a e1 84 7c 	P2 = 0x7c84 (X);		/*		P2=0x7c84(31876) */
    b69c:	95 5a       	P2 = P5 + P2;
    b69e:	5e a2       	R6 = [P3 + 0x24];
    b6a0:	22 e1 98 00 	R2 = 0x98 (X);		/*		R2=0x98(152) */
    b6a4:	4a 30       	R1 = P2;
    b6a6:	43 30       	R0 = P3;
    b6a8:	ff e3 ac a4 	CALL 0x0 <_AddRecordToResponseList>;
    b6ac:	38 a1       	R0 = [FP + 0x10];
    b6ae:	18 b2       	[P3 + 0x20] = R0;
    b6b0:	30 e4 13 00 	R0 = [SP + 0x4c];
    b6b4:	54 30       	R2 = P4;
    b6b6:	5e b2       	[P3 + 0x24] = R6;
    b6b8:	58 b3       	[P3 + 0x34] = R0;
    b6ba:	16 08       	CC = R6 == R2;
    b6bc:	e2 16       	IF !CC JUMP 0xb480 <_CreateNewCacheEntry+0x218> (BP);
    b6be:	d2 2e       	JUMP.S 0xb462 <_CreateNewCacheEntry+0x1fa>;

0000b6c0 <_mDNSCoreReceive>:
_mDNSCoreReceive():
    b6c0:	e3 05       	[--SP] = (R7:4, P5:3);
    b6c2:	00 e8 5a 02 	LINK 0x968;		/* (2408) */
    b6c6:	37 e5 68 02 	FP = [SP + 0x9a0];
    b6ca:	28 32       	P5 = R0;
    b6cc:	b0 e5 a4 09 	R0 = B[SP + 0x9a4] (X);
    b6d0:	21 32       	P4 = R1;
    b6d2:	4f 0c       	CC = FP == 0x1;
    b6d4:	01 02       	R1 = CC;
    b6d6:	b0 e6 6b 00 	B[SP + 0x6b] = R0;
    b6da:	01 0c       	CC = R1 == 0x0;
    b6dc:	74 e4 d2 04 	R4 = W[SP + 0x9a4] (Z);
    b6e0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    b6e2:	2a e1 fc 1f 	P2 = 0x1ffc (X);		/*		P2=0x1ffc(8188) */
    b6e6:	b8 06       	IF !CC FP = R0;
    b6e8:	37 e4 66 02 	R7 = [SP + 0x998];
    b6ec:	31 e6 14 00 	[SP + 0x50] = R1;
    b6f0:	95 5a       	P2 = P5 + P2;
    b6f2:	44 4e       	R4 >>= 0x8;
    b6f4:	32 30       	R6 = R2;
    b6f6:	75 e5 ce 04 	R5 = W[SP + 0x99c] (X);
    b6fa:	b4 e6 58 00 	B[SP + 0x58] = R4;
    b6fe:	4a 30       	R1 = P2;
    b700:	07 30       	R0 = R7;
    b702:	ff e3 7f a4 	CALL 0x0 <_AddRecordToResponseList>;
    b706:	00 0c       	CC = R0 == 0x0;
    b708:	1a 1c       	IF CC JUMP 0xb73c <_mDNSCoreReceive+0x7c> (BP);
    b70a:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x1ffc */
    b70e:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    b712:	e9 42       	R1 = R5.L (Z);
    b714:	10 95       	R0 = W[P2] (Z);
    b716:	01 08       	CC = R1 == R0;
    b718:	12 14       	IF !CC JUMP 0xb73c <_mDNSCoreReceive+0x7c> (BP);
    b71a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x35c8(13768) */
    b71e:	45 30       	R0 = P5;
    b720:	01 e1 38 04 	R1.L = 0x438;		/* (1080)	R1=0x438(1080) */
    b724:	ff e3 6e a4 	CALL 0x0 <_AddRecordToResponseList>;
    b728:	54 30       	R2 = P4;
    b72a:	96 53       	R6 = R6 - R2;
    b72c:	b6 b5       	W[SP + 0xc] = R6;
    b72e:	45 30       	R0 = P5;
    b730:	31 e4 6a 02 	R1 = [SP + 0x9a8];
    b734:	ff e3 66 a4 	CALL 0x0 <_AddRecordToResponseList>;
    b738:	00 e2 e0 10 	JUMP.L 0xd8f8 <_mDNSCoreReceive+0x2238>;
    b73c:	1e 32       	P3 = R6;
    b73e:	58 68       	P0 = 0xb (X);		/*		P0=0xb( 11) */
    b740:	23 44       	P3 -= P4;
    b742:	43 0a       	CC = P3 <= P0 (IU);
    b744:	1a 14       	IF !CC JUMP 0xb778 <_mDNSCoreReceive+0xb8> (BP);
    b746:	68 43       	R0 = R5.B (Z);
    b748:	ed 42       	R5 = R5.L (Z);
    b74a:	40 4f       	R0 <<= 0x8;
    b74c:	45 4e       	R5 >>= 0x8;
    b74e:	45 57       	R5 = R5 | R0;
    b750:	b0 e4 6b 00 	R0 = B[SP + 0x6b] (Z);
    b754:	b4 e4 58 00 	R4 = B[SP + 0x58] (Z);
    b758:	40 4f       	R0 <<= 0x8;
    b75a:	04 56       	R0 = R4 | R0;
    b75c:	70 b1       	[SP + 0x14] = R0;
    b75e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x438(1080) */
    b762:	f5 b0       	[SP + 0xc] = R5;
    b764:	37 bd       	[SP + 0x10] = FP;
    b766:	b3 bd       	[SP + 0x18] = P3;
    b768:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    b76a:	01 e1 58 36 	R1.L = 0x3658;		/* (13912)	R1=0x3658(13912) */
    b76e:	17 30       	R2 = R7;
    b770:	ff e3 48 a4 	CALL 0x0 <_AddRecordToResponseList>;
    b774:	00 e2 08 11 	JUMP.L 0xd984 <_mDNSCoreReceive+0x22c4>;
    b778:	54 32       	P2 = P4;
    b77a:	a0 e5 02 00 	R0 = B[P4 + 0x2] (X);
    b77e:	08 32       	P1 = R0;
    b780:	22 6c       	P2 += 0x4;		/* (  4) */
    b782:	a0 e4 04 00 	R0 = B[P4 + 0x4] (Z);
    b786:	91 e4 01 00 	R1 = B[P2 + 0x1] (Z);
    b78a:	40 4f       	R0 <<= 0x8;
    b78c:	08 56       	R0 = R0 | R1;
    b78e:	a0 b4       	W[P4 + 0x4] = R0;
    b790:	90 e4 02 00 	R0 = B[P2 + 0x2] (Z);
    b794:	91 e4 03 00 	R1 = B[P2 + 0x3] (Z);
    b798:	40 4f       	R0 <<= 0x8;
    b79a:	08 56       	R0 = R0 | R1;
    b79c:	e0 b4       	W[P4 + 0x6] = R0;
    b79e:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
    b7a2:	91 e4 05 00 	R1 = B[P2 + 0x5] (Z);
    b7a6:	40 4f       	R0 <<= 0x8;
    b7a8:	08 56       	R0 = R0 | R1;
    b7aa:	20 b5       	W[P4 + 0x8] = R0;
    b7ac:	90 e4 06 00 	R0 = B[P2 + 0x6] (Z);
    b7b0:	91 e4 07 00 	R1 = B[P2 + 0x7] (Z);
    b7b4:	40 4f       	R0 <<= 0x8;
    b7b6:	08 56       	R0 = R0 | R1;
    b7b8:	60 b5       	W[P4 + 0xa] = R0;
    b7ba:	45 0c       	CC = P5 == 0x0;
    b7bc:	09 14       	IF !CC JUMP 0xb7ce <_mDNSCoreReceive+0x10e> (BP);
    b7be:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_AddRecordToResponseList>(  0) */
    b7c2:	00 e1 90 36 	R0.L = 0x3690;		/* (13968)	R0=0x3690(13968) */
    b7c6:	ff e3 1d a4 	CALL 0x0 <_AddRecordToResponseList>;
    b7ca:	00 e2 dd 10 	JUMP.L 0xd984 <_mDNSCoreReceive+0x22c4>;
    b7ce:	07 0c       	CC = R7 == 0x0;
    b7d0:	27 1c       	IF CC JUMP 0xb81e <_mDNSCoreReceive+0x15e> (BP);
    b7d2:	07 32       	P0 = R7;
    b7d4:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
    b7d6:	00 91       	R0 = [P0];
    b7d8:	08 08       	CC = R0 == R1;
    b7da:	08 14       	IF !CC JUMP 0xb7ea <_mDNSCoreReceive+0x12a> (BP);
    b7dc:	40 a0       	R0 = [P0 + 0x4];
    b7de:	f8 67       	R0 += -0x1;		/* ( -1) */
    b7e0:	ea 63       	R2 = -0x3 (X);		/*		R2=0xfffffffd( -3) */
    b7e2:	10 0a       	CC = R0 <= R2 (IU);
    b7e4:	00 02       	R0 = CC;
    b7e6:	00 4b       	BITTGL (R0, 0x0);		/* bit  0 */
    b7e8:	16 20       	JUMP.S 0xb814 <_mDNSCoreReceive+0x154>;
    b7ea:	33 60       	R3 = 0x6 (X);		/*		R3=0x6(  6) */
    b7ec:	18 08       	CC = R0 == R3;
    b7ee:	12 14       	IF !CC JUMP 0xb812 <_mDNSCoreReceive+0x152> (BP);
    b7f0:	07 32       	P0 = R7;
    b7f2:	42 a0       	R2 = [P0 + 0x4];
    b7f4:	83 a0       	R3 = [P0 + 0x8];
    b7f6:	c1 a0       	R1 = [P0 + 0xc];
    b7f8:	13 57       	R4 = R3 | R2;
    b7fa:	00 a1       	R0 = [P0 + 0x10];
    b7fc:	0c 57       	R4 = R4 | R1;
    b7fe:	04 57       	R4 = R4 | R0;
    b800:	14 32       	P2 = R4;
    b802:	42 0c       	CC = P2 == 0x0;
    b804:	07 1c       	IF CC JUMP 0xb812 <_mDNSCoreReceive+0x152> (BP);
    b806:	93 54       	R2 = R3 & R2;
    b808:	4a 54       	R1 = R2 & R1;
    b80a:	01 54       	R0 = R1 & R0;
    b80c:	38 0c       	CC = R0 == -0x1;
    b80e:	00 02       	R0 = CC;
    b810:	02 20       	JUMP.S 0xb814 <_mDNSCoreReceive+0x154>;
    b812:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    b814:	40 43       	R0 = R0.B (Z);
    b816:	00 0c       	CC = R0 == 0x0;
    b818:	03 1c       	IF CC JUMP 0xb81e <_mDNSCoreReceive+0x15e> (BP);
    b81a:	00 e2 b5 10 	JUMP.L 0xd984 <_mDNSCoreReceive+0x22c4>;
    b81e:	49 30       	R1 = P1;
    b820:	c0 63       	R0 = -0x8 (X);		/*		R0=0xfffffff8( -8) */
    b822:	01 54       	R0 = R1 & R0;
    b824:	b0 e6 48 00 	B[SP + 0x48] = R0;
    b828:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4(  4) */
    b82c:	45 30       	R0 = P5;
    b82e:	01 e1 38 04 	R1.L = 0x438;		/* (1080)	R1=0x438(1080) */
    b832:	ff e3 e7 a3 	CALL 0x0 <_AddRecordToResponseList>;
    b836:	28 e4 44 00 	R0 = [P5 + 0x110];
    b83a:	08 64       	R0 += 0x1;		/* (  1) */
    b83c:	28 e6 44 00 	[P5 + 0x110] = R0;
    b840:	47 0c       	CC = FP == 0x0;
    b842:	2d 1c       	IF CC JUMP 0xb89c <_mDNSCoreReceive+0x1dc> (BP);
    b844:	22 60       	R2 = 0x4 (X);		/*		R2=0x4(  4) */
    b846:	38 91       	R0 = [FP];
    b848:	10 08       	CC = R0 == R2;
    b84a:	08 14       	IF !CC JUMP 0xb85a <_mDNSCoreReceive+0x19a> (BP);
    b84c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    b850:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    b854:	79 a0       	R1 = [FP + 0x4];
    b856:	50 a0       	R0 = [P2 + 0x4];
    b858:	16 20       	JUMP.S 0xb884 <_mDNSCoreReceive+0x1c4>;
    b85a:	33 60       	R3 = 0x6 (X);		/*		R3=0x6(  6) */
    b85c:	18 08       	CC = R0 == R3;
    b85e:	15 14       	IF !CC JUMP 0xb888 <_mDNSCoreReceive+0x1c8> (BP);
    b860:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    b864:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    b868:	79 a0       	R1 = [FP + 0x4];
    b86a:	50 a0       	R0 = [P2 + 0x4];
    b86c:	01 08       	CC = R1 == R0;
    b86e:	0d 14       	IF !CC JUMP 0xb888 <_mDNSCoreReceive+0x1c8> (BP);
    b870:	b9 a0       	R1 = [FP + 0x8];
    b872:	90 a0       	R0 = [P2 + 0x8];
    b874:	01 08       	CC = R1 == R0;
    b876:	09 14       	IF !CC JUMP 0xb888 <_mDNSCoreReceive+0x1c8> (BP);
    b878:	f9 a0       	R1 = [FP + 0xc];
    b87a:	d0 a0       	R0 = [P2 + 0xc];
    b87c:	01 08       	CC = R1 == R0;
    b87e:	05 14       	IF !CC JUMP 0xb888 <_mDNSCoreReceive+0x1c8> (BP);
    b880:	39 a1       	R1 = [FP + 0x10];
    b882:	10 a1       	R0 = [P2 + 0x10];
    b884:	01 08       	CC = R1 == R0;
    b886:	44 18       	IF CC JUMP 0xb90e <_mDNSCoreReceive+0x24e>;
    b888:	24 e1 80 00 	R4 = 0x80 (X);		/*		R4=0x80(128) */
    b88c:	b0 e4 48 00 	R0 = B[SP + 0x48] (Z);
    b890:	20 08       	CC = R0 == R4;
    b892:	05 18       	IF CC JUMP 0xb89c <_mDNSCoreReceive+0x1dc>;
    b894:	21 e1 a8 00 	R1 = 0xa8 (X);		/*		R1=0xa8(168) */
    b898:	08 08       	CC = R0 == R1;
    b89a:	3a 14       	IF !CC JUMP 0xb90e <_mDNSCoreReceive+0x24e> (BP);
    b89c:	00 00       	NOP;
    b89e:	20 95       	R0 = W[P4] (Z);
    b8a0:	00 0c       	CC = R0 == 0x0;
    b8a2:	36 1c       	IF CC JUMP 0xb90e <_mDNSCoreReceive+0x24e> (BP);
    b8a4:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    b8a8:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    b8ac:	14 91       	R4 = [P2];
    b8ae:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    b8b2:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    b8b6:	10 91       	R0 = [P2];
    b8b8:	00 0c       	CC = R0 == 0x0;
    b8ba:	22 1c       	IF CC JUMP 0xb8fe <_mDNSCoreReceive+0x23e> (BP);
    b8bc:	32 e4 14 00 	R2 = [SP + 0x50];
    b8c0:	02 0c       	CC = R2 == 0x0;
    b8c2:	0c 14       	IF !CC JUMP 0xb8da <_mDNSCoreReceive+0x21a> (BP);
    b8c4:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0xfff8(65528) */
    b8c8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xa8(168) */
    b8cc:	47 0c       	CC = FP == 0x0;
    b8ce:	00 e1 60 11 	R0.L = 0x1160;		/* (4448)	R0=0x1160(4448) */
    b8d2:	01 e1 64 11 	R1.L = 0x1164;		/* (4452)	R1=0x1164(4452) */
    b8d6:	01 06       	IF !CC R0 = R1;
    b8d8:	05 20       	JUMP.S 0xb8e2 <_mDNSCoreReceive+0x222>;
    b8da:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x1160(4448) */
    b8de:	00 e1 08 36 	R0.L = 0x3608;		/* (13832)	R0=0x3608(13832) */
    b8e2:	f0 b0       	[SP + 0xc] = R0;
    b8e4:	73 e5 d2 04 	R3 = W[SP + 0x9a4] (X);
    b8e8:	37 b1       	[SP + 0x10] = R7;
    b8ea:	b5 b6       	W[SP + 0x14] = R5;
    b8ec:	b7 bd       	[SP + 0x18] = FP;
    b8ee:	b3 b7       	W[SP + 0x1c] = R3;
    b8f0:	34 be       	[SP + 0x20] = P4;
    b8f2:	76 b2       	[SP + 0x24] = R6;
    b8f4:	45 30       	R0 = P5;
    b8f6:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    b8f8:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    b8fa:	ff e3 83 a3 	CALL 0x0 <_AddRecordToResponseList>;
    b8fe:	f7 b0       	[SP + 0xc] = R7;
    b900:	35 b6       	W[SP + 0x10] = R5;
    b902:	45 30       	R0 = P5;
    b904:	4c 30       	R1 = P4;
    b906:	16 30       	R2 = R6;
    b908:	ff e3 7c a3 	CALL 0x0 <_AddRecordToResponseList>;
    b90c:	03 20       	JUMP.S 0xb912 <_mDNSCoreReceive+0x252>;
    b90e:	34 e4 6a 02 	R4 = [SP + 0x9a8];
    b912:	b0 e4 48 00 	R0 = B[SP + 0x48] (Z);
    b916:	00 0c       	CC = R0 == 0x0;
    b918:	a4 14       	IF !CC JUMP 0xba60 <_mDNSCoreReceive+0x3a0> (BP);
    b91a:	07 0c       	CC = R7 == 0x0;
    b91c:	11 18       	IF CC JUMP 0xb93e <_mDNSCoreReceive+0x27e>;
    b91e:	47 0c       	CC = FP == 0x0;
    b920:	0f 18       	IF CC JUMP 0xb93e <_mDNSCoreReceive+0x27e>;
    b922:	47 30       	R0 = FP;
    b924:	ff e3 6e a3 	CALL 0x0 <_AddRecordToResponseList>;
    b928:	00 0c       	CC = R0 == 0x0;
    b92a:	0a 14       	IF !CC JUMP 0xb93e <_mDNSCoreReceive+0x27e> (BP);
    b92c:	45 30       	R0 = P5;
    b92e:	0c 30       	R1 = R4;
    b930:	17 30       	R2 = R7;
    b932:	ff e3 dd b6 	CALL 0x26ec <_mDNS_AddressIsLocalSubnet>;
    b936:	08 02       	CC = R0;
    b938:	00 02       	R0 = CC;
    b93a:	18 32       	P3 = R0;
    b93c:	02 20       	JUMP.S 0xb940 <_mDNSCoreReceive+0x280>;
    b93e:	03 68       	P3 = 0x0 (X);		/*		P3=0x0(  0) */
    b940:	04 0c       	CC = R4 == 0x0;
    b942:	58 14       	IF !CC JUMP 0xb9f2 <_mDNSCoreReceive+0x332> (BP);
    b944:	47 0c       	CC = FP == 0x0;
    b946:	56 18       	IF CC JUMP 0xb9f2 <_mDNSCoreReceive+0x332>;
    b948:	47 30       	R0 = FP;
    b94a:	ff e3 5b a3 	CALL 0x0 <_AddRecordToResponseList>;
    b94e:	00 0c       	CC = R0 == 0x0;
    b950:	51 1c       	IF CC JUMP 0xb9f2 <_mDNSCoreReceive+0x332> (BP);
    b952:	68 43       	R0 = R5.B (Z);
    b954:	ed 42       	R5 = R5.L (Z);
    b956:	40 4f       	R0 <<= 0x8;
    b958:	45 4e       	R5 >>= 0x8;
    b95a:	45 57       	R5 = R5 | R0;
    b95c:	a3 a4       	R3 = W[P4 + 0x4] (Z);
    b95e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    b962:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x3608(13832) */
    b966:	0b 0c       	CC = R3 == 0x1;
    b968:	01 e1 10 36 	R1.L = 0x3610;		/* (13840)	R1=0x3610(13840) */
    b96c:	00 e1 0c 36 	R0.L = 0x360c;		/* (13836)	R0=0x360c(13836) */
    b970:	e2 a4       	R2 = W[P4 + 0x6] (Z);
    b972:	81 06       	IF !CC P0 = R1;
    b974:	80 07       	IF CC P0 = R0;
    b976:	1d 32       	P3 = R5;
    b978:	0a 0c       	CC = R2 == 0x1;
    b97a:	b5 e4 6b 00 	R5 = B[SP + 0x6b] (Z);
    b97e:	89 06       	IF !CC P1 = R1;
    b980:	88 07       	IF CC P1 = R0;
    b982:	45 4f       	R5 <<= 0x8;
    b984:	b4 e4 58 00 	R4 = B[SP + 0x58] (Z);
    b988:	21 a5       	R1 = W[P4 + 0x8] (Z);
    b98a:	2c 57       	R4 = R4 | R5;
    b98c:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x360c(13836) */
    b990:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    b994:	0c 34       	I1 = R4;
    b996:	09 0c       	CC = R1 == 0x1;
    b998:	00 e1 14 36 	R0.L = 0x3614;		/* (13844)	R0=0x3614(13844) */
    b99c:	0a e1 1c 36 	P2.L = 0x361c;		/* (13852)	P2=0x361c */
    b9a0:	90 07       	IF CC P2 = R0;
    b9a2:	50 e1 00 00 	I0.H = 0x0;		/* (  0)	I0=0x0 <_AddRecordToResponseList>(  0) */
    b9a6:	60 a5       	R0 = W[P4 + 0xa] (Z);
    b9a8:	10 e1 04 25 	I0.L = 0x2504;		/* (9476)	I0=0x2504(9476) */
    b9ac:	44 e1 00 00 	R4.H = 0x0;		/* (  0)	R4=0x80(128) */
    b9b0:	08 0c       	CC = R0 == 0x1;
    b9b2:	a8 30       	R5 = I0;
    b9b4:	04 e1 24 36 	R4.L = 0x3624;		/* (13860)	R4=0x3624(13860) */
    b9b8:	25 06       	IF !CC R4 = R5;
    b9ba:	70 b3       	[SP + 0x34] = R0;
    b9bc:	a9 30       	R5 = I1;
    b9be:	44 30       	R0 = P4;
    b9c0:	75 b1       	[SP + 0x14] = R5;
    b9c2:	f1 b2       	[SP + 0x2c] = R1;
    b9c4:	60 64       	R0 += 0xc;		/* ( 12) */
    b9c6:	86 53       	R6 = R6 - R0;
    b9c8:	05 60       	R5 = 0x0 (X);		/*		R5=0x0(  0) */
    b9ca:	72 b2       	[SP + 0x24] = R2;
    b9cc:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3610(13840) */
    b9d0:	f3 bc       	[SP + 0xc] = P3;
    b9d2:	37 bd       	[SP + 0x10] = FP;
    b9d4:	b5 b1       	[SP + 0x18] = R5;
    b9d6:	f3 b1       	[SP + 0x1c] = R3;
    b9d8:	30 be       	[SP + 0x20] = P0;
    b9da:	b1 be       	[SP + 0x28] = P1;
    b9dc:	32 bf       	[SP + 0x30] = P2;
    b9de:	b4 b3       	[SP + 0x38] = R4;
    b9e0:	f6 b3       	[SP + 0x3c] = R6;
    b9e2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    b9e4:	01 e1 b0 36 	R1.L = 0x36b0;		/* (14000)	R1=0x36b0(14000) */
    b9e8:	17 30       	R2 = R7;
    b9ea:	ff e3 0b a3 	CALL 0x0 <_AddRecordToResponseList>;
    b9ee:	00 e2 85 0f 	JUMP.L 0xd8f8 <_mDNSCoreReceive+0x2238>;
    b9f2:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x361c */
    b9f6:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    b9fa:	10 95       	R0 = W[P2] (Z);
    b9fc:	05 58       	R0 = R5 ^ R0;
    b9fe:	06 c4 00 80 	R0 = ABS R0 (V);
    ba02:	80 43       	R0 = -R0;
    ba04:	78 49       	CC = BITTST (R0, 0xf);		/* bit 15 */
    ba06:	01 02       	R1 = CC;
    ba08:	47 30       	R0 = FP;
    ba0a:	31 e6 10 00 	[SP + 0x40] = R1;
    ba0e:	ff e3 f9 a2 	CALL 0x0 <_AddRecordToResponseList>;
    ba12:	31 e4 10 00 	R1 = [SP + 0x40];
    ba16:	2f e1 8c 59 	FP = 0x598c (X);		/*		FP=0x598c(22924) */
    ba1a:	fd 5b       	FP = P5 + FP;
    ba1c:	71 b1       	[SP + 0x14] = R1;
    ba1e:	b0 b1       	[SP + 0x18] = R0;
    ba20:	16 30       	R2 = R6;
    ba22:	f7 b0       	[SP + 0xc] = R7;
    ba24:	34 b1       	[SP + 0x10] = R4;
    ba26:	f3 bd       	[SP + 0x1c] = P3;
    ba28:	37 be       	[SP + 0x20] = FP;
    ba2a:	45 30       	R0 = P5;
    ba2c:	4c 30       	R1 = P4;
    ba2e:	ff e3 a1 d4 	CALL 0x6370 <_ProcessQuery>;
    ba32:	30 30       	R6 = R0;
    ba34:	00 0c       	CC = R0 == 0x0;
    ba36:	03 14       	IF !CC JUMP 0xba3c <_mDNSCoreReceive+0x37c> (BP);
    ba38:	00 e2 60 0f 	JUMP.L 0xd8f8 <_mDNSCoreReceive+0x2238>;
    ba3c:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_AddRecordToResponseList>(  0) */
    ba40:	00 e1 54 37 	R0.L = 0x3754;		/* (14164)	R0=0x3754(14164) */
    ba44:	ff e3 de a2 	CALL 0x0 <_AddRecordToResponseList>;
    ba48:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    ba4a:	30 b1       	[SP + 0x10] = R0;
    ba4c:	f0 b1       	[SP + 0x1c] = R0;
    ba4e:	30 b2       	[SP + 0x20] = R0;
    ba50:	f4 b0       	[SP + 0xc] = R4;
    ba52:	77 b1       	[SP + 0x14] = R7;
    ba54:	35 b7       	W[SP + 0x18] = R5;
    ba56:	45 30       	R0 = P5;
    ba58:	4f 30       	R1 = FP;
    ba5a:	16 30       	R2 = R6;
    ba5c:	00 e2 ec 0d 	JUMP.L 0xd634 <_mDNSCoreReceive+0x1f74>;
    ba60:	21 e1 80 00 	R1 = 0x80 (X);		/*		R1=0x80(128) */
    ba64:	08 08       	CC = R0 == R1;
    ba66:	03 18       	IF CC JUMP 0xba6c <_mDNSCoreReceive+0x3ac>;
    ba68:	00 e2 ee 09 	JUMP.L 0xce44 <_mDNSCoreReceive+0x1784>;
    ba6c:	b5 e6 70 00 	B[SP + 0x70] = R5;
    ba70:	ed 42       	R5 = R5.L (Z);
    ba72:	45 4e       	R5 >>= 0x8;
    ba74:	b5 e6 5c 00 	B[SP + 0x5c] = R5;
    ba78:	47 0c       	CC = FP == 0x0;
    ba7a:	09 18       	IF CC JUMP 0xba8c <_mDNSCoreReceive+0x3cc>;
    ba7c:	47 30       	R0 = FP;
    ba7e:	ff e3 c1 a2 	CALL 0x0 <_AddRecordToResponseList>;
    ba82:	08 02       	CC = R0;
    ba84:	02 02       	R2 = CC;
    ba86:	32 e6 1d 00 	[SP + 0x74] = R2;
    ba8a:	04 20       	JUMP.S 0xba92 <_mDNSCoreReceive+0x3d2>;
    ba8c:	03 60       	R3 = 0x0 (X);		/*		R3=0x0(  0) */
    ba8e:	33 e6 1d 00 	[SP + 0x74] = R3;
    ba92:	07 0c       	CC = R7 == 0x0;
    ba94:	0c 18       	IF CC JUMP 0xbaac <_mDNSCoreReceive+0x3ec>;
    ba96:	45 30       	R0 = P5;
    ba98:	0c 30       	R1 = R4;
    ba9a:	17 30       	R2 = R7;
    ba9c:	ff e3 28 b6 	CALL 0x26ec <_mDNS_AddressIsLocalSubnet>;
    baa0:	00 0c       	CC = R0 == 0x0;
    baa2:	05 02       	R5 = CC;
    baa4:	05 4b       	BITTGL (R5, 0x0);		/* bit  0 */
    baa6:	35 e6 19 00 	[SP + 0x64] = R5;
    baaa:	04 20       	JUMP.S 0xbab2 <_mDNSCoreReceive+0x3f2>;
    baac:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    baae:	30 e6 19 00 	[SP + 0x64] = R0;
    bab2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    bab4:	30 e6 59 02 	[SP + 0x964] = R0;
    bab8:	b0 e4 5c 00 	R0 = B[SP + 0x5c] (Z);
    babc:	b1 e4 70 00 	R1 = B[SP + 0x70] (Z);
    bac0:	40 4f       	R0 <<= 0x8;
    bac2:	01 56       	R0 = R1 | R0;
    bac4:	30 b6       	W[SP + 0x10] = R0;
    bac6:	4e 30       	R1 = SP;
    bac8:	22 e1 64 09 	R2 = 0x964 (X);		/*		R2=0x964(2404) */
    bacc:	11 50       	R0 = R1 + R2;
    bace:	70 b1       	[SP + 0x14] = R0;
    bad0:	f7 b0       	[SP + 0xc] = R7;
    bad2:	45 30       	R0 = P5;
    bad4:	4c 30       	R1 = P4;
    bad6:	16 30       	R2 = R6;
    bad8:	ff e3 94 a2 	CALL 0x0 <_AddRecordToResponseList>;
    badc:	30 e6 14 00 	[SP + 0x50] = R0;
    bae0:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    bae2:	30 e6 58 02 	[SP + 0x960] = R0;
    bae6:	e3 a4       	R3 = W[P4 + 0x6] (Z);
    bae8:	20 a5       	R0 = W[P4 + 0x8] (Z);
    baea:	18 50       	R0 = R0 + R3;
    baec:	30 e6 22 00 	[SP + 0x88] = R0;
    baf0:	60 a5       	R0 = W[P4 + 0xa] (Z);
    baf2:	35 e4 22 00 	R5 = [SP + 0x88];
    baf6:	05 50       	R0 = R5 + R0;
    baf8:	33 e6 21 00 	[SP + 0x84] = R3;
    bafc:	30 e6 24 00 	[SP + 0x90] = R0;
    bb00:	04 0c       	CC = R4 == 0x0;
    bb02:	07 14       	IF !CC JUMP 0xbb10 <_mDNSCoreReceive+0x450> (BP);
    bb04:	a0 e4 02 00 	R0 = B[P4 + 0x2] (Z);
    bb08:	08 48       	CC = !BITTST (R0, 0x1);		/* bit  1 */
    bb0a:	03 1c       	IF CC JUMP 0xbb10 <_mDNSCoreReceive+0x450> (BP);
    bb0c:	00 e2 f6 0e 	JUMP.L 0xd8f8 <_mDNSCoreReceive+0x2238>;
    bb10:	30 e4 14 00 	R0 = [SP + 0x50];
    bb14:	08 0c       	CC = R0 == 0x1;
    bb16:	03 14       	IF !CC JUMP 0xbb1c <_mDNSCoreReceive+0x45c> (BP);
    bb18:	00 e2 f0 0e 	JUMP.L 0xd8f8 <_mDNSCoreReceive+0x2238>;
    bb1c:	4c 30       	R1 = P4;
    bb1e:	61 64       	R1 += 0xc;		/* ( 12) */
    bb20:	31 e6 13 00 	[SP + 0x4c] = R1;
    bb24:	32 e4 1d 00 	R2 = [SP + 0x74];
    bb28:	02 0c       	CC = R2 == 0x0;
    bb2a:	07 10       	IF !CC JUMP 0xbb38 <_mDNSCoreReceive+0x478>;
    bb2c:	18 0c       	CC = R0 == 0x3;
    bb2e:	05 1c       	IF CC JUMP 0xbb38 <_mDNSCoreReceive+0x478> (BP);
    bb30:	a0 e4 02 00 	R0 = B[P4 + 0x2] (Z);
    bb34:	08 48       	CC = !BITTST (R0, 0x1);		/* bit  1 */
    bb36:	3a 1c       	IF CC JUMP 0xbbaa <_mDNSCoreReceive+0x4ea> (BP);
    bb38:	44 30       	R0 = P4;
    bb3a:	0e 30       	R1 = R6;
    bb3c:	ff e3 62 a2 	CALL 0x0 <_AddRecordToResponseList>;
    bb40:	30 e6 11 00 	[SP + 0x44] = R0;
    bb44:	2a e1 84 7c 	P2 = 0x7c84 (X);		/*		P2=0x7c84(31876) */
    bb48:	95 5a       	P2 = P5 + P2;
    bb4a:	32 e7 1e 00 	[SP + 0x78] = P2;
    bb4e:	2a e1 88 7c 	P2 = 0x7c88 (X);		/*		P2=0x7c88(31880) */
    bb52:	95 5a       	P2 = P5 + P2;
    bb54:	32 e7 12 00 	[SP + 0x48] = P2;
    bb58:	b0 e4 70 00 	R0 = B[SP + 0x70] (Z);
    bb5c:	32 e5 1e 00 	P2 = [SP + 0x78];
    bb60:	40 4f       	R0 <<= 0x8;
    bb62:	b5 e4 5c 00 	R5 = B[SP + 0x5c] (Z);
    bb66:	45 57       	R5 = R5 | R0;
    bb68:	35 e6 25 00 	[SP + 0x94] = R5;
    bb6c:	28 e1 60 09 	P0 = 0x960 (X);		/*		P0=0x960(2400) */
    bb70:	b0 e4 58 00 	R0 = B[SP + 0x58] (Z);
    bb74:	03 60       	R3 = 0x0 (X);		/*		R3=0x0(  0) */
    bb76:	06 5a       	P0 = SP + P0;
    bb78:	01 68       	P1 = 0x0 (X);		/*		P1=0x0(  0) */
    bb7a:	45 e1 00 00 	R5.H = 0x0;		/* (  0)	R5=0x0 <_AddRecordToResponseList>(  0) */
    bb7e:	40 4f       	R0 <<= 0x8;
    bb80:	22 6c       	P2 += 0x4;		/* (  4) */
    bb82:	37 e7 1c 00 	[SP + 0x70] = FP;
    bb86:	33 e6 17 00 	[SP + 0x5c] = R3;
    bb8a:	30 e7 18 00 	[SP + 0x60] = P0;
    bb8e:	31 e7 15 00 	[SP + 0x54] = P1;
    bb92:	05 e1 00 00 	R5.L = 0x0;		/* (  0)	R5=0x0 <_AddRecordToResponseList>(  0) */
    bb96:	30 e6 27 00 	[SP + 0x9c] = R0;
    bb9a:	32 e7 28 00 	[SP + 0xa0] = P2;
    bb9e:	36 e6 1f 00 	[SP + 0x7c] = R6;
    bba2:	37 e6 23 00 	[SP + 0x8c] = R7;
    bba6:	7c 32       	FP = P4;
    bba8:	4e 26       	JUMP.S 0xc844 <_mDNSCoreReceive+0x1184>;
    bbaa:	78 60       	R0 = 0xf (X);		/*		R0=0xf( 15) */
    bbac:	a1 e5 03 00 	R1 = B[P4 + 0x3] (X);
    bbb0:	41 54       	R1 = R1 & R0;
    bbb2:	4a 43       	R2 = R1.B (Z);
    bbb4:	01 30       	R0 = R1;
    bbb6:	02 0c       	CC = R2 == 0x0;
    bbb8:	09 1c       	IF CC JUMP 0xbbca <_mDNSCoreReceive+0x50a> (BP);
    bbba:	1a 0c       	CC = R2 == 0x3;
    bbbc:	0b 18       	IF CC JUMP 0xbbd2 <_mDNSCoreReceive+0x512>;
    bbbe:	4a 60       	R2 = 0x9 (X);		/*		R2=0x9(  9) */
    bbc0:	51 58       	R1 = R1 ^ R2;
    bbc2:	49 43       	R1 = R1.B (Z);
    bbc4:	89 43       	R1 = -R1;
    bbc6:	f9 4e       	R1 >>= 0x1f;
    bbc8:	02 20       	JUMP.S 0xbbcc <_mDNSCoreReceive+0x50c>;
    bbca:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    bbcc:	31 e6 12 00 	[SP + 0x48] = R1;
    bbd0:	04 20       	JUMP.S 0xbbd8 <_mDNSCoreReceive+0x518>;
    bbd2:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    bbd4:	32 e6 12 00 	[SP + 0x48] = R2;
    bbd8:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    bbda:	31 e6 15 00 	[SP + 0x54] = R1;
    bbde:	b1 e4 58 00 	R1 = B[SP + 0x58] (Z);
    bbe2:	33 e4 13 00 	R3 = [SP + 0x4c];
    bbe6:	05 60       	R5 = 0x0 (X);		/*		R5=0x0(  0) */
    bbe8:	b2 e4 6b 00 	R2 = B[SP + 0x6b] (Z);
    bbec:	41 4f       	R1 <<= 0x8;
    bbee:	40 43       	R0 = R0.B (Z);
    bbf0:	33 e6 11 00 	[SP + 0x44] = R3;
    bbf4:	35 e6 18 00 	[SP + 0x60] = R5;
    bbf8:	72 e6 36 00 	W[SP + 0x6c] = R2;
    bbfc:	31 e6 1e 00 	[SP + 0x78] = R1;
    bc00:	30 e6 1f 00 	[SP + 0x7c] = R0;
    bc04:	5c 32       	P3 = P4;
    bc06:	96 20       	JUMP.S 0xbd32 <_mDNSCoreReceive+0x672>;
    bc08:	28 e1 7c 06 	P0 = 0x67c (X);		/*		P0=0x67c(1660) */
    bc0c:	30 5a       	P0 = P0 + SP;
    bc0e:	f4 b0       	[SP + 0xc] = R4;
    bc10:	30 bd       	[SP + 0x10] = P0;
    bc12:	43 30       	R0 = P3;
    bc14:	31 e4 11 00 	R1 = [SP + 0x44];
    bc18:	16 30       	R2 = R6;
    bc1a:	ff e3 f3 a1 	CALL 0x0 <_AddRecordToResponseList>;
    bc1e:	30 e6 11 00 	[SP + 0x44] = R0;
    bc22:	00 0c       	CC = R0 == 0x0;
    bc24:	82 18       	IF CC JUMP 0xbd28 <_mDNSCoreReceive+0x668>;
    bc26:	47 0c       	CC = FP == 0x0;
    bc28:	28 e1 7c 06 	P0 = 0x67c (X);		/*		P0=0x67c(1660) */
    bc2c:	30 5a       	P0 = P0 + SP;
    bc2e:	32 e4 1e 00 	R2 = [SP + 0x78];
    bc32:	b1 e4 6c 00 	R1 = B[SP + 0x6c] (Z);
    bc36:	51 56       	R1 = R1 | R2;
    bc38:	02 02       	R2 = CC;
    bc3a:	28 e4 4c 00 	R0 = [P5 + 0x130];
    bc3e:	f0 bc       	[SP + 0xc] = P0;
    bc40:	32 b1       	[SP + 0x10] = R2;
    bc42:	1a 95       	R2 = W[P3] (Z);
    bc44:	ff e3 80 b1 	CALL 0x1f44 <_ExpectingUnicastResponseForQuestion.clone.11>;
    bc48:	28 30       	R5 = R0;
    bc4a:	00 0c       	CC = R0 == 0x0;
    bc4c:	6e 18       	IF CC JUMP 0xbd28 <_mDNSCoreReceive+0x668>;
    bc4e:	30 e4 12 00 	R0 = [SP + 0x48];
    bc52:	00 0c       	CC = R0 == 0x0;
    bc54:	45 14       	IF !CC JUMP 0xbcde <_mDNSCoreReceive+0x61e> (BP);
    bc56:	28 e1 b0 07 	P0 = 0x7b0 (X);		/*		P0=0x7b0(1968) */
    bc5a:	30 5a       	P0 = P0 + SP;
    bc5c:	40 30       	R0 = P0;
    bc5e:	ff e3 d1 a1 	CALL 0x0 <_AddRecordToResponseList>;
    bc62:	41 e1 d5 20 	R1.H = 0x20d5;		/* (8405)	R1=0x20d50000(550830080) */
    bc66:	20 32       	P4 = R0;
    bc68:	01 e1 39 6b 	R1.L = 0x6b39;		/* (27449)	R1=0x20d56b39(550857529) */
    bc6c:	ff e3 ca a1 	CALL 0x0 <_AddRecordToResponseList>;
    bc70:	82 c6 d0 83 	R1 = R0 >> 0x6;
    bc74:	20 e1 f3 01 	R0 = 0x1f3 (X);		/*		R0=0x1f3(499) */
    bc78:	c1 40       	R1 *= R0;
    bc7a:	44 30       	R0 = P4;
    bc7c:	28 e1 b0 07 	P0 = 0x7b0 (X);		/*		P0=0x7b0(1968) */
    bc80:	48 52       	R1 = R0 - R1;
    bc82:	30 5a       	P0 = P0 + SP;
    bc84:	f0 bc       	[SP + 0xc] = P0;
    bc86:	45 30       	R0 = P5;
    bc88:	32 e4 a0 01 	R2 = [SP + 0x680];
    bc8c:	ff e3 ac b3 	CALL 0x23e4 <_CacheGroupForName>;
    bc90:	10 32       	P2 = R0;
    bc92:	42 0c       	CC = P2 == 0x0;
    bc94:	03 1c       	IF CC JUMP 0xbc9a <_mDNSCoreReceive+0x5da> (BP);
    bc96:	94 ac       	P4 = [P2 + 0x8];
    bc98:	1f 20       	JUMP.S 0xbcd6 <_mDNSCoreReceive+0x616>;
    bc9a:	04 68       	P4 = 0x0 (X);		/*		P4=0x0(  0) */
    bc9c:	1d 20       	JUMP.S 0xbcd6 <_mDNSCoreReceive+0x616>;
    bc9e:	44 30       	R0 = P4;
    bca0:	32 e6 10 00 	[SP + 0x40] = R2;
    bca4:	20 64       	R0 += 0x4;		/* (  4) */
    bca6:	0d 30       	R1 = R5;
    bca8:	ff e3 ac a1 	CALL 0x0 <_AddRecordToResponseList>;
    bcac:	00 0c       	CC = R0 == 0x0;
    bcae:	32 e4 10 00 	R2 = [SP + 0x40];
    bcb2:	0f 1c       	IF CC JUMP 0xbcd0 <_mDNSCoreReceive+0x610> (BP);
    bcb4:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    bcb8:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    bcbc:	e0 a0       	R0 = [P4 + 0xc];
    bcbe:	0b 91       	R3 = [P1];
    bcc0:	d8 40       	R0 *= R3;
    bcc2:	29 e4 37 00 	R1 = [P5 + 0xdc];
    bcc6:	f9 67       	R1 += -0x1;		/* ( -1) */
    bcc8:	01 52       	R0 = R1 - R0;
    bcca:	20 b3       	[P4 + 0x30] = R0;
    bccc:	22 e6 11 00 	[P4 + 0x44] = R2;
    bcd0:	00 00       	NOP;
    bcd2:	64 91       	P4 = [P4];
    bcd4:	02 20       	JUMP.S 0xbcd8 <_mDNSCoreReceive+0x618>;
    bcd6:	22 60       	R2 = 0x4 (X);		/*		R2=0x4(  4) */
    bcd8:	44 0c       	CC = P4 == 0x0;
    bcda:	e2 17       	IF !CC JUMP 0xbc9e <_mDNSCoreReceive+0x5de> (BP);
    bcdc:	26 20       	JUMP.S 0xbd28 <_mDNSCoreReceive+0x668>;
    bcde:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x7c88 */
    bce2:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    bce6:	10 91       	R0 = [P2];
    bce8:	00 0c       	CC = R0 == 0x0;
    bcea:	18 1c       	IF CC JUMP 0xbd1a <_mDNSCoreReceive+0x65a> (BP);
    bcec:	05 32       	P0 = R5;
    bcee:	70 e5 58 04 	R0 = W[SP + 0x8b0] (X);
    bcf2:	04 e5 32 00 	P4 = [P0 + 0xc8];
    bcf6:	ff e3 85 a1 	CALL 0x0 <_AddRecordToResponseList>;
    bcfa:	31 e4 1f 00 	R1 = [SP + 0x7c];
    bcfe:	f1 b0       	[SP + 0xc] = R1;
    bd00:	28 e1 b0 07 	P0 = 0x7b0 (X);		/*		P0=0x7b0(1968) */
    bd04:	30 5a       	P0 = P0 + SP;
    bd06:	70 b1       	[SP + 0x14] = R0;
    bd08:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x6b39(27449) */
    bd0c:	30 bd       	[SP + 0x10] = P0;
    bd0e:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    bd10:	01 e1 68 37 	R1.L = 0x3768;		/* (14184)	R1=0x3768(14184) */
    bd14:	54 30       	R2 = P4;
    bd16:	ff e3 75 a1 	CALL 0x0 <_AddRecordToResponseList>;
    bd1a:	45 30       	R0 = P5;
    bd1c:	0d 30       	R1 = R5;
    bd1e:	ff e3 71 a1 	CALL 0x0 <_AddRecordToResponseList>;
    bd22:	09 68       	P1 = 0x1 (X);		/*		P1=0x1(  1) */
    bd24:	31 e7 18 00 	[SP + 0x60] = P1;
    bd28:	30 e4 15 00 	R0 = [SP + 0x54];
    bd2c:	08 64       	R0 += 0x1;		/* (  1) */
    bd2e:	30 e6 15 00 	[SP + 0x54] = R0;
    bd32:	98 a4       	R0 = W[P3 + 0x4] (Z);
    bd34:	31 e4 15 00 	R1 = [SP + 0x54];
    bd38:	81 08       	CC = R1 < R0;
    bd3a:	07 10       	IF !CC JUMP 0xbd48 <_mDNSCoreReceive+0x688>;
    bd3c:	32 e4 11 00 	R2 = [SP + 0x44];
    bd40:	02 0c       	CC = R2 == 0x0;
    bd42:	03 18       	IF CC JUMP 0xbd48 <_mDNSCoreReceive+0x688>;
    bd44:	b2 09       	CC = R2 < R6 (IU);
    bd46:	61 1f       	IF CC JUMP 0xbc08 <_mDNSCoreReceive+0x548> (BP);
    bd48:	33 e4 18 00 	R3 = [SP + 0x60];
    bd4c:	63 32       	P4 = P3;
    bd4e:	03 0c       	CC = R3 == 0x0;
    bd50:	fa 1e       	IF CC JUMP 0xbb44 <_mDNSCoreReceive+0x484> (BP);
    bd52:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    bd56:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    bd5a:	10 91       	R0 = [P2];
    bd5c:	00 0c       	CC = R0 == 0x0;
    bd5e:	03 14       	IF !CC JUMP 0xbd64 <_mDNSCoreReceive+0x6a4> (BP);
    bd60:	00 e2 cc 0d 	JUMP.L 0xd8f8 <_mDNSCoreReceive+0x2238>;
    bd64:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x3(  3) */
    bd68:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0x134(308) */
    bd6c:	00 e1 0c 36 	R0.L = 0x360c;		/* (13836)	R0=0x360c(13836) */
    bd70:	da a4       	R2 = W[P3 + 0x6] (Z);
    bd72:	0a 0c       	CC = R2 == 0x1;
    bd74:	06 e1 10 36 	R6.L = 0x3610;		/* (13840)	R6=0x3610(13840) */
    bd78:	30 07       	IF CC R6 = R0;
    bd7a:	19 a5       	R1 = W[P3 + 0x8] (Z);
    bd7c:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x360c(13836) */
    bd80:	47 e1 00 00 	R7.H = 0x0;		/* (  0)	R7=0x8(  8) */
    bd84:	09 0c       	CC = R1 == 0x1;
    bd86:	00 e1 14 36 	R0.L = 0x3614;		/* (13844)	R0=0x3614(13844) */
    bd8a:	07 e1 1c 36 	R7.L = 0x361c;		/* (13852)	R7=0x361c(13852) */
    bd8e:	38 07       	IF CC R7 = R0;
    bd90:	58 a5       	R0 = W[P3 + 0xa] (Z);
    bd92:	43 e1 00 00 	R3.H = 0x0;		/* (  0)	R3=0x0 <_AddRecordToResponseList>(  0) */
    bd96:	45 e1 00 00 	R5.H = 0x0;		/* (  0)	R5=0x0 <_AddRecordToResponseList>(  0) */
    bd9a:	08 0c       	CC = R0 == 0x1;
    bd9c:	05 e1 04 25 	R5.L = 0x2504;		/* (9476)	R5=0x2504(9476) */
    bda0:	31 b1       	[SP + 0x10] = R1;
    bda2:	03 e1 44 12 	R3.L = 0x1244;		/* (4676)	R3=0x1244(4676) */
    bda6:	1d 06       	IF !CC R3 = R5;
    bda8:	b0 b1       	[SP + 0x18] = R0;
    bdaa:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3768(14184) */
    bdae:	f6 b0       	[SP + 0xc] = R6;
    bdb0:	77 b1       	[SP + 0x14] = R7;
    bdb2:	f3 b1       	[SP + 0x1c] = R3;
    bdb4:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    bdb6:	01 e1 b8 37 	R1.L = 0x37b8;		/* (14264)	R1=0x37b8(14264) */
    bdba:	ff e3 23 a1 	CALL 0x0 <_AddRecordToResponseList>;
    bdbe:	00 e2 9d 0d 	JUMP.L 0xd8f8 <_mDNSCoreReceive+0x2238>;
    bdc2:	36 e4 1d 00 	R6 = [SP + 0x74];
    bdc6:	06 0c       	CC = R6 == 0x0;
    bdc8:	0b 14       	IF !CC JUMP 0xbdde <_mDNSCoreReceive+0x71e> (BP);
    bdca:	30 e5 1c 00 	P0 = [SP + 0x70];
    bdce:	40 0c       	CC = P0 == 0x0;
    bdd0:	07 18       	IF CC JUMP 0xbdde <_mDNSCoreReceive+0x71e>;
    bdd2:	30 e4 14 00 	R0 = [SP + 0x50];
    bdd6:	00 0c       	CC = R0 == 0x0;
    bdd8:	07 02       	R7 = CC;
    bdda:	07 4b       	BITTGL (R7, 0x0);		/* bit  0 */
    bddc:	02 20       	JUMP.S 0xbde0 <_mDNSCoreReceive+0x720>;
    bdde:	0f 60       	R7 = 0x1 (X);		/*		R7=0x1(  1) */
    bde0:	31 e4 15 00 	R1 = [SP + 0x54];
    bde4:	32 e4 21 00 	R2 = [SP + 0x84];
    bde8:	91 08       	CC = R1 < R2;
    bdea:	0a 1c       	IF CC JUMP 0xbdfe <_mDNSCoreReceive+0x73e> (BP);
    bdec:	33 e4 22 00 	R3 = [SP + 0x88];
    bdf0:	99 08       	CC = R1 < R3;
    bdf2:	20 e1 a0 ff 	R0 = -0x60 (X);		/*		R0=0xffffffa0(-96) */
    bdf6:	21 e1 80 ff 	R1 = -0x80 (X);		/*		R1=0xffffff80(-128) */
    bdfa:	01 06       	IF !CC R0 = R1;
    bdfc:	02 20       	JUMP.S 0xbe00 <_mDNSCoreReceive+0x740>;
    bdfe:	00 62       	R0 = -0x40 (X);		/*		R0=0xffffffc0(-64) */
    be00:	30 e5 1e 00 	P0 = [SP + 0x78];
    be04:	36 e4 1f 00 	R6 = [SP + 0x7c];
    be08:	b0 e6 14 00 	B[SP + 0x14] = R0;
    be0c:	f6 b0       	[SP + 0xc] = R6;
    be0e:	34 b1       	[SP + 0x10] = R4;
    be10:	b0 bd       	[SP + 0x18] = P0;
    be12:	45 30       	R0 = P5;
    be14:	4f 30       	R1 = FP;
    be16:	32 e4 11 00 	R2 = [SP + 0x44];
    be1a:	ff e3 f3 a0 	CALL 0x0 <_AddRecordToResponseList>;
    be1e:	30 e6 11 00 	[SP + 0x44] = R0;
    be22:	00 0c       	CC = R0 == 0x0;
    be24:	02 14       	IF !CC JUMP 0xbe28 <_mDNSCoreReceive+0x768> (BP);
    be26:	1e 25       	JUMP.S 0xc862 <_mDNSCoreReceive+0x11a2>;
    be28:	21 e1 f0 00 	R1 = 0xf0 (X);		/*		R1=0xf0(240) */
    be2c:	a8 e4 88 7c 	R0 = B[P5 + 0x7c88] (Z);
    be30:	08 08       	CC = R0 == R1;
    be32:	02 14       	IF !CC JUMP 0xbe36 <_mDNSCoreReceive+0x776> (BP);
    be34:	00 25       	JUMP.S 0xc834 <_mDNSCoreReceive+0x1174>;
    be36:	22 e1 fa 00 	R2 = 0xfa (X);		/*		R2=0xfa(250) */
    be3a:	68 e4 45 3e 	R0 = W[P5 + 0x7c8a] (Z);
    be3e:	10 08       	CC = R0 == R2;
    be40:	02 14       	IF !CC JUMP 0xbe44 <_mDNSCoreReceive+0x784> (BP);
    be42:	f9 24       	JUMP.S 0xc834 <_mDNSCoreReceive+0x1174>;
    be44:	4b 61       	R3 = 0x29 (X);		/*		R3=0x29( 41) */
    be46:	18 08       	CC = R0 == R3;
    be48:	28 14       	IF !CC JUMP 0xbe98 <_mDNSCoreReceive+0x7d8> (BP);
    be4a:	28 e4 2a 1f 	R0 = [P5 + 0x7ca8];
    be4e:	20 64       	R0 += 0x4;		/* (  4) */
    be50:	69 e4 4a 3e 	R1 = W[P5 + 0x7c94] (Z);
    be54:	48 50       	R1 = R0 + R1;
    be56:	19 32       	P3 = R1;
    be58:	20 32       	P4 = R0;
    be5a:	26 60       	R6 = 0x4 (X);		/*		R6=0x4(  4) */
    be5c:	1b 20       	JUMP.S 0xbe92 <_mDNSCoreReceive+0x7d2>;
    be5e:	00 00       	NOP;
    be60:	20 95       	R0 = W[P4] (Z);
    be62:	30 08       	CC = R0 == R6;
    be64:	16 14       	IF !CC JUMP 0xbe90 <_mDNSCoreReceive+0x7d0> (BP);
    be66:	a0 e4 04 00 	R0 = B[P4 + 0x4] (Z);
    be6a:	00 0c       	CC = R0 == 0x0;
    be6c:	12 14       	IF !CC JUMP 0xbe90 <_mDNSCoreReceive+0x7d0> (BP);
    be6e:	a0 a0       	R0 = [P4 + 0x8];
    be70:	00 0c       	CC = R0 == 0x0;
    be72:	0f 1c       	IF CC JUMP 0xbe90 <_mDNSCoreReceive+0x7d0> (BP);
    be74:	7c 30       	R7 = P4;
    be76:	27 64       	R7 += 0x4;		/* (  4) */
    be78:	2a e4 f3 07 	R2 = [P5 + 0x1fcc];
    be7c:	45 30       	R0 = P5;
    be7e:	0f 30       	R1 = R7;
    be80:	ff e3 c4 d1 	CALL 0x6208 <_ClearProxyRecords>;
    be84:	2a e4 f2 07 	R2 = [P5 + 0x1fc8];
    be88:	45 30       	R0 = P5;
    be8a:	0f 30       	R1 = R7;
    be8c:	ff e3 be d1 	CALL 0x6208 <_ClearProxyRecords>;
    be90:	04 6d       	P4 += 0x20;		/* ( 32) */
    be92:	dc 09       	CC = P4 < P3 (IU);
    be94:	e5 1f       	IF CC JUMP 0xbe5e <_mDNSCoreReceive+0x79e> (BP);
    be96:	cf 24       	JUMP.S 0xc834 <_mDNSCoreReceive+0x1174>;
    be98:	29 60       	R1 = 0x5 (X);		/*		R1=0x5(  5) */
    be9a:	08 08       	CC = R0 == R1;
    be9c:	19 14       	IF !CC JUMP 0xbece <_mDNSCoreReceive+0x80e> (BP);
    be9e:	29 e4 2a 1f 	R1 = [P5 + 0x7ca8];
    bea2:	28 e4 29 1f 	R0 = [P5 + 0x7ca4];
    bea6:	21 64       	R1 += 0x4;		/* (  4) */
    bea8:	ff e3 ac a0 	CALL 0x0 <_AddRecordToResponseList>;
    beac:	00 0c       	CC = R0 == 0x0;
    beae:	10 1c       	IF CC JUMP 0xbece <_mDNSCoreReceive+0x80e> (BP);
    beb0:	05 32       	P0 = R5;
    beb2:	00 91       	R0 = [P0];
    beb4:	00 0c       	CC = R0 == 0x0;
    beb6:	02 10       	IF !CC JUMP 0xbeba <_mDNSCoreReceive+0x7fa>;
    beb8:	be 24       	JUMP.S 0xc834 <_mDNSCoreReceive+0x1174>;
    beba:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5(  5) */
    bebe:	2a e4 29 1f 	R2 = [P5 + 0x7ca4];
    bec2:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    bec4:	01 e1 f0 37 	R1.L = 0x37f0;		/* (14320)	R1=0x37f0(14320) */
    bec8:	ff e3 9c a0 	CALL 0x0 <_AddRecordToResponseList>;
    becc:	b4 24       	JUMP.S 0xc834 <_mDNSCoreReceive+0x1174>;
    bece:	00 00       	NOP;
    bed0:	38 95       	R0 = W[FP] (Z);
    bed2:	00 0c       	CC = R0 == 0x0;
    bed4:	09 1c       	IF CC JUMP 0xbee6 <_mDNSCoreReceive+0x826> (BP);
    bed6:	29 e4 24 1f 	R1 = [P5 + 0x7c90];
    beda:	30 e4 14 00 	R0 = [SP + 0x50];
    bede:	ff e3 55 a1 	CALL 0x188 <_GetEffectiveTTL>;
    bee2:	28 e6 24 1f 	[P5 + 0x7c90] = R0;
    bee6:	30 e4 1d 00 	R0 = [SP + 0x74];
    beea:	00 0c       	CC = R0 == 0x0;
    beec:	ae 14       	IF !CC JUMP 0xc048 <_mDNSCoreReceive+0x988> (BP);
    beee:	31 e4 14 00 	R1 = [SP + 0x50];
    bef2:	01 0c       	CC = R1 == 0x0;
    bef4:	0c 1c       	IF CC JUMP 0xbf0c <_mDNSCoreReceive+0x84c> (BP);
    bef6:	32 e5 59 02 	P2 = [SP + 0x964];
    befa:	42 0c       	CC = P2 == 0x0;
    befc:	a6 1c       	IF CC JUMP 0xc048 <_mDNSCoreReceive+0x988> (BP);
    befe:	12 e5 32 00 	P2 = [P2 + 0xc8];
    bf02:	32 e7 17 00 	[SP + 0x5c] = P2;
    bf06:	2a e7 2b 1f 	[P5 + 0x7cac] = P2;
    bf0a:	9f 20       	JUMP.S 0xc048 <_mDNSCoreReceive+0x988>;
    bf0c:	07 0c       	CC = R7 == 0x0;
    bf0e:	05 18       	IF CC JUMP 0xbf18 <_mDNSCoreReceive+0x858>;
    bf10:	30 e5 1c 00 	P0 = [SP + 0x70];
    bf14:	40 0c       	CC = P0 == 0x0;
    bf16:	98 14       	IF !CC JUMP 0xc046 <_mDNSCoreReceive+0x986> (BP);
    bf18:	b0 e4 6b 00 	R0 = B[SP + 0x6b] (Z);
    bf1c:	31 e4 27 00 	R1 = [SP + 0x9c];
    bf20:	08 56       	R0 = R0 | R1;
    bf22:	70 e6 36 00 	W[SP + 0x6c] = R0;
    bf26:	30 e4 19 00 	R0 = [SP + 0x64];
    bf2a:	00 0c       	CC = R0 == 0x0;
    bf2c:	00 02       	R0 = CC;
    bf2e:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
    bf32:	2c e5 4c 00 	P4 = [P5 + 0x130];
    bf36:	b0 e6 80 00 	B[SP + 0x80] = R0;
    bf3a:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
    bf3e:	3e 95       	R6 = W[FP] (Z);
    bf40:	77 20       	JUMP.S 0xc02e <_mDNSCoreReceive+0x96e>;
    bf42:	00 00       	NOP;
    bf44:	a0 a3       	R0 = [P4 + 0x38];
    bf46:	00 0c       	CC = R0 == 0x0;
    bf48:	71 14       	IF !CC JUMP 0xc02a <_mDNSCoreReceive+0x96a> (BP);
    bf4a:	30 e4 28 00 	R0 = [SP + 0xa0];
    bf4e:	4c 30       	R1 = P4;
    bf50:	ff e3 58 a0 	CALL 0x0 <_AddRecordToResponseList>;
    bf54:	00 0c       	CC = R0 == 0x0;
    bf56:	6a 1c       	IF CC JUMP 0xc02a <_mDNSCoreReceive+0x96a> (BP);
    bf58:	60 e4 99 00 	R0 = W[P4 + 0x132] (Z);
    bf5c:	00 0c       	CC = R0 == 0x0;
    bf5e:	58 1c       	IF CC JUMP 0xc00e <_mDNSCoreReceive+0x94e> (BP);
    bf60:	30 08       	CC = R0 == R6;
    bf62:	64 14       	IF !CC JUMP 0xc02a <_mDNSCoreReceive+0x96a> (BP);
    bf64:	30 e5 1c 00 	P0 = [SP + 0x70];
    bf68:	40 0c       	CC = P0 == 0x0;
    bf6a:	0b 1c       	IF CC JUMP 0xbf80 <_mDNSCoreReceive+0x8c0> (BP);
    bf6c:	22 e5 30 00 	P2 = [P4 + 0xc0];
    bf70:	42 0c       	CC = P2 == 0x0;
    bf72:	05 14       	IF !CC JUMP 0xbf7c <_mDNSCoreReceive+0x8bc> (BP);
    bf74:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    bf78:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    bf7c:	16 95       	R6 = W[P2] (Z);
    bf7e:	04 20       	JUMP.S 0xbf86 <_mDNSCoreReceive+0x8c6>;
    bf80:	00 00       	NOP;
    bf82:	66 e5 7e 00 	R6 = W[P4 + 0xfc] (X);
    bf86:	f0 42       	R0 = R6.L (Z);
    bf88:	71 e4 36 00 	R1 = W[SP + 0x6c] (Z);
    bf8c:	18 32       	P3 = R0;
    bf8e:	08 08       	CC = R0 == R1;
    bf90:	53 1c       	IF CC JUMP 0xc036 <_mDNSCoreReceive+0x976> (BP);
    bf92:	05 32       	P0 = R5;
    bf94:	00 91       	R0 = [P0];
    bf96:	00 0c       	CC = R0 == 0x0;
    bf98:	03 10       	IF !CC JUMP 0xbf9e <_mDNSCoreReceive+0x8de>;
    bf9a:	00 e2 e4 0c 	JUMP.L 0xd962 <_mDNSCoreReceive+0x22a2>;
    bf9e:	60 e5 1a 01 	R0 = W[P4 + 0x234] (X);
    bfa2:	31 e6 10 00 	[SP + 0x40] = R1;
    bfa6:	ff e3 2d a0 	CALL 0x0 <_AddRecordToResponseList>;
    bfaa:	30 e6 20 00 	[SP + 0x80] = R0;
    bfae:	43 30       	R0 = P3;
    bfb0:	76 43       	R6 = R6.B (Z);
    bfb2:	46 4f       	R6 <<= 0x8;
    bfb4:	40 4e       	R0 >>= 0x8;
    bfb6:	30 56       	R0 = R0 | R6;
    bfb8:	b6 e4 6c 00 	R6 = B[SP + 0x6c] (Z);
    bfbc:	31 e4 10 00 	R1 = [SP + 0x40];
    bfc0:	41 4e       	R1 >>= 0x8;
    bfc2:	46 4f       	R6 <<= 0x8;
    bfc4:	b1 57       	R6 = R1 | R6;
    bfc6:	18 32       	P3 = R0;
    bfc8:	29 e4 2a 1f 	R1 = [P5 + 0x7ca8];
    bfcc:	55 30       	R2 = P5;
    bfce:	21 64       	R1 += 0x4;		/* (  4) */
    bfd0:	ba 65       	R2 += 0x37;		/* ( 55) */
    bfd2:	30 e4 12 00 	R0 = [SP + 0x48];
    bfd6:	ff e3 15 a0 	CALL 0x0 <_AddRecordToResponseList>;
    bfda:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    bfde:	94 5a       	P2 = P4 + P2;
    bfe0:	52 30       	R2 = P2;
    bfe2:	2a e1 1c 01 	P2 = 0x11c (X);		/*		P2=0x11c(284) */
    bfe6:	14 5b       	P4 = P4 + P2;
    bfe8:	31 e5 20 00 	P1 = [SP + 0x80];
    bfec:	32 e5 23 00 	P2 = [SP + 0x8c];
    bff0:	30 b2       	[SP + 0x20] = R0;
    bff2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x37f0(14320) */
    bff6:	f1 bc       	[SP + 0xc] = P1;
    bff8:	34 bd       	[SP + 0x10] = P4;
    bffa:	73 bd       	[SP + 0x14] = P3;
    bffc:	b2 bd       	[SP + 0x18] = P2;
    bffe:	f6 b1       	[SP + 0x1c] = R6;
    c000:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    c002:	01 e1 28 38 	R1.L = 0x3828;		/* (14376)	R1=0x3828(14376) */
    c006:	ff e3 fd 9f 	CALL 0x0 <_AddRecordToResponseList>;
    c00a:	00 e2 ac 0c 	JUMP.L 0xd962 <_mDNSCoreReceive+0x22a2>;
    c00e:	b0 e4 80 00 	R0 = B[SP + 0x80] (Z);
    c012:	08 02       	CC = R0;
    c014:	0b 1c       	IF CC JUMP 0xc02a <_mDNSCoreReceive+0x96a> (BP);
    c016:	60 a1       	R0 = [P4 + 0x14];
    c018:	00 0c       	CC = R0 == 0x0;
    c01a:	08 1c       	IF CC JUMP 0xc02a <_mDNSCoreReceive+0x96a> (BP);
    c01c:	29 e4 37 00 	R1 = [P5 + 0xdc];
    c020:	01 52       	R0 = R1 - R0;
    c022:	19 91       	R1 = [P3];
    c024:	09 4f       	R1 <<= 0x1;
    c026:	88 09       	CC = R0 < R1 (IU);
    c028:	07 1c       	IF CC JUMP 0xc036 <_mDNSCoreReceive+0x976> (BP);
    c02a:	00 00       	NOP;
    c02c:	64 91       	P4 = [P4];
    c02e:	44 0c       	CC = P4 == 0x0;
    c030:	89 17       	IF !CC JUMP 0xbf42 <_mDNSCoreReceive+0x882> (BP);
    c032:	00 e2 98 0c 	JUMP.L 0xd962 <_mDNSCoreReceive+0x22a2>;
    c036:	04 0c       	CC = R4 == 0x0;
    c038:	07 14       	IF !CC JUMP 0xc046 <_mDNSCoreReceive+0x986> (BP);
    c03a:	24 e5 32 00 	P4 = [P4 + 0xc8];
    c03e:	34 e7 17 00 	[SP + 0x5c] = P4;
    c042:	2c e7 2b 1f 	[P5 + 0x7cac] = P4;
    c046:	0f 60       	R7 = 0x1 (X);		/*		R7=0x1(  1) */
    c048:	00 00       	NOP;
    c04a:	38 95       	R0 = W[FP] (Z);
    c04c:	00 0c       	CC = R0 == 0x0;
    c04e:	ec 15       	IF !CC JUMP 0xc426 <_mDNSCoreReceive+0xd66> (BP);
    c050:	68 e4 45 3e 	R0 = W[P5 + 0x7c8a] (Z);
    c054:	79 61       	R1 = 0x2f (X);		/*		R1=0x2f( 47) */
    c056:	08 08       	CC = R0 == R1;
    c058:	e7 1d       	IF CC JUMP 0xc426 <_mDNSCoreReceive+0xd66> (BP);
    c05a:	2a e5 f5 07 	P2 = [P5 + 0x1fd4];
    c05e:	42 0c       	CC = P2 == 0x0;
    c060:	11 18       	IF CC JUMP 0xc082 <_mDNSCoreReceive+0x9c2>;
    c062:	42 30       	R0 = P2;
    c064:	55 30       	R2 = P5;
    c066:	ba 65       	R2 += 0x37;		/* ( 55) */
    c068:	51 a2       	R1 = [P2 + 0x24];
    c06a:	21 64       	R1 += 0x4;		/* (  4) */
    c06c:	20 64       	R0 += 0x4;		/* (  4) */
    c06e:	ff e3 c9 9f 	CALL 0x0 <_AddRecordToResponseList>;
    c072:	10 30       	R2 = R0;
    c074:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2f( 47) */
    c078:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    c07a:	01 e1 80 38 	R1.L = 0x3880;		/* (14464)	R1=0x3880(14464) */
    c07e:	ff e3 c1 9f 	CALL 0x0 <_AddRecordToResponseList>;
    c082:	28 e4 f2 07 	R0 = [P5 + 0x1fc8];
    c086:	75 30       	R6 = P5;
    c088:	28 e6 f5 07 	[P5 + 0x1fd4] = R0;
    c08c:	be 65       	R6 += 0x37;		/* ( 55) */
    c08e:	1f 32       	P3 = R7;
    c090:	65 32       	P4 = P5;
    c092:	c3 21       	JUMP.S 0xc418 <_mDNSCoreReceive+0xd58>;
    c094:	43 0c       	CC = P3 == 0x0;
    c096:	28 91       	R0 = [P5];
    c098:	20 e6 f5 07 	[P4 + 0x1fd4] = R0;
    c09c:	09 14       	IF !CC JUMP 0xc0ae <_mDNSCoreReceive+0x9ee> (BP);
    c09e:	32 e4 19 00 	R2 = [SP + 0x64];
    c0a2:	02 0c       	CC = R2 == 0x0;
    c0a4:	ba 1d       	IF CC JUMP 0xc418 <_mDNSCoreReceive+0xd58> (BP);
    c0a6:	a8 e4 04 00 	R0 = B[P5 + 0x4] (Z);
    c0aa:	10 0c       	CC = R0 == 0x2;
    c0ac:	b6 15       	IF !CC JUMP 0xc418 <_mDNSCoreReceive+0xd58> (BP);
    c0ae:	00 00       	NOP;
    c0b0:	21 e4 28 1f 	R1 = [P4 + 0x7ca0];
    c0b4:	01 0c       	CC = R1 == 0x0;
    c0b6:	06 1c       	IF CC JUMP 0xc0c2 <_mDNSCoreReceive+0xa02> (BP);
    c0b8:	e8 a1       	R0 = [P5 + 0x1c];
    c0ba:	00 0c       	CC = R0 == 0x0;
    c0bc:	03 18       	IF CC JUMP 0xc0c2 <_mDNSCoreReceive+0xa02>;
    c0be:	01 08       	CC = R1 == R0;
    c0c0:	ac 15       	IF !CC JUMP 0xc418 <_mDNSCoreReceive+0xd58> (BP);
    c0c2:	00 00       	NOP;
    c0c4:	a9 e4 04 00 	R1 = B[P5 + 0x4] (Z);
    c0c8:	90 61       	R0 = 0x32 (X);		/*		R0=0x32( 50) */
    c0ca:	01 54       	R0 = R1 & R0;
    c0cc:	00 0c       	CC = R0 == 0x0;
    c0ce:	05 1c       	IF CC JUMP 0xc0d8 <_mDNSCoreReceive+0xa18> (BP);
    c0d0:	28 e4 13 00 	R0 = [P5 + 0x4c];
    c0d4:	00 0c       	CC = R0 == 0x0;
    c0d6:	07 1c       	IF CC JUMP 0xc0e4 <_mDNSCoreReceive+0xa24> (BP);
    c0d8:	00 00       	NOP;
    c0da:	61 e4 45 3e 	R1 = W[P4 + 0x7c8a] (Z);
    c0de:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    c0e0:	01 08       	CC = R1 == R0;
    c0e2:	9b 15       	IF !CC JUMP 0xc418 <_mDNSCoreReceive+0xd58> (BP);
    c0e4:	00 00       	NOP;
    c0e6:	61 e4 46 3e 	R1 = W[P4 + 0x7c8c] (Z);
    c0ea:	28 a5       	R0 = W[P5 + 0x8] (Z);
    c0ec:	01 08       	CC = R1 == R0;
    c0ee:	95 15       	IF !CC JUMP 0xc418 <_mDNSCoreReceive+0xd58> (BP);
    c0f0:	21 e4 26 1f 	R1 = [P4 + 0x7c98];
    c0f4:	68 a1       	R0 = [P5 + 0x14];
    c0f6:	01 08       	CC = R1 == R0;
    c0f8:	90 15       	IF !CC JUMP 0xc418 <_mDNSCoreReceive+0xd58> (BP);
    c0fa:	20 e4 29 1f 	R0 = [P4 + 0x7ca4];
    c0fe:	29 a2       	R1 = [P5 + 0x20];
    c100:	ff e3 80 9f 	CALL 0x0 <_AddRecordToResponseList>;
    c104:	00 0c       	CC = R0 == 0x0;
    c106:	03 18       	IF CC JUMP 0xc10c <_mDNSCoreReceive+0xa4c>;
    c108:	00 e2 00 0c 	JUMP.L 0xd908 <_mDNSCoreReceive+0x2248>;
    c10c:	86 21       	JUMP.S 0xc418 <_mDNSCoreReceive+0xd58>;
    c10e:	61 e4 46 3e 	R1 = W[P4 + 0x7c8c] (Z);
    c112:	28 a5       	R0 = W[P5 + 0x8] (Z);
    c114:	01 08       	CC = R1 == R0;
    c116:	40 14       	IF !CC JUMP 0xc196 <_mDNSCoreReceive+0xad6> (BP);
    c118:	61 e4 4a 3e 	R1 = W[P4 + 0x7c94] (Z);
    c11c:	28 a6       	R0 = W[P5 + 0x10] (Z);
    c11e:	01 08       	CC = R1 == R0;
    c120:	3b 14       	IF !CC JUMP 0xc196 <_mDNSCoreReceive+0xad6> (BP);
    c122:	21 e4 27 1f 	R1 = [P4 + 0x7c9c];
    c126:	a8 a1       	R0 = [P5 + 0x18];
    c128:	01 08       	CC = R1 == R0;
    c12a:	36 14       	IF !CC JUMP 0xc196 <_mDNSCoreReceive+0xad6> (BP);
    c12c:	69 a2       	R1 = [P5 + 0x24];
    c12e:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0xfa(250) */
    c132:	21 64       	R1 += 0x4;		/* (  4) */
    c134:	30 e4 12 00 	R0 = [SP + 0x48];
    c138:	02 e1 00 00 	R2.L = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    c13c:	ff e3 62 9f 	CALL 0x0 <_AddRecordToResponseList>;
    c140:	00 0c       	CC = R0 == 0x0;
    c142:	2a 1c       	IF CC JUMP 0xc196 <_mDNSCoreReceive+0xad6> (BP);
    c144:	e8 a0       	R0 = [P5 + 0xc];
    c146:	08 4e       	R0 >>= 0x1;
    c148:	21 e4 24 1f 	R1 = [P4 + 0x7c90];
    c14c:	81 09       	CC = R1 < R0 (IU);
    c14e:	05 14       	IF !CC JUMP 0xc158 <_mDNSCoreReceive+0xa98> (BP);
    c150:	a0 e4 15 01 	R0 = B[P4 + 0x115] (Z);
    c154:	00 0c       	CC = R0 == 0x0;
    c156:	0c 1c       	IF CC JUMP 0xc16e <_mDNSCoreReceive+0xaae> (BP);
    c158:	00 00       	NOP;
    c15a:	28 e4 24 00 	R0 = [P5 + 0x90];
    c15e:	20 08       	CC = R0 == R4;
    c160:	5c 15       	IF !CC JUMP 0xc418 <_mDNSCoreReceive+0xd58> (BP);
    c162:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    c164:	28 e6 24 00 	[P5 + 0x90] = R0;
    c168:	a8 e6 8a 00 	B[P5 + 0x8a] = R0;
    c16c:	56 21       	JUMP.S 0xc418 <_mDNSCoreReceive+0xd58>;
    c16e:	00 00       	NOP;
    c170:	28 e4 24 00 	R0 = [P5 + 0x90];
    c174:	00 0c       	CC = R0 == 0x0;
    c176:	04 14       	IF !CC JUMP 0xc17e <_mDNSCoreReceive+0xabe> (BP);
    c178:	2c e6 24 00 	[P5 + 0x90] = R4;
    c17c:	0a 20       	JUMP.S 0xc190 <_mDNSCoreReceive+0xad0>;
    c17e:	20 08       	CC = R0 == R4;
    c180:	4c 19       	IF CC JUMP 0xc418 <_mDNSCoreReceive+0xd58>;
    c182:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0x7b0 */
    c186:	08 e1 00 00 	P0.L = 0x0;		/* (  0)	P0=0x0 <_AddRecordToResponseList> */
    c18a:	00 91       	R0 = [P0];
    c18c:	28 e6 24 00 	[P5 + 0x90] = R0;
    c190:	20 e4 37 00 	R0 = [P4 + 0xdc];
    c194:	40 21       	JUMP.S 0xc414 <_mDNSCoreReceive+0xd54>;
    c196:	00 00       	NOP;
    c198:	20 e4 24 1f 	R0 = [P4 + 0x7c90];
    c19c:	00 0c       	CC = R0 == 0x0;
    c19e:	1a 1d       	IF CC JUMP 0xc3d2 <_mDNSCoreReceive+0xd12> (BP);
    c1a0:	44 30       	R0 = P4;
    c1a2:	4d 30       	R1 = P5;
    c1a4:	32 e4 1e 00 	R2 = [SP + 0x78];
    c1a8:	ff e3 10 a7 	CALL 0xfc8 <_PacketRRConflict>;
    c1ac:	00 0c       	CC = R0 == 0x0;
    c1ae:	12 1d       	IF CC JUMP 0xc3d2 <_mDNSCoreReceive+0xd12> (BP);
    c1b0:	0d 32       	P1 = R5;
    c1b2:	08 91       	R0 = [P1];
    c1b4:	00 0c       	CC = R0 == 0x0;
    c1b6:	14 1c       	IF CC JUMP 0xc1de <_mDNSCoreReceive+0xb1e> (BP);
    c1b8:	21 e4 2a 1f 	R1 = [P4 + 0x7ca8];
    c1bc:	27 e4 27 1f 	R7 = [P4 + 0x7c9c];
    c1c0:	21 64       	R1 += 0x4;		/* (  4) */
    c1c2:	16 30       	R2 = R6;
    c1c4:	30 e4 12 00 	R0 = [SP + 0x48];
    c1c8:	ff e3 1c 9f 	CALL 0x0 <_AddRecordToResponseList>;
    c1cc:	f0 b0       	[SP + 0xc] = R0;
    c1ce:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3880(14464) */
    c1d2:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    c1d4:	01 e1 c0 38 	R1.L = 0x38c0;		/* (14528)	R1=0x38c0(14528) */
    c1d8:	17 30       	R2 = R7;
    c1da:	ff e3 13 9f 	CALL 0x0 <_AddRecordToResponseList>;
    c1de:	15 32       	P2 = R5;
    c1e0:	10 91       	R0 = [P2];
    c1e2:	00 0c       	CC = R0 == 0x0;
    c1e4:	12 1c       	IF CC JUMP 0xc208 <_mDNSCoreReceive+0xb48> (BP);
    c1e6:	69 a2       	R1 = [P5 + 0x24];
    c1e8:	45 30       	R0 = P5;
    c1ea:	af a1       	R7 = [P5 + 0x18];
    c1ec:	21 64       	R1 += 0x4;		/* (  4) */
    c1ee:	16 30       	R2 = R6;
    c1f0:	20 64       	R0 += 0x4;		/* (  4) */
    c1f2:	ff e3 07 9f 	CALL 0x0 <_AddRecordToResponseList>;
    c1f6:	f0 b0       	[SP + 0xc] = R0;
    c1f8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x38c0(14528) */
    c1fc:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    c1fe:	01 e1 f0 38 	R1.L = 0x38f0;		/* (14576)	R1=0x38f0(14576) */
    c202:	17 30       	R2 = R7;
    c204:	ff e3 fe 9e 	CALL 0x0 <_AddRecordToResponseList>;
    c208:	00 00       	NOP;
    c20a:	68 a3       	R0 = [P5 + 0x34];
    c20c:	00 0c       	CC = R0 == 0x0;
    c20e:	03 14       	IF !CC JUMP 0xc214 <_mDNSCoreReceive+0xb54> (BP);
    c210:	1b 20       	JUMP.S 0xc246 <_mDNSCoreReceive+0xb86>;
    c212:	28 32       	P5 = R0;
    c214:	00 00       	NOP;
    c216:	68 a3       	R0 = [P5 + 0x34];
    c218:	00 0c       	CC = R0 == 0x0;
    c21a:	fc 17       	IF !CC JUMP 0xc212 <_mDNSCoreReceive+0xb52> (BP);
    c21c:	05 32       	P0 = R5;
    c21e:	00 91       	R0 = [P0];
    c220:	00 0c       	CC = R0 == 0x0;
    c222:	12 1c       	IF CC JUMP 0xc246 <_mDNSCoreReceive+0xb86> (BP);
    c224:	69 a2       	R1 = [P5 + 0x24];
    c226:	45 30       	R0 = P5;
    c228:	af a1       	R7 = [P5 + 0x18];
    c22a:	21 64       	R1 += 0x4;		/* (  4) */
    c22c:	16 30       	R2 = R6;
    c22e:	20 64       	R0 += 0x4;		/* (  4) */
    c230:	ff e3 e8 9e 	CALL 0x0 <_AddRecordToResponseList>;
    c234:	f0 b0       	[SP + 0xc] = R0;
    c236:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x38f0(14576) */
    c23a:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    c23c:	01 e1 20 39 	R1.L = 0x3920;		/* (14624)	R1=0x3920(14624) */
    c240:	17 30       	R2 = R7;
    c242:	ff e3 df 9e 	CALL 0x0 <_AddRecordToResponseList>;
    c246:	00 00       	NOP;
    c248:	a8 e4 85 00 	R0 = B[P5 + 0x85] (Z);
    c24c:	18 0e       	CC = R0 <= 0x3 (IU);
    c24e:	13 1c       	IF CC JUMP 0xc274 <_mDNSCoreReceive+0xbb4> (BP);
    c250:	0d 32       	P1 = R5;
    c252:	08 91       	R0 = [P1];
    c254:	00 0c       	CC = R0 == 0x0;
    c256:	e1 1c       	IF CC JUMP 0xc418 <_mDNSCoreReceive+0xd58> (BP);
    c258:	69 a2       	R1 = [P5 + 0x24];
    c25a:	45 30       	R0 = P5;
    c25c:	21 64       	R1 += 0x4;		/* (  4) */
    c25e:	16 30       	R2 = R6;
    c260:	20 64       	R0 += 0x4;		/* (  4) */
    c262:	ff e3 cf 9e 	CALL 0x0 <_AddRecordToResponseList>;
    c266:	10 30       	R2 = R0;
    c268:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3920(14624) */
    c26c:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    c26e:	01 e1 50 39 	R1.L = 0x3950;		/* (14672)	R1=0x3950(14672) */
    c272:	10 20       	JUMP.S 0xc292 <_mDNSCoreReceive+0xbd2>;
    c274:	18 0c       	CC = R0 == 0x3;
    c276:	11 14       	IF !CC JUMP 0xc298 <_mDNSCoreReceive+0xbd8> (BP);
    c278:	69 a2       	R1 = [P5 + 0x24];
    c27a:	45 30       	R0 = P5;
    c27c:	21 64       	R1 += 0x4;		/* (  4) */
    c27e:	16 30       	R2 = R6;
    c280:	20 64       	R0 += 0x4;		/* (  4) */
    c282:	ff e3 bf 9e 	CALL 0x0 <_AddRecordToResponseList>;
    c286:	10 30       	R2 = R0;
    c288:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3950(14672) */
    c28c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    c28e:	01 e1 88 39 	R1.L = 0x3988;		/* (14728)	R1=0x3988(14728) */
    c292:	ff e3 b7 9e 	CALL 0x0 <_AddRecordToResponseList>;
    c296:	c1 20       	JUMP.S 0xc418 <_mDNSCoreReceive+0xd58>;
    c298:	16 30       	R2 = R6;
    c29a:	21 e4 2a 1f 	R1 = [P4 + 0x7ca8];
    c29e:	21 64       	R1 += 0x4;		/* (  4) */
    c2a0:	30 e4 12 00 	R0 = [SP + 0x48];
    c2a4:	ff e3 ae 9e 	CALL 0x0 <_AddRecordToResponseList>;
    c2a8:	31 e4 25 00 	R1 = [SP + 0x94];
    c2ac:	f1 b0       	[SP + 0xc] = R1;
    c2ae:	30 b1       	[SP + 0x10] = R0;
    c2b0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3988(14728) */
    c2b4:	32 e4 23 00 	R2 = [SP + 0x8c];
    c2b8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    c2ba:	01 e1 e0 39 	R1.L = 0x39e0;		/* (14816)	R1=0x39e0(14816) */
    c2be:	ff e3 a1 9e 	CALL 0x0 <_AddRecordToResponseList>;
    c2c2:	af e4 04 00 	R7 = B[P5 + 0x4] (Z);
    c2c6:	82 60       	R2 = 0x10 (X);		/*		R2=0x10( 16) */
    c2c8:	17 08       	CC = R7 == R2;
    c2ca:	49 14       	IF !CC JUMP 0xc35c <_mDNSCoreReceive+0xc9c> (BP);
    c2cc:	69 a2       	R1 = [P5 + 0x24];
    c2ce:	45 30       	R0 = P5;
    c2d0:	21 64       	R1 += 0x4;		/* (  4) */
    c2d2:	16 30       	R2 = R6;
    c2d4:	20 64       	R0 += 0x4;		/* (  4) */
    c2d6:	ff e3 95 9e 	CALL 0x0 <_AddRecordToResponseList>;
    c2da:	10 30       	R2 = R0;
    c2dc:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x39e0(14816) */
    c2e0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    c2e2:	01 e1 14 3a 	R1.L = 0x3a14;		/* (14868)	R1=0x3a14(14868) */
    c2e6:	ff e3 8d 9e 	CALL 0x0 <_AddRecordToResponseList>;
    c2ea:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    c2ec:	a8 e6 04 00 	B[P5 + 0x4] = R0;
    c2f0:	20 60       	R0 = 0x4 (X);		/*		R0=0x4(  4) */
    c2f2:	a8 e6 85 00 	B[P5 + 0x85] = R0;
    c2f6:	40 60       	R0 = 0x8 (X);		/*		R0=0x8(  8) */
    c2f8:	a8 e6 86 00 	B[P5 + 0x86] = R0;
    c2fc:	44 30       	R0 = P4;
    c2fe:	4d 30       	R1 = P5;
    c300:	ff e3 78 a1 	CALL 0x5f0 <_InitializeLastAPTime>;
    c304:	22 e5 37 00 	P2 = [P4 + 0xdc];
    c308:	27 e4 f9 07 	R7 = [P4 + 0x1fe4];
    c30c:	0f 64       	R7 += 0x1;		/* (  1) */
    c30e:	73 60       	R3 = 0xe (X);		/*		R3=0xe( 14) */
    c310:	22 e7 f8 07 	[P4 + 0x1fe0] = P2;
    c314:	27 e6 f9 07 	[P4 + 0x1fe4] = R7;
    c318:	1f 0a       	CC = R7 <= R3 (IU);
    c31a:	7f 1c       	IF CC JUMP 0xc418 <_mDNSCoreReceive+0xd58> (BP);
    c31c:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0x0 <_AddRecordToResponseList> */
    c320:	08 e1 00 00 	P0.L = 0x0;		/* (  0)	P0=0x0 <_AddRecordToResponseList> */
    c324:	41 91       	P1 = [P0];
    c326:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    c328:	29 a2       	R1 = [P5 + 0x20];
    c32a:	48 44       	P0 = P1 << 0x2;
    c32c:	48 5a       	P1 = P0 + P1;
    c32e:	91 5a       	P2 = P1 + P2;
    c330:	42 0c       	CC = P2 == 0x0;
    c332:	90 07       	IF CC P2 = R0;
    c334:	22 e7 fa 07 	[P4 + 0x1fe8] = P2;
    c338:	e8 a8       	R0 = W[P5 + 0x6] (X);
    c33a:	31 e6 10 00 	[SP + 0x40] = R1;
    c33e:	ff e3 61 9e 	CALL 0x0 <_AddRecordToResponseList>;
    c342:	31 e4 10 00 	R1 = [SP + 0x40];
    c346:	f1 b0       	[SP + 0xc] = R1;
    c348:	30 b1       	[SP + 0x10] = R0;
    c34a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3a14(14868) */
    c34e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    c350:	01 e1 c0 18 	R1.L = 0x18c0;		/* (6336)	R1=0x18c0(6336) */
    c354:	17 30       	R2 = R7;
    c356:	ff e3 55 9e 	CALL 0x0 <_AddRecordToResponseList>;
    c35a:	5f 20       	JUMP.S 0xc418 <_mDNSCoreReceive+0xd58>;
    c35c:	17 0c       	CC = R7 == 0x2;
    c35e:	14 14       	IF !CC JUMP 0xc386 <_mDNSCoreReceive+0xcc6> (BP);
    c360:	69 a2       	R1 = [P5 + 0x24];
    c362:	45 30       	R0 = P5;
    c364:	af e4 85 00 	R7 = B[P5 + 0x85] (Z);
    c368:	16 30       	R2 = R6;
    c36a:	21 64       	R1 += 0x4;		/* (  4) */
    c36c:	20 64       	R0 += 0x4;		/* (  4) */
    c36e:	ff e3 49 9e 	CALL 0x0 <_AddRecordToResponseList>;
    c372:	f0 b0       	[SP + 0xc] = R0;
    c374:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x18c0(6336) */
    c378:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    c37a:	01 e1 48 3a 	R1.L = 0x3a48;		/* (14920)	R1=0x3a48(14920) */
    c37e:	17 30       	R2 = R7;
    c380:	ff e3 40 9e 	CALL 0x0 <_AddRecordToResponseList>;
    c384:	13 20       	JUMP.S 0xc3aa <_mDNSCoreReceive+0xcea>;
    c386:	00 61       	R0 = 0x20 (X);		/*		R0=0x20( 32) */
    c388:	07 08       	CC = R7 == R0;
    c38a:	45 30       	R0 = P5;
    c38c:	20 64       	R0 += 0x4;		/* (  4) */
    c38e:	69 a2       	R1 = [P5 + 0x24];
    c390:	13 14       	IF !CC JUMP 0xc3b6 <_mDNSCoreReceive+0xcf6> (BP);
    c392:	21 64       	R1 += 0x4;		/* (  4) */
    c394:	16 30       	R2 = R6;
    c396:	ff e3 35 9e 	CALL 0x0 <_AddRecordToResponseList>;
    c39a:	10 30       	R2 = R0;
    c39c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3a48(14920) */
    c3a0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    c3a2:	01 e1 84 3a 	R1.L = 0x3a84;		/* (14980)	R1=0x3a84(14980) */
    c3a6:	ff e3 2d 9e 	CALL 0x0 <_AddRecordToResponseList>;
    c3aa:	44 30       	R0 = P4;
    c3ac:	4d 30       	R1 = P5;
    c3ae:	12 60       	R2 = 0x2 (X);		/*		R2=0x2(  2) */
    c3b0:	ff e3 26 c6 	CALL 0x4ffc <_mDNS_Deregister_internal>;
    c3b4:	32 20       	JUMP.S 0xc418 <_mDNSCoreReceive+0xd58>;
    c3b6:	16 30       	R2 = R6;
    c3b8:	21 64       	R1 += 0x4;		/* (  4) */
    c3ba:	ff e3 23 9e 	CALL 0x0 <_AddRecordToResponseList>;
    c3be:	f0 b0       	[SP + 0xc] = R0;
    c3c0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3a84(14980) */
    c3c4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    c3c6:	01 e1 c0 3a 	R1.L = 0x3ac0;		/* (15040)	R1=0x3ac0(15040) */
    c3ca:	17 30       	R2 = R7;
    c3cc:	ff e3 1a 9e 	CALL 0x0 <_AddRecordToResponseList>;
    c3d0:	24 20       	JUMP.S 0xc418 <_mDNSCoreReceive+0xd58>;
    c3d2:	00 00       	NOP;
    c3d4:	61 e4 45 3e 	R1 = W[P4 + 0x7c8a] (Z);
    c3d8:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    c3da:	01 08       	CC = R1 == R0;
    c3dc:	1e 14       	IF !CC JUMP 0xc418 <_mDNSCoreReceive+0xd58> (BP);
    c3de:	a0 e4 88 7c 	R0 = B[P4 + 0x7c88] (Z);
    c3e2:	20 48       	CC = !BITTST (R0, 0x4);		/* bit  4 */
    c3e4:	1a 1c       	IF CC JUMP 0xc418 <_mDNSCoreReceive+0xd58> (BP);
    c3e6:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0x0 <_AddRecordToResponseList> */
    c3ea:	08 e1 00 00 	P0.L = 0x0;		/* (  0)	P0=0x0 <_AddRecordToResponseList> */
    c3ee:	01 91       	R1 = [P0];
    c3f0:	82 c6 09 87 	R3 = R1 >> 0x1f;
    c3f4:	20 e4 37 00 	R0 = [P4 + 0xdc];
    c3f8:	2a e4 31 00 	R2 = [P5 + 0xc4];
    c3fc:	4b 50       	R1 = R3 + R1;
    c3fe:	90 52       	R2 = R0 - R2;
    c400:	09 4d       	R1 >>>= 0x1;
    c402:	0a 09       	CC = R2 <= R1;
    c404:	0a 1c       	IF CC JUMP 0xc418 <_mDNSCoreReceive+0xd58> (BP);
    c406:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x1 */
    c40a:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    c40e:	09 91       	R1 = [P1];
    c410:	29 e6 24 00 	[P5 + 0x90] = R1;
    c414:	20 e6 3f 00 	[P4 + 0xfc] = R0;
    c418:	00 00       	NOP;
    c41a:	25 e5 f5 07 	P5 = [P4 + 0x1fd4];
    c41e:	45 0c       	CC = P5 == 0x0;
    c420:	3a 16       	IF !CC JUMP 0xc094 <_mDNSCoreReceive+0x9d4> (BP);
    c422:	7b 30       	R7 = P3;
    c424:	6c 32       	P5 = P4;
    c426:	07 0c       	CC = R7 == 0x0;
    c428:	41 14       	IF !CC JUMP 0xc4aa <_mDNSCoreReceive+0xdea> (BP);
    c42a:	34 e5 58 02 	P4 = [SP + 0x960];
    c42e:	3a 20       	JUMP.S 0xc4a2 <_mDNSCoreReceive+0xde2>;
    c430:	00 00       	NOP;
    c432:	e0 a4       	R0 = W[P4 + 0x6] (Z);
    c434:	10 0c       	CC = R0 == 0x2;
    c436:	0a 18       	IF CC JUMP 0xc44a <_mDNSCoreReceive+0xd8a>;
    c438:	29 60       	R1 = 0x5 (X);		/*		R1=0x5(  5) */
    c43a:	08 08       	CC = R0 == R1;
    c43c:	07 18       	IF CC JUMP 0xc44a <_mDNSCoreReceive+0xd8a>;
    c43e:	62 60       	R2 = 0xc (X);		/*		R2=0xc( 12) */
    c440:	10 08       	CC = R0 == R2;
    c442:	04 18       	IF CC JUMP 0xc44a <_mDNSCoreReceive+0xd8a>;
    c444:	3b 61       	R3 = 0x27 (X);		/*		R3=0x27( 39) */
    c446:	18 08       	CC = R0 == R3;
    c448:	04 14       	IF !CC JUMP 0xc450 <_mDNSCoreReceive+0xd90> (BP);
    c44a:	60 a2       	R0 = [P4 + 0x24];
    c44c:	20 64       	R0 += 0x4;		/* (  4) */
    c44e:	15 20       	JUMP.S 0xc478 <_mDNSCoreReceive+0xdb8>;
    c450:	7e 60       	R6 = 0xf (X);		/*		R6=0xf( 15) */
    c452:	30 08       	CC = R0 == R6;
    c454:	0a 18       	IF CC JUMP 0xc468 <_mDNSCoreReceive+0xda8>;
    c456:	91 60       	R1 = 0x12 (X);		/*		R1=0x12( 18) */
    c458:	08 08       	CC = R0 == R1;
    c45a:	07 18       	IF CC JUMP 0xc468 <_mDNSCoreReceive+0xda8>;
    c45c:	aa 60       	R2 = 0x15 (X);		/*		R2=0x15( 21) */
    c45e:	10 08       	CC = R0 == R2;
    c460:	04 18       	IF CC JUMP 0xc468 <_mDNSCoreReceive+0xda8>;
    c462:	23 61       	R3 = 0x24 (X);		/*		R3=0x24( 36) */
    c464:	18 08       	CC = R0 == R3;
    c466:	04 14       	IF !CC JUMP 0xc46e <_mDNSCoreReceive+0xdae> (BP);
    c468:	60 a2       	R0 = [P4 + 0x24];
    c46a:	30 64       	R0 += 0x6;		/* (  6) */
    c46c:	06 20       	JUMP.S 0xc478 <_mDNSCoreReceive+0xdb8>;
    c46e:	0e 61       	R6 = 0x21 (X);		/*		R6=0x21( 33) */
    c470:	30 08       	CC = R0 == R6;
    c472:	15 14       	IF !CC JUMP 0xc49c <_mDNSCoreReceive+0xddc> (BP);
    c474:	60 a2       	R0 = [P4 + 0x24];
    c476:	50 64       	R0 += 0xa;		/* ( 10) */
    c478:	00 0c       	CC = R0 == 0x0;
    c47a:	11 1c       	IF CC JUMP 0xc49c <_mDNSCoreReceive+0xddc> (BP);
    c47c:	a2 a1       	R2 = [P4 + 0x18];
    c47e:	29 e4 26 1f 	R1 = [P5 + 0x7c98];
    c482:	0a 08       	CC = R2 == R1;
    c484:	0c 14       	IF !CC JUMP 0xc49c <_mDNSCoreReceive+0xddc> (BP);
    c486:	29 e4 29 1f 	R1 = [P5 + 0x7ca4];
    c48a:	ff e3 bb 9d 	CALL 0x0 <_AddRecordToResponseList>;
    c48e:	00 0c       	CC = R0 == 0x0;
    c490:	06 1c       	IF CC JUMP 0xc49c <_mDNSCoreReceive+0xddc> (BP);
    c492:	37 e4 17 00 	R7 = [SP + 0x5c];
    c496:	2f e6 2b 1f 	[P5 + 0x7cac] = R7;
    c49a:	08 20       	JUMP.S 0xc4aa <_mDNSCoreReceive+0xdea>;
    c49c:	00 00       	NOP;
    c49e:	24 e5 13 00 	P4 = [P4 + 0x4c];
    c4a2:	4c 0c       	CC = P4 == 0x1;
    c4a4:	c6 17       	IF !CC JUMP 0xc430 <_mDNSCoreReceive+0xd70> (BP);
    c4a6:	00 e2 3b 0a 	JUMP.L 0xd91c <_mDNSCoreReceive+0x225c>;
    c4aa:	0f 60       	R7 = 0x1 (X);		/*		R7=0x1(  1) */
    c4ac:	12 20       	JUMP.S 0xc4d0 <_mDNSCoreReceive+0xe10>;
    c4ae:	29 e4 2a 1f 	R1 = [P5 + 0x7ca8];
    c4b2:	55 30       	R2 = P5;
    c4b4:	21 64       	R1 += 0x4;		/* (  4) */
    c4b6:	ba 65       	R2 += 0x37;		/* ( 55) */
    c4b8:	30 e4 12 00 	R0 = [SP + 0x48];
    c4bc:	ff e3 a2 9d 	CALL 0x0 <_AddRecordToResponseList>;
    c4c0:	10 30       	R2 = R0;
    c4c2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x12( 18) */
    c4c6:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    c4c8:	01 e1 f8 3a 	R1.L = 0x3af8;		/* (15096)	R1=0x3af8(15096) */
    c4cc:	ff e3 9a 9d 	CALL 0x0 <_AddRecordToResponseList>;
    c4d0:	00 00       	NOP;
    c4d2:	28 e4 52 00 	R0 = [P5 + 0x148];
    c4d6:	00 0c       	CC = R0 == 0x0;
    c4d8:	ae 1d       	IF CC JUMP 0xc834 <_mDNSCoreReceive+0x1174> (BP);
    c4da:	07 0c       	CC = R7 == 0x0;
    c4dc:	ac 1d       	IF CC JUMP 0xc834 <_mDNSCoreReceive+0x1174> (BP);
    c4de:	28 e4 29 1f 	R0 = [P5 + 0x7ca4];
    c4e2:	ff e3 8f 9d 	CALL 0x0 <_AddRecordToResponseList>;
    c4e6:	41 e1 d5 20 	R1.H = 0x20d5;		/* (8405)	R1=0x20d53af8(550845176) */
    c4ea:	38 30       	R7 = R0;
    c4ec:	01 e1 39 6b 	R1.L = 0x6b39;		/* (27449)	R1=0x20d56b39(550857529) */
    c4f0:	ff e3 88 9d 	CALL 0x0 <_AddRecordToResponseList>;
    c4f4:	82 c6 d0 8d 	R6 = R0 >> 0x6;
    c4f8:	20 e1 f3 01 	R0 = 0x1f3 (X);		/*		R0=0x1f3(499) */
    c4fc:	c6 40       	R6 *= R0;
    c4fe:	28 e4 29 1f 	R0 = [P5 + 0x7ca4];
    c502:	2a e4 26 1f 	R2 = [P5 + 0x7c98];
    c506:	f0 b0       	[SP + 0xc] = R0;
    c508:	b7 53       	R6 = R7 - R6;
    c50a:	45 30       	R0 = P5;
    c50c:	0e 30       	R1 = R6;
    c50e:	ff e3 6b af 	CALL 0x23e4 <_CacheGroupForName>;
    c512:	00 32       	P0 = R0;
    c514:	30 e6 1b 00 	[SP + 0x6c] = R0;
    c518:	40 0c       	CC = P0 == 0x0;
    c51a:	03 1c       	IF CC JUMP 0xc520 <_mDNSCoreReceive+0xe60> (BP);
    c51c:	84 ac       	P4 = [P0 + 0x8];
    c51e:	41 21       	JUMP.S 0xc7a0 <_mDNSCoreReceive+0x10e0>;
    c520:	04 68       	P4 = 0x0 (X);		/*		P4=0x0(  0) */
    c522:	3f 21       	JUMP.S 0xc7a0 <_mDNSCoreReceive+0x10e0>;
    c524:	04 0c       	CC = R4 == 0x0;
    c526:	06 14       	IF !CC JUMP 0xc532 <_mDNSCoreReceive+0xe72> (BP);
    c528:	29 e4 2b 1f 	R1 = [P5 + 0x7cac];
    c52c:	a0 a2       	R0 = [P4 + 0x28];
    c52e:	01 08       	CC = R1 == R0;
    c530:	04 20       	JUMP.S 0xc538 <_mDNSCoreReceive+0xe78>;
    c532:	00 00       	NOP;
    c534:	e0 a1       	R0 = [P4 + 0x1c];
    c536:	20 08       	CC = R0 == R4;
    c538:	00 02       	R0 = CC;
    c53a:	00 0c       	CC = R0 == 0x0;
    c53c:	2f 1d       	IF CC JUMP 0xc79a <_mDNSCoreReceive+0x10da> (BP);
    c53e:	69 e4 45 3e 	R1 = W[P5 + 0x7c8a] (Z);
    c542:	e0 a4       	R0 = W[P4 + 0x6] (Z);
    c544:	01 08       	CC = R1 == R0;
    c546:	2a 15       	IF !CC JUMP 0xc79a <_mDNSCoreReceive+0x10da> (BP);
    c548:	69 e4 46 3e 	R1 = W[P5 + 0x7c8c] (Z);
    c54c:	20 a5       	R0 = W[P4 + 0x8] (Z);
    c54e:	01 08       	CC = R1 == R0;
    c550:	25 15       	IF !CC JUMP 0xc79a <_mDNSCoreReceive+0x10da> (BP);
    c552:	69 e4 4a 3e 	R1 = W[P5 + 0x7c94] (Z);
    c556:	20 a6       	R0 = W[P4 + 0x10] (Z);
    c558:	01 08       	CC = R1 == R0;
    c55a:	20 15       	IF !CC JUMP 0xc79a <_mDNSCoreReceive+0x10da> (BP);
    c55c:	29 e4 27 1f 	R1 = [P5 + 0x7c9c];
    c560:	a0 a1       	R0 = [P4 + 0x18];
    c562:	01 08       	CC = R1 == R0;
    c564:	1b 15       	IF !CC JUMP 0xc79a <_mDNSCoreReceive+0x10da> (BP);
    c566:	61 a2       	R1 = [P4 + 0x24];
    c568:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x15( 21) */
    c56c:	21 64       	R1 += 0x4;		/* (  4) */
    c56e:	30 e4 12 00 	R0 = [SP + 0x48];
    c572:	02 e1 00 00 	R2.L = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    c576:	ff e3 45 9d 	CALL 0x0 <_AddRecordToResponseList>;
    c57a:	00 0c       	CC = R0 == 0x0;
    c57c:	0f 1d       	IF CC JUMP 0xc79a <_mDNSCoreReceive+0x10da> (BP);
    c57e:	a8 e4 88 7c 	R0 = B[P5 + 0x7c88] (Z);
    c582:	20 48       	CC = !BITTST (R0, 0x4);		/* bit  4 */
    c584:	34 1c       	IF CC JUMP 0xc5ec <_mDNSCoreReceive+0xf2c> (BP);
    c586:	20 e4 13 00 	R0 = [P4 + 0x4c];
    c58a:	00 0c       	CC = R0 == 0x0;
    c58c:	12 14       	IF !CC JUMP 0xc5b0 <_mDNSCoreReceive+0xef0> (BP);
    c58e:	31 e5 18 00 	P1 = [SP + 0x60];
    c592:	2a e1 4c 00 	P2 = 0x4c (X);		/*		P2=0x4c( 76) */
    c596:	94 5a       	P2 = P4 + P2;
    c598:	51 08       	CC = P1 == P2;
    c59a:	0b 18       	IF CC JUMP 0xc5b0 <_mDNSCoreReceive+0xef0>;
    c59c:	30 e4 14 00 	R0 = [SP + 0x50];
    c5a0:	18 0c       	CC = R0 == 0x3;
    c5a2:	07 18       	IF CC JUMP 0xc5b0 <_mDNSCoreReceive+0xef0>;
    c5a4:	4c 93       	[P1] = P4;
    c5a6:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    c5a8:	20 e6 13 00 	[P4 + 0x4c] = R0;
    c5ac:	32 e7 18 00 	[SP + 0x60] = P2;
    c5b0:	00 00       	NOP;
    c5b2:	a0 e4 04 00 	R0 = B[P4 + 0x4] (Z);
    c5b6:	20 48       	CC = !BITTST (R0, 0x4);		/* bit  4 */
    c5b8:	1a 14       	IF !CC JUMP 0xc5ec <_mDNSCoreReceive+0xf2c> (BP);
    c5ba:	4c 30       	R1 = P4;
    c5bc:	21 64       	R1 += 0x4;		/* (  4) */
    c5be:	2f e5 4c 00 	FP = [P5 + 0x130];
    c5c2:	31 e6 20 00 	[SP + 0x80] = R1;
    c5c6:	0d 20       	JUMP.S 0xc5e0 <_mDNSCoreReceive+0xf20>;
    c5c8:	4f 30       	R1 = FP;
    c5ca:	30 e4 20 00 	R0 = [SP + 0x80];
    c5ce:	ff e3 19 9d 	CALL 0x0 <_AddRecordToResponseList>;
    c5d2:	00 0c       	CC = R0 == 0x0;
    c5d4:	04 1c       	IF CC JUMP 0xc5dc <_mDNSCoreReceive+0xf1c> (BP);
    c5d6:	b8 a2       	R0 = [FP + 0x28];
    c5d8:	08 64       	R0 += 0x1;		/* (  1) */
    c5da:	b8 b2       	[FP + 0x28] = R0;
    c5dc:	00 00       	NOP;
    c5de:	7f 91       	FP = [FP];
    c5e0:	47 0c       	CC = FP == 0x0;
    c5e2:	f3 17       	IF !CC JUMP 0xc5c8 <_mDNSCoreReceive+0xf08> (BP);
    c5e4:	a8 e5 88 7c 	R0 = B[P5 + 0x7c88] (X);
    c5e8:	a0 e6 04 00 	B[P4 + 0x4] = R0;
    c5ec:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    c5f0:	61 a2       	R1 = [P4 + 0x24];
    c5f2:	21 64       	R1 += 0x4;		/* (  4) */
    c5f4:	30 e4 12 00 	R0 = [SP + 0x48];
    c5f8:	02 e1 00 00 	R2.L = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    c5fc:	ff e3 02 9d 	CALL 0x0 <_AddRecordToResponseList>;
    c600:	00 0c       	CC = R0 == 0x0;
    c602:	70 14       	IF !CC JUMP 0xc6e2 <_mDNSCoreReceive+0x1022> (BP);
    c604:	e0 b0       	[P4 + 0xc] = R0;
    c606:	4c 30       	R1 = P4;
    c608:	28 e4 37 00 	R0 = [P5 + 0xdc];
    c60c:	20 b3       	[P4 + 0x30] = R0;
    c60e:	20 60       	R0 = 0x4 (X);		/*		R0=0x4(  4) */
    c610:	20 e6 11 00 	[P4 + 0x44] = R0;
    c614:	45 30       	R0 = P5;
    c616:	ff e3 09 b1 	CALL 0x2828 <_SetNextCacheCheckTimeForRecord>;
    c61a:	05 32       	P0 = R5;
    c61c:	00 91       	R0 = [P0];
    c61e:	00 0c       	CC = R0 == 0x0;
    c620:	11 1c       	IF CC JUMP 0xc642 <_mDNSCoreReceive+0xf82> (BP);
    c622:	61 a2       	R1 = [P4 + 0x24];
    c624:	44 30       	R0 = P4;
    c626:	55 30       	R2 = P5;
    c628:	21 64       	R1 += 0x4;		/* (  4) */
    c62a:	ba 65       	R2 += 0x37;		/* ( 55) */
    c62c:	20 64       	R0 += 0x4;		/* (  4) */
    c62e:	ff e3 e9 9c 	CALL 0x0 <_AddRecordToResponseList>;
    c632:	10 30       	R2 = R0;
    c634:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x6b39(27449) */
    c638:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    c63a:	01 e1 1c 3b 	R1.L = 0x3b1c;		/* (15132)	R1=0x3b1c(15132) */
    c63e:	ff e3 e1 9c 	CALL 0x0 <_AddRecordToResponseList>;
    c642:	0d 32       	P1 = R5;
    c644:	08 91       	R0 = [P1];
    c646:	00 0c       	CC = R0 == 0x0;
    c648:	12 1c       	IF CC JUMP 0xc66c <_mDNSCoreReceive+0xfac> (BP);
    c64a:	29 e4 2a 1f 	R1 = [P5 + 0x7ca8];
    c64e:	55 30       	R2 = P5;
    c650:	21 64       	R1 += 0x4;		/* (  4) */
    c652:	ba 65       	R2 += 0x37;		/* ( 55) */
    c654:	30 e4 12 00 	R0 = [SP + 0x48];
    c658:	ff e3 d4 9c 	CALL 0x0 <_AddRecordToResponseList>;
    c65c:	10 30       	R2 = R0;
    c65e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3b1c(15132) */
    c662:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    c664:	01 e1 50 3b 	R1.L = 0x3b50;		/* (15184)	R1=0x3b50(15184) */
    c668:	ff e3 cc 9c 	CALL 0x0 <_AddRecordToResponseList>;
    c66c:	15 32       	P2 = R5;
    c66e:	10 91       	R0 = [P2];
    c670:	00 0c       	CC = R0 == 0x0;
    c672:	94 1c       	IF CC JUMP 0xc79a <_mDNSCoreReceive+0x10da> (BP);
    c674:	20 e4 10 00 	R0 = [P4 + 0x40];
    c678:	a7 af       	FP = [P4 + 0x38];
    c67a:	00 0c       	CC = R0 == 0x0;
    c67c:	05 14       	IF !CC JUMP 0xc686 <_mDNSCoreReceive+0xfc6> (BP);
    c67e:	e0 61       	R0 = 0x3c (X);		/*		R0=0x3c( 60) */
    c680:	19 91       	R1 = [P3];
    c682:	c8 40       	R0 *= R1;
    c684:	18 20       	JUMP.S 0xc6b4 <_mDNSCoreReceive+0xff4>;
    c686:	00 00       	NOP;
    c688:	20 e4 11 00 	R0 = [P4 + 0x44];
    c68c:	18 0e       	CC = R0 <= 0x3 (IU);
    c68e:	e1 a0       	R1 = [P4 + 0xc];
    c690:	05 14       	IF !CC JUMP 0xc69a <_mDNSCoreReceive+0xfda> (BP);
    c692:	18 91       	R0 = [P3];
    c694:	c8 40       	R0 *= R1;
    c696:	91 61       	R1 = 0x32 (X);		/*		R1=0x32( 50) */
    c698:	0a 20       	JUMP.S 0xc6ac <_mDNSCoreReceive+0xfec>;
    c69a:	50 60       	R0 = 0xa (X);		/*		R0=0xa( 10) */
    c69c:	01 0a       	CC = R1 <= R0 (IU);
    c69e:	03 1c       	IF CC JUMP 0xc6a4 <_mDNSCoreReceive+0xfe4> (BP);
    c6a0:	18 91       	R0 = [P3];
    c6a2:	09 20       	JUMP.S 0xc6b4 <_mDNSCoreReceive+0xff4>;
    c6a4:	01 0c       	CC = R1 == 0x0;
    c6a6:	06 1c       	IF CC JUMP 0xc6b2 <_mDNSCoreReceive+0xff2> (BP);
    c6a8:	18 91       	R0 = [P3];
    c6aa:	51 60       	R1 = 0xa (X);		/*		R1=0xa( 10) */
    c6ac:	ff e3 aa 9c 	CALL 0x0 <_AddRecordToResponseList>;
    c6b0:	02 20       	JUMP.S 0xc6b4 <_mDNSCoreReceive+0xff4>;
    c6b2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    c6b4:	30 e5 26 00 	P0 = [SP + 0x98];
    c6b8:	29 e4 37 00 	R1 = [P5 + 0xdc];
    c6bc:	5f 30       	R3 = FP;
    c6be:	8b 52       	R2 = R3 - R1;
    c6c0:	f6 b0       	[SP + 0xc] = R6;
    c6c2:	82 50       	R2 = R2 + R0;
    c6c4:	00 91       	R0 = [P0];
    c6c6:	08 52       	R0 = R0 - R1;
    c6c8:	30 b1       	[SP + 0x10] = R0;
    c6ca:	28 e4 3c 00 	R0 = [P5 + 0xf0];
    c6ce:	48 52       	R1 = R0 - R1;
    c6d0:	71 b1       	[SP + 0x14] = R1;
    c6d2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xa( 10) */
    c6d6:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    c6d8:	01 e1 84 3b 	R1.L = 0x3b84;		/* (15236)	R1=0x3b84(15236) */
    c6dc:	ff e3 92 9c 	CALL 0x0 <_AddRecordToResponseList>;
    c6e0:	5d 20       	JUMP.S 0xc79a <_mDNSCoreReceive+0x10da>;
    c6e2:	00 00       	NOP;
    c6e4:	29 e4 24 1f 	R1 = [P5 + 0x7c90];
    c6e8:	3f 32       	FP = R7;
    c6ea:	01 0c       	CC = R1 == 0x0;
    c6ec:	28 e4 37 00 	R0 = [P5 + 0xdc];
    c6f0:	3e 1c       	IF CC JUMP 0xc76c <_mDNSCoreReceive+0x10ac> (BP);
    c6f2:	20 b3       	[P4 + 0x30] = R0;
    c6f4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    c6f6:	e1 b0       	[P4 + 0xc] = R1;
    c6f8:	20 e6 11 00 	[P4 + 0x44] = R0;
    c6fc:	45 30       	R0 = P5;
    c6fe:	4c 30       	R1 = P4;
    c700:	ff e3 94 b0 	CALL 0x2828 <_SetNextCacheCheckTimeForRecord>;
    c704:	a0 e4 04 00 	R0 = B[P4 + 0x4] (Z);
    c708:	20 48       	CC = !BITTST (R0, 0x4);		/* bit  4 */
    c70a:	95 1c       	IF CC JUMP 0xc834 <_mDNSCoreReceive+0x1174> (BP);
    c70c:	2b e5 4c 00 	P3 = [P5 + 0x130];
    c710:	24 6c       	P4 += 0x4;		/* (  4) */
    c712:	2a 20       	JUMP.S 0xc766 <_mDNSCoreReceive+0x10a6>;
    c714:	00 00       	NOP;
    c716:	98 a3       	R0 = [P3 + 0x38];
    c718:	00 0c       	CC = R0 == 0x0;
    c71a:	24 14       	IF !CC JUMP 0xc762 <_mDNSCoreReceive+0x10a2> (BP);
    c71c:	18 e4 8e 00 	R0 = [P3 + 0x238];
    c720:	00 0c       	CC = R0 == 0x0;
    c722:	20 14       	IF !CC JUMP 0xc762 <_mDNSCoreReceive+0x10a2> (BP);
    c724:	18 a1       	R0 = [P3 + 0x10];
    c726:	00 0d       	CC = R0 <= 0x0;
    c728:	1d 18       	IF CC JUMP 0xc762 <_mDNSCoreReceive+0x10a2>;
    c72a:	44 30       	R0 = P4;
    c72c:	4b 30       	R1 = P3;
    c72e:	ff e3 69 9c 	CALL 0x0 <_AddRecordToResponseList>;
    c732:	00 0c       	CC = R0 == 0x0;
    c734:	17 1c       	IF CC JUMP 0xc762 <_mDNSCoreReceive+0x10a2> (BP);
    c736:	28 e4 37 00 	R0 = [P5 + 0xdc];
    c73a:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x4c */
    c73e:	d8 b0       	[P3 + 0xc] = R0;
    c740:	18 e6 2b 00 	[P3 + 0xac] = R0;
    c744:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    c748:	10 91       	R0 = [P2];
    c74a:	22 e1 10 0e 	R2 = 0xe10 (X);		/*		R2=0xe10(3600) */
    c74e:	d0 40       	R0 *= R2;
    c750:	18 b1       	[P3 + 0x10] = R0;
    c752:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    c754:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    c756:	d9 b1       	[P3 + 0x1c] = R1;
    c758:	19 e6 2a 00 	[P3 + 0xa8] = R1;
    c75c:	98 e6 d8 00 	B[P3 + 0xd8] = R0;
    c760:	6a 20       	JUMP.S 0xc834 <_mDNSCoreReceive+0x1174>;
    c762:	00 00       	NOP;
    c764:	5b 91       	P3 = [P3];
    c766:	43 0c       	CC = P3 == 0x0;
    c768:	d6 17       	IF !CC JUMP 0xc714 <_mDNSCoreReceive+0x1054> (BP);
    c76a:	65 20       	JUMP.S 0xc834 <_mDNSCoreReceive+0x1174>;
    c76c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    c770:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    c774:	12 91       	R2 = [P2];
    c776:	e1 a0       	R1 = [P4 + 0xc];
    c778:	d1 40       	R1 *= R2;
    c77a:	23 a3       	R3 = [P4 + 0x30];
    c77c:	c3 52       	R3 = R3 - R0;
    c77e:	4b 50       	R1 = R3 + R1;
    c780:	11 09       	CC = R1 <= R2;
    c782:	59 1c       	IF CC JUMP 0xc834 <_mDNSCoreReceive+0x1174> (BP);
    c784:	20 b3       	[P4 + 0x30] = R0;
    c786:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    c788:	20 60       	R0 = 0x4 (X);		/*		R0=0x4(  4) */
    c78a:	e1 b0       	[P4 + 0xc] = R1;
    c78c:	20 e6 11 00 	[P4 + 0x44] = R0;
    c790:	45 30       	R0 = P5;
    c792:	4c 30       	R1 = P4;
    c794:	ff e3 4a b0 	CALL 0x2828 <_SetNextCacheCheckTimeForRecord>;
    c798:	4e 20       	JUMP.S 0xc834 <_mDNSCoreReceive+0x1174>;
    c79a:	00 00       	NOP;
    c79c:	64 91       	P4 = [P4];
    c79e:	0d 20       	JUMP.S 0xc7b8 <_mDNSCoreReceive+0x10f8>;
    c7a0:	20 e1 4a 02 	R0 = 0x24a (X);		/*		R0=0x24a(586) */
    c7a4:	70 41       	R0 = (R0 + R6) << 0x2;
    c7a6:	08 32       	P1 = R0;
    c7a8:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
    c7ac:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
    c7b0:	7f 30       	R7 = FP;
    c7b2:	4d 5a       	P1 = P5 + P1;
    c7b4:	31 e7 26 00 	[SP + 0x98] = P1;
    c7b8:	44 0c       	CC = P4 == 0x0;
    c7ba:	b5 16       	IF !CC JUMP 0xc524 <_mDNSCoreReceive+0xe64> (BP);
    c7bc:	28 e4 24 1f 	R0 = [P5 + 0x7c90];
    c7c0:	3f 32       	FP = R7;
    c7c2:	00 0c       	CC = R0 == 0x0;
    c7c4:	38 1c       	IF CC JUMP 0xc834 <_mDNSCoreReceive+0x1174> (BP);
    c7c6:	a8 e4 88 7c 	R0 = B[P5 + 0x7c88] (Z);
    c7ca:	20 48       	CC = !BITTST (R0, 0x4);		/* bit  4 */
    c7cc:	03 10       	IF !CC JUMP 0xc7d2 <_mDNSCoreReceive+0x1112>;
    c7ce:	00 e2 af 08 	JUMP.L 0xd92c <_mDNSCoreReceive+0x226c>;
    c7d2:	30 e4 14 00 	R0 = [SP + 0x50];
    c7d6:	18 0c       	CC = R0 == 0x3;
    c7d8:	03 14       	IF !CC JUMP 0xc7de <_mDNSCoreReceive+0x111e> (BP);
    c7da:	00 e2 a9 08 	JUMP.L 0xd92c <_mDNSCoreReceive+0x226c>;
    c7de:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    c7e2:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    c7e6:	0f 60       	R7 = 0x1 (X);		/*		R7=0x1(  1) */
    c7e8:	11 91       	R1 = [P2];
    c7ea:	28 e4 37 00 	R0 = [P5 + 0xdc];
    c7ee:	01 50       	R0 = R1 + R0;
    c7f0:	00 0c       	CC = R0 == 0x0;
    c7f2:	07 07       	IF CC R0 = R7;
    c7f4:	f0 b0       	[SP + 0xc] = R0;
    c7f6:	45 30       	R0 = P5;
    c7f8:	0e 30       	R1 = R6;
    c7fa:	32 e4 1b 00 	R2 = [SP + 0x6c];
    c7fe:	ff e3 35 f5 	CALL 0xb268 <_CreateNewCacheEntry>;
    c802:	10 32       	P2 = R0;
    c804:	42 0c       	CC = P2 == 0x0;
    c806:	17 18       	IF CC JUMP 0xc834 <_mDNSCoreReceive+0x1174>;
    c808:	07 0c       	CC = R7 == 0x0;
    c80a:	0d 1c       	IF CC JUMP 0xc824 <_mDNSCoreReceive+0x1164> (BP);
    c80c:	30 e5 18 00 	P0 = [SP + 0x60];
    c810:	29 e1 4c 00 	P1 = 0x4c (X);		/*		P1=0x4c( 76) */
    c814:	4a 5a       	P1 = P2 + P1;
    c816:	00 93       	[P0] = R0;
    c818:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    c81a:	31 e7 18 00 	[SP + 0x60] = P1;
    c81e:	10 e6 13 00 	[P2 + 0x4c] = R0;
    c822:	09 20       	JUMP.S 0xc834 <_mDNSCoreReceive+0x1174>;
    c824:	00 00       	NOP;
    c826:	52 a3       	R2 = [P2 + 0x34];
    c828:	02 0c       	CC = R2 == 0x0;
    c82a:	05 1c       	IF CC JUMP 0xc834 <_mDNSCoreReceive+0x1174> (BP);
    c82c:	45 30       	R0 = P5;
    c82e:	0e 30       	R1 = R6;
    c830:	ff e3 e8 af 	CALL 0x2800 <_ScheduleNextCacheCheckTime>;
    c834:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    c836:	a8 e6 88 7c 	B[P5 + 0x7c88] = R0;
    c83a:	31 e5 15 00 	P1 = [SP + 0x54];
    c83e:	09 6c       	P1 += 0x1;		/* (  1) */
    c840:	31 e7 15 00 	[SP + 0x54] = P1;
    c844:	30 e4 15 00 	R0 = [SP + 0x54];
    c848:	31 e4 24 00 	R1 = [SP + 0x90];
    c84c:	88 08       	CC = R0 < R1;
    c84e:	0a 10       	IF !CC JUMP 0xc862 <_mDNSCoreReceive+0x11a2>;
    c850:	32 e4 11 00 	R2 = [SP + 0x44];
    c854:	02 0c       	CC = R2 == 0x0;
    c856:	06 18       	IF CC JUMP 0xc862 <_mDNSCoreReceive+0x11a2>;
    c858:	33 e4 1f 00 	R3 = [SP + 0x7c];
    c85c:	9a 09       	CC = R2 < R3 (IU);
    c85e:	02 10       	IF !CC JUMP 0xc862 <_mDNSCoreReceive+0x11a2>;
    c860:	b1 2a       	JUMP.S 0xbdc2 <_mDNSCoreReceive+0x702>;
    c862:	67 32       	P4 = FP;
    c864:	37 e5 1c 00 	FP = [SP + 0x70];
    c868:	36 e4 1f 00 	R6 = [SP + 0x7c];
    c86c:	34 e6 15 00 	[SP + 0x54] = R4;
    c870:	7d 30       	R7 = P5;
    c872:	26 30       	R4 = R6;
    c874:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    c876:	45 e1 00 00 	R5.H = 0x0;		/* (  0)	R5=0x2504(9476) */
    c87a:	bf 65       	R7 += 0x37;		/* ( 55) */
    c87c:	77 30       	R6 = FP;
    c87e:	a8 e6 88 7c 	B[P5 + 0x7c88] = R0;
    c882:	05 e1 00 00 	R5.L = 0x0;		/* (  0)	R5=0x0 <_AddRecordToResponseList>(  0) */
    c886:	37 e6 12 00 	[SP + 0x48] = R7;
    c88a:	5d 32       	P3 = P5;
    c88c:	7c 32       	FP = P4;
    c88e:	d7 20       	JUMP.S 0xca3c <_mDNSCoreReceive+0x137c>;
    c890:	00 00       	NOP;
    c892:	20 a2       	R0 = [P4 + 0x20];
    c894:	ff e3 b6 9b 	CALL 0x0 <_AddRecordToResponseList>;
    c898:	41 e1 d5 20 	R1.H = 0x20d5;		/* (8405)	R1=0x20d50001(550830081) */
    c89c:	38 30       	R7 = R0;
    c89e:	01 e1 39 6b 	R1.L = 0x6b39;		/* (27449)	R1=0x20d56b39(550857529) */
    c8a2:	ff e3 af 9b 	CALL 0x0 <_AddRecordToResponseList>;
    c8a6:	21 e1 f3 01 	R1 = 0x1f3 (X);		/*		R1=0x1f3(499) */
    c8aa:	30 4e       	R0 >>= 0x6;
    c8ac:	c8 40       	R0 *= R1;
    c8ae:	07 52       	R0 = R7 - R0;
    c8b0:	30 e6 11 00 	[SP + 0x44] = R0;
    c8b4:	62 a1       	R2 = [P4 + 0x14];
    c8b6:	20 a2       	R0 = [P4 + 0x20];
    c8b8:	f0 b0       	[SP + 0xc] = R0;
    c8ba:	43 30       	R0 = P3;
    c8bc:	31 e4 11 00 	R1 = [SP + 0x44];
    c8c0:	ff e3 92 ad 	CALL 0x23e4 <_CacheGroupForName>;
    c8c4:	10 32       	P2 = R0;
    c8c6:	31 e5 58 02 	P1 = [SP + 0x960];
    c8ca:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    c8cc:	08 e4 13 00 	R0 = [P1 + 0x4c];
    c8d0:	30 e6 58 02 	[SP + 0x960] = R0;
    c8d4:	22 e6 13 00 	[P4 + 0x4c] = R2;
    c8d8:	42 0c       	CC = P2 == 0x0;
    c8da:	03 1c       	IF CC JUMP 0xc8e0 <_mDNSCoreReceive+0x1220> (BP);
    c8dc:	95 ac       	P5 = [P2 + 0x8];
    c8de:	94 20       	JUMP.S 0xca06 <_mDNSCoreReceive+0x1346>;
    c8e0:	05 68       	P5 = 0x0 (X);		/*		P5=0x0(  0) */
    c8e2:	92 20       	JUMP.S 0xca06 <_mDNSCoreReceive+0x1346>;
    c8e4:	00 00       	NOP;
    c8e6:	e0 a1       	R0 = [P4 + 0x1c];
    c8e8:	e9 a1       	R1 = [P5 + 0x1c];
    c8ea:	08 08       	CC = R0 == R1;
    c8ec:	8b 14       	IF !CC JUMP 0xca02 <_mDNSCoreReceive+0x1342> (BP);
    c8ee:	00 0c       	CC = R0 == 0x0;
    c8f0:	05 14       	IF !CC JUMP 0xc8fa <_mDNSCoreReceive+0x123a> (BP);
    c8f2:	a1 a2       	R1 = [P4 + 0x28];
    c8f4:	a8 a2       	R0 = [P5 + 0x28];
    c8f6:	01 08       	CC = R1 == R0;
    c8f8:	85 14       	IF !CC JUMP 0xca02 <_mDNSCoreReceive+0x1342> (BP);
    c8fa:	00 00       	NOP;
    c8fc:	e3 a4       	R3 = W[P4 + 0x6] (Z);
    c8fe:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    c900:	13 32       	P2 = R3;
    c902:	03 08       	CC = R3 == R0;
    c904:	7f 14       	IF !CC JUMP 0xca02 <_mDNSCoreReceive+0x1342> (BP);
    c906:	21 a5       	R1 = W[P4 + 0x8] (Z);
    c908:	28 a5       	R0 = W[P5 + 0x8] (Z);
    c90a:	01 08       	CC = R1 == R0;
    c90c:	7b 14       	IF !CC JUMP 0xca02 <_mDNSCoreReceive+0x1342> (BP);
    c90e:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0x0 <_AddRecordToResponseList> */
    c912:	18 e4 37 00 	R0 = [P3 + 0xdc];
    c916:	2a a3       	R2 = [P5 + 0x30];
    c918:	08 e1 00 00 	P0.L = 0x0;		/* (  0)	P0=0x0 <_AddRecordToResponseList> */
    c91c:	01 91       	R1 = [P0];
    c91e:	d0 52       	R3 = R0 - R2;
    c920:	8b 08       	CC = R3 < R1;
    c922:	3e 14       	IF !CC JUMP 0xc99e <_mDNSCoreReceive+0x12de> (BP);
    c924:	c2 53       	R7 = R2 - R0;
    c926:	0f 32       	P1 = R7;
    c928:	eb a0       	R3 = [P5 + 0xc];
    c92a:	3b 30       	R7 = R3;
    c92c:	cf 40       	R7 *= R1;
    c92e:	07 32       	P0 = R7;
    c930:	41 5a       	P1 = P1 + P0;
    c932:	79 30       	R7 = P1;
    c934:	0f 09       	CC = R7 <= R1;
    c936:	34 1c       	IF CC JUMP 0xc99e <_mDNSCoreReceive+0x12de> (BP);
    c938:	e7 a0       	R7 = [P4 + 0xc];
    c93a:	3b 08       	CC = R3 == R7;
    c93c:	2e 18       	IF CC JUMP 0xc998 <_mDNSCoreReceive+0x12d8>;
    c93e:	0f 0e       	CC = R7 <= 0x1 (IU);
    c940:	2c 18       	IF CC JUMP 0xc998 <_mDNSCoreReceive+0x12d8>;
    c942:	20 e1 f0 00 	R0 = 0xf0 (X);		/*		R0=0xf0(240) */
    c946:	03 08       	CC = R3 == R0;
    c948:	07 14       	IF !CC JUMP 0xc956 <_mDNSCoreReceive+0x1296> (BP);
    c94a:	e1 61       	R1 = 0x3c (X);		/*		R1=0x3c( 60) */
    c94c:	0f 08       	CC = R7 == R1;
    c94e:	04 14       	IF !CC JUMP 0xc956 <_mDNSCoreReceive+0x1296> (BP);
    c950:	80 68       	P0 = 0x10 (X);		/*		P0=0x10( 16) */
    c952:	42 08       	CC = P2 == P0;
    c954:	1f 1c       	IF CC JUMP 0xc992 <_mDNSCoreReceive+0x12d2> (BP);
    c956:	00 00       	NOP;
    c958:	38 95       	R0 = W[FP] (Z);
    c95a:	00 0c       	CC = R0 == 0x0;
    c95c:	1b 14       	IF !CC JUMP 0xc992 <_mDNSCoreReceive+0x12d2> (BP);
    c95e:	0d 32       	P1 = R5;
    c960:	08 91       	R0 = [P1];
    c962:	00 0c       	CC = R0 == 0x0;
    c964:	17 1c       	IF CC JUMP 0xc992 <_mDNSCoreReceive+0x12d2> (BP);
    c966:	69 a2       	R1 = [P5 + 0x24];
    c968:	45 30       	R0 = P5;
    c96a:	21 64       	R1 += 0x4;		/* (  4) */
    c96c:	32 e4 12 00 	R2 = [SP + 0x48];
    c970:	33 e6 10 00 	[SP + 0x40] = R3;
    c974:	20 64       	R0 += 0x4;		/* (  4) */
    c976:	ff e3 45 9b 	CALL 0x0 <_AddRecordToResponseList>;
    c97a:	30 b1       	[SP + 0x10] = R0;
    c97c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3c( 60) */
    c980:	33 e4 10 00 	R3 = [SP + 0x40];
    c984:	f7 b0       	[SP + 0xc] = R7;
    c986:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    c988:	01 e1 c8 3b 	R1.L = 0x3bc8;		/* (15304)	R1=0x3bc8(15304) */
    c98c:	13 30       	R2 = R3;
    c98e:	ff e3 39 9b 	CALL 0x0 <_AddRecordToResponseList>;
    c992:	00 00       	NOP;
    c994:	e0 a0       	R0 = [P4 + 0xc];
    c996:	e8 b0       	[P5 + 0xc] = R0;
    c998:	18 e4 37 00 	R0 = [P3 + 0xdc];
    c99c:	2e 20       	JUMP.S 0xc9f8 <_mDNSCoreReceive+0x1338>;
    c99e:	02 08       	CC = R2 == R0;
    c9a0:	20 14       	IF !CC JUMP 0xc9e0 <_mDNSCoreReceive+0x1320> (BP);
    c9a2:	eb a0       	R3 = [P5 + 0xc];
    c9a4:	0b 0c       	CC = R3 == 0x1;
    c9a6:	1d 14       	IF !CC JUMP 0xc9e0 <_mDNSCoreReceive+0x1320> (BP);
    c9a8:	2b e4 11 00 	R3 = [P5 + 0x44];
    c9ac:	27 60       	R7 = 0x4 (X);		/*		R7=0x4(  4) */
    c9ae:	3b 08       	CC = R3 == R7;
    c9b0:	18 14       	IF !CC JUMP 0xc9e0 <_mDNSCoreReceive+0x1320> (BP);
    c9b2:	05 32       	P0 = R5;
    c9b4:	00 91       	R0 = [P0];
    c9b6:	00 0c       	CC = R0 == 0x0;
    c9b8:	11 1c       	IF CC JUMP 0xc9da <_mDNSCoreReceive+0x131a> (BP);
    c9ba:	69 a2       	R1 = [P5 + 0x24];
    c9bc:	45 30       	R0 = P5;
    c9be:	21 64       	R1 += 0x4;		/* (  4) */
    c9c0:	32 e4 12 00 	R2 = [SP + 0x48];
    c9c4:	20 64       	R0 += 0x4;		/* (  4) */
    c9c6:	ff e3 1d 9b 	CALL 0x0 <_AddRecordToResponseList>;
    c9ca:	10 30       	R2 = R0;
    c9cc:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3bc8(15304) */
    c9d0:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    c9d2:	01 e1 f0 3b 	R1.L = 0x3bf0;		/* (15344)	R1=0x3bf0(15344) */
    c9d6:	ff e3 15 9b 	CALL 0x0 <_AddRecordToResponseList>;
    c9da:	01 68       	P1 = 0x0 (X);		/*		P1=0x0(  0) */
    c9dc:	e9 bc       	[P5 + 0xc] = P1;
    c9de:	0e 20       	JUMP.S 0xc9fa <_mDNSCoreReceive+0x133a>;
    c9e0:	82 52       	R2 = R2 - R0;
    c9e2:	eb a0       	R3 = [P5 + 0xc];
    c9e4:	cb 40       	R3 *= R1;
    c9e6:	da 50       	R3 = R2 + R3;
    c9e8:	0b 09       	CC = R3 <= R1;
    c9ea:	08 1c       	IF CC JUMP 0xc9fa <_mDNSCoreReceive+0x133a> (BP);
    c9ec:	0a 68       	P2 = 0x1 (X);		/*		P2=0x1(  1) */
    c9ee:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
    c9f0:	ea bc       	[P5 + 0xc] = P2;
    c9f2:	29 e6 11 00 	[P5 + 0x44] = R1;
    c9f6:	f8 67       	R0 += -0x1;		/* ( -1) */
    c9f8:	28 b3       	[P5 + 0x30] = R0;
    c9fa:	43 30       	R0 = P3;
    c9fc:	4d 30       	R1 = P5;
    c9fe:	ff e3 15 af 	CALL 0x2828 <_SetNextCacheCheckTimeForRecord>;
    ca02:	00 00       	NOP;
    ca04:	6d 91       	P5 = [P5];
    ca06:	45 0c       	CC = P5 == 0x0;
    ca08:	6e 17       	IF !CC JUMP 0xc8e4 <_mDNSCoreReceive+0x1224> (BP);
    ca0a:	60 a3       	R0 = [P4 + 0x34];
    ca0c:	00 0c       	CC = R0 == 0x0;
    ca0e:	17 1c       	IF CC JUMP 0xca3c <_mDNSCoreReceive+0x137c> (BP);
    ca10:	62 a1       	R2 = [P4 + 0x14];
    ca12:	21 a2       	R1 = [P4 + 0x20];
    ca14:	33 e4 11 00 	R3 = [SP + 0x44];
    ca18:	f3 b0       	[SP + 0xc] = R3;
    ca1a:	43 30       	R0 = P3;
    ca1c:	ff e3 58 ad 	CALL 0x24cc <_CheckForSoonToExpireRecords>;
    ca20:	10 30       	R2 = R0;
    ca22:	60 b3       	[P4 + 0x34] = R0;
    ca24:	00 0c       	CC = R0 == 0x0;
    ca26:	06 14       	IF !CC JUMP 0xca32 <_mDNSCoreReceive+0x1372> (BP);
    ca28:	43 30       	R0 = P3;
    ca2a:	4c 30       	R1 = P4;
    ca2c:	ff e3 7e f3 	CALL 0xb128 <_CacheRecordDeferredAdd>;
    ca30:	06 20       	JUMP.S 0xca3c <_mDNSCoreReceive+0x137c>;
    ca32:	43 30       	R0 = P3;
    ca34:	31 e4 11 00 	R1 = [SP + 0x44];
    ca38:	ff e3 e4 ae 	CALL 0x2800 <_ScheduleNextCacheCheckTime>;
    ca3c:	34 e5 58 02 	P4 = [SP + 0x960];
    ca40:	4c 0c       	CC = P4 == 0x1;
    ca42:	27 17       	IF !CC JUMP 0xc890 <_mDNSCoreReceive+0x11d0> (BP);
    ca44:	67 32       	P4 = FP;
    ca46:	3e 32       	FP = R6;
    ca48:	34 30       	R6 = R4;
    ca4a:	34 e4 15 00 	R4 = [SP + 0x54];
    ca4e:	b0 e4 58 00 	R0 = B[SP + 0x58] (Z);
    ca52:	2a e1 84 7c 	P2 = 0x7c84 (X);		/*		P2=0x7c84(31876) */
    ca56:	34 e6 16 00 	[SP + 0x58] = R4;
    ca5a:	05 60       	R5 = 0x0 (X);		/*		R5=0x0(  0) */
    ca5c:	40 4f       	R0 <<= 0x8;
    ca5e:	93 5a       	P2 = P3 + P2;
    ca60:	26 30       	R4 = R6;
    ca62:	6b 32       	P5 = P3;
    ca64:	35 e6 15 00 	[SP + 0x54] = R5;
    ca68:	30 e6 1c 00 	[SP + 0x70] = R0;
    ca6c:	32 e7 18 00 	[SP + 0x60] = P2;
    ca70:	74 30       	R6 = P4;
    ca72:	37 e7 1b 00 	[SP + 0x6c] = FP;
    ca76:	d8 21       	JUMP.S 0xce26 <_mDNSCoreReceive+0x1766>;
    ca78:	28 e1 18 04 	P0 = 0x418 (X);		/*		P0=0x418(1048) */
    ca7c:	37 e4 16 00 	R7 = [SP + 0x58];
    ca80:	30 5a       	P0 = P0 + SP;
    ca82:	f7 b0       	[SP + 0xc] = R7;
    ca84:	30 bd       	[SP + 0x10] = P0;
    ca86:	06 30       	R0 = R6;
    ca88:	31 e4 13 00 	R1 = [SP + 0x4c];
    ca8c:	14 30       	R2 = R4;
    ca8e:	ff e3 b9 9a 	CALL 0x0 <_AddRecordToResponseList>;
    ca92:	30 e6 13 00 	[SP + 0x4c] = R0;
    ca96:	00 0c       	CC = R0 == 0x0;
    ca98:	c2 19       	IF CC JUMP 0xce1c <_mDNSCoreReceive+0x175c>;
    ca9a:	16 32       	P2 = R6;
    ca9c:	28 e1 18 04 	P0 = 0x418 (X);		/*		P0=0x418(1048) */
    caa0:	30 5a       	P0 = P0 + SP;
    caa2:	31 e5 1b 00 	P1 = [SP + 0x6c];
    caa6:	32 e4 1c 00 	R2 = [SP + 0x70];
    caaa:	b1 e4 6b 00 	R1 = B[SP + 0x6b] (Z);
    caae:	51 56       	R1 = R1 | R2;
    cab0:	41 0c       	CC = P1 == 0x0;
    cab2:	02 02       	R2 = CC;
    cab4:	28 e4 4c 00 	R0 = [P5 + 0x130];
    cab8:	f0 bc       	[SP + 0xc] = P0;
    caba:	32 b1       	[SP + 0x10] = R2;
    cabc:	12 95       	R2 = W[P2] (Z);
    cabe:	ff e3 43 aa 	CALL 0x1f44 <_ExpectingUnicastResponseForQuestion.clone.11>;
    cac2:	18 32       	P3 = R0;
    cac4:	43 0c       	CC = P3 == 0x0;
    cac6:	ab 19       	IF CC JUMP 0xce1c <_mDNSCoreReceive+0x175c>;
    cac8:	28 e1 4c 05 	P0 = 0x54c (X);		/*		P0=0x54c(1356) */
    cacc:	30 5a       	P0 = P0 + SP;
    cace:	40 30       	R0 = P0;
    cad0:	ff e3 98 9a 	CALL 0x0 <_AddRecordToResponseList>;
    cad4:	41 e1 d5 20 	R1.H = 0x20d5;		/* (8405)	R1=0x20d50004(550830084) */
    cad8:	38 30       	R7 = R0;
    cada:	01 e1 39 6b 	R1.L = 0x6b39;		/* (27449)	R1=0x20d56b39(550857529) */
    cade:	ff e3 91 9a 	CALL 0x0 <_AddRecordToResponseList>;
    cae2:	21 e1 f3 01 	R1 = 0x1f3 (X);		/*		R1=0x1f3(499) */
    cae6:	30 4e       	R0 >>= 0x6;
    cae8:	c8 40       	R0 *= R1;
    caea:	29 e1 4c 05 	P1 = 0x54c (X);		/*		P1=0x54c(1356) */
    caee:	07 52       	R0 = R7 - R0;
    caf0:	30 e6 17 00 	[SP + 0x5c] = R0;
    caf4:	71 5a       	P1 = P1 + SP;
    caf6:	f1 bc       	[SP + 0xc] = P1;
    caf8:	45 30       	R0 = P5;
    cafa:	31 e4 17 00 	R1 = [SP + 0x5c];
    cafe:	32 e4 07 01 	R2 = [SP + 0x41c];
    cb02:	ff e3 71 ac 	CALL 0x23e4 <_CacheGroupForName>;
    cb06:	30 e6 11 00 	[SP + 0x44] = R0;
    cb0a:	00 0c       	CC = R0 == 0x0;
    cb0c:	04 1c       	IF CC JUMP 0xcb14 <_mDNSCoreReceive+0x1454> (BP);
    cb0e:	10 32       	P2 = R0;
    cb10:	94 ac       	P4 = [P2 + 0x8];
    cb12:	02 20       	JUMP.S 0xcb16 <_mDNSCoreReceive+0x1456>;
    cb14:	04 68       	P4 = 0x0 (X);		/*		P4=0x0(  0) */
    cb16:	07 68       	FP = 0x0 (X);		/*		FP=0x0(  0) */
    cb18:	1e 20       	JUMP.S 0xcb54 <_mDNSCoreReceive+0x1494>;
    cb1a:	44 30       	R0 = P4;
    cb1c:	20 64       	R0 += 0x4;		/* (  4) */
    cb1e:	4b 30       	R1 = P3;
    cb20:	ff e3 70 9a 	CALL 0x0 <_AddRecordToResponseList>;
    cb24:	00 0c       	CC = R0 == 0x0;
    cb26:	15 1c       	IF CC JUMP 0xcb50 <_mDNSCoreReceive+0x1490> (BP);
    cb28:	28 e4 37 00 	R0 = [P5 + 0xdc];
    cb2c:	21 a3       	R1 = [P4 + 0x30];
    cb2e:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0x54c */
    cb32:	41 52       	R1 = R1 - R0;
    cb34:	08 e1 00 00 	P0.L = 0x0;		/* (  0)	P0=0x0 <_AddRecordToResponseList> */
    cb38:	e0 a0       	R0 = [P4 + 0xc];
    cb3a:	02 91       	R2 = [P0];
    cb3c:	d0 40       	R0 *= R2;
    cb3e:	01 50       	R0 = R1 + R0;
    cb40:	00 0d       	CC = R0 <= 0x0;
    cb42:	0b 14       	IF !CC JUMP 0xcb58 <_mDNSCoreReceive+0x1498> (BP);
    cb44:	21 e1 f0 00 	R1 = 0xf0 (X);		/*		R1=0xf0(240) */
    cb48:	a0 e4 04 00 	R0 = B[P4 + 0x4] (Z);
    cb4c:	08 08       	CC = R0 == R1;
    cb4e:	fc 07       	IF CC FP = P4;
    cb50:	00 00       	NOP;
    cb52:	64 91       	P4 = [P4];
    cb54:	44 0c       	CC = P4 == 0x0;
    cb56:	e2 17       	IF !CC JUMP 0xcb1a <_mDNSCoreReceive+0x145a> (BP);
    cb58:	32 e4 16 00 	R2 = [SP + 0x58];
    cb5c:	02 0c       	CC = R2 == 0x0;
    cb5e:	4c 14       	IF !CC JUMP 0xcbf6 <_mDNSCoreReceive+0x1536> (BP);
    cb60:	70 e4 26 03 	R0 = W[SP + 0x64c] (Z);
    cb64:	33 60       	R3 = 0x6 (X);		/*		R3=0x6(  6) */
    cb66:	18 08       	CC = R0 == R3;
    cb68:	47 18       	IF CC JUMP 0xcbf6 <_mDNSCoreReceive+0x1536>;
    cb6a:	28 e1 4c 05 	P0 = 0x54c (X);		/*		P0=0x54c(1356) */
    cb6e:	30 5a       	P0 = P0 + SP;
    cb70:	40 30       	R0 = P0;
    cb72:	ff e3 47 9a 	CALL 0x0 <_AddRecordToResponseList>;
    cb76:	00 0c       	CC = R0 == 0x0;
    cb78:	3f 1c       	IF CC JUMP 0xcbf6 <_mDNSCoreReceive+0x1536> (BP);
    cb7a:	98 e5 53 02 	R0 = B[P3 + 0x253] (X);
    cb7e:	00 0c       	CC = R0 == 0x0;
    cb80:	23 1c       	IF CC JUMP 0xcbc6 <_mDNSCoreReceive+0x1506> (BP);
    cb82:	44 0c       	CC = P4 == 0x0;
    cb84:	21 14       	IF !CC JUMP 0xcbc6 <_mDNSCoreReceive+0x1506> (BP);
    cb86:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x7c84 */
    cb8a:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    cb8e:	10 91       	R0 = [P2];
    cb90:	00 0c       	CC = R0 == 0x0;
    cb92:	11 1c       	IF CC JUMP 0xcbb4 <_mDNSCoreReceive+0x14f4> (BP);
    cb94:	70 e5 26 03 	R0 = W[SP + 0x64c] (X);
    cb98:	ff e3 34 9a 	CALL 0x0 <_AddRecordToResponseList>;
    cb9c:	29 e1 4c 05 	P1 = 0x54c (X);		/*		P1=0x54c(1356) */
    cba0:	f0 b0       	[SP + 0xc] = R0;
    cba2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xf0(240) */
    cba6:	71 5a       	P1 = P1 + SP;
    cba8:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    cbaa:	01 e1 10 3c 	R1.L = 0x3c10;		/* (15376)	R1=0x3c10(15376) */
    cbae:	51 30       	R2 = P1;
    cbb0:	ff e3 28 9a 	CALL 0x0 <_AddRecordToResponseList>;
    cbb4:	45 30       	R0 = P5;
    cbb6:	2b e7 4e 00 	[P5 + 0x138] = P3;
    cbba:	ff e3 ff f2 	CALL 0xb1b8 <_GenerateNegativeResponse>;
    cbbe:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    cbc0:	28 e6 4e 00 	[P5 + 0x138] = R0;
    cbc4:	2c 21       	JUMP.S 0xce1c <_mDNSCoreReceive+0x175c>;
    cbc6:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    cbca:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    cbce:	10 91       	R0 = [P2];
    cbd0:	00 0c       	CC = R0 == 0x0;
    cbd2:	25 1d       	IF CC JUMP 0xce1c <_mDNSCoreReceive+0x175c> (BP);
    cbd4:	70 e5 26 03 	R0 = W[SP + 0x64c] (X);
    cbd8:	ff e3 14 9a 	CALL 0x0 <_AddRecordToResponseList>;
    cbdc:	2a e1 4c 05 	P2 = 0x54c (X);		/*		P2=0x54c(1356) */
    cbe0:	f0 b0       	[SP + 0xc] = R0;
    cbe2:	b2 5a       	P2 = P2 + SP;
    cbe4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3c10(15376) */
    cbe8:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    cbea:	01 e1 54 3c 	R1.L = 0x3c54;		/* (15444)	R1=0x3c54(15444) */
    cbee:	52 30       	R2 = P2;
    cbf0:	ff e3 08 9a 	CALL 0x0 <_AddRecordToResponseList>;
    cbf4:	14 21       	JUMP.S 0xce1c <_mDNSCoreReceive+0x175c>;
    cbf6:	44 0c       	CC = P4 == 0x0;
    cbf8:	12 15       	IF !CC JUMP 0xce1c <_mDNSCoreReceive+0x175c> (BP);
    cbfa:	30 e4 07 01 	R0 = [SP + 0x41c];
    cbfe:	30 e6 12 00 	[SP + 0x48] = R0;
    cc02:	70 e4 26 03 	R0 = W[SP + 0x64c] (Z);
    cc06:	31 60       	R1 = 0x6 (X);		/*		R1=0x6(  6) */
    cc08:	08 08       	CC = R0 == R1;
    cc0a:	12 14       	IF !CC JUMP 0xcc2e <_mDNSCoreReceive+0x156e> (BP);
    cc0c:	28 e1 4c 05 	P0 = 0x54c (X);		/*		P0=0x54c(1356) */
    cc10:	30 5a       	P0 = P0 + SP;
    cc12:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x6(  6) */
    cc16:	40 30       	R0 = P0;
    cc18:	01 e1 94 27 	R1.L = 0x2794;		/* (10132)	R1=0x2794(10132) */
    cc1c:	ff e3 f2 99 	CALL 0x0 <_AddRecordToResponseList>;
    cc20:	00 0c       	CC = R0 == 0x0;
    cc22:	25 e1 a3 02 	R5 = 0x2a3 (X);		/*		R5=0x2a3(675) */
    cc26:	e0 61       	R0 = 0x3c (X);		/*		R0=0x3c( 60) */
    cc28:	3d 4f       	R5 <<= 0x7;
    cc2a:	28 07       	IF CC R5 = R0;
    cc2c:	02 20       	JUMP.S 0xcc30 <_mDNSCoreReceive+0x1570>;
    cc2e:	e5 61       	R5 = 0x3c (X);		/*		R5=0x3c( 60) */
    cc30:	0e 32       	P1 = R6;
    cc32:	08 a5       	R0 = W[P1 + 0x8] (Z);
    cc34:	00 0c       	CC = R0 == 0x0;
    cc36:	67 1c       	IF CC JUMP 0xcd04 <_mDNSCoreReceive+0x1644> (BP);
    cc38:	06 30       	R0 = R6;
    cc3a:	0c 30       	R1 = R4;
    cc3c:	ff e3 e2 99 	CALL 0x0 <_AddRecordToResponseList>;
    cc40:	30 e6 13 00 	[SP + 0x4c] = R0;
    cc44:	00 0c       	CC = R0 == 0x0;
    cc46:	5f 18       	IF CC JUMP 0xcd04 <_mDNSCoreReceive+0x1644>;
    cc48:	20 e1 a0 ff 	R0 = -0x60 (X);		/*		R0=0xffffffa0(-96) */
    cc4c:	b0 e6 14 00 	B[SP + 0x14] = R0;
    cc50:	f4 b0       	[SP + 0xc] = R4;
    cc52:	32 e5 16 00 	P2 = [SP + 0x58];
    cc56:	30 e5 18 00 	P0 = [SP + 0x60];
    cc5a:	45 30       	R0 = P5;
    cc5c:	0e 30       	R1 = R6;
    cc5e:	32 bd       	[SP + 0x10] = P2;
    cc60:	b0 bd       	[SP + 0x18] = P0;
    cc62:	32 e4 13 00 	R2 = [SP + 0x4c];
    cc66:	ff e3 cd 99 	CALL 0x0 <_AddRecordToResponseList>;
    cc6a:	30 e6 13 00 	[SP + 0x4c] = R0;
    cc6e:	00 0c       	CC = R0 == 0x0;
    cc70:	45 1c       	IF CC JUMP 0xccfa <_mDNSCoreReceive+0x163a> (BP);
    cc72:	21 e1 f0 00 	R1 = 0xf0 (X);		/*		R1=0xf0(240) */
    cc76:	a8 e4 88 7c 	R0 = B[P5 + 0x7c88] (Z);
    cc7a:	08 08       	CC = R0 == R1;
    cc7c:	3f 1c       	IF CC JUMP 0xccfa <_mDNSCoreReceive+0x163a> (BP);
    cc7e:	32 60       	R2 = 0x6 (X);		/*		R2=0x6(  6) */
    cc80:	68 e4 45 3e 	R0 = W[P5 + 0x7c8a] (Z);
    cc84:	10 08       	CC = R0 == R2;
    cc86:	3a 14       	IF !CC JUMP 0xccfa <_mDNSCoreReceive+0x163a> (BP);
    cc88:	2a e5 2a 1f 	P2 = [P5 + 0x7ca8];
    cc8c:	29 e4 24 1f 	R1 = [P5 + 0x7c90];
    cc90:	10 e4 85 00 	R0 = [P2 + 0x214];
    cc94:	08 0a       	CC = R0 <= R1 (IU);
    cc96:	06 1c       	IF CC JUMP 0xcca2 <_mDNSCoreReceive+0x15e2> (BP);
    cc98:	2a e5 29 1f 	P2 = [P5 + 0x7ca4];
    cc9c:	12 99       	R2 = B[P2] (Z);
    cc9e:	02 0c       	CC = R2 == 0x0;
    cca0:	01 06       	IF !CC R0 = R1;
    cca2:	85 09       	CC = R5 < R0 (IU);
    cca4:	28 07       	IF CC R5 = R0;
    cca6:	70 e4 26 03 	R0 = W[SP + 0x64c] (Z);
    ccaa:	33 60       	R3 = 0x6 (X);		/*		R3=0x6(  6) */
    ccac:	18 08       	CC = R0 == R3;
    ccae:	26 14       	IF !CC JUMP 0xccfa <_mDNSCoreReceive+0x163a> (BP);
    ccb0:	28 e1 4c 05 	P0 = 0x54c (X);		/*		P0=0x54c(1356) */
    ccb4:	30 5a       	P0 = P0 + SP;
    ccb6:	40 30       	R0 = P0;
    ccb8:	ff e3 a4 99 	CALL 0x0 <_AddRecordToResponseList>;
    ccbc:	08 30       	R1 = R0;
    ccbe:	28 e4 29 1f 	R0 = [P5 + 0x7ca4];
    ccc2:	31 e6 10 00 	[SP + 0x40] = R1;
    ccc6:	ff e3 9d 99 	CALL 0x0 <_AddRecordToResponseList>;
    ccca:	31 e4 10 00 	R1 = [SP + 0x40];
    ccce:	21 32       	P4 = R1;
    ccd0:	38 30       	R7 = R0;
    ccd2:	fc 6f       	P4 += -0x1;		/* ( -1) */
    ccd4:	44 30       	R0 = P4;
    ccd6:	38 09       	CC = R0 <= R7;
    ccd8:	11 1c       	IF CC JUMP 0xccfa <_mDNSCoreReceive+0x163a> (BP);
    ccda:	28 e1 4c 05 	P0 = 0x54c (X);		/*		P0=0x54c(1356) */
    ccde:	30 5a       	P0 = P0 + SP;
    cce0:	79 52       	R1 = R1 - R7;
    cce2:	40 30       	R0 = P0;
    cce4:	ff e3 8e 99 	CALL 0x0 <_AddRecordToResponseList>;
    cce8:	29 e4 29 1f 	R1 = [P5 + 0x7ca4];
    ccec:	ff e3 8a 99 	CALL 0x0 <_AddRecordToResponseList>;
    ccf0:	00 0c       	CC = R0 == 0x0;
    ccf2:	04 1c       	IF CC JUMP 0xccfa <_mDNSCoreReceive+0x163a> (BP);
    ccf4:	44 30       	R0 = P4;
    ccf6:	f8 53       	R7 = R0 - R7;
    ccf8:	02 20       	JUMP.S 0xccfc <_mDNSCoreReceive+0x163c>;
    ccfa:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    ccfc:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    ccfe:	a8 e6 88 7c 	B[P5 + 0x7c88] = R0;
    cd02:	02 20       	JUMP.S 0xcd06 <_mDNSCoreReceive+0x1646>;
    cd04:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    cd06:	47 0c       	CC = FP == 0x0;
    cd08:	09 1c       	IF CC JUMP 0xcd1a <_mDNSCoreReceive+0x165a> (BP);
    cd0a:	21 e1 10 0e 	R1 = 0xe10 (X);		/*		R1=0xe10(3600) */
    cd0e:	f8 a0       	R0 = [FP + 0xc];
    cd10:	08 4f       	R0 <<= 0x1;
    cd12:	85 09       	CC = R5 < R0 (IU);
    cd14:	28 07       	IF CC R5 = R0;
    cd16:	0d 0a       	CC = R5 <= R1 (IU);
    cd18:	29 06       	IF !CC R5 = R1;
    cd1a:	30 e4 14 00 	R0 = [SP + 0x50];
    cd1e:	0d 30       	R1 = R5;
    cd20:	ff e3 34 9a 	CALL 0x188 <_GetEffectiveTTL>;
    cd24:	30 e6 19 00 	[SP + 0x64] = R0;
    cd28:	47 0c       	CC = FP == 0x0;
    cd2a:	10 14       	IF !CC JUMP 0xcd4a <_mDNSCoreReceive+0x168a> (BP);
    cd2c:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x54c */
    cd30:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    cd34:	49 91       	P1 = [P1];
    cd36:	28 e1 4c 05 	P0 = 0x54c (X);		/*		P0=0x54c(1356) */
    cd3a:	30 5b       	P4 = P0 + SP;
    cd3c:	2f e1 f3 01 	FP = 0x1f3 (X);		/*		FP=0x1f3(499) */
    cd40:	31 e7 1d 00 	[SP + 0x74] = P1;
    cd44:	35 e4 17 00 	R5 = [SP + 0x5c];
    cd48:	23 20       	JUMP.S 0xcd8e <_mDNSCoreReceive+0x16ce>;
    cd4a:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    cd4c:	32 e5 19 00 	P2 = [SP + 0x64];
    cd50:	28 e4 37 00 	R0 = [P5 + 0xdc];
    cd54:	38 b3       	[FP + 0x30] = R0;
    cd56:	45 30       	R0 = P5;
    cd58:	4f 30       	R1 = FP;
    cd5a:	fa bc       	[FP + 0xc] = P2;
    cd5c:	3f e6 11 00 	[FP + 0x44] = R7;
    cd60:	ff e3 64 ad 	CALL 0x2828 <_SetNextCacheCheckTimeForRecord>;
    cd64:	28 e4 37 00 	R0 = [P5 + 0xdc];
    cd68:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0x54c */
    cd6c:	d8 b0       	[P3 + 0xc] = R0;
    cd6e:	18 e6 2b 00 	[P3 + 0xac] = R0;
    cd72:	08 e1 00 00 	P0.L = 0x0;		/* (  0)	P0=0x0 <_AddRecordToResponseList> */
    cd76:	00 91       	R0 = [P0];
    cd78:	21 e1 10 0e 	R1 = 0xe10 (X);		/*		R1=0xe10(3600) */
    cd7c:	c8 40       	R0 *= R1;
    cd7e:	18 b1       	[P3 + 0x10] = R0;
    cd80:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    cd82:	df b1       	[P3 + 0x1c] = R7;
    cd84:	1f e6 2a 00 	[P3 + 0xa8] = R7;
    cd88:	98 e6 d8 00 	B[P3 + 0xd8] = R0;
    cd8c:	48 20       	JUMP.S 0xce1c <_mDNSCoreReceive+0x175c>;
    cd8e:	70 e5 26 03 	R0 = W[SP + 0x64c] (X);
    cd92:	31 e5 12 00 	P1 = [SP + 0x48];
    cd96:	30 b6       	W[SP + 0x10] = R0;
    cd98:	32 e5 19 00 	P2 = [SP + 0x64];
    cd9c:	70 e5 27 03 	R0 = W[SP + 0x64e] (X);
    cda0:	b0 b6       	W[SP + 0x14] = R0;
    cda2:	30 e4 1d 00 	R0 = [SP + 0x74];
    cda6:	f1 bc       	[SP + 0xc] = P1;
    cda8:	b2 bd       	[SP + 0x18] = P2;
    cdaa:	f0 b1       	[SP + 0x1c] = R0;
    cdac:	18 e4 32 00 	R0 = [P3 + 0xc8];
    cdb0:	30 b2       	[SP + 0x20] = R0;
    cdb2:	45 30       	R0 = P5;
    cdb4:	31 e4 18 00 	R1 = [SP + 0x60];
    cdb8:	54 30       	R2 = P4;
    cdba:	ff e3 a1 ba 	CALL 0x42fc <_MakeNegativeCacheRecord>;
    cdbe:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    cdc0:	f1 b0       	[SP + 0xc] = R1;
    cdc2:	32 e4 11 00 	R2 = [SP + 0x44];
    cdc6:	45 30       	R0 = P5;
    cdc8:	0d 30       	R1 = R5;
    cdca:	ff e3 4f f2 	CALL 0xb268 <_CreateNewCacheEntry>;
    cdce:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    cdd0:	aa e6 88 7c 	B[P5 + 0x7c88] = R2;
    cdd4:	07 0c       	CC = R7 == 0x0;
    cdd6:	23 1c       	IF CC JUMP 0xce1c <_mDNSCoreReceive+0x175c> (BP);
    cdd8:	ff 67       	R7 += -0x1;		/* ( -1) */
    cdda:	20 99       	R0 = B[P4] (Z);
    cddc:	08 64       	R0 += 0x1;		/* (  1) */
    cdde:	00 32       	P0 = R0;
    cde0:	04 5b       	P4 = P4 + P0;
    cde2:	44 30       	R0 = P4;
    cde4:	ff e3 0e 99 	CALL 0x0 <_AddRecordToResponseList>;
    cde8:	30 e6 12 00 	[SP + 0x48] = R0;
    cdec:	44 30       	R0 = P4;
    cdee:	ff e3 09 99 	CALL 0x0 <_AddRecordToResponseList>;
    cdf2:	41 e1 d5 20 	R1.H = 0x20d5;		/* (8405)	R1=0x20d50000(550830080) */
    cdf6:	28 30       	R5 = R0;
    cdf8:	01 e1 39 6b 	R1.L = 0x6b39;		/* (27449)	R1=0x20d56b39(550857529) */
    cdfc:	ff e3 02 99 	CALL 0x0 <_AddRecordToResponseList>;
    ce00:	4f 30       	R1 = FP;
    ce02:	30 4e       	R0 >>= 0x6;
    ce04:	c8 40       	R0 *= R1;
    ce06:	45 53       	R5 = R5 - R0;
    ce08:	f4 bc       	[SP + 0xc] = P4;
    ce0a:	45 30       	R0 = P5;
    ce0c:	0d 30       	R1 = R5;
    ce0e:	32 e4 12 00 	R2 = [SP + 0x48];
    ce12:	ff e3 e9 aa 	CALL 0x23e4 <_CacheGroupForName>;
    ce16:	30 e6 11 00 	[SP + 0x44] = R0;
    ce1a:	ba 2f       	JUMP.S 0xcd8e <_mDNSCoreReceive+0x16ce>;
    ce1c:	32 e4 15 00 	R2 = [SP + 0x54];
    ce20:	0a 64       	R2 += 0x1;		/* (  1) */
    ce22:	32 e6 15 00 	[SP + 0x54] = R2;
    ce26:	06 32       	P0 = R6;
    ce28:	31 e4 15 00 	R1 = [SP + 0x54];
    ce2c:	80 a4       	R0 = W[P0 + 0x4] (Z);
    ce2e:	81 08       	CC = R1 < R0;
    ce30:	02 1c       	IF CC JUMP 0xce34 <_mDNSCoreReceive+0x1774> (BP);
    ce32:	63 25       	JUMP.S 0xd8f8 <_mDNSCoreReceive+0x2238>;
    ce34:	32 e4 13 00 	R2 = [SP + 0x4c];
    ce38:	02 0c       	CC = R2 == 0x0;
    ce3a:	02 14       	IF !CC JUMP 0xce3e <_mDNSCoreReceive+0x177e> (BP);
    ce3c:	5e 25       	JUMP.S 0xd8f8 <_mDNSCoreReceive+0x2238>;
    ce3e:	a2 09       	CC = R2 < R4 (IU);
    ce40:	1c 1e       	IF CC JUMP 0xca78 <_mDNSCoreReceive+0x13b8> (BP);
    ce42:	5b 25       	JUMP.S 0xd8f8 <_mDNSCoreReceive+0x2238>;
    ce44:	43 61       	R3 = 0x28 (X);		/*		R3=0x28( 40) */
    ce46:	18 08       	CC = R0 == R3;
    ce48:	02 18       	IF CC JUMP 0xce4c <_mDNSCoreReceive+0x178c>;
    ce4a:	f8 23       	JUMP.S 0xd63a <_mDNSCoreReceive+0x1f7a>;
    ce4c:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_AddRecordToResponseList>(  0) */
    ce50:	00 e1 c0 3c 	R0.L = 0x3cc0;		/* (15552)	R0=0x3cc0(15552) */
    ce54:	ff e3 d6 98 	CALL 0x0 <_AddRecordToResponseList>;
    ce58:	e8 42       	R0 = R5.L (Z);
    ce5a:	40 4e       	R0 >>= 0x8;
    ce5c:	b0 e6 50 00 	B[SP + 0x50] = R0;
    ce60:	b4 e4 58 00 	R4 = B[SP + 0x58] (Z);
    ce64:	b0 e4 6b 00 	R0 = B[SP + 0x6b] (Z);
    ce68:	44 4f       	R4 <<= 0x8;
    ce6a:	4e 30       	R1 = SP;
    ce6c:	22 e1 e0 08 	R2 = 0x8e0 (X);		/*		R2=0x8e0(2272) */
    ce70:	20 57       	R4 = R0 | R4;
    ce72:	11 50       	R0 = R1 + R2;
    ce74:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x6b39(27449) */
    ce78:	b5 e6 4c 00 	B[SP + 0x4c] = R5;
    ce7c:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    ce80:	e2 60       	R2 = 0x1c (X);		/*		R2=0x1c( 28) */
    ce82:	ff e3 bf 98 	CALL 0x0 <_AddRecordToResponseList>;
    ce86:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x54c */
    ce8a:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    ce8e:	10 91       	R0 = [P2];
    ce90:	00 0c       	CC = R0 == 0x0;
    ce92:	53 1c       	IF CC JUMP 0xcf38 <_mDNSCoreReceive+0x1878> (BP);
    ce94:	b0 e4 4c 00 	R0 = B[SP + 0x4c] (Z);
    ce98:	40 4f       	R0 <<= 0x8;
    ce9a:	b1 e4 50 00 	R1 = B[SP + 0x50] (Z);
    ce9e:	41 56       	R1 = R1 | R0;
    cea0:	09 34       	I1 = R1;
    cea2:	60 43       	R0 = R4.B (Z);
    cea4:	e1 42       	R1 = R4.L (Z);
    cea6:	40 4f       	R0 <<= 0x8;
    cea8:	41 4e       	R1 >>= 0x8;
    ceaa:	41 56       	R1 = R1 | R0;
    ceac:	01 34       	I0 = R1;
    ceae:	a3 a4       	R3 = W[P4 + 0x4] (Z);
    ceb0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    ceb4:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x3cc0(15552) */
    ceb8:	01 e1 10 36 	R1.L = 0x3610;		/* (13840)	R1=0x3610(13840) */
    cebc:	00 e1 0c 36 	R0.L = 0x360c;		/* (13836)	R0=0x360c(13836) */
    cec0:	0b 0c       	CC = R3 == 0x1;
    cec2:	e2 a4       	R2 = W[P4 + 0x6] (Z);
    cec4:	99 06       	IF !CC P3 = R1;
    cec6:	98 07       	IF CC P3 = R0;
    cec8:	0a 0c       	CC = R2 == 0x1;
    ceca:	81 06       	IF !CC P0 = R1;
    cecc:	80 07       	IF CC P0 = R0;
    cece:	21 a5       	R1 = W[P4 + 0x8] (Z);
    ced0:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x360c(13836) */
    ced4:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    ced8:	09 0c       	CC = R1 == 0x1;
    ceda:	09 e1 1c 36 	P1.L = 0x361c;		/* (13852)	P1=0x361c */
    cede:	00 e1 14 36 	R0.L = 0x3614;		/* (13844)	R0=0x3614(13844) */
    cee2:	41 06       	IF !CC R0 = P1;
    cee4:	18 34       	I3 = R0;
    cee6:	52 e1 00 00 	I2.H = 0x0;		/* (  0)	I2=0x0 <_AddRecordToResponseList>(  0) */
    ceea:	60 a5       	R0 = W[P4 + 0xa] (Z);
    ceec:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    cef0:	12 e1 04 25 	I2.L = 0x2504;		/* (9476)	I2=0x2504(9476) */
    cef4:	08 0c       	CC = R0 == 0x1;
    cef6:	8a 32       	P1 = I2;
    cef8:	0a e1 24 36 	P2.L = 0x3624;		/* (13860)	P2=0x3624 */
    cefc:	d1 06       	IF !CC P2 = P1;
    cefe:	89 32       	P1 = I1;
    cf00:	f1 bc       	[SP + 0xc] = P1;
    cf02:	88 32       	P1 = I0;
    cf04:	71 bd       	[SP + 0x14] = P1;
    cf06:	70 b3       	[SP + 0x34] = R0;
    cf08:	31 e5 6a 02 	P1 = [SP + 0x9a8];
    cf0c:	f1 b2       	[SP + 0x2c] = R1;
    cf0e:	44 30       	R0 = P4;
    cf10:	8b 30       	R1 = I3;
    cf12:	60 64       	R0 += 0xc;		/* ( 12) */
    cf14:	06 52       	R0 = R6 - R0;
    cf16:	31 b3       	[SP + 0x30] = R1;
    cf18:	72 b2       	[SP + 0x24] = R2;
    cf1a:	f0 b3       	[SP + 0x3c] = R0;
    cf1c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3610(13840) */
    cf20:	37 bd       	[SP + 0x10] = FP;
    cf22:	b1 bd       	[SP + 0x18] = P1;
    cf24:	f3 b1       	[SP + 0x1c] = R3;
    cf26:	33 be       	[SP + 0x20] = P3;
    cf28:	b0 be       	[SP + 0x28] = P0;
    cf2a:	b2 bf       	[SP + 0x38] = P2;
    cf2c:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    cf2e:	01 e1 d8 3c 	R1.L = 0x3cd8;		/* (15576)	R1=0x3cd8(15576) */
    cf32:	17 30       	R2 = R7;
    cf34:	ff e3 66 98 	CALL 0x0 <_AddRecordToResponseList>;
    cf38:	32 e4 6a 02 	R2 = [SP + 0x9a8];
    cf3c:	02 0c       	CC = R2 == 0x0;
    cf3e:	02 14       	IF !CC JUMP 0xcf42 <_mDNSCoreReceive+0x1882> (BP);
    cf40:	dc 24       	JUMP.S 0xd8f8 <_mDNSCoreReceive+0x2238>;
    cf42:	2a e5 28 0a 	P2 = [P5 + 0x28a0];
    cf46:	42 0c       	CC = P2 == 0x0;
    cf48:	02 14       	IF !CC JUMP 0xcf4c <_mDNSCoreReceive+0x188c> (BP);
    cf4a:	d7 24       	JUMP.S 0xd8f8 <_mDNSCoreReceive+0x2238>;
    cf4c:	e1 42       	R1 = R4.L (Z);
    cf4e:	10 95       	R0 = W[P2] (Z);
    cf50:	01 08       	CC = R1 == R0;
    cf52:	02 18       	IF CC JUMP 0xcf56 <_mDNSCoreReceive+0x1896>;
    cf54:	d2 24       	JUMP.S 0xd8f8 <_mDNSCoreReceive+0x2238>;
    cf56:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x3624 */
    cf5a:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    cf5e:	10 91       	R0 = [P2];
    cf60:	00 0c       	CC = R0 == 0x0;
    cf62:	11 1c       	IF CC JUMP 0xcf84 <_mDNSCoreReceive+0x18c4> (BP);
    cf64:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x2(  2) */
    cf68:	00 e1 64 11 	R0.L = 0x1164;		/* (4452)	R0=0x1164(4452) */
    cf6c:	f0 b0       	[SP + 0xc] = R0;
    cf6e:	37 b1       	[SP + 0x10] = R7;
    cf70:	b5 b6       	W[SP + 0x14] = R5;
    cf72:	b7 bd       	[SP + 0x18] = FP;
    cf74:	b4 b7       	W[SP + 0x1c] = R4;
    cf76:	34 be       	[SP + 0x20] = P4;
    cf78:	76 b2       	[SP + 0x24] = R6;
    cf7a:	45 30       	R0 = P5;
    cf7c:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    cf7e:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    cf80:	ff e3 40 98 	CALL 0x0 <_AddRecordToResponseList>;
    cf84:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
    cf86:	44 30       	R0 = P4;
    cf88:	0e 30       	R1 = R6;
    cf8a:	ff e3 3b 98 	CALL 0x0 <_AddRecordToResponseList>;
    cf8e:	10 30       	R2 = R0;
    cf90:	00 0c       	CC = R0 == 0x0;
    cf92:	46 18       	IF CC JUMP 0xd01e <_mDNSCoreReceive+0x195e>;
    cf94:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    cf96:	30 b1       	[SP + 0x10] = R0;
    cf98:	20 e1 80 ff 	R0 = -0x80 (X);		/*		R0=0xffffff80(-128) */
    cf9c:	2a e1 84 7c 	P2 = 0x7c84 (X);		/*		P2=0x7c84(31876) */
    cfa0:	b0 e6 14 00 	B[SP + 0x14] = R0;
    cfa4:	95 5a       	P2 = P5 + P2;
    cfa6:	f6 b0       	[SP + 0xc] = R6;
    cfa8:	b2 bd       	[SP + 0x18] = P2;
    cfaa:	45 30       	R0 = P5;
    cfac:	4c 30       	R1 = P4;
    cfae:	ff e3 29 98 	CALL 0x0 <_AddRecordToResponseList>;
    cfb2:	00 0c       	CC = R0 == 0x0;
    cfb4:	30 1c       	IF CC JUMP 0xd014 <_mDNSCoreReceive+0x1954> (BP);
    cfb6:	23 e1 f0 00 	R3 = 0xf0 (X);		/*		R3=0xf0(240) */
    cfba:	a8 e4 88 7c 	R0 = B[P5 + 0x7c88] (Z);
    cfbe:	18 08       	CC = R0 == R3;
    cfc0:	2a 1c       	IF CC JUMP 0xd014 <_mDNSCoreReceive+0x1954> (BP);
    cfc2:	4c 61       	R4 = 0x29 (X);		/*		R4=0x29( 41) */
    cfc4:	68 e4 45 3e 	R0 = W[P5 + 0x7c8a] (Z);
    cfc8:	20 08       	CC = R0 == R4;
    cfca:	25 14       	IF !CC JUMP 0xd014 <_mDNSCoreReceive+0x1954> (BP);
    cfcc:	28 e4 2a 1f 	R0 = [P5 + 0x7ca8];
    cfd0:	20 64       	R0 += 0x4;		/* (  4) */
    cfd2:	6c e4 4a 3e 	R4 = W[P5 + 0x7c94] (Z);
    cfd6:	28 e1 e0 08 	P0 = 0x8e0 (X);		/*		P0=0x8e0(2272) */
    cfda:	20 51       	R4 = R0 + R4;
    cfdc:	18 32       	P3 = R0;
    cfde:	05 60       	R5 = 0x0 (X);		/*		R5=0x0(  0) */
    cfe0:	c6 5b       	FP = SP + P0;
    cfe2:	15 20       	JUMP.S 0xd00c <_mDNSCoreReceive+0x194c>;
    cfe4:	00 00       	NOP;
    cfe6:	18 95       	R0 = W[P3] (Z);
    cfe8:	10 0c       	CC = R0 == 0x2;
    cfea:	03 14       	IF !CC JUMP 0xcff0 <_mDNSCoreReceive+0x1930> (BP);
    cfec:	5d a0       	R5 = [P3 + 0x4];
    cfee:	0e 20       	JUMP.S 0xd00a <_mDNSCoreReceive+0x194a>;
    cff0:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
    cff2:	08 08       	CC = R0 == R1;
    cff4:	0b 14       	IF !CC JUMP 0xd00a <_mDNSCoreReceive+0x194a> (BP);
    cff6:	98 e4 04 00 	R0 = B[P3 + 0x4] (Z);
    cffa:	00 0c       	CC = R0 == 0x0;
    cffc:	07 14       	IF !CC JUMP 0xd00a <_mDNSCoreReceive+0x194a> (BP);
    cffe:	4b 30       	R1 = P3;
    d000:	21 64       	R1 += 0x4;		/* (  4) */
    d002:	47 30       	R0 = FP;
    d004:	e2 60       	R2 = 0x1c (X);		/*		R2=0x1c( 28) */
    d006:	ff e3 fd 97 	CALL 0x0 <_AddRecordToResponseList>;
    d00a:	03 6d       	P3 += 0x20;		/* ( 32) */
    d00c:	53 30       	R2 = P3;
    d00e:	a2 09       	CC = R2 < R4 (IU);
    d010:	ea 1f       	IF CC JUMP 0xcfe4 <_mDNSCoreReceive+0x1924> (BP);
    d012:	02 20       	JUMP.S 0xd016 <_mDNSCoreReceive+0x1956>;
    d014:	05 60       	R5 = 0x0 (X);		/*		R5=0x0(  0) */
    d016:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    d018:	a8 e6 88 7c 	B[P5 + 0x7c88] = R0;
    d01c:	02 20       	JUMP.S 0xd020 <_mDNSCoreReceive+0x1960>;
    d01e:	05 60       	R5 = 0x0 (X);		/*		R5=0x0(  0) */
    d020:	2a e1 8c 59 	P2 = 0x598c (X);		/*		P2=0x598c(22924) */
    d024:	95 5a       	P2 = P5 + P2;
    d026:	42 30       	R0 = P2;
    d028:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x598c */
    d02c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    d030:	2f e1 98 59 	FP = 0x5998 (X);		/*		FP=0x5998(22936) */
    d034:	fd 5b       	FP = P5 + FP;
    d036:	21 95       	R1 = W[P4] (Z);
    d038:	12 95       	R2 = W[P2] (Z);
    d03a:	ff e3 e3 97 	CALL 0x0 <_AddRecordToResponseList>;
    d03e:	05 0c       	CC = R5 == 0x0;
    d040:	05 1c       	IF CC JUMP 0xd04a <_mDNSCoreReceive+0x198a> (BP);
    d042:	30 e4 39 02 	R0 = [SP + 0x8e4];
    d046:	00 0c       	CC = R0 == 0x0;
    d048:	34 14       	IF !CC JUMP 0xd0b0 <_mDNSCoreReceive+0x19f0> (BP);
    d04a:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    d04e:	0a e1 04 00 	P2.L = 0x4;		/* (  4)	P2=0x4 */
    d052:	10 91       	R0 = [P2];
    d054:	23 e1 63 00 	R3 = 0x63 (X);		/*		R3=0x63( 99) */
    d058:	18 09       	CC = R0 <= R3;
    d05a:	26 14       	IF !CC JUMP 0xd0a6 <_mDNSCoreReceive+0x19e6> (BP);
    d05c:	08 64       	R0 += 0x1;		/* (  1) */
    d05e:	10 93       	[P2] = R0;
    d060:	b2 e4 4c 00 	R2 = B[SP + 0x4c] (Z);
    d064:	b0 e4 50 00 	R0 = B[SP + 0x50] (Z);
    d068:	42 4f       	R2 <<= 0x8;
    d06a:	90 56       	R2 = R0 | R2;
    d06c:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_AddRecordToResponseList>(  0) */
    d070:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4(  4) */
    d074:	05 0c       	CC = R5 == 0x0;
    d076:	00 e1 44 12 	R0.L = 0x1244;		/* (4676)	R0=0x1244(4676) */
    d07a:	01 e1 28 36 	R1.L = 0x3628;		/* (13864)	R1=0x3628(13864) */
    d07e:	08 06       	IF !CC R1 = R0;
    d080:	33 e4 39 02 	R3 = [SP + 0x8e4];
    d084:	03 0c       	CC = R3 == 0x0;
    d086:	43 e1 00 00 	R3.H = 0x0;		/* (  0)	R3=0x63( 99) */
    d08a:	03 e1 34 36 	R3.L = 0x3634;		/* (13876)	R3=0x3634(13876) */
    d08e:	03 07       	IF CC R0 = R3;
    d090:	31 b1       	[SP + 0x10] = R1;
    d092:	f2 b0       	[SP + 0xc] = R2;
    d094:	70 b1       	[SP + 0x14] = R0;
    d096:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3628(13864) */
    d09a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    d09c:	01 e1 5c 3d 	R1.L = 0x3d5c;		/* (15708)	R1=0x3d5c(15708) */
    d0a0:	17 30       	R2 = R7;
    d0a2:	ff e3 af 97 	CALL 0x0 <_AddRecordToResponseList>;
    d0a6:	00 00       	NOP;
    d0a8:	a8 e5 8f 59 	R0 = B[P5 + 0x598f] (X);
    d0ac:	00 4a       	BITSET (R0, 0x0);		/* bit  0 */
    d0ae:	2b 20       	JUMP.S 0xd104 <_mDNSCoreReceive+0x1a44>;
    d0b0:	24 e1 10 27 	R4 = 0x2710 (X);		/*		R4=0x2710(10000) */
    d0b4:	2b e4 a4 0d 	R3 = [P5 + 0x3690];
    d0b8:	22 a5       	R2 = W[P4 + 0x8] (Z);
    d0ba:	5a 50       	R1 = R2 + R3;
    d0bc:	21 09       	CC = R1 <= R4;
    d0be:	26 1c       	IF CC JUMP 0xd10a <_mDNSCoreReceive+0x1a4a> (BP);
    d0c0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x4 */
    d0c4:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    d0c8:	10 91       	R0 = [P2];
    d0ca:	25 e1 63 00 	R5 = 0x63 (X);		/*		R5=0x63( 99) */
    d0ce:	28 09       	CC = R0 <= R5;
    d0d0:	16 14       	IF !CC JUMP 0xd0fc <_mDNSCoreReceive+0x1a3c> (BP);
    d0d2:	08 64       	R0 += 0x1;		/* (  1) */
    d0d4:	10 93       	[P2] = R0;
    d0d6:	b0 e4 4c 00 	R0 = B[SP + 0x4c] (Z);
    d0da:	40 4f       	R0 <<= 0x8;
    d0dc:	b6 e4 50 00 	R6 = B[SP + 0x50] (Z);
    d0e0:	06 56       	R0 = R6 | R0;
    d0e2:	b1 b1       	[SP + 0x18] = R1;
    d0e4:	f0 b0       	[SP + 0xc] = R0;
    d0e6:	72 b1       	[SP + 0x14] = R2;
    d0e8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3d5c(15708) */
    d0ec:	33 b1       	[SP + 0x10] = R3;
    d0ee:	f4 b1       	[SP + 0x1c] = R4;
    d0f0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    d0f2:	01 e1 90 3d 	R1.L = 0x3d90;		/* (15760)	R1=0x3d90(15760) */
    d0f6:	17 30       	R2 = R7;
    d0f8:	ff e3 84 97 	CALL 0x0 <_AddRecordToResponseList>;
    d0fc:	28 60       	R0 = 0x5 (X);		/*		R0=0x5(  5) */
    d0fe:	a9 e5 8f 59 	R1 = B[P5 + 0x598f] (X);
    d102:	01 56       	R0 = R1 | R0;
    d104:	a8 e6 8f 59 	B[P5 + 0x598f] = R0;
    d108:	7d 22       	JUMP.S 0xd602 <_mDNSCoreReceive+0x1f42>;
    d10a:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    d10e:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    d112:	10 91       	R0 = [P2];
    d114:	00 0c       	CC = R0 == 0x0;
    d116:	15 1c       	IF CC JUMP 0xd140 <_mDNSCoreReceive+0x1a80> (BP);
    d118:	28 e1 e0 08 	P0 = 0x8e0 (X);		/*		P0=0x8e0(2272) */
    d11c:	86 5a       	P2 = SP + P0;
    d11e:	42 30       	R0 = P2;
    d120:	60 64       	R0 += 0xc;		/* ( 12) */
    d122:	f0 b0       	[SP + 0xc] = R0;
    d124:	52 30       	R2 = P2;
    d126:	b0 e5 e1 08 	R0 = B[SP + 0x8e1] (X);
    d12a:	a2 6c       	P2 += 0x14;		/* ( 20) */
    d12c:	70 b1       	[SP + 0x14] = R0;
    d12e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3d90(15760) */
    d132:	22 64       	R2 += 0x4;		/* (  4) */
    d134:	32 bd       	[SP + 0x10] = P2;
    d136:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    d138:	01 e1 e4 3d 	R1.L = 0x3de4;		/* (15844)	R1=0x3de4(15844) */
    d13c:	ff e3 62 97 	CALL 0x0 <_AddRecordToResponseList>;
    d140:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
    d144:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
    d148:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    d14a:	19 91       	R1 = [P3];
    d14c:	f0 4f       	R0 <<= 0x1e;
    d14e:	ff e3 59 97 	CALL 0x0 <_AddRecordToResponseList>;
    d152:	21 e1 a3 02 	R1 = 0x2a3 (X);		/*		R1=0x2a3(675) */
    d156:	39 4f       	R1 <<= 0x7;
    d158:	08 0a       	CC = R0 <= R1 (IU);
    d15a:	01 06       	IF !CC R0 = R1;
    d15c:	28 0a       	CC = R0 <= R5 (IU);
    d15e:	05 06       	IF !CC R0 = R5;
    d160:	30 e6 19 00 	[SP + 0x64] = R0;
    d164:	44 30       	R0 = P4;
    d166:	0e 30       	R1 = R6;
    d168:	ff e3 4c 97 	CALL 0x0 <_AddRecordToResponseList>;
    d16c:	2a e1 84 7c 	P2 = 0x7c84 (X);		/*		P2=0x7c84(31876) */
    d170:	95 5a       	P2 = P5 + P2;
    d172:	32 e7 18 00 	[SP + 0x60] = P2;
    d176:	2a e1 88 7c 	P2 = 0x7c88 (X);		/*		P2=0x7c88(31880) */
    d17a:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    d17c:	95 5a       	P2 = P5 + P2;
    d17e:	37 e7 12 00 	[SP + 0x48] = FP;
    d182:	20 30       	R4 = R0;
    d184:	32 e6 16 00 	[SP + 0x58] = R2;
    d188:	32 e7 17 00 	[SP + 0x5c] = P2;
    d18c:	5c 32       	P3 = P4;
    d18e:	3f 32       	FP = R7;
    d190:	ca 21       	JUMP.S 0xd524 <_mDNSCoreReceive+0x1e64>;
    d192:	25 e1 a0 ff 	R5 = -0x60 (X);		/*		R5=0xffffffa0(-96) */
    d196:	30 e5 18 00 	P0 = [SP + 0x60];
    d19a:	33 e4 6a 02 	R3 = [SP + 0x9a8];
    d19e:	14 30       	R2 = R4;
    d1a0:	f6 b0       	[SP + 0xc] = R6;
    d1a2:	33 b1       	[SP + 0x10] = R3;
    d1a4:	b5 e6 14 00 	B[SP + 0x14] = R5;
    d1a8:	b0 bd       	[SP + 0x18] = P0;
    d1aa:	45 30       	R0 = P5;
    d1ac:	4b 30       	R1 = P3;
    d1ae:	ff e3 29 97 	CALL 0x0 <_AddRecordToResponseList>;
    d1b2:	20 30       	R4 = R0;
    d1b4:	00 0c       	CC = R0 == 0x0;
    d1b6:	af 1d       	IF CC JUMP 0xd514 <_mDNSCoreReceive+0x1e54> (BP);
    d1b8:	21 e1 f0 00 	R1 = 0xf0 (X);		/*		R1=0xf0(240) */
    d1bc:	a8 e4 88 7c 	R0 = B[P5 + 0x7c88] (Z);
    d1c0:	08 08       	CC = R0 == R1;
    d1c2:	a9 19       	IF CC JUMP 0xd514 <_mDNSCoreReceive+0x1e54>;
    d1c4:	30 e4 17 00 	R0 = [SP + 0x5c];
    d1c8:	ff e3 c0 97 	CALL 0x148 <_GetRDLengthMem>;
    d1cc:	c5 42       	R5 = R0.L (Z);
    d1ce:	38 30       	R7 = R0;
    d1d0:	20 e1 6c 02 	R0 = 0x26c (X);		/*		R0=0x26c(620) */
    d1d4:	05 50       	R0 = R5 + R0;
    d1d6:	ff e3 15 97 	CALL 0x0 <_AddRecordToResponseList>;
    d1da:	20 32       	P4 = R0;
    d1dc:	44 0c       	CC = P4 == 0x0;
    d1de:	0b 14       	IF !CC JUMP 0xd1f4 <_mDNSCoreReceive+0x1b34> (BP);
    d1e0:	a9 e5 8f 59 	R1 = B[P5 + 0x598f] (X);
    d1e4:	28 60       	R0 = 0x5 (X);		/*		R0=0x5(  5) */
    d1e6:	7f 30       	R7 = FP;
    d1e8:	01 56       	R0 = R1 | R0;
    d1ea:	37 e5 12 00 	FP = [SP + 0x48];
    d1ee:	a8 e6 8f 59 	B[P5 + 0x598f] = R0;
    d1f2:	a5 21       	JUMP.S 0xd53c <_mDNSCoreReceive+0x1e7c>;
    d1f4:	41 60       	R1 = 0x8 (X);		/*		R1=0x8(  8) */
    d1f6:	a8 e4 88 7c 	R0 = B[P5 + 0x7c88] (Z);
    d1fa:	20 48       	CC = !BITTST (R0, 0x4);		/* bit  4 */
    d1fc:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    d1fe:	01 07       	IF CC R0 = R1;
    d200:	b0 e6 6b 00 	B[SP + 0x6b] = R0;
    d204:	68 e5 46 3e 	R0 = W[P5 + 0x7c8c] (X);
    d208:	21 e1 ff 7f 	R1 = 0x7fff (X);		/*		R1=0x7fff(32767) */
    d20c:	01 54       	R0 = R1 & R0;
    d20e:	28 e1 e0 08 	P0 = 0x8e0 (X);		/*		P0=0x8e0(2272) */
    d212:	30 5a       	P0 = P0 + SP;
    d214:	68 e6 46 3e 	W[P5 + 0x7c8c] = R0;
    d218:	48 30       	R1 = P0;
    d21a:	2a e4 f3 07 	R2 = [P5 + 0x1fcc];
    d21e:	45 30       	R0 = P5;
    d220:	ff e3 d0 cf 	CALL 0x71c0 <_ClearIdenticalProxyRecords>;
    d224:	29 e1 e0 08 	P1 = 0x8e0 (X);		/*		P1=0x8e0(2272) */
    d228:	71 5a       	P1 = P1 + SP;
    d22a:	49 30       	R1 = P1;
    d22c:	2a e4 f2 07 	R2 = [P5 + 0x1fc8];
    d230:	45 30       	R0 = P5;
    d232:	ff e3 c7 cf 	CALL 0x71c0 <_ClearIdenticalProxyRecords>;
    d236:	68 e5 45 3e 	R0 = W[P5 + 0x7c8a] (X);
    d23a:	b0 b5       	W[SP + 0xc] = R0;
    d23c:	28 e4 24 1f 	R0 = [P5 + 0x7c90];
    d240:	30 b1       	[SP + 0x10] = R0;
    d242:	b0 e5 6b 00 	R0 = B[SP + 0x6b] (X);
    d246:	b0 e6 14 00 	B[SP + 0x14] = R0;
    d24a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x7fff(32767) */
    d24e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    d250:	01 e1 14 61 	R1.L = 0x6114;		/* (24852)	R1=0x6114 <_SPSRecordCallback>(24852) */
    d254:	b0 b1       	[SP + 0x18] = R0;
    d256:	f1 b1       	[SP + 0x1c] = R1;
    d258:	32 e4 6a 02 	R2 = [SP + 0x9a8];
    d25c:	44 30       	R0 = P4;
    d25e:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    d260:	34 be       	[SP + 0x20] = P4;
    d262:	ff e3 cf 96 	CALL 0x0 <_AddRecordToResponseList>;
    d266:	28 e4 29 1f 	R0 = [P5 + 0x7ca4];
    d26a:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    d26e:	48 50       	R1 = R0 + R1;
    d270:	ff e3 c8 96 	CALL 0x0 <_AddRecordToResponseList>;
    d274:	c2 42       	R2 = R0.L (Z);
    d276:	23 e1 00 01 	R3 = 0x100 (X);		/*		R3=0x100(256) */
    d27a:	1a 0a       	CC = R2 <= R3 (IU);
    d27c:	0a 14       	IF !CC JUMP 0xd290 <_mDNSCoreReceive+0x1bd0> (BP);
    d27e:	2a e1 68 01 	P2 = 0x168 (X);		/*		P2=0x168(360) */
    d282:	94 5a       	P2 = P4 + P2;
    d284:	42 30       	R0 = P2;
    d286:	29 e4 29 1f 	R1 = [P5 + 0x7ca4];
    d28a:	ff e3 bb 96 	CALL 0x0 <_AddRecordToResponseList>;
    d28e:	04 20       	JUMP.S 0xd296 <_mDNSCoreReceive+0x1bd6>;
    d290:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    d292:	a0 e6 68 01 	B[P4 + 0x168] = R0;
    d296:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    d298:	30 e4 17 00 	R0 = [SP + 0x5c];
    d29c:	ff e3 b2 96 	CALL 0x0 <_AddRecordToResponseList>;
    d2a0:	62 ae       	P2 = [P4 + 0x24];
    d2a2:	20 b6       	W[P4 + 0x10] = R0;
    d2a4:	29 e4 2a 1f 	R1 = [P5 + 0x7ca8];
    d2a8:	21 64       	R1 += 0x4;		/* (  4) */
    d2aa:	42 30       	R0 = P2;
    d2ac:	17 97       	W[P2] = R7;
    d2ae:	20 64       	R0 += 0x4;		/* (  4) */
    d2b0:	15 30       	R2 = R5;
    d2b2:	ff e3 a7 96 	CALL 0x0 <_AddRecordToResponseList>;
    d2b6:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    d2b8:	2a e1 48 00 	P2 = 0x48 (X);		/*		P2=0x48( 72) */
    d2bc:	28 e1 e0 08 	P0 = 0x8e0 (X);		/*		P0=0x8e0(2272) */
    d2c0:	a0 e6 46 00 	B[P4 + 0x46] = R0;
    d2c4:	94 5a       	P2 = P4 + P2;
    d2c6:	30 5a       	P0 = P0 + SP;
    d2c8:	48 30       	R1 = P0;
    d2ca:	42 30       	R0 = P2;
    d2cc:	e2 60       	R2 = 0x1c (X);		/*		R2=0x1c( 28) */
    d2ce:	ff e3 99 96 	CALL 0x0 <_AddRecordToResponseList>;
    d2d2:	68 e4 45 3e 	R0 = W[P5 + 0x7c8a] (Z);
    d2d6:	61 60       	R1 = 0xc (X);		/*		R1=0xc( 12) */
    d2d8:	08 08       	CC = R0 == R1;
    d2da:	d4 14       	IF !CC JUMP 0xd482 <_mDNSCoreReceive+0x1dc2> (BP);
    d2dc:	2f e4 29 1f 	R7 = [P5 + 0x7ca4];
    d2e0:	07 30       	R0 = R7;
    d2e2:	ff e3 8f 96 	CALL 0x0 <_AddRecordToResponseList>;
    d2e6:	08 30       	R1 = R0;
    d2e8:	f1 67       	R1 += -0x2;		/* ( -2) */
    d2ea:	81 0c       	CC = R1 < 0x0;
    d2ec:	b7 18       	IF CC JUMP 0xd45a <_mDNSCoreReceive+0x1d9a>;
    d2ee:	07 30       	R0 = R7;
    d2f0:	ff e3 88 96 	CALL 0x0 <_AddRecordToResponseList>;
    d2f4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xc( 12) */
    d2f8:	38 30       	R7 = R0;
    d2fa:	01 e1 24 3e 	R1.L = 0x3e24;		/* (15908)	R1=0x3e24(15908) */
    d2fe:	ff e3 81 96 	CALL 0x0 <_AddRecordToResponseList>;
    d302:	00 0c       	CC = R0 == 0x0;
    d304:	02 18       	IF CC JUMP 0xd308 <_mDNSCoreReceive+0x1c48>;
    d306:	1e 23       	JUMP.S 0xd942 <_mDNSCoreReceive+0x2282>;
    d308:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3e24(15908) */
    d30c:	07 30       	R0 = R7;
    d30e:	01 e1 34 3e 	R1.L = 0x3e34;		/* (15924)	R1=0x3e34(15924) */
    d312:	ff e3 77 96 	CALL 0x0 <_AddRecordToResponseList>;
    d316:	00 0c       	CC = R0 == 0x0;
    d318:	02 18       	IF CC JUMP 0xd31c <_mDNSCoreReceive+0x1c5c>;
    d31a:	29 23       	JUMP.S 0xd96c <_mDNSCoreReceive+0x22ac>;
    d31c:	9f 20       	JUMP.S 0xd45a <_mDNSCoreReceive+0x1d9a>;
    d31e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3e34(15924) */
    d322:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    d324:	01 e1 40 3e 	R1.L = 0x3e40;		/* (15936)	R1=0x3e40(15936) */
    d328:	3c 20       	JUMP.S 0xd3a0 <_mDNSCoreReceive+0x1ce0>;
    d32a:	0d 30       	R1 = R5;
    d32c:	e9 67       	R1 += -0x3;		/* ( -3) */
    d32e:	07 30       	R0 = R7;
    d330:	ff e3 68 96 	CALL 0x0 <_AddRecordToResponseList>;
    d334:	2a e1 68 00 	P2 = 0x68 (X);		/*		P2=0x68(104) */
    d338:	94 5a       	P2 = P4 + P2;
    d33a:	4a 30       	R1 = P2;
    d33c:	ff e3 7c 96 	CALL 0x34 <_GetLabelDecimalValue>;
    d340:	00 0c       	CC = R0 == 0x0;
    d342:	8c 14       	IF !CC JUMP 0xd45a <_mDNSCoreReceive+0x1d9a> (BP);
    d344:	0d 30       	R1 = R5;
    d346:	e1 67       	R1 += -0x4;		/* ( -4) */
    d348:	07 30       	R0 = R7;
    d34a:	ff e3 5b 96 	CALL 0x0 <_AddRecordToResponseList>;
    d34e:	2a e1 69 00 	P2 = 0x69 (X);		/*		P2=0x69(105) */
    d352:	94 5a       	P2 = P4 + P2;
    d354:	4a 30       	R1 = P2;
    d356:	ff e3 6f 96 	CALL 0x34 <_GetLabelDecimalValue>;
    d35a:	00 0c       	CC = R0 == 0x0;
    d35c:	7f 14       	IF !CC JUMP 0xd45a <_mDNSCoreReceive+0x1d9a> (BP);
    d35e:	0d 30       	R1 = R5;
    d360:	d9 67       	R1 += -0x5;		/* ( -5) */
    d362:	07 30       	R0 = R7;
    d364:	ff e3 4e 96 	CALL 0x0 <_AddRecordToResponseList>;
    d368:	2a e1 6a 00 	P2 = 0x6a (X);		/*		P2=0x6a(106) */
    d36c:	94 5a       	P2 = P4 + P2;
    d36e:	4a 30       	R1 = P2;
    d370:	ff e3 62 96 	CALL 0x34 <_GetLabelDecimalValue>;
    d374:	00 0c       	CC = R0 == 0x0;
    d376:	72 14       	IF !CC JUMP 0xd45a <_mDNSCoreReceive+0x1d9a> (BP);
    d378:	31 e4 15 00 	R1 = [SP + 0x54];
    d37c:	07 30       	R0 = R7;
    d37e:	ff e3 41 96 	CALL 0x0 <_AddRecordToResponseList>;
    d382:	2a e1 6b 00 	P2 = 0x6b (X);		/*		P2=0x6b(107) */
    d386:	94 5a       	P2 = P4 + P2;
    d388:	4a 30       	R1 = P2;
    d38a:	ff e3 55 96 	CALL 0x34 <_GetLabelDecimalValue>;
    d38e:	00 0c       	CC = R0 == 0x0;
    d390:	65 10       	IF !CC JUMP 0xd45a <_mDNSCoreReceive+0x1d9a>;
    d392:	20 60       	R0 = 0x4 (X);		/*		R0=0x4(  4) */
    d394:	61 20       	JUMP.S 0xd456 <_mDNSCoreReceive+0x1d96>;
    d396:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3e40(15936) */
    d39a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    d39c:	01 e1 84 3e 	R1.L = 0x3e84;		/* (16004)	R1=0x3e84(16004) */
    d3a0:	17 30       	R2 = R7;
    d3a2:	ff e3 2f 96 	CALL 0x0 <_AddRecordToResponseList>;
    d3a6:	5a 20       	JUMP.S 0xd45a <_mDNSCoreReceive+0x1d9a>;
    d3a8:	07 30       	R0 = R7;
    d3aa:	ff e3 2b 96 	CALL 0x0 <_AddRecordToResponseList>;
    d3ae:	28 e1 77 00 	P0 = 0x77 (X);		/*		P0=0x77(119) */
    d3b2:	10 32       	P2 = R0;
    d3b4:	04 5a       	P0 = P4 + P0;
    d3b6:	27 e1 bf ff 	R7 = -0x41 (X);		/*		R7=0xffffffbf(-65) */
    d3ba:	23 e1 9f ff 	R3 = -0x61 (X);		/*		R3=0xffffff9f(-97) */
    d3be:	31 e1 a9 ff 	I1 = -0x57 (X);		/*		I1=0xffffffa9(-87) */
    d3c2:	81 68       	P1 = 0x10 (X);		/*		P1=0x10( 16) */
    d3c4:	b3 e0 47 10 	LSETUP(0xd3ca <_mDNSCoreReceive+0x1d0a>, 0xd452 <_mDNSCoreReceive+0x1d92>) LC1 = P1;
    d3c8:	02 20       	JUMP.S 0xd3cc <_mDNSCoreReceive+0x1d0c>;
    d3ca:	22 6c       	P2 += 0x4;		/* (  4) */
    d3cc:	11 99       	R1 = B[P2] (Z);
    d3ce:	09 0c       	CC = R1 == 0x1;
    d3d0:	45 14       	IF !CC JUMP 0xd45a <_mDNSCoreReceive+0x1d9a> (BP);
    d3d2:	4d 60       	R5 = 0x9 (X);		/*		R5=0x9(  9) */
    d3d4:	91 e5 01 00 	R1 = B[P2 + 0x1] (X);
    d3d8:	11 30       	R2 = R1;
    d3da:	82 66       	R2 += -0x30;		/* (-48) */
    d3dc:	52 43       	R2 = R2.B (Z);
    d3de:	2a 0a       	CC = R2 <= R5 (IU);
    d3e0:	04 14       	IF !CC JUMP 0xd3e8 <_mDNSCoreReceive+0x1d28> (BP);
    d3e2:	49 43       	R1 = R1.B (Z);
    d3e4:	81 66       	R1 += -0x30;		/* (-48) */
    d3e6:	11 20       	JUMP.S 0xd408 <_mDNSCoreReceive+0x1d48>;
    d3e8:	b9 50       	R2 = R1 + R7;
    d3ea:	52 43       	R2 = R2.B (Z);
    d3ec:	2a 0e       	CC = R2 <= 0x5 (IU);
    d3ee:	04 14       	IF !CC JUMP 0xd3f6 <_mDNSCoreReceive+0x1d36> (BP);
    d3f0:	49 43       	R1 = R1.B (Z);
    d3f2:	49 66       	R1 += -0x37;		/* (-55) */
    d3f4:	0a 20       	JUMP.S 0xd408 <_mDNSCoreReceive+0x1d48>;
    d3f6:	99 50       	R2 = R1 + R3;
    d3f8:	52 43       	R2 = R2.B (Z);
    d3fa:	2a 0e       	CC = R2 <= 0x5 (IU);
    d3fc:	05 14       	IF !CC JUMP 0xd406 <_mDNSCoreReceive+0x1d46> (BP);
    d3fe:	49 43       	R1 = R1.B (Z);
    d400:	81 30       	R0 = I1;
    d402:	41 50       	R1 = R1 + R0;
    d404:	02 20       	JUMP.S 0xd408 <_mDNSCoreReceive+0x1d48>;
    d406:	f9 63       	R1 = -0x1 (X);		/*		R1=0xffffffff( -1) */
    d408:	92 e4 02 00 	R2 = B[P2 + 0x2] (Z);
    d40c:	0a 0c       	CC = R2 == 0x1;
    d40e:	26 14       	IF !CC JUMP 0xd45a <_mDNSCoreReceive+0x1d9a> (BP);
    d410:	48 60       	R0 = 0x9 (X);		/*		R0=0x9(  9) */
    d412:	92 e5 03 00 	R2 = B[P2 + 0x3] (X);
    d416:	2a 30       	R5 = R2;
    d418:	85 66       	R5 += -0x30;		/* (-48) */
    d41a:	6d 43       	R5 = R5.B (Z);
    d41c:	05 0a       	CC = R5 <= R0 (IU);
    d41e:	04 14       	IF !CC JUMP 0xd426 <_mDNSCoreReceive+0x1d66> (BP);
    d420:	52 43       	R2 = R2.B (Z);
    d422:	82 66       	R2 += -0x30;		/* (-48) */
    d424:	11 20       	JUMP.S 0xd446 <_mDNSCoreReceive+0x1d86>;
    d426:	7a 51       	R5 = R2 + R7;
    d428:	6d 43       	R5 = R5.B (Z);
    d42a:	2d 0e       	CC = R5 <= 0x5 (IU);
    d42c:	04 14       	IF !CC JUMP 0xd434 <_mDNSCoreReceive+0x1d74> (BP);
    d42e:	52 43       	R2 = R2.B (Z);
    d430:	4a 66       	R2 += -0x37;		/* (-55) */
    d432:	0a 20       	JUMP.S 0xd446 <_mDNSCoreReceive+0x1d86>;
    d434:	5a 51       	R5 = R2 + R3;
    d436:	6d 43       	R5 = R5.B (Z);
    d438:	2d 0e       	CC = R5 <= 0x5 (IU);
    d43a:	05 14       	IF !CC JUMP 0xd444 <_mDNSCoreReceive+0x1d84> (BP);
    d43c:	52 43       	R2 = R2.B (Z);
    d43e:	a9 30       	R5 = I1;
    d440:	aa 50       	R2 = R2 + R5;
    d442:	02 20       	JUMP.S 0xd446 <_mDNSCoreReceive+0x1d86>;
    d444:	fa 63       	R2 = -0x1 (X);		/*		R2=0xffffffff( -1) */
    d446:	39 0c       	CC = R1 == -0x1;
    d448:	09 18       	IF CC JUMP 0xd45a <_mDNSCoreReceive+0x1d9a>;
    d44a:	3a 0c       	CC = R2 == -0x1;
    d44c:	07 18       	IF CC JUMP 0xd45a <_mDNSCoreReceive+0x1d9a>;
    d44e:	22 4f       	R2 <<= 0x4;
    d450:	4a 56       	R1 = R2 | R1;
    d452:	81 9a       	B[P0--] = R1;
    d454:	30 60       	R0 = 0x6 (X);		/*		R0=0x6(  6) */
    d456:	20 e6 19 00 	[P4 + 0x64] = R0;
    d45a:	00 00       	NOP;
    d45c:	20 e4 19 00 	R0 = [P4 + 0x64];
    d460:	00 0c       	CC = R0 == 0x0;
    d462:	10 1c       	IF CC JUMP 0xd482 <_mDNSCoreReceive+0x1dc2> (BP);
    d464:	29 e4 27 0a 	R1 = [P5 + 0x289c];
    d468:	01 0c       	CC = R1 == 0x0;
    d46a:	08 18       	IF CC JUMP 0xd47a <_mDNSCoreReceive+0x1dba>;
    d46c:	37 e4 6a 02 	R7 = [SP + 0x9a8];
    d470:	39 08       	CC = R1 == R7;
    d472:	04 18       	IF CC JUMP 0xd47a <_mDNSCoreReceive+0x1dba>;
    d474:	45 30       	R0 = P5;
    d476:	ff e3 c5 95 	CALL 0x0 <_AddRecordToResponseList>;
    d47a:	30 e5 6a 02 	P0 = [SP + 0x9a8];
    d47e:	28 e7 27 0a 	[P5 + 0x289c] = P0;
    d482:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x10 */
    d486:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    d48a:	08 91       	R0 = [P1];
    d48c:	32 e4 19 00 	R2 = [SP + 0x64];
    d490:	d0 40       	R0 *= R2;
    d492:	29 e4 37 00 	R1 = [P5 + 0xdc];
    d496:	08 50       	R0 = R0 + R1;
    d498:	21 e6 1e 00 	[P4 + 0x78] = R1;
    d49c:	29 e4 41 00 	R1 = [P5 + 0x104];
    d4a0:	41 52       	R1 = R1 - R0;
    d4a2:	20 e6 1f 00 	[P4 + 0x7c] = R0;
    d4a6:	01 0d       	CC = R1 <= 0x0;
    d4a8:	03 18       	IF CC JUMP 0xd4ae <_mDNSCoreReceive+0x1dee>;
    d4aa:	28 e6 41 00 	[P5 + 0x104] = R0;
    d4ae:	45 30       	R0 = P5;
    d4b0:	4c 30       	R1 = P4;
    d4b2:	ff e3 b1 d0 	CALL 0x7614 <_mDNS_Register_internal>;
    d4b6:	68 a0       	R0 = [P5 + 0x4];
    d4b8:	00 48       	CC = !BITTST (R0, 0x0);		/* bit  0 */
    d4ba:	07 1c       	IF CC JUMP 0xd4c8 <_mDNSCoreReceive+0x1e08> (BP);
    d4bc:	e0 a4       	R0 = W[P4 + 0x6] (Z);
    d4be:	e3 60       	R3 = 0x1c (X);		/*		R3=0x1c( 28) */
    d4c0:	18 08       	CC = R0 == R3;
    d4c2:	03 14       	IF !CC JUMP 0xd4c8 <_mDNSCoreReceive+0x1e08> (BP);
    d4c4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    d4c6:	e0 b0       	[P4 + 0xc] = R0;
    d4c8:	00 00       	NOP;
    d4ca:	28 e4 a4 0d 	R0 = [P5 + 0x3690];
    d4ce:	08 64       	R0 += 0x1;		/* (  1) */
    d4d0:	28 e6 a4 0d 	[P5 + 0x3690] = R0;
    d4d4:	45 30       	R0 = P5;
    d4d6:	ff e3 5d b5 	CALL 0x3f90 <_mDNS_UpdateAllowSleep>;
    d4da:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0x77 */
    d4de:	08 e1 00 00 	P0.L = 0x0;		/* (  0)	P0=0x0 <_AddRecordToResponseList> */
    d4e2:	00 91       	R0 = [P0];
    d4e4:	00 0c       	CC = R0 == 0x0;
    d4e6:	17 1c       	IF CC JUMP 0xd514 <_mDNSCoreReceive+0x1e54> (BP);
    d4e8:	61 a2       	R1 = [P4 + 0x24];
    d4ea:	44 30       	R0 = P4;
    d4ec:	55 30       	R2 = P5;
    d4ee:	2f e4 a4 0d 	R7 = [P5 + 0x3690];
    d4f2:	21 64       	R1 += 0x4;		/* (  4) */
    d4f4:	ba 65       	R2 += 0x37;		/* ( 55) */
    d4f6:	20 64       	R0 += 0x4;		/* (  4) */
    d4f8:	ff e3 84 95 	CALL 0x0 <_AddRecordToResponseList>;
    d4fc:	b1 e4 6b 00 	R1 = B[SP + 0x6b] (Z);
    d500:	f1 b0       	[SP + 0xc] = R1;
    d502:	30 b1       	[SP + 0x10] = R0;
    d504:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xffff(65535) */
    d508:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    d50a:	01 e1 c4 3e 	R1.L = 0x3ec4;		/* (16068)	R1=0x3ec4(16068) */
    d50e:	17 30       	R2 = R7;
    d510:	ff e3 78 95 	CALL 0x0 <_AddRecordToResponseList>;
    d514:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    d516:	a8 e6 88 7c 	B[P5 + 0x7c88] = R0;
    d51a:	30 e4 16 00 	R0 = [SP + 0x58];
    d51e:	08 64       	R0 += 0x1;		/* (  1) */
    d520:	30 e6 16 00 	[SP + 0x58] = R0;
    d524:	18 a5       	R0 = W[P3 + 0x8] (Z);
    d526:	31 e4 16 00 	R1 = [SP + 0x58];
    d52a:	81 08       	CC = R1 < R0;
    d52c:	05 10       	IF !CC JUMP 0xd536 <_mDNSCoreReceive+0x1e76>;
    d52e:	04 0c       	CC = R4 == 0x0;
    d530:	03 18       	IF CC JUMP 0xd536 <_mDNSCoreReceive+0x1e76>;
    d532:	b4 09       	CC = R4 < R6 (IU);
    d534:	2f 1e       	IF CC JUMP 0xd192 <_mDNSCoreReceive+0x1ad2> (BP);
    d536:	7f 30       	R7 = FP;
    d538:	37 e5 12 00 	FP = [SP + 0x48];
    d53c:	a9 e4 8f 59 	R1 = B[P5 + 0x598f] (Z);
    d540:	78 60       	R0 = 0xf (X);		/*		R0=0xf( 15) */
    d542:	01 54       	R0 = R1 & R0;
    d544:	00 0c       	CC = R0 == 0x0;
    d546:	20 1c       	IF CC JUMP 0xd586 <_mDNSCoreReceive+0x1ec6> (BP);
    d548:	b0 e4 4c 00 	R0 = B[SP + 0x4c] (Z);
    d54c:	b1 e4 50 00 	R1 = B[SP + 0x50] (Z);
    d550:	40 4f       	R0 <<= 0x8;
    d552:	01 56       	R0 = R1 | R0;
    d554:	f0 b0       	[SP + 0xc] = R0;
    d556:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3ec4(16068) */
    d55a:	17 30       	R2 = R7;
    d55c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    d55e:	01 e1 e0 3e 	R1.L = 0x3ee0;		/* (16096)	R1=0x3ee0(16096) */
    d562:	ff e3 4f 95 	CALL 0x0 <_AddRecordToResponseList>;
    d566:	28 e1 e0 08 	P0 = 0x8e0 (X);		/*		P0=0x8e0(2272) */
    d56a:	06 5b       	P4 = SP + P0;
    d56c:	2a e4 f3 07 	R2 = [P5 + 0x1fcc];
    d570:	45 30       	R0 = P5;
    d572:	4c 30       	R1 = P4;
    d574:	ff e3 4a c6 	CALL 0x6208 <_ClearProxyRecords>;
    d578:	2a e4 f2 07 	R2 = [P5 + 0x1fc8];
    d57c:	45 30       	R0 = P5;
    d57e:	4c 30       	R1 = P4;
    d580:	ff e3 44 c6 	CALL 0x6208 <_ClearProxyRecords>;
    d584:	3f 20       	JUMP.S 0xd602 <_mDNSCoreReceive+0x1f42>;
    d586:	48 61       	R0 = 0x29 (X);		/*		R0=0x29( 41) */
    d588:	b0 b5       	W[SP + 0xc] = R0;
    d58a:	20 e1 94 11 	R0 = 0x1194 (X);		/*		R0=0x1194(4500) */
    d58e:	30 b1       	[SP + 0x10] = R0;
    d590:	00 61       	R0 = 0x20 (X);		/*		R0=0x20( 32) */
    d592:	b0 e6 14 00 	B[SP + 0x14] = R0;
    d596:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    d598:	29 e1 a4 00 	P1 = 0xa4 (X);		/*		P1=0xa4(164) */
    d59c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x6b */
    d5a0:	0e 5b       	P4 = SP + P1;
    d5a2:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    d5a6:	b0 b1       	[SP + 0x18] = R0;
    d5a8:	f0 b1       	[SP + 0x1c] = R0;
    d5aa:	30 b2       	[SP + 0x20] = R0;
    d5ac:	44 30       	R0 = P4;
    d5ae:	12 91       	R2 = [P2];
    d5b0:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    d5b2:	ff e3 27 95 	CALL 0x0 <_AddRecordToResponseList>;
    d5b6:	20 e1 a0 05 	R0 = 0x5a0 (X);		/*		R0=0x5a0(1440) */
    d5ba:	70 e6 56 00 	W[SP + 0xac] = R0;
    d5be:	32 e5 32 00 	P2 = [SP + 0xc8];
    d5c2:	00 61       	R0 = 0x20 (X);		/*		R0=0x20( 32) */
    d5c4:	70 e6 5a 00 	W[SP + 0xb4] = R0;
    d5c8:	70 e6 5b 00 	W[SP + 0xb6] = R0;
    d5cc:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    d5ce:	90 b4       	W[P2 + 0x4] = R0;
    d5d0:	30 e4 19 00 	R0 = [SP + 0x64];
    d5d4:	90 b0       	[P2 + 0x8] = R0;
    d5d6:	2a e1 8c 59 	P2 = 0x598c (X);		/*		P2=0x598c(22924) */
    d5da:	95 5a       	P2 = P5 + P2;
    d5dc:	57 30       	R2 = FP;
    d5de:	42 30       	R0 = P2;
    d5e0:	21 e1 ec 22 	R1 = 0x22ec (X);		/*		R1=0x22ec(8940) */
    d5e4:	4a 50       	R1 = R2 + R1;
    d5e6:	2a e1 96 59 	P2 = 0x5996 (X);		/*		P2=0x5996(22934) */
    d5ea:	95 5a       	P2 = P5 + P2;
    d5ec:	33 e4 2c 00 	R3 = [SP + 0xb0];
    d5f0:	71 b1       	[SP + 0x14] = R1;
    d5f2:	24 6c       	P4 += 0x4;		/* (  4) */
    d5f4:	4f 30       	R1 = FP;
    d5f6:	52 30       	R2 = P2;
    d5f8:	f4 bc       	[SP + 0xc] = P4;
    d5fa:	33 b1       	[SP + 0x10] = R3;
    d5fc:	ff e3 02 95 	CALL 0x0 <_AddRecordToResponseList>;
    d600:	38 32       	FP = R0;
    d602:	47 0c       	CC = FP == 0x0;
    d604:	7a 19       	IF CC JUMP 0xd8f8 <_mDNSCoreReceive+0x2238>;
    d606:	2a e1 8c 59 	P2 = 0x598c (X);		/*		P2=0x598c(22924) */
    d60a:	95 5a       	P2 = P5 + P2;
    d60c:	b0 e4 50 00 	R0 = B[SP + 0x50] (Z);
    d610:	b1 e4 4c 00 	R1 = B[SP + 0x4c] (Z);
    d614:	40 4f       	R0 <<= 0x8;
    d616:	2a e4 28 0a 	R2 = [P5 + 0x28a0];
    d61a:	01 56       	R0 = R1 | R0;
    d61c:	30 b7       	W[SP + 0x18] = R0;
    d61e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    d620:	33 e4 6a 02 	R3 = [SP + 0x9a8];
    d624:	32 b1       	[SP + 0x10] = R2;
    d626:	f0 b1       	[SP + 0x1c] = R0;
    d628:	30 b2       	[SP + 0x20] = R0;
    d62a:	4a 30       	R1 = P2;
    d62c:	f3 b0       	[SP + 0xc] = R3;
    d62e:	77 b1       	[SP + 0x14] = R7;
    d630:	45 30       	R0 = P5;
    d632:	57 30       	R2 = FP;
    d634:	ff e3 e6 94 	CALL 0x0 <_AddRecordToResponseList>;
    d638:	60 21       	JUMP.S 0xd8f8 <_mDNSCoreReceive+0x2238>;
    d63a:	24 e1 a8 00 	R4 = 0xa8 (X);		/*		R4=0xa8(168) */
    d63e:	20 08       	CC = R0 == R4;
    d640:	fe 14       	IF !CC JUMP 0xd83c <_mDNSCoreReceive+0x217c> (BP);
    d642:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_AddRecordToResponseList>(  0) */
    d646:	00 e1 20 3f 	R0.L = 0x3f20;		/* (16160)	R0=0x3f20(16160) */
    d64a:	ff e3 db 94 	CALL 0x0 <_AddRecordToResponseList>;
    d64e:	35 e4 6a 02 	R5 = [SP + 0x9a8];
    d652:	05 0c       	CC = R5 == 0x0;
    d654:	eb 18       	IF CC JUMP 0xd82a <_mDNSCoreReceive+0x216a>;
    d656:	42 60       	R2 = 0x8 (X);		/*		R2=0x8(  8) */
    d658:	44 30       	R0 = P4;
    d65a:	0e 30       	R1 = R6;
    d65c:	ff e3 d2 94 	CALL 0x0 <_AddRecordToResponseList>;
    d660:	10 30       	R2 = R0;
    d662:	00 0c       	CC = R0 == 0x0;
    d664:	46 18       	IF CC JUMP 0xd6f0 <_mDNSCoreReceive+0x2030>;
    d666:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    d668:	30 b1       	[SP + 0x10] = R0;
    d66a:	20 e1 80 ff 	R0 = -0x80 (X);		/*		R0=0xffffff80(-128) */
    d66e:	2a e1 84 7c 	P2 = 0x7c84 (X);		/*		P2=0x7c84(31876) */
    d672:	b0 e6 14 00 	B[SP + 0x14] = R0;
    d676:	95 5a       	P2 = P5 + P2;
    d678:	f6 b0       	[SP + 0xc] = R6;
    d67a:	b2 bd       	[SP + 0x18] = P2;
    d67c:	45 30       	R0 = P5;
    d67e:	4c 30       	R1 = P4;
    d680:	ff e3 c0 94 	CALL 0x0 <_AddRecordToResponseList>;
    d684:	00 0c       	CC = R0 == 0x0;
    d686:	2f 1c       	IF CC JUMP 0xd6e4 <_mDNSCoreReceive+0x2024> (BP);
    d688:	26 e1 f0 00 	R6 = 0xf0 (X);		/*		R6=0xf0(240) */
    d68c:	a8 e4 88 7c 	R0 = B[P5 + 0x7c88] (Z);
    d690:	30 08       	CC = R0 == R6;
    d692:	29 1c       	IF CC JUMP 0xd6e4 <_mDNSCoreReceive+0x2024> (BP);
    d694:	4f 61       	R7 = 0x29 (X);		/*		R7=0x29( 41) */
    d696:	68 e4 45 3e 	R0 = W[P5 + 0x7c8a] (Z);
    d69a:	38 08       	CC = R0 == R7;
    d69c:	24 14       	IF !CC JUMP 0xd6e4 <_mDNSCoreReceive+0x2024> (BP);
    d69e:	28 e4 2a 1f 	R0 = [P5 + 0x7ca8];
    d6a2:	20 64       	R0 += 0x4;		/* (  4) */
    d6a4:	6e e4 4a 3e 	R6 = W[P5 + 0x7c94] (Z);
    d6a8:	4f e1 00 00 	FP.H = 0x0;		/* (  0)	FP=0x5998 */
    d6ac:	b0 51       	R6 = R0 + R6;
    d6ae:	18 32       	P3 = R0;
    d6b0:	27 e1 10 0e 	R7 = 0xe10 (X);		/*		R7=0xe10(3600) */
    d6b4:	0f e1 00 00 	FP.L = 0x0;		/* (  0)	FP=0x0 <_AddRecordToResponseList> */
    d6b8:	12 20       	JUMP.S 0xd6dc <_mDNSCoreReceive+0x201c>;
    d6ba:	00 00       	NOP;
    d6bc:	18 95       	R0 = W[P3] (Z);
    d6be:	10 0c       	CC = R0 == 0x2;
    d6c0:	0d 14       	IF !CC JUMP 0xd6da <_mDNSCoreReceive+0x201a> (BP);
    d6c2:	38 91       	R0 = [FP];
    d6c4:	5f a0       	R7 = [P3 + 0x4];
    d6c6:	00 0c       	CC = R0 == 0x0;
    d6c8:	09 1c       	IF CC JUMP 0xd6da <_mDNSCoreReceive+0x201a> (BP);
    d6ca:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x22ec(8940) */
    d6ce:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    d6d0:	01 e1 38 3f 	R1.L = 0x3f38;		/* (16184)	R1=0x3f38(16184) */
    d6d4:	17 30       	R2 = R7;
    d6d6:	ff e3 95 94 	CALL 0x0 <_AddRecordToResponseList>;
    d6da:	03 6d       	P3 += 0x20;		/* ( 32) */
    d6dc:	43 30       	R0 = P3;
    d6de:	b0 09       	CC = R0 < R6 (IU);
    d6e0:	ed 1f       	IF CC JUMP 0xd6ba <_mDNSCoreReceive+0x1ffa> (BP);
    d6e2:	03 20       	JUMP.S 0xd6e8 <_mDNSCoreReceive+0x2028>;
    d6e4:	27 e1 10 0e 	R7 = 0xe10 (X);		/*		R7=0xe10(3600) */
    d6e8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    d6ea:	a8 e6 88 7c 	B[P5 + 0x7c88] = R0;
    d6ee:	03 20       	JUMP.S 0xd6f4 <_mDNSCoreReceive+0x2034>;
    d6f0:	27 e1 10 0e 	R7 = 0xe10 (X);		/*		R7=0xe10(3600) */
    d6f4:	2a e5 f5 07 	P2 = [P5 + 0x1fd4];
    d6f8:	42 0c       	CC = P2 == 0x0;
    d6fa:	11 18       	IF CC JUMP 0xd71c <_mDNSCoreReceive+0x205c>;
    d6fc:	42 30       	R0 = P2;
    d6fe:	55 30       	R2 = P5;
    d700:	ba 65       	R2 += 0x37;		/* ( 55) */
    d702:	51 a2       	R1 = [P2 + 0x24];
    d704:	21 64       	R1 += 0x4;		/* (  4) */
    d706:	20 64       	R0 += 0x4;		/* (  4) */
    d708:	ff e3 7c 94 	CALL 0x0 <_AddRecordToResponseList>;
    d70c:	10 30       	R2 = R0;
    d70e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3f38(16184) */
    d712:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    d714:	01 e1 64 3f 	R1.L = 0x3f64;		/* (16228)	R1=0x3f64(16228) */
    d718:	ff e3 74 94 	CALL 0x0 <_AddRecordToResponseList>;
    d71c:	4d 30       	R1 = P5;
    d71e:	28 e4 f2 07 	R0 = [P5 + 0x1fc8];
    d722:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0xf0(240) */
    d726:	44 e1 00 00 	R4.H = 0x0;		/* (  0)	R4=0xa8(168) */
    d72a:	45 e1 00 00 	R5.H = 0x0;		/* (  0)	R5=0x9(  9) */
    d72e:	4f e1 00 00 	FP.H = 0x0;		/* (  0)	FP=0x0 <_AddRecordToResponseList> */
    d732:	b9 65       	R1 += 0x37;		/* ( 55) */
    d734:	5c 32       	P3 = P4;
    d736:	28 e6 f5 07 	[P5 + 0x1fd4] = R0;
    d73a:	06 e1 00 00 	R6.L = 0x0;		/* (  0)	R6=0x0 <_AddRecordToResponseList>(  0) */
    d73e:	04 e1 00 00 	R4.L = 0x0;		/* (  0)	R4=0x0 <_AddRecordToResponseList>(  0) */
    d742:	05 e1 00 00 	R5.L = 0x0;		/* (  0)	R5=0x0 <_AddRecordToResponseList>(  0) */
    d746:	0f e1 00 00 	FP.L = 0x0;		/* (  0)	FP=0x0 <_AddRecordToResponseList> */
    d74a:	31 e6 14 00 	[SP + 0x50] = R1;
    d74e:	65 32       	P4 = P5;
    d750:	67 20       	JUMP.S 0xd81e <_mDNSCoreReceive+0x215e>;
    d752:	00 00       	NOP;
    d754:	e8 a1       	R0 = [P5 + 0x1c];
    d756:	32 e4 6a 02 	R2 = [SP + 0x9a8];
    d75a:	10 08       	CC = R0 == R2;
    d75c:	0c 18       	IF CC JUMP 0xd774 <_mDNSCoreReceive+0x20b4>;
    d75e:	00 0c       	CC = R0 == 0x0;
    d760:	57 14       	IF !CC JUMP 0xd80e <_mDNSCoreReceive+0x214e> (BP);
    d762:	a8 e4 46 00 	R0 = B[P5 + 0x46] (Z);
    d766:	00 0c       	CC = R0 == 0x0;
    d768:	06 14       	IF !CC JUMP 0xd774 <_mDNSCoreReceive+0x20b4> (BP);
    d76a:	28 a2       	R0 = [P5 + 0x20];
    d76c:	ff e3 4a 94 	CALL 0x0 <_AddRecordToResponseList>;
    d770:	00 0c       	CC = R0 == 0x0;
    d772:	4e 1c       	IF CC JUMP 0xd80e <_mDNSCoreReceive+0x214e> (BP);
    d774:	00 00       	NOP;
    d776:	69 e4 7a 00 	R1 = W[P5 + 0xf4] (Z);
    d77a:	18 95       	R0 = W[P3] (Z);
    d77c:	01 08       	CC = R1 == R0;
    d77e:	48 14       	IF !CC JUMP 0xd80e <_mDNSCoreReceive+0x214e> (BP);
    d780:	06 32       	P0 = R6;
    d782:	0c 32       	P1 = R4;
    d784:	0a 68       	P2 = 0x1 (X);		/*		P2=0x1(  1) */
    d786:	00 95       	R0 = W[P0] (Z);
    d788:	68 e6 7a 00 	W[P5 + 0xf4] = R0;
    d78c:	08 91       	R0 = [P1];
    d78e:	f8 40       	R0 *= R7;
    d790:	21 e4 37 00 	R1 = [P4 + 0xdc];
    d794:	05 32       	P0 = R5;
    d796:	08 50       	R0 = R0 + R1;
    d798:	00 0c       	CC = R0 == 0x0;
    d79a:	42 07       	IF CC R0 = P2;
    d79c:	28 e6 3b 00 	[P5 + 0xec] = R0;
    d7a0:	00 91       	R0 = [P0];
    d7a2:	00 0c       	CC = R0 == 0x0;
    d7a4:	22 1c       	IF CC JUMP 0xd7e8 <_mDNSCoreReceive+0x2128> (BP);
    d7a6:	28 e4 13 00 	R0 = [P5 + 0x4c];
    d7aa:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0xa4 */
    d7ae:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x1 */
    d7b2:	00 0c       	CC = R0 == 0x0;
    d7b4:	0a e1 40 36 	P2.L = 0x3640;		/* (13888)	P2=0x3640 */
    d7b8:	09 e1 4c 36 	P1.L = 0x364c;		/* (13900)	P1=0x364c */
    d7bc:	ca 06       	IF !CC P1 = P2;
    d7be:	69 a2       	R1 = [P5 + 0x24];
    d7c0:	45 30       	R0 = P5;
    d7c2:	21 64       	R1 += 0x4;		/* (  4) */
    d7c4:	32 e4 14 00 	R2 = [SP + 0x50];
    d7c8:	31 e7 13 00 	[SP + 0x4c] = P1;
    d7cc:	20 64       	R0 += 0x4;		/* (  4) */
    d7ce:	ff e3 19 94 	CALL 0x0 <_AddRecordToResponseList>;
    d7d2:	30 b1       	[SP + 0x10] = R0;
    d7d4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3f64(16228) */
    d7d8:	f7 b0       	[SP + 0xc] = R7;
    d7da:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    d7dc:	01 e1 a4 3f 	R1.L = 0x3fa4;		/* (16292)	R1=0x3fa4(16292) */
    d7e0:	32 e4 13 00 	R2 = [SP + 0x4c];
    d7e4:	ff e3 0e 94 	CALL 0x0 <_AddRecordToResponseList>;
    d7e8:	00 00       	NOP;
    d7ea:	28 e4 13 00 	R0 = [P5 + 0x4c];
    d7ee:	00 0c       	CC = R0 == 0x0;
    d7f0:	0f 1c       	IF CC JUMP 0xd80e <_mDNSCoreReceive+0x214e> (BP);
    d7f2:	38 91       	R0 = [FP];
    d7f4:	28 e6 13 00 	[P5 + 0x4c] = R0;
    d7f8:	78 a0       	R0 = [FP + 0x4];
    d7fa:	28 e6 14 00 	[P5 + 0x50] = R0;
    d7fe:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    d800:	a8 e6 87 00 	B[P5 + 0x87] = R0;
    d804:	44 30       	R0 = P4;
    d806:	4d 30       	R1 = P5;
    d808:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    d80a:	ff e3 f9 bb 	CALL 0x4ffc <_mDNS_Deregister_internal>;
    d80e:	00 00       	NOP;
    d810:	22 e5 f5 07 	P2 = [P4 + 0x1fd4];
    d814:	6a 08       	CC = P2 == P5;
    d816:	04 14       	IF !CC JUMP 0xd81e <_mDNSCoreReceive+0x215e> (BP);
    d818:	10 91       	R0 = [P2];
    d81a:	20 e6 f5 07 	[P4 + 0x1fd4] = R0;
    d81e:	00 00       	NOP;
    d820:	25 e5 f5 07 	P5 = [P4 + 0x1fd4];
    d824:	45 0c       	CC = P5 == 0x0;
    d826:	96 17       	IF !CC JUMP 0xd752 <_mDNSCoreReceive+0x2092> (BP);
    d828:	6c 32       	P5 = P4;
    d82a:	28 e4 49 00 	R0 = [P5 + 0x124];
    d82e:	00 0c       	CC = R0 == 0x0;
    d830:	64 1c       	IF CC JUMP 0xd8f8 <_mDNSCoreReceive+0x2238> (BP);
    d832:	28 e4 37 00 	R0 = [P5 + 0xdc];
    d836:	28 e6 4a 00 	[P5 + 0x128] = R0;
    d83a:	5f 20       	JUMP.S 0xd8f8 <_mDNSCoreReceive+0x2238>;
    d83c:	00 00       	NOP;
    d83e:	a0 e4 03 00 	R0 = B[P4 + 0x3] (Z);
    d842:	a2 e4 02 00 	R2 = B[P4 + 0x2] (Z);
    d846:	f0 b0       	[SP + 0xc] = R0;
    d848:	68 43       	R0 = R5.B (Z);
    d84a:	ed 42       	R5 = R5.L (Z);
    d84c:	40 4f       	R0 <<= 0x8;
    d84e:	45 4e       	R5 >>= 0x8;
    d850:	45 57       	R5 = R5 | R0;
    d852:	b0 e4 6b 00 	R0 = B[SP + 0x6b] (Z);
    d856:	31 e4 6a 02 	R1 = [SP + 0x9a8];
    d85a:	b4 e4 58 00 	R4 = B[SP + 0x58] (Z);
    d85e:	40 4f       	R0 <<= 0x8;
    d860:	04 56       	R0 = R4 | R0;
    d862:	71 b2       	[SP + 0x24] = R1;
    d864:	f0 b1       	[SP + 0x1c] = R0;
    d866:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3fa4(16292) */
    d86a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    d86c:	37 b1       	[SP + 0x10] = R7;
    d86e:	75 b1       	[SP + 0x14] = R5;
    d870:	b7 bd       	[SP + 0x18] = FP;
    d872:	33 be       	[SP + 0x20] = P3;
    d874:	01 e1 c4 3f 	R1.L = 0x3fc4;		/* (16324)	R1=0x3fc4(16324) */
    d878:	ff e3 c4 93 	CALL 0x0 <_AddRecordToResponseList>;
    d87c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x3640 */
    d880:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    d884:	10 91       	R0 = [P2];
    d886:	00 0c       	CC = R0 == 0x0;
    d888:	38 1c       	IF CC JUMP 0xd8f8 <_mDNSCoreReceive+0x2238> (BP);
    d88a:	28 e1 e0 08 	P0 = 0x8e0 (X);		/*		P0=0x8e0(2272) */
    d88e:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    d890:	c6 5b       	FP = SP + P0;
    d892:	62 30       	R4 = P2;
    d894:	73 30       	R6 = P3;
    d896:	2f 20       	JUMP.S 0xd8f4 <_mDNSCoreReceive+0x2234>;
    d898:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    d89c:	21 e1 80 00 	R1 = 0x80 (X);		/*		R1=0x80(128) */
    d8a0:	f7 b0       	[SP + 0xc] = R7;
    d8a2:	47 30       	R0 = FP;
    d8a4:	02 e1 20 40 	R2.L = 0x4020;		/* (16416)	R2=0x4020(16416) */
    d8a8:	ff e3 ac 93 	CALL 0x0 <_AddRecordToResponseList>;
    d8ac:	07 32       	P0 = R7;
    d8ae:	4f 30       	R1 = FP;
    d8b0:	41 51       	R5 = R1 + R0;
    d8b2:	c4 5a       	P3 = P4 + P0;
    d8b4:	b7 08       	CC = R7 < R6;
    d8b6:	0d 14       	IF !CC JUMP 0xd8d0 <_mDNSCoreReceive+0x2210> (BP);
    d8b8:	18 99       	R0 = B[P3] (Z);
    d8ba:	f0 b0       	[SP + 0xc] = R0;
    d8bc:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x4020(16416) */
    d8c0:	05 30       	R0 = R5;
    d8c2:	21 e1 80 00 	R1 = 0x80 (X);		/*		R1=0x80(128) */
    d8c6:	02 e1 28 40 	R2.L = 0x4028;		/* (16424)	R2=0x4028(16424) */
    d8ca:	ff e3 9b 93 	CALL 0x0 <_AddRecordToResponseList>;
    d8ce:	45 51       	R5 = R5 + R0;
    d8d0:	0f 64       	R7 += 0x1;		/* (  1) */
    d8d2:	79 60       	R1 = 0xf (X);		/*		R1=0xf( 15) */
    d8d4:	0f 54       	R0 = R7 & R1;
    d8d6:	0b 6c       	P3 += 0x1;		/* (  1) */
    d8d8:	00 0c       	CC = R0 == 0x0;
    d8da:	ed 17       	IF !CC JUMP 0xd8b4 <_mDNSCoreReceive+0x21f4> (BP);
    d8dc:	04 32       	P0 = R4;
    d8de:	00 91       	R0 = [P0];
    d8e0:	00 0c       	CC = R0 == 0x0;
    d8e2:	09 1c       	IF CC JUMP 0xd8f4 <_mDNSCoreReceive+0x2234> (BP);
    d8e4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xf( 15) */
    d8e8:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    d8ea:	01 e1 30 40 	R1.L = 0x4030;		/* (16432)	R1=0x4030(16432) */
    d8ee:	57 30       	R2 = FP;
    d8f0:	ff e3 88 93 	CALL 0x0 <_AddRecordToResponseList>;
    d8f4:	b7 08       	CC = R7 < R6;
    d8f6:	d1 1f       	IF CC JUMP 0xd898 <_mDNSCoreReceive+0x21d8> (BP);
    d8f8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4030(16432) */
    d8fc:	45 30       	R0 = P5;
    d8fe:	01 e1 38 04 	R1.L = 0x438;		/* (1080)	R1=0x438(1080) */
    d902:	ff e3 7f 93 	CALL 0x0 <_AddRecordToResponseList>;
    d906:	3f 20       	JUMP.S 0xd984 <_mDNSCoreReceive+0x22c4>;
    d908:	00 00       	NOP;
    d90a:	61 e4 45 3e 	R1 = W[P4 + 0x7c8a] (Z);
    d90e:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    d910:	01 08       	CC = R1 == R0;
    d912:	03 18       	IF CC JUMP 0xd918 <_mDNSCoreReceive+0x2258>;
    d914:	ff e2 41 f4 	JUMP.L 0xc196 <_mDNSCoreReceive+0xad6>;
    d918:	ff e2 fb f3 	JUMP.L 0xc10e <_mDNSCoreReceive+0xa4e>;
    d91c:	0d 32       	P1 = R5;
    d91e:	08 91       	R0 = [P1];
    d920:	00 0c       	CC = R0 == 0x0;
    d922:	03 10       	IF !CC JUMP 0xd928 <_mDNSCoreReceive+0x2268>;
    d924:	ff e2 d6 f5 	JUMP.L 0xc4d0 <_mDNSCoreReceive+0xe10>;
    d928:	ff e2 c3 f5 	JUMP.L 0xc4ae <_mDNSCoreReceive+0xdee>;
    d92c:	45 30       	R0 = P5;
    d92e:	29 e4 29 1f 	R1 = [P5 + 0x7ca4];
    d932:	2a e4 26 1f 	R2 = [P5 + 0x7c98];
    d936:	f6 b0       	[SP + 0xc] = R6;
    d938:	ff e3 ca a5 	CALL 0x24cc <_CheckForSoonToExpireRecords>;
    d93c:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    d93e:	ff e2 5b f7 	JUMP.L 0xc7f4 <_mDNSCoreReceive+0x1134>;
    d942:	00 00       	NOP;
    d944:	2f e4 29 1f 	R7 = [P5 + 0x7ca4];
    d948:	07 30       	R0 = R7;
    d94a:	ff e3 5b 93 	CALL 0x0 <_AddRecordToResponseList>;
    d94e:	10 32       	P2 = R0;
    d950:	28 30       	R5 = R0;
    d952:	d2 6f       	P2 += -0x6;		/* ( -6) */
    d954:	42 30       	R0 = P2;
    d956:	32 e7 15 00 	[SP + 0x54] = P2;
    d95a:	80 0c       	CC = R0 < 0x0;
    d95c:	02 18       	IF CC JUMP 0xd960 <_mDNSCoreReceive+0x22a0>;
    d95e:	e6 2c       	JUMP.S 0xd32a <_mDNSCoreReceive+0x1c6a>;
    d960:	df 2c       	JUMP.S 0xd31e <_mDNSCoreReceive+0x1c5e>;
    d962:	04 0c       	CC = R4 == 0x0;
    d964:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    d966:	38 07       	IF CC R7 = R0;
    d968:	ff e2 70 f3 	JUMP.L 0xc048 <_mDNSCoreReceive+0x988>;
    d96c:	00 00       	NOP;
    d96e:	2f e4 29 1f 	R7 = [P5 + 0x7ca4];
    d972:	07 30       	R0 = R7;
    d974:	ff e3 46 93 	CALL 0x0 <_AddRecordToResponseList>;
    d978:	08 30       	R1 = R0;
    d97a:	f1 66       	R1 += -0x22;		/* (-34) */
    d97c:	81 0c       	CC = R1 < 0x0;
    d97e:	02 18       	IF CC JUMP 0xd982 <_mDNSCoreReceive+0x22c2>;
    d980:	14 2d       	JUMP.S 0xd3a8 <_mDNSCoreReceive+0x1ce8>;
    d982:	0a 2d       	JUMP.S 0xd396 <_mDNSCoreReceive+0x1cd6>;
    d984:	29 e1 68 09 	P1 = 0x968 (X);		/*		P1=0x968(2408) */
    d988:	8e 5b       	SP = SP + P1;
    d98a:	77 90       	FP = [SP++];
    d98c:	27 01       	RETS = [SP++];
    d98e:	a3 05       	(R7:4, P5:3) = [SP++];
    d990:	10 00       	RTS;
	...

0000d994 <_CheckCacheExpiration>:
_CheckCacheExpiration():
    d994:	e3 05       	[--SP] = (R7:4, P5:3);
    d996:	20 32       	P4 = R0;
    d998:	00 e8 0b 00 	LINK 0x2c;		/* (44) */
    d99c:	32 b2       	[SP + 0x20] = R2;
    d99e:	a0 e4 34 00 	R0 = B[P4 + 0x34] (Z);
    d9a2:	00 0c       	CC = R0 == 0x0;
    d9a4:	0c 1c       	IF CC JUMP 0xd9bc <_CheckCacheExpiration+0x28> (BP);
    d9a6:	66 6d       	SP += 0x2c;		/* ( 44) */
    d9a8:	77 90       	FP = [SP++];
    d9aa:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x438(1080) */
    d9ae:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    d9b0:	01 e1 34 40 	R1.L = 0x4034;		/* (16436)	R1=0x4034(16436) */
    d9b4:	27 01       	RETS = [SP++];
    d9b6:	a3 05       	(R7:4, P5:3) = [SP++];
    d9b8:	ff e2 24 93 	JUMP.L 0x0 <_AddRecordToResponseList>;
    d9bc:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    d9be:	a0 e6 34 00 	B[P4 + 0x34] = R0;
    d9c2:	20 e1 4a 02 	R0 = 0x24a (X);		/*		R0=0x24a(586) */
    d9c6:	48 41       	R0 = (R0 + R1) << 0x2;
    d9c8:	08 32       	P1 = R0;
    d9ca:	34 a2       	R4 = [SP + 0x20];
    d9cc:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0x0 <_AddRecordToResponseList>(  0) */
    d9d0:	45 e1 00 00 	R5.H = 0x0;		/* (  0)	R5=0x0 <_AddRecordToResponseList>(  0) */
    d9d4:	44 64       	R4 += 0x8;		/* (  8) */
    d9d6:	4c 5a       	P1 = P4 + P1;
    d9d8:	71 be       	[SP + 0x24] = P1;
    d9da:	06 e1 00 00 	R6.L = 0x0;		/* (  0)	R6=0x0 <_AddRecordToResponseList>(  0) */
    d9de:	05 e1 00 00 	R5.L = 0x0;		/* (  0)	R5=0x0 <_AddRecordToResponseList>(  0) */
    d9e2:	63 21       	JUMP.S 0xdca8 <_CheckCacheExpiration+0x314>;
    d9e4:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    d9e8:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    d9ec:	10 91       	R0 = [P2];
    d9ee:	d9 a0       	R1 = [P3 + 0xc];
    d9f0:	27 e5 37 00 	FP = [P4 + 0xdc];
    d9f4:	c1 40       	R1 *= R0;
    d9f6:	1f a3       	R7 = [P3 + 0x30];
    d9f8:	f9 51       	R7 = R1 + R7;
    d9fa:	57 30       	R2 = FP;
    d9fc:	7a 52       	R1 = R2 - R7;
    d9fe:	81 0c       	CC = R1 < 0x0;
    da00:	1e 1d       	IF CC JUMP 0xdc3c <_CheckCacheExpiration+0x2a8> (BP);
    da02:	0c 32       	P1 = R4;
    da04:	1d e5 10 00 	P5 = [P3 + 0x40];
    da08:	19 91       	R1 = [P3];
    da0a:	09 93       	[P1] = R1;
    da0c:	45 0c       	CC = P5 == 0x0;
    da0e:	fe 1c       	IF CC JUMP 0xdc0a <_CheckCacheExpiration+0x276> (BP);
    da10:	69 e4 99 00 	R1 = W[P5 + 0x132] (Z);
    da14:	01 0c       	CC = R1 == 0x0;
    da16:	17 1c       	IF CC JUMP 0xda44 <_CheckCacheExpiration+0xb0> (BP);
    da18:	29 e4 8e 00 	R1 = [P5 + 0x238];
    da1c:	01 0c       	CC = R1 == 0x0;
    da1e:	13 14       	IF !CC JUMP 0xda44 <_CheckCacheExpiration+0xb0> (BP);
    da20:	29 a1       	R1 = [P5 + 0x10];
    da22:	01 0d       	CC = R1 <= 0x0;
    da24:	10 1c       	IF CC JUMP 0xda44 <_CheckCacheExpiration+0xb0> (BP);
    da26:	a9 a3       	R1 = [P5 + 0x38];
    da28:	01 0c       	CC = R1 == 0x0;
    da2a:	0d 14       	IF !CC JUMP 0xda44 <_CheckCacheExpiration+0xb0> (BP);
    da2c:	19 60       	R1 = 0x3 (X);		/*		R1=0x3(  3) */
    da2e:	10 64       	R0 += 0x2;		/* (  2) */
    da30:	ff e3 e8 92 	CALL 0x0 <_AddRecordToResponseList>;
    da34:	4f 30       	R1 = FP;
    da36:	28 b1       	[P5 + 0x10] = R0;
    da38:	01 52       	R0 = R1 - R0;
    da3a:	e8 b0       	[P5 + 0xc] = R0;
    da3c:	44 30       	R0 = P4;
    da3e:	4d 30       	R1 = P5;
    da40:	ff e3 c4 a2 	CALL 0x1fc8 <_SetNextQueryTime>;
    da44:	00 00       	NOP;
    da46:	25 e5 4e 00 	P5 = [P4 + 0x138];
    da4a:	45 0c       	CC = P5 == 0x0;
    da4c:	11 1c       	IF CC JUMP 0xda6e <_CheckCacheExpiration+0xda> (BP);
    da4e:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    da52:	ff e3 d7 92 	CALL 0x0 <_AddRecordToResponseList>;
    da56:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    da5a:	95 5a       	P2 = P5 + P2;
    da5c:	f0 b0       	[SP + 0xc] = R0;
    da5e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3(  3) */
    da62:	52 30       	R2 = P2;
    da64:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    da66:	01 e1 68 40 	R1.L = 0x4068;		/* (16488)	R1=0x4068(16488) */
    da6a:	ff e3 cb 92 	CALL 0x0 <_AddRecordToResponseList>;
    da6e:	53 30       	R2 = P3;
    da70:	20 e4 4c 00 	R0 = [P4 + 0x130];
    da74:	22 64       	R2 += 0x4;		/* (  4) */
    da76:	20 e6 4e 00 	[P4 + 0x138] = R0;
    da7a:	b2 b2       	[SP + 0x28] = R2;
    da7c:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    da7e:	2f e1 34 01 	FP = 0x134 (X);		/*		FP=0x134(308) */
    da82:	b3 20       	JUMP.S 0xdbe8 <_CheckCacheExpiration+0x254>;
    da84:	00 00       	NOP;
    da86:	28 e4 92 00 	R0 = [P5 + 0x248];
    da8a:	00 0c       	CC = R0 == 0x0;
    da8c:	05 1c       	IF CC JUMP 0xda96 <_CheckCacheExpiration+0x102> (BP);
    da8e:	28 e4 2d 00 	R0 = [P5 + 0xb4];
    da92:	00 0c       	CC = R0 == 0x0;
    da94:	a2 14       	IF !CC JUMP 0xdbd8 <_CheckCacheExpiration+0x244> (BP);
    da96:	b0 a2       	R0 = [SP + 0x28];
    da98:	4d 30       	R1 = P5;
    da9a:	ff e3 b3 92 	CALL 0x0 <_AddRecordToResponseList>;
    da9e:	00 0c       	CC = R0 == 0x0;
    daa0:	9c 1c       	IF CC JUMP 0xdbd8 <_CheckCacheExpiration+0x244> (BP);
    daa2:	28 e4 31 00 	R0 = [P5 + 0xc4];
    daa6:	ef b2       	[P5 + 0x2c] = R7;
    daa8:	2f b3       	[P5 + 0x30] = R7;
    daaa:	00 0c       	CC = R0 == 0x0;
    daac:	32 1c       	IF CC JUMP 0xdb10 <_CheckCacheExpiration+0x17c> (BP);
    daae:	28 a2       	R0 = [P5 + 0x20];
    dab0:	00 0c       	CC = R0 == 0x0;
    dab2:	2f 14       	IF !CC JUMP 0xdb10 <_CheckCacheExpiration+0x17c> (BP);
    dab4:	0e 32       	P1 = R6;
    dab6:	08 91       	R0 = [P1];
    dab8:	00 0c       	CC = R0 == 0x0;
    daba:	28 1c       	IF CC JUMP 0xdb0a <_CheckCacheExpiration+0x176> (BP);
    dabc:	bd 5a       	P2 = P5 + FP;
    dabe:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    dac2:	f2 bd       	[SP + 0x1c] = P2;
    dac4:	ff e3 9e 92 	CALL 0x0 <_AddRecordToResponseList>;
    dac8:	29 e5 32 00 	P1 = [P5 + 0xc8];
    dacc:	f2 ad       	P2 = [SP + 0x1c];
    dace:	41 0c       	CC = P1 == 0x0;
    dad0:	08 1c       	IF CC JUMP 0xdae0 <_CheckCacheExpiration+0x14c> (BP);
    dad2:	59 30       	R3 = P1;
    dad4:	43 64       	R3 += 0x8;		/* (  8) */
    dad6:	8a e5 1c 00 	R2 = B[P1 + 0x1c] (X);
    dada:	89 e5 1d 00 	R1 = B[P1 + 0x1d] (X);
    dade:	06 20       	JUMP.S 0xdaea <_CheckCacheExpiration+0x156>;
    dae0:	0d 32       	P1 = R5;
    dae2:	03 60       	R3 = 0x0 (X);		/*		R3=0x0(  0) */
    dae4:	4a 99       	R2 = B[P1] (X);
    dae6:	89 e5 01 00 	R1 = B[P1 + 0x1] (X);
    daea:	52 43       	R2 = R2.B (Z);
    daec:	42 4f       	R2 <<= 0x8;
    daee:	49 43       	R1 = R1.B (Z);
    daf0:	51 56       	R1 = R1 | R2;
    daf2:	b1 b1       	[SP + 0x18] = R1;
    daf4:	30 b1       	[SP + 0x10] = R0;
    daf6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4068(16488) */
    dafa:	f2 bc       	[SP + 0xc] = P2;
    dafc:	73 b1       	[SP + 0x14] = R3;
    dafe:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    db00:	01 e1 a8 40 	R1.L = 0x40a8;		/* (16552)	R1=0x40a8(16552) */
    db04:	55 30       	R2 = P5;
    db06:	ff e3 7d 92 	CALL 0x0 <_AddRecordToResponseList>;
    db0a:	00 00       	NOP;
    db0c:	28 91       	R0 = [P5];
    db0e:	6b 20       	JUMP.S 0xdbe4 <_CheckCacheExpiration+0x250>;
    db10:	00 00       	NOP;
    db12:	28 a2       	R0 = [P5 + 0x20];
    db14:	00 0c       	CC = R0 == 0x0;
    db16:	29 14       	IF !CC JUMP 0xdb68 <_CheckCacheExpiration+0x1d4> (BP);
    db18:	bd 5a       	P2 = P5 + FP;
    db1a:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    db1e:	f2 bd       	[SP + 0x1c] = P2;
    db20:	ff e3 70 92 	CALL 0x0 <_AddRecordToResponseList>;
    db24:	29 e5 32 00 	P1 = [P5 + 0xc8];
    db28:	f2 ad       	P2 = [SP + 0x1c];
    db2a:	41 0c       	CC = P1 == 0x0;
    db2c:	08 1c       	IF CC JUMP 0xdb3c <_CheckCacheExpiration+0x1a8> (BP);
    db2e:	59 30       	R3 = P1;
    db30:	43 64       	R3 += 0x8;		/* (  8) */
    db32:	8a e5 1c 00 	R2 = B[P1 + 0x1c] (X);
    db36:	89 e5 1d 00 	R1 = B[P1 + 0x1d] (X);
    db3a:	06 20       	JUMP.S 0xdb46 <_CheckCacheExpiration+0x1b2>;
    db3c:	0d 32       	P1 = R5;
    db3e:	03 60       	R3 = 0x0 (X);		/*		R3=0x0(  0) */
    db40:	4a 99       	R2 = B[P1] (X);
    db42:	89 e5 01 00 	R1 = B[P1 + 0x1] (X);
    db46:	52 43       	R2 = R2.B (Z);
    db48:	42 4f       	R2 <<= 0x8;
    db4a:	49 43       	R1 = R1.B (Z);
    db4c:	51 56       	R1 = R1 | R2;
    db4e:	b1 b1       	[SP + 0x18] = R1;
    db50:	30 b1       	[SP + 0x10] = R0;
    db52:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x40a8(16552) */
    db56:	f2 bc       	[SP + 0xc] = P2;
    db58:	73 b1       	[SP + 0x14] = R3;
    db5a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    db5c:	01 e1 f8 40 	R1.L = 0x40f8;		/* (16632)	R1=0x40f8(16632) */
    db60:	55 30       	R2 = P5;
    db62:	ff e3 4f 92 	CALL 0x0 <_AddRecordToResponseList>;
    db66:	13 20       	JUMP.S 0xdb8c <_CheckCacheExpiration+0x1f8>;
    db68:	f8 67       	R0 += -0x1;		/* ( -1) */
    db6a:	28 b2       	[P5 + 0x20] = R0;
    db6c:	18 a6       	R0 = W[P3 + 0x10] (Z);
    db6e:	21 e1 00 04 	R1 = 0x400 (X);		/*		R1=0x400(1024) */
    db72:	08 0a       	CC = R0 <= R1 (IU);
    db74:	04 1c       	IF CC JUMP 0xdb7c <_CheckCacheExpiration+0x1e8> (BP);
    db76:	68 a2       	R0 = [P5 + 0x24];
    db78:	f8 67       	R0 += -0x1;		/* ( -1) */
    db7a:	68 b2       	[P5 + 0x24] = R0;
    db7c:	00 00       	NOP;
    db7e:	98 e4 04 00 	R0 = B[P3 + 0x4] (Z);
    db82:	20 48       	CC = !BITTST (R0, 0x4);		/* bit  4 */
    db84:	04 1c       	IF CC JUMP 0xdb8c <_CheckCacheExpiration+0x1f8> (BP);
    db86:	a8 a2       	R0 = [P5 + 0x28];
    db88:	f8 67       	R0 += -0x1;		/* ( -1) */
    db8a:	a8 b2       	[P5 + 0x28] = R0;
    db8c:	00 00       	NOP;
    db8e:	5a ae       	P2 = [P3 + 0x24];
    db90:	10 95       	R0 = W[P2] (Z);
    db92:	00 0c       	CC = R0 == 0x0;
    db94:	22 1c       	IF CC JUMP 0xdbd8 <_CheckCacheExpiration+0x244> (BP);
    db96:	28 a2       	R0 = [P5 + 0x20];
    db98:	00 0c       	CC = R0 == 0x0;
    db9a:	1a 14       	IF !CC JUMP 0xdbce <_CheckCacheExpiration+0x23a> (BP);
    db9c:	0e 32       	P1 = R6;
    db9e:	08 91       	R0 = [P1];
    dba0:	00 0c       	CC = R0 == 0x0;
    dba2:	0f 1c       	IF CC JUMP 0xdbc0 <_CheckCacheExpiration+0x22c> (BP);
    dba4:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    dba8:	ff e3 2c 92 	CALL 0x0 <_AddRecordToResponseList>;
    dbac:	bd 5a       	P2 = P5 + FP;
    dbae:	f0 b0       	[SP + 0xc] = R0;
    dbb0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x400(1024) */
    dbb4:	52 30       	R2 = P2;
    dbb6:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    dbb8:	01 e1 5c 41 	R1.L = 0x415c;		/* (16732)	R1=0x415c(16732) */
    dbbc:	ff e3 22 92 	CALL 0x0 <_AddRecordToResponseList>;
    dbc0:	7d 5a       	P1 = P5 + FP;
    dbc2:	6a a0       	R2 = [P5 + 0x4];
    dbc4:	49 30       	R1 = P1;
    dbc6:	f7 b0       	[SP + 0xc] = R7;
    dbc8:	44 30       	R0 = P4;
    dbca:	ff e3 01 a7 	CALL 0x29cc <_ReconfirmAntecedents>;
    dbce:	44 30       	R0 = P4;
    dbd0:	4b 30       	R1 = P3;
    dbd2:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    dbd4:	ff e3 22 e8 	CALL 0xac18 <_AnswerCurrentQuestionWithResourceRecord>;
    dbd8:	00 00       	NOP;
    dbda:	22 e5 4e 00 	P2 = [P4 + 0x138];
    dbde:	6a 08       	CC = P2 == P5;
    dbe0:	04 14       	IF !CC JUMP 0xdbe8 <_CheckCacheExpiration+0x254> (BP);
    dbe2:	10 91       	R0 = [P2];
    dbe4:	20 e6 4e 00 	[P4 + 0x138] = R0;
    dbe8:	00 00       	NOP;
    dbea:	25 e5 4e 00 	P5 = [P4 + 0x138];
    dbee:	45 0c       	CC = P5 == 0x0;
    dbf0:	05 1c       	IF CC JUMP 0xdbfa <_CheckCacheExpiration+0x266> (BP);
    dbf2:	22 e5 4d 00 	P2 = [P4 + 0x134];
    dbf6:	55 08       	CC = P5 == P2;
    dbf8:	46 17       	IF !CC JUMP 0xda84 <_CheckCacheExpiration+0xf0> (BP);
    dbfa:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    dbfc:	20 e6 4e 00 	[P4 + 0x138] = R0;
    dc00:	20 e4 54 00 	R0 = [P4 + 0x150];
    dc04:	f8 67       	R0 += -0x1;		/* ( -1) */
    dc06:	20 e6 54 00 	[P4 + 0x150] = R0;
    dc0a:	00 00       	NOP;
    dc0c:	58 a2       	R0 = [P3 + 0x24];
    dc0e:	00 0c       	CC = R0 == 0x0;
    dc10:	09 18       	IF CC JUMP 0xdc22 <_CheckCacheExpiration+0x28e>;
    dc12:	2a e1 50 00 	P2 = 0x50 (X);		/*		P2=0x50( 80) */
    dc16:	93 5a       	P2 = P3 + P2;
    dc18:	4a 30       	R1 = P2;
    dc1a:	08 08       	CC = R0 == R1;
    dc1c:	03 18       	IF CC JUMP 0xdc22 <_CheckCacheExpiration+0x28e>;
    dc1e:	ff e3 f1 91 	CALL 0x0 <_AddRecordToResponseList>;
    dc22:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    dc24:	58 b2       	[P3 + 0x24] = R0;
    dc26:	20 e4 56 00 	R0 = [P4 + 0x158];
    dc2a:	18 93       	[P3] = R0;
    dc2c:	20 e4 53 00 	R0 = [P4 + 0x14c];
    dc30:	f8 67       	R0 += -0x1;		/* ( -1) */
    dc32:	23 e7 56 00 	[P4 + 0x158] = P3;
    dc36:	20 e6 53 00 	[P4 + 0x14c] = R0;
    dc3a:	37 20       	JUMP.S 0xdca8 <_CheckCacheExpiration+0x314>;
    dc3c:	00 00       	NOP;
    dc3e:	58 a3       	R0 = [P3 + 0x34];
    dc40:	00 0c       	CC = R0 == 0x0;
    dc42:	09 1c       	IF CC JUMP 0xdc54 <_CheckCacheExpiration+0x2c0> (BP);
    dc44:	57 30       	R2 = FP;
    dc46:	50 52       	R1 = R0 - R2;
    dc48:	01 0d       	CC = R1 <= 0x0;
    dc4a:	27 14       	IF !CC JUMP 0xdc98 <_CheckCacheExpiration+0x304> (BP);
    dc4c:	44 30       	R0 = P4;
    dc4e:	4b 30       	R1 = P3;
    dc50:	ff e3 6c ea 	CALL 0xb128 <_CacheRecordDeferredAdd>;
    dc54:	00 00       	NOP;
    dc56:	18 e4 10 00 	R0 = [P3 + 0x40];
    dc5a:	00 0c       	CC = R0 == 0x0;
    dc5c:	1f 1c       	IF CC JUMP 0xdc9a <_CheckCacheExpiration+0x306> (BP);
    dc5e:	18 e4 11 00 	R0 = [P3 + 0x44];
    dc62:	18 0e       	CC = R0 <= 0x3 (IU);
    dc64:	1b 14       	IF !CC JUMP 0xdc9a <_CheckCacheExpiration+0x306> (BP);
    dc66:	20 e4 37 00 	R0 = [P4 + 0xdc];
    dc6a:	9c a3       	R4 = [P3 + 0x38];
    dc6c:	60 52       	R1 = R0 - R4;
    dc6e:	81 0c       	CC = R1 < 0x0;
    dc70:	0d 14       	IF !CC JUMP 0xdc8a <_CheckCacheExpiration+0x2f6> (BP);
    dc72:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x968 */
    dc76:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    dc7a:	09 91       	R1 = [P1];
    dc7c:	d8 a0       	R0 = [P3 + 0xc];
    dc7e:	c8 40       	R0 *= R1;
    dc80:	91 61       	R1 = 0x32 (X);		/*		R1=0x32( 50) */
    dc82:	ff e3 bf 91 	CALL 0x0 <_AddRecordToResponseList>;
    dc86:	e0 51       	R7 = R0 + R4;
    dc88:	09 20       	JUMP.S 0xdc9a <_CheckCacheExpiration+0x306>;
    dc8a:	ff 63       	R7 = -0x1 (X);		/*		R7=0xffffffff( -1) */
    dc8c:	47 e1 ff 3f 	R7.H = 0x3fff;		/* (16383)	R7=0x3fffffff(1073741823) */
    dc90:	20 e6 3d 00 	[P4 + 0xf4] = R0;
    dc94:	f8 51       	R7 = R0 + R7;
    dc96:	02 20       	JUMP.S 0xdc9a <_CheckCacheExpiration+0x306>;
    dc98:	38 30       	R7 = R0;
    dc9a:	72 ae       	P2 = [SP + 0x24];
    dc9c:	10 91       	R0 = [P2];
    dc9e:	38 52       	R0 = R0 - R7;
    dca0:	00 0d       	CC = R0 <= 0x0;
    dca2:	02 18       	IF CC JUMP 0xdca6 <_CheckCacheExpiration+0x312>;
    dca4:	17 93       	[P2] = R7;
    dca6:	63 30       	R4 = P3;
    dca8:	0c 32       	P1 = R4;
    dcaa:	4b 91       	P3 = [P1];
    dcac:	43 0c       	CC = P3 == 0x0;
    dcae:	9b 16       	IF !CC JUMP 0xd9e4 <_CheckCacheExpiration+0x50> (BP);
    dcb0:	32 ae       	P2 = [SP + 0x20];
    dcb2:	66 6d       	SP += 0x2c;		/* ( 44) */
    dcb4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    dcb6:	d4 b0       	[P2 + 0xc] = R4;
    dcb8:	77 90       	FP = [SP++];
    dcba:	a0 e6 34 00 	B[P4 + 0x34] = R0;
    dcbe:	27 01       	RETS = [SP++];
    dcc0:	a3 05       	(R7:4, P5:3) = [SP++];
    dcc2:	10 00       	RTS;

0000dcc4 <_CheckSuppressUnusableQuestions>:
_CheckSuppressUnusableQuestions():
    dcc4:	e3 05       	[--SP] = (R7:4, P5:3);
    dcc6:	18 32       	P3 = R0;
    dcc8:	00 e8 05 00 	LINK 0x14;		/* (20) */
    dccc:	1d e5 51 00 	P5 = [P3 + 0x144];
    dcd0:	45 0c       	CC = P5 == 0x0;
    dcd2:	11 1c       	IF CC JUMP 0xdcf4 <_CheckSuppressUnusableQuestions+0x30> (BP);
    dcd4:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    dcd8:	ff e3 94 91 	CALL 0x0 <_AddRecordToResponseList>;
    dcdc:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    dce0:	95 5a       	P2 = P5 + P2;
    dce2:	f0 b0       	[SP + 0xc] = R0;
    dce4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x32( 50) */
    dce8:	52 30       	R2 = P2;
    dcea:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    dcec:	01 e1 b8 41 	R1.L = 0x41b8;		/* (16824)	R1=0x41b8(16824) */
    dcf0:	ff e3 88 91 	CALL 0x0 <_AddRecordToResponseList>;
    dcf4:	00 00       	NOP;
    dcf6:	18 e4 4c 00 	R0 = [P3 + 0x130];
    dcfa:	4f e1 00 00 	FP.H = 0x0;		/* (  0)	FP=0x134 */
    dcfe:	18 e6 51 00 	[P3 + 0x144] = R0;
    dd02:	04 68       	P4 = 0x0 (X);		/*		P4=0x0(  0) */
    dd04:	27 e1 34 01 	R7 = 0x134 (X);		/*		R7=0x134(308) */
    dd08:	0f e1 00 00 	FP.L = 0x0;		/* (  0)	FP=0x0 <_AddRecordToResponseList> */
    dd0c:	05 60       	R5 = 0x0 (X);		/*		R5=0x0(  0) */
    dd0e:	0c 60       	R4 = 0x1 (X);		/*		R4=0x1(  1) */
    dd10:	53 20       	JUMP.S 0xddb6 <_CheckSuppressUnusableQuestions+0xf2>;
    dd12:	00 00       	NOP;
    dd14:	28 91       	R0 = [P5];
    dd16:	18 e6 51 00 	[P3 + 0x144] = R0;
    dd1a:	68 e4 99 00 	R0 = W[P5 + 0x132] (Z);
    dd1e:	00 0c       	CC = R0 == 0x0;
    dd20:	4b 1c       	IF CC JUMP 0xddb6 <_CheckSuppressUnusableQuestions+0xf2> (BP);
    dd22:	28 e4 92 00 	R0 = [P5 + 0x248];
    dd26:	00 0c       	CC = R0 == 0x0;
    dd28:	47 1c       	IF CC JUMP 0xddb6 <_CheckSuppressUnusableQuestions+0xf2> (BP);
    dd2a:	45 30       	R0 = P5;
    dd2c:	78 50       	R1 = R0 + R7;
    dd2e:	2e e4 2d 00 	R6 = [P5 + 0xb4];
    dd32:	28 e4 46 00 	R0 = [P5 + 0x118];
    dd36:	6a e5 1a 01 	R2 = W[P5 + 0x234] (X);
    dd3a:	f0 b0       	[SP + 0xc] = R0;
    dd3c:	43 30       	R0 = P3;
    dd3e:	ff e3 05 97 	CALL 0xb48 <_ShouldSuppressQuery>;
    dd42:	28 e6 2d 00 	[P5 + 0xb4] = R0;
    dd46:	30 08       	CC = R0 == R6;
    dd48:	37 18       	IF CC JUMP 0xddb6 <_CheckSuppressUnusableQuestions+0xf2>;
    dd4a:	00 0c       	CC = R0 == 0x0;
    dd4c:	0b 1c       	IF CC JUMP 0xdd62 <_CheckSuppressUnusableQuestions+0x9e> (BP);
    dd4e:	2d e6 2d 00 	[P5 + 0xb4] = R5;
    dd52:	43 30       	R0 = P3;
    dd54:	4d 30       	R1 = P5;
    dd56:	ff e3 c3 e8 	CALL 0xaedc <_CacheRecordRmvEventsForQuestion>;
    dd5a:	00 0c       	CC = R0 == 0x0;
    dd5c:	09 1c       	IF CC JUMP 0xdd6e <_CheckSuppressUnusableQuestions+0xaa> (BP);
    dd5e:	2c e6 2d 00 	[P5 + 0xb4] = R4;
    dd62:	43 30       	R0 = P3;
    dd64:	4d 30       	R1 = P5;
    dd66:	ff e3 4b e5 	CALL 0xa7fc <_LocalRecordRmvEventsForQuestion>;
    dd6a:	00 0c       	CC = R0 == 0x0;
    dd6c:	0c 14       	IF !CC JUMP 0xdd84 <_CheckSuppressUnusableQuestions+0xc0> (BP);
    dd6e:	38 91       	R0 = [FP];
    dd70:	00 0c       	CC = R0 == 0x0;
    dd72:	22 1c       	IF CC JUMP 0xddb6 <_CheckSuppressUnusableQuestions+0xf2> (BP);
    dd74:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x41b8(16824) */
    dd78:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    dd7a:	01 e1 0c 42 	R1.L = 0x420c;		/* (16908)	R1=0x420c(16908) */
    dd7e:	ff e3 41 91 	CALL 0x0 <_AddRecordToResponseList>;
    dd82:	1a 20       	JUMP.S 0xddb6 <_CheckSuppressUnusableQuestions+0xf2>;
    dd84:	38 91       	R0 = [FP];
    dd86:	00 0c       	CC = R0 == 0x0;
    dd88:	11 1c       	IF CC JUMP 0xddaa <_CheckSuppressUnusableQuestions+0xe6> (BP);
    dd8a:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    dd8e:	ff e3 39 91 	CALL 0x0 <_AddRecordToResponseList>;
    dd92:	0f 32       	P1 = R7;
    dd94:	30 b1       	[SP + 0x10] = R0;
    dd96:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x420c(16908) */
    dd9a:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    dd9c:	01 e1 5c 42 	R1.L = 0x425c;		/* (16988)	R1=0x425c(16988) */
    dda0:	8d 5a       	P2 = P5 + P1;
    dda2:	f2 bc       	[SP + 0xc] = P2;
    dda4:	55 30       	R2 = P5;
    dda6:	ff e3 2d 91 	CALL 0x0 <_AddRecordToResponseList>;
    ddaa:	43 30       	R0 = P3;
    ddac:	4d 30       	R1 = P5;
    ddae:	ff e3 77 b5 	CALL 0x489c <_mDNS_StopQuery_internal>;
    ddb2:	6c 93       	[P5] = P4;
    ddb4:	65 32       	P4 = P5;
    ddb6:	00 00       	NOP;
    ddb8:	1d e5 51 00 	P5 = [P3 + 0x144];
    ddbc:	45 0c       	CC = P5 == 0x0;
    ddbe:	aa 17       	IF !CC JUMP 0xdd12 <_CheckSuppressUnusableQuestions+0x4e> (BP);
    ddc0:	1c 20       	JUMP.S 0xddf8 <_CheckSuppressUnusableQuestions+0x134>;
    ddc2:	00 00       	NOP;
    ddc4:	26 91       	R6 = [P4];
    ddc6:	28 91       	R0 = [P5];
    ddc8:	27 93       	[P4] = R7;
    ddca:	00 0c       	CC = R0 == 0x0;
    ddcc:	10 1c       	IF CC JUMP 0xddec <_CheckSuppressUnusableQuestions+0x128> (BP);
    ddce:	60 e5 1a 01 	R0 = W[P4 + 0x234] (X);
    ddd2:	ff e3 17 91 	CALL 0x0 <_AddRecordToResponseList>;
    ddd6:	bc 5a       	P2 = P4 + FP;
    ddd8:	30 b1       	[SP + 0x10] = R0;
    ddda:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x425c(16988) */
    ddde:	f2 bc       	[SP + 0xc] = P2;
    dde0:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    dde2:	01 e1 98 42 	R1.L = 0x4298;		/* (17048)	R1=0x4298(17048) */
    dde6:	54 30       	R2 = P4;
    dde8:	ff e3 0c 91 	CALL 0x0 <_AddRecordToResponseList>;
    ddec:	4c 30       	R1 = P4;
    ddee:	43 30       	R0 = P3;
    ddf0:	ff e3 d0 db 	CALL 0x9590 <_mDNS_StartQuery_internal>;
    ddf4:	26 32       	P4 = R6;
    ddf6:	08 20       	JUMP.S 0xde06 <_CheckSuppressUnusableQuestions+0x142>;
    ddf8:	4d e1 00 00 	P5.H = 0x0;		/* (  0)	P5=0x0 <_AddRecordToResponseList> */
    ddfc:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    ddfe:	0d e1 00 00 	P5.L = 0x0;		/* (  0)	P5=0x0 <_AddRecordToResponseList> */
    de02:	2f e1 34 01 	FP = 0x134 (X);		/*		FP=0x134(308) */
    de06:	44 0c       	CC = P4 == 0x0;
    de08:	dd 17       	IF !CC JUMP 0xddc2 <_CheckSuppressUnusableQuestions+0xfe> (BP);
    de0a:	a6 6c       	SP += 0x14;		/* ( 20) */
    de0c:	77 90       	FP = [SP++];
    de0e:	27 01       	RETS = [SP++];
    de10:	a3 05       	(R7:4, P5:3) = [SP++];
    de12:	10 00       	RTS;

0000de14 <_mDNS_DeregisterInterface>:
_mDNS_DeregisterInterface():
    de14:	e3 05       	[--SP] = (R7:4, P5:3);
    de16:	20 32       	P4 = R0;
    de18:	29 32       	P5 = R1;
    de1a:	2a e1 dc 1f 	P2 = 0x1fdc (X);		/*		P2=0x1fdc(8156) */
    de1e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4298(17048) */
    de22:	00 e8 07 00 	LINK 0x1c;		/* (28) */
    de26:	94 5a       	P2 = P4 + P2;
    de28:	7a 30       	R7 = P2;
    de2a:	32 30       	R6 = R2;
    de2c:	01 e1 98 02 	R1.L = 0x298;		/* (664)	R1=0x298(664) */
    de30:	ff e3 e8 90 	CALL 0x0 <_AddRecordToResponseList>;
    de34:	22 e5 f7 07 	P2 = [P4 + 0x1fdc];
    de38:	1f 32       	P3 = R7;
    de3a:	03 20       	JUMP.S 0xde40 <_mDNS_DeregisterInterface+0x2c>;
    de3c:	5a 32       	P3 = P2;
    de3e:	52 91       	P2 = [P2];
    de40:	42 0c       	CC = P2 == 0x0;
    de42:	54 19       	IF CC JUMP 0xe0ea <_mDNS_DeregisterInterface+0x2d6>;
    de44:	6a 08       	CC = P2 == P5;
    de46:	fb 17       	IF !CC JUMP 0xde3c <_mDNS_DeregisterInterface+0x28> (BP);
    de48:	44 30       	R0 = P4;
    de4a:	4d 30       	R1 = P5;
    de4c:	ff e3 cc d4 	CALL 0x87e4 <_mDNS_DeactivateNetWake_internal>;
    de50:	5a 91       	P2 = [P3];
    de52:	10 91       	R0 = [P2];
    de54:	18 93       	[P3] = R0;
    de56:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    de58:	28 93       	[P5] = R0;
    de5a:	a8 e4 04 00 	R0 = B[P5 + 0x4] (Z);
    de5e:	00 0c       	CC = R0 == 0x0;
    de60:	20 e4 f7 07 	R0 = [P4 + 0x1fdc];
    de64:	17 10       	IF !CC JUMP 0xde92 <_mDNS_DeregisterInterface+0x7e>;
    de66:	18 32       	P3 = R0;
    de68:	12 20       	JUMP.S 0xde8c <_mDNS_DeregisterInterface+0x78>;
    de6a:	00 00       	NOP;
    de6c:	98 e4 04 00 	R0 = B[P3 + 0x4] (Z);
    de70:	00 0c       	CC = R0 == 0x0;
    de72:	0b 1c       	IF CC JUMP 0xde88 <_mDNS_DeregisterInterface+0x74> (BP);
    de74:	19 e4 10 05 	R1 = [P3 + 0x1440];
    de78:	28 e4 10 05 	R0 = [P5 + 0x1440];
    de7c:	01 08       	CC = R1 == R0;
    de7e:	05 14       	IF !CC JUMP 0xde88 <_mDNS_DeregisterInterface+0x74> (BP);
    de80:	07 30       	R0 = R7;
    de82:	4b 30       	R1 = P3;
    de84:	ff e3 34 a0 	CALL 0x1eec <_UpdateInterfaceProtocols.clone.5>;
    de88:	00 00       	NOP;
    de8a:	5b 91       	P3 = [P3];
    de8c:	43 0c       	CC = P3 == 0x0;
    de8e:	ee 17       	IF !CC JUMP 0xde6a <_mDNS_DeregisterInterface+0x56> (BP);
    de90:	ef 20       	JUMP.S 0xe06e <_mDNS_DeregisterInterface+0x25a>;
    de92:	2f e5 10 05 	FP = [P5 + 0x1440];
    de96:	4f 30       	R1 = FP;
    de98:	ff e3 c4 9d 	CALL 0x1a20 <_FirstInterfaceForID.clone.0>;
    de9c:	18 32       	P3 = R0;
    de9e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x1fdc */
    dea2:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    dea6:	43 0c       	CC = P3 == 0x0;
    dea8:	4e 18       	IF CC JUMP 0xdf44 <_mDNS_DeregisterInterface+0x130>;
    deaa:	10 91       	R0 = [P2];
    deac:	00 0c       	CC = R0 == 0x0;
    deae:	11 1c       	IF CC JUMP 0xded0 <_mDNS_DeregisterInterface+0xbc> (BP);
    deb0:	2a e1 74 14 	P2 = 0x1474 (X);		/*		P2=0x1474(5236) */
    deb4:	95 5a       	P2 = P5 + P2;
    deb6:	f2 bc       	[SP + 0xc] = P2;
    deb8:	2a e1 44 14 	P2 = 0x1444 (X);		/*		P2=0x1444(5188) */
    debc:	95 5a       	P2 = P5 + P2;
    debe:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x298(664) */
    dec2:	32 bd       	[SP + 0x10] = P2;
    dec4:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    dec6:	01 e1 d4 42 	R1.L = 0x42d4;		/* (17108)	R1=0x42d4(17108) */
    deca:	57 30       	R2 = FP;
    decc:	ff e3 9a 90 	CALL 0x0 <_AddRecordToResponseList>;
    ded0:	00 00       	NOP;
    ded2:	98 e4 04 00 	R0 = B[P3 + 0x4] (Z);
    ded6:	00 0c       	CC = R0 == 0x0;
    ded8:	10 1c       	IF CC JUMP 0xdef8 <_mDNS_DeregisterInterface+0xe4> (BP);
    deda:	2a e1 74 14 	P2 = 0x1474 (X);		/*		P2=0x1474(5236) */
    dede:	95 5a       	P2 = P5 + P2;
    dee0:	52 30       	R2 = P2;
    dee2:	2a e1 44 14 	P2 = 0x1444 (X);		/*		P2=0x1444(5188) */
    dee6:	95 5a       	P2 = P5 + P2;
    dee8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x42d4(17108) */
    deec:	f2 bc       	[SP + 0xc] = P2;
    deee:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    def0:	01 e1 3c 43 	R1.L = 0x433c;		/* (17212)	R1=0x433c(17212) */
    def4:	ff e3 86 90 	CALL 0x0 <_AddRecordToResponseList>;
    def8:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    defa:	98 e6 04 00 	B[P3 + 0x4] = R0;
    defe:	07 30       	R0 = R7;
    df00:	4b 30       	R1 = P3;
    df02:	ff e3 f5 9f 	CALL 0x1eec <_UpdateInterfaceProtocols.clone.5>;
    df06:	98 e4 b6 14 	R0 = B[P3 + 0x14b6] (Z);
    df0a:	00 0c       	CC = R0 == 0x0;
    df0c:	05 1c       	IF CC JUMP 0xdf16 <_mDNS_DeregisterInterface+0x102> (BP);
    df0e:	44 30       	R0 = P4;
    df10:	4b 30       	R1 = P3;
    df12:	ff e3 f9 de 	CALL 0x9d04 <_mDNS_ActivateNetWake_internal>;
    df16:	00 00       	NOP;
    df18:	22 e5 f7 07 	P2 = [P4 + 0x1fdc];
    df1c:	10 20       	JUMP.S 0xdf3c <_mDNS_DeregisterInterface+0x128>;
    df1e:	00 00       	NOP;
    df20:	11 e4 10 05 	R1 = [P2 + 0x1440];
    df24:	28 e4 10 05 	R0 = [P5 + 0x1440];
    df28:	01 08       	CC = R1 == R0;
    df2a:	07 14       	IF !CC JUMP 0xdf38 <_mDNS_DeregisterInterface+0x124> (BP);
    df2c:	11 e4 11 05 	R1 = [P2 + 0x1444];
    df30:	28 e4 11 05 	R0 = [P5 + 0x1444];
    df34:	01 08       	CC = R1 == R0;
    df36:	9b 1c       	IF CC JUMP 0xe06c <_mDNS_DeregisterInterface+0x258> (BP);
    df38:	00 00       	NOP;
    df3a:	52 91       	P2 = [P2];
    df3c:	42 0c       	CC = P2 == 0x0;
    df3e:	f0 17       	IF !CC JUMP 0xdf1e <_mDNS_DeregisterInterface+0x10a> (BP);
    df40:	0b 68       	P3 = 0x1 (X);		/*		P3=0x1(  1) */
    df42:	96 20       	JUMP.S 0xe06e <_mDNS_DeregisterInterface+0x25a>;
    df44:	10 91       	R0 = [P2];
    df46:	00 0c       	CC = R0 == 0x0;
    df48:	11 1c       	IF CC JUMP 0xdf6a <_mDNS_DeregisterInterface+0x156> (BP);
    df4a:	2a e1 74 14 	P2 = 0x1474 (X);		/*		P2=0x1474(5236) */
    df4e:	95 5a       	P2 = P5 + P2;
    df50:	f2 bc       	[SP + 0xc] = P2;
    df52:	2a e1 44 14 	P2 = 0x1444 (X);		/*		P2=0x1444(5188) */
    df56:	95 5a       	P2 = P5 + P2;
    df58:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x433c(17212) */
    df5c:	32 bd       	[SP + 0x10] = P2;
    df5e:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    df60:	01 e1 8c 43 	R1.L = 0x438c;		/* (17292)	R1=0x438c(17292) */
    df64:	57 30       	R2 = FP;
    df66:	ff e3 4d 90 	CALL 0x0 <_AddRecordToResponseList>;
    df6a:	00 00       	NOP;
    df6c:	a8 e4 b5 14 	R0 = B[P5 + 0x14b5] (Z);
    df70:	00 0c       	CC = R0 == 0x0;
    df72:	12 1c       	IF CC JUMP 0xdf96 <_mDNS_DeregisterInterface+0x182> (BP);
    df74:	06 0c       	CC = R6 == 0x0;
    df76:	10 1c       	IF CC JUMP 0xdf96 <_mDNS_DeregisterInterface+0x182> (BP);
    df78:	2a e1 74 14 	P2 = 0x1474 (X);		/*		P2=0x1474(5236) */
    df7c:	95 5a       	P2 = P5 + P2;
    df7e:	52 30       	R2 = P2;
    df80:	2a e1 44 14 	P2 = 0x1444 (X);		/*		P2=0x1444(5188) */
    df84:	95 5a       	P2 = P5 + P2;
    df86:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x438c(17292) */
    df8a:	f2 bc       	[SP + 0xc] = P2;
    df8c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    df8e:	01 e1 04 44 	R1.L = 0x4404;		/* (17412)	R1=0x4404(17412) */
    df92:	ff e3 37 90 	CALL 0x0 <_AddRecordToResponseList>;
    df96:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    df98:	22 e5 4c 00 	P2 = [P4 + 0x130];
    df9c:	12 20       	JUMP.S 0xdfc0 <_mDNS_DeregisterInterface+0x1ac>;
    df9e:	00 00       	NOP;
    dfa0:	11 e4 46 00 	R1 = [P2 + 0x118];
    dfa4:	28 e4 10 05 	R0 = [P5 + 0x1440];
    dfa8:	01 08       	CC = R1 == R0;
    dfaa:	02 14       	IF !CC JUMP 0xdfae <_mDNS_DeregisterInterface+0x19a> (BP);
    dfac:	12 b1       	[P2 + 0x10] = R2;
    dfae:	01 0c       	CC = R1 == 0x0;
    dfb0:	03 18       	IF CC JUMP 0xdfb6 <_mDNS_DeregisterInterface+0x1a2>;
    dfb2:	01 08       	CC = R1 == R0;
    dfb4:	04 14       	IF !CC JUMP 0xdfbc <_mDNS_DeregisterInterface+0x1a8> (BP);
    dfb6:	d1 a2       	R1 = [P2 + 0x2c];
    dfb8:	11 b3       	[P2 + 0x30] = R1;
    dfba:	d0 b2       	[P2 + 0x2c] = R0;
    dfbc:	00 00       	NOP;
    dfbe:	52 91       	P2 = [P2];
    dfc0:	42 0c       	CC = P2 == 0x0;
    dfc2:	ee 17       	IF !CC JUMP 0xdf9e <_mDNS_DeregisterInterface+0x18a> (BP);
    dfc4:	2a e1 5c 01 	P2 = 0x15c (X);		/*		P2=0x15c(348) */
    dfc8:	94 5a       	P2 = P4 + P2;
    dfca:	7a 30       	R7 = P2;
    dfcc:	06 0c       	CC = R6 == 0x0;
    dfce:	2a e1 28 09 	P2 = 0x928 (X);		/*		P2=0x928(2344) */
    dfd2:	94 5a       	P2 = P4 + P2;
    dfd4:	00 02       	R0 = CC;
    dfd6:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0x0 <_AddRecordToResponseList>(  0) */
    dfda:	72 bd       	[SP + 0x14] = P2;
    dfdc:	b0 e6 1b 00 	B[SP + 0x1b] = R0;
    dfe0:	06 e1 00 00 	R6.L = 0x0;		/* (  0)	R6=0x0 <_AddRecordToResponseList>(  0) */
    dfe4:	f5 60       	R5 = 0x1e (X);		/*		R5=0x1e( 30) */
    dfe6:	24 60       	R4 = 0x4 (X);		/*		R4=0x4(  4) */
    dfe8:	17 32       	P2 = R7;
    dfea:	27 64       	R7 += 0x4;		/* (  4) */
    dfec:	57 90       	FP = [P2++];
    dfee:	25 20       	JUMP.S 0xe038 <_mDNS_DeregisterInterface+0x224>;
    dff0:	00 00       	NOP;
    dff2:	bb ac       	P3 = [FP + 0x8];
    dff4:	1f 20       	JUMP.S 0xe032 <_mDNS_DeregisterInterface+0x21e>;
    dff6:	00 00       	NOP;
    dff8:	d9 a1       	R1 = [P3 + 0x1c];
    dffa:	28 e4 10 05 	R0 = [P5 + 0x1440];
    dffe:	01 08       	CC = R1 == R0;
    e000:	17 14       	IF !CC JUMP 0xe02e <_mDNS_DeregisterInterface+0x21a> (BP);
    e002:	a8 e4 b5 14 	R0 = B[P5 + 0x14b5] (Z);
    e006:	00 0c       	CC = R0 == 0x0;
    e008:	0f 18       	IF CC JUMP 0xe026 <_mDNS_DeregisterInterface+0x212>;
    e00a:	b0 e4 1b 00 	R0 = B[SP + 0x1b] (Z);
    e00e:	08 02       	CC = R0;
    e010:	0b 1c       	IF CC JUMP 0xe026 <_mDNS_DeregisterInterface+0x212> (BP);
    e012:	16 32       	P2 = R6;
    e014:	44 30       	R0 = P4;
    e016:	4b 30       	R1 = P3;
    e018:	12 91       	R2 = [P2];
    e01a:	ea 40       	R2 *= R5;
    e01c:	ff e3 7c a4 	CALL 0x2914 <_mDNS_Reconfirm_internal>;
    e020:	1c e6 11 00 	[P3 + 0x44] = R4;
    e024:	05 20       	JUMP.S 0xe02e <_mDNS_DeregisterInterface+0x21a>;
    e026:	44 30       	R0 = P4;
    e028:	4b 30       	R1 = P3;
    e02a:	ff e3 c9 ae 	CALL 0x3dbc <_mDNS_PurgeCacheResourceRecord>;
    e02e:	00 00       	NOP;
    e030:	5b 91       	P3 = [P3];
    e032:	43 0c       	CC = P3 == 0x0;
    e034:	e1 17       	IF !CC JUMP 0xdff6 <_mDNS_DeregisterInterface+0x1e2> (BP);
    e036:	7f 91       	FP = [FP];
    e038:	47 0c       	CC = FP == 0x0;
    e03a:	db 17       	IF !CC JUMP 0xdff0 <_mDNS_DeregisterInterface+0x1dc> (BP);
    e03c:	70 a1       	R0 = [SP + 0x14];
    e03e:	07 08       	CC = R7 == R0;
    e040:	d4 17       	IF !CC JUMP 0xdfe8 <_mDNS_DeregisterInterface+0x1d4> (BP);
    e042:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    e046:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    e04a:	22 e5 fd 07 	P2 = [P4 + 0x1ff4];
    e04e:	09 91       	R1 = [P1];
    e050:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    e052:	0b 20       	JUMP.S 0xe068 <_mDNS_DeregisterInterface+0x254>;
    e054:	00 00       	NOP;
    e056:	53 a0       	R3 = [P2 + 0x4];
    e058:	2a e4 10 05 	R2 = [P5 + 0x1440];
    e05c:	13 08       	CC = R3 == R2;
    e05e:	03 14       	IF !CC JUMP 0xe064 <_mDNS_DeregisterInterface+0x250> (BP);
    e060:	51 b0       	[P2 + 0x4] = R1;
    e062:	50 b2       	[P2 + 0x24] = R0;
    e064:	00 00       	NOP;
    e066:	52 91       	P2 = [P2];
    e068:	42 0c       	CC = P2 == 0x0;
    e06a:	f5 17       	IF !CC JUMP 0xe054 <_mDNS_DeregisterInterface+0x240> (BP);
    e06c:	03 68       	P3 = 0x0 (X);		/*		P3=0x0(  0) */
    e06e:	a8 e4 b4 14 	R0 = B[P5 + 0x14b4] (Z);
    e072:	00 0c       	CC = R0 == 0x0;
    e074:	05 1c       	IF CC JUMP 0xe07e <_mDNS_DeregisterInterface+0x26a> (BP);
    e076:	44 30       	R0 = P4;
    e078:	4d 30       	R1 = P5;
    e07a:	ff e3 e9 ba 	CALL 0x564c <_DeadvertiseInterface>;
    e07e:	43 0c       	CC = P3 == 0x0;
    e080:	2f 1c       	IF CC JUMP 0xe0de <_mDNS_DeregisterInterface+0x2ca> (BP);
    e082:	20 e4 3a 00 	R0 = [P4 + 0xe8];
    e086:	00 0c       	CC = R0 == 0x0;
    e088:	2b 14       	IF !CC JUMP 0xe0de <_mDNS_DeregisterInterface+0x2ca> (BP);
    e08a:	2a e1 5c 01 	P2 = 0x15c (X);		/*		P2=0x15c(348) */
    e08e:	94 5a       	P2 = P4 + P2;
    e090:	7a 30       	R7 = P2;
    e092:	2a e1 28 09 	P2 = 0x928 (X);		/*		P2=0x928(2344) */
    e096:	94 5a       	P2 = P4 + P2;
    e098:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0x0 <_AddRecordToResponseList>(  0) */
    e09c:	6a 30       	R5 = P2;
    e09e:	06 e1 00 00 	R6.L = 0x0;		/* (  0)	R6=0x0 <_AddRecordToResponseList>(  0) */
    e0a2:	f4 60       	R4 = 0x1e (X);		/*		R4=0x1e( 30) */
    e0a4:	17 32       	P2 = R7;
    e0a6:	27 64       	R7 += 0x4;		/* (  4) */
    e0a8:	57 90       	FP = [P2++];
    e0aa:	16 20       	JUMP.S 0xe0d6 <_mDNS_DeregisterInterface+0x2c2>;
    e0ac:	00 00       	NOP;
    e0ae:	bb ac       	P3 = [FP + 0x8];
    e0b0:	10 20       	JUMP.S 0xe0d0 <_mDNS_DeregisterInterface+0x2bc>;
    e0b2:	00 00       	NOP;
    e0b4:	d9 a1       	R1 = [P3 + 0x1c];
    e0b6:	28 e4 10 05 	R0 = [P5 + 0x1440];
    e0ba:	01 08       	CC = R1 == R0;
    e0bc:	08 14       	IF !CC JUMP 0xe0cc <_mDNS_DeregisterInterface+0x2b8> (BP);
    e0be:	16 32       	P2 = R6;
    e0c0:	44 30       	R0 = P4;
    e0c2:	4b 30       	R1 = P3;
    e0c4:	12 91       	R2 = [P2];
    e0c6:	e2 40       	R2 *= R4;
    e0c8:	ff e3 26 a4 	CALL 0x2914 <_mDNS_Reconfirm_internal>;
    e0cc:	00 00       	NOP;
    e0ce:	5b 91       	P3 = [P3];
    e0d0:	43 0c       	CC = P3 == 0x0;
    e0d2:	f0 17       	IF !CC JUMP 0xe0b2 <_mDNS_DeregisterInterface+0x29e> (BP);
    e0d4:	7f 91       	FP = [FP];
    e0d6:	47 0c       	CC = FP == 0x0;
    e0d8:	ea 17       	IF !CC JUMP 0xe0ac <_mDNS_DeregisterInterface+0x298> (BP);
    e0da:	2f 08       	CC = R7 == R5;
    e0dc:	e4 17       	IF !CC JUMP 0xe0a4 <_mDNS_DeregisterInterface+0x290> (BP);
    e0de:	44 30       	R0 = P4;
    e0e0:	ff e3 f2 fd 	CALL 0xdcc4 <_CheckSuppressUnusableQuestions>;
    e0e4:	44 30       	R0 = P4;
    e0e6:	ff e3 55 af 	CALL 0x3f90 <_mDNS_UpdateAllowSleep>;
    e0ea:	e6 6c       	SP += 0x1c;		/* ( 28) */
    e0ec:	77 90       	FP = [SP++];
    e0ee:	44 30       	R0 = P4;
    e0f0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4404(17412) */
    e0f4:	01 e1 98 02 	R1.L = 0x298;		/* (664)	R1=0x298(664) */
    e0f8:	27 01       	RETS = [SP++];
    e0fa:	a3 05       	(R7:4, P5:3) = [SP++];
    e0fc:	ff e2 82 8f 	JUMP.L 0x0 <_AddRecordToResponseList>;

0000e100 <_mDNS_RegisterInterface>:
_mDNS_RegisterInterface():
    e100:	e3 05       	[--SP] = (R7:4, P5:3);
    e102:	29 32       	P5 = R1;
    e104:	20 32       	P4 = R0;
    e106:	00 e8 04 00 	LINK 0x10;		/* (16) */
    e10a:	2a 30       	R5 = R2;
    e10c:	28 e4 10 05 	R0 = [P5 + 0x1440];
    e110:	00 0c       	CC = R0 == 0x0;
    e112:	a1 1d       	IF CC JUMP 0xe454 <_mDNS_RegisterInterface+0x354> (BP);
    e114:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
    e116:	28 e4 16 05 	R0 = [P5 + 0x1458];
    e11a:	08 08       	CC = R0 == R1;
    e11c:	04 14       	IF !CC JUMP 0xe124 <_mDNS_RegisterInterface+0x24> (BP);
    e11e:	28 e4 17 05 	R0 = [P5 + 0x145c];
    e122:	0f 20       	JUMP.S 0xe140 <_mDNS_RegisterInterface+0x40>;
    e124:	36 60       	R6 = 0x6 (X);		/*		R6=0x6(  6) */
    e126:	30 08       	CC = R0 == R6;
    e128:	96 15       	IF !CC JUMP 0xe454 <_mDNS_RegisterInterface+0x354> (BP);
    e12a:	29 e4 18 05 	R1 = [P5 + 0x1460];
    e12e:	28 e4 17 05 	R0 = [P5 + 0x145c];
    e132:	01 56       	R0 = R1 | R0;
    e134:	29 e4 19 05 	R1 = [P5 + 0x1464];
    e138:	08 56       	R0 = R0 | R1;
    e13a:	29 e4 1a 05 	R1 = [P5 + 0x1468];
    e13e:	08 56       	R0 = R0 | R1;
    e140:	00 0c       	CC = R0 == 0x0;
    e142:	89 19       	IF CC JUMP 0xe454 <_mDNS_RegisterInterface+0x354>;
    e144:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4(  4) */
    e148:	44 30       	R0 = P4;
    e14a:	01 e1 b4 02 	R1.L = 0x2b4;		/* (692)	R1=0x2b4(692) */
    e14e:	ff e3 59 8f 	CALL 0x0 <_AddRecordToResponseList>;
    e152:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    e154:	a8 e6 04 00 	B[P5 + 0x4] = R0;
    e158:	28 e4 11 05 	R0 = [P5 + 0x1444];
    e15c:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
    e15e:	08 08       	CC = R0 == R1;
    e160:	06 14       	IF !CC JUMP 0xe16c <_mDNS_RegisterInterface+0x6c> (BP);
    e162:	a9 e4 b5 14 	R1 = B[P5 + 0x14b5] (Z);
    e166:	89 43       	R1 = -R1;
    e168:	f9 4e       	R1 >>= 0x1f;
    e16a:	02 20       	JUMP.S 0xe16e <_mDNS_RegisterInterface+0x6e>;
    e16c:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    e16e:	36 60       	R6 = 0x6 (X);		/*		R6=0x6(  6) */
    e170:	a9 e6 05 00 	B[P5 + 0x5] = R1;
    e174:	30 08       	CC = R0 == R6;
    e176:	06 14       	IF !CC JUMP 0xe182 <_mDNS_RegisterInterface+0x82> (BP);
    e178:	a8 e4 b5 14 	R0 = B[P5 + 0x14b5] (Z);
    e17c:	80 43       	R0 = -R0;
    e17e:	f8 4e       	R0 >>= 0x1f;
    e180:	02 20       	JUMP.S 0xe184 <_mDNS_RegisterInterface+0x84>;
    e182:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    e184:	a8 e6 06 00 	B[P5 + 0x6] = R0;
    e188:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
    e18a:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    e18c:	a8 b1       	[P5 + 0x18] = R0;
    e18e:	28 e6 9f 00 	[P5 + 0x27c] = R0;
    e192:	28 e6 38 01 	[P5 + 0x4e0] = R0;
    e196:	28 e6 d1 01 	[P5 + 0x744] = R0;
    e19a:	28 e6 77 02 	[P5 + 0x9dc] = R0;
    e19e:	2a e1 dc 1f 	P2 = 0x1fdc (X);		/*		P2=0x1fdc(8156) */
    e1a2:	29 e6 66 02 	[P5 + 0x998] = R1;
    e1a6:	29 e6 6b 02 	[P5 + 0x9ac] = R1;
    e1aa:	29 e6 70 02 	[P5 + 0x9c0] = R1;
    e1ae:	20 e4 37 00 	R0 = [P4 + 0xdc];
    e1b2:	94 5a       	P2 = P4 + P2;
    e1b4:	28 e6 78 02 	[P5 + 0x9e0] = R0;
    e1b8:	0f 60       	R7 = 0x1 (X);		/*		R7=0x1(  1) */
    e1ba:	03 60       	R3 = 0x0 (X);		/*		R3=0x0(  0) */
    e1bc:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    e1be:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    e1c0:	37 20       	JUMP.S 0xe22e <_mDNS_RegisterInterface+0x12e>;
    e1c2:	69 08       	CC = P1 == P5;
    e1c4:	10 14       	IF !CC JUMP 0xe1e4 <_mDNS_RegisterInterface+0xe4> (BP);
    e1c6:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0xffff(65535) */
    e1ca:	00 e1 48 44 	R0.L = 0x4448;		/* (17480)	R0=0x4448(17480) */
    e1ce:	ff e3 19 8f 	CALL 0x0 <_AddRecordToResponseList>;
    e1d2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1(  1) */
    e1d6:	44 30       	R0 = P4;
    e1d8:	01 e1 b4 02 	R1.L = 0x2b4;		/* (692)	R1=0x2b4(692) */
    e1dc:	ff e3 12 8f 	CALL 0x0 <_AddRecordToResponseList>;
    e1e0:	a8 63       	R0 = -0xb (X);		/*		R0=0xfffffff5(-11) */
    e1e2:	3a 21       	JUMP.S 0xe456 <_mDNS_RegisterInterface+0x356>;
    e1e4:	00 00       	NOP;
    e1e6:	0e e4 10 05 	R6 = [P1 + 0x1440];
    e1ea:	28 e4 10 05 	R0 = [P5 + 0x1440];
    e1ee:	06 08       	CC = R6 == R0;
    e1f0:	1d 14       	IF !CC JUMP 0xe22a <_mDNS_RegisterInterface+0x12a> (BP);
    e1f2:	ab e6 04 00 	B[P5 + 0x4] = R3;
    e1f6:	51 91       	P1 = [P2];
    e1f8:	28 e4 11 05 	R0 = [P5 + 0x1444];
    e1fc:	0e e4 11 05 	R6 = [P1 + 0x1444];
    e200:	30 08       	CC = R0 == R6;
    e202:	3a 07       	IF CC R7 = R2;
    e204:	26 60       	R6 = 0x4 (X);		/*		R6=0x4(  4) */
    e206:	30 08       	CC = R0 == R6;
    e208:	08 14       	IF !CC JUMP 0xe218 <_mDNS_RegisterInterface+0x118> (BP);
    e20a:	a8 e4 b5 14 	R0 = B[P5 + 0x14b5] (Z);
    e20e:	00 0c       	CC = R0 == 0x0;
    e210:	0d 1c       	IF CC JUMP 0xe22a <_mDNS_RegisterInterface+0x12a> (BP);
    e212:	89 e6 05 00 	B[P1 + 0x5] = R1;
    e216:	0a 20       	JUMP.S 0xe22a <_mDNS_RegisterInterface+0x12a>;
    e218:	36 60       	R6 = 0x6 (X);		/*		R6=0x6(  6) */
    e21a:	30 08       	CC = R0 == R6;
    e21c:	07 14       	IF !CC JUMP 0xe22a <_mDNS_RegisterInterface+0x12a> (BP);
    e21e:	a8 e4 b5 14 	R0 = B[P5 + 0x14b5] (Z);
    e222:	00 0c       	CC = R0 == 0x0;
    e224:	03 1c       	IF CC JUMP 0xe22a <_mDNS_RegisterInterface+0x12a> (BP);
    e226:	89 e6 06 00 	B[P1 + 0x6] = R1;
    e22a:	00 00       	NOP;
    e22c:	52 91       	P2 = [P2];
    e22e:	51 91       	P1 = [P2];
    e230:	41 0c       	CC = P1 == 0x0;
    e232:	c8 17       	IF !CC JUMP 0xe1c2 <_mDNS_RegisterInterface+0xc2> (BP);
    e234:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    e236:	28 93       	[P5] = R0;
    e238:	55 93       	[P2] = P5;
    e23a:	a8 e4 b4 14 	R0 = B[P5 + 0x14b4] (Z);
    e23e:	00 0c       	CC = R0 == 0x0;
    e240:	05 1c       	IF CC JUMP 0xe24a <_mDNS_RegisterInterface+0x14a> (BP);
    e242:	44 30       	R0 = P4;
    e244:	4d 30       	R1 = P5;
    e246:	ff e3 71 ce 	CALL 0x7f28 <_AdvertiseInterface>;
    e24a:	00 00       	NOP;
    e24c:	a8 e4 b6 14 	R0 = B[P5 + 0x14b6] (Z);
    e250:	00 0c       	CC = R0 == 0x0;
    e252:	05 1c       	IF CC JUMP 0xe25c <_mDNS_RegisterInterface+0x15c> (BP);
    e254:	44 30       	R0 = P4;
    e256:	4d 30       	R1 = P5;
    e258:	ff e3 56 dd 	CALL 0x9d04 <_mDNS_ActivateNetWake_internal>;
    e25c:	00 00       	NOP;
    e25e:	a8 e4 b5 14 	R0 = B[P5 + 0x14b5] (Z);
    e262:	00 0c       	CC = R0 == 0x0;
    e264:	e6 1c       	IF CC JUMP 0xe430 <_mDNS_RegisterInterface+0x330> (BP);
    e266:	07 0c       	CC = R7 == 0x0;
    e268:	05 14       	IF !CC JUMP 0xe272 <_mDNS_RegisterInterface+0x172> (BP);
    e26a:	a8 e4 04 00 	R0 = B[P5 + 0x4] (Z);
    e26e:	00 0c       	CC = R0 == 0x0;
    e270:	e0 1c       	IF CC JUMP 0xe430 <_mDNS_RegisterInterface+0x330> (BP);
    e272:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x1fdc */
    e276:	05 0c       	CC = R5 == 0x0;
    e278:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    e27c:	07 1c       	IF CC JUMP 0xe28a <_mDNS_RegisterInterface+0x18a> (BP);
    e27e:	10 91       	R0 = [P2];
    e280:	82 c6 10 8e 	R7 = R0 << 0x2;
    e284:	c7 51       	R7 = R7 + R0;
    e286:	0e 60       	R6 = 0x1 (X);		/*		R6=0x1(  1) */
    e288:	07 20       	JUMP.S 0xe296 <_mDNS_RegisterInterface+0x196>;
    e28a:	46 60       	R6 = 0x8 (X);		/*		R6=0x8(  8) */
    e28c:	10 91       	R0 = [P2];
    e28e:	82 c6 08 8f 	R7 = R0 >> 0x1f;
    e292:	c7 51       	R7 = R7 + R0;
    e294:	0f 4d       	R7 >>>= 0x1;
    e296:	20 e4 3b 00 	R0 = [P4 + 0xec];
    e29a:	00 0c       	CC = R0 == 0x0;
    e29c:	11 14       	IF !CC JUMP 0xe2be <_mDNS_RegisterInterface+0x1be> (BP);
    e29e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    e2a2:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    e2a6:	10 91       	R0 = [P2];
    e2a8:	19 60       	R1 = 0x3 (X);		/*		R1=0x3(  3) */
    e2aa:	10 64       	R0 += 0x2;		/* (  2) */
    e2ac:	24 e4 37 00 	R4 = [P4 + 0xdc];
    e2b0:	ff e3 a8 8e 	CALL 0x0 <_AddRecordToResponseList>;
    e2b4:	ff e3 a6 8e 	CALL 0x0 <_AddRecordToResponseList>;
    e2b8:	20 51       	R4 = R0 + R4;
    e2ba:	24 e6 3b 00 	[P4 + 0xec] = R4;
    e2be:	00 00       	NOP;
    e2c0:	21 e4 fa 07 	R1 = [P4 + 0x1fe8];
    e2c4:	01 0c       	CC = R1 == 0x0;
    e2c6:	0a 1c       	IF CC JUMP 0xe2da <_mDNS_RegisterInterface+0x1da> (BP);
    e2c8:	20 e4 37 00 	R0 = [P4 + 0xdc];
    e2cc:	07 50       	R0 = R7 + R0;
    e2ce:	00 0c       	CC = R0 == 0x0;
    e2d0:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
    e2d2:	02 07       	IF CC R0 = R2;
    e2d4:	01 52       	R0 = R1 - R0;
    e2d6:	80 0c       	CC = R0 < 0x0;
    e2d8:	0a 14       	IF !CC JUMP 0xe2ec <_mDNS_RegisterInterface+0x1ec> (BP);
    e2da:	00 00       	NOP;
    e2dc:	20 e4 37 00 	R0 = [P4 + 0xdc];
    e2e0:	c7 51       	R7 = R7 + R0;
    e2e2:	07 0c       	CC = R7 == 0x0;
    e2e4:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    e2e6:	38 07       	IF CC R7 = R0;
    e2e8:	27 e6 fa 07 	[P4 + 0x1fe8] = R7;
    e2ec:	4f e1 00 00 	FP.H = 0x0;		/* (  0)	FP=0x134 */
    e2f0:	0f e1 00 00 	FP.L = 0x0;		/* (  0)	FP=0x0 <_AddRecordToResponseList> */
    e2f4:	39 91       	R1 = [FP];
    e2f6:	e0 61       	R0 = 0x3c (X);		/*		R0=0x3c( 60) */
    e2f8:	c8 40       	R0 *= R1;
    e2fa:	21 e4 37 00 	R1 = [P4 + 0xdc];
    e2fe:	08 50       	R0 = R0 + R1;
    e300:	00 0c       	CC = R0 == 0x0;
    e302:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    e304:	01 07       	IF CC R0 = R1;
    e306:	20 e6 47 00 	[P4 + 0x11c] = R0;
    e30a:	05 0c       	CC = R5 == 0x0;
    e30c:	00 02       	R0 = CC;
    e30e:	23 e5 4c 00 	P3 = [P4 + 0x130];
    e312:	b0 e6 0f 00 	B[SP + 0xf] = R0;
    e316:	04 60       	R4 = 0x0 (X);		/*		R4=0x0(  0) */
    e318:	45 20       	JUMP.S 0xe3a2 <_mDNS_RegisterInterface+0x2a2>;
    e31a:	00 00       	NOP;
    e31c:	58 e4 99 00 	R0 = W[P3 + 0x132] (Z);
    e320:	00 0c       	CC = R0 == 0x0;
    e322:	3e 14       	IF !CC JUMP 0xe39e <_mDNS_RegisterInterface+0x29e> (BP);
    e324:	18 e4 46 00 	R0 = [P3 + 0x118];
    e328:	00 0c       	CC = R0 == 0x0;
    e32a:	05 1c       	IF CC JUMP 0xe334 <_mDNS_RegisterInterface+0x234> (BP);
    e32c:	29 e4 10 05 	R1 = [P5 + 0x1440];
    e330:	08 08       	CC = R0 == R1;
    e332:	36 14       	IF !CC JUMP 0xe39e <_mDNS_RegisterInterface+0x29e> (BP);
    e334:	b0 e4 0f 00 	R0 = B[SP + 0xf] (Z);
    e338:	08 02       	CC = R0;
    e33a:	95 1c       	IF CC JUMP 0xe464 <_mDNS_RegisterInterface+0x364> (BP);
    e33c:	28 e4 10 05 	R0 = [P5 + 0x1440];
    e340:	d9 a2       	R1 = [P3 + 0x2c];
    e342:	01 08       	CC = R1 == R0;
    e344:	04 1c       	IF CC JUMP 0xe34c <_mDNS_RegisterInterface+0x24c> (BP);
    e346:	19 a3       	R1 = [P3 + 0x30];
    e348:	01 08       	CC = R1 == R0;
    e34a:	8d 14       	IF !CC JUMP 0xe464 <_mDNS_RegisterInterface+0x364> (BP);
    e34c:	3d 91       	R5 = [FP];
    e34e:	05 30       	R0 = R5;
    e350:	19 60       	R1 = 0x3 (X);		/*		R1=0x3(  3) */
    e352:	10 64       	R0 += 0x2;		/* (  2) */
    e354:	ff e3 56 8e 	CALL 0x0 <_AddRecordToResponseList>;
    e358:	0d 32       	P1 = R5;
    e35a:	38 30       	R7 = R0;
    e35c:	49 60       	R1 = 0x9 (X);		/*		R1=0x9(  9) */
    e35e:	cf 40       	R7 *= R1;
    e360:	4a 44       	P2 = P1 << 0x2;
    e362:	42 30       	R0 = P2;
    e364:	68 51       	R5 = R0 + R5;
    e366:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x3c( 60) */
    e36a:	00 e1 ac 44 	R0.L = 0x44ac;		/* (17580)	R0=0x44ac(17580) */
    e36e:	ff e3 49 8e 	CALL 0x0 <_AddRecordToResponseList>;
    e372:	18 a1       	R0 = [P3 + 0x10];
    e374:	00 0c       	CC = R0 == 0x0;
    e376:	03 1c       	IF CC JUMP 0xe37c <_mDNS_RegisterInterface+0x27c> (BP);
    e378:	38 09       	CC = R0 <= R7;
    e37a:	05 1c       	IF CC JUMP 0xe384 <_mDNS_RegisterInterface+0x284> (BP);
    e37c:	11 60       	R1 = 0x2 (X);		/*		R1=0x2(  2) */
    e37e:	1f b1       	[P3 + 0x10] = R7;
    e380:	19 e6 2a 00 	[P3 + 0xa8] = R1;
    e384:	4b 30       	R1 = P3;
    e386:	18 a1       	R0 = [P3 + 0x10];
    e388:	08 32       	P1 = R0;
    e38a:	22 e5 37 00 	P2 = [P4 + 0xdc];
    e38e:	dc b1       	[P3 + 0x1c] = R4;
    e390:	44 30       	R0 = P4;
    e392:	0a 44       	P2 -= P1;
    e394:	0d 32       	P1 = R5;
    e396:	8a 5a       	P2 = P2 + P1;
    e398:	da bc       	[P3 + 0xc] = P2;
    e39a:	ff e3 17 9e 	CALL 0x1fc8 <_SetNextQueryTime>;
    e39e:	00 00       	NOP;
    e3a0:	5b 91       	P3 = [P3];
    e3a2:	43 0c       	CC = P3 == 0x0;
    e3a4:	bb 17       	IF !CC JUMP 0xe31a <_mDNS_RegisterInterface+0x21a> (BP);
    e3a6:	4f e1 00 00 	FP.H = 0x0;		/* (  0)	FP=0x0 <_AddRecordToResponseList> */
    e3aa:	23 e5 f2 07 	P3 = [P4 + 0x1fc8];
    e3ae:	0f e1 00 00 	FP.L = 0x0;		/* (  0)	FP=0x0 <_AddRecordToResponseList> */
    e3b2:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    e3b4:	1d 60       	R5 = 0x3 (X);		/*		R5=0x3(  3) */
    e3b6:	74 43       	R4 = R6.B (Z);
    e3b8:	3a 20       	JUMP.S 0xe42c <_mDNS_RegisterInterface+0x32c>;
    e3ba:	00 00       	NOP;
    e3bc:	d9 a1       	R1 = [P3 + 0x1c];
    e3be:	38 91       	R0 = [FP];
    e3c0:	01 08       	CC = R1 == R0;
    e3c2:	0a 14       	IF !CC JUMP 0xe3d6 <_mDNS_RegisterInterface+0x2d6> (BP);
    e3c4:	98 e4 46 00 	R0 = B[P3 + 0x46] (Z);
    e3c8:	00 0c       	CC = R0 == 0x0;
    e3ca:	06 14       	IF !CC JUMP 0xe3d6 <_mDNS_RegisterInterface+0x2d6> (BP);
    e3cc:	18 a2       	R0 = [P3 + 0x20];
    e3ce:	ff e3 19 8e 	CALL 0x0 <_AddRecordToResponseList>;
    e3d2:	00 0c       	CC = R0 == 0x0;
    e3d4:	2a 1c       	IF CC JUMP 0xe428 <_mDNS_RegisterInterface+0x328> (BP);
    e3d6:	00 00       	NOP;
    e3d8:	d8 a1       	R0 = [P3 + 0x1c];
    e3da:	00 0c       	CC = R0 == 0x0;
    e3dc:	05 1c       	IF CC JUMP 0xe3e6 <_mDNS_RegisterInterface+0x2e6> (BP);
    e3de:	29 e4 10 05 	R1 = [P5 + 0x1440];
    e3e2:	08 08       	CC = R0 == R1;
    e3e4:	22 14       	IF !CC JUMP 0xe428 <_mDNS_RegisterInterface+0x328> (BP);
    e3e6:	00 00       	NOP;
    e3e8:	98 e4 04 00 	R0 = B[P3 + 0x4] (Z);
    e3ec:	81 60       	R1 = 0x10 (X);		/*		R1=0x10( 16) */
    e3ee:	08 08       	CC = R0 == R1;
    e3f0:	07 14       	IF !CC JUMP 0xe3fe <_mDNS_RegisterInterface+0x2fe> (BP);
    e3f2:	58 a3       	R0 = [P3 + 0x34];
    e3f4:	00 0c       	CC = R0 == 0x0;
    e3f6:	04 14       	IF !CC JUMP 0xe3fe <_mDNS_RegisterInterface+0x2fe> (BP);
    e3f8:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    e3fa:	98 e6 04 00 	B[P3 + 0x4] = R0;
    e3fe:	00 00       	NOP;
    e400:	98 e4 04 00 	R0 = B[P3 + 0x4] (Z);
    e404:	10 0c       	CC = R0 == 0x2;
    e406:	07 06       	IF !CC R0 = R7;
    e408:	05 07       	IF CC R0 = R5;
    e40a:	98 e6 85 00 	B[P3 + 0x85] = R0;
    e40e:	98 e4 86 00 	R0 = B[P3 + 0x86] (Z);
    e412:	a0 09       	CC = R0 < R4 (IU);
    e414:	03 14       	IF !CC JUMP 0xe41a <_mDNS_RegisterInterface+0x31a> (BP);
    e416:	9e e6 86 00 	B[P3 + 0x86] = R6;
    e41a:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    e41c:	19 e6 23 00 	[P3 + 0x8c] = R1;
    e420:	44 30       	R0 = P4;
    e422:	4b 30       	R1 = P3;
    e424:	ff e3 e6 90 	CALL 0x5f0 <_InitializeLastAPTime>;
    e428:	00 00       	NOP;
    e42a:	5b 91       	P3 = [P3];
    e42c:	43 0c       	CC = P3 == 0x0;
    e42e:	c6 17       	IF !CC JUMP 0xe3ba <_mDNS_RegisterInterface+0x2ba> (BP);
    e430:	44 30       	R0 = P4;
    e432:	ff e3 95 b5 	CALL 0x4f5c <_RestartRecordGetZoneData>;
    e436:	44 30       	R0 = P4;
    e438:	ff e3 46 fc 	CALL 0xdcc4 <_CheckSuppressUnusableQuestions>;
    e43c:	44 30       	R0 = P4;
    e43e:	ff e3 a9 ad 	CALL 0x3f90 <_mDNS_UpdateAllowSleep>;
    e442:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    e446:	44 30       	R0 = P4;
    e448:	01 e1 b4 02 	R1.L = 0x2b4;		/* (692)	R1=0x2b4(692) */
    e44c:	ff e3 da 8d 	CALL 0x0 <_AddRecordToResponseList>;
    e450:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    e452:	04 20       	JUMP.S 0xe45a <_mDNS_RegisterInterface+0x35a>;
    e454:	98 63       	R0 = -0xd (X);		/*		R0=0xfffffff3(-13) */
    e456:	40 e1 fe ff 	R0.H = 0xfffe;		/* ( -2)	R0=0xfffefff3(-65549) */
    e45a:	86 6c       	SP += 0x10;		/* ( 16) */
    e45c:	77 90       	FP = [SP++];
    e45e:	27 01       	RETS = [SP++];
    e460:	a3 05       	(R7:4, P5:3) = [SP++];
    e462:	10 00       	RTS;
    e464:	19 60       	R1 = 0x3 (X);		/*		R1=0x3(  3) */
    e466:	38 91       	R0 = [FP];
    e468:	10 64       	R0 += 0x2;		/* (  2) */
    e46a:	ff e3 cb 8d 	CALL 0x0 <_AddRecordToResponseList>;
    e46e:	38 30       	R7 = R0;
    e470:	05 60       	R5 = 0x0 (X);		/*		R5=0x0(  0) */
    e472:	80 2f       	JUMP.S 0xe372 <_mDNS_RegisterInterface+0x272>;

0000e474 <_mDNSCoreRestartAddressQueries>:
_mDNSCoreRestartAddressQueries():
    e474:	e3 05       	[--SP] = (R7:4, P5:3);
    e476:	20 32       	P4 = R0;
    e478:	00 e8 07 00 	LINK 0x1c;		/* (28) */
    e47c:	31 e6 11 00 	[SP + 0x44] = R1;
    e480:	2a 32       	P5 = R2;
    e482:	e0 a2       	R0 = [P4 + 0x2c];
    e484:	00 0c       	CC = R0 == 0x0;
    e486:	07 14       	IF !CC JUMP 0xe494 <_mDNSCoreRestartAddressQueries+0x20> (BP);
    e488:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3(  3) */
    e48c:	01 e1 cc 44 	R1.L = 0x44cc;		/* (17612)	R1=0x44cc(17612) */
    e490:	ff e3 b8 8d 	CALL 0x0 <_AddRecordToResponseList>;
    e494:	45 0c       	CC = P5 == 0x0;
    e496:	03 1c       	IF CC JUMP 0xe49c <_mDNSCoreRestartAddressQueries+0x28> (BP);
    e498:	44 30       	R0 = P4;
    e49a:	65 00       	CALL (P5);
    e49c:	00 00       	NOP;
    e49e:	25 e5 51 00 	P5 = [P4 + 0x144];
    e4a2:	45 0c       	CC = P5 == 0x0;
    e4a4:	11 1c       	IF CC JUMP 0xe4c6 <_mDNSCoreRestartAddressQueries+0x52> (BP);
    e4a6:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    e4aa:	ff e3 ab 8d 	CALL 0x0 <_AddRecordToResponseList>;
    e4ae:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    e4b2:	95 5a       	P2 = P5 + P2;
    e4b4:	f0 b0       	[SP + 0xc] = R0;
    e4b6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x44cc(17612) */
    e4ba:	52 30       	R2 = P2;
    e4bc:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    e4be:	01 e1 04 45 	R1.L = 0x4504;		/* (17668)	R1=0x4504(17668) */
    e4c2:	ff e3 9f 8d 	CALL 0x0 <_AddRecordToResponseList>;
    e4c6:	00 00       	NOP;
    e4c8:	20 e4 4c 00 	R0 = [P4 + 0x130];
    e4cc:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
    e4d0:	20 e6 51 00 	[P4 + 0x144] = R0;
    e4d4:	07 68       	FP = 0x0 (X);		/*		FP=0x0(  0) */
    e4d6:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
    e4da:	25 e1 00 01 	R5 = 0x100 (X);		/*		R5=0x100(256) */
    e4de:	26 e1 34 01 	R6 = 0x134 (X);		/*		R6=0x134(308) */
    e4e2:	24 e1 2c 03 	R4 = 0x32c (X);		/*		R4=0x32c(812) */
    e4e6:	cb 20       	JUMP.S 0xe67c <_mDNSCoreRestartAddressQueries+0x208>;
    e4e8:	00 00       	NOP;
    e4ea:	28 91       	R0 = [P5];
    e4ec:	20 e6 51 00 	[P4 + 0x144] = R0;
    e4f0:	45 30       	R0 = P5;
    e4f2:	ff e3 87 8d 	CALL 0x0 <_AddRecordToResponseList>;
    e4f6:	00 0c       	CC = R0 == 0x0;
    e4f8:	35 1c       	IF CC JUMP 0xe562 <_mDNSCoreRestartAddressQueries+0xee> (BP);
    e4fa:	18 91       	R0 = [P3];
    e4fc:	2f 91       	R7 = [P5];
    e4fe:	00 0c       	CC = R0 == 0x0;
    e500:	2e 1c       	IF CC JUMP 0xe55c <_mDNSCoreRestartAddressQueries+0xe8> (BP);
    e502:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    e506:	ff e3 7d 8d 	CALL 0x0 <_AddRecordToResponseList>;
    e50a:	0e 32       	P1 = R6;
    e50c:	30 b1       	[SP + 0x10] = R0;
    e50e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4504(17668) */
    e512:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    e514:	01 e1 58 45 	R1.L = 0x4558;		/* (17752)	R1=0x4558(17752) */
    e518:	8d 5a       	P2 = P5 + P1;
    e51a:	f2 bc       	[SP + 0xc] = P2;
    e51c:	55 30       	R2 = P5;
    e51e:	ff e3 71 8d 	CALL 0x0 <_AddRecordToResponseList>;
    e522:	1d 20       	JUMP.S 0xe55c <_mDNSCoreRestartAddressQueries+0xe8>;
    e524:	17 32       	P2 = R7;
    e526:	4d 30       	R1 = P5;
    e528:	10 e4 37 00 	R0 = [P2 + 0xdc];
    e52c:	20 50       	R0 = R0 + R4;
    e52e:	01 08       	CC = R1 == R0;
    e530:	14 14       	IF !CC JUMP 0xe558 <_mDNSCoreRestartAddressQueries+0xe4> (BP);
    e532:	18 91       	R0 = [P3];
    e534:	00 0c       	CC = R0 == 0x0;
    e536:	11 1c       	IF CC JUMP 0xe558 <_mDNSCoreRestartAddressQueries+0xe4> (BP);
    e538:	50 e5 1a 01 	R0 = W[P2 + 0x234] (X);
    e53c:	ff e3 62 8d 	CALL 0x0 <_AddRecordToResponseList>;
    e540:	77 50       	R1 = R7 + R6;
    e542:	f1 b0       	[SP + 0xc] = R1;
    e544:	30 b1       	[SP + 0x10] = R0;
    e546:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4558(17752) */
    e54a:	75 bd       	[SP + 0x14] = P5;
    e54c:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    e54e:	01 e1 a4 45 	R1.L = 0x45a4;		/* (17828)	R1=0x45a4(17828) */
    e552:	17 30       	R2 = R7;
    e554:	ff e3 56 8d 	CALL 0x0 <_AddRecordToResponseList>;
    e558:	0f 32       	P1 = R7;
    e55a:	0f 91       	R7 = [P1];
    e55c:	07 0c       	CC = R7 == 0x0;
    e55e:	e3 17       	IF !CC JUMP 0xe524 <_mDNSCoreRestartAddressQueries+0xb0> (BP);
    e560:	8e 20       	JUMP.S 0xe67c <_mDNSCoreRestartAddressQueries+0x208>;
    e562:	00 00       	NOP;
    e564:	68 e4 1a 01 	R0 = W[P5 + 0x234] (Z);
    e568:	08 0c       	CC = R0 == 0x1;
    e56a:	07 18       	IF CC JUMP 0xe578 <_mDNSCoreRestartAddressQueries+0x104>;
    e56c:	e1 60       	R1 = 0x1c (X);		/*		R1=0x1c( 28) */
    e56e:	08 08       	CC = R0 == R1;
    e570:	04 18       	IF CC JUMP 0xe578 <_mDNSCoreRestartAddressQueries+0x104>;
    e572:	29 60       	R1 = 0x5 (X);		/*		R1=0x5(  5) */
    e574:	08 08       	CC = R0 == R1;
    e576:	83 14       	IF !CC JUMP 0xe67c <_mDNSCoreRestartAddressQueries+0x208> (BP);
    e578:	30 e4 11 00 	R0 = [SP + 0x44];
    e57c:	00 0c       	CC = R0 == 0x0;
    e57e:	05 1c       	IF CC JUMP 0xe588 <_mDNSCoreRestartAddressQueries+0x114> (BP);
    e580:	a8 e5 53 02 	R0 = B[P5 + 0x253] (X);
    e584:	00 0c       	CC = R0 == 0x0;
    e586:	7b 1c       	IF CC JUMP 0xe67c <_mDNSCoreRestartAddressQueries+0x208> (BP);
    e588:	44 30       	R0 = P4;
    e58a:	4d 30       	R1 = P5;
    e58c:	ff e3 a8 e4 	CALL 0xaedc <_CacheRecordRmvEventsForQuestion>;
    e590:	00 0c       	CC = R0 == 0x0;
    e592:	0a 10       	IF !CC JUMP 0xe5a6 <_mDNSCoreRestartAddressQueries+0x132>;
    e594:	18 91       	R0 = [P3];
    e596:	00 0c       	CC = R0 == 0x0;
    e598:	72 1c       	IF CC JUMP 0xe67c <_mDNSCoreRestartAddressQueries+0x208> (BP);
    e59a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5(  5) */
    e59e:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    e5a0:	01 e1 0c 46 	R1.L = 0x460c;		/* (17932)	R1=0x460c(17932) */
    e5a4:	0f 20       	JUMP.S 0xe5c2 <_mDNSCoreRestartAddressQueries+0x14e>;
    e5a6:	44 30       	R0 = P4;
    e5a8:	4d 30       	R1 = P5;
    e5aa:	ff e3 29 e1 	CALL 0xa7fc <_LocalRecordRmvEventsForQuestion>;
    e5ae:	00 0c       	CC = R0 == 0x0;
    e5b0:	0c 14       	IF !CC JUMP 0xe5c8 <_mDNSCoreRestartAddressQueries+0x154> (BP);
    e5b2:	18 91       	R0 = [P3];
    e5b4:	00 0c       	CC = R0 == 0x0;
    e5b6:	63 1c       	IF CC JUMP 0xe67c <_mDNSCoreRestartAddressQueries+0x208> (BP);
    e5b8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x460c(17932) */
    e5bc:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    e5be:	01 e1 68 46 	R1.L = 0x4668;		/* (18024)	R1=0x4668(18024) */
    e5c2:	ff e3 1f 8d 	CALL 0x0 <_AddRecordToResponseList>;
    e5c6:	5b 20       	JUMP.S 0xe67c <_mDNSCoreRestartAddressQueries+0x208>;
    e5c8:	18 91       	R0 = [P3];
    e5ca:	00 0c       	CC = R0 == 0x0;
    e5cc:	17 1c       	IF CC JUMP 0xe5fa <_mDNSCoreRestartAddressQueries+0x186> (BP);
    e5ce:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    e5d2:	ff e3 17 8d 	CALL 0x0 <_AddRecordToResponseList>;
    e5d6:	0e 32       	P1 = R6;
    e5d8:	30 b1       	[SP + 0x10] = R0;
    e5da:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4668(18024) */
    e5de:	01 e1 c4 46 	R1.L = 0x46c4;		/* (18116)	R1=0x46c4(18116) */
    e5e2:	55 30       	R2 = P5;
    e5e4:	8d 5a       	P2 = P5 + P1;
    e5e6:	f2 bc       	[SP + 0xc] = P2;
    e5e8:	a8 e5 53 02 	R0 = B[P5 + 0x253] (X);
    e5ec:	70 b1       	[SP + 0x14] = R0;
    e5ee:	28 e4 96 00 	R0 = [P5 + 0x258];
    e5f2:	b0 b1       	[SP + 0x18] = R0;
    e5f4:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    e5f6:	ff e3 05 8d 	CALL 0x0 <_AddRecordToResponseList>;
    e5fa:	44 30       	R0 = P4;
    e5fc:	4d 30       	R1 = P5;
    e5fe:	ff e3 4f b1 	CALL 0x489c <_mDNS_StopQuery_internal>;
    e602:	2a e4 96 00 	R2 = [P5 + 0x258];
    e606:	02 0c       	CC = R2 == 0x0;
    e608:	35 18       	IF CC JUMP 0xe672 <_mDNSCoreRestartAddressQueries+0x1fe>;
    e60a:	18 91       	R0 = [P3];
    e60c:	00 0c       	CC = R0 == 0x0;
    e60e:	08 1c       	IF CC JUMP 0xe61e <_mDNSCoreRestartAddressQueries+0x1aa> (BP);
    e610:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x46c4(18116) */
    e614:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    e616:	01 e1 24 47 	R1.L = 0x4724;		/* (18212)	R1=0x4724(18212) */
    e61a:	ff e3 f3 8c 	CALL 0x0 <_AddRecordToResponseList>;
    e61e:	00 00       	NOP;
    e620:	28 e4 96 00 	R0 = [P5 + 0x258];
    e624:	68 50       	R1 = R0 + R5;
    e626:	ff e3 ed 8c 	CALL 0x0 <_AddRecordToResponseList>;
    e62a:	c2 42       	R2 = R0.L (Z);
    e62c:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    e630:	02 0a       	CC = R2 <= R0 (IU);
    e632:	08 14       	IF !CC JUMP 0xe642 <_mDNSCoreRestartAddressQueries+0x1ce> (BP);
    e634:	4d 30       	R1 = P5;
    e636:	31 50       	R0 = R1 + R6;
    e638:	29 e4 96 00 	R1 = [P5 + 0x258];
    e63c:	ff e3 e2 8c 	CALL 0x0 <_AddRecordToResponseList>;
    e640:	04 20       	JUMP.S 0xe648 <_mDNSCoreRestartAddressQueries+0x1d4>;
    e642:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    e644:	a8 e6 34 01 	B[P5 + 0x134] = R0;
    e648:	28 e4 96 00 	R0 = [P5 + 0x258];
    e64c:	ff e3 da 8c 	CALL 0x0 <_AddRecordToResponseList>;
    e650:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    e652:	28 e6 96 00 	[P5 + 0x258] = R0;
    e656:	a8 e5 53 02 	R0 = B[P5 + 0x253] (X);
    e65a:	00 0c       	CC = R0 == 0x0;
    e65c:	08 1c       	IF CC JUMP 0xe66c <_mDNSCoreRestartAddressQueries+0x1f8> (BP);
    e65e:	4d 30       	R1 = P5;
    e660:	31 50       	R0 = R1 + R6;
    e662:	ff e3 cf 8c 	CALL 0x0 <_AddRecordToResponseList>;
    e666:	08 0c       	CC = R0 == 0x1;
    e668:	00 02       	R0 = CC;
    e66a:	02 20       	JUMP.S 0xe66e <_mDNSCoreRestartAddressQueries+0x1fa>;
    e66c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    e66e:	28 e6 93 00 	[P5 + 0x24c] = R0;
    e672:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    e674:	6f 93       	[P5] = FP;
    e676:	a8 e6 52 02 	B[P5 + 0x252] = R0;
    e67a:	7d 32       	FP = P5;
    e67c:	00 00       	NOP;
    e67e:	25 e5 51 00 	P5 = [P4 + 0x144];
    e682:	45 0c       	CC = P5 == 0x0;
    e684:	32 17       	IF !CC JUMP 0xe4e8 <_mDNSCoreRestartAddressQueries+0x74> (BP);
    e686:	31 e5 13 00 	P1 = [SP + 0x4c];
    e68a:	41 0c       	CC = P1 == 0x0;
    e68c:	21 18       	IF CC JUMP 0xe6ce <_mDNSCoreRestartAddressQueries+0x25a>;
    e68e:	44 30       	R0 = P4;
    e690:	31 e4 14 00 	R1 = [SP + 0x50];
    e694:	61 00       	CALL (P1);
    e696:	1c 20       	JUMP.S 0xe6ce <_mDNSCoreRestartAddressQueries+0x25a>;
    e698:	00 00       	NOP;
    e69a:	3e 91       	R6 = [FP];
    e69c:	28 91       	R0 = [P5];
    e69e:	3f 93       	[FP] = R7;
    e6a0:	00 0c       	CC = R0 == 0x0;
    e6a2:	10 1c       	IF CC JUMP 0xe6c2 <_mDNSCoreRestartAddressQueries+0x24e> (BP);
    e6a4:	78 e5 1a 01 	R0 = W[FP + 0x234] (X);
    e6a8:	ff e3 ac 8c 	CALL 0x0 <_AddRecordToResponseList>;
    e6ac:	9f 5a       	P2 = FP + P3;
    e6ae:	30 b1       	[SP + 0x10] = R0;
    e6b0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4724(18212) */
    e6b4:	f2 bc       	[SP + 0xc] = P2;
    e6b6:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    e6b8:	01 e1 54 47 	R1.L = 0x4754;		/* (18260)	R1=0x4754 <_GetServerForQuestion>(18260) */
    e6bc:	57 30       	R2 = FP;
    e6be:	ff e3 a1 8c 	CALL 0x0 <_AddRecordToResponseList>;
    e6c2:	4f 30       	R1 = FP;
    e6c4:	44 30       	R0 = P4;
    e6c6:	ff e3 65 d7 	CALL 0x9590 <_mDNS_StartQuery_internal>;
    e6ca:	3e 32       	FP = R6;
    e6cc:	08 20       	JUMP.S 0xe6dc <_mDNSCoreRestartAddressQueries+0x268>;
    e6ce:	4d e1 00 00 	P5.H = 0x0;		/* (  0)	P5=0x0 <_AddRecordToResponseList> */
    e6d2:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    e6d4:	0d e1 00 00 	P5.L = 0x0;		/* (  0)	P5=0x0 <_AddRecordToResponseList> */
    e6d8:	2b e1 34 01 	P3 = 0x134 (X);		/*		P3=0x134(308) */
    e6dc:	47 0c       	CC = FP == 0x0;
    e6de:	dd 17       	IF !CC JUMP 0xe698 <_mDNSCoreRestartAddressQueries+0x224> (BP);
    e6e0:	e6 6c       	SP += 0x1c;		/* ( 28) */
    e6e2:	77 90       	FP = [SP++];
    e6e4:	27 01       	RETS = [SP++];
    e6e6:	a3 05       	(R7:4, P5:3) = [SP++];
    e6e8:	10 00       	RTS;
	...

0000e6ec <_SendSPSRegistrationForOwner>:
_SendSPSRegistrationForOwner():
    e6ec:	e3 05       	[--SP] = (R7:4, P5:3);
    e6ee:	28 32       	P5 = R0;
    e6f0:	21 32       	P4 = R1;
    e6f2:	00 e8 f3 00 	LINK 0x3cc;		/* (972) */
    e6f6:	32 30       	R6 = R2;
    e6f8:	37 e5 ff 00 	FP = [SP + 0x3fc];
    e6fc:	e9 a1       	R1 = [P5 + 0x1c];
    e6fe:	20 e4 1b 05 	R0 = [P4 + 0x146c];
    e702:	01 08       	CC = R1 == R0;
    e704:	0a 14       	IF !CC JUMP 0xe718 <_SendSPSRegistrationForOwner+0x2c> (BP);
    e706:	69 e4 10 00 	R1 = W[P5 + 0x20] (Z);
    e70a:	60 e4 38 0a 	R0 = W[P4 + 0x1470] (Z);
    e70e:	01 08       	CC = R1 == R0;
    e710:	28 61       	R0 = 0x25 (X);		/*		R0=0x25( 37) */
    e712:	f9 60       	R1 = 0x1f (X);		/*		R1=0x1f( 31) */
    e714:	01 07       	IF CC R0 = R1;
    e716:	02 20       	JUMP.S 0xe71a <_SendSPSRegistrationForOwner+0x2e>;
    e718:	28 61       	R0 = 0x25 (X);		/*		R0=0x25( 37) */
    e71a:	f0 b3       	[SP + 0x3c] = R0;
    e71c:	25 e4 77 02 	R5 = [P4 + 0x9dc];
    e720:	05 30       	R0 = R5;
    e722:	19 60       	R1 = 0x3 (X);		/*		R1=0x3(  3) */
    e724:	ff e3 6e 8c 	CALL 0x0 <_AddRecordToResponseList>;
    e728:	38 30       	R7 = R0;
    e72a:	a0 60       	R0 = 0x14 (X);		/*		R0=0x14( 20) */
    e72c:	f8 40       	R0 *= R7;
    e72e:	08 32       	P1 = R0;
    e730:	8c 5a       	P2 = P4 + P1;
    e732:	10 e4 66 02 	R0 = [P2 + 0x998];
    e736:	00 0c       	CC = R0 == 0x0;
    e738:	31 14       	IF !CC JUMP 0xe79a <_SendSPSRegistrationForOwner+0xae> (BP);
    e73a:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    e73e:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    e742:	11 91       	R1 = [P2];
    e744:	28 e4 37 00 	R0 = [P5 + 0xdc];
    e748:	01 50       	R0 = R1 + R0;
    e74a:	29 e4 4a 00 	R1 = [P5 + 0x128];
    e74e:	41 52       	R1 = R1 - R0;
    e750:	20 e6 78 02 	[P4 + 0x9e0] = R0;
    e754:	01 0d       	CC = R1 <= 0x0;
    e756:	03 18       	IF CC JUMP 0xe75c <_SendSPSRegistrationForOwner+0x70>;
    e758:	28 e6 4a 00 	[P5 + 0x128] = R0;
    e75c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    e760:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    e764:	10 91       	R0 = [P2];
    e766:	00 0c       	CC = R0 == 0x0;
    e768:	02 10       	IF !CC JUMP 0xe76c <_SendSPSRegistrationForOwner+0x80>;
    e76a:	99 22       	JUMP.S 0xec9c <_SendSPSRegistrationForOwner+0x5b0>;
    e76c:	20 e1 64 02 	R0 = 0x264 (X);		/*		R0=0x264(612) */
    e770:	f8 40       	R0 *= R7;
    e772:	08 32       	P1 = R0;
    e774:	2a e1 74 14 	P2 = 0x1474 (X);		/*		P2=0x1474(5236) */
    e778:	94 5a       	P2 = P4 + P2;
    e77a:	52 30       	R2 = P2;
    e77c:	2a e1 a0 03 	P2 = 0x3a0 (X);		/*		P2=0x3a0(928) */
    e780:	91 5a       	P2 = P1 + P2;
    e782:	94 5a       	P2 = P4 + P2;
    e784:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3(  3) */
    e788:	f5 b0       	[SP + 0xc] = R5;
    e78a:	37 b1       	[SP + 0x10] = R7;
    e78c:	72 bd       	[SP + 0x14] = P2;
    e78e:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    e790:	01 e1 90 47 	R1.L = 0x4790;		/* (18320)	R1=0x4790(18320) */
    e794:	ff e3 36 8c 	CALL 0x0 <_AddRecordToResponseList>;
    e798:	82 22       	JUMP.S 0xec9c <_SendSPSRegistrationForOwner+0x5b0>;
    e79a:	f0 42       	R0 = R6.L (Z);
    e79c:	00 0c       	CC = R0 == 0x0;
    e79e:	2f 14       	IF !CC JUMP 0xe7fc <_SendSPSRegistrationForOwner+0x110> (BP);
    e7a0:	45 e1 00 00 	R5.H = 0x0;		/* (  0)	R5=0x100(256) */
    e7a4:	2b e5 f2 07 	P3 = [P5 + 0x1fc8];
    e7a8:	24 e1 48 00 	R4 = 0x48 (X);		/*		R4=0x48( 72) */
    e7ac:	05 e1 00 00 	R5.L = 0x0;		/* (  0)	R5=0x0 <_AddRecordToResponseList>(  0) */
    e7b0:	24 20       	JUMP.S 0xe7f8 <_SendSPSRegistrationForOwner+0x10c>;
    e7b2:	00 00       	NOP;
    e7b4:	98 e4 04 00 	R0 = B[P3 + 0x4] (Z);
    e7b8:	08 0e       	CC = R0 <= 0x1 (IU);
    e7ba:	1d 1c       	IF CC JUMP 0xe7f4 <_SendSPSRegistrationForOwner+0x108> (BP);
    e7bc:	d8 a1       	R0 = [P3 + 0x1c];
    e7be:	21 e4 10 05 	R1 = [P4 + 0x1440];
    e7c2:	08 08       	CC = R0 == R1;
    e7c4:	0c 18       	IF CC JUMP 0xe7dc <_SendSPSRegistrationForOwner+0xf0>;
    e7c6:	00 0c       	CC = R0 == 0x0;
    e7c8:	16 14       	IF !CC JUMP 0xe7f4 <_SendSPSRegistrationForOwner+0x108> (BP);
    e7ca:	98 e4 46 00 	R0 = B[P3 + 0x46] (Z);
    e7ce:	00 0c       	CC = R0 == 0x0;
    e7d0:	06 14       	IF !CC JUMP 0xe7dc <_SendSPSRegistrationForOwner+0xf0> (BP);
    e7d2:	18 a2       	R0 = [P3 + 0x20];
    e7d4:	ff e3 16 8c 	CALL 0x0 <_AddRecordToResponseList>;
    e7d8:	00 0c       	CC = R0 == 0x0;
    e7da:	0d 1c       	IF CC JUMP 0xe7f4 <_SendSPSRegistrationForOwner+0x108> (BP);
    e7dc:	43 30       	R0 = P3;
    e7de:	60 50       	R1 = R0 + R4;
    e7e0:	47 30       	R0 = FP;
    e7e2:	e2 60       	R2 = 0x1c (X);		/*		R2=0x1c( 28) */
    e7e4:	ff e3 0e 8c 	CALL 0x0 <_AddRecordToResponseList>;
    e7e8:	00 0c       	CC = R0 == 0x0;
    e7ea:	05 1c       	IF CC JUMP 0xe7f4 <_SendSPSRegistrationForOwner+0x108> (BP);
    e7ec:	0d 32       	P1 = R5;
    e7ee:	08 91       	R0 = [P1];
    e7f0:	18 e6 26 00 	[P3 + 0x98] = R0;
    e7f4:	00 00       	NOP;
    e7f6:	5b 91       	P3 = [P3];
    e7f8:	43 0c       	CC = P3 == 0x0;
    e7fa:	dc 17       	IF !CC JUMP 0xe7b2 <_SendSPSRegistrationForOwner+0xc6> (BP);
    e7fc:	45 30       	R0 = P5;
    e7fe:	21 e1 98 59 	R1 = 0x5998 (X);		/*		R1=0x5998(22936) */
    e802:	48 51       	R5 = R0 + R1;
    e804:	a1 68       	P1 = 0x14 (X);		/*		P1=0x14( 20) */
    e806:	41 30       	R0 = P1;
    e808:	f8 40       	R0 *= R7;
    e80a:	08 32       	P1 = R0;
    e80c:	70 b3       	[SP + 0x34] = R0;
    e80e:	2a e1 98 09 	P2 = 0x998 (X);		/*		P2=0x998(2456) */
    e812:	20 e1 64 02 	R0 = 0x264 (X);		/*		R0=0x264(612) */
    e816:	f8 40       	R0 *= R7;
    e818:	91 5a       	P2 = P1 + P2;
    e81a:	94 5a       	P2 = P4 + P2;
    e81c:	32 e7 11 00 	[SP + 0x44] = P2;
    e820:	10 32       	P2 = R0;
    e822:	22 e1 ec 22 	R2 = 0x22ec (X);		/*		R2=0x22ec(8940) */
    e826:	95 50       	R2 = R5 + R2;
    e828:	32 e6 14 00 	[SP + 0x50] = R2;
    e82c:	b0 b3       	[SP + 0x38] = R0;
    e82e:	54 5a       	P1 = P4 + P2;
    e830:	2a e1 7c 02 	P2 = 0x27c (X);		/*		P2=0x27c(636) */
    e834:	91 5a       	P2 = P1 + P2;
    e836:	32 e7 15 00 	[SP + 0x54] = P2;
    e83a:	2b e1 8c 59 	P3 = 0x598c (X);		/*		P3=0x598c(22924) */
    e83e:	f0 42       	R0 = R6.L (Z);
    e840:	dd 5a       	P3 = P5 + P3;
    e842:	00 0c       	CC = R0 == 0x0;
    e844:	06 14       	IF !CC JUMP 0xe850 <_SendSPSRegistrationForOwner+0x164> (BP);
    e846:	45 30       	R0 = P5;
    e848:	ff e3 6e d6 	CALL 0x9524 <_mDNS_NewMessageID>;
    e84c:	08 30       	R1 = R0;
    e84e:	02 20       	JUMP.S 0xe852 <_SendSPSRegistrationForOwner+0x166>;
    e850:	0e 30       	R1 = R6;
    e852:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x27c */
    e856:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    e85a:	43 30       	R0 = P3;
    e85c:	12 95       	R2 = W[P2] (Z);
    e85e:	ff e3 d1 8b 	CALL 0x0 <_AddRecordToResponseList>;
    e862:	2a e1 8c 59 	P2 = 0x598c (X);		/*		P2=0x598c(22924) */
    e866:	95 5a       	P2 = P5 + P2;
    e868:	32 e7 12 00 	[SP + 0x48] = P2;
    e86c:	2a e1 94 59 	P2 = 0x5994 (X);		/*		P2=0x5994(22932) */
    e870:	95 5a       	P2 = P5 + P2;
    e872:	32 e7 13 00 	[SP + 0x4c] = P2;
    e876:	2a e1 74 14 	P2 = 0x1474 (X);		/*		P2=0x1474(5236) */
    e87a:	44 e1 00 00 	R4.H = 0x0;		/* (  0)	R4=0x48( 72) */
    e87e:	94 5a       	P2 = P4 + P2;
    e880:	2b e5 f2 07 	P3 = [P5 + 0x1fc8];
    e884:	f5 b2       	[SP + 0x2c] = R5;
    e886:	04 e1 00 00 	R4.L = 0x0;		/* (  0)	R4=0x0 <_AddRecordToResponseList>(  0) */
    e88a:	32 e7 10 00 	[SP + 0x40] = P2;
    e88e:	b6 20       	JUMP.S 0xe9fa <_SendSPSRegistrationForOwner+0x30e>;
    e890:	00 00       	NOP;
    e892:	18 e4 26 00 	R0 = [P3 + 0x98];
    e896:	00 0c       	CC = R0 == 0x0;
    e898:	25 14       	IF !CC JUMP 0xe8e2 <_SendSPSRegistrationForOwner+0x1f6> (BP);
    e89a:	f0 42       	R0 = R6.L (Z);
    e89c:	00 0c       	CC = R0 == 0x0;
    e89e:	ac 1c       	IF CC JUMP 0xe9f6 <_SendSPSRegistrationForOwner+0x30a> (BP);
    e8a0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x1474 */
    e8a4:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    e8a8:	d9 a1       	R1 = [P3 + 0x1c];
    e8aa:	10 91       	R0 = [P2];
    e8ac:	01 08       	CC = R1 == R0;
    e8ae:	0a 14       	IF !CC JUMP 0xe8c2 <_SendSPSRegistrationForOwner+0x1d6> (BP);
    e8b0:	98 e4 46 00 	R0 = B[P3 + 0x46] (Z);
    e8b4:	00 0c       	CC = R0 == 0x0;
    e8b6:	06 14       	IF !CC JUMP 0xe8c2 <_SendSPSRegistrationForOwner+0x1d6> (BP);
    e8b8:	18 a2       	R0 = [P3 + 0x20];
    e8ba:	ff e3 a3 8b 	CALL 0x0 <_AddRecordToResponseList>;
    e8be:	00 0c       	CC = R0 == 0x0;
    e8c0:	9b 1c       	IF CC JUMP 0xe9f6 <_SendSPSRegistrationForOwner+0x30a> (BP);
    e8c2:	f0 42       	R0 = R6.L (Z);
    e8c4:	59 e4 7a 00 	R1 = W[P3 + 0xf4] (Z);
    e8c8:	01 08       	CC = R1 == R0;
    e8ca:	96 14       	IF !CC JUMP 0xe9f6 <_SendSPSRegistrationForOwner+0x30a> (BP);
    e8cc:	18 e4 2f 00 	R0 = [P3 + 0xbc];
    e8d0:	19 e4 30 00 	R1 = [P3 + 0xc0];
    e8d4:	80 43       	R0 = -R0;
    e8d6:	08 52       	R0 = R0 - R1;
    e8d8:	29 e4 37 00 	R1 = [P5 + 0xdc];
    e8dc:	08 50       	R0 = R0 + R1;
    e8de:	80 0c       	CC = R0 < 0x0;
    e8e0:	8b 18       	IF CC JUMP 0xe9f6 <_SendSPSRegistrationForOwner+0x30a>;
    e8e2:	2a e1 48 00 	P2 = 0x48 (X);		/*		P2=0x48( 72) */
    e8e6:	93 5a       	P2 = P3 + P2;
    e8e8:	4a 30       	R1 = P2;
    e8ea:	47 30       	R0 = FP;
    e8ec:	e2 60       	R2 = 0x1c (X);		/*		R2=0x1c( 28) */
    e8ee:	ff e3 89 8b 	CALL 0x0 <_AddRecordToResponseList>;
    e8f2:	00 0c       	CC = R0 == 0x0;
    e8f4:	81 1c       	IF CC JUMP 0xe9f6 <_SendSPSRegistrationForOwner+0x30a> (BP);
    e8f6:	68 e4 ca 2c 	R0 = W[P5 + 0x5994] (Z);
    e8fa:	f1 af       	P1 = [SP + 0x3c];
    e8fc:	00 0c       	CC = R0 == 0x0;
    e8fe:	20 e1 ec 22 	R0 = 0x22ec (X);		/*		R0=0x22ec(8940) */
    e902:	2a e1 a0 05 	P2 = 0x5a0 (X);		/*		P2=0x5a0(1440) */
    e906:	90 07       	IF CC P2 = R0;
    e908:	0a 44       	P2 -= P1;
    e90a:	29 e1 98 59 	P1 = 0x5998 (X);		/*		P1=0x5998(22936) */
    e90e:	8a 5a       	P2 = P2 + P1;
    e910:	99 e4 04 00 	R1 = B[P3 + 0x4] (Z);
    e914:	90 61       	R0 = 0x32 (X);		/*		R0=0x32( 50) */
    e916:	95 5a       	P2 = P5 + P2;
    e918:	01 54       	R0 = R1 & R0;
    e91a:	32 bf       	[SP + 0x30] = P2;
    e91c:	00 0c       	CC = R0 == 0x0;
    e91e:	06 1c       	IF CC JUMP 0xe92a <_SendSPSRegistrationForOwner+0x23e> (BP);
    e920:	18 a9       	R0 = W[P3 + 0x8] (X);
    e922:	21 e1 00 80 	R1 = -0x8000 (X);		/*		R1=0xffff8000(-32768) */
    e926:	01 56       	R0 = R1 | R0;
    e928:	18 b5       	W[P3 + 0x8] = R0;
    e92a:	5b 30       	R3 = P3;
    e92c:	23 64       	R3 += 0x4;		/* (  4) */
    e92e:	32 af       	P2 = [SP + 0x30];
    e930:	f3 b0       	[SP + 0xc] = R3;
    e932:	d8 a0       	R0 = [P3 + 0xc];
    e934:	30 b1       	[SP + 0x10] = R0;
    e936:	72 bd       	[SP + 0x14] = P2;
    e938:	f1 a2       	R1 = [SP + 0x2c];
    e93a:	b3 b2       	[SP + 0x28] = R3;
    e93c:	30 e4 12 00 	R0 = [SP + 0x48];
    e940:	32 e4 13 00 	R2 = [SP + 0x4c];
    e944:	ff e3 5e 8b 	CALL 0x0 <_AddRecordToResponseList>;
    e948:	10 32       	P2 = R0;
    e94a:	18 a9       	R0 = W[P3 + 0x8] (X);
    e94c:	21 e1 ff 7f 	R1 = 0x7fff (X);		/*		R1=0x7fff(32767) */
    e950:	01 54       	R0 = R1 & R0;
    e952:	18 b5       	W[P3 + 0x8] = R0;
    e954:	42 0c       	CC = P2 == 0x0;
    e956:	b3 a2       	R3 = [SP + 0x28];
    e958:	1d 14       	IF !CC JUMP 0xe992 <_SendSPSRegistrationForOwner+0x2a6> (BP);
    e95a:	0c 32       	P1 = R4;
    e95c:	08 91       	R0 = [P1];
    e95e:	00 0c       	CC = R0 == 0x0;
    e960:	4b 1c       	IF CC JUMP 0xe9f6 <_SendSPSRegistrationForOwner+0x30a> (BP);
    e962:	59 a2       	R1 = [P3 + 0x24];
    e964:	55 30       	R2 = P5;
    e966:	21 64       	R1 += 0x4;		/* (  4) */
    e968:	ba 65       	R2 += 0x37;		/* ( 55) */
    e96a:	03 30       	R0 = R3;
    e96c:	ff e3 4a 8b 	CALL 0x0 <_AddRecordToResponseList>;
    e970:	f2 a2       	R2 = [SP + 0x2c];
    e972:	6a 52       	R1 = R2 - R5;
    e974:	32 a3       	R2 = [SP + 0x30];
    e976:	f1 b0       	[SP + 0xc] = R1;
    e978:	6a 52       	R1 = R2 - R5;
    e97a:	31 b1       	[SP + 0x10] = R1;
    e97c:	70 b1       	[SP + 0x14] = R0;
    e97e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x7fff(32767) */
    e982:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    e984:	01 e1 cc 47 	R1.L = 0x47cc;		/* (18380)	R1=0x47cc(18380) */
    e988:	32 e4 10 00 	R2 = [SP + 0x40];
    e98c:	ff e3 3a 8b 	CALL 0x0 <_AddRecordToResponseList>;
    e990:	33 20       	JUMP.S 0xe9f6 <_SendSPSRegistrationForOwner+0x30a>;
    e992:	0c 32       	P1 = R4;
    e994:	08 91       	R0 = [P1];
    e996:	00 0c       	CC = R0 == 0x0;
    e998:	14 1c       	IF CC JUMP 0xe9c0 <_SendSPSRegistrationForOwner+0x2d4> (BP);
    e99a:	59 a2       	R1 = [P3 + 0x24];
    e99c:	55 30       	R2 = P5;
    e99e:	b2 be       	[SP + 0x28] = P2;
    e9a0:	21 64       	R1 += 0x4;		/* (  4) */
    e9a2:	ba 65       	R2 += 0x37;		/* ( 55) */
    e9a4:	03 30       	R0 = R3;
    e9a6:	ff e3 2d 8b 	CALL 0x0 <_AddRecordToResponseList>;
    e9aa:	f0 b0       	[SP + 0xc] = R0;
    e9ac:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x47cc(18380) */
    e9b0:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    e9b2:	01 e1 f8 47 	R1.L = 0x47f8;		/* (18424)	R1=0x47f8(18424) */
    e9b6:	32 e4 10 00 	R2 = [SP + 0x40];
    e9ba:	ff e3 23 8b 	CALL 0x0 <_AddRecordToResponseList>;
    e9be:	b2 ae       	P2 = [SP + 0x28];
    e9c0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    e9c2:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x5998 */
    e9c6:	18 e6 26 00 	[P3 + 0x98] = R0;
    e9ca:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    e9ce:	29 e4 37 00 	R1 = [P5 + 0xdc];
    e9d2:	08 91       	R0 = [P1];
    e9d4:	18 e6 2f 00 	[P3 + 0xbc] = R0;
    e9d8:	19 e6 30 00 	[P3 + 0xc0] = R1;
    e9dc:	6a e5 c6 2c 	R2 = W[P5 + 0x598c] (X);
    e9e0:	01 50       	R0 = R1 + R0;
    e9e2:	5a e6 7a 00 	W[P3 + 0xf4] = R2;
    e9e6:	29 e4 3f 00 	R1 = [P5 + 0xfc];
    e9ea:	41 52       	R1 = R1 - R0;
    e9ec:	81 0c       	CC = R1 < 0x0;
    e9ee:	03 1c       	IF CC JUMP 0xe9f4 <_SendSPSRegistrationForOwner+0x308> (BP);
    e9f0:	28 e6 3f 00 	[P5 + 0xfc] = R0;
    e9f4:	f2 be       	[SP + 0x2c] = P2;
    e9f6:	00 00       	NOP;
    e9f8:	5b 91       	P3 = [P3];
    e9fa:	43 0c       	CC = P3 == 0x0;
    e9fc:	4a 17       	IF !CC JUMP 0xe890 <_SendSPSRegistrationForOwner+0x1a4> (BP);
    e9fe:	68 e4 ca 2c 	R0 = W[P5 + 0x5994] (Z);
    ea02:	00 0c       	CC = R0 == 0x0;
    ea04:	40 19       	IF CC JUMP 0xec84 <_SendSPSRegistrationForOwner+0x598>;
    ea06:	48 61       	R0 = 0x29 (X);		/*		R0=0x29( 41) */
    ea08:	b0 b5       	W[SP + 0xc] = R0;
    ea0a:	20 e1 94 11 	R0 = 0x1194 (X);		/*		R0=0x1194(4500) */
    ea0e:	30 b1       	[SP + 0x10] = R0;
    ea10:	00 61       	R0 = 0x20 (X);		/*		R0=0x20( 32) */
    ea12:	b0 e6 14 00 	B[SP + 0x14] = R0;
    ea16:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    ea18:	b0 b1       	[SP + 0x18] = R0;
    ea1a:	f0 b1       	[SP + 0x1c] = R0;
    ea1c:	30 b2       	[SP + 0x20] = R0;
    ea1e:	4e 30       	R1 = SP;
    ea20:	22 e1 58 00 	R2 = 0x58 (X);		/*		R2=0x58( 88) */
    ea24:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x5a0 */
    ea28:	11 50       	R0 = R1 + R2;
    ea2a:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    ea2e:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    ea30:	12 91       	R2 = [P2];
    ea32:	ff e3 e7 8a 	CALL 0x0 <_AddRecordToResponseList>;
    ea36:	20 e1 a0 05 	R0 = 0x5a0 (X);		/*		R0=0x5a0(1440) */
    ea3a:	70 e6 30 00 	W[SP + 0x60] = R0;
    ea3e:	33 e5 1f 00 	P3 = [SP + 0x7c];
    ea42:	20 e1 40 00 	R0 = 0x40 (X);		/*		R0=0x40( 64) */
    ea46:	70 e6 34 00 	W[SP + 0x68] = R0;
    ea4a:	70 e6 35 00 	W[SP + 0x6a] = R0;
    ea4e:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    ea50:	98 b4       	W[P3 + 0x4] = R0;
    ea52:	20 e1 20 1c 	R0 = 0x1c20 (X);		/*		R0=0x1c20(7200) */
    ea56:	24 60       	R4 = 0x4 (X);		/*		R4=0x4(  4) */
    ea58:	dc b4       	W[P3 + 0x6] = R4;
    ea5a:	98 b0       	[P3 + 0x8] = R0;
    ea5c:	78 a0       	R0 = [FP + 0x4];
    ea5e:	00 0c       	CC = R0 == 0x0;
    ea60:	26 14       	IF !CC JUMP 0xeaac <_SendSPSRegistrationForOwner+0x3c0> (BP);
    ea62:	98 e6 28 00 	B[P3 + 0x28] = R0;
    ea66:	a8 e5 16 01 	R0 = B[P5 + 0x116] (X);
    ea6a:	98 e6 29 00 	B[P3 + 0x29] = R0;
    ea6e:	e8 a1       	R0 = [P5 + 0x1c];
    ea70:	d8 b2       	[P3 + 0x2c] = R0;
    ea72:	28 a2       	R0 = [P5 + 0x20];
    ea74:	18 b3       	[P3 + 0x30] = R0;
    ea76:	20 e4 1b 05 	R0 = [P4 + 0x146c];
    ea7a:	58 b3       	[P3 + 0x34] = R0;
    ea7c:	20 e4 1c 05 	R0 = [P4 + 0x1470];
    ea80:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    ea84:	98 b3       	[P3 + 0x38] = R0;
    ea86:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    ea8a:	10 91       	R0 = [P2];
    ea8c:	d8 b3       	[P3 + 0x3c] = R0;
    ea8e:	50 a0       	R0 = [P2 + 0x4];
    ea90:	18 e6 10 00 	[P3 + 0x40] = R0;
    ea94:	5c e6 12 00 	W[P3 + 0x24] = R4;
    ea98:	e9 a1       	R1 = [P5 + 0x1c];
    ea9a:	20 e4 1b 05 	R0 = [P4 + 0x146c];
    ea9e:	01 08       	CC = R1 == R0;
    eaa0:	19 14       	IF !CC JUMP 0xead2 <_SendSPSRegistrationForOwner+0x3e6> (BP);
    eaa2:	69 e4 10 00 	R1 = W[P5 + 0x20] (Z);
    eaa6:	60 e4 38 0a 	R0 = W[P4 + 0x1470] (Z);
    eaaa:	0f 20       	JUMP.S 0xeac8 <_SendSPSRegistrationForOwner+0x3dc>;
    eaac:	43 30       	R0 = P3;
    eaae:	4f 30       	R1 = FP;
    eab0:	40 65       	R0 += 0x28;		/* ( 40) */
    eab2:	e2 60       	R2 = 0x1c (X);		/*		R2=0x1c( 28) */
    eab4:	ff e3 a6 8a 	CALL 0x0 <_AddRecordToResponseList>;
    eab8:	5c e6 12 00 	W[P3 + 0x24] = R4;
    eabc:	79 a0       	R1 = [FP + 0x4];
    eabe:	f8 a0       	R0 = [FP + 0xc];
    eac0:	01 08       	CC = R1 == R0;
    eac2:	08 14       	IF !CC JUMP 0xead2 <_SendSPSRegistrationForOwner+0x3e6> (BP);
    eac4:	39 a5       	R1 = W[FP + 0x8] (Z);
    eac6:	38 a6       	R0 = W[FP + 0x10] (Z);
    eac8:	01 08       	CC = R1 == R0;
    eaca:	70 60       	R0 = 0xe (X);		/*		R0=0xe( 14) */
    eacc:	41 60       	R1 = 0x8 (X);		/*		R1=0x8(  8) */
    eace:	01 07       	IF CC R0 = R1;
    ead0:	02 20       	JUMP.S 0xead4 <_SendSPSRegistrationForOwner+0x3e8>;
    ead2:	70 60       	R0 = 0xe (X);		/*		R0=0xe( 14) */
    ead4:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    ead8:	58 e6 13 00 	W[P3 + 0x26] = R0;
    eadc:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    eae0:	10 91       	R0 = [P2];
    eae2:	00 0c       	CC = R0 == 0x0;
    eae4:	1c 1c       	IF CC JUMP 0xeb1c <_SendSPSRegistrationForOwner+0x430> (BP);
    eae6:	29 e1 cc 03 	P1 = 0x3cc (X);		/*		P1=0x3cc(972) */
    eaea:	2a e1 90 fc 	P2 = -0x370 (X);		/*		P2=0xfffffc90(-880) */
    eaee:	71 5a       	P1 = P1 + SP;
    eaf0:	52 30       	R2 = P2;
    eaf2:	49 30       	R1 = P1;
    eaf4:	11 50       	R0 = R1 + R2;
    eaf6:	31 e4 1f 00 	R1 = [SP + 0x7c];
    eafa:	55 30       	R2 = P5;
    eafc:	21 64       	R1 += 0x4;		/* (  4) */
    eafe:	ba 65       	R2 += 0x37;		/* ( 55) */
    eb00:	ff e3 80 8a 	CALL 0x0 <_AddRecordToResponseList>;
    eb04:	2a e1 74 14 	P2 = 0x1474 (X);		/*		P2=0x1474(5236) */
    eb08:	94 5a       	P2 = P4 + P2;
    eb0a:	f0 b0       	[SP + 0xc] = R0;
    eb0c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x8(  8) */
    eb10:	52 30       	R2 = P2;
    eb12:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    eb14:	01 e1 f8 47 	R1.L = 0x47f8;		/* (18424)	R1=0x47f8(18424) */
    eb18:	ff e3 74 8a 	CALL 0x0 <_AddRecordToResponseList>;
    eb1c:	2a e1 8c 59 	P2 = 0x598c (X);		/*		P2=0x598c(22924) */
    eb20:	95 5a       	P2 = P5 + P2;
    eb22:	32 bf       	[SP + 0x30] = P2;
    eb24:	2a e1 96 59 	P2 = 0x5996 (X);		/*		P2=0x5996(22934) */
    eb28:	95 5a       	P2 = P5 + P2;
    eb2a:	30 e4 19 00 	R0 = [SP + 0x64];
    eb2e:	52 30       	R2 = P2;
    eb30:	30 b1       	[SP + 0x10] = R0;
    eb32:	2a e1 cc 03 	P2 = 0x3cc (X);		/*		P2=0x3cc(972) */
    eb36:	30 e4 14 00 	R0 = [SP + 0x50];
    eb3a:	b2 5a       	P2 = P2 + SP;
    eb3c:	2b e1 90 fc 	P3 = -0x370 (X);		/*		P3=0xfffffc90(-880) */
    eb40:	da 5a       	P3 = P2 + P3;
    eb42:	70 b1       	[SP + 0x14] = R0;
    eb44:	f3 bc       	[SP + 0xc] = P3;
    eb46:	30 a3       	R0 = [SP + 0x30];
    eb48:	f1 a2       	R1 = [SP + 0x2c];
    eb4a:	ff e3 5b 8a 	CALL 0x0 <_AddRecordToResponseList>;
    eb4e:	20 30       	R4 = R0;
    eb50:	00 0c       	CC = R0 == 0x0;
    eb52:	15 14       	IF !CC JUMP 0xeb7c <_SendSPSRegistrationForOwner+0x490> (BP);
    eb54:	31 e4 1f 00 	R1 = [SP + 0x7c];
    eb58:	55 30       	R2 = P5;
    eb5a:	6c e4 ca 2c 	R4 = W[P5 + 0x5994] (Z);
    eb5e:	21 64       	R1 += 0x4;		/* (  4) */
    eb60:	ba 65       	R2 += 0x37;		/* ( 55) */
    eb62:	43 30       	R0 = P3;
    eb64:	ff e3 4e 8a 	CALL 0x0 <_AddRecordToResponseList>;
    eb68:	f0 b0       	[SP + 0xc] = R0;
    eb6a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x47f8(18424) */
    eb6e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    eb70:	01 e1 18 48 	R1.L = 0x4818;		/* (18456)	R1=0x4818(18456) */
    eb74:	14 30       	R2 = R4;
    eb76:	ff e3 45 8a 	CALL 0x0 <_AddRecordToResponseList>;
    eb7a:	60 2e       	JUMP.S 0xe83a <_SendSPSRegistrationForOwner+0x14e>;
    eb7c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x3cc */
    eb80:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    eb84:	10 91       	R0 = [P2];
    eb86:	00 0c       	CC = R0 == 0x0;
    eb88:	2b 1c       	IF CC JUMP 0xebde <_SendSPSRegistrationForOwner+0x4f2> (BP);
    eb8a:	31 e5 11 00 	P1 = [SP + 0x44];
    eb8e:	20 e4 77 02 	R0 = [P4 + 0x9dc];
    eb92:	f0 b0       	[SP + 0xc] = R0;
    eb94:	a8 e4 8c 59 	R0 = B[P5 + 0x598c] (Z);
    eb98:	31 be       	[SP + 0x20] = P1;
    eb9a:	a9 e4 8d 59 	R1 = B[P5 + 0x598d] (Z);
    eb9e:	0f 32       	P1 = R7;
    eba0:	40 4f       	R0 <<= 0x8;
    eba2:	01 56       	R0 = R1 | R0;
    eba4:	2a e1 74 14 	P2 = 0x1474 (X);		/*		P2=0x1474(5236) */
    eba8:	70 b1       	[SP + 0x14] = R0;
    ebaa:	94 5a       	P2 = P4 + P2;
    ebac:	68 e4 ca 2c 	R0 = W[P5 + 0x5994] (Z);
    ebb0:	52 30       	R2 = P2;
    ebb2:	b0 b1       	[SP + 0x18] = R0;
    ebb4:	2a e1 ea 04 	P2 = 0x4ea (X);		/*		P2=0x4ea(1258) */
    ebb8:	2c 52       	R0 = R4 - R5;
    ebba:	8a 45       	P2 = (P2 + P1) << 0x1;
    ebbc:	37 b1       	[SP + 0x10] = R7;
    ebbe:	f0 b1       	[SP + 0x1c] = R0;
    ebc0:	94 5a       	P2 = P4 + P2;
    ebc2:	10 99       	R0 = B[P2] (Z);
    ebc4:	8c 5c       	P2 = P4 + (P1 << 0x1);
    ebc6:	91 e4 d5 09 	R1 = B[P2 + 0x9d5] (Z);
    ebca:	40 4f       	R0 <<= 0x8;
    ebcc:	01 56       	R0 = R1 | R0;
    ebce:	70 b2       	[SP + 0x24] = R0;
    ebd0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4818(18456) */
    ebd4:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    ebd6:	01 e1 58 48 	R1.L = 0x4858;		/* (18520)	R1=0x4858(18520) */
    ebda:	ff e3 13 8a 	CALL 0x0 <_AddRecordToResponseList>;
    ebde:	0f 32       	P1 = R7;
    ebe0:	32 e5 11 00 	P2 = [SP + 0x44];
    ebe4:	20 e4 10 05 	R0 = [P4 + 0x1440];
    ebe8:	f0 b0       	[SP + 0xc] = R0;
    ebea:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    ebec:	72 bd       	[SP + 0x14] = P2;
    ebee:	2a e1 ea 04 	P2 = 0x4ea (X);		/*		P2=0x4ea(1258) */
    ebf2:	8a 45       	P2 = (P2 + P1) << 0x1;
    ebf4:	30 b1       	[SP + 0x10] = R0;
    ebf6:	94 5a       	P2 = P4 + P2;
    ebf8:	11 95       	R1 = W[P2] (Z);
    ebfa:	31 b7       	W[SP + 0x18] = R1;
    ebfc:	f0 b1       	[SP + 0x1c] = R0;
    ebfe:	30 b2       	[SP + 0x20] = R0;
    ec00:	14 30       	R2 = R4;
    ec02:	45 30       	R0 = P5;
    ec04:	31 a3       	R1 = [SP + 0x30];
    ec06:	ff e3 fd 89 	CALL 0x0 <_AddRecordToResponseList>;
    ec0a:	10 30       	R2 = R0;
    ec0c:	00 0c       	CC = R0 == 0x0;
    ec0e:	16 1e       	IF CC JUMP 0xe83a <_SendSPSRegistrationForOwner+0x14e> (BP);
    ec10:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x4ea */
    ec14:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    ec18:	10 91       	R0 = [P2];
    ec1a:	00 0c       	CC = R0 == 0x0;
    ec1c:	4c 1c       	IF CC JUMP 0xecb4 <_SendSPSRegistrationForOwner+0x5c8> (BP);
    ec1e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4858(18520) */
    ec22:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    ec24:	01 e1 b4 48 	R1.L = 0x48b4;		/* (18612)	R1=0x48b4(18612) */
    ec28:	ff e3 ec 89 	CALL 0x0 <_AddRecordToResponseList>;
    ec2c:	44 20       	JUMP.S 0xecb4 <_SendSPSRegistrationForOwner+0x5c8>;
    ec2e:	32 e5 15 00 	P2 = [SP + 0x54];
    ec32:	10 91       	R0 = [P2];
    ec34:	38 0c       	CC = R0 == -0x1;
    ec36:	02 16       	IF !CC JUMP 0xe83a <_SendSPSRegistrationForOwner+0x14e> (BP);
    ec38:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    ec3c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    ec40:	10 91       	R0 = [P2];
    ec42:	00 0c       	CC = R0 == 0x0;
    ec44:	0f 1c       	IF CC JUMP 0xec62 <_SendSPSRegistrationForOwner+0x576> (BP);
    ec46:	b1 af       	P1 = [SP + 0x38];
    ec48:	2a e1 a0 03 	P2 = 0x3a0 (X);		/*		P2=0x3a0(928) */
    ec4c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x48b4(18612) */
    ec50:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    ec52:	91 5a       	P2 = P1 + P2;
    ec54:	94 5a       	P2 = P4 + P2;
    ec56:	f2 bc       	[SP + 0xc] = P2;
    ec58:	01 e1 e4 48 	R1.L = 0x48e4;		/* (18660)	R1=0x48e4(18660) */
    ec5c:	17 30       	R2 = R7;
    ec5e:	ff e3 d1 89 	CALL 0x0 <_AddRecordToResponseList>;
    ec62:	20 e1 64 02 	R0 = 0x264 (X);		/*		R0=0x264(612) */
    ec66:	f8 40       	R0 *= R7;
    ec68:	08 32       	P1 = R0;
    ec6a:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    ec6c:	45 30       	R0 = P5;
    ec6e:	8c 5a       	P2 = P4 + P1;
    ec70:	51 e6 50 02 	W[P2 + 0x4a0] = R1;
    ec74:	2a e1 6c 02 	P2 = 0x26c (X);		/*		P2=0x26c(620) */
    ec78:	91 5a       	P2 = P1 + P2;
    ec7a:	94 5a       	P2 = P4 + P2;
    ec7c:	4a 30       	R1 = P2;
    ec7e:	ff e3 89 d4 	CALL 0x9590 <_mDNS_StartQuery_internal>;
    ec82:	22 20       	JUMP.S 0xecc6 <_SendSPSRegistrationForOwner+0x5da>;
    ec84:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x26c */
    ec88:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    ec8c:	11 91       	R1 = [P2];
    ec8e:	50 60       	R0 = 0xa (X);		/*		R0=0xa( 10) */
    ec90:	c8 40       	R0 *= R1;
    ec92:	29 e4 37 00 	R1 = [P5 + 0xdc];
    ec96:	08 50       	R0 = R0 + R1;
    ec98:	20 e6 78 02 	[P4 + 0x9e0] = R0;
    ec9c:	f6 42       	R6 = R6.L (Z);
    ec9e:	06 0c       	CC = R6 == 0x0;
    eca0:	13 14       	IF !CC JUMP 0xecc6 <_SendSPSRegistrationForOwner+0x5da> (BP);
    eca2:	39 60       	R1 = 0x7 (X);		/*		R1=0x7(  7) */
    eca4:	20 e4 77 02 	R0 = [P4 + 0x9dc];
    eca8:	08 09       	CC = R0 <= R1;
    ecaa:	0e 10       	IF !CC JUMP 0xecc6 <_SendSPSRegistrationForOwner+0x5da>;
    ecac:	08 64       	R0 += 0x1;		/* (  1) */
    ecae:	20 e6 77 02 	[P4 + 0x9dc] = R0;
    ecb2:	0a 20       	JUMP.S 0xecc6 <_SendSPSRegistrationForOwner+0x5da>;
    ecb4:	71 af       	P1 = [SP + 0x34];
    ecb6:	31 60       	R1 = 0x6 (X);		/*		R1=0x6(  6) */
    ecb8:	8c 5a       	P2 = P4 + P1;
    ecba:	10 e4 66 02 	R0 = [P2 + 0x998];
    ecbe:	08 08       	CC = R0 == R1;
    ecc0:	02 18       	IF CC JUMP 0xecc4 <_SendSPSRegistrationForOwner+0x5d8>;
    ecc2:	bc 2d       	JUMP.S 0xe83a <_SendSPSRegistrationForOwner+0x14e>;
    ecc4:	b5 2f       	JUMP.S 0xec2e <_SendSPSRegistrationForOwner+0x542>;
    ecc6:	29 e1 cc 03 	P1 = 0x3cc (X);		/*		P1=0x3cc(972) */
    ecca:	8e 5b       	SP = SP + P1;
    eccc:	77 90       	FP = [SP++];
    ecce:	27 01       	RETS = [SP++];
    ecd0:	a3 05       	(R7:4, P5:3) = [SP++];
    ecd2:	10 00       	RTS;

0000ecd4 <_SendSPSRegistration>:
_SendSPSRegistration():
    ecd4:	e3 05       	[--SP] = (R7:4, P5:3);
    ecd6:	00 e8 0b 00 	LINK 0x2c;		/* (44) */
    ecda:	18 32       	P3 = R0;
    ecdc:	29 30       	R5 = R1;
    ecde:	66 32       	P4 = SP;
    ece0:	84 6c       	P4 += 0x10;		/* ( 16) */
    ece2:	22 30       	R4 = R2;
    ece4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x6(  6) */
    ece8:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    ecec:	e2 60       	R2 = 0x1c (X);		/*		R2=0x1c( 28) */
    ecee:	44 30       	R0 = P4;
    ecf0:	ff e3 88 89 	CALL 0x0 <_AddRecordToResponseList>;
    ecf4:	f4 bc       	[SP + 0xc] = P4;
    ecf6:	43 30       	R0 = P3;
    ecf8:	0d 30       	R1 = R5;
    ecfa:	14 30       	R2 = R4;
    ecfc:	ff e3 f8 fc 	CALL 0xe6ec <_SendSPSRegistrationForOwner>;
    ed00:	1d e5 f2 07 	P5 = [P3 + 0x1fc8];
    ed04:	2f e1 48 00 	FP = 0x48 (X);		/*		FP=0x48( 72) */
    ed08:	7c 30       	R7 = P4;
    ed0a:	1d 20       	JUMP.S 0xed44 <_SendSPSRegistration+0x70>;
    ed0c:	bd 5a       	P2 = P5 + FP;
    ed0e:	72 30       	R6 = P2;
    ed10:	07 30       	R0 = R7;
    ed12:	4a 30       	R1 = P2;
    ed14:	e2 60       	R2 = 0x1c (X);		/*		R2=0x1c( 28) */
    ed16:	ff e3 75 89 	CALL 0x0 <_AddRecordToResponseList>;
    ed1a:	00 0c       	CC = R0 == 0x0;
    ed1c:	12 14       	IF !CC JUMP 0xed40 <_SendSPSRegistration+0x6c> (BP);
    ed1e:	1c e5 f2 07 	P4 = [P3 + 0x1fc8];
    ed22:	0a 20       	JUMP.S 0xed36 <_SendSPSRegistration+0x62>;
    ed24:	bc 5a       	P2 = P4 + FP;
    ed26:	4a 30       	R1 = P2;
    ed28:	06 30       	R0 = R6;
    ed2a:	e2 60       	R2 = 0x1c (X);		/*		R2=0x1c( 28) */
    ed2c:	ff e3 6a 89 	CALL 0x0 <_AddRecordToResponseList>;
    ed30:	00 0c       	CC = R0 == 0x0;
    ed32:	07 14       	IF !CC JUMP 0xed40 <_SendSPSRegistration+0x6c> (BP);
    ed34:	64 91       	P4 = [P4];
    ed36:	44 0c       	CC = P4 == 0x0;
    ed38:	09 18       	IF CC JUMP 0xed4a <_SendSPSRegistration+0x76>;
    ed3a:	6c 08       	CC = P4 == P5;
    ed3c:	f4 17       	IF !CC JUMP 0xed24 <_SendSPSRegistration+0x50> (BP);
    ed3e:	06 20       	JUMP.S 0xed4a <_SendSPSRegistration+0x76>;
    ed40:	00 00       	NOP;
    ed42:	6d 91       	P5 = [P5];
    ed44:	45 0c       	CC = P5 == 0x0;
    ed46:	e3 17       	IF !CC JUMP 0xed0c <_SendSPSRegistration+0x38> (BP);
    ed48:	0e 20       	JUMP.S 0xed64 <_SendSPSRegistration+0x90>;
    ed4a:	bd 5a       	P2 = P5 + FP;
    ed4c:	4a 30       	R1 = P2;
    ed4e:	07 30       	R0 = R7;
    ed50:	e2 60       	R2 = 0x1c (X);		/*		R2=0x1c( 28) */
    ed52:	ff e3 57 89 	CALL 0x0 <_AddRecordToResponseList>;
    ed56:	f7 b0       	[SP + 0xc] = R7;
    ed58:	43 30       	R0 = P3;
    ed5a:	0d 30       	R1 = R5;
    ed5c:	14 30       	R2 = R4;
    ed5e:	ff e3 c7 fc 	CALL 0xe6ec <_SendSPSRegistrationForOwner>;
    ed62:	ef 2f       	JUMP.S 0xed40 <_SendSPSRegistration+0x6c>;
    ed64:	66 6d       	SP += 0x2c;		/* ( 44) */
    ed66:	77 90       	FP = [SP++];
    ed68:	27 01       	RETS = [SP++];
    ed6a:	a3 05       	(R7:4, P5:3) = [SP++];
    ed6c:	10 00       	RTS;
	...

0000ed70 <_SendResponses>:
_SendResponses():
    ed70:	e3 05       	[--SP] = (R7:4, P5:3);
    ed72:	28 32       	P5 = R0;
    ed74:	00 e8 d5 01 	LINK 0x754;		/* (1876) */
    ed78:	28 e4 f7 07 	R0 = [P5 + 0x1fdc];
    ed7c:	ff e3 42 89 	CALL 0x0 <_AddRecordToResponseList>;
    ed80:	29 e5 37 00 	P1 = [P5 + 0xdc];
    ed84:	4a e1 00 78 	P2.H = 0x7800;		/* (30720)	P2=0x78000000 */
    ed88:	18 32       	P3 = R0;
    ed8a:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x78000000 */
    ed8e:	91 5a       	P2 = P1 + P2;
    ed90:	a8 e4 15 01 	R0 = B[P5 + 0x115] (Z);
    ed94:	2a e7 3f 00 	[P5 + 0xfc] = P2;
    ed98:	08 0c       	CC = R0 == 0x1;
    ed9a:	a8 14       	IF !CC JUMP 0xeeea <_SendResponses+0x17a> (BP);
    ed9c:	28 e4 f7 07 	R0 = [P5 + 0x1fdc];
    eda0:	ff e3 30 89 	CALL 0x0 <_AddRecordToResponseList>;
    eda4:	4c e1 00 00 	P4.H = 0x0;		/* (  0)	P4=0x0 <_AddRecordToResponseList> */
    eda8:	10 32       	P2 = R0;
    edaa:	0c e1 00 00 	P4.L = 0x0;		/* (  0)	P4=0x0 <_AddRecordToResponseList> */
    edae:	57 60       	R7 = 0xa (X);		/*		R7=0xa( 10) */
    edb0:	17 20       	JUMP.S 0xedde <_SendResponses+0x6e>;
    edb2:	00 00       	NOP;
    edb4:	10 e4 77 02 	R0 = [P2 + 0x9dc];
    edb8:	00 0c       	CC = R0 == 0x0;
    edba:	0d 1c       	IF CC JUMP 0xedd4 <_SendResponses+0x64> (BP);
    edbc:	20 91       	R0 = [P4];
    edbe:	f8 40       	R0 *= R7;
    edc0:	2a e4 37 00 	R2 = [P5 + 0xdc];
    edc4:	11 e4 78 02 	R1 = [P2 + 0x9e0];
    edc8:	10 50       	R0 = R0 + R2;
    edca:	01 08       	CC = R1 == R0;
    edcc:	04 14       	IF !CC JUMP 0xedd4 <_SendResponses+0x64> (BP);
    edce:	09 64       	R1 += 0x1;		/* (  1) */
    edd0:	11 e6 78 02 	[P2 + 0x9e0] = R1;
    edd4:	00 00       	NOP;
    edd6:	10 91       	R0 = [P2];
    edd8:	ff e3 14 89 	CALL 0x0 <_AddRecordToResponseList>;
    eddc:	10 32       	P2 = R0;
    edde:	42 0c       	CC = P2 == 0x0;
    ede0:	e9 17       	IF !CC JUMP 0xedb2 <_SendResponses+0x42> (BP);
    ede2:	47 e1 00 00 	R7.H = 0x0;		/* (  0)	R7=0xa( 10) */
    ede6:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0x134(308) */
    edea:	65 30       	R4 = P5;
    edec:	2c e5 f2 07 	P4 = [P5 + 0x1fc8];
    edf0:	07 e1 00 00 	R7.L = 0x0;		/* (  0)	R7=0x0 <_AddRecordToResponseList>(  0) */
    edf4:	06 e1 00 00 	R6.L = 0x0;		/* (  0)	R6=0x0 <_AddRecordToResponseList>(  0) */
    edf8:	bc 65       	R4 += 0x37;		/* ( 55) */
    edfa:	50 20       	JUMP.S 0xee9a <_SendResponses+0x12a>;
    edfc:	07 32       	P0 = R7;
    edfe:	e1 a1       	R1 = [P4 + 0x1c];
    ee00:	00 91       	R0 = [P0];
    ee02:	01 08       	CC = R1 == R0;
    ee04:	0a 14       	IF !CC JUMP 0xee18 <_SendResponses+0xa8> (BP);
    ee06:	a0 e4 46 00 	R0 = B[P4 + 0x46] (Z);
    ee0a:	00 0c       	CC = R0 == 0x0;
    ee0c:	06 14       	IF !CC JUMP 0xee18 <_SendResponses+0xa8> (BP);
    ee0e:	20 a2       	R0 = [P4 + 0x20];
    ee10:	ff e3 f8 88 	CALL 0x0 <_AddRecordToResponseList>;
    ee14:	00 0c       	CC = R0 == 0x0;
    ee16:	40 1c       	IF CC JUMP 0xee96 <_SendResponses+0x126> (BP);
    ee18:	00 00       	NOP;
    ee1a:	60 e4 7a 00 	R0 = W[P4 + 0xf4] (Z);
    ee1e:	00 0c       	CC = R0 == 0x0;
    ee20:	3b 1c       	IF CC JUMP 0xee96 <_SendResponses+0x126> (BP);
    ee22:	20 e4 2f 00 	R0 = [P4 + 0xbc];
    ee26:	21 e4 30 00 	R1 = [P4 + 0xc0];
    ee2a:	80 43       	R0 = -R0;
    ee2c:	08 52       	R0 = R0 - R1;
    ee2e:	29 e4 37 00 	R1 = [P5 + 0xdc];
    ee32:	08 50       	R0 = R0 + R1;
    ee34:	80 0c       	CC = R0 < 0x0;
    ee36:	30 1c       	IF CC JUMP 0xee96 <_SendResponses+0x126> (BP);
    ee38:	6c 30       	R5 = P4;
    ee3a:	25 64       	R5 += 0x4;		/* (  4) */
    ee3c:	28 e4 f7 07 	R0 = [P5 + 0x1fdc];
    ee40:	ff e3 e0 88 	CALL 0x0 <_AddRecordToResponseList>;
    ee44:	38 32       	FP = R0;
    ee46:	26 20       	JUMP.S 0xee92 <_SendResponses+0x122>;
    ee48:	00 00       	NOP;
    ee4a:	e0 a1       	R0 = [P4 + 0x1c];
    ee4c:	00 0c       	CC = R0 == 0x0;
    ee4e:	05 1c       	IF CC JUMP 0xee58 <_SendResponses+0xe8> (BP);
    ee50:	39 e4 10 05 	R1 = [FP + 0x1440];
    ee54:	08 08       	CC = R0 == R1;
    ee56:	19 14       	IF !CC JUMP 0xee88 <_SendResponses+0x118> (BP);
    ee58:	0e 32       	P1 = R6;
    ee5a:	08 91       	R0 = [P1];
    ee5c:	00 0c       	CC = R0 == 0x0;
    ee5e:	0f 1c       	IF CC JUMP 0xee7c <_SendResponses+0x10c> (BP);
    ee60:	61 a2       	R1 = [P4 + 0x24];
    ee62:	21 64       	R1 += 0x4;		/* (  4) */
    ee64:	14 30       	R2 = R4;
    ee66:	05 30       	R0 = R5;
    ee68:	ff e3 cc 88 	CALL 0x0 <_AddRecordToResponseList>;
    ee6c:	10 30       	R2 = R0;
    ee6e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    ee72:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    ee74:	01 e1 38 49 	R1.L = 0x4938;		/* (18744)	R1=0x4938(18744) */
    ee78:	ff e3 c4 88 	CALL 0x0 <_AddRecordToResponseList>;
    ee7c:	45 30       	R0 = P5;
    ee7e:	62 e5 7a 00 	R2 = W[P4 + 0xf4] (X);
    ee82:	4f 30       	R1 = FP;
    ee84:	ff e3 28 ff 	CALL 0xecd4 <_SendSPSRegistration>;
    ee88:	00 00       	NOP;
    ee8a:	38 91       	R0 = [FP];
    ee8c:	ff e3 ba 88 	CALL 0x0 <_AddRecordToResponseList>;
    ee90:	38 32       	FP = R0;
    ee92:	47 0c       	CC = FP == 0x0;
    ee94:	da 17       	IF !CC JUMP 0xee48 <_SendResponses+0xd8> (BP);
    ee96:	00 00       	NOP;
    ee98:	64 91       	P4 = [P4];
    ee9a:	44 0c       	CC = P4 == 0x0;
    ee9c:	b0 17       	IF !CC JUMP 0xedfc <_SendResponses+0x8c> (BP);
    ee9e:	28 e4 f7 07 	R0 = [P5 + 0x1fdc];
    eea2:	ff e3 af 88 	CALL 0x0 <_AddRecordToResponseList>;
    eea6:	4c e1 00 00 	P4.H = 0x0;		/* (  0)	P4=0x0 <_AddRecordToResponseList> */
    eeaa:	10 32       	P2 = R0;
    eeac:	0c e1 00 00 	P4.L = 0x0;		/* (  0)	P4=0x0 <_AddRecordToResponseList> */
    eeb0:	57 60       	R7 = 0xa (X);		/*		R7=0xa( 10) */
    eeb2:	1a 20       	JUMP.S 0xeee6 <_SendResponses+0x176>;
    eeb4:	00 00       	NOP;
    eeb6:	10 e4 77 02 	R0 = [P2 + 0x9dc];
    eeba:	00 0c       	CC = R0 == 0x0;
    eebc:	10 1c       	IF CC JUMP 0xeedc <_SendResponses+0x16c> (BP);
    eebe:	21 91       	R1 = [P4];
    eec0:	f9 40       	R1 *= R7;
    eec2:	2a e4 37 00 	R2 = [P5 + 0xdc];
    eec6:	51 50       	R1 = R1 + R2;
    eec8:	12 e4 78 02 	R2 = [P2 + 0x9e0];
    eecc:	0a 08       	CC = R2 == R1;
    eece:	07 14       	IF !CC JUMP 0xeedc <_SendResponses+0x16c> (BP);
    eed0:	39 60       	R1 = 0x7 (X);		/*		R1=0x7(  7) */
    eed2:	08 09       	CC = R0 <= R1;
    eed4:	04 14       	IF !CC JUMP 0xeedc <_SendResponses+0x16c> (BP);
    eed6:	08 64       	R0 += 0x1;		/* (  1) */
    eed8:	10 e6 77 02 	[P2 + 0x9dc] = R0;
    eedc:	00 00       	NOP;
    eede:	10 91       	R0 = [P2];
    eee0:	ff e3 90 88 	CALL 0x0 <_AddRecordToResponseList>;
    eee4:	10 32       	P2 = R0;
    eee6:	42 0c       	CC = P2 == 0x0;
    eee8:	e6 17       	IF !CC JUMP 0xeeb4 <_SendResponses+0x144> (BP);
    eeea:	4d 30       	R1 = P5;
    eeec:	56 30       	R2 = SP;
    eeee:	23 e1 40 07 	R3 = 0x740 (X);		/*		R3=0x740(1856) */
    eef2:	20 e1 2c 07 	R0 = 0x72c (X);		/*		R0=0x72c(1836) */
    eef6:	b9 65       	R1 += 0x37;		/* ( 55) */
    eef8:	2c e5 f2 07 	P4 = [P5 + 0x1fc8];
    eefc:	da 51       	R7 = R2 + R3;
    eefe:	25 60       	R5 = 0x4 (X);		/*		R5=0x4(  4) */
    ef00:	82 51       	R6 = R2 + R0;
    ef02:	34 60       	R4 = 0x6 (X);		/*		R4=0x6(  6) */
    ef04:	2f e1 a0 00 	FP = 0xa0 (X);		/*		FP=0xa0(160) */
    ef08:	f1 b2       	[SP + 0x2c] = R1;
    ef0a:	5a 20       	JUMP.S 0xefbe <_SendResponses+0x24e>;
    ef0c:	00 00       	NOP;
    ef0e:	a0 e4 8a 00 	R0 = B[P4 + 0x8a] (Z);
    ef12:	00 0c       	CC = R0 == 0x0;
    ef14:	53 1c       	IF CC JUMP 0xefba <_SendResponses+0x24a> (BP);
    ef16:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    ef18:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
    ef1a:	07 30       	R0 = R7;
    ef1c:	ff e3 72 88 	CALL 0x0 <_AddRecordToResponseList>;
    ef20:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    ef22:	35 e6 d0 01 	[SP + 0x740] = R5;
    ef26:	06 30       	R0 = R6;
    ef28:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
    ef2a:	ff e3 6b 88 	CALL 0x0 <_AddRecordToResponseList>;
    ef2e:	bc 5a       	P2 = P4 + FP;
    ef30:	11 90       	R1 = [P2++];
    ef32:	31 e6 cc 01 	[SP + 0x730] = R1;
    ef36:	11 90       	R1 = [P2++];
    ef38:	31 e6 cd 01 	[SP + 0x734] = R1;
    ef3c:	11 90       	R1 = [P2++];
    ef3e:	31 e6 ce 01 	[SP + 0x738] = R1;
    ef42:	20 e4 27 00 	R0 = [P4 + 0x9c];
    ef46:	11 91       	R1 = [P2];
    ef48:	34 e6 cb 01 	[SP + 0x72c] = R4;
    ef4c:	30 e6 d1 01 	[SP + 0x744] = R0;
    ef50:	31 e6 cf 01 	[SP + 0x73c] = R1;
    ef54:	00 0c       	CC = R0 == 0x0;
    ef56:	07 1c       	IF CC JUMP 0xef64 <_SendResponses+0x1f4> (BP);
    ef58:	22 e4 24 00 	R2 = [P4 + 0x90];
    ef5c:	45 30       	R0 = P5;
    ef5e:	0f 30       	R1 = R7;
    ef60:	ff e3 90 92 	CALL 0x1480 <_SendDelayedUnicastResponse>;
    ef64:	00 00       	NOP;
    ef66:	21 e4 29 00 	R1 = [P4 + 0xa4];
    ef6a:	20 e4 28 00 	R0 = [P4 + 0xa0];
    ef6e:	01 56       	R0 = R1 | R0;
    ef70:	21 e4 2a 00 	R1 = [P4 + 0xa8];
    ef74:	08 56       	R0 = R0 | R1;
    ef76:	21 e4 2b 00 	R1 = [P4 + 0xac];
    ef7a:	08 56       	R0 = R0 | R1;
    ef7c:	00 0c       	CC = R0 == 0x0;
    ef7e:	07 1c       	IF CC JUMP 0xef8c <_SendResponses+0x21c> (BP);
    ef80:	22 e4 24 00 	R2 = [P4 + 0x90];
    ef84:	45 30       	R0 = P5;
    ef86:	0e 30       	R1 = R6;
    ef88:	ff e3 7c 92 	CALL 0x1480 <_SendDelayedUnicastResponse>;
    ef8c:	00 00       	NOP;
    ef8e:	a0 e4 8a 00 	R0 = B[P4 + 0x8a] (Z);
    ef92:	00 0c       	CC = R0 == 0x0;
    ef94:	13 1c       	IF CC JUMP 0xefba <_SendResponses+0x24a> (BP);
    ef96:	61 a2       	R1 = [P4 + 0x24];
    ef98:	44 30       	R0 = P4;
    ef9a:	21 64       	R1 += 0x4;		/* (  4) */
    ef9c:	f2 a2       	R2 = [SP + 0x2c];
    ef9e:	20 64       	R0 += 0x4;		/* (  4) */
    efa0:	ff e3 30 88 	CALL 0x0 <_AddRecordToResponseList>;
    efa4:	10 30       	R2 = R0;
    efa6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    efaa:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    efac:	01 e1 54 49 	R1.L = 0x4954;		/* (18772)	R1=0x4954(18772) */
    efb0:	ff e3 28 88 	CALL 0x0 <_AddRecordToResponseList>;
    efb4:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    efb6:	a2 e6 8a 00 	B[P4 + 0x8a] = R2;
    efba:	00 00       	NOP;
    efbc:	64 91       	P4 = [P4];
    efbe:	44 0c       	CC = P4 == 0x0;
    efc0:	a6 17       	IF !CC JUMP 0xef0c <_SendResponses+0x19c> (BP);
    efc2:	03 60       	R3 = 0x0 (X);		/*		R3=0x0(  0) */
    efc4:	45 e1 00 00 	R5.H = 0x0;		/* (  0)	R5=0x4(  4) */
    efc8:	47 e1 00 00 	R7.H = 0x0;		/* (  0)	R7=0xa( 10) */
    efcc:	65 30       	R4 = P5;
    efce:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0x0 <_AddRecordToResponseList>(  0) */
    efd2:	2c e5 f2 07 	P4 = [P5 + 0x1fc8];
    efd6:	f3 b2       	[SP + 0x2c] = R3;
    efd8:	05 e1 00 00 	R5.L = 0x0;		/* (  0)	R5=0x0 <_AddRecordToResponseList>(  0) */
    efdc:	07 e1 00 00 	R7.L = 0x0;		/* (  0)	R7=0x0 <_AddRecordToResponseList>(  0) */
    efe0:	bc 65       	R4 += 0x37;		/* ( 55) */
    efe2:	06 e1 00 00 	R6.L = 0x0;		/* (  0)	R6=0x0 <_AddRecordToResponseList>(  0) */
    efe6:	76 21       	JUMP.S 0xf2d2 <_SendResponses+0x562>;
    efe8:	4b 60       	R3 = 0x9 (X);		/*		R3=0x9(  9) */
    efea:	21 e4 36 00 	R1 = [P4 + 0xd8];
    efee:	09 64       	R1 += 0x1;		/* (  1) */
    eff0:	21 e6 36 00 	[P4 + 0xd8] = R1;
    eff4:	19 0a       	CC = R1 <= R3 (IU);
    eff6:	04 1c       	IF CC JUMP 0xeffe <_SendResponses+0x28e> (BP);
    eff8:	21 e7 37 00 	[P4 + 0xdc] = P1;
    effc:	06 20       	JUMP.S 0xf008 <_SendResponses+0x298>;
    effe:	02 50       	R0 = R2 + R0;
    f000:	00 0c       	CC = R0 == 0x0;
    f002:	42 07       	IF CC R0 = P2;
    f004:	20 e6 37 00 	[P4 + 0xdc] = R0;
    f008:	20 e4 37 00 	R0 = [P4 + 0xdc];
    f00c:	00 0c       	CC = R0 == 0x0;
    f00e:	06 1c       	IF CC JUMP 0xf01a <_SendResponses+0x2aa> (BP);
    f010:	29 e4 37 00 	R1 = [P5 + 0xdc];
    f014:	41 52       	R1 = R1 - R0;
    f016:	81 0c       	CC = R1 < 0x0;
    f018:	e8 17       	IF !CC JUMP 0xefe8 <_SendResponses+0x278> (BP);
    f01a:	00 00       	NOP;
    f01c:	a2 e5 86 00 	R2 = B[P4 + 0x86] (X);
    f020:	50 43       	R0 = R2.B (Z);
    f022:	38 32       	FP = R0;
    f024:	47 0c       	CC = FP == 0x0;
    f026:	54 1d       	IF CC JUMP 0xf2ce <_SendResponses+0x55e> (BP);
    f028:	20 e4 2f 00 	R0 = [P4 + 0xbc];
    f02c:	83 43       	R3 = -R0;
    f02e:	21 e4 30 00 	R1 = [P4 + 0xc0];
    f032:	4b 52       	R1 = R3 - R1;
    f034:	2b e4 37 00 	R3 = [P5 + 0xdc];
    f038:	59 50       	R1 = R1 + R3;
    f03a:	81 0c       	CC = R1 < 0x0;
    f03c:	49 1d       	IF CC JUMP 0xf2ce <_SendResponses+0x55e> (BP);
    f03e:	a3 e4 04 00 	R3 = B[P4 + 0x4] (Z);
    f042:	0b 0c       	CC = R3 == 0x1;
    f044:	9c 14       	IF !CC JUMP 0xf17c <_SendResponses+0x40c> (BP);
    f046:	20 e4 13 00 	R0 = [P4 + 0x4c];
    f04a:	00 0c       	CC = R0 == 0x0;
    f04c:	06 14       	IF !CC JUMP 0xf058 <_SendResponses+0x2e8> (BP);
    f04e:	05 32       	P0 = R5;
    f050:	00 91       	R0 = [P0];
    f052:	20 e6 24 00 	[P4 + 0x90] = R0;
    f056:	3c 21       	JUMP.S 0xf2ce <_SendResponses+0x55e>;
    f058:	0f 32       	P1 = R7;
    f05a:	08 91       	R0 = [P1];
    f05c:	00 0c       	CC = R0 == 0x0;
    f05e:	16 1c       	IF CC JUMP 0xf08a <_SendResponses+0x31a> (BP);
    f060:	61 a2       	R1 = [P4 + 0x24];
    f062:	44 30       	R0 = P4;
    f064:	21 64       	R1 += 0x4;		/* (  4) */
    f066:	14 30       	R2 = R4;
    f068:	20 64       	R0 += 0x4;		/* (  4) */
    f06a:	ff e3 cb 87 	CALL 0x0 <_AddRecordToResponseList>;
    f06e:	2a e1 54 00 	P2 = 0x54 (X);		/*		P2=0x54( 84) */
    f072:	57 30       	R2 = FP;
    f074:	94 5a       	P2 = P4 + P2;
    f076:	30 b1       	[SP + 0x10] = R0;
    f078:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4954(18772) */
    f07c:	ea 67       	R2 += -0x3;		/* ( -3) */
    f07e:	f2 bc       	[SP + 0xc] = P2;
    f080:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    f082:	01 e1 8c 49 	R1.L = 0x498c;		/* (18828)	R1=0x498c(18828) */
    f086:	ff e3 bd 87 	CALL 0x0 <_AddRecordToResponseList>;
    f08a:	23 e1 54 00 	R3 = 0x54 (X);		/*		R3=0x54( 84) */
    f08e:	44 30       	R0 = P4;
    f090:	2a e1 5c 00 	P2 = 0x5c (X);		/*		P2=0x5c( 92) */
    f094:	e1 a1       	R1 = [P4 + 0x1c];
    f096:	98 50       	R2 = R0 + R3;
    f098:	94 5a       	P2 = P4 + P2;
    f09a:	f2 bc       	[SP + 0xc] = P2;
    f09c:	45 30       	R0 = P5;
    f09e:	b3 b2       	[SP + 0x28] = R3;
    f0a0:	ff e3 ae 96 	CALL 0x1dfc <_SendWakeup>;
    f0a4:	7c 32       	FP = P4;
    f0a6:	00 00       	NOP;
    f0a8:	b8 e4 86 00 	R0 = B[FP + 0x86] (Z);
    f0ac:	00 0c       	CC = R0 == 0x0;
    f0ae:	62 1c       	IF CC JUMP 0xf172 <_SendResponses+0x402> (BP);
    f0b0:	fa a1       	R2 = [FP + 0x1c];
    f0b2:	e1 a1       	R1 = [P4 + 0x1c];
    f0b4:	0a 08       	CC = R2 == R1;
    f0b6:	5e 14       	IF !CC JUMP 0xf172 <_SendResponses+0x402> (BP);
    f0b8:	3a e4 15 00 	R2 = [FP + 0x54];
    f0bc:	21 e4 15 00 	R1 = [P4 + 0x54];
    f0c0:	0a 08       	CC = R2 == R1;
    f0c2:	58 14       	IF !CC JUMP 0xf172 <_SendResponses+0x402> (BP);
    f0c4:	7a e4 2c 00 	R2 = W[FP + 0x58] (Z);
    f0c8:	61 e4 2c 00 	R1 = W[P4 + 0x58] (Z);
    f0cc:	0a 08       	CC = R2 == R1;
    f0ce:	52 14       	IF !CC JUMP 0xf172 <_SendResponses+0x402> (BP);
    f0d0:	39 e4 19 00 	R1 = [FP + 0x64];
    f0d4:	32 60       	R2 = 0x6 (X);		/*		R2=0x6(  6) */
    f0d6:	11 08       	CC = R1 == R2;
    f0d8:	39 14       	IF !CC JUMP 0xf14a <_SendResponses+0x3da> (BP);
    f0da:	93 60       	R3 = 0x12 (X);		/*		R3=0x12( 18) */
    f0dc:	18 08       	CC = R0 == R3;
    f0de:	36 14       	IF !CC JUMP 0xf14a <_SendResponses+0x3da> (BP);
    f0e0:	07 32       	P0 = R7;
    f0e2:	00 91       	R0 = [P0];
    f0e4:	00 0c       	CC = R0 == 0x0;
    f0e6:	19 1c       	IF CC JUMP 0xf118 <_SendResponses+0x3a8> (BP);
    f0e8:	79 a2       	R1 = [FP + 0x24];
    f0ea:	47 30       	R0 = FP;
    f0ec:	21 64       	R1 += 0x4;		/* (  4) */
    f0ee:	14 30       	R2 = R4;
    f0f0:	20 64       	R0 += 0x4;		/* (  4) */
    f0f2:	ff e3 87 87 	CALL 0x0 <_AddRecordToResponseList>;
    f0f6:	29 e1 4c 00 	P1 = 0x4c (X);		/*		P1=0x4c( 76) */
    f0fa:	8f 5a       	P2 = FP + P1;
    f0fc:	f2 bc       	[SP + 0xc] = P2;
    f0fe:	28 e1 54 00 	P0 = 0x54 (X);		/*		P0=0x54( 84) */
    f102:	87 5a       	P2 = FP + P0;
    f104:	70 b1       	[SP + 0x14] = R0;
    f106:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x498c(18828) */
    f10a:	32 bd       	[SP + 0x10] = P2;
    f10c:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    f10e:	01 e1 bc 49 	R1.L = 0x49bc;		/* (18876)	R1=0x49bc(18876) */
    f112:	7a 60       	R2 = 0xf (X);		/*		R2=0xf( 15) */
    f114:	ff e3 76 87 	CALL 0x0 <_AddRecordToResponseList>;
    f118:	29 e1 68 00 	P1 = 0x68 (X);		/*		P1=0x68(104) */
    f11c:	8f 5a       	P2 = FP + P1;
    f11e:	32 bd       	[SP + 0x10] = P2;
    f120:	28 e1 54 00 	P0 = 0x54 (X);		/*		P0=0x54( 84) */
    f124:	87 5a       	P2 = FP + P0;
    f126:	72 bd       	[SP + 0x14] = P2;
    f128:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x68 */
    f12c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x5c */
    f130:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    f134:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    f138:	f7 bc       	[SP + 0xc] = FP;
    f13a:	b1 bd       	[SP + 0x18] = P1;
    f13c:	f2 bd       	[SP + 0x1c] = P2;
    f13e:	45 30       	R0 = P5;
    f140:	21 e1 88 ff 	R1 = -0x78 (X);		/*		R1=0xffffff88(-120) */
    f144:	02 61       	R2 = 0x20 (X);		/*		R2=0x20( 32) */
    f146:	ff e3 0b 95 	CALL 0x1b5c <_SendNDP>;
    f14a:	00 00       	NOP;
    f14c:	28 e4 37 00 	R0 = [P5 + 0xdc];
    f150:	38 e6 30 00 	[FP + 0xc0] = R0;
    f154:	b8 e5 86 00 	R0 = B[FP + 0x86] (X);
    f158:	f8 67       	R0 += -0x1;		/* ( -1) */
    f15a:	b8 e6 86 00 	B[FP + 0x86] = R0;
    f15e:	40 43       	R0 = R0.B (Z);
    f160:	18 0e       	CC = R0 <= 0x3 (IU);
    f162:	08 14       	IF !CC JUMP 0xf172 <_SendResponses+0x402> (BP);
    f164:	06 32       	P0 = R6;
    f166:	00 91       	R0 = [P0];
    f168:	38 e6 13 00 	[FP + 0x4c] = R0;
    f16c:	40 a0       	R0 = [P0 + 0x4];
    f16e:	38 e6 14 00 	[FP + 0x50] = R0;
    f172:	00 00       	NOP;
    f174:	7f 91       	FP = [FP];
    f176:	47 0c       	CC = FP == 0x0;
    f178:	97 17       	IF !CC JUMP 0xf0a6 <_SendResponses+0x336> (BP);
    f17a:	aa 20       	JUMP.S 0xf2ce <_SendResponses+0x55e>;
    f17c:	e1 61       	R1 = 0x3c (X);		/*		R1=0x3c( 60) */
    f17e:	cb 54       	R3 = R3 & R1;
    f180:	03 0c       	CC = R3 == 0x0;
    f182:	a6 1c       	IF CC JUMP 0xf2ce <_SendResponses+0x55e> (BP);
    f184:	e2 ae       	P2 = [P4 + 0x2c];
    f186:	42 0c       	CC = P2 == 0x0;
    f188:	06 1c       	IF CC JUMP 0xf194 <_SendResponses+0x424> (BP);
    f18a:	93 e4 04 00 	R3 = B[P2 + 0x4] (Z);
    f18e:	4b 54       	R1 = R3 & R1;
    f190:	01 0c       	CC = R1 == 0x0;
    f192:	9e 1c       	IF CC JUMP 0xf2ce <_SendResponses+0x55e> (BP);
    f194:	00 00       	NOP;
    f196:	22 af       	P2 = [P4 + 0x30];
    f198:	42 0c       	CC = P2 == 0x0;
    f19a:	07 1c       	IF CC JUMP 0xf1a8 <_SendResponses+0x438> (BP);
    f19c:	e1 61       	R1 = 0x3c (X);		/*		R1=0x3c( 60) */
    f19e:	93 e4 04 00 	R3 = B[P2 + 0x4] (Z);
    f1a2:	4b 54       	R1 = R3 & R1;
    f1a4:	01 0c       	CC = R1 == 0x0;
    f1a6:	94 1c       	IF CC JUMP 0xf2ce <_SendResponses+0x55e> (BP);
    f1a8:	00 00       	NOP;
    f1aa:	62 af       	P2 = [P4 + 0x34];
    f1ac:	42 0c       	CC = P2 == 0x0;
    f1ae:	07 1c       	IF CC JUMP 0xf1bc <_SendResponses+0x44c> (BP);
    f1b0:	e1 61       	R1 = 0x3c (X);		/*		R1=0x3c( 60) */
    f1b2:	93 e4 04 00 	R3 = B[P2 + 0x4] (Z);
    f1b6:	4b 54       	R1 = R3 & R1;
    f1b8:	01 0c       	CC = R1 == 0x0;
    f1ba:	8a 1c       	IF CC JUMP 0xf2ce <_SendResponses+0x55e> (BP);
    f1bc:	00 00       	NOP;
    f1be:	21 e4 19 00 	R1 = [P4 + 0x64];
    f1c2:	01 0c       	CC = R1 == 0x0;
    f1c4:	76 1c       	IF CC JUMP 0xf2b0 <_SendResponses+0x540> (BP);
    f1c6:	3a 32       	FP = R2;
    f1c8:	08 4f       	R0 <<= 0x1;
    f1ca:	20 e6 2f 00 	[P4 + 0xbc] = R0;
    f1ce:	23 60       	R3 = 0x4 (X);		/*		R3=0x4(  4) */
    f1d0:	19 08       	CC = R1 == R3;
    f1d2:	ff 6f       	FP += -0x1;		/* ( -1) */
    f1d4:	57 30       	R2 = FP;
    f1d6:	a2 e6 86 00 	B[P4 + 0x86] = R2;
    f1da:	28 e4 37 00 	R0 = [P5 + 0xdc];
    f1de:	20 e6 30 00 	[P4 + 0xc0] = R0;
    f1e2:	2f 14       	IF !CC JUMP 0xf240 <_SendResponses+0x4d0> (BP);
    f1e4:	07 32       	P0 = R7;
    f1e6:	00 91       	R0 = [P0];
    f1e8:	00 0c       	CC = R0 == 0x0;
    f1ea:	1a 1c       	IF CC JUMP 0xf21e <_SendResponses+0x4ae> (BP);
    f1ec:	61 a2       	R1 = [P4 + 0x24];
    f1ee:	44 30       	R0 = P4;
    f1f0:	21 64       	R1 += 0x4;		/* (  4) */
    f1f2:	14 30       	R2 = R4;
    f1f4:	20 64       	R0 += 0x4;		/* (  4) */
    f1f6:	ff e3 05 87 	CALL 0x0 <_AddRecordToResponseList>;
    f1fa:	2a e1 4c 00 	P2 = 0x4c (X);		/*		P2=0x4c( 76) */
    f1fe:	94 5a       	P2 = P4 + P2;
    f200:	4f 30       	R1 = FP;
    f202:	f2 bc       	[SP + 0xc] = P2;
    f204:	4a 43       	R2 = R1.B (Z);
    f206:	2a e1 54 00 	P2 = 0x54 (X);		/*		P2=0x54( 84) */
    f20a:	94 5a       	P2 = P4 + P2;
    f20c:	70 b1       	[SP + 0x14] = R0;
    f20e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3c( 60) */
    f212:	32 bd       	[SP + 0x10] = P2;
    f214:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    f216:	01 e1 00 4a 	R1.L = 0x4a00;		/* (18944)	R1=0x4a00(18944) */
    f21a:	ff e3 f3 86 	CALL 0x0 <_AddRecordToResponseList>;
    f21e:	28 e1 68 00 	P0 = 0x68 (X);		/*		P0=0x68(104) */
    f222:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    f226:	84 5a       	P2 = P4 + P0;
    f228:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    f22c:	f2 bc       	[SP + 0xc] = P2;
    f22e:	36 b1       	[SP + 0x10] = R6;
    f230:	72 bd       	[SP + 0x14] = P2;
    f232:	b1 bd       	[SP + 0x18] = P1;
    f234:	45 30       	R0 = P5;
    f236:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    f238:	54 30       	R2 = P4;
    f23a:	ff e3 ff 93 	CALL 0x1a38 <_SendARP>;
    f23e:	48 20       	JUMP.S 0xf2ce <_SendResponses+0x55e>;
    f240:	30 60       	R0 = 0x6 (X);		/*		R0=0x6(  6) */
    f242:	01 08       	CC = R1 == R0;
    f244:	45 14       	IF !CC JUMP 0xf2ce <_SendResponses+0x55e> (BP);
    f246:	07 32       	P0 = R7;
    f248:	00 91       	R0 = [P0];
    f24a:	00 0c       	CC = R0 == 0x0;
    f24c:	1a 1c       	IF CC JUMP 0xf280 <_SendResponses+0x510> (BP);
    f24e:	61 a2       	R1 = [P4 + 0x24];
    f250:	44 30       	R0 = P4;
    f252:	21 64       	R1 += 0x4;		/* (  4) */
    f254:	14 30       	R2 = R4;
    f256:	20 64       	R0 += 0x4;		/* (  4) */
    f258:	ff e3 d4 86 	CALL 0x0 <_AddRecordToResponseList>;
    f25c:	2a e1 4c 00 	P2 = 0x4c (X);		/*		P2=0x4c( 76) */
    f260:	94 5a       	P2 = P4 + P2;
    f262:	4f 30       	R1 = FP;
    f264:	f2 bc       	[SP + 0xc] = P2;
    f266:	4a 43       	R2 = R1.B (Z);
    f268:	2a e1 54 00 	P2 = 0x54 (X);		/*		P2=0x54( 84) */
    f26c:	94 5a       	P2 = P4 + P2;
    f26e:	70 b1       	[SP + 0x14] = R0;
    f270:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1(  1) */
    f274:	32 bd       	[SP + 0x10] = P2;
    f276:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    f278:	01 e1 44 4a 	R1.L = 0x4a44;		/* (19012)	R1=0x4a44(19012) */
    f27c:	ff e3 c2 86 	CALL 0x0 <_AddRecordToResponseList>;
    f280:	28 e1 68 00 	P0 = 0x68 (X);		/*		P0=0x68(104) */
    f284:	84 5a       	P2 = P4 + P0;
    f286:	32 bd       	[SP + 0x10] = P2;
    f288:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    f28a:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    f28e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x54 */
    f292:	70 b1       	[SP + 0x14] = R0;
    f294:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    f298:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    f29c:	f4 bc       	[SP + 0xc] = P4;
    f29e:	b1 bd       	[SP + 0x18] = P1;
    f2a0:	f2 bd       	[SP + 0x1c] = P2;
    f2a2:	45 30       	R0 = P5;
    f2a4:	21 e1 88 ff 	R1 = -0x78 (X);		/*		R1=0xffffff88(-120) */
    f2a8:	02 61       	R2 = 0x20 (X);		/*		R2=0x20( 32) */
    f2aa:	ff e3 59 94 	CALL 0x1b5c <_SendNDP>;
    f2ae:	10 20       	JUMP.S 0xf2ce <_SendResponses+0x55e>;
    f2b0:	05 32       	P0 = R5;
    f2b2:	01 91       	R1 = [P0];
    f2b4:	21 e6 24 00 	[P4 + 0x90] = R1;
    f2b8:	f1 a2       	R1 = [SP + 0x2c];
    f2ba:	07 c4 08 02 	R1 = MAX (R1, R0);
    f2be:	20 e4 38 00 	R0 = [P4 + 0xe0];
    f2c2:	f1 b2       	[SP + 0x2c] = R1;
    f2c4:	00 0c       	CC = R0 == 0x0;
    f2c6:	04 1c       	IF CC JUMP 0xf2ce <_SendResponses+0x55e> (BP);
    f2c8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    f2ca:	20 e6 38 00 	[P4 + 0xe0] = R0;
    f2ce:	00 00       	NOP;
    f2d0:	64 91       	P4 = [P4];
    f2d2:	44 0c       	CC = P4 == 0x0;
    f2d4:	0b 18       	IF CC JUMP 0xf2ea <_SendResponses+0x57a>;
    f2d6:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0x68 */
    f2da:	08 e1 00 00 	P0.L = 0x0;		/* (  0)	P0=0x0 <_AddRecordToResponseList> */
    f2de:	32 60       	R2 = 0x6 (X);		/*		R2=0x6(  6) */
    f2e0:	00 91       	R0 = [P0];
    f2e2:	c2 40       	R2 *= R0;
    f2e4:	0a 68       	P2 = 0x1 (X);		/*		P2=0x1(  1) */
    f2e6:	01 68       	P1 = 0x0 (X);		/*		P1=0x0(  0) */
    f2e8:	90 2e       	JUMP.S 0xf008 <_SendResponses+0x298>;
    f2ea:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    f2ee:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    f2f2:	2a e5 f2 07 	P2 = [P5 + 0x1fc8];
    f2f6:	0a 91       	R2 = [P1];
    f2f8:	e0 61       	R0 = 0x3c (X);		/*		R0=0x3c( 60) */
    f2fa:	47 20       	JUMP.S 0xf388 <_SendResponses+0x618>;
    f2fc:	00 00       	NOP;
    f2fe:	d1 a1       	R1 = [P2 + 0x1c];
    f300:	01 0c       	CC = R1 == 0x0;
    f302:	05 1c       	IF CC JUMP 0xf30c <_SendResponses+0x59c> (BP);
    f304:	11 e4 24 00 	R1 = [P2 + 0x90];
    f308:	01 0c       	CC = R1 == 0x0;
    f30a:	3b 14       	IF !CC JUMP 0xf380 <_SendResponses+0x610> (BP);
    f30c:	00 00       	NOP;
    f30e:	11 e4 2f 00 	R1 = [P2 + 0xbc];
    f312:	f3 a2       	R3 = [SP + 0x2c];
    f314:	19 09       	CC = R1 <= R3;
    f316:	37 14       	IF !CC JUMP 0xf384 <_SendResponses+0x614> (BP);
    f318:	93 e4 86 00 	R3 = B[P2 + 0x86] (Z);
    f31c:	03 0c       	CC = R3 == 0x0;
    f31e:	33 1c       	IF CC JUMP 0xf384 <_SendResponses+0x614> (BP);
    f320:	82 c6 09 87 	R3 = R1 >> 0x1f;
    f324:	cb 50       	R3 = R3 + R1;
    f326:	0b 4d       	R3 >>>= 0x1;
    f328:	4b 52       	R1 = R3 - R1;
    f32a:	2b e4 37 00 	R3 = [P5 + 0xdc];
    f32e:	59 50       	R1 = R1 + R3;
    f330:	13 e4 30 00 	R3 = [P2 + 0xc0];
    f334:	59 52       	R1 = R1 - R3;
    f336:	81 0c       	CC = R1 < 0x0;
    f338:	26 1c       	IF CC JUMP 0xf384 <_SendResponses+0x614> (BP);
    f33a:	11 e4 19 00 	R1 = [P2 + 0x64];
    f33e:	01 0c       	CC = R1 == 0x0;
    f340:	22 14       	IF !CC JUMP 0xf384 <_SendResponses+0x614> (BP);
    f342:	91 e4 04 00 	R1 = B[P2 + 0x4] (Z);
    f346:	41 54       	R1 = R1 & R0;
    f348:	01 0c       	CC = R1 == 0x0;
    f34a:	1d 1c       	IF CC JUMP 0xf384 <_SendResponses+0x614> (BP);
    f34c:	d1 ae       	P1 = [P2 + 0x2c];
    f34e:	41 0c       	CC = P1 == 0x0;
    f350:	06 1c       	IF CC JUMP 0xf35c <_SendResponses+0x5ec> (BP);
    f352:	89 e4 04 00 	R1 = B[P1 + 0x4] (Z);
    f356:	41 54       	R1 = R1 & R0;
    f358:	01 0c       	CC = R1 == 0x0;
    f35a:	15 1c       	IF CC JUMP 0xf384 <_SendResponses+0x614> (BP);
    f35c:	00 00       	NOP;
    f35e:	11 af       	P1 = [P2 + 0x30];
    f360:	41 0c       	CC = P1 == 0x0;
    f362:	06 1c       	IF CC JUMP 0xf36e <_SendResponses+0x5fe> (BP);
    f364:	89 e4 04 00 	R1 = B[P1 + 0x4] (Z);
    f368:	41 54       	R1 = R1 & R0;
    f36a:	01 0c       	CC = R1 == 0x0;
    f36c:	0c 1c       	IF CC JUMP 0xf384 <_SendResponses+0x614> (BP);
    f36e:	00 00       	NOP;
    f370:	51 af       	P1 = [P2 + 0x34];
    f372:	41 0c       	CC = P1 == 0x0;
    f374:	06 1c       	IF CC JUMP 0xf380 <_SendResponses+0x610> (BP);
    f376:	89 e4 04 00 	R1 = B[P1 + 0x4] (Z);
    f37a:	41 54       	R1 = R1 & R0;
    f37c:	01 0c       	CC = R1 == 0x0;
    f37e:	03 1c       	IF CC JUMP 0xf384 <_SendResponses+0x614> (BP);
    f380:	12 e6 24 00 	[P2 + 0x90] = R2;
    f384:	00 00       	NOP;
    f386:	52 91       	P2 = [P2];
    f388:	42 0c       	CC = P2 == 0x0;
    f38a:	b9 17       	IF !CC JUMP 0xf2fc <_SendResponses+0x58c> (BP);
    f38c:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0x0 <_AddRecordToResponseList>(  0) */
    f390:	fd 63       	R5 = -0x1 (X);		/*		R5=0xffffffff( -1) */
    f392:	2f e5 f2 07 	FP = [P5 + 0x1fc8];
    f396:	e7 61       	R7 = 0x3c (X);		/*		R7=0x3c( 60) */
    f398:	06 e1 00 00 	R6.L = 0x0;		/* (  0)	R6=0x0 <_AddRecordToResponseList>(  0) */
    f39c:	05 e1 ff 00 	R5.L = 0xff;		/* (255)	R5=0xffff00ff(-65281) */
    f3a0:	9b 20       	JUMP.S 0xf4d6 <_SendResponses+0x766>;
    f3a2:	00 00       	NOP;
    f3a4:	38 e4 24 00 	R0 = [FP + 0x90];
    f3a8:	00 0c       	CC = R0 == 0x0;
    f3aa:	52 1c       	IF CC JUMP 0xf44e <_SendResponses+0x6de> (BP);
    f3ac:	09 61       	R1 = 0x21 (X);		/*		R1=0x21( 33) */
    f3ae:	f8 a4       	R0 = W[FP + 0x6] (Z);
    f3b0:	08 08       	CC = R0 == R1;
    f3b2:	4e 14       	IF !CC JUMP 0xf44e <_SendResponses+0x6de> (BP);
    f3b4:	2c e5 f2 07 	P4 = [P5 + 0x1fc8];
    f3b8:	49 20       	JUMP.S 0xf44a <_SendResponses+0x6da>;
    f3ba:	00 00       	NOP;
    f3bc:	e0 a4       	R0 = W[P4 + 0x6] (Z);
    f3be:	08 0c       	CC = R0 == 0x1;
    f3c0:	04 18       	IF CC JUMP 0xf3c8 <_SendResponses+0x658>;
    f3c2:	e2 60       	R2 = 0x1c (X);		/*		R2=0x1c( 28) */
    f3c4:	10 08       	CC = R0 == R2;
    f3c6:	40 14       	IF !CC JUMP 0xf446 <_SendResponses+0x6d6> (BP);
    f3c8:	a0 e4 04 00 	R0 = B[P4 + 0x4] (Z);
    f3cc:	38 54       	R0 = R0 & R7;
    f3ce:	00 0c       	CC = R0 == 0x0;
    f3d0:	3b 1c       	IF CC JUMP 0xf446 <_SendResponses+0x6d6> (BP);
    f3d2:	e2 ae       	P2 = [P4 + 0x2c];
    f3d4:	42 0c       	CC = P2 == 0x0;
    f3d6:	06 1c       	IF CC JUMP 0xf3e2 <_SendResponses+0x672> (BP);
    f3d8:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
    f3dc:	38 54       	R0 = R0 & R7;
    f3de:	00 0c       	CC = R0 == 0x0;
    f3e0:	33 1c       	IF CC JUMP 0xf446 <_SendResponses+0x6d6> (BP);
    f3e2:	00 00       	NOP;
    f3e4:	22 af       	P2 = [P4 + 0x30];
    f3e6:	42 0c       	CC = P2 == 0x0;
    f3e8:	06 1c       	IF CC JUMP 0xf3f4 <_SendResponses+0x684> (BP);
    f3ea:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
    f3ee:	38 54       	R0 = R0 & R7;
    f3f0:	00 0c       	CC = R0 == 0x0;
    f3f2:	2a 1c       	IF CC JUMP 0xf446 <_SendResponses+0x6d6> (BP);
    f3f4:	00 00       	NOP;
    f3f6:	62 af       	P2 = [P4 + 0x34];
    f3f8:	42 0c       	CC = P2 == 0x0;
    f3fa:	06 1c       	IF CC JUMP 0xf406 <_SendResponses+0x696> (BP);
    f3fc:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
    f400:	38 54       	R0 = R0 & R7;
    f402:	00 0c       	CC = R0 == 0x0;
    f404:	21 1c       	IF CC JUMP 0xf446 <_SendResponses+0x6d6> (BP);
    f406:	00 00       	NOP;
    f408:	39 e4 31 00 	R1 = [FP + 0xc4];
    f40c:	20 e4 31 00 	R0 = [P4 + 0xc4];
    f410:	01 52       	R0 = R1 - R0;
    f412:	80 0c       	CC = R0 < 0x0;
    f414:	19 1c       	IF CC JUMP 0xf446 <_SendResponses+0x6d6> (BP);
    f416:	b9 a1       	R1 = [FP + 0x18];
    f418:	60 a1       	R0 = [P4 + 0x14];
    f41a:	01 08       	CC = R1 == R0;
    f41c:	15 14       	IF !CC JUMP 0xf446 <_SendResponses+0x6d6> (BP);
    f41e:	78 a2       	R0 = [FP + 0x24];
    f420:	50 64       	R0 += 0xa;		/* ( 10) */
    f422:	21 a2       	R1 = [P4 + 0x20];
    f424:	ff e3 ee 85 	CALL 0x0 <_AddRecordToResponseList>;
    f428:	00 0c       	CC = R0 == 0x0;
    f42a:	0e 1c       	IF CC JUMP 0xf446 <_SendResponses+0x6d6> (BP);
    f42c:	06 32       	P0 = R6;
    f42e:	38 e4 24 00 	R0 = [FP + 0x90];
    f432:	01 91       	R1 = [P0];
    f434:	08 08       	CC = R0 == R1;
    f436:	04 1c       	IF CC JUMP 0xf43e <_SendResponses+0x6ce> (BP);
    f438:	e1 a1       	R1 = [P4 + 0x1c];
    f43a:	08 08       	CC = R0 == R1;
    f43c:	05 14       	IF !CC JUMP 0xf446 <_SendResponses+0x6d6> (BP);
    f43e:	00 00       	NOP;
    f440:	e0 a1       	R0 = [P4 + 0x1c];
    f442:	20 e6 25 00 	[P4 + 0x94] = R0;
    f446:	00 00       	NOP;
    f448:	64 91       	P4 = [P4];
    f44a:	44 0c       	CC = P4 == 0x0;
    f44c:	b7 17       	IF !CC JUMP 0xf3ba <_SendResponses+0x64a> (BP);
    f44e:	00 00       	NOP;
    f450:	38 e4 24 00 	R0 = [FP + 0x90];
    f454:	00 0c       	CC = R0 == 0x0;
    f456:	3e 1c       	IF CC JUMP 0xf4d2 <_SendResponses+0x762> (BP);
    f458:	41 60       	R1 = 0x8 (X);		/*		R1=0x8(  8) */
    f45a:	41 e1 0c 00 	R1.H = 0xc;		/* ( 12)	R1=0xc0008(786440) */
    f45e:	78 a0       	R0 = [FP + 0x4];
    f460:	28 54       	R0 = R0 & R5;
    f462:	08 08       	CC = R0 == R1;
    f464:	37 14       	IF !CC JUMP 0xf4d2 <_SendResponses+0x762> (BP);
    f466:	a8 e4 58 1c 	R0 = B[P5 + 0x1c58] (Z);
    f46a:	38 54       	R0 = R0 & R7;
    f46c:	00 0c       	CC = R0 == 0x0;
    f46e:	32 1c       	IF CC JUMP 0xf4d2 <_SendResponses+0x762> (BP);
    f470:	2a e5 20 07 	P2 = [P5 + 0x1c80];
    f474:	42 0c       	CC = P2 == 0x0;
    f476:	06 1c       	IF CC JUMP 0xf482 <_SendResponses+0x712> (BP);
    f478:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
    f47c:	38 54       	R0 = R0 & R7;
    f47e:	00 0c       	CC = R0 == 0x0;
    f480:	29 1c       	IF CC JUMP 0xf4d2 <_SendResponses+0x762> (BP);
    f482:	00 00       	NOP;
    f484:	2a e5 21 07 	P2 = [P5 + 0x1c84];
    f488:	42 0c       	CC = P2 == 0x0;
    f48a:	06 1c       	IF CC JUMP 0xf496 <_SendResponses+0x726> (BP);
    f48c:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
    f490:	38 54       	R0 = R0 & R7;
    f492:	00 0c       	CC = R0 == 0x0;
    f494:	1f 1c       	IF CC JUMP 0xf4d2 <_SendResponses+0x762> (BP);
    f496:	00 00       	NOP;
    f498:	2a e5 22 07 	P2 = [P5 + 0x1c88];
    f49c:	42 0c       	CC = P2 == 0x0;
    f49e:	06 1c       	IF CC JUMP 0xf4aa <_SendResponses+0x73a> (BP);
    f4a0:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
    f4a4:	38 54       	R0 = R0 & R7;
    f4a6:	00 0c       	CC = R0 == 0x0;
    f4a8:	15 1c       	IF CC JUMP 0xf4d2 <_SendResponses+0x762> (BP);
    f4aa:	00 00       	NOP;
    f4ac:	78 a2       	R0 = [FP + 0x24];
    f4ae:	20 64       	R0 += 0x4;		/* (  4) */
    f4b0:	29 e4 1d 07 	R1 = [P5 + 0x1c74];
    f4b4:	ff e3 a6 85 	CALL 0x0 <_AddRecordToResponseList>;
    f4b8:	00 0c       	CC = R0 == 0x0;
    f4ba:	0c 1c       	IF CC JUMP 0xf4d2 <_SendResponses+0x762> (BP);
    f4bc:	28 e4 39 07 	R0 = [P5 + 0x1ce4];
    f4c0:	00 0c       	CC = R0 == 0x0;
    f4c2:	04 14       	IF !CC JUMP 0xf4ca <_SendResponses+0x75a> (BP);
    f4c4:	38 e4 24 00 	R0 = [FP + 0x90];
    f4c8:	03 20       	JUMP.S 0xf4ce <_SendResponses+0x75e>;
    f4ca:	06 32       	P0 = R6;
    f4cc:	00 91       	R0 = [P0];
    f4ce:	28 e6 39 07 	[P5 + 0x1ce4] = R0;
    f4d2:	00 00       	NOP;
    f4d4:	7f 91       	FP = [FP];
    f4d6:	47 0c       	CC = FP == 0x0;
    f4d8:	65 17       	IF !CC JUMP 0xf3a2 <_SendResponses+0x632> (BP);
    f4da:	45 e1 00 00 	R5.H = 0x0;		/* (  0)	R5=0xff(255) */
    f4de:	2c e5 f2 07 	P4 = [P5 + 0x1fc8];
    f4e2:	94 61       	R4 = 0x32 (X);		/*		R4=0x32( 50) */
    f4e4:	e7 61       	R7 = 0x3c (X);		/*		R7=0x3c( 60) */
    f4e6:	05 e1 00 00 	R5.L = 0x0;		/* (  0)	R5=0x0 <_AddRecordToResponseList>(  0) */
    f4ea:	92 20       	JUMP.S 0xf60e <_SendResponses+0x89e>;
    f4ec:	00 00       	NOP;
    f4ee:	a0 e4 04 00 	R0 = B[P4 + 0x4] (Z);
    f4f2:	20 54       	R0 = R0 & R4;
    f4f4:	00 0c       	CC = R0 == 0x0;
    f4f6:	8a 1c       	IF CC JUMP 0xf60a <_SendResponses+0x89a> (BP);
    f4f8:	20 e4 24 00 	R0 = [P4 + 0x90];
    f4fc:	00 0c       	CC = R0 == 0x0;
    f4fe:	45 1c       	IF CC JUMP 0xf588 <_SendResponses+0x818> (BP);
    f500:	2f e5 f2 07 	FP = [P5 + 0x1fc8];
    f504:	3f 20       	JUMP.S 0xf582 <_SendResponses+0x812>;
    f506:	00 00       	NOP;
    f508:	b8 e4 04 00 	R0 = B[FP + 0x4] (Z);
    f50c:	38 54       	R0 = R0 & R7;
    f50e:	00 0c       	CC = R0 == 0x0;
    f510:	37 1c       	IF CC JUMP 0xf57e <_SendResponses+0x80e> (BP);
    f512:	fa ae       	P2 = [FP + 0x2c];
    f514:	42 0c       	CC = P2 == 0x0;
    f516:	06 1c       	IF CC JUMP 0xf522 <_SendResponses+0x7b2> (BP);
    f518:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
    f51c:	38 54       	R0 = R0 & R7;
    f51e:	00 0c       	CC = R0 == 0x0;
    f520:	2f 1c       	IF CC JUMP 0xf57e <_SendResponses+0x80e> (BP);
    f522:	00 00       	NOP;
    f524:	3a af       	P2 = [FP + 0x30];
    f526:	42 0c       	CC = P2 == 0x0;
    f528:	06 1c       	IF CC JUMP 0xf534 <_SendResponses+0x7c4> (BP);
    f52a:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
    f52e:	38 54       	R0 = R0 & R7;
    f530:	00 0c       	CC = R0 == 0x0;
    f532:	26 1c       	IF CC JUMP 0xf57e <_SendResponses+0x80e> (BP);
    f534:	00 00       	NOP;
    f536:	7a af       	P2 = [FP + 0x34];
    f538:	42 0c       	CC = P2 == 0x0;
    f53a:	06 1c       	IF CC JUMP 0xf546 <_SendResponses+0x7d6> (BP);
    f53c:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
    f540:	38 54       	R0 = R0 & R7;
    f542:	00 0c       	CC = R0 == 0x0;
    f544:	1d 1c       	IF CC JUMP 0xf57e <_SendResponses+0x80e> (BP);
    f546:	0d 32       	P1 = R5;
    f548:	38 e4 24 00 	R0 = [FP + 0x90];
    f54c:	0e 91       	R6 = [P1];
    f54e:	30 08       	CC = R0 == R6;
    f550:	17 1c       	IF CC JUMP 0xf57e <_SendResponses+0x80e> (BP);
    f552:	21 e4 24 00 	R1 = [P4 + 0x90];
    f556:	08 08       	CC = R0 == R1;
    f558:	13 1c       	IF CC JUMP 0xf57e <_SendResponses+0x80e> (BP);
    f55a:	f9 a4       	R1 = W[FP + 0x6] (Z);
    f55c:	e0 a4       	R0 = W[P4 + 0x6] (Z);
    f55e:	01 08       	CC = R1 == R0;
    f560:	0f 14       	IF !CC JUMP 0xf57e <_SendResponses+0x80e> (BP);
    f562:	47 30       	R0 = FP;
    f564:	4c 30       	R1 = P4;
    f566:	ff e3 cb 87 	CALL 0x4fc <_SameResourceRecordNameClassInterface>;
    f56a:	00 0c       	CC = R0 == 0x0;
    f56c:	09 1c       	IF CC JUMP 0xf57e <_SendResponses+0x80e> (BP);
    f56e:	38 e4 24 00 	R0 = [FP + 0x90];
    f572:	00 0c       	CC = R0 == 0x0;
    f574:	03 14       	IF !CC JUMP 0xf57a <_SendResponses+0x80a> (BP);
    f576:	26 e4 24 00 	R6 = [P4 + 0x90];
    f57a:	3e e6 24 00 	[FP + 0x90] = R6;
    f57e:	00 00       	NOP;
    f580:	7f 91       	FP = [FP];
    f582:	47 0c       	CC = FP == 0x0;
    f584:	c1 17       	IF !CC JUMP 0xf506 <_SendResponses+0x796> (BP);
    f586:	42 20       	JUMP.S 0xf60a <_SendResponses+0x89a>;
    f588:	00 00       	NOP;
    f58a:	20 e4 25 00 	R0 = [P4 + 0x94];
    f58e:	00 0c       	CC = R0 == 0x0;
    f590:	3d 1c       	IF CC JUMP 0xf60a <_SendResponses+0x89a> (BP);
    f592:	2f e5 f2 07 	FP = [P5 + 0x1fc8];
    f596:	38 20       	JUMP.S 0xf606 <_SendResponses+0x896>;
    f598:	00 00       	NOP;
    f59a:	b8 e4 04 00 	R0 = B[FP + 0x4] (Z);
    f59e:	38 54       	R0 = R0 & R7;
    f5a0:	00 0c       	CC = R0 == 0x0;
    f5a2:	30 1c       	IF CC JUMP 0xf602 <_SendResponses+0x892> (BP);
    f5a4:	fa ae       	P2 = [FP + 0x2c];
    f5a6:	42 0c       	CC = P2 == 0x0;
    f5a8:	06 1c       	IF CC JUMP 0xf5b4 <_SendResponses+0x844> (BP);
    f5aa:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
    f5ae:	38 54       	R0 = R0 & R7;
    f5b0:	00 0c       	CC = R0 == 0x0;
    f5b2:	28 1c       	IF CC JUMP 0xf602 <_SendResponses+0x892> (BP);
    f5b4:	00 00       	NOP;
    f5b6:	3a af       	P2 = [FP + 0x30];
    f5b8:	42 0c       	CC = P2 == 0x0;
    f5ba:	06 1c       	IF CC JUMP 0xf5c6 <_SendResponses+0x856> (BP);
    f5bc:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
    f5c0:	38 54       	R0 = R0 & R7;
    f5c2:	00 0c       	CC = R0 == 0x0;
    f5c4:	1f 1c       	IF CC JUMP 0xf602 <_SendResponses+0x892> (BP);
    f5c6:	00 00       	NOP;
    f5c8:	7a af       	P2 = [FP + 0x34];
    f5ca:	42 0c       	CC = P2 == 0x0;
    f5cc:	06 1c       	IF CC JUMP 0xf5d8 <_SendResponses+0x868> (BP);
    f5ce:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
    f5d2:	38 54       	R0 = R0 & R7;
    f5d4:	00 0c       	CC = R0 == 0x0;
    f5d6:	16 1c       	IF CC JUMP 0xf602 <_SendResponses+0x892> (BP);
    f5d8:	00 00       	NOP;
    f5da:	39 e4 25 00 	R1 = [FP + 0x94];
    f5de:	20 e4 25 00 	R0 = [P4 + 0x94];
    f5e2:	01 08       	CC = R1 == R0;
    f5e4:	0f 1c       	IF CC JUMP 0xf602 <_SendResponses+0x892> (BP);
    f5e6:	f9 a4       	R1 = W[FP + 0x6] (Z);
    f5e8:	e0 a4       	R0 = W[P4 + 0x6] (Z);
    f5ea:	01 08       	CC = R1 == R0;
    f5ec:	0b 14       	IF !CC JUMP 0xf602 <_SendResponses+0x892> (BP);
    f5ee:	47 30       	R0 = FP;
    f5f0:	4c 30       	R1 = P4;
    f5f2:	ff e3 85 87 	CALL 0x4fc <_SameResourceRecordNameClassInterface>;
    f5f6:	00 0c       	CC = R0 == 0x0;
    f5f8:	05 1c       	IF CC JUMP 0xf602 <_SendResponses+0x892> (BP);
    f5fa:	20 e4 25 00 	R0 = [P4 + 0x94];
    f5fe:	38 e6 25 00 	[FP + 0x94] = R0;
    f602:	00 00       	NOP;
    f604:	7f 91       	FP = [FP];
    f606:	47 0c       	CC = FP == 0x0;
    f608:	c8 17       	IF !CC JUMP 0xf598 <_SendResponses+0x828> (BP);
    f60a:	00 00       	NOP;
    f60c:	64 91       	P4 = [P4];
    f60e:	44 0c       	CC = P4 == 0x0;
    f610:	6e 17       	IF !CC JUMP 0xf4ec <_SendResponses+0x77c> (BP);
    f612:	43 0c       	CC = P3 == 0x0;
    f614:	4f e1 00 00 	FP.H = 0x0;		/* (  0)	FP=0xa0 */
    f618:	00 02       	R0 = CC;
    f61a:	2c e5 f2 07 	P4 = [P5 + 0x1fc8];
    f61e:	0f e1 00 00 	FP.L = 0x0;		/* (  0)	FP=0x0 <_AddRecordToResponseList> */
    f622:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    f624:	b0 e6 2c 00 	B[SP + 0x2c] = R0;
    f628:	4f 20       	JUMP.S 0xf6c6 <_SendResponses+0x956>;
    f62a:	00 00       	NOP;
    f62c:	20 e4 24 00 	R0 = [P4 + 0x90];
    f630:	39 91       	R1 = [FP];
    f632:	08 08       	CC = R0 == R1;
    f634:	38 14       	IF !CC JUMP 0xf6a4 <_SendResponses+0x934> (BP);
    f636:	b1 e4 2c 00 	R1 = B[SP + 0x2c] (Z);
    f63a:	09 02       	CC = R1;
    f63c:	07 1c       	IF CC JUMP 0xf64a <_SendResponses+0x8da> (BP);
    f63e:	e1 a1       	R1 = [P4 + 0x1c];
    f640:	01 0c       	CC = R1 == 0x0;
    f642:	05 14       	IF !CC JUMP 0xf64c <_SendResponses+0x8dc> (BP);
    f644:	19 e4 10 05 	R1 = [P3 + 0x1440];
    f648:	02 20       	JUMP.S 0xf64c <_SendResponses+0x8dc>;
    f64a:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    f64c:	21 e6 26 00 	[P4 + 0x98] = R1;
    f650:	2a e4 37 00 	R2 = [P5 + 0xdc];
    f654:	20 e6 32 00 	[P4 + 0xc8] = R0;
    f658:	a1 e5 86 00 	R1 = B[P4 + 0x86] (X);
    f65c:	48 43       	R0 = R1.B (Z);
    f65e:	27 e6 25 00 	[P4 + 0x94] = R7;
    f662:	22 e6 31 00 	[P4 + 0xc4] = R2;
    f666:	00 0c       	CC = R0 == 0x0;
    f668:	2a 1c       	IF CC JUMP 0xf6bc <_SendResponses+0x94c> (BP);
    f66a:	20 e4 2f 00 	R0 = [P4 + 0xbc];
    f66e:	82 c6 08 87 	R3 = R0 >> 0x1f;
    f672:	c3 50       	R3 = R3 + R0;
    f674:	0b 4d       	R3 >>>= 0x1;
    f676:	c3 52       	R3 = R3 - R0;
    f678:	93 50       	R2 = R3 + R2;
    f67a:	23 e4 30 00 	R3 = [P4 + 0xc0];
    f67e:	9a 52       	R2 = R2 - R3;
    f680:	82 0c       	CC = R2 < 0x0;
    f682:	1d 1c       	IF CC JUMP 0xf6bc <_SendResponses+0x94c> (BP);
    f684:	f9 67       	R1 += -0x1;		/* ( -1) */
    f686:	a1 e6 86 00 	B[P4 + 0x86] = R1;
    f68a:	a1 e4 04 00 	R1 = B[P4 + 0x4] (Z);
    f68e:	09 0c       	CC = R1 == 0x1;
    f690:	04 1c       	IF CC JUMP 0xf698 <_SendResponses+0x928> (BP);
    f692:	08 4f       	R0 <<= 0x1;
    f694:	20 e6 2f 00 	[P4 + 0xbc] = R0;
    f698:	00 00       	NOP;
    f69a:	28 e4 37 00 	R0 = [P5 + 0xdc];
    f69e:	20 e6 30 00 	[P4 + 0xc0] = R0;
    f6a2:	0d 20       	JUMP.S 0xf6bc <_SendResponses+0x94c>;
    f6a4:	00 0c       	CC = R0 == 0x0;
    f6a6:	0b 1c       	IF CC JUMP 0xf6bc <_SendResponses+0x94c> (BP);
    f6a8:	20 e6 26 00 	[P4 + 0x98] = R0;
    f6ac:	27 e6 25 00 	[P4 + 0x94] = R7;
    f6b0:	29 e4 37 00 	R1 = [P5 + 0xdc];
    f6b4:	21 e6 31 00 	[P4 + 0xc4] = R1;
    f6b8:	20 e6 32 00 	[P4 + 0xc8] = R0;
    f6bc:	4c 30       	R1 = P4;
    f6be:	45 30       	R0 = P5;
    f6c0:	ff e3 38 86 	CALL 0x330 <_SetNextAnnounceProbeTime>;
    f6c4:	64 91       	P4 = [P4];
    f6c6:	44 0c       	CC = P4 == 0x0;
    f6c8:	b1 17       	IF !CC JUMP 0xf62a <_SendResponses+0x8ba> (BP);
    f6ca:	24 e1 98 59 	R4 = 0x5998 (X);		/*		R4=0x5998(22936) */
    f6ce:	04 32       	P0 = R4;
    f6d0:	29 e1 44 00 	P1 = 0x44 (X);		/*		P1=0x44( 68) */
    f6d4:	b1 5a       	P2 = P1 + SP;
    f6d6:	22 6c       	P2 += 0x4;		/* (  4) */
    f6d8:	05 60       	R5 = 0x0 (X);		/*		R5=0x0(  0) */
    f6da:	05 5a       	P0 = P5 + P0;
    f6dc:	30 e7 10 00 	[SP + 0x40] = P0;
    f6e0:	f2 be       	[SP + 0x2c] = P2;
    f6e2:	63 24       	JUMP.S 0xffa8 <_SendResponses+0x1238>;
    f6e4:	00 00       	NOP;
    f6e6:	28 e4 47 00 	R0 = [P5 + 0x11c];
    f6ea:	00 0c       	CC = R0 == 0x0;
    f6ec:	11 1c       	IF CC JUMP 0xf70e <_SendResponses+0x99e> (BP);
    f6ee:	18 e4 1b 05 	R0 = [P3 + 0x146c];
    f6f2:	00 0c       	CC = R0 == 0x0;
    f6f4:	0d 1c       	IF CC JUMP 0xf70e <_SendResponses+0x99e> (BP);
    f6f6:	e9 a1       	R1 = [P5 + 0x1c];
    f6f8:	01 08       	CC = R1 == R0;
    f6fa:	0c 14       	IF !CC JUMP 0xf712 <_SendResponses+0x9a2> (BP);
    f6fc:	58 e4 38 0a 	R0 = W[P3 + 0x1470] (Z);
    f700:	69 e4 10 00 	R1 = W[P5 + 0x20] (Z);
    f704:	01 08       	CC = R1 == R0;
    f706:	e8 60       	R0 = 0x1d (X);		/*		R0=0x1d( 29) */
    f708:	be 60       	R6 = 0x17 (X);		/*		R6=0x17( 23) */
    f70a:	30 06       	IF !CC R6 = R0;
    f70c:	04 20       	JUMP.S 0xf714 <_SendResponses+0x9a4>;
    f70e:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
    f710:	02 20       	JUMP.S 0xf714 <_SendResponses+0x9a4>;
    f712:	ee 60       	R6 = 0x1d (X);		/*		R6=0x1d( 29) */
    f714:	2f e1 8c 59 	FP = 0x598c (X);		/*		FP=0x598c(22924) */
    f718:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0x0 <_AddRecordToResponseList> */
    f71c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x1 */
    f720:	fd 5b       	FP = P5 + FP;
    f722:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    f726:	08 e1 00 00 	P0.L = 0x0;		/* (  0)	P0=0x0 <_AddRecordToResponseList> */
    f72a:	12 95       	R2 = W[P2] (Z);
    f72c:	37 e4 10 00 	R7 = [SP + 0x40];
    f730:	47 30       	R0 = FP;
    f732:	01 95       	R1 = W[P0] (Z);
    f734:	ff e3 66 84 	CALL 0x0 <_AddRecordToResponseList>;
    f738:	2a e1 92 59 	P2 = 0x5992 (X);		/*		P2=0x5992(22930) */
    f73c:	95 5a       	P2 = P5 + P2;
    f73e:	2c e5 f2 07 	P4 = [P5 + 0x1fc8];
    f742:	37 bf       	[SP + 0x30] = FP;
    f744:	72 bf       	[SP + 0x34] = P2;
    f746:	36 21       	JUMP.S 0xf9b2 <_SendResponses+0xc42>;
    f748:	00 00       	NOP;
    f74a:	21 e4 26 00 	R1 = [P4 + 0x98];
    f74e:	18 e4 10 05 	R0 = [P3 + 0x1440];
    f752:	01 08       	CC = R1 == R0;
    f754:	2e 14       	IF !CC JUMP 0xf7b0 <_SendResponses+0xa40> (BP);
    f756:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x44 */
    f75a:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    f75e:	e1 a1       	R1 = [P4 + 0x1c];
    f760:	08 91       	R0 = [P1];
    f762:	01 08       	CC = R1 == R0;
    f764:	26 14       	IF !CC JUMP 0xf7b0 <_SendResponses+0xa40> (BP);
    f766:	44 30       	R0 = P4;
    f768:	4b 30       	R1 = P3;
    f76a:	ff e3 4b 84 	CALL 0x0 <_AddRecordToResponseList>;
    f76e:	00 0c       	CC = R0 == 0x0;
    f770:	20 14       	IF !CC JUMP 0xf7b0 <_SendResponses+0xa40> (BP);
    f772:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x5992 */
    f776:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    f77a:	10 91       	R0 = [P2];
    f77c:	00 0c       	CC = R0 == 0x0;
    f77e:	11 1d       	IF CC JUMP 0xf9a0 <_SendResponses+0xc30> (BP);
    f780:	61 a2       	R1 = [P4 + 0x24];
    f782:	44 30       	R0 = P4;
    f784:	55 30       	R2 = P5;
    f786:	ba 65       	R2 += 0x37;		/* ( 55) */
    f788:	21 64       	R1 += 0x4;		/* (  4) */
    f78a:	20 64       	R0 += 0x4;		/* (  4) */
    f78c:	ff e3 3a 84 	CALL 0x0 <_AddRecordToResponseList>;
    f790:	38 32       	FP = R0;
    f792:	21 e4 26 00 	R1 = [P4 + 0x98];
    f796:	45 30       	R0 = P5;
    f798:	ff e3 22 98 	CALL 0x27dc <_InterfaceNameForID>;
    f79c:	f0 b0       	[SP + 0xc] = R0;
    f79e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
    f7a2:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    f7a4:	01 e1 88 4a 	R1.L = 0x4a88;		/* (19080)	R1=0x4a88(19080) */
    f7a8:	57 30       	R2 = FP;
    f7aa:	ff e3 2b 84 	CALL 0x0 <_AddRecordToResponseList>;
    f7ae:	f9 20       	JUMP.S 0xf9a0 <_SendResponses+0xc30>;
    f7b0:	00 00       	NOP;
    f7b2:	21 e4 26 00 	R1 = [P4 + 0x98];
    f7b6:	18 e4 10 05 	R0 = [P3 + 0x1440];
    f7ba:	01 08       	CC = R1 == R0;
    f7bc:	f9 14       	IF !CC JUMP 0xf9ae <_SendResponses+0xc3e> (BP);
    f7be:	21 aa       	R1 = W[P4 + 0x10] (X);
    f7c0:	60 a2       	R0 = [P4 + 0x24];
    f7c2:	71 e6 1e 00 	W[SP + 0x3c] = R1;
    f7c6:	b0 b3       	[SP + 0x38] = R0;
    f7c8:	a1 e5 04 00 	R1 = B[P4 + 0x4] (X);
    f7cc:	48 43       	R0 = R1.B (Z);
    f7ce:	08 0c       	CC = R0 == 0x1;
    f7d0:	13 1c       	IF CC JUMP 0xf7f6 <_SendResponses+0xa86> (BP);
    f7d2:	a8 e4 15 01 	R0 = B[P5 + 0x115] (Z);
    f7d6:	10 0c       	CC = R0 == 0x2;
    f7d8:	11 14       	IF !CC JUMP 0xf7fa <_SendResponses+0xa8a> (BP);
    f7da:	18 e4 66 02 	R0 = [P3 + 0x998];
    f7de:	00 0c       	CC = R0 == 0x0;
    f7e0:	0d 14       	IF !CC JUMP 0xf7fa <_SendResponses+0xa8a> (BP);
    f7e2:	18 e4 6b 02 	R0 = [P3 + 0x9ac];
    f7e6:	00 0c       	CC = R0 == 0x0;
    f7e8:	09 14       	IF !CC JUMP 0xf7fa <_SendResponses+0xa8a> (BP);
    f7ea:	18 e4 70 02 	R0 = [P3 + 0x9c0];
    f7ee:	00 0c       	CC = R0 == 0x0;
    f7f0:	00 02       	R0 = CC;
    f7f2:	00 4b       	BITTGL (R0, 0x0);		/* bit  0 */
    f7f4:	04 20       	JUMP.S 0xf7fc <_SendResponses+0xa8c>;
    f7f6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    f7f8:	02 20       	JUMP.S 0xf7fc <_SendResponses+0xa8c>;
    f7fa:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    f7fc:	38 32       	FP = R0;
    f7fe:	20 e4 33 00 	R0 = [P4 + 0xcc];
    f802:	00 0c       	CC = R0 == 0x0;
    f804:	59 18       	IF CC JUMP 0xf8b6 <_SendResponses+0xb46>;
    f806:	57 30       	R2 = FP;
    f808:	02 48       	CC = !BITTST (R2, 0x0);		/* bit  0 */
    f80a:	56 1c       	IF CC JUMP 0xf8b6 <_SendResponses+0xb46> (BP);
    f80c:	e0 61       	R0 = 0x3c (X);		/*		R0=0x3c( 60) */
    f80e:	88 54       	R2 = R0 & R1;
    f810:	02 0c       	CC = R2 == 0x0;
    f812:	4a 1c       	IF CC JUMP 0xf8a6 <_SendResponses+0xb36> (BP);
    f814:	e2 ae       	P2 = [P4 + 0x2c];
    f816:	42 0c       	CC = P2 == 0x0;
    f818:	06 1c       	IF CC JUMP 0xf824 <_SendResponses+0xab4> (BP);
    f81a:	92 e4 04 00 	R2 = B[P2 + 0x4] (Z);
    f81e:	02 54       	R0 = R2 & R0;
    f820:	00 0c       	CC = R0 == 0x0;
    f822:	42 1c       	IF CC JUMP 0xf8a6 <_SendResponses+0xb36> (BP);
    f824:	00 00       	NOP;
    f826:	22 af       	P2 = [P4 + 0x30];
    f828:	42 0c       	CC = P2 == 0x0;
    f82a:	07 1c       	IF CC JUMP 0xf838 <_SendResponses+0xac8> (BP);
    f82c:	e0 61       	R0 = 0x3c (X);		/*		R0=0x3c( 60) */
    f82e:	92 e4 04 00 	R2 = B[P2 + 0x4] (Z);
    f832:	02 54       	R0 = R2 & R0;
    f834:	00 0c       	CC = R0 == 0x0;
    f836:	38 1c       	IF CC JUMP 0xf8a6 <_SendResponses+0xb36> (BP);
    f838:	00 00       	NOP;
    f83a:	62 af       	P2 = [P4 + 0x34];
    f83c:	42 0c       	CC = P2 == 0x0;
    f83e:	07 1c       	IF CC JUMP 0xf84c <_SendResponses+0xadc> (BP);
    f840:	e0 61       	R0 = 0x3c (X);		/*		R0=0x3c( 60) */
    f842:	92 e4 04 00 	R2 = B[P2 + 0x4] (Z);
    f846:	02 54       	R0 = R2 & R0;
    f848:	00 0c       	CC = R0 == 0x0;
    f84a:	2e 1c       	IF CC JUMP 0xf8a6 <_SendResponses+0xb36> (BP);
    f84c:	49 43       	R1 = R1.B (Z);
    f84e:	43 60       	R3 = 0x8 (X);		/*		R3=0x8(  8) */
    f850:	19 08       	CC = R1 == R3;
    f852:	2a 14       	IF !CC JUMP 0xf8a6 <_SendResponses+0xb36> (BP);
    f854:	a0 e4 87 00 	R0 = B[P4 + 0x87] (Z);
    f858:	00 0c       	CC = R0 == 0x0;
    f85a:	26 1c       	IF CC JUMP 0xf8a6 <_SendResponses+0xb36> (BP);
    f85c:	4c 30       	R1 = P4;
    f85e:	68 e4 c9 2c 	R0 = W[P5 + 0x5992] (Z);
    f862:	21 64       	R1 += 0x4;		/* (  4) */
    f864:	00 0c       	CC = R0 == 0x0;
    f866:	0a 14       	IF !CC JUMP 0xf87a <_SendResponses+0xb0a> (BP);
    f868:	28 e4 65 16 	R0 = [P5 + 0x5994];
    f86c:	00 0c       	CC = R0 == 0x0;
    f86e:	20 e1 ec 22 	R0 = 0x22ec (X);		/*		R0=0x22ec(8940) */
    f872:	28 e1 a0 05 	P0 = 0x5a0 (X);		/*		P0=0x5a0(1440) */
    f876:	40 06       	IF !CC R0 = P0;
    f878:	03 20       	JUMP.S 0xf87e <_SendResponses+0xb0e>;
    f87a:	20 e1 a0 05 	R0 = 0x5a0 (X);		/*		R0=0x5a0(1440) */
    f87e:	30 52       	R0 = R0 - R6;
    f880:	10 32       	P2 = R0;
    f882:	0c 32       	P1 = R4;
    f884:	f1 b0       	[SP + 0xc] = R1;
    f886:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    f888:	31 b1       	[SP + 0x10] = R1;
    f88a:	30 a3       	R0 = [SP + 0x30];
    f88c:	8a 5a       	P2 = P2 + P1;
    f88e:	95 5a       	P2 = P5 + P2;
    f890:	72 bd       	[SP + 0x14] = P2;
    f892:	0f 30       	R1 = R7;
    f894:	72 a3       	R2 = [SP + 0x34];
    f896:	ff e3 b5 83 	CALL 0x0 <_AddRecordToResponseList>;
    f89a:	00 0c       	CC = R0 == 0x0;
    f89c:	89 18       	IF CC JUMP 0xf9ae <_SendResponses+0xc3e>;
    f89e:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    f8a0:	a1 e6 87 00 	B[P4 + 0x87] = R1;
    f8a4:	38 30       	R7 = R0;
    f8a6:	44 30       	R0 = P4;
    f8a8:	20 64       	R0 += 0x4;		/* (  4) */
    f8aa:	21 e4 33 00 	R1 = [P4 + 0xcc];
    f8ae:	62 e5 68 00 	R2 = W[P4 + 0xd0] (X);
    f8b2:	ff e3 a7 83 	CALL 0x0 <_AddRecordToResponseList>;
    f8b6:	90 61       	R0 = 0x32 (X);		/*		R0=0x32( 50) */
    f8b8:	a1 e4 04 00 	R1 = B[P4 + 0x4] (Z);
    f8bc:	01 54       	R0 = R1 & R0;
    f8be:	00 0c       	CC = R0 == 0x0;
    f8c0:	06 1c       	IF CC JUMP 0xf8cc <_SendResponses+0xb5c> (BP);
    f8c2:	20 a9       	R0 = W[P4 + 0x8] (X);
    f8c4:	21 e1 00 80 	R1 = -0x8000 (X);		/*		R1=0xffff8000(-32768) */
    f8c8:	01 56       	R0 = R1 | R0;
    f8ca:	20 b5       	W[P4 + 0x8] = R0;
    f8cc:	54 32       	P2 = P4;
    f8ce:	47 30       	R0 = FP;
    f8d0:	22 6c       	P2 += 0x4;		/* (  4) */
    f8d2:	00 48       	CC = !BITTST (R0, 0x0);		/* bit  0 */
    f8d4:	03 1c       	IF CC JUMP 0xf8da <_SendResponses+0xb6a> (BP);
    f8d6:	e1 a0       	R1 = [P4 + 0xc];
    f8d8:	02 20       	JUMP.S 0xf8dc <_SendResponses+0xb6c>;
    f8da:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    f8dc:	68 e4 c9 2c 	R0 = W[P5 + 0x5992] (Z);
    f8e0:	00 0c       	CC = R0 == 0x0;
    f8e2:	0a 14       	IF !CC JUMP 0xf8f6 <_SendResponses+0xb86> (BP);
    f8e4:	28 e4 65 16 	R0 = [P5 + 0x5994];
    f8e8:	00 0c       	CC = R0 == 0x0;
    f8ea:	20 e1 ec 22 	R0 = 0x22ec (X);		/*		R0=0x22ec(8940) */
    f8ee:	22 e1 a0 05 	R2 = 0x5a0 (X);		/*		R2=0x5a0(1440) */
    f8f2:	02 06       	IF !CC R0 = R2;
    f8f4:	03 20       	JUMP.S 0xf8fa <_SendResponses+0xb8a>;
    f8f6:	20 e1 a0 05 	R0 = 0x5a0 (X);		/*		R0=0x5a0(1440) */
    f8fa:	30 52       	R0 = R0 - R6;
    f8fc:	08 32       	P1 = R0;
    f8fe:	04 32       	P0 = R4;
    f900:	31 b1       	[SP + 0x10] = R1;
    f902:	f2 bc       	[SP + 0xc] = P2;
    f904:	0f 30       	R1 = R7;
    f906:	b2 be       	[SP + 0x28] = P2;
    f908:	41 5a       	P1 = P1 + P0;
    f90a:	4d 5a       	P1 = P5 + P1;
    f90c:	71 bd       	[SP + 0x14] = P1;
    f90e:	30 a3       	R0 = [SP + 0x30];
    f910:	72 a3       	R2 = [SP + 0x34];
    f912:	ff e3 77 83 	CALL 0x0 <_AddRecordToResponseList>;
    f916:	18 30       	R3 = R0;
    f918:	20 a9       	R0 = W[P4 + 0x8] (X);
    f91a:	21 e1 ff 7f 	R1 = 0x7fff (X);		/*		R1=0x7fff(32767) */
    f91e:	01 54       	R0 = R1 & R0;
    f920:	20 b5       	W[P4 + 0x8] = R0;
    f922:	03 0c       	CC = R3 == 0x0;
    f924:	b2 ae       	P2 = [SP + 0x28];
    f926:	05 18       	IF CC JUMP 0xf930 <_SendResponses+0xbc0>;
    f928:	57 30       	R2 = FP;
    f92a:	a2 e6 87 00 	B[P4 + 0x87] = R2;
    f92e:	3b 30       	R7 = R3;
    f930:	20 e4 33 00 	R0 = [P4 + 0xcc];
    f934:	00 0c       	CC = R0 == 0x0;
    f936:	0c 18       	IF CC JUMP 0xf94e <_SendResponses+0xbde>;
    f938:	47 30       	R0 = FP;
    f93a:	00 48       	CC = !BITTST (R0, 0x0);		/* bit  0 */
    f93c:	09 1c       	IF CC JUMP 0xf94e <_SendResponses+0xbde> (BP);
    f93e:	b3 b2       	[SP + 0x28] = R3;
    f940:	42 30       	R0 = P2;
    f942:	b1 a3       	R1 = [SP + 0x38];
    f944:	72 e5 1e 00 	R2 = W[SP + 0x3c] (X);
    f948:	ff e3 5c 83 	CALL 0x0 <_AddRecordToResponseList>;
    f94c:	b3 a2       	R3 = [SP + 0x28];
    f94e:	05 0c       	CC = R5 == 0x0;
    f950:	15 14       	IF !CC JUMP 0xf97a <_SendResponses+0xc0a> (BP);
    f952:	4f 30       	R1 = FP;
    f954:	01 48       	CC = !BITTST (R1, 0x0);		/* bit  0 */
    f956:	12 1c       	IF CC JUMP 0xf97a <_SendResponses+0xc0a> (BP);
    f958:	a1 e4 04 00 	R1 = B[P4 + 0x4] (Z);
    f95c:	80 61       	R0 = 0x30 (X);		/*		R0=0x30( 48) */
    f95e:	01 54       	R0 = R1 & R0;
    f960:	00 0c       	CC = R0 == 0x0;
    f962:	0c 1c       	IF CC JUMP 0xf97a <_SendResponses+0xc0a> (BP);
    f964:	20 e4 23 00 	R0 = [P4 + 0x8c];
    f968:	00 0c       	CC = R0 == 0x0;
    f96a:	08 14       	IF !CC JUMP 0xf97a <_SendResponses+0xc0a> (BP);
    f96c:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0x5a0 */
    f970:	08 e1 00 00 	P0.L = 0x0;		/* (  0)	P0=0x0 <_AddRecordToResponseList> */
    f974:	00 91       	R0 = [P0];
    f976:	20 e6 23 00 	[P4 + 0x8c] = R0;
    f97a:	03 0c       	CC = R3 == 0x0;
    f97c:	19 1c       	IF CC JUMP 0xf9ae <_SendResponses+0xc3e> (BP);
    f97e:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    f982:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    f986:	21 e4 24 00 	R1 = [P4 + 0x90];
    f98a:	08 91       	R0 = [P1];
    f98c:	01 08       	CC = R1 == R0;
    f98e:	0d 14       	IF !CC JUMP 0xf9a8 <_SendResponses+0xc38> (BP);
    f990:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    f994:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    f998:	e1 a1       	R1 = [P4 + 0x1c];
    f99a:	10 91       	R0 = [P2];
    f99c:	01 08       	CC = R1 == R0;
    f99e:	05 14       	IF !CC JUMP 0xf9a8 <_SendResponses+0xc38> (BP);
    f9a0:	43 30       	R0 = P3;
    f9a2:	ff e3 2f 83 	CALL 0x0 <_AddRecordToResponseList>;
    f9a6:	02 20       	JUMP.S 0xf9aa <_SendResponses+0xc3a>;
    f9a8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    f9aa:	20 e6 26 00 	[P4 + 0x98] = R0;
    f9ae:	00 00       	NOP;
    f9b0:	64 91       	P4 = [P4];
    f9b2:	44 0c       	CC = P4 == 0x0;
    f9b4:	ca 16       	IF !CC JUMP 0xf748 <_SendResponses+0x9d8> (BP);
    f9b6:	2a e1 8c 59 	P2 = 0x598c (X);		/*		P2=0x598c(22924) */
    f9ba:	95 5a       	P2 = P5 + P2;
    f9bc:	32 bf       	[SP + 0x30] = P2;
    f9be:	2a e1 96 59 	P2 = 0x5996 (X);		/*		P2=0x5996(22934) */
    f9c2:	95 5a       	P2 = P5 + P2;
    f9c4:	2c e5 f2 07 	P4 = [P5 + 0x1fc8];
    f9c8:	17 30       	R2 = R7;
    f9ca:	72 bf       	[SP + 0x34] = P2;
    f9cc:	ad 20       	JUMP.S 0xfb26 <_SendResponses+0xdb6>;
    f9ce:	00 00       	NOP;
    f9d0:	21 e4 25 00 	R1 = [P4 + 0x94];
    f9d4:	18 e4 10 05 	R0 = [P3 + 0x1440];
    f9d8:	01 08       	CC = R1 == R0;
    f9da:	a4 14       	IF !CC JUMP 0xfb22 <_SendResponses+0xdb2> (BP);
    f9dc:	a0 e4 04 00 	R0 = B[P4 + 0x4] (Z);
    f9e0:	e1 61       	R1 = 0x3c (X);		/*		R1=0x3c( 60) */
    f9e2:	c8 54       	R3 = R0 & R1;
    f9e4:	03 0c       	CC = R3 == 0x0;
    f9e6:	9e 1c       	IF CC JUMP 0xfb22 <_SendResponses+0xdb2> (BP);
    f9e8:	e2 ae       	P2 = [P4 + 0x2c];
    f9ea:	42 0c       	CC = P2 == 0x0;
    f9ec:	06 1c       	IF CC JUMP 0xf9f8 <_SendResponses+0xc88> (BP);
    f9ee:	93 e4 04 00 	R3 = B[P2 + 0x4] (Z);
    f9f2:	4b 54       	R1 = R3 & R1;
    f9f4:	01 0c       	CC = R1 == 0x0;
    f9f6:	96 1c       	IF CC JUMP 0xfb22 <_SendResponses+0xdb2> (BP);
    f9f8:	00 00       	NOP;
    f9fa:	22 af       	P2 = [P4 + 0x30];
    f9fc:	42 0c       	CC = P2 == 0x0;
    f9fe:	07 1c       	IF CC JUMP 0xfa0c <_SendResponses+0xc9c> (BP);
    fa00:	e1 61       	R1 = 0x3c (X);		/*		R1=0x3c( 60) */
    fa02:	93 e4 04 00 	R3 = B[P2 + 0x4] (Z);
    fa06:	4b 54       	R1 = R3 & R1;
    fa08:	01 0c       	CC = R1 == 0x0;
    fa0a:	8c 1c       	IF CC JUMP 0xfb22 <_SendResponses+0xdb2> (BP);
    fa0c:	00 00       	NOP;
    fa0e:	62 af       	P2 = [P4 + 0x34];
    fa10:	42 0c       	CC = P2 == 0x0;
    fa12:	07 1c       	IF CC JUMP 0xfa20 <_SendResponses+0xcb0> (BP);
    fa14:	e1 61       	R1 = 0x3c (X);		/*		R1=0x3c( 60) */
    fa16:	93 e4 04 00 	R3 = B[P2 + 0x4] (Z);
    fa1a:	4b 54       	R1 = R3 & R1;
    fa1c:	01 0c       	CC = R1 == 0x0;
    fa1e:	82 1c       	IF CC JUMP 0xfb22 <_SendResponses+0xdb2> (BP);
    fa20:	00 00       	NOP;
    fa22:	69 e4 c9 2c 	R1 = W[P5 + 0x5992] (Z);
    fa26:	01 0c       	CC = R1 == 0x0;
    fa28:	27 14       	IF !CC JUMP 0xfa76 <_SendResponses+0xd06> (BP);
    fa2a:	91 61       	R1 = 0x32 (X);		/*		R1=0x32( 50) */
    fa2c:	08 54       	R0 = R0 & R1;
    fa2e:	00 0c       	CC = R0 == 0x0;
    fa30:	02 10       	IF !CC JUMP 0xfa34 <_SendResponses+0xcc4>;
    fa32:	5a 23       	JUMP.S 0x100e6 <_SendResponses+0x1376>;
    fa34:	2f e5 f2 07 	FP = [P5 + 0x1fc8];
    fa38:	1c 20       	JUMP.S 0xfa70 <_SendResponses+0xd00>;
    fa3a:	00 00       	NOP;
    fa3c:	39 e4 31 00 	R1 = [FP + 0xc4];
    fa40:	28 e4 37 00 	R0 = [P5 + 0xdc];
    fa44:	01 08       	CC = R1 == R0;
    fa46:	13 14       	IF !CC JUMP 0xfa6c <_SendResponses+0xcfc> (BP);
    fa48:	39 e4 32 00 	R1 = [FP + 0xc8];
    fa4c:	18 e4 10 05 	R0 = [P3 + 0x1440];
    fa50:	01 08       	CC = R1 == R0;
    fa52:	0d 14       	IF !CC JUMP 0xfa6c <_SendResponses+0xcfc> (BP);
    fa54:	f9 a4       	R1 = W[FP + 0x6] (Z);
    fa56:	e0 a4       	R0 = W[P4 + 0x6] (Z);
    fa58:	01 08       	CC = R1 == R0;
    fa5a:	09 14       	IF !CC JUMP 0xfa6c <_SendResponses+0xcfc> (BP);
    fa5c:	72 b2       	[SP + 0x24] = R2;
    fa5e:	47 30       	R0 = FP;
    fa60:	4c 30       	R1 = P4;
    fa62:	ff e3 4d 85 	CALL 0x4fc <_SameResourceRecordNameClassInterface>;
    fa66:	00 0c       	CC = R0 == 0x0;
    fa68:	72 a2       	R2 = [SP + 0x24];
    fa6a:	06 14       	IF !CC JUMP 0xfa76 <_SendResponses+0xd06> (BP);
    fa6c:	00 00       	NOP;
    fa6e:	7f 91       	FP = [FP];
    fa70:	47 0c       	CC = FP == 0x0;
    fa72:	e4 17       	IF !CC JUMP 0xfa3a <_SendResponses+0xcca> (BP);
    fa74:	39 23       	JUMP.S 0x100e6 <_SendResponses+0x1376>;
    fa76:	02 0c       	CC = R2 == 0x0;
    fa78:	55 18       	IF CC JUMP 0xfb22 <_SendResponses+0xdb2>;
    fa7a:	05 0c       	CC = R5 == 0x0;
    fa7c:	12 14       	IF !CC JUMP 0xfaa0 <_SendResponses+0xd30> (BP);
    fa7e:	a1 e4 04 00 	R1 = B[P4 + 0x4] (Z);
    fa82:	80 61       	R0 = 0x30 (X);		/*		R0=0x30( 48) */
    fa84:	01 54       	R0 = R1 & R0;
    fa86:	00 0c       	CC = R0 == 0x0;
    fa88:	0c 1c       	IF CC JUMP 0xfaa0 <_SendResponses+0xd30> (BP);
    fa8a:	20 e4 23 00 	R0 = [P4 + 0x8c];
    fa8e:	00 0c       	CC = R0 == 0x0;
    fa90:	08 14       	IF !CC JUMP 0xfaa0 <_SendResponses+0xd30> (BP);
    fa92:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0x0 <_AddRecordToResponseList> */
    fa96:	08 e1 00 00 	P0.L = 0x0;		/* (  0)	P0=0x0 <_AddRecordToResponseList> */
    fa9a:	00 91       	R0 = [P0];
    fa9c:	20 e6 23 00 	[P4 + 0x8c] = R0;
    faa0:	90 61       	R0 = 0x32 (X);		/*		R0=0x32( 50) */
    faa2:	a1 e4 04 00 	R1 = B[P4 + 0x4] (Z);
    faa6:	01 54       	R0 = R1 & R0;
    faa8:	00 0c       	CC = R0 == 0x0;
    faaa:	06 1c       	IF CC JUMP 0xfab6 <_SendResponses+0xd46> (BP);
    faac:	20 a9       	R0 = W[P4 + 0x8] (X);
    faae:	21 e1 00 80 	R1 = -0x8000 (X);		/*		R1=0xffff8000(-32768) */
    fab2:	01 56       	R0 = R1 | R0;
    fab4:	20 b5       	W[P4 + 0x8] = R0;
    fab6:	5c 30       	R3 = P4;
    fab8:	68 e4 c9 2c 	R0 = W[P5 + 0x5992] (Z);
    fabc:	23 64       	R3 += 0x4;		/* (  4) */
    fabe:	e1 a0       	R1 = [P4 + 0xc];
    fac0:	00 0c       	CC = R0 == 0x0;
    fac2:	0a 14       	IF !CC JUMP 0xfad6 <_SendResponses+0xd66> (BP);
    fac4:	28 e4 65 16 	R0 = [P5 + 0x5994];
    fac8:	00 0c       	CC = R0 == 0x0;
    faca:	20 e1 ec 22 	R0 = 0x22ec (X);		/*		R0=0x22ec(8940) */
    face:	28 e1 a0 05 	P0 = 0x5a0 (X);		/*		P0=0x5a0(1440) */
    fad2:	40 06       	IF !CC R0 = P0;
    fad4:	03 20       	JUMP.S 0xfada <_SendResponses+0xd6a>;
    fad6:	20 e1 a0 05 	R0 = 0x5a0 (X);		/*		R0=0x5a0(1440) */
    fada:	30 52       	R0 = R0 - R6;
    fadc:	10 32       	P2 = R0;
    fade:	0c 32       	P1 = R4;
    fae0:	31 b1       	[SP + 0x10] = R1;
    fae2:	0a 30       	R1 = R2;
    fae4:	72 a3       	R2 = [SP + 0x34];
    fae6:	f3 b0       	[SP + 0xc] = R3;
    fae8:	8a 5a       	P2 = P2 + P1;
    faea:	95 5a       	P2 = P5 + P2;
    faec:	72 bd       	[SP + 0x14] = P2;
    faee:	30 a3       	R0 = [SP + 0x30];
    faf0:	ff e3 88 82 	CALL 0x0 <_AddRecordToResponseList>;
    faf4:	10 30       	R2 = R0;
    faf6:	20 a9       	R0 = W[P4 + 0x8] (X);
    faf8:	21 e1 ff 7f 	R1 = 0x7fff (X);		/*		R1=0x7fff(32767) */
    fafc:	01 54       	R0 = R1 & R0;
    fafe:	20 b5       	W[P4 + 0x8] = R0;
    fb00:	02 0c       	CC = R2 == 0x0;
    fb02:	10 18       	IF CC JUMP 0xfb22 <_SendResponses+0xdb2>;
    fb04:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    fb06:	20 e6 25 00 	[P4 + 0x94] = R0;
    fb0a:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    fb0c:	a0 e6 87 00 	B[P4 + 0x87] = R0;
    fb10:	28 e4 37 00 	R0 = [P5 + 0xdc];
    fb14:	20 e6 31 00 	[P4 + 0xc4] = R0;
    fb18:	18 e4 10 05 	R0 = [P3 + 0x1440];
    fb1c:	20 e6 32 00 	[P4 + 0xc8] = R0;
    fb20:	3a 30       	R7 = R2;
    fb22:	00 00       	NOP;
    fb24:	64 91       	P4 = [P4];
    fb26:	44 0c       	CC = P4 == 0x0;
    fb28:	53 17       	IF !CC JUMP 0xf9ce <_SendResponses+0xc5e> (BP);
    fb2a:	2a e1 8c 59 	P2 = 0x598c (X);		/*		P2=0x598c(22924) */
    fb2e:	95 5a       	P2 = P5 + P2;
    fb30:	32 bf       	[SP + 0x30] = P2;
    fb32:	2a e1 96 59 	P2 = 0x5996 (X);		/*		P2=0x5996(22934) */
    fb36:	95 5a       	P2 = P5 + P2;
    fb38:	2c e5 f2 07 	P4 = [P5 + 0x1fc8];
    fb3c:	72 bf       	[SP + 0x34] = P2;
    fb3e:	f5 20       	JUMP.S 0xfd28 <_SendResponses+0xfb8>;
    fb40:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x5996 */
    fb44:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    fb48:	20 e4 23 00 	R0 = [P4 + 0x8c];
    fb4c:	11 91       	R1 = [P2];
    fb4e:	08 08       	CC = R0 == R1;
    fb50:	05 1c       	IF CC JUMP 0xfb5a <_SendResponses+0xdea> (BP);
    fb52:	19 e4 10 05 	R1 = [P3 + 0x1440];
    fb56:	08 08       	CC = R0 == R1;
    fb58:	e6 14       	IF !CC JUMP 0xfd24 <_SendResponses+0xfb4> (BP);
    fb5a:	78 61       	R0 = 0x2f (X);		/*		R0=0x2f( 47) */
    fb5c:	b0 b5       	W[SP + 0xc] = R0;
    fb5e:	e0 a0       	R0 = [P4 + 0xc];
    fb60:	30 b1       	[SP + 0x10] = R0;
    fb62:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    fb64:	b0 e6 14 00 	B[SP + 0x14] = R0;
    fb68:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    fb6a:	28 e1 b8 03 	P0 = 0x3b8 (X);		/*		P0=0x3b8(952) */
    fb6e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    fb72:	30 5a       	P0 = P0 + SP;
    fb74:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    fb78:	b0 b1       	[SP + 0x18] = R0;
    fb7a:	f0 b1       	[SP + 0x1c] = R0;
    fb7c:	30 b2       	[SP + 0x20] = R0;
    fb7e:	40 30       	R0 = P0;
    fb80:	12 91       	R2 = [P2];
    fb82:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    fb84:	ff e3 3e 82 	CALL 0x0 <_AddRecordToResponseList>;
    fb88:	70 e5 e0 01 	R0 = W[SP + 0x3c0] (X);
    fb8c:	21 e1 00 80 	R1 = -0x8000 (X);		/*		R1=0xffff8000(-32768) */
    fb90:	01 56       	R0 = R1 | R0;
    fb92:	70 e6 e0 01 	W[SP + 0x3c0] = R0;
    fb96:	20 a2       	R0 = [P4 + 0x20];
    fb98:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    fb9c:	48 50       	R1 = R0 + R1;
    fb9e:	ff e3 31 82 	CALL 0x0 <_AddRecordToResponseList>;
    fba2:	c2 42       	R2 = R0.L (Z);
    fba4:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    fba8:	02 0a       	CC = R2 <= R0 (IU);
    fbaa:	0c 14       	IF !CC JUMP 0xfbc2 <_SendResponses+0xe52> (BP);
    fbac:	28 e1 b8 03 	P0 = 0x3b8 (X);		/*		P0=0x3b8(952) */
    fbb0:	30 5a       	P0 = P0 + SP;
    fbb2:	48 30       	R1 = P0;
    fbb4:	20 e1 68 01 	R0 = 0x168 (X);		/*		R0=0x168(360) */
    fbb8:	01 50       	R0 = R1 + R0;
    fbba:	21 a2       	R1 = [P4 + 0x20];
    fbbc:	ff e3 22 82 	CALL 0x0 <_AddRecordToResponseList>;
    fbc0:	04 20       	JUMP.S 0xfbc8 <_SendResponses+0xe58>;
    fbc2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    fbc4:	b0 e6 20 05 	B[SP + 0x520] = R0;
    fbc8:	29 e1 24 06 	P1 = 0x624 (X);		/*		P1=0x624(1572) */
    fbcc:	71 5a       	P1 = P1 + SP;
    fbce:	41 30       	R0 = P1;
    fbd0:	01 61       	R1 = 0x20 (X);		/*		R1=0x20( 32) */
    fbd2:	ff e3 17 82 	CALL 0x0 <_AddRecordToResponseList>;
    fbd6:	2f e5 f2 07 	FP = [P5 + 0x1fc8];
    fbda:	e2 61       	R2 = 0x3c (X);		/*		R2=0x3c( 60) */
    fbdc:	23 e1 80 00 	R3 = 0x80 (X);		/*		R3=0x80(128) */
    fbe0:	52 20       	JUMP.S 0xfc84 <_SendResponses+0xf14>;
    fbe2:	00 00       	NOP;
    fbe4:	b8 e4 04 00 	R0 = B[FP + 0x4] (Z);
    fbe8:	10 54       	R0 = R0 & R2;
    fbea:	00 0c       	CC = R0 == 0x0;
    fbec:	4a 1c       	IF CC JUMP 0xfc80 <_SendResponses+0xf10> (BP);
    fbee:	fa ae       	P2 = [FP + 0x2c];
    fbf0:	42 0c       	CC = P2 == 0x0;
    fbf2:	06 1c       	IF CC JUMP 0xfbfe <_SendResponses+0xe8e> (BP);
    fbf4:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
    fbf8:	10 54       	R0 = R0 & R2;
    fbfa:	00 0c       	CC = R0 == 0x0;
    fbfc:	42 1c       	IF CC JUMP 0xfc80 <_SendResponses+0xf10> (BP);
    fbfe:	00 00       	NOP;
    fc00:	3a af       	P2 = [FP + 0x30];
    fc02:	42 0c       	CC = P2 == 0x0;
    fc04:	06 1c       	IF CC JUMP 0xfc10 <_SendResponses+0xea0> (BP);
    fc06:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
    fc0a:	10 54       	R0 = R0 & R2;
    fc0c:	00 0c       	CC = R0 == 0x0;
    fc0e:	39 1c       	IF CC JUMP 0xfc80 <_SendResponses+0xf10> (BP);
    fc10:	00 00       	NOP;
    fc12:	7a af       	P2 = [FP + 0x34];
    fc14:	42 0c       	CC = P2 == 0x0;
    fc16:	06 1c       	IF CC JUMP 0xfc22 <_SendResponses+0xeb2> (BP);
    fc18:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
    fc1c:	10 54       	R0 = R0 & R2;
    fc1e:	00 0c       	CC = R0 == 0x0;
    fc20:	30 1c       	IF CC JUMP 0xfc80 <_SendResponses+0xf10> (BP);
    fc22:	72 b2       	[SP + 0x24] = R2;
    fc24:	b3 b2       	[SP + 0x28] = R3;
    fc26:	47 30       	R0 = FP;
    fc28:	4c 30       	R1 = P4;
    fc2a:	ff e3 69 84 	CALL 0x4fc <_SameResourceRecordNameClassInterface>;
    fc2e:	00 0c       	CC = R0 == 0x0;
    fc30:	72 a2       	R2 = [SP + 0x24];
    fc32:	b3 a2       	R3 = [SP + 0x28];
    fc34:	26 1c       	IF CC JUMP 0xfc80 <_SendResponses+0xf10> (BP);
    fc36:	f8 a4       	R0 = W[FP + 0x6] (Z);
    fc38:	21 e1 fe 00 	R1 = 0xfe (X);		/*		R1=0xfe(254) */
    fc3c:	08 0a       	CC = R0 <= R1 (IU);
    fc3e:	12 1c       	IF CC JUMP 0xfc62 <_SendResponses+0xef2> (BP);
    fc40:	79 a2       	R1 = [FP + 0x24];
    fc42:	47 30       	R0 = FP;
    fc44:	55 30       	R2 = P5;
    fc46:	21 64       	R1 += 0x4;		/* (  4) */
    fc48:	ba 65       	R2 += 0x37;		/* ( 55) */
    fc4a:	20 64       	R0 += 0x4;		/* (  4) */
    fc4c:	ff e3 da 81 	CALL 0x0 <_AddRecordToResponseList>;
    fc50:	10 30       	R2 = R0;
    fc52:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xfe(254) */
    fc56:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    fc58:	01 e1 b0 4a 	R1.L = 0x4ab0;		/* (19120)	R1=0x4ab0(19120) */
    fc5c:	ff e3 d2 81 	CALL 0x0 <_AddRecordToResponseList>;
    fc60:	3f 20       	JUMP.S 0xfcde <_SendResponses+0xf6e>;
    fc62:	82 c6 e8 83 	R1 = R0 >> 0x3;
    fc66:	09 32       	P1 = R1;
    fc68:	39 60       	R1 = 0x7 (X);		/*		R1=0x7(  7) */
    fc6a:	08 54       	R0 = R0 & R1;
    fc6c:	28 e1 24 06 	P0 = 0x624 (X);		/*		P0=0x624(1572) */
    fc70:	0b 30       	R1 = R3;
    fc72:	01 40       	R1 >>>= R0;
    fc74:	30 5a       	P0 = P0 + SP;
    fc76:	88 5a       	P2 = P0 + P1;
    fc78:	01 30       	R0 = R1;
    fc7a:	51 99       	R1 = B[P2] (X);
    fc7c:	08 56       	R0 = R0 | R1;
    fc7e:	10 9b       	B[P2] = R0;
    fc80:	00 00       	NOP;
    fc82:	7f 91       	FP = [FP];
    fc84:	47 0c       	CC = FP == 0x0;
    fc86:	ae 17       	IF !CC JUMP 0xfbe2 <_SendResponses+0xe72> (BP);
    fc88:	33 22       	JUMP.S 0x100ee <_SendResponses+0x137e>;
    fc8a:	28 e4 65 16 	R0 = [P5 + 0x5994];
    fc8e:	00 0c       	CC = R0 == 0x0;
    fc90:	20 e1 a0 05 	R0 = 0x5a0 (X);		/*		R0=0x5a0(1440) */
    fc94:	22 e1 ec 22 	R2 = 0x22ec (X);		/*		R2=0x22ec(8940) */
    fc98:	02 07       	IF CC R0 = R2;
    fc9a:	03 20       	JUMP.S 0xfca0 <_SendResponses+0xf30>;
    fc9c:	20 e1 a0 05 	R0 = 0x5a0 (X);		/*		R0=0x5a0(1440) */
    fca0:	30 52       	R0 = R0 - R6;
    fca2:	10 32       	P2 = R0;
    fca4:	0c 32       	P1 = R4;
    fca6:	28 e1 b8 03 	P0 = 0x3b8 (X);		/*		P0=0x3b8(952) */
    fcaa:	30 5a       	P0 = P0 + SP;
    fcac:	50 30       	R2 = P0;
    fcae:	22 64       	R2 += 0x4;		/* (  4) */
    fcb0:	8a 5a       	P2 = P2 + P1;
    fcb2:	f2 b0       	[SP + 0xc] = R2;
    fcb4:	31 b1       	[SP + 0x10] = R1;
    fcb6:	95 5a       	P2 = P5 + P2;
    fcb8:	72 bd       	[SP + 0x14] = P2;
    fcba:	30 a3       	R0 = [SP + 0x30];
    fcbc:	0f 30       	R1 = R7;
    fcbe:	72 a3       	R2 = [SP + 0x34];
    fcc0:	ff e3 a0 81 	CALL 0x0 <_AddRecordToResponseList>;
    fcc4:	00 0c       	CC = R0 == 0x0;
    fcc6:	0b 14       	IF !CC JUMP 0xfcdc <_SendResponses+0xf6c> (BP);
    fcc8:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    fccc:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    fcd0:	21 e4 23 00 	R1 = [P4 + 0x8c];
    fcd4:	10 91       	R0 = [P2];
    fcd6:	01 08       	CC = R1 == R0;
    fcd8:	26 14       	IF !CC JUMP 0xfd24 <_SendResponses+0xfb4> (BP);
    fcda:	02 20       	JUMP.S 0xfcde <_SendResponses+0xf6e>;
    fcdc:	38 30       	R7 = R0;
    fcde:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    fce0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    fce4:	20 e6 23 00 	[P4 + 0x8c] = R0;
    fce8:	67 91       	FP = [P4];
    fcea:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    fcee:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    fcf0:	18 20       	JUMP.S 0xfd20 <_SendResponses+0xfb0>;
    fcf2:	72 b2       	[SP + 0x24] = R2;
    fcf4:	b2 be       	[SP + 0x28] = P2;
    fcf6:	47 30       	R0 = FP;
    fcf8:	4c 30       	R1 = P4;
    fcfa:	ff e3 01 84 	CALL 0x4fc <_SameResourceRecordNameClassInterface>;
    fcfe:	00 0c       	CC = R0 == 0x0;
    fd00:	72 a2       	R2 = [SP + 0x24];
    fd02:	b2 ae       	P2 = [SP + 0x28];
    fd04:	0c 1c       	IF CC JUMP 0xfd1c <_SendResponses+0xfac> (BP);
    fd06:	38 e4 23 00 	R0 = [FP + 0x8c];
    fd0a:	11 91       	R1 = [P2];
    fd0c:	08 08       	CC = R0 == R1;
    fd0e:	05 1c       	IF CC JUMP 0xfd18 <_SendResponses+0xfa8> (BP);
    fd10:	19 e4 10 05 	R1 = [P3 + 0x1440];
    fd14:	08 08       	CC = R0 == R1;
    fd16:	03 14       	IF !CC JUMP 0xfd1c <_SendResponses+0xfac> (BP);
    fd18:	3a e6 23 00 	[FP + 0x8c] = R2;
    fd1c:	00 00       	NOP;
    fd1e:	7f 91       	FP = [FP];
    fd20:	47 0c       	CC = FP == 0x0;
    fd22:	e8 17       	IF !CC JUMP 0xfcf2 <_SendResponses+0xf82> (BP);
    fd24:	00 00       	NOP;
    fd26:	64 91       	P4 = [P4];
    fd28:	44 0c       	CC = P4 == 0x0;
    fd2a:	0b 17       	IF !CC JUMP 0xfb40 <_SendResponses+0xdd0> (BP);
    fd2c:	68 e4 c9 2c 	R0 = W[P5 + 0x5992] (Z);
    fd30:	00 0c       	CC = R0 == 0x0;
    fd32:	05 14       	IF !CC JUMP 0xfd3c <_SendResponses+0xfcc> (BP);
    fd34:	68 e4 cb 2c 	R0 = W[P5 + 0x5996] (Z);
    fd38:	00 0c       	CC = R0 == 0x0;
    fd3a:	32 19       	IF CC JUMP 0xff9e <_SendResponses+0x122e>;
    fd3c:	06 0c       	CC = R6 == 0x0;
    fd3e:	ce 1c       	IF CC JUMP 0xfeda <_SendResponses+0x116a> (BP);
    fd40:	48 61       	R0 = 0x29 (X);		/*		R0=0x29( 41) */
    fd42:	b0 b5       	W[SP + 0xc] = R0;
    fd44:	20 e1 94 11 	R0 = 0x1194 (X);		/*		R0=0x1194(4500) */
    fd48:	30 b1       	[SP + 0x10] = R0;
    fd4a:	00 61       	R0 = 0x20 (X);		/*		R0=0x20( 32) */
    fd4c:	b0 e6 14 00 	B[SP + 0x14] = R0;
    fd50:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    fd52:	2a e1 44 00 	P2 = 0x44 (X);		/*		P2=0x44( 68) */
    fd56:	b0 b1       	[SP + 0x18] = R0;
    fd58:	f0 b1       	[SP + 0x1c] = R0;
    fd5a:	30 b2       	[SP + 0x20] = R0;
    fd5c:	b2 5a       	P2 = P2 + SP;
    fd5e:	42 30       	R0 = P2;
    fd60:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x44 */
    fd64:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    fd68:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    fd6a:	12 91       	R2 = [P2];
    fd6c:	ff e3 4a 81 	CALL 0x0 <_AddRecordToResponseList>;
    fd70:	20 e1 a0 05 	R0 = 0x5a0 (X);		/*		R0=0x5a0(1440) */
    fd74:	32 e5 1a 00 	P2 = [SP + 0x68];
    fd78:	70 e6 26 00 	W[SP + 0x4c] = R0;
    fd7c:	00 61       	R0 = 0x20 (X);		/*		R0=0x20( 32) */
    fd7e:	70 e6 2a 00 	W[SP + 0x54] = R0;
    fd82:	70 e6 2b 00 	W[SP + 0x56] = R0;
    fd86:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    fd88:	90 e6 08 00 	B[P2 + 0x8] = R0;
    fd8c:	a8 e5 16 01 	R0 = B[P5 + 0x116] (X);
    fd90:	90 e6 09 00 	B[P2 + 0x9] = R0;
    fd94:	e8 a1       	R0 = [P5 + 0x1c];
    fd96:	d0 b0       	[P2 + 0xc] = R0;
    fd98:	28 a2       	R0 = [P5 + 0x20];
    fd9a:	10 b1       	[P2 + 0x10] = R0;
    fd9c:	18 e4 1b 05 	R0 = [P3 + 0x146c];
    fda0:	50 b1       	[P2 + 0x14] = R0;
    fda2:	18 e4 1c 05 	R0 = [P3 + 0x1470];
    fda6:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x624 */
    fdaa:	90 b1       	[P2 + 0x18] = R0;
    fdac:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
    fdb0:	08 91       	R0 = [P1];
    fdb2:	d0 b1       	[P2 + 0x1c] = R0;
    fdb4:	48 a0       	R0 = [P1 + 0x4];
    fdb6:	10 b2       	[P2 + 0x20] = R0;
    fdb8:	20 60       	R0 = 0x4 (X);		/*		R0=0x4(  4) */
    fdba:	90 b4       	W[P2 + 0x4] = R0;
    fdbc:	e9 a1       	R1 = [P5 + 0x1c];
    fdbe:	18 e4 1b 05 	R0 = [P3 + 0x146c];
    fdc2:	01 08       	CC = R1 == R0;
    fdc4:	0a 14       	IF !CC JUMP 0xfdd8 <_SendResponses+0x1068> (BP);
    fdc6:	69 e4 10 00 	R1 = W[P5 + 0x20] (Z);
    fdca:	58 e4 38 0a 	R0 = W[P3 + 0x1470] (Z);
    fdce:	01 08       	CC = R1 == R0;
    fdd0:	70 60       	R0 = 0xe (X);		/*		R0=0xe( 14) */
    fdd2:	41 60       	R1 = 0x8 (X);		/*		R1=0x8(  8) */
    fdd4:	01 07       	IF CC R0 = R1;
    fdd6:	02 20       	JUMP.S 0xfdda <_SendResponses+0x106a>;
    fdd8:	70 60       	R0 = 0xe (X);		/*		R0=0xe( 14) */
    fdda:	d0 b4       	W[P2 + 0x6] = R0;
    fddc:	2a e1 8c 59 	P2 = 0x598c (X);		/*		P2=0x598c(22924) */
    fde0:	95 5a       	P2 = P5 + P2;
    fde2:	42 30       	R0 = P2;
    fde4:	2a e1 96 59 	P2 = 0x5996 (X);		/*		P2=0x5996(22934) */
    fde8:	95 5a       	P2 = P5 + P2;
    fdea:	6b e4 c9 2c 	R3 = W[P5 + 0x5992] (Z);
    fdee:	52 30       	R2 = P2;
    fdf0:	31 e4 14 00 	R1 = [SP + 0x50];
    fdf4:	03 0c       	CC = R3 == 0x0;
    fdf6:	0a 14       	IF !CC JUMP 0xfe0a <_SendResponses+0x109a> (BP);
    fdf8:	2b e4 65 16 	R3 = [P5 + 0x5994];
    fdfc:	03 0c       	CC = R3 == 0x0;
    fdfe:	23 e1 a0 05 	R3 = 0x5a0 (X);		/*		R3=0x5a0(1440) */
    fe02:	2a e1 ec 22 	P2 = 0x22ec (X);		/*		P2=0x22ec(8940) */
    fe06:	93 06       	IF !CC P2 = R3;
    fe08:	03 20       	JUMP.S 0xfe0e <_SendResponses+0x109e>;
    fe0a:	2a e1 a0 05 	P2 = 0x5a0 (X);		/*		P2=0x5a0(1440) */
    fe0e:	04 32       	P0 = R4;
    fe10:	f3 a2       	R3 = [SP + 0x2c];
    fe12:	31 b1       	[SP + 0x10] = R1;
    fe14:	f3 b0       	[SP + 0xc] = R3;
    fe16:	0f 30       	R1 = R7;
    fe18:	82 5a       	P2 = P2 + P0;
    fe1a:	95 5a       	P2 = P5 + P2;
    fe1c:	72 bd       	[SP + 0x14] = P2;
    fe1e:	ff e3 f1 80 	CALL 0x0 <_AddRecordToResponseList>;
    fe22:	30 30       	R6 = R0;
    fe24:	00 0c       	CC = R0 == 0x0;
    fe26:	19 18       	IF CC JUMP 0xfe58 <_SendResponses+0x10e8>;
    fe28:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x5a0 */
    fe2c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    fe30:	10 91       	R0 = [P2];
    fe32:	00 0c       	CC = R0 == 0x0;
    fe34:	52 1c       	IF CC JUMP 0xfed8 <_SendResponses+0x1168> (BP);
    fe36:	31 e4 1a 00 	R1 = [SP + 0x68];
    fe3a:	55 30       	R2 = P5;
    fe3c:	21 64       	R1 += 0x4;		/* (  4) */
    fe3e:	ba 65       	R2 += 0x37;		/* ( 55) */
    fe40:	f0 a2       	R0 = [SP + 0x2c];
    fe42:	ff e3 df 80 	CALL 0x0 <_AddRecordToResponseList>;
    fe46:	10 30       	R2 = R0;
    fe48:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x8(  8) */
    fe4c:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    fe4e:	01 e1 d0 4a 	R1.L = 0x4ad0;		/* (19152)	R1=0x4ad0(19152) */
    fe52:	ff e3 d7 80 	CALL 0x0 <_AddRecordToResponseList>;
    fe56:	41 20       	JUMP.S 0xfed8 <_SendResponses+0x1168>;
    fe58:	68 e4 ca 2c 	R0 = W[P5 + 0x5994] (Z);
    fe5c:	6e e4 c9 2c 	R6 = W[P5 + 0x5992] (Z);
    fe60:	20 32       	P4 = R0;
    fe62:	69 e4 cb 2c 	R1 = W[P5 + 0x5996] (Z);
    fe66:	30 50       	R0 = R0 + R6;
    fe68:	08 50       	R0 = R0 + R1;
    fe6a:	39 32       	FP = R1;
    fe6c:	08 0c       	CC = R0 == 0x1;
    fe6e:	1d 14       	IF !CC JUMP 0xfea8 <_SendResponses+0x1138> (BP);
    fe70:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    fe74:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    fe78:	10 91       	R0 = [P2];
    fe7a:	00 0c       	CC = R0 == 0x0;
    fe7c:	2f 1c       	IF CC JUMP 0xfeda <_SendResponses+0x116a> (BP);
    fe7e:	6a e4 c8 2c 	R2 = W[P5 + 0x5990] (Z);
    fe82:	32 b3       	[SP + 0x30] = R2;
    fe84:	31 e4 1a 00 	R1 = [SP + 0x68];
    fe88:	55 30       	R2 = P5;
    fe8a:	21 64       	R1 += 0x4;		/* (  4) */
    fe8c:	ba 65       	R2 += 0x37;		/* ( 55) */
    fe8e:	f0 a2       	R0 = [SP + 0x2c];
    fe90:	ff e3 b8 80 	CALL 0x0 <_AddRecordToResponseList>;
    fe94:	b0 b1       	[SP + 0x18] = R0;
    fe96:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4ad0(19152) */
    fe9a:	f6 b0       	[SP + 0xc] = R6;
    fe9c:	34 bd       	[SP + 0x10] = P4;
    fe9e:	77 bd       	[SP + 0x14] = FP;
    fea0:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    fea2:	01 e1 e8 4a 	R1.L = 0x4ae8;		/* (19176)	R1=0x4ae8(19176) */
    fea6:	15 20       	JUMP.S 0xfed0 <_SendResponses+0x1160>;
    fea8:	55 30       	R2 = P5;
    feaa:	6b e4 c8 2c 	R3 = W[P5 + 0x5990] (Z);
    feae:	31 e4 1a 00 	R1 = [SP + 0x68];
    feb2:	21 64       	R1 += 0x4;		/* (  4) */
    feb4:	33 b3       	[SP + 0x30] = R3;
    feb6:	ba 65       	R2 += 0x37;		/* ( 55) */
    feb8:	f0 a2       	R0 = [SP + 0x2c];
    feba:	ff e3 a3 80 	CALL 0x0 <_AddRecordToResponseList>;
    febe:	b0 b1       	[SP + 0x18] = R0;
    fec0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4ae8(19176) */
    fec4:	f6 b0       	[SP + 0xc] = R6;
    fec6:	34 bd       	[SP + 0x10] = P4;
    fec8:	77 bd       	[SP + 0x14] = FP;
    feca:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    fecc:	01 e1 30 4b 	R1.L = 0x4b30;		/* (19248)	R1=0x4b30(19248) */
    fed0:	32 a3       	R2 = [SP + 0x30];
    fed2:	ff e3 97 80 	CALL 0x0 <_AddRecordToResponseList>;
    fed6:	02 20       	JUMP.S 0xfeda <_SendResponses+0x116a>;
    fed8:	3e 30       	R7 = R6;
    feda:	00 00       	NOP;
    fedc:	98 e4 05 00 	R0 = B[P3 + 0x5] (Z);
    fee0:	00 0c       	CC = R0 == 0x0;
    fee2:	1b 1c       	IF CC JUMP 0xff18 <_SendResponses+0x11a8> (BP);
    fee4:	2a e1 8c 59 	P2 = 0x598c (X);		/*		P2=0x598c(22924) */
    fee8:	95 5a       	P2 = P5 + P2;
    feea:	4a 30       	R1 = P2;
    feec:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    fef0:	18 e4 10 05 	R0 = [P3 + 0x1440];
    fef4:	02 e1 00 00 	R2.L = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    fef8:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x598c */
    fefc:	f0 b0       	[SP + 0xc] = R0;
    fefe:	72 b1       	[SP + 0x14] = R2;
    ff00:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    ff04:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    ff06:	12 95       	R2 = W[P2] (Z);
    ff08:	30 b1       	[SP + 0x10] = R0;
    ff0a:	32 b7       	W[SP + 0x18] = R2;
    ff0c:	f0 b1       	[SP + 0x1c] = R0;
    ff0e:	30 b2       	[SP + 0x20] = R0;
    ff10:	45 30       	R0 = P5;
    ff12:	17 30       	R2 = R7;
    ff14:	ff e3 76 80 	CALL 0x0 <_AddRecordToResponseList>;
    ff18:	00 00       	NOP;
    ff1a:	98 e4 06 00 	R0 = B[P3 + 0x6] (Z);
    ff1e:	00 0c       	CC = R0 == 0x0;
    ff20:	1b 1c       	IF CC JUMP 0xff56 <_SendResponses+0x11e6> (BP);
    ff22:	2a e1 8c 59 	P2 = 0x598c (X);		/*		P2=0x598c(22924) */
    ff26:	95 5a       	P2 = P5 + P2;
    ff28:	4a 30       	R1 = P2;
    ff2a:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    ff2e:	18 e4 10 05 	R0 = [P3 + 0x1440];
    ff32:	02 e1 00 00 	R2.L = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
    ff36:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x598c */
    ff3a:	f0 b0       	[SP + 0xc] = R0;
    ff3c:	72 b1       	[SP + 0x14] = R2;
    ff3e:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    ff42:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    ff44:	12 95       	R2 = W[P2] (Z);
    ff46:	30 b1       	[SP + 0x10] = R0;
    ff48:	32 b7       	W[SP + 0x18] = R2;
    ff4a:	f0 b1       	[SP + 0x1c] = R0;
    ff4c:	30 b2       	[SP + 0x20] = R0;
    ff4e:	45 30       	R0 = P5;
    ff50:	17 30       	R2 = R7;
    ff52:	ff e3 57 80 	CALL 0x0 <_AddRecordToResponseList>;
    ff56:	00 00       	NOP;
    ff58:	28 e4 3b 00 	R0 = [P5 + 0xec];
    ff5c:	00 0c       	CC = R0 == 0x0;
    ff5e:	12 14       	IF !CC JUMP 0xff82 <_SendResponses+0x1212> (BP);
    ff60:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    ff64:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
    ff68:	10 91       	R0 = [P2];
    ff6a:	51 60       	R1 = 0xa (X);		/*		R1=0xa( 10) */
    ff6c:	48 64       	R0 += 0x9;		/* (  9) */
    ff6e:	ff e3 49 80 	CALL 0x0 <_AddRecordToResponseList>;
    ff72:	29 e4 37 00 	R1 = [P5 + 0xdc];
    ff76:	08 50       	R0 = R0 + R1;
    ff78:	00 0c       	CC = R0 == 0x0;
    ff7a:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    ff7c:	01 07       	IF CC R0 = R1;
    ff7e:	28 e6 3b 00 	[P5 + 0xec] = R0;
    ff82:	0d 64       	R5 += 0x1;		/* (  1) */
    ff84:	20 e1 e7 03 	R0 = 0x3e7 (X);		/*		R0=0x3e7(999) */
    ff88:	05 09       	CC = R5 <= R0;
    ff8a:	0f 1c       	IF CC JUMP 0xffa8 <_SendResponses+0x1238> (BP);
    ff8c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1(  1) */
    ff90:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    ff92:	01 e1 84 4b 	R1.L = 0x4b84;		/* (19332)	R1=0x4b84(19332) */
    ff96:	15 30       	R2 = R5;
    ff98:	ff e3 34 80 	CALL 0x0 <_AddRecordToResponseList>;
    ff9c:	09 20       	JUMP.S 0xffae <_SendResponses+0x123e>;
    ff9e:	18 91       	R0 = [P3];
    ffa0:	ff e3 30 80 	CALL 0x0 <_AddRecordToResponseList>;
    ffa4:	18 32       	P3 = R0;
    ffa6:	05 60       	R5 = 0x0 (X);		/*		R5=0x0(  0) */
    ffa8:	43 0c       	CC = P3 == 0x0;
    ffaa:	02 18       	IF CC JUMP 0xffae <_SendResponses+0x123e>;
    ffac:	9c 2b       	JUMP.S 0xf6e4 <_SendResponses+0x974>;
    ffae:	2a e5 f5 07 	P2 = [P5 + 0x1fd4];
    ffb2:	42 0c       	CC = P2 == 0x0;
    ffb4:	11 18       	IF CC JUMP 0xffd6 <_SendResponses+0x1266>;
    ffb6:	42 30       	R0 = P2;
    ffb8:	55 30       	R2 = P5;
    ffba:	ba 65       	R2 += 0x37;		/* ( 55) */
    ffbc:	51 a2       	R1 = [P2 + 0x24];
    ffbe:	21 64       	R1 += 0x4;		/* (  4) */
    ffc0:	20 64       	R0 += 0x4;		/* (  4) */
    ffc2:	ff e3 1f 80 	CALL 0x0 <_AddRecordToResponseList>;
    ffc6:	10 30       	R2 = R0;
    ffc8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4b84(19332) */
    ffcc:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    ffce:	01 e1 b4 4b 	R1.L = 0x4bb4;		/* (19380)	R1=0x4bb4(19380) */
    ffd2:	ff e3 17 80 	CALL 0x0 <_AddRecordToResponseList>;
    ffd6:	4d 30       	R1 = P5;
    ffd8:	28 e4 f2 07 	R0 = [P5 + 0x1fc8];
    ffdc:	b9 65       	R1 += 0x37;		/* ( 55) */
    ffde:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0xfc90 */
    ffe2:	4f e1 00 00 	FP.H = 0x0;		/* (  0)	FP=0x598c */
    ffe6:	47 e1 00 00 	R7.H = 0x0;		/* (  0)	R7=0x0 <_AddRecordToResponseList>(  0) */
    ffea:	28 e6 f5 07 	[P5 + 0x1fd4] = R0;
    ffee:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
    fff0:	31 b3       	[SP + 0x30] = R1;
    fff2:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
    fff6:	0f e1 00 00 	FP.L = 0x0;		/* (  0)	FP=0x0 <_AddRecordToResponseList> */
    fffa:	24 e1 a0 00 	R4 = 0xa0 (X);		/*		R4=0xa0(160) */
    fffe:	07 e1 00 00 	R7.L = 0x0;		/* (  0)	R7=0x0 <_AddRecordToResponseList>(  0) */
   10002:	6c 20       	JUMP.S 0x100da <_SendResponses+0x136a>;
   10004:	00 00       	NOP;
   10006:	20 91       	R0 = [P4];
   10008:	25 e4 26 00 	R5 = [P4 + 0x98];
   1000c:	28 e6 f5 07 	[P5 + 0x1fd4] = R0;
   10010:	05 0c       	CC = R5 == 0x0;
   10012:	21 1c       	IF CC JUMP 0x10054 <_SendResponses+0x12e4> (BP);
   10014:	20 e4 20 00 	R0 = [P4 + 0x80];
   10018:	f0 67       	R0 += -0x2;		/* ( -2) */
   1001a:	08 0e       	CC = R0 <= 0x1 (IU);
   1001c:	1a 1c       	IF CC JUMP 0x10050 <_SendResponses+0x12e0> (BP);
   1001e:	44 30       	R0 = P4;
   10020:	20 64       	R0 += 0x4;		/* (  4) */
   10022:	a2 e4 04 00 	R2 = B[P4 + 0x4] (Z);
   10026:	e3 a1       	R3 = [P4 + 0x1c];
   10028:	61 a2       	R1 = [P4 + 0x24];
   1002a:	f2 b2       	[SP + 0x2c] = R2;
   1002c:	21 64       	R1 += 0x4;		/* (  4) */
   1002e:	32 a3       	R2 = [SP + 0x30];
   10030:	b3 b2       	[SP + 0x28] = R3;
   10032:	ff e3 e7 7f 	CALL 0x0 <_AddRecordToResponseList>;
   10036:	b3 a2       	R3 = [SP + 0x28];
   10038:	f3 b0       	[SP + 0xc] = R3;
   1003a:	f3 a2       	R3 = [SP + 0x2c];
   1003c:	70 b1       	[SP + 0x14] = R0;
   1003e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4bb4(19380) */
   10042:	33 b1       	[SP + 0x10] = R3;
   10044:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   10046:	01 e1 e8 4b 	R1.L = 0x4be8;		/* (19432)	R1=0x4be8(19432) */
   1004a:	15 30       	R2 = R5;
   1004c:	ff e3 da 7f 	CALL 0x0 <_AddRecordToResponseList>;
   10050:	26 e6 26 00 	[P4 + 0x98] = R6;
   10054:	00 00       	NOP;
   10056:	20 e4 24 00 	R0 = [P4 + 0x90];
   1005a:	00 0c       	CC = R0 == 0x0;
   1005c:	05 14       	IF !CC JUMP 0x10066 <_SendResponses+0x12f6> (BP);
   1005e:	a0 e4 04 00 	R0 = B[P4 + 0x4] (Z);
   10062:	08 0c       	CC = R0 == 0x1;
   10064:	3b 14       	IF !CC JUMP 0x100da <_SendResponses+0x136a> (BP);
   10066:	00 00       	NOP;
   10068:	20 e4 33 00 	R0 = [P4 + 0xcc];
   1006c:	00 0c       	CC = R0 == 0x0;
   1006e:	05 18       	IF CC JUMP 0x10078 <_SendResponses+0x1308>;
   10070:	45 30       	R0 = P5;
   10072:	4c 30       	R1 = P4;
   10074:	ff e3 4a 85 	CALL 0xb08 <_CompleteRDataUpdate>;
   10078:	a0 e4 04 00 	R0 = B[P4 + 0x4] (Z);
   1007c:	08 0c       	CC = R0 == 0x1;
   1007e:	18 14       	IF !CC JUMP 0x100ae <_SendResponses+0x133e> (BP);
   10080:	a0 e4 86 00 	R0 = B[P4 + 0x86] (Z);
   10084:	00 0c       	CC = R0 == 0x0;
   10086:	14 14       	IF !CC JUMP 0x100ae <_SendResponses+0x133e> (BP);
   10088:	07 32       	P0 = R7;
   1008a:	e1 a1       	R1 = [P4 + 0x1c];
   1008c:	00 91       	R0 = [P0];
   1008e:	01 08       	CC = R1 == R0;
   10090:	0a 14       	IF !CC JUMP 0x100a4 <_SendResponses+0x1334> (BP);
   10092:	a0 e4 46 00 	R0 = B[P4 + 0x46] (Z);
   10096:	00 0c       	CC = R0 == 0x0;
   10098:	06 14       	IF !CC JUMP 0x100a4 <_SendResponses+0x1334> (BP);
   1009a:	20 a2       	R0 = [P4 + 0x20];
   1009c:	ff e3 b2 7f 	CALL 0x0 <_AddRecordToResponseList>;
   100a0:	00 0c       	CC = R0 == 0x0;
   100a2:	1c 1c       	IF CC JUMP 0x100da <_SendResponses+0x136a> (BP);
   100a4:	45 30       	R0 = P5;
   100a6:	4c 30       	R1 = P4;
   100a8:	ff e3 f8 d4 	CALL 0xaa98 <_CompleteDeregistration>;
   100ac:	17 20       	JUMP.S 0x100da <_SendResponses+0x136a>;
   100ae:	04 32       	P0 = R4;
   100b0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   100b2:	a0 e6 8a 00 	B[P4 + 0x8a] = R0;
   100b6:	18 91       	R0 = [P3];
   100b8:	20 e6 27 00 	[P4 + 0x9c] = R0;
   100bc:	26 e6 24 00 	[P4 + 0x90] = R6;
   100c0:	04 5b       	P4 = P4 + P0;
   100c2:	38 91       	R0 = [FP];
   100c4:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   100c8:	20 92       	[P4++] = R0;
   100ca:	0a e1 04 00 	P2.L = 0x4;		/* (  4)	P2=0x4 */
   100ce:	10 90       	R0 = [P2++];
   100d0:	20 92       	[P4++] = R0;
   100d2:	10 90       	R0 = [P2++];
   100d4:	20 92       	[P4++] = R0;
   100d6:	10 91       	R0 = [P2];
   100d8:	20 93       	[P4] = R0;
   100da:	00 00       	NOP;
   100dc:	2c e5 f5 07 	P4 = [P5 + 0x1fd4];
   100e0:	44 0c       	CC = P4 == 0x0;
   100e2:	91 17       	IF !CC JUMP 0x10004 <_SendResponses+0x1294> (BP);
   100e4:	0d 20       	JUMP.S 0x100fe <_SendResponses+0x138e>;
   100e6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   100e8:	20 e6 25 00 	[P4 + 0x94] = R0;
   100ec:	1b 2d       	JUMP.S 0xfb22 <_SendResponses+0xdb2>;
   100ee:	68 e4 c9 2c 	R0 = W[P5 + 0x5992] (Z);
   100f2:	31 e4 f1 00 	R1 = [SP + 0x3c4];
   100f6:	00 0c       	CC = R0 == 0x0;
   100f8:	02 18       	IF CC JUMP 0x100fc <_SendResponses+0x138c>;
   100fa:	d1 2d       	JUMP.S 0xfc9c <_SendResponses+0xf2c>;
   100fc:	c7 2d       	JUMP.S 0xfc8a <_SendResponses+0xf1a>;
   100fe:	29 e1 54 07 	P1 = 0x754 (X);		/*		P1=0x754(1876) */
   10102:	8e 5b       	SP = SP + P1;
   10104:	77 90       	FP = [SP++];
   10106:	27 01       	RETS = [SP++];
   10108:	a3 05       	(R7:4, P5:3) = [SP++];
   1010a:	10 00       	RTS;

0001010c <_SendSleepGoodbyes>:
_SendSleepGoodbyes():
   1010c:	c5 04       	[--SP] = (P5:5);
   1010e:	28 32       	P5 = R0;
   10110:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
   10112:	67 01       	[--SP] = RETS;
   10114:	a6 6f       	SP += -0xc;		/* (-12) */
   10116:	a8 e6 15 01 	B[P5 + 0x115] = R0;
   1011a:	45 30       	R0 = P5;
   1011c:	ff e3 72 7f 	CALL 0x0 <_AddRecordToResponseList>;
   10120:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x754 */
   10124:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
   10128:	2a e5 f2 07 	P2 = [P5 + 0x1fc8];
   1012c:	08 91       	R0 = [P1];
   1012e:	42 60       	R2 = 0x8 (X);		/*		R2=0x8(  8) */
   10130:	0e 20       	JUMP.S 0x1014c <_SendSleepGoodbyes+0x40>;
   10132:	00 00       	NOP;
   10134:	91 e4 04 00 	R1 = B[P2 + 0x4] (Z);
   10138:	11 08       	CC = R1 == R2;
   1013a:	07 14       	IF !CC JUMP 0x10148 <_SendSleepGoodbyes+0x3c> (BP);
   1013c:	91 e4 87 00 	R1 = B[P2 + 0x87] (Z);
   10140:	01 0c       	CC = R1 == 0x0;
   10142:	03 1c       	IF CC JUMP 0x10148 <_SendSleepGoodbyes+0x3c> (BP);
   10144:	10 e6 24 00 	[P2 + 0x90] = R0;
   10148:	00 00       	NOP;
   1014a:	52 91       	P2 = [P2];
   1014c:	42 0c       	CC = P2 == 0x0;
   1014e:	f2 17       	IF !CC JUMP 0x10132 <_SendSleepGoodbyes+0x26> (BP);
   10150:	66 6c       	SP += 0xc;		/* ( 12) */
   10152:	27 01       	RETS = [SP++];
   10154:	45 30       	R0 = P5;
   10156:	85 04       	(P5:5) = [SP++];
   10158:	ff e2 0c f6 	JUMP.L 0xed70 <_SendResponses>;

0001015c <_BeginSleepProcessing>:
_BeginSleepProcessing():
   1015c:	e3 05       	[--SP] = (R7:4, P5:3);
   1015e:	20 32       	P4 = R0;
   10160:	00 e8 0e 00 	LINK 0x38;		/* (56) */
   10164:	7e 30       	R7 = SP;
   10166:	67 65       	R7 += 0x2c;		/* ( 44) */
   10168:	07 30       	R0 = R7;
   1016a:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
   1016c:	62 60       	R2 = 0xc (X);		/*		R2=0xc( 12) */
   1016e:	ff e3 49 7f 	CALL 0x0 <_AddRecordToResponseList>;
   10172:	20 e4 37 00 	R0 = [P4 + 0xdc];
   10176:	20 e6 4a 00 	[P4 + 0x128] = R0;
   1017a:	a0 e4 17 01 	R0 = B[P4 + 0x117] (Z);
   1017e:	00 0c       	CC = R0 == 0x0;
   10180:	0e 10       	IF !CC JUMP 0x1019c <_BeginSleepProcessing+0x40>;
   10182:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x4 */
   10186:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   1018a:	10 91       	R0 = [P2];
   1018c:	00 0c       	CC = R0 == 0x0;
   1018e:	df 1c       	IF CC JUMP 0x1034c <_BeginSleepProcessing+0x1f0> (BP);
   10190:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
   10194:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
   10196:	01 e1 24 4c 	R1.L = 0x4c24;		/* (19492)	R1=0x4c24(19492) */
   1019a:	12 20       	JUMP.S 0x101be <_BeginSleepProcessing+0x62>;
   1019c:	44 30       	R0 = P4;
   1019e:	ff e3 c7 9e 	CALL 0x3f2c <_mDNSCoreHaveAdvertisedMulticastServices>;
   101a2:	00 0c       	CC = R0 == 0x0;
   101a4:	10 10       	IF !CC JUMP 0x101c4 <_BeginSleepProcessing+0x68>;
   101a6:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   101aa:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   101ae:	10 91       	R0 = [P2];
   101b0:	00 0c       	CC = R0 == 0x0;
   101b2:	cd 1c       	IF CC JUMP 0x1034c <_BeginSleepProcessing+0x1f0> (BP);
   101b4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4c24(19492) */
   101b8:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
   101ba:	01 e1 60 4c 	R1.L = 0x4c60;		/* (19552)	R1=0x4c60(19552) */
   101be:	ff e3 21 7f 	CALL 0x0 <_AddRecordToResponseList>;
   101c2:	c5 20       	JUMP.S 0x1034c <_BeginSleepProcessing+0x1f0>;
   101c4:	20 e4 f7 07 	R0 = [P4 + 0x1fdc];
   101c8:	ff e3 1c 7f 	CALL 0x0 <_AddRecordToResponseList>;
   101cc:	28 32       	P5 = R0;
   101ce:	44 30       	R0 = P4;
   101d0:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
   101d4:	b8 65       	R0 += 0x37;		/* ( 55) */
   101d6:	0e 60       	R6 = 0x1 (X);		/*		R6=0x1(  1) */
   101d8:	24 e1 64 02 	R4 = 0x264 (X);		/*		R4=0x264(612) */
   101dc:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
   101e0:	b0 b2       	[SP + 0x28] = R0;
   101e2:	25 e1 74 14 	R5 = 0x1474 (X);		/*		R5=0x1474(5236) */
   101e6:	af 20       	JUMP.S 0x10344 <_BeginSleepProcessing+0x1e8>;
   101e8:	00 00       	NOP;
   101ea:	a8 e4 b6 14 	R0 = B[P5 + 0x14b6] (Z);
   101ee:	00 0c       	CC = R0 == 0x0;
   101f0:	0e 10       	IF !CC JUMP 0x1020c <_BeginSleepProcessing+0xb0>;
   101f2:	18 91       	R0 = [P3];
   101f4:	00 0c       	CC = R0 == 0x0;
   101f6:	a2 1c       	IF CC JUMP 0x1033a <_BeginSleepProcessing+0x1de> (BP);
   101f8:	4d 30       	R1 = P5;
   101fa:	a9 50       	R2 = R1 + R5;
   101fc:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4c60(19552) */
   10200:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
   10202:	01 e1 90 4c 	R1.L = 0x4c90;		/* (19600)	R1=0x4c90(19600) */
   10206:	ff e3 fd 7e 	CALL 0x0 <_AddRecordToResponseList>;
   1020a:	98 20       	JUMP.S 0x1033a <_BeginSleepProcessing+0x1de>;
   1020c:	4d 30       	R1 = P5;
   1020e:	56 30       	R2 = SP;
   10210:	44 30       	R0 = P4;
   10212:	41 64       	R1 += 0x8;		/* (  8) */
   10214:	62 65       	R2 += 0x2c;		/* ( 44) */
   10216:	ff e3 ad 9d 	CALL 0x3d70 <_FindSPSInCache>;
   1021a:	f0 a2       	R0 = [SP + 0x2c];
   1021c:	00 0c       	CC = R0 == 0x0;
   1021e:	1a 14       	IF !CC JUMP 0x10252 <_BeginSleepProcessing+0xf6> (BP);
   10220:	18 91       	R0 = [P3];
   10222:	00 0c       	CC = R0 == 0x0;
   10224:	8b 1c       	IF CC JUMP 0x1033a <_BeginSleepProcessing+0x1de> (BP);
   10226:	28 e1 44 14 	P0 = 0x1444 (X);		/*		P0=0x1444(5188) */
   1022a:	a8 a1       	R0 = [P5 + 0x18];
   1022c:	4d 30       	R1 = P5;
   1022e:	85 5a       	P2 = P5 + P0;
   10230:	a9 50       	R2 = R1 + R5;
   10232:	f2 bc       	[SP + 0xc] = P2;
   10234:	69 a1       	R1 = [P5 + 0x14];
   10236:	48 50       	R1 = R0 + R1;
   10238:	23 e4 37 00 	R3 = [P4 + 0xdc];
   1023c:	59 52       	R1 = R1 - R3;
   1023e:	31 b1       	[SP + 0x10] = R1;
   10240:	70 b1       	[SP + 0x14] = R0;
   10242:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4c90(19600) */
   10246:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
   10248:	01 e1 d0 4c 	R1.L = 0x4cd0;		/* (19664)	R1=0x4cd0(19664) */
   1024c:	ff e3 da 7e 	CALL 0x0 <_AddRecordToResponseList>;
   10250:	75 20       	JUMP.S 0x1033a <_BeginSleepProcessing+0x1de>;
   10252:	05 32       	P0 = R5;
   10254:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   10256:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
   1025a:	28 e6 77 02 	[P5 + 0x9dc] = R0;
   1025e:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
   10262:	20 e4 37 00 	R0 = [P4 + 0xdc];
   10266:	09 91       	R1 = [P1];
   10268:	76 30       	R6 = SP;
   1026a:	01 50       	R0 = R1 + R0;
   1026c:	66 65       	R6 += 0x2c;		/* ( 44) */
   1026e:	05 5a       	P0 = P5 + P0;
   10270:	28 e6 78 02 	[P5 + 0x9e0] = R0;
   10274:	f5 bd       	[SP + 0x1c] = P5;
   10276:	36 b2       	[SP + 0x20] = R6;
   10278:	7d 32       	FP = P5;
   1027a:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
   1027c:	70 be       	[SP + 0x24] = P0;
   1027e:	f1 ad       	P1 = [SP + 0x1c];
   10280:	02 68       	P2 = 0x0 (X);		/*		P2=0x0(  0) */
   10282:	0a e7 66 02 	[P1 + 0x998] = P2;
   10286:	38 e4 9f 00 	R0 = [FP + 0x27c];
   1028a:	80 0c       	CC = R0 < 0x0;
   1028c:	0c 18       	IF CC JUMP 0x102a4 <_BeginSleepProcessing+0x148>;
   1028e:	0f 30       	R1 = R7;
   10290:	e1 40       	R1 *= R4;
   10292:	01 32       	P0 = R1;
   10294:	29 e1 6c 02 	P1 = 0x26c (X);		/*		P1=0x26c(620) */
   10298:	44 30       	R0 = P4;
   1029a:	88 5a       	P2 = P0 + P1;
   1029c:	95 5a       	P2 = P5 + P2;
   1029e:	4a 30       	R1 = P2;
   102a0:	ff e3 32 bf 	CALL 0x8104 <_mDNS_StopQuery>;
   102a4:	30 ae       	P0 = [SP + 0x20];
   102a6:	fa 6b       	P2 = -0x1 (X);		/*		P2=0xffffffff( -1) */
   102a8:	3a e7 9f 00 	[FP + 0x27c] = P2;
   102ac:	42 90       	P2 = [P0++];
   102ae:	30 be       	[SP + 0x20] = P0;
   102b0:	42 0c       	CC = P2 == 0x0;
   102b2:	3a 18       	IF CC JUMP 0x10326 <_BeginSleepProcessing+0x1ca>;
   102b4:	18 91       	R0 = [P3];
   102b6:	00 0c       	CC = R0 == 0x0;
   102b8:	16 1c       	IF CC JUMP 0x102e4 <_BeginSleepProcessing+0x188> (BP);
   102ba:	d3 a0       	R3 = [P2 + 0xc];
   102bc:	51 a2       	R1 = [P2 + 0x24];
   102be:	42 30       	R0 = P2;
   102c0:	21 64       	R1 += 0x4;		/* (  4) */
   102c2:	b2 a2       	R2 = [SP + 0x28];
   102c4:	b3 b1       	[SP + 0x18] = R3;
   102c6:	20 64       	R0 += 0x4;		/* (  4) */
   102c8:	ff e3 9c 7e 	CALL 0x0 <_AddRecordToResponseList>;
   102cc:	b3 a1       	R3 = [SP + 0x18];
   102ce:	70 b1       	[SP + 0x14] = R0;
   102d0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4cd0(19664) */
   102d4:	f7 b0       	[SP + 0xc] = R7;
   102d6:	33 b1       	[SP + 0x10] = R3;
   102d8:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
   102da:	01 e1 30 4d 	R1.L = 0x4d30;		/* (19760)	R1=0x4d30(19760) */
   102de:	72 a2       	R2 = [SP + 0x24];
   102e0:	ff e3 90 7e 	CALL 0x0 <_AddRecordToResponseList>;
   102e4:	07 30       	R0 = R7;
   102e6:	e0 40       	R0 *= R4;
   102e8:	08 32       	P1 = R0;
   102ea:	28 e1 6c 02 	P0 = 0x26c (X);		/*		P0=0x26c(620) */
   102ee:	29 e4 10 05 	R1 = [P5 + 0x1440];
   102f2:	08 61       	R0 = 0x21 (X);		/*		R0=0x21( 33) */
   102f4:	81 5a       	P2 = P1 + P0;
   102f6:	06 32       	P0 = R6;
   102f8:	95 5a       	P2 = P5 + P2;
   102fa:	41 91       	P1 = [P0];
   102fc:	4a a2       	R2 = [P1 + 0x24];
   102fe:	49 e1 01 00 	P1.H = 0x1;		/* (  1)	P1=0x1026c */
   10302:	b0 b5       	W[SP + 0xc] = R0;
   10304:	09 e1 98 15 	P1.L = 0x1598;		/* (5528)	P1=0x11598 <_NetWakeResolve> */
   10308:	42 30       	R0 = P2;
   1030a:	b2 bd       	[SP + 0x18] = P2;
   1030c:	22 64       	R2 += 0x4;		/* (  4) */
   1030e:	31 bd       	[SP + 0x10] = P1;
   10310:	75 bd       	[SP + 0x14] = P5;
   10312:	ff e3 77 7e 	CALL 0x0 <_AddRecordToResponseList>;
   10316:	b2 ad       	P2 = [SP + 0x18];
   10318:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
   1031a:	38 e6 2c 01 	[FP + 0x4b0] = R0;
   1031e:	44 30       	R0 = P4;
   10320:	4a 30       	R1 = P2;
   10322:	ff e3 37 c9 	CALL 0x9590 <_mDNS_StartQuery_internal>;
   10326:	f2 ad       	P2 = [SP + 0x1c];
   10328:	04 32       	P0 = R4;
   1032a:	0f 64       	R7 += 0x1;		/* (  1) */
   1032c:	26 64       	R6 += 0x4;		/* (  4) */
   1032e:	a2 6c       	P2 += 0x14;		/* ( 20) */
   10330:	f2 bd       	[SP + 0x1c] = P2;
   10332:	c7 5b       	FP = FP + P0;
   10334:	1f 0c       	CC = R7 == 0x3;
   10336:	a4 17       	IF !CC JUMP 0x1027e <_BeginSleepProcessing+0x122> (BP);
   10338:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
   1033a:	00 00       	NOP;
   1033c:	28 91       	R0 = [P5];
   1033e:	ff e3 61 7e 	CALL 0x0 <_AddRecordToResponseList>;
   10342:	28 32       	P5 = R0;
   10344:	45 0c       	CC = P5 == 0x0;
   10346:	51 17       	IF !CC JUMP 0x101e8 <_BeginSleepProcessing+0x8c> (BP);
   10348:	06 0c       	CC = R6 == 0x0;
   1034a:	12 1c       	IF CC JUMP 0x1036e <_BeginSleepProcessing+0x212> (BP);
   1034c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0xffff */
   10350:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   10354:	10 91       	R0 = [P2];
   10356:	00 0c       	CC = R0 == 0x0;
   10358:	08 1c       	IF CC JUMP 0x10368 <_BeginSleepProcessing+0x20c> (BP);
   1035a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4d30(19760) */
   1035e:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
   10360:	01 e1 74 4d 	R1.L = 0x4d74;		/* (19828)	R1=0x4d74(19828) */
   10364:	ff e3 4e 7e 	CALL 0x0 <_AddRecordToResponseList>;
   10368:	44 30       	R0 = P4;
   1036a:	ff e3 d1 fe 	CALL 0x1010c <_SendSleepGoodbyes>;
   1036e:	c6 6d       	SP += 0x38;		/* ( 56) */
   10370:	77 90       	FP = [SP++];
   10372:	27 01       	RETS = [SP++];
   10374:	a3 05       	(R7:4, P5:3) = [SP++];
   10376:	10 00       	RTS;

00010378 <_mDNS_Execute>:
_mDNS_Execute():
   10378:	e3 05       	[--SP] = (R7:4, P5:3);
   1037a:	28 32       	P5 = R0;
   1037c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4d74(19828) */
   10380:	01 e1 ac 04 	R1.L = 0x4ac;		/* (1196)	R1=0x4ac(1196) */
   10384:	00 e8 10 00 	LINK 0x40;		/* (64) */
   10388:	ff e3 3c 7e 	CALL 0x0 <_AddRecordToResponseList>;
   1038c:	29 e4 37 00 	R1 = [P5 + 0xdc];
   10390:	28 e4 39 00 	R0 = [P5 + 0xe4];
   10394:	01 52       	R0 = R1 - R0;
   10396:	80 0c       	CC = R0 < 0x0;
   10398:	02 14       	IF !CC JUMP 0x1039c <_mDNS_Execute+0x24> (BP);
   1039a:	0c 27       	JUMP.S 0x111b2 <_mDNS_Execute+0xe3a>;
   1039c:	2c e5 4e 00 	P4 = [P5 + 0x138];
   103a0:	44 0c       	CC = P4 == 0x0;
   103a2:	11 1c       	IF CC JUMP 0x103c4 <_mDNS_Execute+0x4c> (BP);
   103a4:	60 e5 1a 01 	R0 = W[P4 + 0x234] (X);
   103a8:	ff e3 2c 7e 	CALL 0x0 <_AddRecordToResponseList>;
   103ac:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
   103b0:	94 5a       	P2 = P4 + P2;
   103b2:	f0 b0       	[SP + 0xc] = R0;
   103b4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4ac(1196) */
   103b8:	52 30       	R2 = P2;
   103ba:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   103bc:	01 e1 b4 4d 	R1.L = 0x4db4;		/* (19892)	R1=0x4db4(19892) */
   103c0:	ff e3 20 7e 	CALL 0x0 <_AddRecordToResponseList>;
   103c4:	00 00       	NOP;
   103c6:	2a e5 f5 07 	P2 = [P5 + 0x1fd4];
   103ca:	42 0c       	CC = P2 == 0x0;
   103cc:	11 18       	IF CC JUMP 0x103ee <_mDNS_Execute+0x76>;
   103ce:	42 30       	R0 = P2;
   103d0:	55 30       	R2 = P5;
   103d2:	ba 65       	R2 += 0x37;		/* ( 55) */
   103d4:	51 a2       	R1 = [P2 + 0x24];
   103d6:	21 64       	R1 += 0x4;		/* (  4) */
   103d8:	20 64       	R0 += 0x4;		/* (  4) */
   103da:	ff e3 13 7e 	CALL 0x0 <_AddRecordToResponseList>;
   103de:	10 30       	R2 = R0;
   103e0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4db4(19892) */
   103e4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   103e6:	01 e1 f4 4d 	R1.L = 0x4df4;		/* (19956)	R1=0x4df4(19956) */
   103ea:	ff e3 0b 7e 	CALL 0x0 <_AddRecordToResponseList>;
   103ee:	28 e4 fa 07 	R0 = [P5 + 0x1fe8];
   103f2:	00 0c       	CC = R0 == 0x0;
   103f4:	09 1c       	IF CC JUMP 0x10406 <_mDNS_Execute+0x8e> (BP);
   103f6:	29 e4 37 00 	R1 = [P5 + 0xdc];
   103fa:	01 52       	R0 = R1 - R0;
   103fc:	80 0c       	CC = R0 < 0x0;
   103fe:	04 1c       	IF CC JUMP 0x10406 <_mDNS_Execute+0x8e> (BP);
   10400:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   10402:	28 e6 fa 07 	[P5 + 0x1fe8] = R0;
   10406:	00 00       	NOP;
   10408:	28 e4 f9 07 	R0 = [P5 + 0x1fe4];
   1040c:	00 0c       	CC = R0 == 0x0;
   1040e:	12 1c       	IF CC JUMP 0x10432 <_mDNS_Execute+0xba> (BP);
   10410:	28 e4 f8 07 	R0 = [P5 + 0x1fe0];
   10414:	29 e4 37 00 	R1 = [P5 + 0xdc];
   10418:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
   1041c:	41 52       	R1 = R1 - R0;
   1041e:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   10422:	50 60       	R0 = 0xa (X);		/*		R0=0xa( 10) */
   10424:	12 91       	R2 = [P2];
   10426:	d0 40       	R0 *= R2;
   10428:	81 08       	CC = R1 < R0;
   1042a:	04 1c       	IF CC JUMP 0x10432 <_mDNS_Execute+0xba> (BP);
   1042c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   1042e:	28 e6 f9 07 	[P5 + 0x1fe4] = R0;
   10432:	00 00       	NOP;
   10434:	28 e4 52 00 	R0 = [P5 + 0x148];
   10438:	00 0c       	CC = R0 == 0x0;
   1043a:	41 1c       	IF CC JUMP 0x104bc <_mDNS_Execute+0x144> (BP);
   1043c:	28 e4 37 00 	R0 = [P5 + 0xdc];
   10440:	29 e4 3c 00 	R1 = [P5 + 0xf0];
   10444:	48 52       	R1 = R0 - R1;
   10446:	81 0c       	CC = R1 < 0x0;
   10448:	3a 18       	IF CC JUMP 0x104bc <_mDNS_Execute+0x144>;
   1044a:	fd 63       	R5 = -0x1 (X);		/*		R5=0xffffffff( -1) */
   1044c:	45 e1 ff 3f 	R5.H = 0x3fff;		/* (16383)	R5=0x3fffffff(1073741823) */
   10450:	2b e1 28 09 	P3 = 0x928 (X);		/*		P3=0x928(2344) */
   10454:	28 50       	R0 = R0 + R5;
   10456:	dd 5a       	P3 = P5 + P3;
   10458:	28 e6 3c 00 	[P5 + 0xf0] = R0;
   1045c:	7b 32       	FP = P3;
   1045e:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
   10460:	26 e1 57 00 	R6 = 0x57 (X);		/*		R6=0x57( 87) */
   10464:	00 00       	NOP;
   10466:	28 e4 37 00 	R0 = [P5 + 0xdc];
   1046a:	19 90       	R1 = [P3++];
   1046c:	48 52       	R1 = R0 - R1;
   1046e:	81 0c       	CC = R1 < 0x0;
   10470:	19 18       	IF CC JUMP 0x104a2 <_mDNS_Execute+0x12a>;
   10472:	27 32       	P4 = R7;
   10474:	0e 32       	P1 = R6;
   10476:	28 50       	R0 = R0 + R5;
   10478:	38 93       	[FP] = R0;
   1047a:	cc 45       	P4 = (P4 + P1) << 0x2;
   1047c:	25 5b       	P4 = P5 + P4;
   1047e:	0f 20       	JUMP.S 0x1049c <_mDNS_Execute+0x124>;
   10480:	45 30       	R0 = P5;
   10482:	0f 30       	R1 = R7;
   10484:	ff e3 88 ea 	CALL 0xd994 <_CheckCacheExpiration>;
   10488:	62 91       	P2 = [P4];
   1048a:	90 a0       	R0 = [P2 + 0x8];
   1048c:	00 0c       	CC = R0 == 0x0;
   1048e:	03 18       	IF CC JUMP 0x10494 <_mDNS_Execute+0x11c>;
   10490:	62 32       	P4 = P2;
   10492:	05 20       	JUMP.S 0x1049c <_mDNS_Execute+0x124>;
   10494:	45 30       	R0 = P5;
   10496:	4c 30       	R1 = P4;
   10498:	ff e3 da 7f 	CALL 0x44c <_ReleaseCacheGroup>;
   1049c:	22 91       	R2 = [P4];
   1049e:	02 0c       	CC = R2 == 0x0;
   104a0:	f0 17       	IF !CC JUMP 0x10480 <_mDNS_Execute+0x108> (BP);
   104a2:	38 90       	R0 = [FP++];
   104a4:	29 e4 3c 00 	R1 = [P5 + 0xf0];
   104a8:	41 52       	R1 = R1 - R0;
   104aa:	01 0d       	CC = R1 <= 0x0;
   104ac:	03 18       	IF CC JUMP 0x104b2 <_mDNS_Execute+0x13a>;
   104ae:	28 e6 3c 00 	[P5 + 0xf0] = R0;
   104b2:	0f 64       	R7 += 0x1;		/* (  1) */
   104b4:	20 e1 f3 01 	R0 = 0x1f3 (X);		/*		R0=0x1f3(499) */
   104b8:	07 08       	CC = R7 == R0;
   104ba:	d5 17       	IF !CC JUMP 0x10464 <_mDNS_Execute+0xec> (BP);
   104bc:	00 00       	NOP;
   104be:	28 e4 37 00 	R0 = [P5 + 0xdc];
   104c2:	29 e4 41 00 	R1 = [P5 + 0x104];
   104c6:	48 52       	R1 = R0 - R1;
   104c8:	81 0c       	CC = R1 < 0x0;
   104ca:	11 18       	IF CC JUMP 0x104ec <_mDNS_Execute+0x174>;
   104cc:	f9 63       	R1 = -0x1 (X);		/*		R1=0xffffffff( -1) */
   104ce:	41 e1 ff 3f 	R1.H = 0x3fff;		/* (16383)	R1=0x3fffffff(1073741823) */
   104d2:	08 50       	R0 = R0 + R1;
   104d4:	28 e6 41 00 	[P5 + 0x104] = R0;
   104d8:	29 e4 f3 07 	R1 = [P5 + 0x1fcc];
   104dc:	45 30       	R0 = P5;
   104de:	ff e3 31 b7 	CALL 0x7340 <_CheckProxyRecords>;
   104e2:	29 e4 f2 07 	R1 = [P5 + 0x1fc8];
   104e6:	45 30       	R0 = P5;
   104e8:	ff e3 2c b7 	CALL 0x7340 <_CheckProxyRecords>;
   104ec:	29 e4 27 0a 	R1 = [P5 + 0x289c];
   104f0:	01 0c       	CC = R1 == 0x0;
   104f2:	04 18       	IF CC JUMP 0x104fa <_mDNS_Execute+0x182>;
   104f4:	45 30       	R0 = P5;
   104f6:	ff e3 85 7d 	CALL 0x0 <_AddRecordToResponseList>;
   104fa:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   104fc:	29 e4 47 00 	R1 = [P5 + 0x11c];
   10500:	28 e6 27 0a 	[P5 + 0x289c] = R0;
   10504:	01 0c       	CC = R1 == 0x0;
   10506:	08 1c       	IF CC JUMP 0x10516 <_mDNS_Execute+0x19e> (BP);
   10508:	2a e4 37 00 	R2 = [P5 + 0xdc];
   1050c:	4a 52       	R1 = R2 - R1;
   1050e:	81 0c       	CC = R1 < 0x0;
   10510:	03 1c       	IF CC JUMP 0x10516 <_mDNS_Execute+0x19e> (BP);
   10512:	28 e6 47 00 	[P5 + 0x11c] = R0;
   10516:	00 00       	NOP;
   10518:	28 e4 48 00 	R0 = [P5 + 0x120];
   1051c:	00 0c       	CC = R0 == 0x0;
   1051e:	1e 1c       	IF CC JUMP 0x1055a <_mDNS_Execute+0x1e2> (BP);
   10520:	29 e4 37 00 	R1 = [P5 + 0xdc];
   10524:	01 52       	R0 = R1 - R0;
   10526:	80 0c       	CC = R0 < 0x0;
   10528:	19 1c       	IF CC JUMP 0x1055a <_mDNS_Execute+0x1e2> (BP);
   1052a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   1052c:	28 e6 48 00 	[P5 + 0x120] = R0;
   10530:	a8 e4 15 01 	R0 = B[P5 + 0x115] (Z);
   10534:	08 0c       	CC = R0 == 0x1;
   10536:	12 14       	IF !CC JUMP 0x1055a <_mDNS_Execute+0x1e2> (BP);
   10538:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   1053c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   10540:	10 91       	R0 = [P2];
   10542:	00 0c       	CC = R0 == 0x0;
   10544:	08 1c       	IF CC JUMP 0x10554 <_mDNS_Execute+0x1dc> (BP);
   10546:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xffff(65535) */
   1054a:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
   1054c:	01 e1 2c 4e 	R1.L = 0x4e2c;		/* (20012)	R1=0x4e2c(20012) */
   10550:	ff e3 58 7d 	CALL 0x0 <_AddRecordToResponseList>;
   10554:	45 30       	R0 = P5;
   10556:	ff e3 03 fe 	CALL 0x1015c <_BeginSleepProcessing>;
   1055a:	2a e1 f4 10 	P2 = 0x10f4 (X);		/*		P2=0x10f4(4340) */
   1055e:	95 5a       	P2 = P5 + P2;
   10560:	f2 bf       	[SP + 0x3c] = P2;
   10562:	2a e1 84 7c 	P2 = 0x7c84 (X);		/*		P2=0x7c84(31876) */
   10566:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
   10568:	4f e1 00 00 	FP.H = 0x0;		/* (  0)	FP=0x0 <_AddRecordToResponseList> */
   1056c:	44 e1 00 00 	R4.H = 0x0;		/* (  0)	R4=0x264(612) */
   10570:	95 5a       	P2 = P5 + P2;
   10572:	f1 b2       	[SP + 0x2c] = R1;
   10574:	26 e1 34 01 	R6 = 0x134 (X);		/*		R6=0x134(308) */
   10578:	0f e1 00 00 	FP.L = 0x0;		/* (  0)	FP=0x0 <_AddRecordToResponseList> */
   1057c:	04 e1 00 00 	R4.L = 0x0;		/* (  0)	R4=0x0 <_AddRecordToResponseList>(  0) */
   10580:	72 bf       	[SP + 0x34] = P2;
   10582:	65 22       	JUMP.S 0x10a4c <_mDNS_Execute+0x6d4>;
   10584:	00 00       	NOP;
   10586:	a0 a0       	R0 = [P4 + 0x8];
   10588:	00 0c       	CC = R0 == 0x0;
   1058a:	07 1c       	IF CC JUMP 0x10598 <_mDNS_Execute+0x220> (BP);
   1058c:	29 e4 37 00 	R1 = [P5 + 0xdc];
   10590:	01 52       	R0 = R1 - R0;
   10592:	80 0c       	CC = R0 < 0x0;
   10594:	02 14       	IF !CC JUMP 0x10598 <_mDNS_Execute+0x220> (BP);
   10596:	72 22       	JUMP.S 0x10a7a <_mDNS_Execute+0x702>;
   10598:	0e 32       	P1 = R6;
   1059a:	cc 5a       	P3 = P4 + P1;
   1059c:	43 30       	R0 = P3;
   1059e:	ff e3 31 7d 	CALL 0x0 <_AddRecordToResponseList>;
   105a2:	41 e1 d5 20 	R1.H = 0x20d5;		/* (8405)	R1=0x20d50000(550830080) */
   105a6:	38 30       	R7 = R0;
   105a8:	01 e1 39 6b 	R1.L = 0x6b39;		/* (27449)	R1=0x20d56b39(550857529) */
   105ac:	ff e3 2a 7d 	CALL 0x0 <_AddRecordToResponseList>;
   105b0:	21 e1 f3 01 	R1 = 0x1f3 (X);		/*		R1=0x1f3(499) */
   105b4:	30 4e       	R0 >>= 0x6;
   105b6:	c8 40       	R0 *= R1;
   105b8:	62 a0       	R2 = [P4 + 0x4];
   105ba:	c7 53       	R7 = R7 - R0;
   105bc:	f3 bc       	[SP + 0xc] = P3;
   105be:	45 30       	R0 = P5;
   105c0:	0f 30       	R1 = R7;
   105c2:	ff e3 11 8f 	CALL 0x23e4 <_CacheGroupForName>;
   105c6:	28 30       	R5 = R0;
   105c8:	00 0c       	CC = R0 == 0x0;
   105ca:	06 18       	IF CC JUMP 0x105d6 <_mDNS_Execute+0x25e>;
   105cc:	45 30       	R0 = P5;
   105ce:	0f 30       	R1 = R7;
   105d0:	15 30       	R2 = R5;
   105d2:	ff e3 e1 e9 	CALL 0xd994 <_CheckCacheExpiration>;
   105d6:	2a e5 4d 00 	P2 = [P5 + 0x134];
   105da:	62 08       	CC = P2 == P4;
   105dc:	0b 18       	IF CC JUMP 0x105f2 <_mDNS_Execute+0x27a>;
   105de:	38 91       	R0 = [FP];
   105e0:	00 0c       	CC = R0 == 0x0;
   105e2:	02 10       	IF !CC JUMP 0x105e6 <_mDNS_Execute+0x26e>;
   105e4:	2c 22       	JUMP.S 0x10a3c <_mDNS_Execute+0x6c4>;
   105e6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1f3(499) */
   105ea:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
   105ec:	01 e1 68 4e 	R1.L = 0x4e68;		/* (20072)	R1=0x4e68(20072) */
   105f0:	6c 20       	JUMP.S 0x106c8 <_mDNS_Execute+0x350>;
   105f2:	10 91       	R0 = [P2];
   105f4:	28 e6 4d 00 	[P5 + 0x134] = R0;
   105f8:	a8 e4 34 00 	R0 = B[P5 + 0x34] (Z);
   105fc:	00 0c       	CC = R0 == 0x0;
   105fe:	08 1c       	IF CC JUMP 0x1060e <_mDNS_Execute+0x296> (BP);
   10600:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4e68(20072) */
   10604:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   10606:	01 e1 b0 4e 	R1.L = 0x4eb0;		/* (20144)	R1=0x4eb0(20144) */
   1060a:	ff e3 fb 7c 	CALL 0x0 <_AddRecordToResponseList>;
   1060e:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
   10610:	2f e4 4e 00 	R7 = [P5 + 0x138];
   10614:	a8 e6 34 00 	B[P5 + 0x34] = R0;
   10618:	07 0c       	CC = R7 == 0x0;
   1061a:	0f 1c       	IF CC JUMP 0x10638 <_mDNS_Execute+0x2c0> (BP);
   1061c:	0f 32       	P1 = R7;
   1061e:	48 e5 1a 01 	R0 = W[P1 + 0x234] (X);
   10622:	ff e3 ef 7c 	CALL 0x0 <_AddRecordToResponseList>;
   10626:	f0 b0       	[SP + 0xc] = R0;
   10628:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4eb0(20144) */
   1062c:	b7 50       	R2 = R7 + R6;
   1062e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   10630:	01 e1 e0 4e 	R1.L = 0x4ee0;		/* (20192)	R1=0x4ee0(20192) */
   10634:	ff e3 e6 7c 	CALL 0x0 <_AddRecordToResponseList>;
   10638:	2c e7 4e 00 	[P5 + 0x138] = P4;
   1063c:	a0 e4 fe 00 	R0 = B[P4 + 0xfe] (Z);
   10640:	10 0c       	CC = R0 == 0x2;
   10642:	36 14       	IF !CC JUMP 0x106ae <_mDNS_Execute+0x336> (BP);
   10644:	60 e5 1a 01 	R0 = W[P4 + 0x234] (X);
   10648:	ff e3 dc 7c 	CALL 0x0 <_AddRecordToResponseList>;
   1064c:	4c 30       	R1 = P4;
   1064e:	b1 50       	R2 = R1 + R6;
   10650:	f0 b0       	[SP + 0xc] = R0;
   10652:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4ee0(20192) */
   10656:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   10658:	01 e1 24 4f 	R1.L = 0x4f24;		/* (20260)	R1=0x4f24(20260) */
   1065c:	ff e3 d2 7c 	CALL 0x0 <_AddRecordToResponseList>;
   10660:	60 a0       	R0 = [P4 + 0x4];
   10662:	f0 b0       	[SP + 0xc] = R0;
   10664:	60 e5 1a 01 	R0 = W[P4 + 0x234] (X);
   10668:	30 b6       	W[SP + 0x10] = R0;
   1066a:	0c 32       	P1 = R4;
   1066c:	60 e5 1b 01 	R0 = W[P4 + 0x236] (X);
   10670:	b0 b6       	W[SP + 0x14] = R0;
   10672:	e0 61       	R0 = 0x3c (X);		/*		R0=0x3c( 60) */
   10674:	b0 b1       	[SP + 0x18] = R0;
   10676:	08 91       	R0 = [P1];
   10678:	f0 b1       	[SP + 0x1c] = R0;
   1067a:	20 e4 32 00 	R0 = [P4 + 0xc8];
   1067e:	30 b2       	[SP + 0x20] = R0;
   10680:	45 30       	R0 = P5;
   10682:	71 a3       	R1 = [SP + 0x34];
   10684:	53 30       	R2 = P3;
   10686:	ff e3 3b 9e 	CALL 0x42fc <_MakeNegativeCacheRecord>;
   1068a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   1068c:	a0 e6 fe 00 	B[P4 + 0xfe] = R0;
   10690:	45 30       	R0 = P5;
   10692:	71 a3       	R1 = [SP + 0x34];
   10694:	12 60       	R2 = 0x2 (X);		/*		R2=0x2(  2) */
   10696:	ff e3 c1 d2 	CALL 0xac18 <_AnswerCurrentQuestionWithResourceRecord>;
   1069a:	2a e5 4e 00 	P2 = [P5 + 0x138];
   1069e:	62 08       	CC = P2 == P4;
   106a0:	04 14       	IF !CC JUMP 0x106a8 <_mDNS_Execute+0x330> (BP);
   106a2:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
   106a4:	90 e6 fe 00 	B[P2 + 0xfe] = R0;
   106a8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   106aa:	a8 e6 88 7c 	B[P5 + 0x7c88] = R0;
   106ae:	00 00       	NOP;
   106b0:	2a e5 4e 00 	P2 = [P5 + 0x138];
   106b4:	62 08       	CC = P2 == P4;
   106b6:	0c 18       	IF CC JUMP 0x106ce <_mDNS_Execute+0x356>;
   106b8:	38 91       	R0 = [FP];
   106ba:	00 0c       	CC = R0 == 0x0;
   106bc:	c0 1d       	IF CC JUMP 0x10a3c <_mDNS_Execute+0x6c4> (BP);
   106be:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4f24(20260) */
   106c2:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
   106c4:	01 e1 50 4f 	R1.L = 0x4f50;		/* (20304)	R1=0x4f50(20304) */
   106c8:	ff e3 9c 7c 	CALL 0x0 <_AddRecordToResponseList>;
   106cc:	b8 21       	JUMP.S 0x10a3c <_mDNS_Execute+0x6c4>;
   106ce:	2a e5 f5 07 	P2 = [P5 + 0x1fd4];
   106d2:	42 0c       	CC = P2 == 0x0;
   106d4:	11 18       	IF CC JUMP 0x106f6 <_mDNS_Execute+0x37e>;
   106d6:	42 30       	R0 = P2;
   106d8:	55 30       	R2 = P5;
   106da:	ba 65       	R2 += 0x37;		/* ( 55) */
   106dc:	51 a2       	R1 = [P2 + 0x24];
   106de:	21 64       	R1 += 0x4;		/* (  4) */
   106e0:	20 64       	R0 += 0x4;		/* (  4) */
   106e2:	ff e3 8f 7c 	CALL 0x0 <_AddRecordToResponseList>;
   106e6:	10 30       	R2 = R0;
   106e8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4f50(20304) */
   106ec:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   106ee:	01 e1 9c 4f 	R1.L = 0x4f9c;		/* (20380)	R1=0x4f9c(20380) */
   106f2:	ff e3 87 7c 	CALL 0x0 <_AddRecordToResponseList>;
   106f6:	43 30       	R0 = P3;
   106f8:	ff e3 84 7c 	CALL 0x0 <_AddRecordToResponseList>;
   106fc:	41 e1 d5 20 	R1.H = 0x20d5;		/* (8405)	R1=0x20d54f9c(550850460) */
   10700:	38 30       	R7 = R0;
   10702:	01 e1 39 6b 	R1.L = 0x6b39;		/* (27449)	R1=0x20d56b39(550857529) */
   10706:	ff e3 7d 7c 	CALL 0x0 <_AddRecordToResponseList>;
   1070a:	82 c6 d0 83 	R1 = R0 >> 0x6;
   1070e:	62 a0       	R2 = [P4 + 0x4];
   10710:	20 e1 f3 01 	R0 = 0x1f3 (X);		/*		R0=0x1f3(499) */
   10714:	c1 40       	R1 *= R0;
   10716:	f3 bc       	[SP + 0xc] = P3;
   10718:	4f 52       	R1 = R7 - R1;
   1071a:	f0 a3       	R0 = [SP + 0x3c];
   1071c:	ff e3 88 8c 	CALL 0x202c <_AuthGroupForName>;
   10720:	38 30       	R7 = R0;
   10722:	00 0c       	CC = R0 == 0x0;
   10724:	2e 1c       	IF CC JUMP 0x10780 <_mDNS_Execute+0x408> (BP);
   10726:	08 32       	P1 = R0;
   10728:	88 a0       	R0 = [P1 + 0x8];
   1072a:	28 e6 f5 07 	[P5 + 0x1fd4] = R0;
   1072e:	20 20       	JUMP.S 0x1076e <_mDNS_Execute+0x3f6>;
   10730:	00 00       	NOP;
   10732:	18 91       	R0 = [P3];
   10734:	28 e6 f5 07 	[P5 + 0x1fd4] = R0;
   10738:	18 e4 20 00 	R0 = [P3 + 0x80];
   1073c:	10 0c       	CC = R0 == 0x2;
   1073e:	09 18       	IF CC JUMP 0x10750 <_mDNS_Execute+0x3d8>;
   10740:	18 0c       	CC = R0 == 0x3;
   10742:	16 14       	IF !CC JUMP 0x1076e <_mDNS_Execute+0x3f6> (BP);
   10744:	14 32       	P2 = R4;
   10746:	21 e4 46 00 	R1 = [P4 + 0x118];
   1074a:	10 91       	R0 = [P2];
   1074c:	01 08       	CC = R1 == R0;
   1074e:	10 14       	IF !CC JUMP 0x1076e <_mDNS_Execute+0x3f6> (BP);
   10750:	43 30       	R0 = P3;
   10752:	4c 30       	R1 = P4;
   10754:	ff e3 56 7c 	CALL 0x0 <_AddRecordToResponseList>;
   10758:	00 0c       	CC = R0 == 0x0;
   1075a:	0a 1c       	IF CC JUMP 0x1076e <_mDNS_Execute+0x3f6> (BP);
   1075c:	45 30       	R0 = P5;
   1075e:	4b 30       	R1 = P3;
   10760:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
   10762:	ff e3 65 cf 	CALL 0xa62c <_AnswerLocalQuestionWithLocalAuthRecord>;
   10766:	2a e5 4e 00 	P2 = [P5 + 0x138];
   1076a:	62 08       	CC = P2 == P4;
   1076c:	0a 14       	IF !CC JUMP 0x10780 <_mDNS_Execute+0x408> (BP);
   1076e:	00 00       	NOP;
   10770:	2b e5 f5 07 	P3 = [P5 + 0x1fd4];
   10774:	43 0c       	CC = P3 == 0x0;
   10776:	05 1c       	IF CC JUMP 0x10780 <_mDNS_Execute+0x408> (BP);
   10778:	0f 32       	P1 = R7;
   1077a:	4a ad       	P2 = [P1 + 0x14];
   1077c:	53 08       	CC = P3 == P2;
   1077e:	d9 17       	IF !CC JUMP 0x10730 <_mDNS_Execute+0x3b8> (BP);
   10780:	00 00       	NOP;
   10782:	2b e5 4e 00 	P3 = [P5 + 0x138];
   10786:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   10788:	28 e6 f5 07 	[P5 + 0x1fd4] = R0;
   1078c:	63 08       	CC = P3 == P4;
   1078e:	0a 18       	IF CC JUMP 0x107a2 <_mDNS_Execute+0x42a>;
   10790:	38 91       	R0 = [FP];
   10792:	00 0c       	CC = R0 == 0x0;
   10794:	54 1d       	IF CC JUMP 0x10a3c <_mDNS_Execute+0x6c4> (BP);
   10796:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x6b39(27449) */
   1079a:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
   1079c:	01 e1 d4 4f 	R1.L = 0x4fd4;		/* (20436)	R1=0x4fd4(20436) */
   107a0:	94 2f       	JUMP.S 0x106c8 <_mDNS_Execute+0x350>;
   107a2:	98 e4 b8 00 	R0 = B[P3 + 0xb8] (Z);
   107a6:	00 0c       	CC = R0 == 0x0;
   107a8:	15 1c       	IF CC JUMP 0x107d2 <_mDNS_Execute+0x45a> (BP);
   107aa:	38 91       	R0 = [FP];
   107ac:	00 0c       	CC = R0 == 0x0;
   107ae:	47 1d       	IF CC JUMP 0x10a3c <_mDNS_Execute+0x6c4> (BP);
   107b0:	58 e5 1a 01 	R0 = W[P3 + 0x234] (X);
   107b4:	ff e3 26 7c 	CALL 0x0 <_AddRecordToResponseList>;
   107b8:	0e 32       	P1 = R6;
   107ba:	30 b1       	[SP + 0x10] = R0;
   107bc:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4fd4(20436) */
   107c0:	01 e1 24 50 	R1.L = 0x5024;		/* (20516)	R1=0x5024(20516) */
   107c4:	8b 5a       	P2 = P3 + P1;
   107c6:	f2 bc       	[SP + 0xc] = P2;
   107c8:	98 e4 b8 00 	R0 = B[P3 + 0xb8] (Z);
   107cc:	70 b1       	[SP + 0x14] = R0;
   107ce:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
   107d0:	35 20       	JUMP.S 0x1083a <_mDNS_Execute+0x4c2>;
   107d2:	07 0c       	CC = R7 == 0x0;
   107d4:	3b 1c       	IF CC JUMP 0x1084a <_mDNS_Execute+0x4d2> (BP);
   107d6:	17 32       	P2 = R7;
   107d8:	92 61       	R2 = 0x32 (X);		/*		R2=0x32( 50) */
   107da:	57 a1       	R7 = [P2 + 0x14];
   107dc:	35 20       	JUMP.S 0x10846 <_mDNS_Execute+0x4ce>;
   107de:	0f 32       	P1 = R7;
   107e0:	08 e4 20 00 	R0 = [P1 + 0x80];
   107e4:	10 0c       	CC = R0 == 0x2;
   107e6:	2e 14       	IF !CC JUMP 0x10842 <_mDNS_Execute+0x4ca> (BP);
   107e8:	88 e4 04 00 	R0 = B[P1 + 0x4] (Z);
   107ec:	10 54       	R0 = R0 & R2;
   107ee:	00 0c       	CC = R0 == 0x0;
   107f0:	29 1c       	IF CC JUMP 0x10842 <_mDNS_Execute+0x4ca> (BP);
   107f2:	c8 a4       	R0 = W[P1 + 0x6] (Z);
   107f4:	08 0c       	CC = R0 == 0x1;
   107f6:	07 18       	IF CC JUMP 0x10804 <_mDNS_Execute+0x48c>;
   107f8:	e1 60       	R1 = 0x1c (X);		/*		R1=0x1c( 28) */
   107fa:	08 08       	CC = R0 == R1;
   107fc:	04 18       	IF CC JUMP 0x10804 <_mDNS_Execute+0x48c>;
   107fe:	29 60       	R1 = 0x5 (X);		/*		R1=0x5(  5) */
   10800:	08 08       	CC = R0 == R1;
   10802:	20 14       	IF !CC JUMP 0x10842 <_mDNS_Execute+0x4ca> (BP);
   10804:	b2 b2       	[SP + 0x28] = R2;
   10806:	07 30       	R0 = R7;
   10808:	4b 30       	R1 = P3;
   1080a:	ff e3 fb 7b 	CALL 0x0 <_AddRecordToResponseList>;
   1080e:	00 0c       	CC = R0 == 0x0;
   10810:	b2 a2       	R2 = [SP + 0x28];
   10812:	18 1c       	IF CC JUMP 0x10842 <_mDNS_Execute+0x4ca> (BP);
   10814:	38 91       	R0 = [FP];
   10816:	00 0c       	CC = R0 == 0x0;
   10818:	12 1d       	IF CC JUMP 0x10a3c <_mDNS_Execute+0x6c4> (BP);
   1081a:	58 e5 1a 01 	R0 = W[P3 + 0x234] (X);
   1081e:	ff e3 f1 7b 	CALL 0x0 <_AddRecordToResponseList>;
   10822:	0e 32       	P1 = R6;
   10824:	30 b1       	[SP + 0x10] = R0;
   10826:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5(  5) */
   1082a:	01 e1 84 50 	R1.L = 0x5084;		/* (20612)	R1=0x5084(20612) */
   1082e:	8b 5a       	P2 = P3 + P1;
   10830:	f2 bc       	[SP + 0xc] = P2;
   10832:	98 e4 b8 00 	R0 = B[P3 + 0xb8] (Z);
   10836:	70 b1       	[SP + 0x14] = R0;
   10838:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
   1083a:	53 30       	R2 = P3;
   1083c:	ff e3 e2 7b 	CALL 0x0 <_AddRecordToResponseList>;
   10840:	fe 20       	JUMP.S 0x10a3c <_mDNS_Execute+0x6c4>;
   10842:	17 32       	P2 = R7;
   10844:	17 91       	R7 = [P2];
   10846:	07 0c       	CC = R7 == 0x0;
   10848:	cb 17       	IF !CC JUMP 0x107de <_mDNS_Execute+0x466> (BP);
   1084a:	00 00       	NOP;
   1084c:	20 e4 92 00 	R0 = [P4 + 0x248];
   10850:	00 0c       	CC = R0 == 0x0;
   10852:	11 1c       	IF CC JUMP 0x10874 <_mDNS_Execute+0x4fc> (BP);
   10854:	20 e4 2d 00 	R0 = [P4 + 0xb4];
   10858:	00 0c       	CC = R0 == 0x0;
   1085a:	0d 1c       	IF CC JUMP 0x10874 <_mDNS_Execute+0x4fc> (BP);
   1085c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   1085e:	20 e6 2d 00 	[P4 + 0xb4] = R0;
   10862:	45 30       	R0 = P5;
   10864:	ff e3 aa d4 	CALL 0xb1b8 <_GenerateNegativeResponse>;
   10868:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
   1086a:	20 e6 2d 00 	[P4 + 0xb4] = R0;
   1086e:	05 60       	R5 = 0x0 (X);		/*		R5=0x0(  0) */
   10870:	0f 60       	R7 = 0x1 (X);		/*		R7=0x1(  1) */
   10872:	80 20       	JUMP.S 0x10972 <_mDNS_Execute+0x5fa>;
   10874:	05 0c       	CC = R5 == 0x0;
   10876:	04 1c       	IF CC JUMP 0x1087e <_mDNS_Execute+0x506> (BP);
   10878:	0d 32       	P1 = R5;
   1087a:	8b ac       	P3 = [P1 + 0x8];
   1087c:	02 20       	JUMP.S 0x10880 <_mDNS_Execute+0x508>;
   1087e:	03 68       	P3 = 0x0 (X);		/*		P3=0x0(  0) */
   10880:	55 32       	P2 = P5;
   10882:	ba 6d       	P2 += 0x37;		/* ( 55) */
   10884:	05 60       	R5 = 0x0 (X);		/*		R5=0x0(  0) */
   10886:	0f 60       	R7 = 0x1 (X);		/*		R7=0x1(  1) */
   10888:	b2 bf       	[SP + 0x38] = P2;
   1088a:	70 20       	JUMP.S 0x1096a <_mDNS_Execute+0x5f2>;
   1088c:	43 30       	R0 = P3;
   1088e:	20 64       	R0 += 0x4;		/* (  4) */
   10890:	30 b3       	[SP + 0x30] = R0;
   10892:	4c 30       	R1 = P4;
   10894:	ff e3 b6 7b 	CALL 0x0 <_AddRecordToResponseList>;
   10898:	00 0c       	CC = R0 == 0x0;
   1089a:	55 1c       	IF CC JUMP 0x10944 <_mDNS_Execute+0x5cc> (BP);
   1089c:	29 e4 37 00 	R1 = [P5 + 0xdc];
   108a0:	18 a3       	R0 = [P3 + 0x30];
   108a2:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x1598 */
   108a6:	01 52       	R0 = R1 - R0;
   108a8:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
   108ac:	09 91       	R1 = [P1];
   108ae:	ff e3 a9 7b 	CALL 0x0 <_AddRecordToResponseList>;
   108b2:	da ac       	P2 = [P3 + 0xc];
   108b4:	18 30       	R3 = R0;
   108b6:	42 30       	R0 = P2;
   108b8:	18 0a       	CC = R0 <= R3 (IU);
   108ba:	1b 14       	IF !CC JUMP 0x108f0 <_mDNS_Execute+0x578> (BP);
   108bc:	59 a2       	R1 = [P3 + 0x24];
   108be:	b2 a3       	R2 = [SP + 0x38];
   108c0:	73 b2       	[SP + 0x24] = R3;
   108c2:	b2 be       	[SP + 0x28] = P2;
   108c4:	21 64       	R1 += 0x4;		/* (  4) */
   108c6:	30 a3       	R0 = [SP + 0x30];
   108c8:	ff e3 9c 7b 	CALL 0x0 <_AddRecordToResponseList>;
   108cc:	30 b1       	[SP + 0x10] = R0;
   108ce:	28 e4 37 00 	R0 = [P5 + 0xdc];
   108d2:	73 a2       	R3 = [SP + 0x24];
   108d4:	b2 ae       	P2 = [SP + 0x28];
   108d6:	f3 b0       	[SP + 0xc] = R3;
   108d8:	70 b1       	[SP + 0x14] = R0;
   108da:	18 a3       	R0 = [P3 + 0x30];
   108dc:	b0 b1       	[SP + 0x18] = R0;
   108de:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5084(20612) */
   108e2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   108e4:	01 e1 f0 50 	R1.L = 0x50f0;		/* (20720)	R1=0x50f0(20720) */
   108e8:	52 30       	R2 = P2;
   108ea:	ff e3 8b 7b 	CALL 0x0 <_AddRecordToResponseList>;
   108ee:	3c 20       	JUMP.S 0x10966 <_mDNS_Execute+0x5ee>;
   108f0:	00 00       	NOP;
   108f2:	98 e4 04 00 	R0 = B[P3 + 0x4] (Z);
   108f6:	20 48       	CC = !BITTST (R0, 0x4);		/* bit  4 */
   108f8:	07 14       	IF !CC JUMP 0x10906 <_mDNS_Execute+0x58e> (BP);
   108fa:	20 e4 8f 00 	R0 = [P4 + 0x23c];
   108fe:	00 0c       	CC = R0 == 0x0;
   10900:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
   10902:	39 06       	IF !CC R7 = R1;
   10904:	02 20       	JUMP.S 0x10908 <_mDNS_Execute+0x590>;
   10906:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
   10908:	20 a2       	R0 = [P4 + 0x20];
   1090a:	08 64       	R0 += 0x1;		/* (  1) */
   1090c:	20 b2       	[P4 + 0x20] = R0;
   1090e:	18 a6       	R0 = W[P3 + 0x10] (Z);
   10910:	21 e1 00 04 	R1 = 0x400 (X);		/*		R1=0x400(1024) */
   10914:	08 0a       	CC = R0 <= R1 (IU);
   10916:	04 1c       	IF CC JUMP 0x1091e <_mDNS_Execute+0x5a6> (BP);
   10918:	60 a2       	R0 = [P4 + 0x24];
   1091a:	08 64       	R0 += 0x1;		/* (  1) */
   1091c:	60 b2       	[P4 + 0x24] = R0;
   1091e:	00 00       	NOP;
   10920:	98 e4 04 00 	R0 = B[P3 + 0x4] (Z);
   10924:	20 48       	CC = !BITTST (R0, 0x4);		/* bit  4 */
   10926:	04 1c       	IF CC JUMP 0x1092e <_mDNS_Execute+0x5b6> (BP);
   10928:	a0 a2       	R0 = [P4 + 0x28];
   1092a:	08 64       	R0 += 0x1;		/* (  1) */
   1092c:	a0 b2       	[P4 + 0x28] = R0;
   1092e:	45 30       	R0 = P5;
   10930:	4b 30       	R1 = P3;
   10932:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
   10934:	ff e3 72 d1 	CALL 0xac18 <_AnswerCurrentQuestionWithResourceRecord>;
   10938:	2a e5 4e 00 	P2 = [P5 + 0x138];
   1093c:	62 08       	CC = P2 == P4;
   1093e:	19 10       	IF !CC JUMP 0x10970 <_mDNS_Execute+0x5f8>;
   10940:	0d 60       	R5 = 0x1 (X);		/*		R5=0x1(  1) */
   10942:	12 20       	JUMP.S 0x10966 <_mDNS_Execute+0x5ee>;
   10944:	00 00       	NOP;
   10946:	d8 a4       	R0 = W[P3 + 0x6] (Z);
   10948:	08 0c       	CC = R0 == 0x1;
   1094a:	04 18       	IF CC JUMP 0x10952 <_mDNS_Execute+0x5da>;
   1094c:	e1 60       	R1 = 0x1c (X);		/*		R1=0x1c( 28) */
   1094e:	08 08       	CC = R0 == R1;
   10950:	0b 14       	IF !CC JUMP 0x10966 <_mDNS_Execute+0x5ee> (BP);
   10952:	60 e4 1a 01 	R0 = W[P4 + 0x234] (Z);
   10956:	08 0c       	CC = R0 == 0x1;
   10958:	06 18       	IF CC JUMP 0x10964 <_mDNS_Execute+0x5ec>;
   1095a:	e1 60       	R1 = 0x1c (X);		/*		R1=0x1c( 28) */
   1095c:	08 08       	CC = R0 == R1;
   1095e:	01 68       	P1 = 0x0 (X);		/*		P1=0x0(  0) */
   10960:	79 07       	IF CC R7 = P1;
   10962:	02 20       	JUMP.S 0x10966 <_mDNS_Execute+0x5ee>;
   10964:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
   10966:	00 00       	NOP;
   10968:	5b 91       	P3 = [P3];
   1096a:	43 0c       	CC = P3 == 0x0;
   1096c:	90 17       	IF !CC JUMP 0x1088c <_mDNS_Execute+0x514> (BP);
   1096e:	02 20       	JUMP.S 0x10972 <_mDNS_Execute+0x5fa>;
   10970:	0d 60       	R5 = 0x1 (X);		/*		R5=0x1(  1) */
   10972:	2a e5 4e 00 	P2 = [P5 + 0x138];
   10976:	62 08       	CC = P2 == P4;
   10978:	62 14       	IF !CC JUMP 0x10a3c <_mDNS_Execute+0x6c4> (BP);
   1097a:	10 e4 92 00 	R0 = [P2 + 0x248];
   1097e:	00 0c       	CC = R0 == 0x0;
   10980:	05 1c       	IF CC JUMP 0x1098a <_mDNS_Execute+0x612> (BP);
   10982:	10 e4 2d 00 	R0 = [P2 + 0xb4];
   10986:	00 0c       	CC = R0 == 0x0;
   10988:	1b 14       	IF !CC JUMP 0x109be <_mDNS_Execute+0x646> (BP);
   1098a:	05 0c       	CC = R5 == 0x0;
   1098c:	19 14       	IF !CC JUMP 0x109be <_mDNS_Execute+0x646> (BP);
   1098e:	20 e4 93 00 	R0 = [P4 + 0x24c];
   10992:	00 0c       	CC = R0 == 0x0;
   10994:	15 1c       	IF CC JUMP 0x109be <_mDNS_Execute+0x646> (BP);
   10996:	38 91       	R0 = [FP];
   10998:	00 0c       	CC = R0 == 0x0;
   1099a:	0f 1c       	IF CC JUMP 0x109b8 <_mDNS_Execute+0x640> (BP);
   1099c:	60 e5 1a 01 	R0 = W[P4 + 0x234] (X);
   109a0:	ff e3 30 7b 	CALL 0x0 <_AddRecordToResponseList>;
   109a4:	4c 30       	R1 = P4;
   109a6:	b1 50       	R2 = R1 + R6;
   109a8:	f0 b0       	[SP + 0xc] = R0;
   109aa:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1c( 28) */
   109ae:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
   109b0:	01 e1 4c 51 	R1.L = 0x514c;		/* (20812)	R1=0x514c(20812) */
   109b4:	ff e3 26 7b 	CALL 0x0 <_AddRecordToResponseList>;
   109b8:	45 30       	R0 = P5;
   109ba:	ff e3 ff d3 	CALL 0xb1b8 <_GenerateNegativeResponse>;
   109be:	00 00       	NOP;
   109c0:	2b e5 4e 00 	P3 = [P5 + 0x138];
   109c4:	63 08       	CC = P3 == P4;
   109c6:	3b 14       	IF !CC JUMP 0x10a3c <_mDNS_Execute+0x6c4> (BP);
   109c8:	07 0c       	CC = R7 == 0x0;
   109ca:	35 1c       	IF CC JUMP 0x10a34 <_mDNS_Execute+0x6bc> (BP);
   109cc:	18 a1       	R0 = [P3 + 0x10];
   109ce:	00 0d       	CC = R0 <= 0x0;
   109d0:	32 1c       	IF CC JUMP 0x10a34 <_mDNS_Execute+0x6bc> (BP);
   109d2:	98 a3       	R0 = [P3 + 0x38];
   109d4:	00 0c       	CC = R0 == 0x0;
   109d6:	2f 14       	IF !CC JUMP 0x10a34 <_mDNS_Execute+0x6bc> (BP);
   109d8:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
   109dc:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
   109e0:	0f 91       	R7 = [P1];
   109e2:	07 30       	R0 = R7;
   109e4:	19 60       	R1 = 0x3 (X);		/*		R1=0x3(  3) */
   109e6:	10 64       	R0 += 0x2;		/* (  2) */
   109e8:	ff e3 0c 7b 	CALL 0x0 <_AddRecordToResponseList>;
   109ec:	29 e4 37 00 	R1 = [P5 + 0xdc];
   109f0:	18 b1       	[P3 + 0x10] = R0;
   109f2:	01 52       	R0 = R1 - R0;
   109f4:	d8 b0       	[P3 + 0xc] = R0;
   109f6:	58 e4 99 00 	R0 = W[P3 + 0x132] (Z);
   109fa:	00 0c       	CC = R0 == 0x0;
   109fc:	1c 14       	IF !CC JUMP 0x10a34 <_mDNS_Execute+0x6bc> (BP);
   109fe:	28 e4 42 00 	R0 = [P5 + 0x108];
   10a02:	00 0c       	CC = R0 == 0x0;
   10a04:	12 14       	IF !CC JUMP 0x10a28 <_mDNS_Execute+0x6b0> (BP);
   10a06:	82 c6 17 80 	R0 = R7 << 0x2;
   10a0a:	38 50       	R0 = R0 + R7;
   10a0c:	ff e3 fa 7a 	CALL 0x0 <_AddRecordToResponseList>;
   10a10:	ff 67       	R7 += -0x1;		/* ( -1) */
   10a12:	41 e1 eb 51 	R1.H = 0x51eb;		/* (20971)	R1=0x51eb0003(1374355459) */
   10a16:	07 50       	R0 = R7 + R0;
   10a18:	01 e1 1f 85 	R1.L = 0x851f;		/* (-31457)	R1=0x51eb851f(1374389535) */
   10a1c:	ff e3 f2 7a 	CALL 0x0 <_AddRecordToResponseList>;
   10a20:	20 4e       	R0 >>= 0x4;
   10a22:	08 64       	R0 += 0x1;		/* (  1) */
   10a24:	28 e6 42 00 	[P5 + 0x108] = R0;
   10a28:	00 00       	NOP;
   10a2a:	d9 a0       	R1 = [P3 + 0xc];
   10a2c:	28 e4 42 00 	R0 = [P5 + 0x108];
   10a30:	01 50       	R0 = R1 + R0;
   10a32:	d8 b0       	[P3 + 0xc] = R0;
   10a34:	45 30       	R0 = P5;
   10a36:	4b 30       	R1 = P3;
   10a38:	ff e3 c8 8a 	CALL 0x1fc8 <_SetNextQueryTime>;
   10a3c:	f2 ae       	P2 = [SP + 0x2c];
   10a3e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   10a40:	28 e6 4e 00 	[P5 + 0x138] = R0;
   10a44:	a8 e6 34 00 	B[P5 + 0x34] = R0;
   10a48:	0a 6c       	P2 += 0x1;		/* (  1) */
   10a4a:	f2 be       	[SP + 0x2c] = P2;
   10a4c:	2c e5 4d 00 	P4 = [P5 + 0x134];
   10a50:	44 0c       	CC = P4 == 0x0;
   10a52:	08 18       	IF CC JUMP 0x10a62 <_mDNS_Execute+0x6ea>;
   10a54:	f0 a2       	R0 = [SP + 0x2c];
   10a56:	21 e1 e8 03 	R1 = 0x3e8 (X);		/*		R1=0x3e8(1000) */
   10a5a:	08 08       	CC = R0 == R1;
   10a5c:	02 18       	IF CC JUMP 0x10a60 <_mDNS_Execute+0x6e8>;
   10a5e:	93 2d       	JUMP.S 0x10584 <_mDNS_Execute+0x20c>;
   10a60:	06 20       	JUMP.S 0x10a6c <_mDNS_Execute+0x6f4>;
   10a62:	f0 a2       	R0 = [SP + 0x2c];
   10a64:	21 e1 e7 03 	R1 = 0x3e7 (X);		/*		R1=0x3e7(999) */
   10a68:	08 09       	CC = R0 <= R1;
   10a6a:	08 1c       	IF CC JUMP 0x10a7a <_mDNS_Execute+0x702> (BP);
   10a6c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3e7(999) */
   10a70:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   10a72:	01 e1 a0 51 	R1.L = 0x51a0;		/* (20896)	R1=0x51a0(20896) */
   10a76:	ff e3 c5 7a 	CALL 0x0 <_AddRecordToResponseList>;
   10a7a:	2a e1 08 11 	P2 = 0x1108 (X);		/*		P2=0x1108(4360) */
   10a7e:	95 5a       	P2 = P5 + P2;
   10a80:	2f e1 d4 18 	FP = 0x18d4 (X);		/*		FP=0x18d4(6356) */
   10a84:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
   10a86:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
   10a88:	6a 30       	R5 = P2;
   10a8a:	fd 5b       	FP = P5 + FP;
   10a8c:	21 20       	JUMP.S 0x10ace <_mDNS_Execute+0x756>;
   10a8e:	ae e6 14 01 	B[P5 + 0x114] = R6;
   10a92:	28 e4 f2 07 	R0 = [P5 + 0x1fc8];
   10a96:	28 e6 f5 07 	[P5 + 0x1fd4] = R0;
   10a9a:	45 30       	R0 = P5;
   10a9c:	ff e3 84 d0 	CALL 0xaba4 <_CheckRmvEventsForLocalRecords>;
   10aa0:	1d 32       	P3 = R5;
   10aa2:	00 00       	NOP;
   10aa4:	5c 90       	P4 = [P3++];
   10aa6:	0b 20       	JUMP.S 0x10abc <_mDNS_Execute+0x744>;
   10aa8:	00 00       	NOP;
   10aaa:	a0 a0       	R0 = [P4 + 0x8];
   10aac:	28 e6 f5 07 	[P5 + 0x1fd4] = R0;
   10ab0:	00 0c       	CC = R0 == 0x0;
   10ab2:	04 18       	IF CC JUMP 0x10aba <_mDNS_Execute+0x742>;
   10ab4:	45 30       	R0 = P5;
   10ab6:	ff e3 77 d0 	CALL 0xaba4 <_CheckRmvEventsForLocalRecords>;
   10aba:	64 91       	P4 = [P4];
   10abc:	44 0c       	CC = P4 == 0x0;
   10abe:	f5 17       	IF !CC JUMP 0x10aa8 <_mDNS_Execute+0x730> (BP);
   10ac0:	7b 08       	CC = P3 == FP;
   10ac2:	f0 17       	IF !CC JUMP 0x10aa2 <_mDNS_Execute+0x72a> (BP);
   10ac4:	0f 64       	R7 += 0x1;		/* (  1) */
   10ac6:	20 e1 e8 03 	R0 = 0x3e8 (X);		/*		R0=0x3e8(1000) */
   10aca:	07 08       	CC = R7 == R0;
   10acc:	06 1c       	IF CC JUMP 0x10ad8 <_mDNS_Execute+0x760> (BP);
   10ace:	a8 e4 14 01 	R0 = B[P5 + 0x114] (Z);
   10ad2:	00 0c       	CC = R0 == 0x0;
   10ad4:	dd 17       	IF !CC JUMP 0x10a8e <_mDNS_Execute+0x716> (BP);
   10ad6:	08 20       	JUMP.S 0x10ae6 <_mDNS_Execute+0x76e>;
   10ad8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x51a0(20896) */
   10adc:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   10ade:	01 e1 d4 51 	R1.L = 0x51d4;		/* (20948)	R1=0x51d4(20948) */
   10ae2:	ff e3 8f 7a 	CALL 0x0 <_AddRecordToResponseList>;
   10ae6:	4d 30       	R1 = P5;
   10ae8:	2a e1 f4 10 	P2 = 0x10f4 (X);		/*		P2=0x10f4(4340) */
   10aec:	b9 65       	R1 += 0x37;		/* ( 55) */
   10aee:	95 5a       	P2 = P5 + P2;
   10af0:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
   10af2:	25 e1 34 01 	R5 = 0x134 (X);		/*		R5=0x134(308) */
   10af6:	f1 b2       	[SP + 0x2c] = R1;
   10af8:	32 bf       	[SP + 0x30] = P2;
   10afa:	24 e1 f3 01 	R4 = 0x1f3 (X);		/*		R4=0x1f3(499) */
   10afe:	91 20       	JUMP.S 0x10c20 <_mDNS_Execute+0x8a8>;
   10b00:	00 00       	NOP;
   10b02:	2b e5 4e 00 	P3 = [P5 + 0x138];
   10b06:	20 91       	R0 = [P4];
   10b08:	28 e6 50 00 	[P5 + 0x140] = R0;
   10b0c:	43 0c       	CC = P3 == 0x0;
   10b0e:	0f 1c       	IF CC JUMP 0x10b2c <_mDNS_Execute+0x7b4> (BP);
   10b10:	58 e5 1a 01 	R0 = W[P3 + 0x234] (X);
   10b14:	ff e3 76 7a 	CALL 0x0 <_AddRecordToResponseList>;
   10b18:	4b 30       	R1 = P3;
   10b1a:	a9 50       	R2 = R1 + R5;
   10b1c:	f0 b0       	[SP + 0xc] = R0;
   10b1e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x51d4(20948) */
   10b22:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   10b24:	01 e1 0c 52 	R1.L = 0x520c;		/* (21004)	R1=0x520c(21004) */
   10b28:	ff e3 6c 7a 	CALL 0x0 <_AddRecordToResponseList>;
   10b2c:	00 00       	NOP;
   10b2e:	2a e5 f5 07 	P2 = [P5 + 0x1fd4];
   10b32:	2c e7 4e 00 	[P5 + 0x138] = P4;
   10b36:	42 0c       	CC = P2 == 0x0;
   10b38:	10 18       	IF CC JUMP 0x10b58 <_mDNS_Execute+0x7e0>;
   10b3a:	42 30       	R0 = P2;
   10b3c:	f2 a2       	R2 = [SP + 0x2c];
   10b3e:	20 64       	R0 += 0x4;		/* (  4) */
   10b40:	51 a2       	R1 = [P2 + 0x24];
   10b42:	21 64       	R1 += 0x4;		/* (  4) */
   10b44:	ff e3 5e 7a 	CALL 0x0 <_AddRecordToResponseList>;
   10b48:	10 30       	R2 = R0;
   10b4a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x520c(21004) */
   10b4e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   10b50:	01 e1 58 52 	R1.L = 0x5258;		/* (21080)	R1=0x5258(21080) */
   10b54:	ff e3 56 7a 	CALL 0x0 <_AddRecordToResponseList>;
   10b58:	0d 32       	P1 = R5;
   10b5a:	cc 5a       	P3 = P4 + P1;
   10b5c:	43 30       	R0 = P3;
   10b5e:	ff e3 51 7a 	CALL 0x0 <_AddRecordToResponseList>;
   10b62:	41 e1 d5 20 	R1.H = 0x20d5;		/* (8405)	R1=0x20d55258(550851160) */
   10b66:	38 30       	R7 = R0;
   10b68:	01 e1 39 6b 	R1.L = 0x6b39;		/* (27449)	R1=0x20d56b39(550857529) */
   10b6c:	ff e3 4a 7a 	CALL 0x0 <_AddRecordToResponseList>;
   10b70:	82 c6 d0 83 	R1 = R0 >> 0x6;
   10b74:	62 a0       	R2 = [P4 + 0x4];
   10b76:	e1 40       	R1 *= R4;
   10b78:	f3 bc       	[SP + 0xc] = P3;
   10b7a:	4f 52       	R1 = R7 - R1;
   10b7c:	30 a3       	R0 = [SP + 0x30];
   10b7e:	ff e3 57 8a 	CALL 0x202c <_AuthGroupForName>;
   10b82:	38 32       	FP = R0;
   10b84:	47 0c       	CC = FP == 0x0;
   10b86:	20 1c       	IF CC JUMP 0x10bc6 <_mDNS_Execute+0x84e> (BP);
   10b88:	b8 a0       	R0 = [FP + 0x8];
   10b8a:	28 e6 f5 07 	[P5 + 0x1fd4] = R0;
   10b8e:	14 20       	JUMP.S 0x10bb6 <_mDNS_Execute+0x83e>;
   10b90:	4c 30       	R1 = P4;
   10b92:	18 91       	R0 = [P3];
   10b94:	28 e6 f5 07 	[P5 + 0x1fd4] = R0;
   10b98:	43 30       	R0 = P3;
   10b9a:	ff e3 33 7a 	CALL 0x0 <_AddRecordToResponseList>;
   10b9e:	00 0c       	CC = R0 == 0x0;
   10ba0:	0b 1c       	IF CC JUMP 0x10bb6 <_mDNS_Execute+0x83e> (BP);
   10ba2:	45 30       	R0 = P5;
   10ba4:	4b 30       	R1 = P3;
   10ba6:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
   10ba8:	ff e3 42 cd 	CALL 0xa62c <_AnswerLocalQuestionWithLocalAuthRecord>;
   10bac:	28 e4 4e 00 	R0 = [P5 + 0x138];
   10bb0:	4c 30       	R1 = P4;
   10bb2:	08 08       	CC = R0 == R1;
   10bb4:	09 14       	IF !CC JUMP 0x10bc6 <_mDNS_Execute+0x84e> (BP);
   10bb6:	00 00       	NOP;
   10bb8:	2b e5 f5 07 	P3 = [P5 + 0x1fd4];
   10bbc:	43 0c       	CC = P3 == 0x0;
   10bbe:	04 1c       	IF CC JUMP 0x10bc6 <_mDNS_Execute+0x84e> (BP);
   10bc0:	7a ad       	P2 = [FP + 0x14];
   10bc2:	53 08       	CC = P3 == P2;
   10bc4:	e6 17       	IF !CC JUMP 0x10b90 <_mDNS_Execute+0x818> (BP);
   10bc6:	00 00       	NOP;
   10bc8:	2b e5 4e 00 	P3 = [P5 + 0x138];
   10bcc:	63 08       	CC = P3 == P4;
   10bce:	23 14       	IF !CC JUMP 0x10c14 <_mDNS_Execute+0x89c> (BP);
   10bd0:	28 e4 f2 07 	R0 = [P5 + 0x1fc8];
   10bd4:	28 e6 f5 07 	[P5 + 0x1fd4] = R0;
   10bd8:	15 20       	JUMP.S 0x10c02 <_mDNS_Execute+0x88a>;
   10bda:	17 32       	P2 = R7;
   10bdc:	4b 30       	R1 = P3;
   10bde:	10 90       	R0 = [P2++];
   10be0:	28 e6 f5 07 	[P5 + 0x1fd4] = R0;
   10be4:	42 30       	R0 = P2;
   10be6:	ff e3 0d 7a 	CALL 0x0 <_AddRecordToResponseList>;
   10bea:	00 0c       	CC = R0 == 0x0;
   10bec:	0b 1c       	IF CC JUMP 0x10c02 <_mDNS_Execute+0x88a> (BP);
   10bee:	45 30       	R0 = P5;
   10bf0:	0f 30       	R1 = R7;
   10bf2:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
   10bf4:	ff e3 1c cd 	CALL 0xa62c <_AnswerLocalQuestionWithLocalAuthRecord>;
   10bf8:	28 e4 4e 00 	R0 = [P5 + 0x138];
   10bfc:	4b 30       	R1 = P3;
   10bfe:	08 08       	CC = R0 == R1;
   10c00:	0a 14       	IF !CC JUMP 0x10c14 <_mDNS_Execute+0x89c> (BP);
   10c02:	00 00       	NOP;
   10c04:	2f e4 f5 07 	R7 = [P5 + 0x1fd4];
   10c08:	07 0c       	CC = R7 == 0x0;
   10c0a:	05 1c       	IF CC JUMP 0x10c14 <_mDNS_Execute+0x89c> (BP);
   10c0c:	28 e4 f4 07 	R0 = [P5 + 0x1fd0];
   10c10:	07 08       	CC = R7 == R0;
   10c12:	e4 17       	IF !CC JUMP 0x10bda <_mDNS_Execute+0x862> (BP);
   10c14:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   10c16:	28 e6 4e 00 	[P5 + 0x138] = R0;
   10c1a:	28 e6 f5 07 	[P5 + 0x1fd4] = R0;
   10c1e:	0e 64       	R6 += 0x1;		/* (  1) */
   10c20:	2c e5 50 00 	P4 = [P5 + 0x140];
   10c24:	44 0c       	CC = P4 == 0x0;
   10c26:	06 18       	IF CC JUMP 0x10c32 <_mDNS_Execute+0x8ba>;
   10c28:	20 e1 e8 03 	R0 = 0x3e8 (X);		/*		R0=0x3e8(1000) */
   10c2c:	06 08       	CC = R6 == R0;
   10c2e:	69 17       	IF !CC JUMP 0x10b00 <_mDNS_Execute+0x788> (BP);
   10c30:	05 20       	JUMP.S 0x10c3a <_mDNS_Execute+0x8c2>;
   10c32:	21 e1 e7 03 	R1 = 0x3e7 (X);		/*		R1=0x3e7(999) */
   10c36:	0e 09       	CC = R6 <= R1;
   10c38:	08 1c       	IF CC JUMP 0x10c48 <_mDNS_Execute+0x8d0> (BP);
   10c3a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3e7(999) */
   10c3e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   10c40:	01 e1 9c 52 	R1.L = 0x529c;		/* (21148)	R1=0x529c(21148) */
   10c44:	ff e3 de 79 	CALL 0x0 <_AddRecordToResponseList>;
   10c48:	2a e1 c8 1f 	P2 = 0x1fc8 (X);		/*		P2=0x1fc8 <_SetNextQueryTime>(8136) */
   10c4c:	95 5a       	P2 = P5 + P2;
   10c4e:	07 68       	FP = 0x0 (X);		/*		FP=0x0(  0) */
   10c50:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
   10c52:	03 68       	P3 = 0x0 (X);		/*		P3=0x0(  0) */
   10c54:	6a 30       	R5 = P2;
   10c56:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
   10c58:	4c 20       	JUMP.S 0x10cf0 <_mDNS_Execute+0x978>;
   10c5a:	00 00       	NOP;
   10c5c:	20 91       	R0 = [P4];
   10c5e:	28 e6 f4 07 	[P5 + 0x1fd0] = R0;
   10c62:	a1 e4 04 00 	R1 = B[P4 + 0x4] (Z);
   10c66:	11 0c       	CC = R1 == 0x2;
   10c68:	07 18       	IF CC JUMP 0x10c76 <_mDNS_Execute+0x8fe>;
   10c6a:	45 30       	R0 = P5;
   10c6c:	4c 30       	R1 = P4;
   10c6e:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
   10c70:	ff e3 8e ce 	CALL 0xa98c <_AnswerAllLocalQuestionsWithLocalAuthRecord>;
   10c74:	37 20       	JUMP.S 0x10ce2 <_mDNS_Execute+0x96a>;
   10c76:	00 0c       	CC = R0 == 0x0;
   10c78:	0c 14       	IF !CC JUMP 0x10c90 <_mDNS_Execute+0x918> (BP);
   10c7a:	07 0c       	CC = R7 == 0x0;
   10c7c:	34 18       	IF CC JUMP 0x10ce4 <_mDNS_Execute+0x96c>;
   10c7e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x529c(21148) */
   10c82:	f6 b0       	[SP + 0xc] = R6;
   10c84:	01 e1 dc 52 	R1.L = 0x52dc;		/* (21212)	R1=0x52dc(21212) */
   10c88:	17 30       	R2 = R7;
   10c8a:	ff e3 bb 79 	CALL 0x0 <_AddRecordToResponseList>;
   10c8e:	2b 20       	JUMP.S 0x10ce4 <_mDNS_Execute+0x96c>;
   10c90:	15 32       	P2 = R5;
   10c92:	29 e5 f2 07 	P1 = [P5 + 0x1fc8];
   10c96:	03 20       	JUMP.S 0x10c9c <_mDNS_Execute+0x924>;
   10c98:	51 32       	P2 = P1;
   10c9a:	49 91       	P1 = [P1];
   10c9c:	41 0c       	CC = P1 == 0x0;
   10c9e:	07 18       	IF CC JUMP 0x10cac <_mDNS_Execute+0x934>;
   10ca0:	61 08       	CC = P1 == P4;
   10ca2:	fb 17       	IF !CC JUMP 0x10c98 <_mDNS_Execute+0x920> (BP);
   10ca4:	10 93       	[P2] = R0;
   10ca6:	07 0c       	CC = R7 == 0x0;
   10ca8:	1a 14       	IF !CC JUMP 0x10cdc <_mDNS_Execute+0x964> (BP);
   10caa:	13 20       	JUMP.S 0x10cd0 <_mDNS_Execute+0x958>;
   10cac:	61 a2       	R1 = [P4 + 0x24];
   10cae:	44 30       	R0 = P4;
   10cb0:	55 30       	R2 = P5;
   10cb2:	21 64       	R1 += 0x4;		/* (  4) */
   10cb4:	ba 65       	R2 += 0x37;		/* ( 55) */
   10cb6:	20 64       	R0 += 0x4;		/* (  4) */
   10cb8:	ff e3 a4 79 	CALL 0x0 <_AddRecordToResponseList>;
   10cbc:	10 30       	R2 = R0;
   10cbe:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x52dc(21212) */
   10cc2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   10cc4:	01 e1 10 53 	R1.L = 0x5310;		/* (21264)	R1=0x5310(21264) */
   10cc8:	ff e3 9c 79 	CALL 0x0 <_AddRecordToResponseList>;
   10ccc:	1a 20       	JUMP.S 0x10d00 <_mDNS_Execute+0x988>;
   10cce:	10 32       	P2 = R0;
   10cd0:	10 91       	R0 = [P2];
   10cd2:	00 0c       	CC = R0 == 0x0;
   10cd4:	fd 17       	IF !CC JUMP 0x10cce <_mDNS_Execute+0x956> (BP);
   10cd6:	54 93       	[P2] = P4;
   10cd8:	7c 30       	R7 = P4;
   10cda:	02 20       	JUMP.S 0x10cde <_mDNS_Execute+0x966>;
   10cdc:	7c 93       	[FP] = P4;
   10cde:	26 93       	[P4] = R6;
   10ce0:	7c 32       	FP = P4;
   10ce2:	27 32       	P4 = R7;
   10ce4:	0b 6c       	P3 += 0x1;		/* (  1) */
   10ce6:	29 e1 e8 03 	P1 = 0x3e8 (X);		/*		P1=0x3e8(1000) */
   10cea:	4b 08       	CC = P3 == P1;
   10cec:	09 1c       	IF CC JUMP 0x10cfe <_mDNS_Execute+0x986> (BP);
   10cee:	7c 30       	R7 = P4;
   10cf0:	2c e5 f4 07 	P4 = [P5 + 0x1fd0];
   10cf4:	44 0c       	CC = P4 == 0x0;
   10cf6:	05 18       	IF CC JUMP 0x10d00 <_mDNS_Execute+0x988>;
   10cf8:	44 30       	R0 = P4;
   10cfa:	38 08       	CC = R0 == R7;
   10cfc:	af 17       	IF !CC JUMP 0x10c5a <_mDNS_Execute+0x8e2> (BP);
   10cfe:	7c 30       	R7 = P4;
   10d00:	29 e1 e7 03 	P1 = 0x3e7 (X);		/*		P1=0x3e7(999) */
   10d04:	2f e6 f4 07 	[P5 + 0x1fd0] = R7;
   10d08:	4b 09       	CC = P3 <= P1;
   10d0a:	08 1c       	IF CC JUMP 0x10d1a <_mDNS_Execute+0x9a2> (BP);
   10d0c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5310(21264) */
   10d10:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   10d12:	01 e1 54 53 	R1.L = 0x5354;		/* (21332)	R1=0x5354(21332) */
   10d16:	ff e3 75 79 	CALL 0x0 <_AddRecordToResponseList>;
   10d1a:	00 00       	NOP;
   10d1c:	28 e4 f6 07 	R0 = [P5 + 0x1fd8];
   10d20:	00 0c       	CC = R0 == 0x0;
   10d22:	42 1c       	IF CC JUMP 0x10da6 <_mDNS_Execute+0xa2e> (BP);
   10d24:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   10d26:	2b e1 08 11 	P3 = 0x1108 (X);		/*		P3=0x1108(4360) */
   10d2a:	2f e1 d4 18 	FP = 0x18d4 (X);		/*		FP=0x18d4(6356) */
   10d2e:	75 30       	R6 = P5;
   10d30:	28 e6 f6 07 	[P5 + 0x1fd8] = R0;
   10d34:	dd 5a       	P3 = P5 + P3;
   10d36:	fd 5b       	FP = P5 + FP;
   10d38:	be 65       	R6 += 0x37;		/* ( 55) */
   10d3a:	00 00       	NOP;
   10d3c:	5c 90       	P4 = [P3++];
   10d3e:	30 20       	JUMP.S 0x10d9e <_mDNS_Execute+0xa26>;
   10d40:	00 00       	NOP;
   10d42:	10 91       	R0 = [P2];
   10d44:	60 b1       	[P4 + 0x14] = R0;
   10d46:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
   10d4a:	10 0c       	CC = R0 == 0x2;
   10d4c:	07 18       	IF CC JUMP 0x10d5a <_mDNS_Execute+0x9e2>;
   10d4e:	45 30       	R0 = P5;
   10d50:	4a 30       	R1 = P2;
   10d52:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
   10d54:	ff e3 1c ce 	CALL 0xa98c <_AnswerAllLocalQuestionsWithLocalAuthRecord>;
   10d58:	10 20       	JUMP.S 0x10d78 <_mDNS_Execute+0xa00>;
   10d5a:	42 30       	R0 = P2;
   10d5c:	51 a2       	R1 = [P2 + 0x24];
   10d5e:	21 64       	R1 += 0x4;		/* (  4) */
   10d60:	16 30       	R2 = R6;
   10d62:	20 64       	R0 += 0x4;		/* (  4) */
   10d64:	ff e3 4e 79 	CALL 0x0 <_AddRecordToResponseList>;
   10d68:	10 30       	R2 = R0;
   10d6a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5354(21332) */
   10d6e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   10d70:	01 e1 8c 53 	R1.L = 0x538c;		/* (21388)	R1=0x538c(21388) */
   10d74:	ff e3 46 79 	CALL 0x0 <_AddRecordToResponseList>;
   10d78:	ff 67       	R7 += -0x1;		/* ( -1) */
   10d7a:	07 0c       	CC = R7 == 0x0;
   10d7c:	04 14       	IF !CC JUMP 0x10d84 <_mDNS_Execute+0xa0c> (BP);
   10d7e:	08 20       	JUMP.S 0x10d8e <_mDNS_Execute+0xa16>;
   10d80:	27 e1 64 00 	R7 = 0x64 (X);		/*		R7=0x64(100) */
   10d84:	00 00       	NOP;
   10d86:	62 ad       	P2 = [P4 + 0x14];
   10d88:	42 0c       	CC = P2 == 0x0;
   10d8a:	db 17       	IF !CC JUMP 0x10d40 <_mDNS_Execute+0x9c8> (BP);
   10d8c:	08 20       	JUMP.S 0x10d9c <_mDNS_Execute+0xa24>;
   10d8e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x538c(21388) */
   10d92:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   10d94:	01 e1 b8 53 	R1.L = 0x53b8;		/* (21432)	R1=0x53b8(21432) */
   10d98:	ff e3 34 79 	CALL 0x0 <_AddRecordToResponseList>;
   10d9c:	64 91       	P4 = [P4];
   10d9e:	44 0c       	CC = P4 == 0x0;
   10da0:	f0 17       	IF !CC JUMP 0x10d80 <_mDNS_Execute+0xa08> (BP);
   10da2:	7b 08       	CC = P3 == FP;
   10da4:	cb 17       	IF !CC JUMP 0x10d3a <_mDNS_Execute+0x9c2> (BP);
   10da6:	00 00       	NOP;
   10da8:	2c e5 4e 00 	P4 = [P5 + 0x138];
   10dac:	44 0c       	CC = P4 == 0x0;
   10dae:	11 1c       	IF CC JUMP 0x10dd0 <_mDNS_Execute+0xa58> (BP);
   10db0:	60 e5 1a 01 	R0 = W[P4 + 0x234] (X);
   10db4:	ff e3 26 79 	CALL 0x0 <_AddRecordToResponseList>;
   10db8:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
   10dbc:	94 5a       	P2 = P4 + P2;
   10dbe:	f0 b0       	[SP + 0xc] = R0;
   10dc0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x53b8(21432) */
   10dc4:	52 30       	R2 = P2;
   10dc6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   10dc8:	01 e1 f4 53 	R1.L = 0x53f4;		/* (21492)	R1=0x53f4(21492) */
   10dcc:	ff e3 1a 79 	CALL 0x0 <_AddRecordToResponseList>;
   10dd0:	55 32       	P2 = P5;
   10dd2:	47 e1 00 00 	R7.H = 0x0;		/* (  0)	R7=0x64(100) */
   10dd6:	ba 6d       	P2 += 0x37;		/* ( 55) */
   10dd8:	2c e5 4c 00 	P4 = [P5 + 0x130];
   10ddc:	2f e1 34 01 	FP = 0x134 (X);		/*		FP=0x134(308) */
   10de0:	25 e1 f3 01 	R5 = 0x1f3 (X);		/*		R5=0x1f3(499) */
   10de4:	07 e1 00 00 	R7.L = 0x0;		/* (  0)	R7=0x0 <_AddRecordToResponseList>(  0) */
   10de8:	32 bf       	[SP + 0x30] = P2;
   10dea:	a2 20       	JUMP.S 0x10f2e <_mDNS_Execute+0xbb6>;
   10dec:	00 00       	NOP;
   10dee:	20 91       	R0 = [P4];
   10df0:	f0 b2       	[SP + 0x2c] = R0;
   10df2:	60 e4 99 00 	R0 = W[P4 + 0x132] (Z);
   10df6:	00 0c       	CC = R0 == 0x0;
   10df8:	9a 1c       	IF CC JUMP 0x10f2c <_mDNS_Execute+0xbb4> (BP);
   10dfa:	20 e4 31 00 	R0 = [P4 + 0xc4];
   10dfe:	00 0c       	CC = R0 == 0x0;
   10e00:	96 1c       	IF CC JUMP 0x10f2c <_mDNS_Execute+0xbb4> (BP);
   10e02:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
   10e04:	20 e4 92 00 	R0 = [P4 + 0x248];
   10e08:	21 e6 31 00 	[P4 + 0xc4] = R1;
   10e0c:	00 0c       	CC = R0 == 0x0;
   10e0e:	05 1c       	IF CC JUMP 0x10e18 <_mDNS_Execute+0xaa0> (BP);
   10e10:	20 e4 2d 00 	R0 = [P4 + 0xb4];
   10e14:	00 0c       	CC = R0 == 0x0;
   10e16:	8b 14       	IF !CC JUMP 0x10f2c <_mDNS_Execute+0xbb4> (BP);
   10e18:	fc 5a       	P3 = P4 + FP;
   10e1a:	2c e7 4e 00 	[P5 + 0x138] = P4;
   10e1e:	43 30       	R0 = P3;
   10e20:	ff e3 f0 78 	CALL 0x0 <_AddRecordToResponseList>;
   10e24:	41 e1 d5 20 	R1.H = 0x20d5;		/* (8405)	R1=0x20d50000(550830080) */
   10e28:	30 30       	R6 = R0;
   10e2a:	01 e1 39 6b 	R1.L = 0x6b39;		/* (27449)	R1=0x20d56b39(550857529) */
   10e2e:	ff e3 e9 78 	CALL 0x0 <_AddRecordToResponseList>;
   10e32:	82 c6 d0 83 	R1 = R0 >> 0x6;
   10e36:	62 a0       	R2 = [P4 + 0x4];
   10e38:	e9 40       	R1 *= R5;
   10e3a:	f3 bc       	[SP + 0xc] = P3;
   10e3c:	4e 52       	R1 = R6 - R1;
   10e3e:	45 30       	R0 = P5;
   10e40:	ff e3 d2 8a 	CALL 0x23e4 <_CacheGroupForName>;
   10e44:	10 32       	P2 = R0;
   10e46:	42 0c       	CC = P2 == 0x0;
   10e48:	03 1c       	IF CC JUMP 0x10e4e <_mDNS_Execute+0xad6> (BP);
   10e4a:	93 ac       	P3 = [P2 + 0x8];
   10e4c:	6c 20       	JUMP.S 0x10f24 <_mDNS_Execute+0xbac>;
   10e4e:	03 68       	P3 = 0x0 (X);		/*		P3=0x0(  0) */
   10e50:	6a 20       	JUMP.S 0x10f24 <_mDNS_Execute+0xbac>;
   10e52:	73 30       	R6 = P3;
   10e54:	26 64       	R6 += 0x4;		/* (  4) */
   10e56:	06 30       	R0 = R6;
   10e58:	4c 30       	R1 = P4;
   10e5a:	ff e3 d3 78 	CALL 0x0 <_AddRecordToResponseList>;
   10e5e:	00 0c       	CC = R0 == 0x0;
   10e60:	5f 1c       	IF CC JUMP 0x10f1e <_mDNS_Execute+0xba6> (BP);
   10e62:	0f 32       	P1 = R7;
   10e64:	08 91       	R0 = [P1];
   10e66:	00 0c       	CC = R0 == 0x0;
   10e68:	11 1c       	IF CC JUMP 0x10e8a <_mDNS_Execute+0xb12> (BP);
   10e6a:	59 a2       	R1 = [P3 + 0x24];
   10e6c:	21 64       	R1 += 0x4;		/* (  4) */
   10e6e:	32 a3       	R2 = [SP + 0x30];
   10e70:	06 30       	R0 = R6;
   10e72:	ff e3 c7 78 	CALL 0x0 <_AddRecordToResponseList>;
   10e76:	30 b1       	[SP + 0x10] = R0;
   10e78:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x6b39(27449) */
   10e7c:	f4 b0       	[SP + 0xc] = R4;
   10e7e:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
   10e80:	01 e1 48 54 	R1.L = 0x5448;		/* (21576)	R1=0x5448(21576) */
   10e84:	54 30       	R2 = P4;
   10e86:	ff e3 bd 78 	CALL 0x0 <_AddRecordToResponseList>;
   10e8a:	00 00       	NOP;
   10e8c:	20 e4 32 00 	R0 = [P4 + 0xc8];
   10e90:	00 0c       	CC = R0 == 0x0;
   10e92:	2a 14       	IF !CC JUMP 0x10ee6 <_mDNS_Execute+0xb6e> (BP);
   10e94:	a0 a3       	R0 = [P4 + 0x38];
   10e96:	00 0c       	CC = R0 == 0x0;
   10e98:	27 14       	IF !CC JUMP 0x10ee6 <_mDNS_Execute+0xb6e> (BP);
   10e9a:	98 e4 04 00 	R0 = B[P3 + 0x4] (Z);
   10e9e:	21 e1 f0 00 	R1 = 0xf0 (X);		/*		R1=0xf0(240) */
   10ea2:	08 08       	CC = R0 == R1;
   10ea4:	21 14       	IF !CC JUMP 0x10ee6 <_mDNS_Execute+0xb6e> (BP);
   10ea6:	4c 30       	R1 = P4;
   10ea8:	45 30       	R0 = P5;
   10eaa:	ff e3 4d 9b 	CALL 0x4544 <_SetValidDNSServers>;
   10eae:	45 30       	R0 = P5;
   10eb0:	4c 30       	R1 = P4;
   10eb2:	ff e3 51 9c 	CALL 0x4754 <_GetServerForQuestion>;
   10eb6:	20 e6 32 00 	[P4 + 0xc8] = R0;
   10eba:	62 91       	P2 = [P4];
   10ebc:	13 20       	JUMP.S 0x10ee2 <_mDNS_Execute+0xb6a>;
   10ebe:	00 00       	NOP;
   10ec0:	91 af       	P1 = [P2 + 0x38];
   10ec2:	61 08       	CC = P1 == P4;
   10ec4:	0d 14       	IF !CC JUMP 0x10ede <_mDNS_Execute+0xb66> (BP);
   10ec6:	20 e4 33 00 	R0 = [P4 + 0xcc];
   10eca:	21 e4 34 00 	R1 = [P4 + 0xd0];
   10ece:	10 e6 33 00 	[P2 + 0xcc] = R0;
   10ed2:	20 e4 32 00 	R0 = [P4 + 0xc8];
   10ed6:	11 e6 34 00 	[P2 + 0xd0] = R1;
   10eda:	10 e6 32 00 	[P2 + 0xc8] = R0;
   10ede:	00 00       	NOP;
   10ee0:	52 91       	P2 = [P2];
   10ee2:	42 0c       	CC = P2 == 0x0;
   10ee4:	ed 17       	IF !CC JUMP 0x10ebe <_mDNS_Execute+0xb46> (BP);
   10ee6:	21 e1 00 04 	R1 = 0x400 (X);		/*		R1=0x400(1024) */
   10eea:	20 a2       	R0 = [P4 + 0x20];
   10eec:	08 64       	R0 += 0x1;		/* (  1) */
   10eee:	20 b2       	[P4 + 0x20] = R0;
   10ef0:	18 a6       	R0 = W[P3 + 0x10] (Z);
   10ef2:	08 0a       	CC = R0 <= R1 (IU);
   10ef4:	04 1c       	IF CC JUMP 0x10efc <_mDNS_Execute+0xb84> (BP);
   10ef6:	60 a2       	R0 = [P4 + 0x24];
   10ef8:	08 64       	R0 += 0x1;		/* (  1) */
   10efa:	60 b2       	[P4 + 0x24] = R0;
   10efc:	00 00       	NOP;
   10efe:	98 e4 04 00 	R0 = B[P3 + 0x4] (Z);
   10f02:	20 48       	CC = !BITTST (R0, 0x4);		/* bit  4 */
   10f04:	04 1c       	IF CC JUMP 0x10f0c <_mDNS_Execute+0xb94> (BP);
   10f06:	a0 a2       	R0 = [P4 + 0x28];
   10f08:	08 64       	R0 += 0x1;		/* (  1) */
   10f0a:	a0 b2       	[P4 + 0x28] = R0;
   10f0c:	45 30       	R0 = P5;
   10f0e:	4b 30       	R1 = P3;
   10f10:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
   10f12:	ff e3 83 ce 	CALL 0xac18 <_AnswerCurrentQuestionWithResourceRecord>;
   10f16:	2a e5 4e 00 	P2 = [P5 + 0x138];
   10f1a:	62 08       	CC = P2 == P4;
   10f1c:	08 14       	IF !CC JUMP 0x10f2c <_mDNS_Execute+0xbb4> (BP);
   10f1e:	00 00       	NOP;
   10f20:	5b 91       	P3 = [P3];
   10f22:	03 20       	JUMP.S 0x10f28 <_mDNS_Execute+0xbb0>;
   10f24:	7c 5a       	P1 = P4 + FP;
   10f26:	61 30       	R4 = P1;
   10f28:	43 0c       	CC = P3 == 0x0;
   10f2a:	94 17       	IF !CC JUMP 0x10e52 <_mDNS_Execute+0xada> (BP);
   10f2c:	f4 ae       	P4 = [SP + 0x2c];
   10f2e:	44 0c       	CC = P4 == 0x0;
   10f30:	05 1c       	IF CC JUMP 0x10f3a <_mDNS_Execute+0xbc2> (BP);
   10f32:	2a e5 4d 00 	P2 = [P5 + 0x134];
   10f36:	54 08       	CC = P4 == P2;
   10f38:	5a 17       	IF !CC JUMP 0x10dec <_mDNS_Execute+0xa74> (BP);
   10f3a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   10f3c:	28 e6 4e 00 	[P5 + 0x138] = R0;
   10f40:	68 a1       	R0 = [P5 + 0x14];
   10f42:	00 0c       	CC = R0 == 0x0;
   10f44:	05 14       	IF !CC JUMP 0x10f4e <_mDNS_Execute+0xbd6> (BP);
   10f46:	a8 e4 15 01 	R0 = B[P5 + 0x115] (Z);
   10f4a:	10 0c       	CC = R0 == 0x2;
   10f4c:	04 14       	IF !CC JUMP 0x10f54 <_mDNS_Execute+0xbdc> (BP);
   10f4e:	45 30       	R0 = P5;
   10f50:	ff e3 e4 cd 	CALL 0xab18 <_DiscardDeregistrations>;
   10f54:	00 00       	NOP;
   10f56:	68 a1       	R0 = [P5 + 0x14];
   10f58:	00 0c       	CC = R0 == 0x0;
   10f5a:	9d 14       	IF !CC JUMP 0x11094 <_mDNS_Execute+0xd1c> (BP);
   10f5c:	28 e4 3b 00 	R0 = [P5 + 0xec];
   10f60:	00 0c       	CC = R0 == 0x0;
   10f62:	06 1c       	IF CC JUMP 0x10f6e <_mDNS_Execute+0xbf6> (BP);
   10f64:	29 e4 37 00 	R1 = [P5 + 0xdc];
   10f68:	01 52       	R0 = R1 - R0;
   10f6a:	80 0c       	CC = R0 < 0x0;
   10f6c:	94 1c       	IF CC JUMP 0x11094 <_mDNS_Execute+0xd1c> (BP);
   10f6e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   10f70:	28 e6 3b 00 	[P5 + 0xec] = R0;
   10f74:	28 e4 37 00 	R0 = [P5 + 0xdc];
   10f78:	29 e4 3d 00 	R1 = [P5 + 0xf4];
   10f7c:	48 52       	R1 = R0 - R1;
   10f7e:	81 0c       	CC = R1 < 0x0;
   10f80:	06 14       	IF !CC JUMP 0x10f8c <_mDNS_Execute+0xc14> (BP);
   10f82:	29 e4 3e 00 	R1 = [P5 + 0xf8];
   10f86:	08 52       	R0 = R0 - R1;
   10f88:	80 0c       	CC = R0 < 0x0;
   10f8a:	04 18       	IF CC JUMP 0x10f92 <_mDNS_Execute+0xc1a>;
   10f8c:	45 30       	R0 = P5;
   10f8e:	ff e3 b1 8d 	CALL 0x2af0 <_SendQueries>;
   10f92:	2a e4 37 00 	R2 = [P5 + 0xdc];
   10f96:	29 e4 3d 00 	R1 = [P5 + 0xf4];
   10f9a:	0a 52       	R0 = R2 - R1;
   10f9c:	80 0c       	CC = R0 < 0x0;
   10f9e:	3e 18       	IF CC JUMP 0x1101a <_mDNS_Execute+0xca2>;
   10fa0:	f1 b0       	[SP + 0xc] = R1;
   10fa2:	30 b1       	[SP + 0x10] = R0;
   10fa4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x400(1024) */
   10fa8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   10faa:	01 e1 cc 54 	R1.L = 0x54cc;		/* (21708)	R1=0x54cc(21708) */
   10fae:	ff e3 29 78 	CALL 0x0 <_AddRecordToResponseList>;
   10fb2:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
   10fb6:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   10fba:	11 91       	R1 = [P2];
   10fbc:	28 e4 37 00 	R0 = [P5 + 0xdc];
   10fc0:	01 50       	R0 = R1 + R0;
   10fc2:	28 e6 3d 00 	[P5 + 0xf4] = R0;
   10fc6:	2c e5 4c 00 	P4 = [P5 + 0x130];
   10fca:	27 e1 34 01 	R7 = 0x134 (X);		/*		R7=0x134(308) */
   10fce:	20 20       	JUMP.S 0x1100e <_mDNS_Execute+0xc96>;
   10fd0:	00 00       	NOP;
   10fd2:	20 a1       	R0 = [P4 + 0x10];
   10fd4:	00 0d       	CC = R0 <= 0x0;
   10fd6:	1a 1c       	IF CC JUMP 0x1100a <_mDNS_Execute+0xc92> (BP);
   10fd8:	a1 a3       	R1 = [P4 + 0x38];
   10fda:	01 0c       	CC = R1 == 0x0;
   10fdc:	17 14       	IF !CC JUMP 0x1100a <_mDNS_Execute+0xc92> (BP);
   10fde:	e1 a0       	R1 = [P4 + 0xc];
   10fe0:	80 43       	R0 = -R0;
   10fe2:	08 52       	R0 = R0 - R1;
   10fe4:	29 e4 37 00 	R1 = [P5 + 0xdc];
   10fe8:	08 50       	R0 = R0 + R1;
   10fea:	80 0c       	CC = R0 < 0x0;
   10fec:	0f 1c       	IF CC JUMP 0x1100a <_mDNS_Execute+0xc92> (BP);
   10fee:	60 e5 1a 01 	R0 = W[P4 + 0x234] (X);
   10ff2:	ff e3 07 78 	CALL 0x0 <_AddRecordToResponseList>;
   10ff6:	4c 30       	R1 = P4;
   10ff8:	b9 50       	R2 = R1 + R7;
   10ffa:	f0 b0       	[SP + 0xc] = R0;
   10ffc:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x54cc(21708) */
   11000:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   11002:	01 e1 30 55 	R1.L = 0x5530;		/* (21808)	R1=0x5530(21808) */
   11006:	ff e3 fd 77 	CALL 0x0 <_AddRecordToResponseList>;
   1100a:	00 00       	NOP;
   1100c:	64 91       	P4 = [P4];
   1100e:	44 0c       	CC = P4 == 0x0;
   11010:	05 1c       	IF CC JUMP 0x1101a <_mDNS_Execute+0xca2> (BP);
   11012:	2a e5 4d 00 	P2 = [P5 + 0x134];
   11016:	54 08       	CC = P4 == P2;
   11018:	dc 17       	IF !CC JUMP 0x10fd0 <_mDNS_Execute+0xc58> (BP);
   1101a:	00 00       	NOP;
   1101c:	2a e4 37 00 	R2 = [P5 + 0xdc];
   11020:	29 e4 3e 00 	R1 = [P5 + 0xf8];
   11024:	0a 52       	R0 = R2 - R1;
   11026:	80 0c       	CC = R0 < 0x0;
   11028:	14 18       	IF CC JUMP 0x11050 <_mDNS_Execute+0xcd8>;
   1102a:	f1 b0       	[SP + 0xc] = R1;
   1102c:	30 b1       	[SP + 0x10] = R0;
   1102e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5530(21808) */
   11032:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   11034:	01 e1 60 55 	R1.L = 0x5560;		/* (21856)	R1=0x5560(21856) */
   11038:	ff e3 e4 77 	CALL 0x0 <_AddRecordToResponseList>;
   1103c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   11040:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   11044:	11 91       	R1 = [P2];
   11046:	28 e4 37 00 	R0 = [P5 + 0xdc];
   1104a:	01 50       	R0 = R1 + R0;
   1104c:	28 e6 3e 00 	[P5 + 0xf8] = R0;
   11050:	29 e4 37 00 	R1 = [P5 + 0xdc];
   11054:	28 e4 3f 00 	R0 = [P5 + 0xfc];
   11058:	01 52       	R0 = R1 - R0;
   1105a:	80 0c       	CC = R0 < 0x0;
   1105c:	04 18       	IF CC JUMP 0x11064 <_mDNS_Execute+0xcec>;
   1105e:	45 30       	R0 = P5;
   11060:	ff e3 88 ee 	CALL 0xed70 <_SendResponses>;
   11064:	29 e4 37 00 	R1 = [P5 + 0xdc];
   11068:	28 e4 3f 00 	R0 = [P5 + 0xfc];
   1106c:	01 52       	R0 = R1 - R0;
   1106e:	80 0c       	CC = R0 < 0x0;
   11070:	12 18       	IF CC JUMP 0x11094 <_mDNS_Execute+0xd1c>;
   11072:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5560(21856) */
   11076:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   11078:	01 e1 c4 55 	R1.L = 0x55c4;		/* (21956)	R1=0x55c4(21956) */
   1107c:	ff e3 c2 77 	CALL 0x0 <_AddRecordToResponseList>;
   11080:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   11084:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   11088:	11 91       	R1 = [P2];
   1108a:	28 e4 37 00 	R0 = [P5 + 0xdc];
   1108e:	01 50       	R0 = R1 + R0;
   11090:	28 e6 3f 00 	[P5 + 0xfc] = R0;
   11094:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   11096:	29 e4 4b 00 	R1 = [P5 + 0x12c];
   1109a:	28 e6 42 00 	[P5 + 0x108] = R0;
   1109e:	28 e6 43 00 	[P5 + 0x10c] = R0;
   110a2:	01 0c       	CC = R1 == 0x0;
   110a4:	65 1c       	IF CC JUMP 0x1116e <_mDNS_Execute+0xdf6> (BP);
   110a6:	28 e4 37 00 	R0 = [P5 + 0xdc];
   110aa:	48 52       	R1 = R0 - R1;
   110ac:	81 0c       	CC = R1 < 0x0;
   110ae:	60 18       	IF CC JUMP 0x1116e <_mDNS_Execute+0xdf6>;
   110b0:	f9 63       	R1 = -0x1 (X);		/*		R1=0xffffffff( -1) */
   110b2:	41 e1 ff 3f 	R1.H = 0x3fff;		/* (16383)	R1=0x3fffffff(1073741823) */
   110b6:	08 50       	R0 = R0 + R1;
   110b8:	2c e5 4e 00 	P4 = [P5 + 0x138];
   110bc:	28 e6 4b 00 	[P5 + 0x12c] = R0;
   110c0:	44 0c       	CC = P4 == 0x0;
   110c2:	11 1c       	IF CC JUMP 0x110e4 <_mDNS_Execute+0xd6c> (BP);
   110c4:	60 e5 1a 01 	R0 = W[P4 + 0x234] (X);
   110c8:	ff e3 9c 77 	CALL 0x0 <_AddRecordToResponseList>;
   110cc:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
   110d0:	94 5a       	P2 = P4 + P2;
   110d2:	f0 b0       	[SP + 0xc] = R0;
   110d4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xffff(65535) */
   110d8:	52 30       	R2 = P2;
   110da:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   110dc:	01 e1 1c 56 	R1.L = 0x561c;		/* (22044)	R1=0x561c(22044) */
   110e0:	ff e3 90 77 	CALL 0x0 <_AddRecordToResponseList>;
   110e4:	00 00       	NOP;
   110e6:	28 e4 4c 00 	R0 = [P5 + 0x130];
   110ea:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
   110ee:	28 e6 4e 00 	[P5 + 0x138] = R0;
   110f2:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
   110f6:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
   110f8:	27 e1 34 01 	R7 = 0x134 (X);		/*		R7=0x134(308) */
   110fc:	31 20       	JUMP.S 0x1115e <_mDNS_Execute+0xde6>;
   110fe:	00 00       	NOP;
   11100:	20 e4 2f 00 	R0 = [P4 + 0xbc];
   11104:	00 0c       	CC = R0 == 0x0;
   11106:	24 1c       	IF CC JUMP 0x1114e <_mDNS_Execute+0xdd6> (BP);
   11108:	29 e4 37 00 	R1 = [P5 + 0xdc];
   1110c:	41 52       	R1 = R1 - R0;
   1110e:	81 0c       	CC = R1 < 0x0;
   11110:	18 18       	IF CC JUMP 0x11140 <_mDNS_Execute+0xdc8>;
   11112:	18 91       	R0 = [P3];
   11114:	00 0c       	CC = R0 == 0x0;
   11116:	0b 1c       	IF CC JUMP 0x1112c <_mDNS_Execute+0xdb4> (BP);
   11118:	44 30       	R0 = P4;
   1111a:	f1 b0       	[SP + 0xc] = R1;
   1111c:	b8 50       	R2 = R0 + R7;
   1111e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x561c(22044) */
   11122:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
   11124:	01 e1 60 56 	R1.L = 0x5660;		/* (22112)	R1=0x5660(22112) */
   11128:	ff e3 6c 77 	CALL 0x0 <_AddRecordToResponseList>;
   1112c:	45 30       	R0 = P5;
   1112e:	ff e3 45 d0 	CALL 0xb1b8 <_GenerateNegativeResponse>;
   11132:	2a e5 4e 00 	P2 = [P5 + 0x138];
   11136:	62 08       	CC = P2 == P4;
   11138:	0b 14       	IF !CC JUMP 0x1114e <_mDNS_Execute+0xdd6> (BP);
   1113a:	16 e6 2f 00 	[P2 + 0xbc] = R6;
   1113e:	08 20       	JUMP.S 0x1114e <_mDNS_Execute+0xdd6>;
   11140:	29 e4 4b 00 	R1 = [P5 + 0x12c];
   11144:	41 52       	R1 = R1 - R0;
   11146:	01 0d       	CC = R1 <= 0x0;
   11148:	03 1c       	IF CC JUMP 0x1114e <_mDNS_Execute+0xdd6> (BP);
   1114a:	28 e6 4b 00 	[P5 + 0x12c] = R0;
   1114e:	00 00       	NOP;
   11150:	2a e5 4e 00 	P2 = [P5 + 0x138];
   11154:	62 08       	CC = P2 == P4;
   11156:	04 14       	IF !CC JUMP 0x1115e <_mDNS_Execute+0xde6> (BP);
   11158:	10 91       	R0 = [P2];
   1115a:	28 e6 4e 00 	[P5 + 0x138] = R0;
   1115e:	00 00       	NOP;
   11160:	2c e5 4e 00 	P4 = [P5 + 0x138];
   11164:	44 0c       	CC = P4 == 0x0;
   11166:	cc 17       	IF !CC JUMP 0x110fe <_mDNS_Execute+0xd86> (BP);
   11168:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   1116a:	28 e6 4e 00 	[P5 + 0x138] = R0;
   1116e:	00 00       	NOP;
   11170:	28 e4 fc 07 	R0 = [P5 + 0x1ff0];
   11174:	00 0c       	CC = R0 == 0x0;
   11176:	09 1c       	IF CC JUMP 0x11188 <_mDNS_Execute+0xe10> (BP);
   11178:	29 e4 37 00 	R1 = [P5 + 0xdc];
   1117c:	01 52       	R0 = R1 - R0;
   1117e:	80 0c       	CC = R0 < 0x0;
   11180:	04 18       	IF CC JUMP 0x11188 <_mDNS_Execute+0xe10>;
   11182:	45 30       	R0 = P5;
   11184:	ff e3 3e 77 	CALL 0x0 <_AddRecordToResponseList>;
   11188:	00 00       	NOP;
   1118a:	29 e4 37 00 	R1 = [P5 + 0xdc];
   1118e:	28 e4 40 00 	R0 = [P5 + 0x100];
   11192:	01 52       	R0 = R1 - R0;
   11194:	80 0c       	CC = R0 < 0x0;
   11196:	04 18       	IF CC JUMP 0x1119e <_mDNS_Execute+0xe26>;
   11198:	45 30       	R0 = P5;
   1119a:	ff e3 33 77 	CALL 0x0 <_AddRecordToResponseList>;
   1119e:	29 e4 37 00 	R1 = [P5 + 0xdc];
   111a2:	28 e4 fb 07 	R0 = [P5 + 0x1fec];
   111a6:	01 52       	R0 = R1 - R0;
   111a8:	80 0c       	CC = R0 < 0x0;
   111aa:	04 18       	IF CC JUMP 0x111b2 <_mDNS_Execute+0xe3a>;
   111ac:	45 30       	R0 = P5;
   111ae:	ff e3 29 77 	CALL 0x0 <_AddRecordToResponseList>;
   111b2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5660(22112) */
   111b6:	45 30       	R0 = P5;
   111b8:	01 e1 ac 04 	R1.L = 0x4ac;		/* (1196)	R1=0x4ac(1196) */
   111bc:	ff e3 22 77 	CALL 0x0 <_AddRecordToResponseList>;
   111c0:	e6 6d       	SP += 0x3c;		/* ( 60) */
   111c2:	26 6c       	SP += 0x4;		/* (  4) */
   111c4:	77 90       	FP = [SP++];
   111c6:	28 e4 39 00 	R0 = [P5 + 0xe4];
   111ca:	27 01       	RETS = [SP++];
   111cc:	a3 05       	(R7:4, P5:3) = [SP++];
   111ce:	10 00       	RTS;

000111d0 <_mDNSCoreReadyForSleep>:
_mDNSCoreReadyForSleep():
   111d0:	e3 05       	[--SP] = (R7:4, P5:3);
   111d2:	28 32       	P5 = R0;
   111d4:	39 30       	R7 = R1;
   111d6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4ac(1196) */
   111da:	00 e8 05 00 	LINK 0x14;		/* (20) */
   111de:	01 e1 6c 04 	R1.L = 0x46c;		/* (1132)	R1=0x46c(1132) */
   111e2:	ff e3 0f 77 	CALL 0x0 <_AddRecordToResponseList>;
   111e6:	28 e4 48 00 	R0 = [P5 + 0x120];
   111ea:	00 0c       	CC = R0 == 0x0;
   111ec:	c9 15       	IF !CC JUMP 0x1157e <_mDNSCoreReadyForSleep+0x3ae> (BP);
   111ee:	28 e4 49 00 	R0 = [P5 + 0x124];
   111f2:	38 52       	R0 = R0 - R7;
   111f4:	00 0d       	CC = R0 <= 0x0;
   111f6:	06 1c       	IF CC JUMP 0x11202 <_mDNSCoreReadyForSleep+0x32> (BP);
   111f8:	28 e4 4a 00 	R0 = [P5 + 0x128];
   111fc:	38 52       	R0 = R0 - R7;
   111fe:	00 0d       	CC = R0 <= 0x0;
   11200:	bf 15       	IF !CC JUMP 0x1157e <_mDNSCoreReadyForSleep+0x3ae> (BP);
   11202:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
   11204:	f0 4f       	R0 <<= 0x1e;
   11206:	07 50       	R0 = R7 + R0;
   11208:	28 e6 4a 00 	[P5 + 0x128] = R0;
   1120c:	28 e4 f7 07 	R0 = [P5 + 0x1fdc];
   11210:	ff e3 f8 76 	CALL 0x0 <_AddRecordToResponseList>;
   11214:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
   11218:	4f e1 00 00 	FP.H = 0x0;		/* (  0)	FP=0x134 */
   1121c:	20 32       	P4 = R0;
   1121e:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
   11222:	0f e1 00 00 	FP.L = 0x0;		/* (  0)	FP=0x0 <_AddRecordToResponseList> */
   11226:	25 e1 74 14 	R5 = 0x1474 (X);		/*		R5=0x1474(5236) */
   1122a:	30 20       	JUMP.S 0x1128a <_mDNSCoreReadyForSleep+0xba>;
   1122c:	00 00       	NOP;
   1122e:	26 e4 77 02 	R6 = [P4 + 0x9dc];
   11232:	86 0c       	CC = R6 < 0x0;
   11234:	26 1c       	IF CC JUMP 0x11280 <_mDNSCoreReadyForSleep+0xb0> (BP);
   11236:	20 e4 78 02 	R0 = [P4 + 0x9e0];
   1123a:	47 52       	R1 = R7 - R0;
   1123c:	81 0c       	CC = R1 < 0x0;
   1123e:	1a 18       	IF CC JUMP 0x11272 <_mDNSCoreReadyForSleep+0xa2>;
   11240:	18 91       	R0 = [P3];
   11242:	00 0c       	CC = R0 == 0x0;
   11244:	11 1c       	IF CC JUMP 0x11266 <_mDNSCoreReadyForSleep+0x96> (BP);
   11246:	44 30       	R0 = P4;
   11248:	28 51       	R4 = R0 + R5;
   1124a:	19 60       	R1 = 0x3 (X);		/*		R1=0x3(  3) */
   1124c:	06 30       	R0 = R6;
   1124e:	ff e3 d9 76 	CALL 0x0 <_AddRecordToResponseList>;
   11252:	f0 b0       	[SP + 0xc] = R0;
   11254:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3(  3) */
   11258:	36 b1       	[SP + 0x10] = R6;
   1125a:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
   1125c:	01 e1 94 56 	R1.L = 0x5694;		/* (22164)	R1=0x5694(22164) */
   11260:	14 30       	R2 = R4;
   11262:	ff e3 cf 76 	CALL 0x0 <_AddRecordToResponseList>;
   11266:	45 30       	R0 = P5;
   11268:	4c 30       	R1 = P4;
   1126a:	3a 95       	R2 = W[FP] (Z);
   1126c:	ff e3 34 ed 	CALL 0xecd4 <_SendSPSRegistration>;
   11270:	08 20       	JUMP.S 0x11280 <_mDNSCoreReadyForSleep+0xb0>;
   11272:	29 e4 4a 00 	R1 = [P5 + 0x128];
   11276:	41 52       	R1 = R1 - R0;
   11278:	01 0d       	CC = R1 <= 0x0;
   1127a:	03 1c       	IF CC JUMP 0x11280 <_mDNSCoreReadyForSleep+0xb0> (BP);
   1127c:	28 e6 4a 00 	[P5 + 0x128] = R0;
   11280:	00 00       	NOP;
   11282:	20 91       	R0 = [P4];
   11284:	ff e3 be 76 	CALL 0x0 <_AddRecordToResponseList>;
   11288:	20 32       	P4 = R0;
   1128a:	44 0c       	CC = P4 == 0x0;
   1128c:	d0 17       	IF !CC JUMP 0x1122c <_mDNSCoreReadyForSleep+0x5c> (BP);
   1128e:	28 e4 f7 07 	R0 = [P5 + 0x1fdc];
   11292:	ff e3 b7 76 	CALL 0x0 <_AddRecordToResponseList>;
   11296:	20 32       	P4 = R0;
   11298:	26 e1 64 02 	R6 = 0x264 (X);		/*		R6=0x264(612) */
   1129c:	35 20       	JUMP.S 0x11306 <_mDNSCoreReadyForSleep+0x136>;
   1129e:	00 00       	NOP;
   112a0:	20 e4 77 02 	R0 = [P4 + 0x9dc];
   112a4:	00 0c       	CC = R0 == 0x0;
   112a6:	06 1c       	IF CC JUMP 0x112b2 <_mDNSCoreReadyForSleep+0xe2> (BP);
   112a8:	19 60       	R1 = 0x3 (X);		/*		R1=0x3(  3) */
   112aa:	f8 67       	R0 += -0x1;		/* ( -1) */
   112ac:	ff e3 aa 76 	CALL 0x0 <_AddRecordToResponseList>;
   112b0:	02 20       	JUMP.S 0x112b4 <_mDNSCoreReadyForSleep+0xe4>;
   112b2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   112b4:	f0 40       	R0 *= R6;
   112b6:	18 32       	P3 = R0;
   112b8:	9c 5a       	P2 = P4 + P3;
   112ba:	10 e4 9f 00 	R0 = [P2 + 0x27c];
   112be:	80 0c       	CC = R0 < 0x0;
   112c0:	1e 1c       	IF CC JUMP 0x112fc <_mDNSCoreReadyForSleep+0x12c> (BP);
   112c2:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x3e7 */
   112c6:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
   112ca:	08 91       	R0 = [P1];
   112cc:	00 0c       	CC = R0 == 0x0;
   112ce:	d3 1c       	IF CC JUMP 0x11474 <_mDNSCoreReadyForSleep+0x2a4> (BP);
   112d0:	50 e5 50 02 	R0 = W[P2 + 0x4a0] (X);
   112d4:	ff e3 96 76 	CALL 0x0 <_AddRecordToResponseList>;
   112d8:	2a e1 74 14 	P2 = 0x1474 (X);		/*		P2=0x1474(5236) */
   112dc:	94 5a       	P2 = P4 + P2;
   112de:	52 30       	R2 = P2;
   112e0:	2a e1 a0 03 	P2 = 0x3a0 (X);		/*		P2=0x3a0(928) */
   112e4:	d3 5a       	P3 = P3 + P2;
   112e6:	1c 5b       	P4 = P4 + P3;
   112e8:	30 b1       	[SP + 0x10] = R0;
   112ea:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3(  3) */
   112ee:	f4 bc       	[SP + 0xc] = P4;
   112f0:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
   112f2:	01 e1 cc 56 	R1.L = 0x56cc;		/* (22220)	R1=0x56cc(22220) */
   112f6:	ff e3 85 76 	CALL 0x0 <_AddRecordToResponseList>;
   112fa:	bd 20       	JUMP.S 0x11474 <_mDNSCoreReadyForSleep+0x2a4>;
   112fc:	00 00       	NOP;
   112fe:	20 91       	R0 = [P4];
   11300:	ff e3 80 76 	CALL 0x0 <_AddRecordToResponseList>;
   11304:	20 32       	P4 = R0;
   11306:	44 0c       	CC = P4 == 0x0;
   11308:	cb 17       	IF !CC JUMP 0x1129e <_mDNSCoreReadyForSleep+0xce> (BP);
   1130a:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
   1130e:	2c e5 f2 07 	P4 = [P5 + 0x1fc8];
   11312:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
   11316:	35 20       	JUMP.S 0x11380 <_mDNSCoreReadyForSleep+0x1b0>;
   11318:	00 00       	NOP;
   1131a:	e1 a1       	R1 = [P4 + 0x1c];
   1131c:	18 91       	R0 = [P3];
   1131e:	01 08       	CC = R1 == R0;
   11320:	0a 14       	IF !CC JUMP 0x11334 <_mDNSCoreReadyForSleep+0x164> (BP);
   11322:	a0 e4 46 00 	R0 = B[P4 + 0x46] (Z);
   11326:	00 0c       	CC = R0 == 0x0;
   11328:	06 14       	IF !CC JUMP 0x11334 <_mDNSCoreReadyForSleep+0x164> (BP);
   1132a:	20 a2       	R0 = [P4 + 0x20];
   1132c:	ff e3 6a 76 	CALL 0x0 <_AddRecordToResponseList>;
   11330:	00 0c       	CC = R0 == 0x0;
   11332:	25 1c       	IF CC JUMP 0x1137c <_mDNSCoreReadyForSleep+0x1ac> (BP);
   11334:	00 00       	NOP;
   11336:	60 e4 7a 00 	R0 = W[P4 + 0xf4] (Z);
   1133a:	00 0c       	CC = R0 == 0x0;
   1133c:	20 1c       	IF CC JUMP 0x1137c <_mDNSCoreReadyForSleep+0x1ac> (BP);
   1133e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x3a0 */
   11342:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   11346:	10 91       	R0 = [P2];
   11348:	00 0c       	CC = R0 == 0x0;
   1134a:	95 1c       	IF CC JUMP 0x11474 <_mDNSCoreReadyForSleep+0x2a4> (BP);
   1134c:	a6 e4 f4 00 	R6 = B[P4 + 0xf4] (Z);
   11350:	a0 e4 f5 00 	R0 = B[P4 + 0xf5] (Z);
   11354:	46 4f       	R6 <<= 0x8;
   11356:	b0 57       	R6 = R0 | R6;
   11358:	61 a2       	R1 = [P4 + 0x24];
   1135a:	44 30       	R0 = P4;
   1135c:	55 30       	R2 = P5;
   1135e:	21 64       	R1 += 0x4;		/* (  4) */
   11360:	ba 65       	R2 += 0x37;		/* ( 55) */
   11362:	20 64       	R0 += 0x4;		/* (  4) */
   11364:	ff e3 4e 76 	CALL 0x0 <_AddRecordToResponseList>;
   11368:	f0 b0       	[SP + 0xc] = R0;
   1136a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x56cc(22220) */
   1136e:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
   11370:	01 e1 08 57 	R1.L = 0x5708;		/* (22280)	R1=0x5708(22280) */
   11374:	16 30       	R2 = R6;
   11376:	ff e3 45 76 	CALL 0x0 <_AddRecordToResponseList>;
   1137a:	7d 20       	JUMP.S 0x11474 <_mDNSCoreReadyForSleep+0x2a4>;
   1137c:	00 00       	NOP;
   1137e:	64 91       	P4 = [P4];
   11380:	44 0c       	CC = P4 == 0x0;
   11382:	cb 17       	IF !CC JUMP 0x11318 <_mDNSCoreReadyForSleep+0x148> (BP);
   11384:	2c e5 4c 00 	P4 = [P5 + 0x130];
   11388:	2a 20       	JUMP.S 0x113dc <_mDNSCoreReadyForSleep+0x20c>;
   1138a:	00 00       	NOP;
   1138c:	60 e4 99 00 	R0 = W[P4 + 0x132] (Z);
   11390:	00 0c       	CC = R0 == 0x0;
   11392:	23 1c       	IF CC JUMP 0x113d8 <_mDNSCoreReadyForSleep+0x208> (BP);
   11394:	20 e4 8e 00 	R0 = [P4 + 0x238];
   11398:	00 0c       	CC = R0 == 0x0;
   1139a:	1f 1c       	IF CC JUMP 0x113d8 <_mDNSCoreReadyForSleep+0x208> (BP);
   1139c:	20 e4 41 00 	R0 = [P4 + 0x104];
   113a0:	00 0c       	CC = R0 == 0x0;
   113a2:	1b 14       	IF !CC JUMP 0x113d8 <_mDNSCoreReadyForSleep+0x208> (BP);
   113a4:	20 e4 3e 00 	R0 = [P4 + 0xf8];
   113a8:	00 0c       	CC = R0 == 0x0;
   113aa:	17 1c       	IF CC JUMP 0x113d8 <_mDNSCoreReadyForSleep+0x208> (BP);
   113ac:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   113b0:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   113b4:	10 91       	R0 = [P2];
   113b6:	00 0c       	CC = R0 == 0x0;
   113b8:	e3 1c       	IF CC JUMP 0x1157e <_mDNSCoreReadyForSleep+0x3ae> (BP);
   113ba:	60 e5 1a 01 	R0 = W[P4 + 0x234] (X);
   113be:	ff e3 21 76 	CALL 0x0 <_AddRecordToResponseList>;
   113c2:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
   113c6:	94 5a       	P2 = P4 + P2;
   113c8:	f0 b0       	[SP + 0xc] = R0;
   113ca:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5708(22280) */
   113ce:	52 30       	R2 = P2;
   113d0:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
   113d2:	01 e1 40 57 	R1.L = 0x5740;		/* (22336)	R1=0x5740(22336) */
   113d6:	3f 20       	JUMP.S 0x11454 <_mDNSCoreReadyForSleep+0x284>;
   113d8:	00 00       	NOP;
   113da:	64 91       	P4 = [P4];
   113dc:	44 0c       	CC = P4 == 0x0;
   113de:	d6 17       	IF !CC JUMP 0x1138a <_mDNSCoreReadyForSleep+0x1ba> (BP);
   113e0:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
   113e4:	2c e5 f2 07 	P4 = [P5 + 0x1fc8];
   113e8:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
   113ec:	39 20       	JUMP.S 0x1145e <_mDNSCoreReadyForSleep+0x28e>;
   113ee:	00 00       	NOP;
   113f0:	e1 a1       	R1 = [P4 + 0x1c];
   113f2:	18 91       	R0 = [P3];
   113f4:	01 08       	CC = R1 == R0;
   113f6:	32 14       	IF !CC JUMP 0x1145a <_mDNSCoreReadyForSleep+0x28a> (BP);
   113f8:	a0 e4 46 00 	R0 = B[P4 + 0x46] (Z);
   113fc:	00 0c       	CC = R0 == 0x0;
   113fe:	2e 14       	IF !CC JUMP 0x1145a <_mDNSCoreReadyForSleep+0x28a> (BP);
   11400:	20 a2       	R0 = [P4 + 0x20];
   11402:	ff e3 ff 75 	CALL 0x0 <_AddRecordToResponseList>;
   11406:	00 0c       	CC = R0 == 0x0;
   11408:	29 14       	IF !CC JUMP 0x1145a <_mDNSCoreReadyForSleep+0x28a> (BP);
   1140a:	20 e4 39 00 	R0 = [P4 + 0xe4];
   1140e:	29 60       	R1 = 0x5 (X);		/*		R1=0x5(  5) */
   11410:	08 08       	CC = R0 == R1;
   11412:	24 14       	IF !CC JUMP 0x1145a <_mDNSCoreReadyForSleep+0x28a> (BP);
   11414:	20 e4 40 00 	R0 = [P4 + 0x100];
   11418:	00 0c       	CC = R0 == 0x0;
   1141a:	20 1c       	IF CC JUMP 0x1145a <_mDNSCoreReadyForSleep+0x28a> (BP);
   1141c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
   11420:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   11424:	10 91       	R0 = [P2];
   11426:	00 0c       	CC = R0 == 0x0;
   11428:	ab 1c       	IF CC JUMP 0x1157e <_mDNSCoreReadyForSleep+0x3ae> (BP);
   1142a:	a7 e4 f4 00 	R7 = B[P4 + 0xf4] (Z);
   1142e:	a0 e4 f5 00 	R0 = B[P4 + 0xf5] (Z);
   11432:	47 4f       	R7 <<= 0x8;
   11434:	f8 57       	R7 = R0 | R7;
   11436:	61 a2       	R1 = [P4 + 0x24];
   11438:	44 30       	R0 = P4;
   1143a:	55 30       	R2 = P5;
   1143c:	21 64       	R1 += 0x4;		/* (  4) */
   1143e:	ba 65       	R2 += 0x37;		/* ( 55) */
   11440:	20 64       	R0 += 0x4;		/* (  4) */
   11442:	ff e3 df 75 	CALL 0x0 <_AddRecordToResponseList>;
   11446:	f0 b0       	[SP + 0xc] = R0;
   11448:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5(  5) */
   1144c:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
   1144e:	01 e1 74 57 	R1.L = 0x5774;		/* (22388)	R1=0x5774(22388) */
   11452:	17 30       	R2 = R7;
   11454:	ff e3 d6 75 	CALL 0x0 <_AddRecordToResponseList>;
   11458:	93 20       	JUMP.S 0x1157e <_mDNSCoreReadyForSleep+0x3ae>;
   1145a:	00 00       	NOP;
   1145c:	64 91       	P4 = [P4];
   1145e:	44 0c       	CC = P4 == 0x0;
   11460:	c7 17       	IF !CC JUMP 0x113ee <_mDNSCoreReadyForSleep+0x21e> (BP);
   11462:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5774(22388) */
   11466:	45 30       	R0 = P5;
   11468:	01 e1 6c 04 	R1.L = 0x46c;		/* (1132)	R1=0x46c(1132) */
   1146c:	ff e3 ca 75 	CALL 0x0 <_AddRecordToResponseList>;
   11470:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
   11472:	8e 20       	JUMP.S 0x1158e <_mDNSCoreReadyForSleep+0x3be>;
   11474:	00 00       	NOP;
   11476:	28 e4 49 00 	R0 = [P5 + 0x124];
   1147a:	07 52       	R0 = R7 - R0;
   1147c:	80 0c       	CC = R0 < 0x0;
   1147e:	80 18       	IF CC JUMP 0x1157e <_mDNSCoreReadyForSleep+0x3ae>;
   11480:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x46c(1132) */
   11484:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   11486:	01 e1 b0 57 	R1.L = 0x57b0;		/* (22448)	R1=0x57b0(22448) */
   1148a:	ff e3 bb 75 	CALL 0x0 <_AddRecordToResponseList>;
   1148e:	28 e4 f7 07 	R0 = [P5 + 0x1fdc];
   11492:	ff e3 b7 75 	CALL 0x0 <_AddRecordToResponseList>;
   11496:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
   1149a:	20 32       	P4 = R0;
   1149c:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
   114a0:	26 e1 74 14 	R6 = 0x1474 (X);		/*		R6=0x1474(5236) */
   114a4:	2f e1 a0 03 	FP = 0x3a0 (X);		/*		FP=0x3a0(928) */
   114a8:	20 20       	JUMP.S 0x114e8 <_mDNSCoreReadyForSleep+0x318>;
   114aa:	00 00       	NOP;
   114ac:	a0 a1       	R0 = [P4 + 0x18];
   114ae:	80 0c       	CC = R0 < 0x0;
   114b0:	18 18       	IF CC JUMP 0x114e0 <_mDNSCoreReadyForSleep+0x310>;
   114b2:	18 91       	R0 = [P3];
   114b4:	00 0c       	CC = R0 == 0x0;
   114b6:	11 1c       	IF CC JUMP 0x114d8 <_mDNSCoreReadyForSleep+0x308> (BP);
   114b8:	60 e5 50 02 	R0 = W[P4 + 0x4a0] (X);
   114bc:	ff e3 a2 75 	CALL 0x0 <_AddRecordToResponseList>;
   114c0:	4c 30       	R1 = P4;
   114c2:	b1 50       	R2 = R1 + R6;
   114c4:	bc 5a       	P2 = P4 + FP;
   114c6:	30 b1       	[SP + 0x10] = R0;
   114c8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x57b0(22448) */
   114cc:	f2 bc       	[SP + 0xc] = P2;
   114ce:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
   114d0:	01 e1 e4 57 	R1.L = 0x57e4;		/* (22500)	R1=0x57e4(22500) */
   114d4:	ff e3 96 75 	CALL 0x0 <_AddRecordToResponseList>;
   114d8:	45 30       	R0 = P5;
   114da:	4c 30       	R1 = P4;
   114dc:	ff e3 84 b9 	CALL 0x87e4 <_mDNS_DeactivateNetWake_internal>;
   114e0:	20 91       	R0 = [P4];
   114e2:	ff e3 8f 75 	CALL 0x0 <_AddRecordToResponseList>;
   114e6:	20 32       	P4 = R0;
   114e8:	44 0c       	CC = P4 == 0x0;
   114ea:	e0 17       	IF !CC JUMP 0x114aa <_mDNSCoreReadyForSleep+0x2da> (BP);
   114ec:	4f e1 00 00 	FP.H = 0x0;		/* (  0)	FP=0x3a0 */
   114f0:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0x1474(5236) */
   114f4:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
   114f8:	6d 30       	R5 = P5;
   114fa:	2c e5 f2 07 	P4 = [P5 + 0x1fc8];
   114fe:	0f e1 00 00 	FP.L = 0x0;		/* (  0)	FP=0x0 <_AddRecordToResponseList> */
   11502:	06 e1 00 00 	R6.L = 0x0;		/* (  0)	R6=0x0 <_AddRecordToResponseList>(  0) */
   11506:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
   1150a:	bd 65       	R5 += 0x37;		/* ( 55) */
   1150c:	2c 20       	JUMP.S 0x11564 <_mDNSCoreReadyForSleep+0x394>;
   1150e:	00 00       	NOP;
   11510:	e1 a1       	R1 = [P4 + 0x1c];
   11512:	38 91       	R0 = [FP];
   11514:	01 08       	CC = R1 == R0;
   11516:	0a 14       	IF !CC JUMP 0x1152a <_mDNSCoreReadyForSleep+0x35a> (BP);
   11518:	a0 e4 46 00 	R0 = B[P4 + 0x46] (Z);
   1151c:	00 0c       	CC = R0 == 0x0;
   1151e:	06 14       	IF !CC JUMP 0x1152a <_mDNSCoreReadyForSleep+0x35a> (BP);
   11520:	20 a2       	R0 = [P4 + 0x20];
   11522:	ff e3 6f 75 	CALL 0x0 <_AddRecordToResponseList>;
   11526:	00 0c       	CC = R0 == 0x0;
   11528:	1c 1c       	IF CC JUMP 0x11560 <_mDNSCoreReadyForSleep+0x390> (BP);
   1152a:	00 00       	NOP;
   1152c:	60 e4 7a 00 	R0 = W[P4 + 0xf4] (Z);
   11530:	00 0c       	CC = R0 == 0x0;
   11532:	17 1c       	IF CC JUMP 0x11560 <_mDNSCoreReadyForSleep+0x390> (BP);
   11534:	16 32       	P2 = R6;
   11536:	10 91       	R0 = [P2];
   11538:	00 0c       	CC = R0 == 0x0;
   1153a:	10 1c       	IF CC JUMP 0x1155a <_mDNSCoreReadyForSleep+0x38a> (BP);
   1153c:	61 a2       	R1 = [P4 + 0x24];
   1153e:	44 30       	R0 = P4;
   11540:	21 64       	R1 += 0x4;		/* (  4) */
   11542:	15 30       	R2 = R5;
   11544:	20 64       	R0 += 0x4;		/* (  4) */
   11546:	ff e3 5d 75 	CALL 0x0 <_AddRecordToResponseList>;
   1154a:	10 30       	R2 = R0;
   1154c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x57e4(22500) */
   11550:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
   11552:	01 e1 18 58 	R1.L = 0x5818;		/* (22552)	R1=0x5818(22552) */
   11556:	ff e3 55 75 	CALL 0x0 <_AddRecordToResponseList>;
   1155a:	18 95       	R0 = W[P3] (Z);
   1155c:	60 e6 7a 00 	W[P4 + 0xf4] = R0;
   11560:	00 00       	NOP;
   11562:	64 91       	P4 = [P4];
   11564:	44 0c       	CC = P4 == 0x0;
   11566:	d4 17       	IF !CC JUMP 0x1150e <_mDNSCoreReadyForSleep+0x33e> (BP);
   11568:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   1156c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   11570:	10 91       	R0 = [P2];
   11572:	c7 51       	R7 = R7 + R0;
   11574:	2f e6 49 00 	[P5 + 0x124] = R7;
   11578:	45 30       	R0 = P5;
   1157a:	ff e3 c9 f5 	CALL 0x1010c <_SendSleepGoodbyes>;
   1157e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5818(22552) */
   11582:	45 30       	R0 = P5;
   11584:	01 e1 6c 04 	R1.L = 0x46c;		/* (1132)	R1=0x46c(1132) */
   11588:	ff e3 3c 75 	CALL 0x0 <_AddRecordToResponseList>;
   1158c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   1158e:	a6 6c       	SP += 0x14;		/* ( 20) */
   11590:	77 90       	FP = [SP++];
   11592:	27 01       	RETS = [SP++];
   11594:	a3 05       	(R7:4, P5:3) = [SP++];
   11596:	10 00       	RTS;

00011598 <_NetWakeResolve>:
_NetWakeResolve():
   11598:	eb 05       	[--SP] = (R7:5, P5:3);
   1159a:	29 32       	P5 = R1;
   1159c:	2a e1 6c 02 	P2 = 0x26c (X);		/*		P2=0x26c(620) */
   115a0:	38 30       	R7 = R0;
   115a2:	40 e1 fe a8 	R0.H = 0xa8fe;		/* (-22274)	R0=0xa8fe0000(-1459748864) */
   115a6:	00 e1 a9 53 	R0.L = 0x53a9;		/* (21417)	R0=0xa8fe53a9(-1459727447) */
   115aa:	2b e5 98 00 	P3 = [P5 + 0x260];
   115ae:	67 01       	[--SP] = RETS;
   115b0:	66 6f       	SP += -0x14;		/* (-20) */
   115b2:	22 32       	P4 = R2;
   115b4:	93 5a       	P2 = P3 + P2;
   115b6:	72 30       	R6 = P2;
   115b8:	b1 53       	R6 = R1 - R6;
   115ba:	16 4d       	R6 >>>= 0x2;
   115bc:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x26c */
   115c0:	c6 40       	R6 *= R0;
   115c2:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   115c6:	10 91       	R0 = [P2];
   115c8:	f5 a3       	R5 = [SP + 0x3c];
   115ca:	00 0c       	CC = R0 == 0x0;
   115cc:	12 1c       	IF CC JUMP 0x115f0 <_NetWakeResolve+0x58> (BP);
   115ce:	21 a2       	R1 = [P4 + 0x20];
   115d0:	17 30       	R2 = R7;
   115d2:	21 64       	R1 += 0x4;		/* (  4) */
   115d4:	ba 65       	R2 += 0x37;		/* ( 55) */
   115d6:	44 30       	R0 = P4;
   115d8:	ff e3 14 75 	CALL 0x0 <_AddRecordToResponseList>;
   115dc:	30 b1       	[SP + 0x10] = R0;
   115de:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x46c(1132) */
   115e2:	f5 b0       	[SP + 0xc] = R5;
   115e4:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
   115e6:	01 e1 40 58 	R1.L = 0x5840;		/* (22592)	R1=0x5840(22592) */
   115ea:	16 30       	R2 = R6;
   115ec:	ff e3 0a 75 	CALL 0x0 <_AddRecordToResponseList>;
   115f0:	05 0c       	CC = R5 == 0x0;
   115f2:	be 1c       	IF CC JUMP 0x1176e <_NetWakeResolve+0x1d6> (BP);
   115f4:	60 a4       	R0 = W[P4 + 0x2] (Z);
   115f6:	69 e4 1a 01 	R1 = W[P5 + 0x234] (Z);
   115fa:	08 08       	CC = R0 == R1;
   115fc:	b9 14       	IF !CC JUMP 0x1176e <_NetWakeResolve+0x1d6> (BP);
   115fe:	09 61       	R1 = 0x21 (X);		/*		R1=0x21( 33) */
   11600:	08 08       	CC = R0 == R1;
   11602:	27 14       	IF !CC JUMP 0x11650 <_NetWakeResolve+0xb8> (BP);
   11604:	4d 30       	R1 = P5;
   11606:	07 30       	R0 = R7;
   11608:	ff e3 7e b5 	CALL 0x8104 <_mDNS_StopQuery>;
   1160c:	20 e1 ea 04 	R0 = 0x4ea (X);		/*		R0=0x4ea(1258) */
   11610:	30 41       	R0 = (R0 + R6) << 0x1;
   11612:	08 32       	P1 = R0;
   11614:	22 ae       	P2 = [P4 + 0x20];
   11616:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
   1161a:	10 a9       	R0 = W[P2 + 0x8] (X);
   1161c:	cb 5a       	P3 = P3 + P1;
   1161e:	18 97       	W[P3] = R0;
   11620:	20 a2       	R0 = [P4 + 0x20];
   11622:	50 64       	R0 += 0xa;		/* ( 10) */
   11624:	48 50       	R1 = R0 + R1;
   11626:	ff e3 ed 74 	CALL 0x0 <_AddRecordToResponseList>;
   1162a:	c2 42       	R2 = R0.L (Z);
   1162c:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
   11630:	02 0a       	CC = R2 <= R0 (IU);
   11632:	0a 14       	IF !CC JUMP 0x11646 <_NetWakeResolve+0xae> (BP);
   11634:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
   11638:	95 5a       	P2 = P5 + P2;
   1163a:	21 a2       	R1 = [P4 + 0x20];
   1163c:	42 30       	R0 = P2;
   1163e:	51 64       	R1 += 0xa;		/* ( 10) */
   11640:	ff e3 e0 74 	CALL 0x0 <_AddRecordToResponseList>;
   11644:	04 20       	JUMP.S 0x1164c <_NetWakeResolve+0xb4>;
   11646:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   11648:	a8 e6 34 01 	B[P5 + 0x134] = R0;
   1164c:	e0 60       	R0 = 0x1c (X);		/*		R0=0x1c( 28) */
   1164e:	4f 20       	JUMP.S 0x116ec <_NetWakeResolve+0x154>;
   11650:	e1 60       	R1 = 0x1c (X);		/*		R1=0x1c( 28) */
   11652:	08 08       	CC = R0 == R1;
   11654:	55 14       	IF !CC JUMP 0x116fe <_NetWakeResolve+0x166> (BP);
   11656:	a0 a5       	R0 = W[P4 + 0xc] (Z);
   11658:	81 60       	R1 = 0x10 (X);		/*		R1=0x10( 16) */
   1165a:	08 08       	CC = R0 == R1;
   1165c:	2e 14       	IF !CC JUMP 0x116b8 <_NetWakeResolve+0x120> (BP);
   1165e:	22 ae       	P2 = [P4 + 0x20];
   11660:	21 e1 fe 00 	R1 = 0xfe (X);		/*		R1=0xfe(254) */
   11664:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
   11668:	08 08       	CC = R0 == R1;
   1166a:	82 14       	IF !CC JUMP 0x1176e <_NetWakeResolve+0x1d6> (BP);
   1166c:	91 e4 05 00 	R1 = B[P2 + 0x5] (Z);
   11670:	20 e1 c0 00 	R0 = 0xc0 (X);		/*		R0=0xc0(192) */
   11674:	01 54       	R0 = R1 & R0;
   11676:	21 e1 80 00 	R1 = 0x80 (X);		/*		R1=0x80(128) */
   1167a:	08 08       	CC = R0 == R1;
   1167c:	79 14       	IF !CC JUMP 0x1176e <_NetWakeResolve+0x1d6> (BP);
   1167e:	07 30       	R0 = R7;
   11680:	4d 30       	R1 = P5;
   11682:	ff e3 41 b5 	CALL 0x8104 <_mDNS_StopQuery>;
   11686:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
   11688:	28 b1       	[P5 + 0x10] = R0;
   1168a:	a0 60       	R0 = 0x14 (X);		/*		R0=0x14( 20) */
   1168c:	f0 40       	R0 *= R6;
   1168e:	08 32       	P1 = R0;
   11690:	30 60       	R0 = 0x6 (X);		/*		R0=0x6(  6) */
   11692:	28 e1 9c 09 	P0 = 0x99c (X);		/*		P0=0x99c(2460) */
   11696:	8b 5a       	P2 = P3 + P1;
   11698:	21 ae       	P1 = [P4 + 0x20];
   1169a:	10 e6 66 02 	[P2 + 0x998] = R0;
   1169e:	02 5a       	P0 = P2 + P0;
   116a0:	50 32       	P2 = P0;
   116a2:	48 a0       	R0 = [P1 + 0x4];
   116a4:	10 92       	[P2++] = R0;
   116a6:	41 6c       	P1 += 0x8;		/* (  8) */
   116a8:	08 90       	R0 = [P1++];
   116aa:	40 b0       	[P0 + 0x4] = R0;
   116ac:	08 90       	R0 = [P1++];
   116ae:	22 6c       	P2 += 0x4;		/* (  4) */
   116b0:	10 92       	[P2++] = R0;
   116b2:	08 91       	R0 = [P1];
   116b4:	10 93       	[P2] = R0;
   116b6:	3b 20       	JUMP.S 0x1172c <_NetWakeResolve+0x194>;
   116b8:	00 0c       	CC = R0 == 0x0;
   116ba:	5a 14       	IF !CC JUMP 0x1176e <_NetWakeResolve+0x1d6> (BP);
   116bc:	07 30       	R0 = R7;
   116be:	4d 30       	R1 = P5;
   116c0:	ff e3 22 b5 	CALL 0x8104 <_mDNS_StopQuery>;
   116c4:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
   116c8:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   116cc:	10 91       	R0 = [P2];
   116ce:	00 0c       	CC = R0 == 0x0;
   116d0:	0d 1c       	IF CC JUMP 0x116ea <_NetWakeResolve+0x152> (BP);
   116d2:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
   116d6:	95 5a       	P2 = P5 + P2;
   116d8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x80(128) */
   116dc:	f2 bc       	[SP + 0xc] = P2;
   116de:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
   116e0:	01 e1 64 58 	R1.L = 0x5864;		/* (22628)	R1=0x5864(22628) */
   116e4:	16 30       	R2 = R6;
   116e6:	ff e3 8d 74 	CALL 0x0 <_AddRecordToResponseList>;
   116ea:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
   116ec:	68 e6 1a 01 	W[P5 + 0x234] = R0;
   116f0:	a6 6c       	SP += 0x14;		/* ( 20) */
   116f2:	27 01       	RETS = [SP++];
   116f4:	07 30       	R0 = R7;
   116f6:	4d 30       	R1 = P5;
   116f8:	ab 05       	(R7:5, P5:3) = [SP++];
   116fa:	ff e2 47 c5 	JUMP.L 0xa188 <_mDNS_StartQuery>;
   116fe:	08 0c       	CC = R0 == 0x1;
   11700:	37 14       	IF !CC JUMP 0x1176e <_NetWakeResolve+0x1d6> (BP);
   11702:	a0 a5       	R0 = W[P4 + 0xc] (Z);
   11704:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
   11706:	08 08       	CC = R0 == R1;
   11708:	33 14       	IF !CC JUMP 0x1176e <_NetWakeResolve+0x1d6> (BP);
   1170a:	07 30       	R0 = R7;
   1170c:	4d 30       	R1 = P5;
   1170e:	ff e3 fb b4 	CALL 0x8104 <_mDNS_StopQuery>;
   11712:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
   11714:	28 b1       	[P5 + 0x10] = R0;
   11716:	a0 60       	R0 = 0x14 (X);		/*		R0=0x14( 20) */
   11718:	f0 40       	R0 *= R6;
   1171a:	08 32       	P1 = R0;
   1171c:	20 60       	R0 = 0x4 (X);		/*		R0=0x4(  4) */
   1171e:	8b 5a       	P2 = P3 + P1;
   11720:	21 ae       	P1 = [P4 + 0x20];
   11722:	10 e6 66 02 	[P2 + 0x998] = R0;
   11726:	48 a0       	R0 = [P1 + 0x4];
   11728:	10 e6 67 02 	[P2 + 0x99c] = R0;
   1172c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4(  4) */
   11730:	07 30       	R0 = R7;
   11732:	01 e1 9c 04 	R1.L = 0x49c;		/* (1180)	R1=0x49c(1180) */
   11736:	ff e3 65 74 	CALL 0x0 <_AddRecordToResponseList>;
   1173a:	18 e4 77 02 	R0 = [P3 + 0x9dc];
   1173e:	19 60       	R1 = 0x3 (X);		/*		R1=0x3(  3) */
   11740:	ff e3 60 74 	CALL 0x0 <_AddRecordToResponseList>;
   11744:	06 08       	CC = R6 == R0;
   11746:	0a 14       	IF !CC JUMP 0x1175a <_NetWakeResolve+0x1c2> (BP);
   11748:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
   1174c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   11750:	07 30       	R0 = R7;
   11752:	4b 30       	R1 = P3;
   11754:	12 95       	R2 = W[P2] (Z);
   11756:	ff e3 bf ea 	CALL 0xecd4 <_SendSPSRegistration>;
   1175a:	a6 6c       	SP += 0x14;		/* ( 20) */
   1175c:	27 01       	RETS = [SP++];
   1175e:	07 30       	R0 = R7;
   11760:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3(  3) */
   11764:	01 e1 9c 04 	R1.L = 0x49c;		/* (1180)	R1=0x49c(1180) */
   11768:	ab 05       	(R7:5, P5:3) = [SP++];
   1176a:	ff e2 4b 74 	JUMP.L 0x0 <_AddRecordToResponseList>;
   1176e:	a6 6c       	SP += 0x14;		/* ( 20) */
   11770:	27 01       	RETS = [SP++];
   11772:	ab 05       	(R7:5, P5:3) = [SP++];
   11774:	10 00       	RTS;
	...

00011778 <_mDNSCoreReceiveRawPacket>:
_mDNSCoreReceiveRawPacket():
   11778:	e3 05       	[--SP] = (R7:4, P5:3);
   1177a:	29 32       	P5 = R1;
   1177c:	00 e8 17 00 	LINK 0x5c;		/* (92) */
   11780:	38 32       	FP = R0;
   11782:	01 30       	R0 = R1;
   11784:	50 65       	R0 += 0x2a;		/* ( 42) */
   11786:	19 32       	P3 = R1;
   11788:	36 e4 23 00 	R6 = [SP + 0x8c];
   1178c:	a5 6c       	P5 += 0x14;		/* ( 20) */
   1178e:	82 09       	CC = R2 < R0 (IU);
   11790:	86 1d       	IF CC JUMP 0x11a9c <_mDNSCoreReceiveRawPacket+0x324> (BP);
   11792:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   11796:	0a e1 8c 00 	P2.L = 0x8c;		/* (140)	P2=0x8c */
   1179a:	19 a6       	R1 = W[P3 + 0x10] (Z);
   1179c:	10 95       	R0 = W[P2] (Z);
   1179e:	01 08       	CC = R1 == R0;
   117a0:	7e 15       	IF !CC JUMP 0x11a9c <_mDNSCoreReceiveRawPacket+0x324> (BP);
   117a2:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x8c */
   117a6:	0a e1 86 00 	P2.L = 0x86;		/* (134)	P2=0x86 */
   117aa:	99 a6       	R1 = W[P3 + 0x14] (Z);
   117ac:	10 95       	R0 = W[P2] (Z);
   117ae:	01 08       	CC = R1 == R0;
   117b0:	76 15       	IF !CC JUMP 0x11a9c <_mDNSCoreReceiveRawPacket+0x324> (BP);
   117b2:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x86 */
   117b6:	0a e1 84 00 	P2.L = 0x84;		/* (132)	P2=0x84 */
   117ba:	69 a4       	R1 = W[P5 + 0x2] (Z);
   117bc:	10 95       	R0 = W[P2] (Z);
   117be:	01 08       	CC = R1 == R0;
   117c0:	6e 15       	IF !CC JUMP 0x11a9c <_mDNSCoreReceiveRawPacket+0x324> (BP);
   117c2:	38 e4 f7 07 	R0 = [FP + 0x1fdc];
   117c6:	0e 30       	R1 = R6;
   117c8:	ff e3 2c 81 	CALL 0x1a20 <_FirstInterfaceForID.clone.0>;
   117cc:	38 30       	R7 = R0;
   117ce:	00 0c       	CC = R0 == 0x0;
   117d0:	02 14       	IF !CC JUMP 0x117d4 <_mDNSCoreReceiveRawPacket+0x5c> (BP);
   117d2:	0c 22       	JUMP.S 0x11bea <_mDNSCoreReceiveRawPacket+0x472>;
   117d4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x49c(1180) */
   117d8:	47 30       	R0 = FP;
   117da:	01 e1 20 01 	R1.L = 0x120;		/* (288)	R1=0x120(288) */
   117de:	ff e3 11 74 	CALL 0x0 <_AddRecordToResponseList>;
   117e2:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x84 */
   117e6:	0a e1 36 01 	P2.L = 0x136;		/* (310)	P2=0x136 */
   117ea:	e9 a4       	R1 = W[P5 + 0x6] (Z);
   117ec:	10 95       	R0 = W[P2] (Z);
   117ee:	01 08       	CC = R1 == R0;
   117f0:	b0 14       	IF !CC JUMP 0x11950 <_mDNSCoreReceiveRawPacket+0x1d8> (BP);
   117f2:	29 a1       	R1 = [P5 + 0x10];
   117f4:	e8 a1       	R0 = [P5 + 0x1c];
   117f6:	01 08       	CC = R1 == R0;
   117f8:	ac 18       	IF CC JUMP 0x11950 <_mDNSCoreReceiveRawPacket+0x1d8>;
   117fa:	0f 32       	P1 = R7;
   117fc:	6b 30       	R5 = P3;
   117fe:	43 30       	R0 = P3;
   11800:	2a e1 74 14 	P2 = 0x1474 (X);		/*		P2=0x1474(5236) */
   11804:	44 e1 00 00 	R4.H = 0x0;		/* (  0)	R4=0x1f3(499) */
   11808:	80 65       	R0 += 0x30;		/* ( 48) */
   1180a:	23 6d       	P3 += 0x24;		/* ( 36) */
   1180c:	51 5a       	P1 = P1 + P2;
   1180e:	3c e5 f2 07 	P4 = [FP + 0x1fc8];
   11812:	04 e1 00 00 	R4.L = 0x0;		/* (  0)	R4=0x0 <_AddRecordToResponseList>(  0) */
   11816:	e5 64       	R5 += 0x1c;		/* ( 28) */
   11818:	b0 b2       	[SP + 0x28] = R0;
   1181a:	f3 be       	[SP + 0x2c] = P3;
   1181c:	31 bf       	[SP + 0x30] = P1;
   1181e:	97 20       	JUMP.S 0x1194c <_mDNSCoreReceiveRawPacket+0x1d4>;
   11820:	00 00       	NOP;
   11822:	e0 a1       	R0 = [P4 + 0x1c];
   11824:	30 08       	CC = R0 == R6;
   11826:	91 14       	IF !CC JUMP 0x11948 <_mDNSCoreReceiveRawPacket+0x1d0> (BP);
   11828:	a0 e4 04 00 	R0 = B[P4 + 0x4] (Z);
   1182c:	08 0c       	CC = R0 == 0x1;
   1182e:	8d 1c       	IF CC JUMP 0x11948 <_mDNSCoreReceiveRawPacket+0x1d0> (BP);
   11830:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
   11832:	20 e4 19 00 	R0 = [P4 + 0x64];
   11836:	08 08       	CC = R0 == R1;
   11838:	88 14       	IF !CC JUMP 0x11948 <_mDNSCoreReceiveRawPacket+0x1d0> (BP);
   1183a:	21 e4 1a 00 	R1 = [P4 + 0x68];
   1183e:	e8 a1       	R0 = [P5 + 0x1c];
   11840:	01 08       	CC = R1 == R0;
   11842:	83 14       	IF !CC JUMP 0x11948 <_mDNSCoreReceiveRawPacket+0x1d0> (BP);
   11844:	a8 a0       	R0 = [P5 + 0x8];
   11846:	21 e4 15 00 	R1 = [P4 + 0x54];
   1184a:	08 08       	CC = R0 == R1;
   1184c:	06 14       	IF !CC JUMP 0x11858 <_mDNSCoreReceiveRawPacket+0xe0> (BP);
   1184e:	aa a5       	R2 = W[P5 + 0xc] (Z);
   11850:	61 e4 2c 00 	R1 = W[P4 + 0x58] (Z);
   11854:	0a 08       	CC = R2 == R1;
   11856:	19 1c       	IF CC JUMP 0x11888 <_mDNSCoreReceiveRawPacket+0x110> (BP);
   11858:	42 60       	R2 = 0x8 (X);		/*		R2=0x8(  8) */
   1185a:	a1 e4 86 00 	R1 = B[P4 + 0x86] (Z);
   1185e:	11 08       	CC = R1 == R2;
   11860:	19 1c       	IF CC JUMP 0x11892 <_mDNSCoreReceiveRawPacket+0x11a> (BP);
   11862:	0f 32       	P1 = R7;
   11864:	09 e4 1b 05 	R1 = [P1 + 0x146c];
   11868:	08 08       	CC = R0 == R1;
   1186a:	19 14       	IF !CC JUMP 0x1189c <_mDNSCoreReceiveRawPacket+0x124> (BP);
   1186c:	a9 a5       	R1 = W[P5 + 0xc] (Z);
   1186e:	48 e4 38 0a 	R0 = W[P1 + 0x1470] (Z);
   11872:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
   11876:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x1474 */
   1187a:	01 08       	CC = R1 == R0;
   1187c:	0b e1 b4 00 	P3.L = 0xb4;		/* (180)	P3=0xb4 */
   11880:	0a e1 90 00 	P2.L = 0x90;		/* (144)	P2=0x90 */
   11884:	da 06       	IF !CC P3 = P2;
   11886:	0f 20       	JUMP.S 0x118a4 <_mDNSCoreReceiveRawPacket+0x12c>;
   11888:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0xb4 */
   1188c:	0b e1 fc 00 	P3.L = 0xfc;		/* (252)	P3=0xfc */
   11890:	0a 20       	JUMP.S 0x118a4 <_mDNSCoreReceiveRawPacket+0x12c>;
   11892:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0xfc */
   11896:	0b e1 d8 00 	P3.L = 0xd8;		/* (216)	P3=0xd8 */
   1189a:	05 20       	JUMP.S 0x118a4 <_mDNSCoreReceiveRawPacket+0x12c>;
   1189c:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0xd8 */
   118a0:	0b e1 90 00 	P3.L = 0x90;		/* (144)	P3=0x90 */
   118a4:	0c 32       	P1 = R4;
   118a6:	08 91       	R0 = [P1];
   118a8:	00 0c       	CC = R0 == 0x0;
   118aa:	20 1c       	IF CC JUMP 0x118ea <_mDNSCoreReceiveRawPacket+0x172> (BP);
   118ac:	61 a2       	R1 = [P4 + 0x24];
   118ae:	44 30       	R0 = P4;
   118b0:	57 30       	R2 = FP;
   118b2:	21 64       	R1 += 0x4;		/* (  4) */
   118b4:	ba 65       	R2 += 0x37;		/* ( 55) */
   118b6:	20 64       	R0 += 0x4;		/* (  4) */
   118b8:	ff e3 a4 73 	CALL 0x0 <_AddRecordToResponseList>;
   118bc:	f2 ae       	P2 = [SP + 0x2c];
   118be:	b1 a2       	R1 = [SP + 0x28];
   118c0:	b1 b1       	[SP + 0x18] = R1;
   118c2:	70 b2       	[SP + 0x24] = R0;
   118c4:	72 bd       	[SP + 0x14] = P2;
   118c6:	2a e1 4c 00 	P2 = 0x4c (X);		/*		P2=0x4c( 76) */
   118ca:	94 5a       	P2 = P4 + P2;
   118cc:	f2 bd       	[SP + 0x1c] = P2;
   118ce:	2a e1 54 00 	P2 = 0x54 (X);		/*		P2=0x54( 84) */
   118d2:	94 5a       	P2 = P4 + P2;
   118d4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4(  4) */
   118d8:	f3 bc       	[SP + 0xc] = P3;
   118da:	35 b1       	[SP + 0x10] = R5;
   118dc:	32 be       	[SP + 0x20] = P2;
   118de:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
   118e0:	01 e1 dc 58 	R1.L = 0x58dc;		/* (22748)	R1=0x58dc(22748) */
   118e4:	32 a3       	R2 = [SP + 0x30];
   118e6:	ff e3 8d 73 	CALL 0x0 <_AddRecordToResponseList>;
   118ea:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
   118ee:	09 e1 fc 00 	P1.L = 0xfc;		/* (252)	P1=0xfc */
   118f2:	4b 08       	CC = P3 == P1;
   118f4:	06 14       	IF !CC JUMP 0x11900 <_mDNSCoreReceiveRawPacket+0x188> (BP);
   118f6:	47 30       	R0 = FP;
   118f8:	4c 30       	R1 = P4;
   118fa:	ff e3 95 77 	CALL 0x824 <_RestartARPProbing>;
   118fe:	25 20       	JUMP.S 0x11948 <_mDNSCoreReceiveRawPacket+0x1d0>;
   11900:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x54 */
   11904:	0a e1 b4 00 	P2.L = 0xb4;		/* (180)	P2=0xb4 */
   11908:	53 08       	CC = P3 == P2;
   1190a:	0e 14       	IF !CC JUMP 0x11926 <_mDNSCoreReceiveRawPacket+0x1ae> (BP);
   1190c:	2a e1 64 00 	P2 = 0x64 (X);		/*		P2=0x64(100) */
   11910:	94 5a       	P2 = P4 + P2;
   11912:	4a 30       	R1 = P2;
   11914:	2a e1 54 00 	P2 = 0x54 (X);		/*		P2=0x54( 84) */
   11918:	94 5a       	P2 = P4 + P2;
   1191a:	52 30       	R2 = P2;
   1191c:	f6 b0       	[SP + 0xc] = R6;
   1191e:	47 30       	R0 = FP;
   11920:	ff e3 70 73 	CALL 0x0 <_AddRecordToResponseList>;
   11924:	12 20       	JUMP.S 0x11948 <_mDNSCoreReceiveRawPacket+0x1d0>;
   11926:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0xfc */
   1192a:	09 e1 90 00 	P1.L = 0x90;		/* (144)	P1=0x90 */
   1192e:	4b 08       	CC = P3 == P1;
   11930:	0c 14       	IF !CC JUMP 0x11948 <_mDNSCoreReceiveRawPacket+0x1d0> (BP);
   11932:	b2 ae       	P2 = [SP + 0x28];
   11934:	f0 a2       	R0 = [SP + 0x2c];
   11936:	70 b1       	[SP + 0x14] = R0;
   11938:	35 b1       	[SP + 0x10] = R5;
   1193a:	f2 bc       	[SP + 0xc] = P2;
   1193c:	b5 b1       	[SP + 0x18] = R5;
   1193e:	47 30       	R0 = FP;
   11940:	11 60       	R1 = 0x2 (X);		/*		R1=0x2(  2) */
   11942:	54 30       	R2 = P4;
   11944:	ff e3 7a 80 	CALL 0x1a38 <_SendARP>;
   11948:	00 00       	NOP;
   1194a:	64 91       	P4 = [P4];
   1194c:	44 0c       	CC = P4 == 0x0;
   1194e:	69 17       	IF !CC JUMP 0x11820 <_mDNSCoreReceiveRawPacket+0xa8> (BP);
   11950:	0f 32       	P1 = R7;
   11952:	a9 a0       	R1 = [P5 + 0x8];
   11954:	08 e4 1b 05 	R0 = [P1 + 0x146c];
   11958:	01 08       	CC = R1 == R0;
   1195a:	06 14       	IF !CC JUMP 0x11966 <_mDNSCoreReceiveRawPacket+0x1ee> (BP);
   1195c:	a9 a5       	R1 = W[P5 + 0xc] (Z);
   1195e:	48 e4 38 0a 	R0 = W[P1 + 0x1470] (Z);
   11962:	01 08       	CC = R1 == R0;
   11964:	94 1c       	IF CC JUMP 0x11a8c <_mDNSCoreReceiveRawPacket+0x314> (BP);
   11966:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x54 */
   1196a:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   1196e:	29 a1       	R1 = [P5 + 0x10];
   11970:	10 91       	R0 = [P2];
   11972:	01 08       	CC = R1 == R0;
   11974:	8c 18       	IF CC JUMP 0x11a8c <_mDNSCoreReceiveRawPacket+0x314>;
   11976:	57 32       	P2 = FP;
   11978:	ba 6d       	P2 += 0x37;		/* ( 55) */
   1197a:	b2 be       	[SP + 0x28] = P2;
   1197c:	2a e1 74 14 	P2 = 0x1474 (X);		/*		P2=0x1474(5236) */
   11980:	42 30       	R0 = P2;
   11982:	6d 30       	R5 = P5;
   11984:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x90 */
   11988:	3c e5 f2 07 	P4 = [FP + 0x1fc8];
   1198c:	07 51       	R4 = R7 + R0;
   1198e:	45 64       	R5 += 0x8;		/* (  8) */
   11990:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
   11994:	7a 20       	JUMP.S 0x11a88 <_mDNSCoreReceiveRawPacket+0x310>;
   11996:	00 00       	NOP;
   11998:	e0 a1       	R0 = [P4 + 0x1c];
   1199a:	30 08       	CC = R0 == R6;
   1199c:	74 14       	IF !CC JUMP 0x11a84 <_mDNSCoreReceiveRawPacket+0x30c> (BP);
   1199e:	a0 e4 04 00 	R0 = B[P4 + 0x4] (Z);
   119a2:	08 0c       	CC = R0 == 0x1;
   119a4:	70 1c       	IF CC JUMP 0x11a84 <_mDNSCoreReceiveRawPacket+0x30c> (BP);
   119a6:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
   119a8:	20 e4 19 00 	R0 = [P4 + 0x64];
   119ac:	08 08       	CC = R0 == R1;
   119ae:	6b 14       	IF !CC JUMP 0x11a84 <_mDNSCoreReceiveRawPacket+0x30c> (BP);
   119b0:	21 e4 1a 00 	R1 = [P4 + 0x68];
   119b4:	28 a1       	R0 = [P5 + 0x10];
   119b6:	01 08       	CC = R1 == R0;
   119b8:	66 14       	IF !CC JUMP 0x11a84 <_mDNSCoreReceiveRawPacket+0x30c> (BP);
   119ba:	47 30       	R0 = FP;
   119bc:	4c 30       	R1 = P4;
   119be:	ff e3 33 77 	CALL 0x824 <_RestartARPProbing>;
   119c2:	a9 a0       	R1 = [P5 + 0x8];
   119c4:	20 e4 15 00 	R0 = [P4 + 0x54];
   119c8:	01 08       	CC = R1 == R0;
   119ca:	3a 14       	IF !CC JUMP 0x11a3e <_mDNSCoreReceiveRawPacket+0x2c6> (BP);
   119cc:	a9 a5       	R1 = W[P5 + 0xc] (Z);
   119ce:	60 e4 2c 00 	R0 = W[P4 + 0x58] (Z);
   119d2:	01 08       	CC = R1 == R0;
   119d4:	35 14       	IF !CC JUMP 0x11a3e <_mDNSCoreReceiveRawPacket+0x2c6> (BP);
   119d6:	18 91       	R0 = [P3];
   119d8:	00 0c       	CC = R0 == 0x0;
   119da:	55 1c       	IF CC JUMP 0x11a84 <_mDNSCoreReceiveRawPacket+0x30c> (BP);
   119dc:	29 a1       	R1 = [P5 + 0x10];
   119de:	e8 a1       	R0 = [P5 + 0x1c];
   119e0:	01 08       	CC = R1 == R0;
   119e2:	12 18       	IF CC JUMP 0x11a06 <_mDNSCoreReceiveRawPacket+0x28e>;
   119e4:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x90 */
   119e8:	09 e1 36 01 	P1.L = 0x136;		/* (310)	P1=0x136 */
   119ec:	47 e1 00 00 	R7.H = 0x0;		/* (  0)	R7=0x134(308) */
   119f0:	e9 a4       	R1 = W[P5 + 0x6] (Z);
   119f2:	08 95       	R0 = W[P1] (Z);
   119f4:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x1474 */
   119f8:	01 08       	CC = R1 == R0;
   119fa:	07 e1 cc 58 	R7.L = 0x58cc;		/* (22732)	R7=0x58cc(22732) */
   119fe:	0a e1 bc 58 	P2.L = 0x58bc;		/* (22716)	P2=0x58bc */
   11a02:	7a 06       	IF !CC R7 = P2;
   11a04:	05 20       	JUMP.S 0x11a0e <_mDNSCoreReceiveRawPacket+0x296>;
   11a06:	47 e1 00 00 	R7.H = 0x0;		/* (  0)	R7=0x58cc(22732) */
   11a0a:	07 e1 ac 58 	R7.L = 0x58ac;		/* (22700)	R7=0x58ac(22700) */
   11a0e:	61 a2       	R1 = [P4 + 0x24];
   11a10:	44 30       	R0 = P4;
   11a12:	b2 a2       	R2 = [SP + 0x28];
   11a14:	21 64       	R1 += 0x4;		/* (  4) */
   11a16:	20 64       	R0 += 0x4;		/* (  4) */
   11a18:	ff e3 f4 72 	CALL 0x0 <_AddRecordToResponseList>;
   11a1c:	4d 30       	R1 = P5;
   11a1e:	81 64       	R1 += 0x10;		/* ( 16) */
   11a20:	71 b1       	[SP + 0x14] = R1;
   11a22:	61 64       	R1 += 0xc;		/* ( 12) */
   11a24:	b1 b1       	[SP + 0x18] = R1;
   11a26:	f0 b1       	[SP + 0x1c] = R0;
   11a28:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4(  4) */
   11a2c:	f7 b0       	[SP + 0xc] = R7;
   11a2e:	35 b1       	[SP + 0x10] = R5;
   11a30:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
   11a32:	01 e1 14 59 	R1.L = 0x5914;		/* (22804)	R1=0x5914(22804) */
   11a36:	14 30       	R2 = R4;
   11a38:	ff e3 e4 72 	CALL 0x0 <_AddRecordToResponseList>;
   11a3c:	24 20       	JUMP.S 0x11a84 <_mDNSCoreReceiveRawPacket+0x30c>;
   11a3e:	44 30       	R0 = P4;
   11a40:	21 e1 4c 00 	R1 = 0x4c (X);		/*		R1=0x4c( 76) */
   11a44:	c8 51       	R7 = R0 + R1;
   11a46:	61 a2       	R1 = [P4 + 0x24];
   11a48:	21 64       	R1 += 0x4;		/* (  4) */
   11a4a:	b2 a2       	R2 = [SP + 0x28];
   11a4c:	20 64       	R0 += 0x4;		/* (  4) */
   11a4e:	ff e3 d9 72 	CALL 0x0 <_AddRecordToResponseList>;
   11a52:	4d 30       	R1 = P5;
   11a54:	81 64       	R1 += 0x10;		/* ( 16) */
   11a56:	31 b1       	[SP + 0x10] = R1;
   11a58:	61 64       	R1 += 0xc;		/* ( 12) */
   11a5a:	71 b1       	[SP + 0x14] = R1;
   11a5c:	2a e1 54 00 	P2 = 0x54 (X);		/*		P2=0x54( 84) */
   11a60:	94 5a       	P2 = P4 + P2;
   11a62:	30 b2       	[SP + 0x20] = R0;
   11a64:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4c( 76) */
   11a68:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   11a6a:	01 e1 60 59 	R1.L = 0x5960;		/* (22880)	R1=0x5960(22880) */
   11a6e:	14 30       	R2 = R4;
   11a70:	f5 b0       	[SP + 0xc] = R5;
   11a72:	b7 b1       	[SP + 0x18] = R7;
   11a74:	f2 bd       	[SP + 0x1c] = P2;
   11a76:	ff e3 c5 72 	CALL 0x0 <_AddRecordToResponseList>;
   11a7a:	e1 a1       	R1 = [P4 + 0x1c];
   11a7c:	47 30       	R0 = FP;
   11a7e:	17 30       	R2 = R7;
   11a80:	ff e3 de 9e 	CALL 0x583c <_ScheduleWakeup>;
   11a84:	00 00       	NOP;
   11a86:	64 91       	P4 = [P4];
   11a88:	44 0c       	CC = P4 == 0x0;
   11a8a:	86 17       	IF !CC JUMP 0x11996 <_mDNSCoreReceiveRawPacket+0x21e> (BP);
   11a8c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5960(22880) */
   11a90:	47 30       	R0 = FP;
   11a92:	01 e1 20 01 	R1.L = 0x120;		/* (288)	R1=0x120(288) */
   11a96:	ff e3 b5 72 	CALL 0x0 <_AddRecordToResponseList>;
   11a9a:	a8 20       	JUMP.S 0x11bea <_mDNSCoreReceiveRawPacket+0x472>;
   11a9c:	43 30       	R0 = P3;
   11a9e:	10 65       	R0 += 0x22;		/* ( 34) */
   11aa0:	82 09       	CC = R2 < R0 (IU);
   11aa2:	4b 1c       	IF CC JUMP 0x11b38 <_mDNSCoreReceiveRawPacket+0x3c0> (BP);
   11aa4:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x54 */
   11aa8:	0a e1 8a 00 	P2.L = 0x8a;		/* (138)	P2=0x8a */
   11aac:	19 a6       	R1 = W[P3 + 0x10] (Z);
   11aae:	10 95       	R0 = W[P2] (Z);
   11ab0:	01 08       	CC = R1 == R0;
   11ab2:	43 14       	IF !CC JUMP 0x11b38 <_mDNSCoreReceiveRawPacket+0x3c0> (BP);
   11ab4:	a9 e4 06 00 	R1 = B[P5 + 0x6] (Z);
   11ab8:	f8 60       	R0 = 0x1f (X);		/*		R0=0x1f( 31) */
   11aba:	01 54       	R0 = R1 & R0;
   11abc:	00 0c       	CC = R0 == 0x0;
   11abe:	3d 14       	IF !CC JUMP 0x11b38 <_mDNSCoreReceiveRawPacket+0x3c0> (BP);
   11ac0:	a8 e4 07 00 	R0 = B[P5 + 0x7] (Z);
   11ac4:	00 0c       	CC = R0 == 0x0;
   11ac6:	39 14       	IF !CC JUMP 0x11b38 <_mDNSCoreReceiveRawPacket+0x3c0> (BP);
   11ac8:	99 e4 14 00 	R1 = B[P3 + 0x14] (Z);
   11acc:	78 60       	R0 = 0xf (X);		/*		R0=0xf( 15) */
   11ace:	01 54       	R0 = R1 & R0;
   11ad0:	10 4f       	R0 <<= 0x2;
   11ad2:	70 64       	R0 += 0xe;		/* ( 14) */
   11ad4:	08 32       	P1 = R0;
   11ad6:	20 60       	R0 = 0x4 (X);		/*		R0=0x4(  4) */
   11ad8:	30 e6 12 00 	[SP + 0x48] = R0;
   11adc:	70 b3       	[SP + 0x34] = R0;
   11ade:	28 a1       	R0 = [P5 + 0x10];
   11ae0:	b0 b3       	[SP + 0x38] = R0;
   11ae2:	ab e5 09 00 	R3 = B[P5 + 0x9] (X);
   11ae6:	e9 a0       	R1 = [P5 + 0xc];
   11ae8:	58 43       	R0 = R3.B (Z);
   11aea:	8b 5a       	P2 = P3 + P1;
   11aec:	31 e6 13 00 	[SP + 0x4c] = R1;
   11af0:	08 0c       	CC = R0 == 0x1;
   11af2:	0d 18       	IF CC JUMP 0x11b0c <_mDNSCoreReceiveRawPacket+0x394>;
   11af4:	31 60       	R1 = 0x6 (X);		/*		R1=0x6(  6) */
   11af6:	08 08       	CC = R0 == R1;
   11af8:	0c 18       	IF CC JUMP 0x11b10 <_mDNSCoreReceiveRawPacket+0x398>;
   11afa:	8f 60       	R7 = 0x11 (X);		/*		R7=0x11( 17) */
   11afc:	38 08       	CC = R0 == R7;
   11afe:	0b 18       	IF CC JUMP 0x11b14 <_mDNSCoreReceiveRawPacket+0x39c>;
   11b00:	d1 61       	R1 = 0x3a (X);		/*		R1=0x3a( 58) */
   11b02:	08 08       	CC = R0 == R1;
   11b04:	c0 60       	R0 = 0x18 (X);		/*		R0=0x18( 24) */
   11b06:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
   11b08:	01 06       	IF !CC R0 = R1;
   11b0a:	06 20       	JUMP.S 0x11b16 <_mDNSCoreReceiveRawPacket+0x39e>;
   11b0c:	20 60       	R0 = 0x4 (X);		/*		R0=0x4(  4) */
   11b0e:	04 20       	JUMP.S 0x11b16 <_mDNSCoreReceiveRawPacket+0x39e>;
   11b10:	a0 60       	R0 = 0x14 (X);		/*		R0=0x14( 20) */
   11b12:	02 20       	JUMP.S 0x11b16 <_mDNSCoreReceiveRawPacket+0x39e>;
   11b14:	40 60       	R0 = 0x8 (X);		/*		R0=0x8(  8) */
   11b16:	7a 30       	R7 = P2;
   11b18:	07 50       	R0 = R7 + R0;
   11b1a:	82 09       	CC = R2 < R0 (IU);
   11b1c:	67 1c       	IF CC JUMP 0x11bea <_mDNSCoreReceiveRawPacket+0x472> (BP);
   11b1e:	46 30       	R0 = SP;
   11b20:	a0 65       	R0 += 0x34;		/* ( 52) */
   11b22:	4b 30       	R1 = P3;
   11b24:	f0 b0       	[SP + 0xc] = R0;
   11b26:	41 64       	R1 += 0x8;		/* (  8) */
   11b28:	b3 e6 10 00 	B[SP + 0x10] = R3;
   11b2c:	73 bd       	[SP + 0x14] = P3;
   11b2e:	b2 bd       	[SP + 0x18] = P2;
   11b30:	f2 b1       	[SP + 0x1c] = R2;
   11b32:	36 b2       	[SP + 0x20] = R6;
   11b34:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   11b36:	51 20       	JUMP.S 0x11bd8 <_mDNSCoreReceiveRawPacket+0x460>;
   11b38:	5b 30       	R3 = P3;
   11b3a:	b3 65       	R3 += 0x36;		/* ( 54) */
   11b3c:	9a 09       	CC = R2 < R3 (IU);
   11b3e:	56 1c       	IF CC JUMP 0x11bea <_mDNSCoreReceiveRawPacket+0x472> (BP);
   11b40:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x8a */
   11b44:	0a e1 88 00 	P2.L = 0x88;		/* (136)	P2=0x88 <_CheckSum> */
   11b48:	19 a6       	R1 = W[P3 + 0x10] (Z);
   11b4a:	10 95       	R0 = W[P2] (Z);
   11b4c:	01 08       	CC = R1 == R0;
   11b4e:	4e 14       	IF !CC JUMP 0x11bea <_mDNSCoreReceiveRawPacket+0x472> (BP);
   11b50:	a9 a0       	R1 = [P5 + 0x8];
   11b52:	31 e6 13 00 	[SP + 0x4c] = R1;
   11b56:	e9 a0       	R1 = [P5 + 0xc];
   11b58:	31 e6 14 00 	[SP + 0x50] = R1;
   11b5c:	29 a1       	R1 = [P5 + 0x10];
   11b5e:	31 e6 15 00 	[SP + 0x54] = R1;
   11b62:	69 a1       	R1 = [P5 + 0x14];
   11b64:	30 60       	R0 = 0x6 (X);		/*		R0=0x6(  6) */
   11b66:	31 e6 16 00 	[SP + 0x58] = R1;
   11b6a:	30 e6 12 00 	[SP + 0x48] = R0;
   11b6e:	70 b3       	[SP + 0x34] = R0;
   11b70:	a8 a1       	R0 = [P5 + 0x18];
   11b72:	b0 b3       	[SP + 0x38] = R0;
   11b74:	e8 a1       	R0 = [P5 + 0x1c];
   11b76:	f0 b3       	[SP + 0x3c] = R0;
   11b78:	28 a2       	R0 = [P5 + 0x20];
   11b7a:	30 e6 10 00 	[SP + 0x40] = R0;
   11b7e:	68 a2       	R0 = [P5 + 0x24];
   11b80:	30 e6 11 00 	[SP + 0x44] = R0;
   11b84:	af e5 06 00 	R7 = B[P5 + 0x6] (X);
   11b88:	78 43       	R0 = R7.B (Z);
   11b8a:	08 0c       	CC = R0 == 0x1;
   11b8c:	0d 18       	IF CC JUMP 0x11ba6 <_mDNSCoreReceiveRawPacket+0x42e>;
   11b8e:	31 60       	R1 = 0x6 (X);		/*		R1=0x6(  6) */
   11b90:	08 08       	CC = R0 == R1;
   11b92:	0c 18       	IF CC JUMP 0x11baa <_mDNSCoreReceiveRawPacket+0x432>;
   11b94:	89 60       	R1 = 0x11 (X);		/*		R1=0x11( 17) */
   11b96:	08 08       	CC = R0 == R1;
   11b98:	0b 18       	IF CC JUMP 0x11bae <_mDNSCoreReceiveRawPacket+0x436>;
   11b9a:	d1 61       	R1 = 0x3a (X);		/*		R1=0x3a( 58) */
   11b9c:	08 08       	CC = R0 == R1;
   11b9e:	c0 60       	R0 = 0x18 (X);		/*		R0=0x18( 24) */
   11ba0:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
   11ba2:	01 06       	IF !CC R0 = R1;
   11ba4:	06 20       	JUMP.S 0x11bb0 <_mDNSCoreReceiveRawPacket+0x438>;
   11ba6:	20 60       	R0 = 0x4 (X);		/*		R0=0x4(  4) */
   11ba8:	04 20       	JUMP.S 0x11bb0 <_mDNSCoreReceiveRawPacket+0x438>;
   11baa:	a0 60       	R0 = 0x14 (X);		/*		R0=0x14( 20) */
   11bac:	02 20       	JUMP.S 0x11bb0 <_mDNSCoreReceiveRawPacket+0x438>;
   11bae:	40 60       	R0 = 0x8 (X);		/*		R0=0x8(  8) */
   11bb0:	03 50       	R0 = R3 + R0;
   11bb2:	82 09       	CC = R2 < R0 (IU);
   11bb4:	1b 1c       	IF CC JUMP 0x11bea <_mDNSCoreReceiveRawPacket+0x472> (BP);
   11bb6:	46 30       	R0 = SP;
   11bb8:	a0 65       	R0 += 0x34;		/* ( 52) */
   11bba:	f0 b0       	[SP + 0xc] = R0;
   11bbc:	b7 e6 10 00 	B[SP + 0x10] = R7;
   11bc0:	73 bd       	[SP + 0x14] = P3;
   11bc2:	b3 b1       	[SP + 0x18] = R3;
   11bc4:	f2 b1       	[SP + 0x1c] = R2;
   11bc6:	36 b2       	[SP + 0x20] = R6;
   11bc8:	a8 e4 04 00 	R0 = B[P5 + 0x4] (Z);
   11bcc:	4b 30       	R1 = P3;
   11bce:	40 4f       	R0 <<= 0x8;
   11bd0:	aa e4 05 00 	R2 = B[P5 + 0x5] (Z);
   11bd4:	41 64       	R1 += 0x8;		/* (  8) */
   11bd6:	10 56       	R0 = R0 | R2;
   11bd8:	70 e6 12 00 	W[SP + 0x24] = R0;
   11bdc:	5e 30       	R3 = SP;
   11bde:	27 e1 48 00 	R7 = 0x48 (X);		/*		R7=0x48( 72) */
   11be2:	47 30       	R0 = FP;
   11be4:	bb 50       	R2 = R3 + R7;
   11be6:	ff e3 51 9e 	CALL 0x5888 <_mDNSCoreReceiveRawTransportPacket>;
   11bea:	e6 6d       	SP += 0x3c;		/* ( 60) */
   11bec:	06 6d       	SP += 0x20;		/* ( 32) */
   11bee:	77 90       	FP = [SP++];
   11bf0:	27 01       	RETS = [SP++];
   11bf2:	a3 05       	(R7:4, P5:3) = [SP++];
   11bf4:	10 00       	RTS;
	...

00011bf8 <_mDNSCoreBeSleepProxyServer_internal>:
_mDNSCoreBeSleepProxyServer_internal():
   11bf8:	f5 05       	[--SP] = (R7:6, P5:5);
   11bfa:	28 32       	P5 = R0;
   11bfc:	39 30       	R7 = R1;
   11bfe:	67 01       	[--SP] = RETS;
   11c00:	66 6f       	SP += -0x14;		/* (-20) */
   11c02:	32 30       	R6 = R2;
   11c04:	28 a3       	R0 = [P5 + 0x30];
   11c06:	08 64       	R0 += 0x1;		/* (  1) */
   11c08:	e9 a2       	R1 = [P5 + 0x2c];
   11c0a:	28 b3       	[P5 + 0x30] = R0;
   11c0c:	01 08       	CC = R1 == R0;
   11c0e:	0e 18       	IF CC JUMP 0x11c2a <_mDNSCoreBeSleepProxyServer_internal+0x32>;
   11c10:	f1 b0       	[SP + 0xc] = R1;
   11c12:	30 b1       	[SP + 0x10] = R0;
   11c14:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
   11c18:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x8(  8) */
   11c1c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   11c1e:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
   11c22:	02 e1 60 00 	R2.L = 0x60;		/* ( 96)	R2=0x60( 96) */
   11c26:	ff e3 ed 71 	CALL 0x0 <_AddRecordToResponseList>;
   11c2a:	78 43       	R0 = R7.B (Z);
   11c2c:	00 0c       	CC = R0 == 0x0;
   11c2e:	0a 14       	IF !CC JUMP 0x11c42 <_mDNSCoreBeSleepProxyServer_internal+0x4a> (BP);
   11c30:	28 e4 28 0a 	R0 = [P5 + 0x28a0];
   11c34:	00 0c       	CC = R0 == 0x0;
   11c36:	06 18       	IF CC JUMP 0x11c42 <_mDNSCoreBeSleepProxyServer_internal+0x4a>;
   11c38:	ff e3 e4 71 	CALL 0x0 <_AddRecordToResponseList>;
   11c3c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   11c3e:	28 e6 28 0a 	[P5 + 0x28a0] = R0;
   11c42:	00 00       	NOP;
   11c44:	a8 e4 98 28 	R0 = B[P5 + 0x2898] (Z);
   11c48:	08 0c       	CC = R0 == 0x1;
   11c4a:	12 14       	IF !CC JUMP 0x11c6e <_mDNSCoreBeSleepProxyServer_internal+0x76> (BP);
   11c4c:	7a 43       	R2 = R7.B (Z);
   11c4e:	a8 e4 94 28 	R0 = B[P5 + 0x2894] (Z);
   11c52:	02 08       	CC = R2 == R0;
   11c54:	0d 18       	IF CC JUMP 0x11c6e <_mDNSCoreBeSleepProxyServer_internal+0x76>;
   11c56:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
   11c58:	2a e1 a4 28 	P2 = 0x28a4 (X);		/*		P2=0x28a4(10404) */
   11c5c:	a8 e6 98 28 	B[P5 + 0x2898] = R0;
   11c60:	95 5a       	P2 = P5 + P2;
   11c62:	92 43       	R2 = -R2;
   11c64:	4a 30       	R1 = P2;
   11c66:	fa 4e       	R2 >>= 0x1f;
   11c68:	45 30       	R0 = P5;
   11c6a:	ff e3 0b b7 	CALL 0x8a80 <_mDNS_DeregisterService_drt>;
   11c6e:	af e6 94 28 	B[P5 + 0x2894] = R7;
   11c72:	b0 e5 30 00 	R0 = B[SP + 0x30] (X);
   11c76:	a8 e6 96 28 	B[P5 + 0x2896] = R0;
   11c7a:	b0 e5 34 00 	R0 = B[SP + 0x34] (X);
   11c7e:	7f 43       	R7 = R7.B (Z);
   11c80:	ae e6 95 28 	B[P5 + 0x2895] = R6;
   11c84:	a8 e6 97 28 	B[P5 + 0x2897] = R0;
   11c88:	07 0c       	CC = R7 == 0x0;
   11c8a:	28 1c       	IF CC JUMP 0x11cda <_mDNSCoreBeSleepProxyServer_internal+0xe2> (BP);
   11c8c:	28 e4 28 0a 	R0 = [P5 + 0x28a0];
   11c90:	00 0c       	CC = R0 == 0x0;
   11c92:	14 14       	IF !CC JUMP 0x11cba <_mDNSCoreBeSleepProxyServer_internal+0xc2> (BP);
   11c94:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x28a4 */
   11c98:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   11c9c:	45 30       	R0 = P5;
   11c9e:	11 95       	R1 = W[P2] (Z);
   11ca0:	ff e3 b0 71 	CALL 0x0 <_AddRecordToResponseList>;
   11ca4:	28 e6 28 0a 	[P5 + 0x28a0] = R0;
   11ca8:	00 0c       	CC = R0 == 0x0;
   11caa:	08 14       	IF !CC JUMP 0x11cba <_mDNSCoreBeSleepProxyServer_internal+0xc2> (BP);
   11cac:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
   11cb0:	01 e1 b0 59 	R1.L = 0x59b0;		/* (22960)	R1=0x59b0(22960) */
   11cb4:	ff e3 a6 71 	CALL 0x0 <_AddRecordToResponseList>;
   11cb8:	29 20       	JUMP.S 0x11d0a <_mDNSCoreBeSleepProxyServer_internal+0x112>;
   11cba:	00 00       	NOP;
   11cbc:	a8 e4 98 28 	R0 = B[P5 + 0x2898] (Z);
   11cc0:	00 0c       	CC = R0 == 0x0;
   11cc2:	24 14       	IF !CC JUMP 0x11d0a <_mDNSCoreBeSleepProxyServer_internal+0x112> (BP);
   11cc4:	2a e1 a4 28 	P2 = 0x28a4 (X);		/*		P2=0x28a4(10404) */
   11cc8:	95 5a       	P2 = P5 + P2;
   11cca:	22 e1 ff fe 	R2 = -0x101 (X);		/*		R2=0xfffffeff(-257) */
   11cce:	4a 30       	R1 = P2;
   11cd0:	45 30       	R0 = P5;
   11cd2:	42 4f       	R2 <<= 0x8;
   11cd4:	ff e3 44 bb 	CALL 0x935c <_SleepProxyServerCallback>;
   11cd8:	19 20       	JUMP.S 0x11d0a <_mDNSCoreBeSleepProxyServer_internal+0x112>;
   11cda:	00 00       	NOP;
   11cdc:	aa e4 98 28 	R2 = B[P5 + 0x2898] (Z);
   11ce0:	02 0c       	CC = R2 == 0x0;
   11ce2:	14 1c       	IF CC JUMP 0x11d0a <_mDNSCoreBeSleepProxyServer_internal+0x112> (BP);
   11ce4:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x28a4 */
   11ce8:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   11cec:	10 91       	R0 = [P2];
   11cee:	00 0c       	CC = R0 == 0x0;
   11cf0:	08 1c       	IF CC JUMP 0x11d00 <_mDNSCoreBeSleepProxyServer_internal+0x108> (BP);
   11cf2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x59b0(22960) */
   11cf6:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
   11cf8:	01 e1 ec 59 	R1.L = 0x59ec;		/* (23020)	R1=0x59ec(23020) */
   11cfc:	ff e3 82 71 	CALL 0x0 <_AddRecordToResponseList>;
   11d00:	00 00       	NOP;
   11d02:	28 e4 37 00 	R0 = [P5 + 0xdc];
   11d06:	28 e6 41 00 	[P5 + 0x104] = R0;
   11d0a:	00 00       	NOP;
   11d0c:	e9 a2       	R1 = [P5 + 0x2c];
   11d0e:	28 a3       	R0 = [P5 + 0x30];
   11d10:	01 08       	CC = R1 == R0;
   11d12:	0e 18       	IF CC JUMP 0x11d2e <_mDNSCoreBeSleepProxyServer_internal+0x136>;
   11d14:	f1 b0       	[SP + 0xc] = R1;
   11d16:	30 b1       	[SP + 0x10] = R0;
   11d18:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x59ec(23020) */
   11d1c:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0xfeff(65279) */
   11d20:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   11d22:	01 e1 40 00 	R1.L = 0x40;		/* ( 64)	R1=0x40( 64) */
   11d26:	02 e1 60 00 	R2.L = 0x60;		/* ( 96)	R2=0x60( 96) */
   11d2a:	ff e3 6b 71 	CALL 0x0 <_AddRecordToResponseList>;
   11d2e:	28 a3       	R0 = [P5 + 0x30];
   11d30:	a6 6c       	SP += 0x14;		/* ( 20) */
   11d32:	f8 67       	R0 += -0x1;		/* ( -1) */
   11d34:	27 01       	RETS = [SP++];
   11d36:	28 b3       	[P5 + 0x30] = R0;
   11d38:	b5 05       	(R7:6, P5:5) = [SP++];
   11d3a:	10 00       	RTS;

00011d3c <_mDNSCoreMachineSleep>:
_mDNSCoreMachineSleep():
   11d3c:	e3 05       	[--SP] = (R7:4, P5:3);
   11d3e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   11d42:	00 e8 05 00 	LINK 0x14;		/* (20) */
   11d46:	28 32       	P5 = R0;
   11d48:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   11d4c:	10 91       	R0 = [P2];
   11d4e:	39 30       	R7 = R1;
   11d50:	00 0c       	CC = R0 == 0x0;
   11d52:	18 1c       	IF CC JUMP 0x11d82 <_mDNSCoreMachineSleep+0x46> (BP);
   11d54:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_AddRecordToResponseList>(  0) */
   11d58:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x60( 96) */
   11d5c:	01 0c       	CC = R1 == 0x0;
   11d5e:	00 e1 34 5a 	R0.L = 0x5a34;		/* (23092)	R0=0x5a34(23092) */
   11d62:	02 e1 40 5a 	R2.L = 0x5a40;		/* (23104)	R2=0x5a40(23104) */
   11d66:	10 06       	IF !CC R2 = R0;
   11d68:	a8 e4 15 01 	R0 = B[P5 + 0x115] (Z);
   11d6c:	f0 b0       	[SP + 0xc] = R0;
   11d6e:	28 e4 37 00 	R0 = [P5 + 0xdc];
   11d72:	30 b1       	[SP + 0x10] = R0;
   11d74:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x40( 64) */
   11d78:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
   11d7a:	01 e1 5c 5a 	R1.L = 0x5a5c;		/* (23132)	R1=0x5a5c(23132) */
   11d7e:	ff e3 41 71 	CALL 0x0 <_AddRecordToResponseList>;
   11d82:	07 0c       	CC = R7 == 0x0;
   11d84:	b9 1c       	IF CC JUMP 0x11ef6 <_mDNSCoreMachineSleep+0x1ba> (BP);
   11d86:	a8 e4 15 01 	R0 = B[P5 + 0x115] (Z);
   11d8a:	00 0c       	CC = R0 == 0x0;
   11d8c:	bc 15       	IF !CC JUMP 0x12104 <_mDNSCoreMachineSleep+0x3c8> (BP);
   11d8e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5a5c(23132) */
   11d92:	45 30       	R0 = P5;
   11d94:	01 e1 84 04 	R1.L = 0x484;		/* (1156)	R1=0x484(1156) */
   11d98:	ff e3 34 71 	CALL 0x0 <_AddRecordToResponseList>;
   11d9c:	28 e4 28 0a 	R0 = [P5 + 0x28a0];
   11da0:	00 0c       	CC = R0 == 0x0;
   11da2:	39 1c       	IF CC JUMP 0x11e14 <_mDNSCoreMachineSleep+0xd8> (BP);
   11da4:	28 a3       	R0 = [P5 + 0x30];
   11da6:	08 64       	R0 += 0x1;		/* (  1) */
   11da8:	e9 a2       	R1 = [P5 + 0x2c];
   11daa:	af e5 98 28 	R7 = B[P5 + 0x2898] (X);
   11dae:	28 b3       	[P5 + 0x30] = R0;
   11db0:	01 08       	CC = R1 == R0;
   11db2:	0e 18       	IF CC JUMP 0x11dce <_mDNSCoreMachineSleep+0x92>;
   11db4:	f1 b0       	[SP + 0xc] = R1;
   11db6:	30 b1       	[SP + 0x10] = R0;
   11db8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x484(1156) */
   11dbc:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x5a40(23104) */
   11dc0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   11dc2:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
   11dc6:	02 e1 84 04 	R2.L = 0x484;		/* (1156)	R2=0x484(1156) */
   11dca:	ff e3 1b 71 	CALL 0x0 <_AddRecordToResponseList>;
   11dce:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
   11dd0:	7f 43       	R7 = R7.B (Z);
   11dd2:	a8 e6 98 28 	B[P5 + 0x2898] = R0;
   11dd6:	0f 0c       	CC = R7 == 0x1;
   11dd8:	09 14       	IF !CC JUMP 0x11dea <_mDNSCoreMachineSleep+0xae> (BP);
   11dda:	2a e1 a4 28 	P2 = 0x28a4 (X);		/*		P2=0x28a4(10404) */
   11dde:	95 5a       	P2 = P5 + P2;
   11de0:	4a 30       	R1 = P2;
   11de2:	45 30       	R0 = P5;
   11de4:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
   11de6:	ff e3 4d b6 	CALL 0x8a80 <_mDNS_DeregisterService_drt>;
   11dea:	00 00       	NOP;
   11dec:	e9 a2       	R1 = [P5 + 0x2c];
   11dee:	28 a3       	R0 = [P5 + 0x30];
   11df0:	01 08       	CC = R1 == R0;
   11df2:	0e 18       	IF CC JUMP 0x11e0e <_mDNSCoreMachineSleep+0xd2>;
   11df4:	f1 b0       	[SP + 0xc] = R1;
   11df6:	30 b1       	[SP + 0x10] = R0;
   11df8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
   11dfc:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
   11e00:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   11e02:	01 e1 40 00 	R1.L = 0x40;		/* ( 64)	R1=0x40( 64) */
   11e06:	02 e1 84 04 	R2.L = 0x484;		/* (1156)	R2=0x484(1156) */
   11e0a:	ff e3 fb 70 	CALL 0x0 <_AddRecordToResponseList>;
   11e0e:	28 a3       	R0 = [P5 + 0x30];
   11e10:	f8 67       	R0 += -0x1;		/* ( -1) */
   11e12:	28 b3       	[P5 + 0x30] = R0;
   11e14:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
   11e16:	a8 e6 15 01 	B[P5 + 0x115] = R0;
   11e1a:	a8 e4 17 01 	R0 = B[P5 + 0x117] (Z);
   11e1e:	00 0c       	CC = R0 == 0x0;
   11e20:	26 1c       	IF CC JUMP 0x11e6c <_mDNSCoreMachineSleep+0x130> (BP);
   11e22:	28 e4 48 00 	R0 = [P5 + 0x120];
   11e26:	00 0c       	CC = R0 == 0x0;
   11e28:	22 1c       	IF CC JUMP 0x11e6c <_mDNSCoreMachineSleep+0x130> (BP);
   11e2a:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x28a4 */
   11e2e:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   11e32:	11 91       	R1 = [P2];
   11e34:	01 0c       	CC = R1 == 0x0;
   11e36:	0b 1c       	IF CC JUMP 0x11e4c <_mDNSCoreMachineSleep+0x110> (BP);
   11e38:	2a e4 37 00 	R2 = [P5 + 0xdc];
   11e3c:	90 52       	R2 = R0 - R2;
   11e3e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x40( 64) */
   11e42:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
   11e44:	01 e1 78 5a 	R1.L = 0x5a78;		/* (23160)	R1=0x5a78(23160) */
   11e48:	ff e3 dc 70 	CALL 0x0 <_AddRecordToResponseList>;
   11e4c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   11e50:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   11e54:	11 91       	R1 = [P2];
   11e56:	50 60       	R0 = 0xa (X);		/*		R0=0xa( 10) */
   11e58:	c8 40       	R0 *= R1;
   11e5a:	29 e4 48 00 	R1 = [P5 + 0x120];
   11e5e:	08 50       	R0 = R0 + R1;
   11e60:	00 0c       	CC = R0 == 0x0;
   11e62:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
   11e64:	01 07       	IF CC R0 = R1;
   11e66:	28 e6 49 00 	[P5 + 0x124] = R0;
   11e6a:	16 20       	JUMP.S 0x11e96 <_mDNSCoreMachineSleep+0x15a>;
   11e6c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   11e6e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   11e72:	28 e6 48 00 	[P5 + 0x120] = R0;
   11e76:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   11e7a:	11 91       	R1 = [P2];
   11e7c:	50 60       	R0 = 0xa (X);		/*		R0=0xa( 10) */
   11e7e:	c8 40       	R0 *= R1;
   11e80:	29 e4 37 00 	R1 = [P5 + 0xdc];
   11e84:	08 50       	R0 = R0 + R1;
   11e86:	00 0c       	CC = R0 == 0x0;
   11e88:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
   11e8a:	01 07       	IF CC R0 = R1;
   11e8c:	28 e6 49 00 	[P5 + 0x124] = R0;
   11e90:	45 30       	R0 = P5;
   11e92:	ff e3 65 f1 	CALL 0x1015c <_BeginSleepProcessing>;
   11e96:	45 30       	R0 = P5;
   11e98:	ff e3 08 73 	CALL 0x4a8 <_SuspendLLQs>;
   11e9c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1(  1) */
   11ea0:	45 30       	R0 = P5;
   11ea2:	01 e1 84 04 	R1.L = 0x484;		/* (1156)	R1=0x484(1156) */
   11ea6:	ff e3 ad 70 	CALL 0x0 <_AddRecordToResponseList>;
   11eaa:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   11eae:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   11eb2:	10 91       	R0 = [P2];
   11eb4:	00 0c       	CC = R0 == 0x0;
   11eb6:	27 1d       	IF CC JUMP 0x12104 <_mDNSCoreMachineSleep+0x3c8> (BP);
   11eb8:	aa e4 15 01 	R2 = B[P5 + 0x115] (Z);
   11ebc:	0a 0c       	CC = R2 == 0x1;
   11ebe:	0c 18       	IF CC JUMP 0x11ed6 <_mDNSCoreMachineSleep+0x19a>;
   11ec0:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0xa( 10) */
   11ec4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x484(1156) */
   11ec8:	12 0c       	CC = R2 == 0x2;
   11eca:	00 e1 34 5a 	R0.L = 0x5a34;		/* (23092)	R0=0x5a34(23092) */
   11ece:	01 e1 48 5a 	R1.L = 0x5a48;		/* (23112)	R1=0x5a48(23112) */
   11ed2:	01 06       	IF !CC R0 = R1;
   11ed4:	05 20       	JUMP.S 0x11ede <_mDNSCoreMachineSleep+0x1a2>;
   11ed6:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x5a34(23092) */
   11eda:	00 e1 4c 5a 	R0.L = 0x5a4c;		/* (23116)	R0=0x5a4c(23116) */
   11ede:	f0 b0       	[SP + 0xc] = R0;
   11ee0:	a8 e4 16 01 	R0 = B[P5 + 0x116] (Z);
   11ee4:	30 b1       	[SP + 0x10] = R0;
   11ee6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5a48(23112) */
   11eea:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
   11eec:	01 e1 cc 5a 	R1.L = 0x5acc;		/* (23244)	R1=0x5acc(23244) */
   11ef0:	ff e3 88 70 	CALL 0x0 <_AddRecordToResponseList>;
   11ef4:	08 21       	JUMP.S 0x12104 <_mDNSCoreMachineSleep+0x3c8>;
   11ef6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5acc(23244) */
   11efa:	45 30       	R0 = P5;
   11efc:	01 e1 84 04 	R1.L = 0x484;		/* (1156)	R1=0x484(1156) */
   11f00:	ff e3 80 70 	CALL 0x0 <_AddRecordToResponseList>;
   11f04:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   11f06:	28 e6 49 00 	[P5 + 0x124] = R0;
   11f0a:	a8 e4 15 01 	R0 = B[P5 + 0x115] (Z);
   11f0e:	00 0c       	CC = R0 == 0x0;
   11f10:	17 1c       	IF CC JUMP 0x11f3e <_mDNSCoreMachineSleep+0x202> (BP);
   11f12:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   11f14:	a8 e6 15 01 	B[P5 + 0x115] = R0;
   11f18:	a8 e5 16 01 	R0 = B[P5 + 0x116] (X);
   11f1c:	08 64       	R0 += 0x1;		/* (  1) */
   11f1e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   11f22:	a8 e6 16 01 	B[P5 + 0x116] = R0;
   11f26:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   11f2a:	10 91       	R0 = [P2];
   11f2c:	29 e4 37 00 	R1 = [P5 + 0xdc];
   11f30:	20 4f       	R0 <<= 0x4;
   11f32:	08 50       	R0 = R0 + R1;
   11f34:	00 0c       	CC = R0 == 0x0;
   11f36:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
   11f38:	01 07       	IF CC R0 = R1;
   11f3a:	28 e6 48 00 	[P5 + 0x120] = R0;
   11f3e:	00 00       	NOP;
   11f40:	a8 e4 98 28 	R0 = B[P5 + 0x2898] (Z);
   11f44:	18 0c       	CC = R0 == 0x3;
   11f46:	13 14       	IF !CC JUMP 0x11f6c <_mDNSCoreMachineSleep+0x230> (BP);
   11f48:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   11f4a:	a8 e6 98 28 	B[P5 + 0x2898] = R0;
   11f4e:	a8 e5 96 28 	R0 = B[P5 + 0x2896] (X);
   11f52:	b0 e6 0c 00 	B[SP + 0xc] = R0;
   11f56:	a8 e5 97 28 	R0 = B[P5 + 0x2897] (X);
   11f5a:	b0 e6 10 00 	B[SP + 0x10] = R0;
   11f5e:	a9 e5 94 28 	R1 = B[P5 + 0x2894] (X);
   11f62:	aa e5 95 28 	R2 = B[P5 + 0x2895] (X);
   11f66:	45 30       	R0 = P5;
   11f68:	ff e3 48 fe 	CALL 0x11bf8 <_mDNSCoreBeSleepProxyServer_internal>;
   11f6c:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x136 */
   11f70:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
   11f74:	2a e5 f2 07 	P2 = [P5 + 0x1fc8];
   11f78:	41 34       	I0 = P1;
   11f7a:	05 20       	JUMP.S 0x11f84 <_mDNSCoreMachineSleep+0x248>;
   11f7c:	20 9d       	R0.L = W[I0];
   11f7e:	50 e6 7a 00 	W[P2 + 0xf4] = R0;
   11f82:	52 91       	P2 = [P2];
   11f84:	42 0c       	CC = P2 == 0x0;
   11f86:	fb 17       	IF !CC JUMP 0x11f7c <_mDNSCoreMachineSleep+0x240> (BP);
   11f88:	28 e4 f7 07 	R0 = [P5 + 0x1fdc];
   11f8c:	ff e3 3a 70 	CALL 0x0 <_AddRecordToResponseList>;
   11f90:	ff 63       	R7 = -0x1 (X);		/*		R7=0xffffffff( -1) */
   11f92:	07 20       	JUMP.S 0x11fa0 <_mDNSCoreMachineSleep+0x264>;
   11f94:	10 32       	P2 = R0;
   11f96:	17 e6 77 02 	[P2 + 0x9dc] = R7;
   11f9a:	10 91       	R0 = [P2];
   11f9c:	ff e3 32 70 	CALL 0x0 <_AddRecordToResponseList>;
   11fa0:	00 0c       	CC = R0 == 0x0;
   11fa2:	f9 17       	IF !CC JUMP 0x11f94 <_mDNSCoreMachineSleep+0x258> (BP);
   11fa4:	45 30       	R0 = P5;
   11fa6:	ff e3 71 97 	CALL 0x4e88 <_mDNSCoreRestartQueries>;
   11faa:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   11fae:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   11fb2:	12 91       	R2 = [P2];
   11fb4:	28 e4 37 00 	R0 = [P5 + 0xdc];
   11fb8:	90 50       	R2 = R0 + R2;
   11fba:	02 0c       	CC = R2 == 0x0;
   11fbc:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
   11fbe:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   11fc2:	11 07       	IF CC R2 = R1;
   11fc4:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   11fc8:	11 91       	R1 = [P2];
   11fca:	2a e6 fc 07 	[P5 + 0x1ff0] = R2;
   11fce:	01 0c       	CC = R1 == 0x0;
   11fd0:	0a 1c       	IF CC JUMP 0x11fe4 <_mDNSCoreMachineSleep+0x2a8> (BP);
   11fd2:	82 52       	R2 = R2 - R0;
   11fd4:	f0 b0       	[SP + 0xc] = R0;
   11fd6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1(  1) */
   11fda:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
   11fdc:	01 e1 00 5b 	R1.L = 0x5b00;		/* (23296)	R1=0x5b00(23296) */
   11fe0:	ff e3 10 70 	CALL 0x0 <_AddRecordToResponseList>;
   11fe4:	2a e1 28 09 	P2 = 0x928 (X);		/*		P2=0x928(2344) */
   11fe8:	2f e1 5c 01 	FP = 0x15c (X);		/*		FP=0x15c(348) */
   11fec:	95 5a       	P2 = P5 + P2;
   11fee:	47 e1 00 00 	R7.H = 0x0;		/* (  0)	R7=0xffff(65535) */
   11ff2:	fd 5b       	FP = P5 + FP;
   11ff4:	72 30       	R6 = P2;
   11ff6:	07 e1 00 00 	R7.L = 0x0;		/* (  0)	R7=0x0 <_AddRecordToResponseList>(  0) */
   11ffa:	00 00       	NOP;
   11ffc:	7c 90       	P4 = [FP++];
   11ffe:	11 20       	JUMP.S 0x12020 <_mDNSCoreMachineSleep+0x2e4>;
   12000:	00 00       	NOP;
   12002:	a3 ac       	P3 = [P4 + 0x8];
   12004:	0b 20       	JUMP.S 0x1201a <_mDNSCoreMachineSleep+0x2de>;
   12006:	17 32       	P2 = R7;
   12008:	4b 30       	R1 = P3;
   1200a:	10 91       	R0 = [P2];
   1200c:	82 c6 10 84 	R2 = R0 << 0x2;
   12010:	82 50       	R2 = R2 + R0;
   12012:	45 30       	R0 = P5;
   12014:	ff e3 80 84 	CALL 0x2914 <_mDNS_Reconfirm_internal>;
   12018:	5b 91       	P3 = [P3];
   1201a:	43 0c       	CC = P3 == 0x0;
   1201c:	f5 17       	IF !CC JUMP 0x12006 <_mDNSCoreMachineSleep+0x2ca> (BP);
   1201e:	64 91       	P4 = [P4];
   12020:	44 0c       	CC = P4 == 0x0;
   12022:	ef 17       	IF !CC JUMP 0x12000 <_mDNSCoreMachineSleep+0x2c4> (BP);
   12024:	47 30       	R0 = FP;
   12026:	30 08       	CC = R0 == R6;
   12028:	e9 17       	IF !CC JUMP 0x11ffa <_mDNSCoreMachineSleep+0x2be> (BP);
   1202a:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
   1202e:	2c e5 f2 07 	P4 = [P5 + 0x1fc8];
   12032:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
   12036:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
   12038:	1f 68       	FP = 0x3 (X);		/*		FP=0x3(  3) */
   1203a:	46 60       	R6 = 0x8 (X);		/*		R6=0x8(  8) */
   1203c:	05 60       	R5 = 0x0 (X);		/*		R5=0x0(  0) */
   1203e:	14 60       	R4 = 0x2 (X);		/*		R4=0x2(  2) */
   12040:	2e 20       	JUMP.S 0x1209c <_mDNSCoreMachineSleep+0x360>;
   12042:	00 00       	NOP;
   12044:	e1 a1       	R1 = [P4 + 0x1c];
   12046:	18 91       	R0 = [P3];
   12048:	01 08       	CC = R1 == R0;
   1204a:	0f 14       	IF !CC JUMP 0x12068 <_mDNSCoreMachineSleep+0x32c> (BP);
   1204c:	a0 e4 46 00 	R0 = B[P4 + 0x46] (Z);
   12050:	00 0c       	CC = R0 == 0x0;
   12052:	0b 14       	IF !CC JUMP 0x12068 <_mDNSCoreMachineSleep+0x32c> (BP);
   12054:	20 a2       	R0 = [P4 + 0x20];
   12056:	ff e3 d5 6f 	CALL 0x0 <_AddRecordToResponseList>;
   1205a:	00 0c       	CC = R0 == 0x0;
   1205c:	06 14       	IF !CC JUMP 0x12068 <_mDNSCoreMachineSleep+0x32c> (BP);
   1205e:	45 30       	R0 = P5;
   12060:	4c 30       	R1 = P4;
   12062:	ff e3 df a9 	CALL 0x7420 <_ActivateUnicastRegistration>;
   12066:	1a 20       	JUMP.S 0x1209a <_mDNSCoreMachineSleep+0x35e>;
   12068:	81 60       	R1 = 0x10 (X);		/*		R1=0x10( 16) */
   1206a:	a0 e4 04 00 	R0 = B[P4 + 0x4] (Z);
   1206e:	08 08       	CC = R0 == R1;
   12070:	06 14       	IF !CC JUMP 0x1207c <_mDNSCoreMachineSleep+0x340> (BP);
   12072:	60 a3       	R0 = [P4 + 0x34];
   12074:	00 0c       	CC = R0 == 0x0;
   12076:	03 14       	IF !CC JUMP 0x1207c <_mDNSCoreMachineSleep+0x340> (BP);
   12078:	a4 e6 04 00 	B[P4 + 0x4] = R4;
   1207c:	a6 e6 86 00 	B[P4 + 0x86] = R6;
   12080:	a0 e4 04 00 	R0 = B[P4 + 0x4] (Z);
   12084:	10 0c       	CC = R0 == 0x2;
   12086:	07 06       	IF !CC R0 = R7;
   12088:	47 07       	IF CC R0 = FP;
   1208a:	a0 e6 85 00 	B[P4 + 0x85] = R0;
   1208e:	25 e6 23 00 	[P4 + 0x8c] = R5;
   12092:	45 30       	R0 = P5;
   12094:	4c 30       	R1 = P4;
   12096:	ff e3 ad 72 	CALL 0x5f0 <_InitializeLastAPTime>;
   1209a:	64 91       	P4 = [P4];
   1209c:	44 0c       	CC = P4 == 0x0;
   1209e:	d2 17       	IF !CC JUMP 0x12042 <_mDNSCoreMachineSleep+0x306> (BP);
   120a0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x928 */
   120a4:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   120a8:	52 91       	P2 = [P2];
   120aa:	42 30       	R0 = P2;
   120ac:	c2 0c       	CC = P2 < 0x0;
   120ae:	18 64       	R0 += 0x3;		/* (  3) */
   120b0:	42 06       	IF !CC R0 = P2;
   120b2:	51 44       	P1 = P2 << 0x2;
   120b4:	10 4d       	R0 >>>= 0x2;
   120b6:	91 5a       	P2 = P1 + P2;
   120b8:	4a 30       	R1 = P2;
   120ba:	28 e6 f2 09 	[P5 + 0x27c8] = R0;
   120be:	28 e4 37 00 	R0 = [P5 + 0xdc];
   120c2:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   120c6:	81 50       	R2 = R1 + R0;
   120c8:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   120cc:	11 91       	R1 = [P2];
   120ce:	2a e6 f3 09 	[P5 + 0x27cc] = R2;
   120d2:	01 0c       	CC = R1 == 0x0;
   120d4:	0a 1c       	IF CC JUMP 0x120e8 <_mDNSCoreMachineSleep+0x3ac> (BP);
   120d6:	82 52       	R2 = R2 - R0;
   120d8:	f0 b0       	[SP + 0xc] = R0;
   120da:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x10( 16) */
   120de:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
   120e0:	01 e1 34 5b 	R1.L = 0x5b34;		/* (23348)	R1=0x5b34(23348) */
   120e4:	ff e3 8e 6f 	CALL 0x0 <_AddRecordToResponseList>;
   120e8:	45 30       	R0 = P5;
   120ea:	ff e3 8b 6f 	CALL 0x0 <_AddRecordToResponseList>;
   120ee:	a6 6c       	SP += 0x14;		/* ( 20) */
   120f0:	77 90       	FP = [SP++];
   120f2:	45 30       	R0 = P5;
   120f4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5b34(23348) */
   120f8:	01 e1 84 04 	R1.L = 0x484;		/* (1156)	R1=0x484(1156) */
   120fc:	27 01       	RETS = [SP++];
   120fe:	a3 05       	(R7:4, P5:3) = [SP++];
   12100:	ff e2 80 6f 	JUMP.L 0x0 <_AddRecordToResponseList>;
   12104:	a6 6c       	SP += 0x14;		/* ( 20) */
   12106:	77 90       	FP = [SP++];
   12108:	27 01       	RETS = [SP++];
   1210a:	a3 05       	(R7:4, P5:3) = [SP++];
   1210c:	10 00       	RTS;
	...

00012110 <_mDNS_GrowCache>:
_mDNS_GrowCache():
   12110:	60 05       	[--SP] = (R7:4);
   12112:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0x8(  8) */
   12116:	67 01       	[--SP] = RETS;
   12118:	21 30       	R4 = R1;
   1211a:	06 e1 50 00 	R6.L = 0x50;		/* ( 80)	R6=0x50( 80) */
   1211e:	38 30       	R7 = R0;
   12120:	a6 6f       	SP += -0xc;		/* (-12) */
   12122:	2a 30       	R5 = R2;
   12124:	0e 30       	R1 = R6;
   12126:	ff e3 6d 6f 	CALL 0x0 <_AddRecordToResponseList>;
   1212a:	07 30       	R0 = R7;
   1212c:	0c 30       	R1 = R4;
   1212e:	15 30       	R2 = R5;
   12130:	ff e3 a2 70 	CALL 0x274 <_mDNS_GrowCache_internal>;
   12134:	66 6c       	SP += 0xc;		/* ( 12) */
   12136:	27 01       	RETS = [SP++];
   12138:	07 30       	R0 = R7;
   1213a:	0e 30       	R1 = R6;
   1213c:	20 05       	(R7:4) = [SP++];
   1213e:	ff e2 61 6f 	JUMP.L 0x0 <_AddRecordToResponseList>;
	...

00012144 <_mDNS_Init>:
_mDNS_Init():
   12144:	e3 05       	[--SP] = (R7:4, P5:3);
   12146:	00 e8 03 00 	LINK 0xc;		/* (12) */
   1214a:	3a 32       	FP = R2;
   1214c:	28 32       	P5 = R0;
   1214e:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x3(  3) */
   12152:	19 32       	P3 = R1;
   12154:	36 e4 10 00 	R6 = [SP + 0x40];
   12158:	f4 a3       	R4 = [SP + 0x3c];
   1215a:	35 e4 11 00 	R5 = [SP + 0x44];
   1215e:	34 e5 12 00 	P4 = [SP + 0x48];
   12162:	00 e1 60 5b 	R0.L = 0x5b60;		/* (23392)	R0=0x5b60(23392) */
   12166:	ff e3 4d 6f 	CALL 0x0 <_AddRecordToResponseList>;
   1216a:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   1216e:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   12172:	10 95       	R0 = W[P2] (Z);
   12174:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   12178:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   1217c:	28 b7       	W[P5 + 0x18] = R0;
   1217e:	68 b7       	W[P5 + 0x1a] = R0;
   12180:	10 91       	R0 = [P2];
   12182:	6b 93       	[P5] = P3;
   12184:	ee b0       	[P5 + 0xc] = R6;
   12186:	e8 b1       	[P5 + 0x1c] = R0;
   12188:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
   1218a:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
   1218c:	47 0c       	CC = FP == 0x0;
   1218e:	50 a0       	R0 = [P2 + 0x4];
   12190:	0b 68       	P3 = 0x1 (X);		/*		P3=0x1(  1) */
   12192:	27 07       	IF CC R4 = R7;
   12194:	6f b0       	[P5 + 0x4] = R7;
   12196:	af b0       	[P5 + 0x8] = R7;
   12198:	2f b1       	[P5 + 0x10] = R7;
   1219a:	6b bd       	[P5 + 0x14] = P3;
   1219c:	28 b2       	[P5 + 0x20] = R0;
   1219e:	6d b2       	[P5 + 0x24] = R5;
   121a0:	ac be       	[P5 + 0x28] = P4;
   121a2:	ae e6 88 7c 	B[P5 + 0x7c88] = R6;
   121a6:	ef b2       	[P5 + 0x2c] = R7;
   121a8:	2f b3       	[P5 + 0x30] = R7;
   121aa:	2f e6 3a 00 	[P5 + 0xe8] = R7;
   121ae:	ae e6 34 00 	B[P5 + 0x34] = R6;
   121b2:	ae e6 35 00 	B[P5 + 0x35] = R6;
   121b6:	ae e6 36 00 	B[P5 + 0x36] = R6;
   121ba:	ff e3 23 6f 	CALL 0x0 <_AddRecordToResponseList>;
   121be:	00 0c       	CC = R0 == 0x0;
   121c0:	1c 15       	IF !CC JUMP 0x123f8 <_mDNS_Init+0x2b4> (BP);
   121c2:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
   121c4:	ff e3 1e 6f 	CALL 0x0 <_AddRecordToResponseList>;
   121c8:	28 e6 36 00 	[P5 + 0xd8] = R0;
   121cc:	ff e3 1a 6f 	CALL 0x0 <_AddRecordToResponseList>;
   121d0:	29 e4 36 00 	R1 = [P5 + 0xd8];
   121d4:	48 51       	R5 = R0 + R1;
   121d6:	15 32       	P2 = R5;
   121d8:	4c e1 00 78 	P4.H = 0x7800;		/* (30720)	P4=0x78000000 */
   121dc:	0c e1 00 00 	P4.L = 0x0;		/* (  0)	P4=0x78000000 */
   121e0:	ae e6 14 01 	B[P5 + 0x114] = R6;
   121e4:	ae e6 15 01 	B[P5 + 0x115] = R6;
   121e8:	22 5b       	P4 = P2 + P4;
   121ea:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   121ee:	ae e6 16 01 	B[P5 + 0x116] = R6;
   121f2:	ae e6 17 01 	B[P5 + 0x117] = R6;
   121f6:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   121fa:	11 91       	R1 = [P2];
   121fc:	e0 61       	R0 = 0x3c (X);		/*		R0=0x3c( 60) */
   121fe:	c8 40       	R0 *= R1;
   12200:	05 50       	R0 = R5 + R0;
   12202:	00 0c       	CC = R0 == 0x0;
   12204:	43 07       	IF CC R0 = P3;
   12206:	28 e6 47 00 	[P5 + 0x11c] = R0;
   1220a:	50 60       	R0 = 0xa (X);		/*		R0=0xa( 10) */
   1220c:	2f e6 37 00 	[P5 + 0xdc] = R7;
   12210:	2d e6 38 00 	[P5 + 0xe0] = R5;
   12214:	2d e6 39 00 	[P5 + 0xe4] = R5;
   12218:	2d e6 3b 00 	[P5 + 0xec] = R5;
   1221c:	2c e7 3c 00 	[P5 + 0xf0] = P4;
   12220:	2c e7 3d 00 	[P5 + 0xf4] = P4;
   12224:	2c e7 3e 00 	[P5 + 0xf8] = P4;
   12228:	2c e7 3f 00 	[P5 + 0xfc] = P4;
   1222c:	2c e7 40 00 	[P5 + 0x100] = P4;
   12230:	2c e7 41 00 	[P5 + 0x104] = P4;
   12234:	2c e7 4b 00 	[P5 + 0x12c] = P4;
   12238:	2f e6 42 00 	[P5 + 0x108] = R7;
   1223c:	2f e6 43 00 	[P5 + 0x10c] = R7;
   12240:	2f e6 44 00 	[P5 + 0x110] = R7;
   12244:	2f e6 48 00 	[P5 + 0x120] = R7;
   12248:	2f e6 49 00 	[P5 + 0x124] = R7;
   1224c:	2f e6 4c 00 	[P5 + 0x130] = R7;
   12250:	2f e6 4d 00 	[P5 + 0x134] = R7;
   12254:	2f e6 4e 00 	[P5 + 0x138] = R7;
   12258:	2f e6 4f 00 	[P5 + 0x13c] = R7;
   1225c:	2f e6 50 00 	[P5 + 0x140] = R7;
   12260:	2f e6 51 00 	[P5 + 0x144] = R7;
   12264:	2f e6 52 00 	[P5 + 0x148] = R7;
   12268:	2f e6 53 00 	[P5 + 0x14c] = R7;
   1226c:	2f e6 54 00 	[P5 + 0x150] = R7;
   12270:	28 e6 55 00 	[P5 + 0x154] = R0;
   12274:	28 e1 5c 01 	P0 = 0x15c (X);		/*		P0=0x15c(348) */
   12278:	29 e1 28 09 	P1 = 0x928 (X);		/*		P1=0x928(2344) */
   1227c:	2f e6 56 00 	[P5 + 0x158] = R7;
   12280:	05 5a       	P0 = P5 + P0;
   12282:	4d 5a       	P1 = P5 + P1;
   12284:	2a e1 f3 01 	P2 = 0x1f3 (X);		/*		P2=0x1f3(499) */
   12288:	b2 e0 03 20 	LSETUP(0x1228c <_mDNS_Init+0x148>, 0x1228e <_mDNS_Init+0x14a>) LC1 = P2;
   1228c:	07 92       	[P0++] = R7;
   1228e:	4c 92       	[P1++] = P4;
   12290:	45 30       	R0 = P5;
   12292:	4f 30       	R1 = FP;
   12294:	14 30       	R2 = R4;
   12296:	ff e3 ef 6f 	CALL 0x274 <_mDNS_GrowCache_internal>;
   1229a:	2f e6 41 04 	[P5 + 0x1104] = R7;
   1229e:	29 e1 08 11 	P1 = 0x1108 (X);		/*		P1=0x1108(4360) */
   122a2:	4d 5a       	P1 = P5 + P1;
   122a4:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
   122a6:	2a e1 f3 01 	P2 = 0x1f3 (X);		/*		P2=0x1f3(499) */
   122aa:	b2 e0 02 20 	LSETUP(0x122ae <_mDNS_Init+0x16a>, 0x122ae <_mDNS_Init+0x16a>) LC1 = P2;
   122ae:	0f 92       	[P1++] = R7;
   122b0:	2a e1 fc 1f 	P2 = 0x1ffc (X);		/*		P2=0x1ffc(8188) */
   122b4:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
   122b6:	95 5a       	P2 = P5 + P2;
   122b8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x484(1156) */
   122bc:	ae e6 14 19 	B[P5 + 0x1914] = R6;
   122c0:	ae e6 d4 18 	B[P5 + 0x18d4] = R6;
   122c4:	ae e6 54 19 	B[P5 + 0x1954] = R6;
   122c8:	ae e6 54 1a 	B[P5 + 0x1a54] = R6;
   122cc:	ae e6 54 1b 	B[P5 + 0x1b54] = R6;
   122d0:	2f e6 f2 07 	[P5 + 0x1fc8] = R7;
   122d4:	2f e6 f3 07 	[P5 + 0x1fcc] = R7;
   122d8:	2f e6 f4 07 	[P5 + 0x1fd0] = R7;
   122dc:	2f e6 f6 07 	[P5 + 0x1fd8] = R7;
   122e0:	2f e6 f5 07 	[P5 + 0x1fd4] = R7;
   122e4:	2f e6 f7 07 	[P5 + 0x1fdc] = R7;
   122e8:	2f e6 f8 07 	[P5 + 0x1fe0] = R7;
   122ec:	2f e6 f9 07 	[P5 + 0x1fe4] = R7;
   122f0:	2f e6 fa 07 	[P5 + 0x1fe8] = R7;
   122f4:	2c e7 fb 07 	[P5 + 0x1fec] = P4;
   122f8:	2c e7 fc 07 	[P5 + 0x1ff0] = P4;
   122fc:	2f e6 fd 07 	[P5 + 0x1ff4] = R7;
   12300:	42 30       	R0 = P2;
   12302:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
   12306:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
   12308:	ff e3 7c 6e 	CALL 0x0 <_AddRecordToResponseList>;
   1230c:	2a e1 10 20 	P2 = 0x2010 (X);		/*		P2=0x2010(8208) */
   12310:	95 5a       	P2 = P5 + P2;
   12312:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
   12316:	42 30       	R0 = P2;
   12318:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
   1231c:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
   1231e:	ff e3 71 6e 	CALL 0x0 <_AddRecordToResponseList>;
   12322:	2a e1 24 20 	P2 = 0x2024 (X);		/*		P2=0x2024(8228) */
   12326:	95 5a       	P2 = P5 + P2;
   12328:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
   1232c:	42 30       	R0 = P2;
   1232e:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
   12332:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
   12334:	ff e3 66 6e 	CALL 0x0 <_AddRecordToResponseList>;
   12338:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
   1233a:	28 e6 13 08 	[P5 + 0x204c] = R0;
   1233e:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
   12340:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x2024 */
   12344:	28 e6 e0 09 	[P5 + 0x2780] = R0;
   12348:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   1234c:	10 91       	R0 = [P2];
   1234e:	28 e6 f4 09 	[P5 + 0x27d0] = R0;
   12352:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   12354:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   12358:	68 e6 f0 13 	W[P5 + 0x27e0] = R0;
   1235c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   12360:	10 95       	R0 = W[P2] (Z);
   12362:	68 e6 3e 14 	W[P5 + 0x287c] = R0;
   12366:	68 e6 3f 14 	W[P5 + 0x287e] = R0;
   1236a:	2f e6 0e 08 	[P5 + 0x2038] = R7;
   1236e:	ae e6 04 25 	B[P5 + 0x2504] = R6;
   12372:	ae e6 04 26 	B[P5 + 0x2604] = R6;
   12376:	2f e6 c1 09 	[P5 + 0x2704] = R7;
   1237a:	ae e6 08 27 	B[P5 + 0x2708] = R6;
   1237e:	2f e6 c6 09 	[P5 + 0x2718] = R7;
   12382:	ae e6 3c 27 	B[P5 + 0x273c] = R6;
   12386:	2f e6 df 09 	[P5 + 0x277c] = R7;
   1238a:	2f e6 f0 09 	[P5 + 0x27c0] = R7;
   1238e:	2f e6 f1 09 	[P5 + 0x27c4] = R7;
   12392:	2f e6 f2 09 	[P5 + 0x27c8] = R7;
   12396:	2c e7 f3 09 	[P5 + 0x27cc] = P4;
   1239a:	2f e6 f5 09 	[P5 + 0x27d4] = R7;
   1239e:	2f e6 f6 09 	[P5 + 0x27d8] = R7;
   123a2:	2d e6 f7 09 	[P5 + 0x27dc] = R5;
   123a6:	2f e6 1c 0a 	[P5 + 0x2870] = R7;
   123aa:	2f e6 1d 0a 	[P5 + 0x2874] = R7;
   123ae:	2f e6 1e 0a 	[P5 + 0x2878] = R7;
   123b2:	2f e6 20 0a 	[P5 + 0x2880] = R7;
   123b6:	2f e6 21 0a 	[P5 + 0x2884] = R7;
   123ba:	2f e6 22 0a 	[P5 + 0x2888] = R7;
   123be:	2f e6 23 0a 	[P5 + 0x288c] = R7;
   123c2:	2f e6 24 0a 	[P5 + 0x2890] = R7;
   123c6:	ae e6 94 28 	B[P5 + 0x2894] = R6;
   123ca:	ae e6 95 28 	B[P5 + 0x2895] = R6;
   123ce:	ae e6 96 28 	B[P5 + 0x2896] = R6;
   123d2:	66 6c       	SP += 0xc;		/* ( 12) */
   123d4:	77 90       	FP = [SP++];
   123d6:	ae e6 97 28 	B[P5 + 0x2897] = R6;
   123da:	ae e6 98 28 	B[P5 + 0x2898] = R6;
   123de:	2f e6 27 0a 	[P5 + 0x289c] = R7;
   123e2:	27 01       	RETS = [SP++];
   123e4:	2f e6 28 0a 	[P5 + 0x28a0] = R7;
   123e8:	2f e6 a3 0d 	[P5 + 0x368c] = R7;
   123ec:	2f e6 a4 0d 	[P5 + 0x3690] = R7;
   123f0:	45 30       	R0 = P5;
   123f2:	a3 05       	(R7:4, P5:3) = [SP++];
   123f4:	ff e2 06 6e 	JUMP.L 0x0 <_AddRecordToResponseList>;
   123f8:	66 6c       	SP += 0xc;		/* ( 12) */
   123fa:	77 90       	FP = [SP++];
   123fc:	27 01       	RETS = [SP++];
   123fe:	a3 05       	(R7:4, P5:3) = [SP++];
   12400:	10 00       	RTS;
	...

00012404 <_mDNS_ConfigChanged>:
_mDNS_ConfigChanged():
   12404:	fc 05       	[--SP] = (R7:7, P5:4);
   12406:	28 32       	P5 = R0;
   12408:	67 01       	[--SP] = RETS;
   1240a:	29 e1 60 fd 	P1 = -0x2a0 (X);		/*		P1=0xfffffd60(-672) */
   1240e:	8e 5b       	SP = SP + P1;
   12410:	a8 e4 98 28 	R0 = B[P5 + 0x2898] (Z);
   12414:	08 0c       	CC = R0 == 0x1;
   12416:	48 14       	IF !CC JUMP 0x124a6 <_mDNS_ConfigChanged+0xa2> (BP);
   12418:	56 30       	R2 = SP;
   1241a:	23 e1 60 02 	R3 = 0x260 (X);		/*		R3=0x260 <_NSSCallback>(608) */
   1241e:	5a 50       	R1 = R2 + R3;
   12420:	56 32       	P2 = SP;
   12422:	02 6d       	P2 += 0x20;		/* ( 32) */
   12424:	23 e1 20 01 	R3 = 0x120 (X);		/*		R3=0x120(288) */
   12428:	7e 30       	R7 = SP;
   1242a:	9f 50       	R2 = R7 + R3;
   1242c:	f2 bc       	[SP + 0xc] = P2;
   1242e:	28 e4 f1 0b 	R0 = [P5 + 0x2fc4];
   12432:	ff e3 e7 6d 	CALL 0x0 <_AddRecordToResponseList>;
   12436:	a8 e4 94 28 	R0 = B[P5 + 0x2894] (Z);
   1243a:	f0 b0       	[SP + 0xc] = R0;
   1243c:	a8 e4 95 28 	R0 = B[P5 + 0x2895] (Z);
   12440:	30 b1       	[SP + 0x10] = R0;
   12442:	2a e1 a0 02 	P2 = 0x2a0 (X);		/*		P2=0x2a0(672) */
   12446:	a8 e4 96 28 	R0 = B[P5 + 0x2896] (Z);
   1244a:	b2 5a       	P2 = P2 + SP;
   1244c:	2c e1 81 ff 	P4 = -0x7f (X);		/*		P4=0xffffff81(-127) */
   12450:	22 5b       	P4 = P2 + P4;
   12452:	70 b1       	[SP + 0x14] = R0;
   12454:	a8 e4 97 28 	R0 = B[P5 + 0x2897] (Z);
   12458:	2a e1 d4 18 	P2 = 0x18d4 (X);		/*		P2=0x18d4(6356) */
   1245c:	b0 b1       	[SP + 0x18] = R0;
   1245e:	95 5a       	P2 = P5 + P2;
   12460:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x14( 20) */
   12464:	02 e1 ac 27 	R2.L = 0x27ac;		/* (10156)	R2=0x27ac(10156) */
   12468:	f2 bd       	[SP + 0x1c] = P2;
   1246a:	44 30       	R0 = P4;
   1246c:	f1 61       	R1 = 0x3e (X);		/*		R1=0x3e( 62) */
   1246e:	ff e3 c9 6d 	CALL 0x0 <_AddRecordToResponseList>;
   12472:	b0 e6 20 02 	B[SP + 0x220] = R0;
   12476:	b2 e4 60 02 	R2 = B[SP + 0x260] (Z);
   1247a:	40 43       	R0 = R0.B (Z);
   1247c:	02 08       	CC = R2 == R0;
   1247e:	09 14       	IF !CC JUMP 0x12490 <_mDNS_ConfigChanged+0x8c> (BP);
   12480:	21 e1 61 02 	R1 = 0x261 (X);		/*		R1=0x261(609) */
   12484:	0f 50       	R0 = R7 + R1;
   12486:	4c 30       	R1 = P4;
   12488:	ff e3 bc 6d 	CALL 0x0 <_AddRecordToResponseList>;
   1248c:	00 0c       	CC = R0 == 0x0;
   1248e:	0c 14       	IF !CC JUMP 0x124a6 <_mDNS_ConfigChanged+0xa2> (BP);
   12490:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
   12492:	2a e1 a4 28 	P2 = 0x28a4 (X);		/*		P2=0x28a4(10404) */
   12496:	a8 e6 98 28 	B[P5 + 0x2898] = R0;
   1249a:	95 5a       	P2 = P5 + P2;
   1249c:	4a 30       	R1 = P2;
   1249e:	45 30       	R0 = P5;
   124a0:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
   124a2:	ff e3 ef b2 	CALL 0x8a80 <_mDNS_DeregisterService_drt>;
   124a6:	00 00       	NOP;
   124a8:	6a ae       	P2 = [P5 + 0x24];
   124aa:	42 0c       	CC = P2 == 0x0;
   124ac:	07 18       	IF CC JUMP 0x124ba <_mDNS_ConfigChanged+0xb6>;
   124ae:	41 e1 fe ff 	R1.H = 0xfffe;		/* ( -2)	R1=0xfffe0261(-130463) */
   124b2:	45 30       	R0 = P5;
   124b4:	01 e1 01 ff 	R1.L = 0xff01;		/* (-255)	R1=0xfffeff01(-65791) */
   124b8:	62 00       	CALL (P2);
   124ba:	29 e1 a0 02 	P1 = 0x2a0 (X);		/*		P1=0x2a0(672) */
   124be:	8e 5b       	SP = SP + P1;
   124c0:	27 01       	RETS = [SP++];
   124c2:	bc 05       	(R7:7, P5:4) = [SP++];
   124c4:	10 00       	RTS;
	...

000124c8 <_DNSServerChangeForQuestion>:
_DNSServerChangeForQuestion():
   124c8:	e3 05       	[--SP] = (R7:4, P5:3);
   124ca:	00 e8 08 00 	LINK 0x20;		/* (32) */
   124ce:	38 32       	FP = R0;
   124d0:	29 32       	P5 = R1;
   124d2:	3a 30       	R7 = R2;
   124d4:	ff e3 28 b8 	CALL 0x9524 <_mDNS_NewMessageID>;
   124d8:	68 e6 99 00 	W[P5 + 0x132] = R0;
   124dc:	a8 a3       	R0 = [P5 + 0x38];
   124de:	00 0c       	CC = R0 == 0x0;
   124e0:	0d 18       	IF CC JUMP 0x124fa <_DNSServerChangeForQuestion+0x32>;
   124e2:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
   124e6:	95 5a       	P2 = P5 + P2;
   124e8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xff01(65281) */
   124ec:	52 30       	R2 = P2;
   124ee:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   124f0:	01 e1 74 5b 	R1.L = 0x5b74;		/* (23412)	R1=0x5b74(23412) */
   124f4:	ff e3 86 6d 	CALL 0x0 <_AddRecordToResponseList>;
   124f8:	37 21       	JUMP.S 0x12766 <_DNSServerChangeForQuestion+0x29e>;
   124fa:	2c e1 34 01 	P4 = 0x134 (X);		/*		P4=0x134(308) */
   124fe:	25 5b       	P4 = P5 + P4;
   12500:	44 30       	R0 = P4;
   12502:	ff e3 7f 6d 	CALL 0x0 <_AddRecordToResponseList>;
   12506:	41 e1 d5 20 	R1.H = 0x20d5;		/* (8405)	R1=0x20d55b74(550853492) */
   1250a:	30 30       	R6 = R0;
   1250c:	01 e1 39 6b 	R1.L = 0x6b39;		/* (27449)	R1=0x20d56b39(550857529) */
   12510:	ff e3 78 6d 	CALL 0x0 <_AddRecordToResponseList>;
   12514:	82 c6 d0 83 	R1 = R0 >> 0x6;
   12518:	6a a0       	R2 = [P5 + 0x4];
   1251a:	20 e1 f3 01 	R0 = 0x1f3 (X);		/*		R0=0x1f3(499) */
   1251e:	c1 40       	R1 *= R0;
   12520:	f4 bc       	[SP + 0xc] = P4;
   12522:	4e 52       	R1 = R6 - R1;
   12524:	47 30       	R0 = FP;
   12526:	ff e3 5f 7f 	CALL 0x23e4 <_CacheGroupForName>;
   1252a:	18 32       	P3 = R0;
   1252c:	2c e4 32 00 	R4 = [P5 + 0xc8];
   12530:	3a e5 4d 00 	P2 = [FP + 0x134];
   12534:	04 20       	JUMP.S 0x1253c <_DNSServerChangeForQuestion+0x74>;
   12536:	6a 08       	CC = P2 == P5;
   12538:	06 1c       	IF CC JUMP 0x12544 <_DNSServerChangeForQuestion+0x7c> (BP);
   1253a:	52 91       	P2 = [P2];
   1253c:	42 0c       	CC = P2 == 0x0;
   1253e:	fc 17       	IF !CC JUMP 0x12536 <_DNSServerChangeForQuestion+0x6e> (BP);
   12540:	05 60       	R5 = 0x0 (X);		/*		R5=0x0(  0) */
   12542:	02 20       	JUMP.S 0x12546 <_DNSServerChangeForQuestion+0x7e>;
   12544:	0d 60       	R5 = 0x1 (X);		/*		R5=0x1(  1) */
   12546:	2f e6 32 00 	[P5 + 0xc8] = R7;
   1254a:	43 0c       	CC = P3 == 0x0;
   1254c:	03 1c       	IF CC JUMP 0x12552 <_DNSServerChangeForQuestion+0x8a> (BP);
   1254e:	9c ac       	P4 = [P3 + 0x8];
   12550:	23 20       	JUMP.S 0x12596 <_DNSServerChangeForQuestion+0xce>;
   12552:	04 68       	P4 = 0x0 (X);		/*		P4=0x0(  0) */
   12554:	21 20       	JUMP.S 0x12596 <_DNSServerChangeForQuestion+0xce>;
   12556:	44 30       	R0 = P4;
   12558:	20 64       	R0 += 0x4;		/* (  4) */
   1255a:	4d 30       	R1 = P5;
   1255c:	ff e3 52 6d 	CALL 0x0 <_AddRecordToResponseList>;
   12560:	00 0c       	CC = R0 == 0x0;
   12562:	18 1c       	IF CC JUMP 0x12592 <_DNSServerChangeForQuestion+0xca> (BP);
   12564:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
   12568:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   1256c:	10 91       	R0 = [P2];
   1256e:	00 0c       	CC = R0 == 0x0;
   12570:	17 1c       	IF CC JUMP 0x1259e <_DNSServerChangeForQuestion+0xd6> (BP);
   12572:	a0 a2       	R0 = [P4 + 0x28];
   12574:	22 a2       	R2 = [P4 + 0x20];
   12576:	00 0c       	CC = R0 == 0x0;
   12578:	03 18       	IF CC JUMP 0x1257e <_DNSServerChangeForQuestion+0xb6>;
   1257a:	40 64       	R0 += 0x8;		/* (  8) */
   1257c:	02 20       	JUMP.S 0x12580 <_DNSServerChangeForQuestion+0xb8>;
   1257e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   12580:	f0 b0       	[SP + 0xc] = R0;
   12582:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x6b39(27449) */
   12586:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
   12588:	01 e1 bc 5b 	R1.L = 0x5bbc;		/* (23484)	R1=0x5bbc(23484) */
   1258c:	ff e3 3a 6d 	CALL 0x0 <_AddRecordToResponseList>;
   12590:	07 20       	JUMP.S 0x1259e <_DNSServerChangeForQuestion+0xd6>;
   12592:	00 00       	NOP;
   12594:	64 91       	P4 = [P4];
   12596:	44 0c       	CC = P4 == 0x0;
   12598:	df 17       	IF !CC JUMP 0x12556 <_DNSServerChangeForQuestion+0x8e> (BP);
   1259a:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
   1259c:	02 20       	JUMP.S 0x125a0 <_DNSServerChangeForQuestion+0xd8>;
   1259e:	0e 60       	R6 = 0x1 (X);		/*		R6=0x1(  1) */
   125a0:	2c e6 32 00 	[P5 + 0xc8] = R4;
   125a4:	43 0c       	CC = P3 == 0x0;
   125a6:	03 1c       	IF CC JUMP 0x125ac <_DNSServerChangeForQuestion+0xe4> (BP);
   125a8:	9c ac       	P4 = [P3 + 0x8];
   125aa:	64 20       	JUMP.S 0x12672 <_DNSServerChangeForQuestion+0x1aa>;
   125ac:	04 68       	P4 = 0x0 (X);		/*		P4=0x0(  0) */
   125ae:	62 20       	JUMP.S 0x12672 <_DNSServerChangeForQuestion+0x1aa>;
   125b0:	44 30       	R0 = P4;
   125b2:	20 64       	R0 += 0x4;		/* (  4) */
   125b4:	4d 30       	R1 = P5;
   125b6:	ff e3 25 6d 	CALL 0x0 <_AddRecordToResponseList>;
   125ba:	00 0c       	CC = R0 == 0x0;
   125bc:	58 1c       	IF CC JUMP 0x1266c <_DNSServerChangeForQuestion+0x1a4> (BP);
   125be:	b0 e4 1a 00 	R0 = B[SP + 0x1a] (Z);
   125c2:	08 02       	CC = R0;
   125c4:	35 1c       	IF CC JUMP 0x1262e <_DNSServerChangeForQuestion+0x166> (BP);
   125c6:	18 91       	R0 = [P3];
   125c8:	00 0c       	CC = R0 == 0x0;
   125ca:	19 1c       	IF CC JUMP 0x125fc <_DNSServerChangeForQuestion+0x134> (BP);
   125cc:	a1 a2       	R1 = [P4 + 0x28];
   125ce:	22 a2       	R2 = [P4 + 0x20];
   125d0:	01 0c       	CC = R1 == 0x0;
   125d2:	03 18       	IF CC JUMP 0x125d8 <_DNSServerChangeForQuestion+0x110>;
   125d4:	41 64       	R1 += 0x8;		/* (  8) */
   125d6:	02 20       	JUMP.S 0x125da <_DNSServerChangeForQuestion+0x112>;
   125d8:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
   125da:	b0 e4 19 00 	R0 = B[SP + 0x19] (Z);
   125de:	08 02       	CC = R0;
   125e0:	04 18       	IF CC JUMP 0x125e8 <_DNSServerChangeForQuestion+0x120>;
   125e2:	07 30       	R0 = R7;
   125e4:	40 64       	R0 += 0x8;		/* (  8) */
   125e6:	02 20       	JUMP.S 0x125ea <_DNSServerChangeForQuestion+0x122>;
   125e8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   125ea:	f1 b0       	[SP + 0xc] = R1;
   125ec:	30 b1       	[SP + 0x10] = R0;
   125ee:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
   125f2:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
   125f4:	01 e1 10 5c 	R1.L = 0x5c10;		/* (23568)	R1=0x5c10(23568) */
   125f8:	ff e3 04 6d 	CALL 0x0 <_AddRecordToResponseList>;
   125fc:	47 30       	R0 = FP;
   125fe:	4c 30       	R1 = P4;
   12600:	ff e3 de 8b 	CALL 0x3dbc <_mDNS_PurgeCacheResourceRecord>;
   12604:	b0 e4 1b 00 	R0 = B[SP + 0x1b] (Z);
   12608:	08 02       	CC = R0;
   1260a:	12 1c       	IF CC JUMP 0x1262e <_DNSServerChangeForQuestion+0x166> (BP);
   1260c:	22 e4 10 00 	R2 = [P4 + 0x40];
   12610:	02 0c       	CC = R2 == 0x0;
   12612:	2d 18       	IF CC JUMP 0x1266c <_DNSServerChangeForQuestion+0x1a4>;
   12614:	f2 ad       	P2 = [SP + 0x1c];
   12616:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5c10(23568) */
   1261a:	f5 bc       	[SP + 0xc] = P5;
   1261c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   1261e:	32 bd       	[SP + 0x10] = P2;
   12620:	01 e1 60 5c 	R1.L = 0x5c60;		/* (23648)	R1=0x5c60(23648) */
   12624:	ff e3 ee 6c 	CALL 0x0 <_AddRecordToResponseList>;
   12628:	24 e6 10 00 	[P4 + 0x40] = R4;
   1262c:	20 20       	JUMP.S 0x1266c <_DNSServerChangeForQuestion+0x1a4>;
   1262e:	18 91       	R0 = [P3];
   12630:	00 0c       	CC = R0 == 0x0;
   12632:	1c 1c       	IF CC JUMP 0x1266a <_DNSServerChangeForQuestion+0x1a2> (BP);
   12634:	a1 a2       	R1 = [P4 + 0x28];
   12636:	22 a2       	R2 = [P4 + 0x20];
   12638:	01 0c       	CC = R1 == 0x0;
   1263a:	03 18       	IF CC JUMP 0x12640 <_DNSServerChangeForQuestion+0x178>;
   1263c:	41 64       	R1 += 0x8;		/* (  8) */
   1263e:	02 20       	JUMP.S 0x12642 <_DNSServerChangeForQuestion+0x17a>;
   12640:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
   12642:	b0 e4 19 00 	R0 = B[SP + 0x19] (Z);
   12646:	08 02       	CC = R0;
   12648:	04 18       	IF CC JUMP 0x12650 <_DNSServerChangeForQuestion+0x188>;
   1264a:	07 30       	R0 = R7;
   1264c:	40 64       	R0 += 0x8;		/* (  8) */
   1264e:	02 20       	JUMP.S 0x12652 <_DNSServerChangeForQuestion+0x18a>;
   12650:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   12652:	f1 b0       	[SP + 0xc] = R1;
   12654:	30 b1       	[SP + 0x10] = R0;
   12656:	20 e4 10 00 	R0 = [P4 + 0x40];
   1265a:	70 b1       	[SP + 0x14] = R0;
   1265c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
   12660:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
   12662:	01 e1 bc 5c 	R1.L = 0x5cbc;		/* (23740)	R1=0x5cbc(23740) */
   12666:	ff e3 cd 6c 	CALL 0x0 <_AddRecordToResponseList>;
   1266a:	a7 b2       	[P4 + 0x28] = R7;
   1266c:	00 00       	NOP;
   1266e:	64 91       	P4 = [P4];
   12670:	16 20       	JUMP.S 0x1269c <_DNSServerChangeForQuestion+0x1d4>;
   12672:	06 0c       	CC = R6 == 0x0;
   12674:	00 02       	R0 = CC;
   12676:	07 0c       	CC = R7 == 0x0;
   12678:	b0 e6 1a 00 	B[SP + 0x1a] = R0;
   1267c:	00 02       	R0 = CC;
   1267e:	b0 e6 19 00 	B[SP + 0x19] = R0;
   12682:	05 0c       	CC = R5 == 0x0;
   12684:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
   12688:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x1 */
   1268c:	00 02       	R0 = CC;
   1268e:	95 5a       	P2 = P5 + P2;
   12690:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
   12694:	04 60       	R4 = 0x0 (X);		/*		R4=0x0(  0) */
   12696:	b0 e6 1b 00 	B[SP + 0x1b] = R0;
   1269a:	f2 bd       	[SP + 0x1c] = P2;
   1269c:	44 0c       	CC = P4 == 0x0;
   1269e:	89 17       	IF !CC JUMP 0x125b0 <_DNSServerChangeForQuestion+0xe8> (BP);
   126a0:	06 0c       	CC = R6 == 0x0;
   126a2:	62 18       	IF CC JUMP 0x12766 <_DNSServerChangeForQuestion+0x29e>;
   126a4:	05 0c       	CC = R5 == 0x0;
   126a6:	17 1c       	IF CC JUMP 0x126d4 <_DNSServerChangeForQuestion+0x20c> (BP);
   126a8:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
   126ac:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   126b0:	10 91       	R0 = [P2];
   126b2:	00 0c       	CC = R0 == 0x0;
   126b4:	59 1c       	IF CC JUMP 0x12766 <_DNSServerChangeForQuestion+0x29e> (BP);
   126b6:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
   126ba:	ff e3 a3 6c 	CALL 0x0 <_AddRecordToResponseList>;
   126be:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
   126c2:	95 5a       	P2 = P5 + P2;
   126c4:	30 b1       	[SP + 0x10] = R0;
   126c6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5cbc(23740) */
   126ca:	f2 bc       	[SP + 0xc] = P2;
   126cc:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
   126ce:	01 e1 30 5d 	R1.L = 0x5d30;		/* (23856)	R1=0x5d30(23856) */
   126d2:	1f 20       	JUMP.S 0x12710 <_DNSServerChangeForQuestion+0x248>;
   126d4:	00 00       	NOP;
   126d6:	28 e4 92 00 	R0 = [P5 + 0x248];
   126da:	00 0c       	CC = R0 == 0x0;
   126dc:	1e 1c       	IF CC JUMP 0x12718 <_DNSServerChangeForQuestion+0x250> (BP);
   126de:	28 e4 2d 00 	R0 = [P5 + 0xb4];
   126e2:	00 0c       	CC = R0 == 0x0;
   126e4:	1a 1c       	IF CC JUMP 0x12718 <_DNSServerChangeForQuestion+0x250> (BP);
   126e6:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
   126ea:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   126ee:	10 91       	R0 = [P2];
   126f0:	00 0c       	CC = R0 == 0x0;
   126f2:	3a 1c       	IF CC JUMP 0x12766 <_DNSServerChangeForQuestion+0x29e> (BP);
   126f4:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
   126f8:	ff e3 84 6c 	CALL 0x0 <_AddRecordToResponseList>;
   126fc:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
   12700:	95 5a       	P2 = P5 + P2;
   12702:	30 b1       	[SP + 0x10] = R0;
   12704:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5d30(23856) */
   12708:	f2 bc       	[SP + 0xc] = P2;
   1270a:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
   1270c:	01 e1 80 5d 	R1.L = 0x5d80;		/* (23936)	R1=0x5d80(23936) */
   12710:	55 30       	R2 = P5;
   12712:	ff e3 77 6c 	CALL 0x0 <_AddRecordToResponseList>;
   12716:	28 20       	JUMP.S 0x12766 <_DNSServerChangeForQuestion+0x29e>;
   12718:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
   1271c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   12720:	10 91       	R0 = [P2];
   12722:	00 0c       	CC = R0 == 0x0;
   12724:	12 1c       	IF CC JUMP 0x12748 <_DNSServerChangeForQuestion+0x280> (BP);
   12726:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
   1272a:	ff e3 6b 6c 	CALL 0x0 <_AddRecordToResponseList>;
   1272e:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
   12732:	95 5a       	P2 = P5 + P2;
   12734:	30 b1       	[SP + 0x10] = R0;
   12736:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5d80(23936) */
   1273a:	f2 bc       	[SP + 0xc] = P2;
   1273c:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
   1273e:	01 e1 dc 5d 	R1.L = 0x5ddc;		/* (24028)	R1=0x5ddc(24028) */
   12742:	55 30       	R2 = P5;
   12744:	ff e3 5e 6c 	CALL 0x0 <_AddRecordToResponseList>;
   12748:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
   1274a:	28 e6 31 00 	[P5 + 0xc4] = R0;
   1274e:	6a 91       	P2 = [P5];
   12750:	09 20       	JUMP.S 0x12762 <_DNSServerChangeForQuestion+0x29a>;
   12752:	55 30       	R2 = P5;
   12754:	91 a3       	R1 = [P2 + 0x38];
   12756:	11 08       	CC = R1 == R2;
   12758:	03 14       	IF !CC JUMP 0x1275e <_DNSServerChangeForQuestion+0x296> (BP);
   1275a:	10 e6 31 00 	[P2 + 0xc4] = R0;
   1275e:	00 00       	NOP;
   12760:	52 91       	P2 = [P2];
   12762:	42 0c       	CC = P2 == 0x0;
   12764:	f7 17       	IF !CC JUMP 0x12752 <_DNSServerChangeForQuestion+0x28a> (BP);
   12766:	2f e6 32 00 	[P5 + 0xc8] = R7;
   1276a:	6a 91       	P2 = [P5];
   1276c:	11 20       	JUMP.S 0x1278e <_DNSServerChangeForQuestion+0x2c6>;
   1276e:	00 00       	NOP;
   12770:	91 af       	P1 = [P2 + 0x38];
   12772:	69 08       	CC = P1 == P5;
   12774:	0b 14       	IF !CC JUMP 0x1278a <_DNSServerChangeForQuestion+0x2c2> (BP);
   12776:	28 e4 33 00 	R0 = [P5 + 0xcc];
   1277a:	29 e4 34 00 	R1 = [P5 + 0xd0];
   1277e:	10 e6 33 00 	[P2 + 0xcc] = R0;
   12782:	11 e6 34 00 	[P2 + 0xd0] = R1;
   12786:	17 e6 32 00 	[P2 + 0xc8] = R7;
   1278a:	00 00       	NOP;
   1278c:	52 91       	P2 = [P2];
   1278e:	42 0c       	CC = P2 == 0x0;
   12790:	ef 17       	IF !CC JUMP 0x1276e <_DNSServerChangeForQuestion+0x2a6> (BP);
   12792:	06 6d       	SP += 0x20;		/* ( 32) */
   12794:	77 90       	FP = [SP++];
   12796:	27 01       	RETS = [SP++];
   12798:	a3 05       	(R7:4, P5:3) = [SP++];
   1279a:	10 00       	RTS;

0001279c <_uDNS_SetupDNSConfig>:
_uDNS_SetupDNSConfig():
   1279c:	e3 05       	[--SP] = (R7:4, P5:3);
   1279e:	28 32       	P5 = R0;
   127a0:	00 e8 5c 00 	LINK 0x170;		/* (368) */
   127a4:	2a e1 f4 1f 	P2 = 0x1ff4 (X);		/*		P2=0x1ff4(8180) */
   127a8:	2c e1 f8 1f 	P4 = 0x1ff8 (X);		/*		P4=0x1ff8(8184) */
   127ac:	28 e4 fd 07 	R0 = [P5 + 0x1ff4];
   127b0:	30 b3       	[SP + 0x30] = R0;
   127b2:	28 e4 df 09 	R0 = [P5 + 0x277c];
   127b6:	00 0c       	CC = R0 == 0x0;
   127b8:	95 5a       	P2 = P5 + P2;
   127ba:	01 02       	R1 = CC;
   127bc:	72 30       	R6 = P2;
   127be:	01 4b       	BITTGL (R1, 0x0);		/* bit  0 */
   127c0:	45 30       	R0 = P5;
   127c2:	ff e3 1f 6c 	CALL 0x0 <_AddRecordToResponseList>;
   127c6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5ddc(24028) */
   127ca:	01 e1 3c 00 	R1.L = 0x3c;		/* ( 60)	R1=0x3c( 60) */
   127ce:	45 30       	R0 = P5;
   127d0:	ff e3 18 6c 	CALL 0x0 <_AddRecordToResponseList>;
   127d4:	25 5b       	P4 = P5 + P4;
   127d6:	2a e5 fd 07 	P2 = [P5 + 0x1ff4];
   127da:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
   127dc:	07 20       	JUMP.S 0x127ea <_uDNS_SetupDNSConfig+0x4e>;
   127de:	11 e6 4b 00 	[P2 + 0x12c] = R1;
   127e2:	10 a2       	R0 = [P2 + 0x20];
   127e4:	00 4a       	BITSET (R0, 0x0);		/* bit  0 */
   127e6:	10 b2       	[P2 + 0x20] = R0;
   127e8:	52 91       	P2 = [P2];
   127ea:	42 0c       	CC = P2 == 0x0;
   127ec:	f9 17       	IF !CC JUMP 0x127de <_uDNS_SetupDNSConfig+0x42> (BP);
   127ee:	2a e5 fe 07 	P2 = [P5 + 0x1ff8];
   127f2:	06 20       	JUMP.S 0x127fe <_uDNS_SetupDNSConfig+0x62>;
   127f4:	00 00       	NOP;
   127f6:	90 a0       	R0 = [P2 + 0x8];
   127f8:	00 4a       	BITSET (R0, 0x0);		/* bit  0 */
   127fa:	90 b0       	[P2 + 0x8] = R0;
   127fc:	52 91       	P2 = [P2];
   127fe:	42 0c       	CC = P2 == 0x0;
   12800:	fa 17       	IF !CC JUMP 0x127f4 <_uDNS_SetupDNSConfig+0x58> (BP);
   12802:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   12804:	56 32       	P2 = SP;
   12806:	a2 6d       	P2 += 0x34;		/* ( 52) */
   12808:	30 b1       	[SP + 0x10] = R0;
   1280a:	70 b1       	[SP + 0x14] = R0;
   1280c:	f2 bc       	[SP + 0xc] = P2;
   1280e:	45 30       	R0 = P5;
   12810:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
   12812:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
   12814:	ff e3 f6 6b 	CALL 0x0 <_AddRecordToResponseList>;
   12818:	0e 20       	JUMP.S 0x12834 <_uDNS_SetupDNSConfig+0x98>;
   1281a:	00 00       	NOP;
   1281c:	90 a0       	R0 = [P2 + 0x8];
   1281e:	00 48       	CC = !BITTST (R0, 0x0);		/* bit  0 */
   12820:	07 1c       	IF CC JUMP 0x1282e <_uDNS_SetupDNSConfig+0x92> (BP);
   12822:	10 91       	R0 = [P2];
   12824:	20 93       	[P4] = R0;
   12826:	42 30       	R0 = P2;
   12828:	ff e3 ec 6b 	CALL 0x0 <_AddRecordToResponseList>;
   1282c:	04 20       	JUMP.S 0x12834 <_uDNS_SetupDNSConfig+0x98>;
   1282e:	08 4c       	BITCLR (R0, 0x1);		/* bit  1 */
   12830:	90 b0       	[P2 + 0x8] = R0;
   12832:	62 32       	P4 = P2;
   12834:	62 91       	P2 = [P4];
   12836:	42 0c       	CC = P2 == 0x0;
   12838:	f1 17       	IF !CC JUMP 0x1281a <_uDNS_SetupDNSConfig+0x7e> (BP);
   1283a:	2a e1 5c 01 	P2 = 0x15c (X);		/*		P2=0x15c(348) */
   1283e:	95 5a       	P2 = P5 + P2;
   12840:	6a 30       	R5 = P2;
   12842:	2a e1 28 09 	P2 = 0x928 (X);		/*		P2=0x928(2344) */
   12846:	95 5a       	P2 = P5 + P2;
   12848:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
   1284c:	65 30       	R4 = P5;
   1284e:	72 be       	[SP + 0x24] = P2;
   12850:	3d 30       	R7 = R5;
   12852:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
   12856:	bc 65       	R4 += 0x37;		/* ( 55) */
   12858:	0f 32       	P1 = R7;
   1285a:	27 64       	R7 += 0x4;		/* (  4) */
   1285c:	4f 90       	FP = [P1++];
   1285e:	4f 20       	JUMP.S 0x128fc <_uDNS_SetupDNSConfig+0x160>;
   12860:	00 00       	NOP;
   12862:	bc ac       	P4 = [FP + 0x8];
   12864:	49 20       	JUMP.S 0x128f6 <_uDNS_SetupDNSConfig+0x15a>;
   12866:	00 00       	NOP;
   12868:	e0 a1       	R0 = [P4 + 0x1c];
   1286a:	00 0c       	CC = R0 == 0x0;
   1286c:	43 14       	IF !CC JUMP 0x128f2 <_uDNS_SetupDNSConfig+0x156> (BP);
   1286e:	22 e5 10 00 	P2 = [P4 + 0x40];
   12872:	21 a2       	R1 = [P4 + 0x20];
   12874:	42 0c       	CC = P2 == 0x0;
   12876:	04 1c       	IF CC JUMP 0x1287e <_uDNS_SetupDNSConfig+0xe2> (BP);
   12878:	12 e4 46 00 	R2 = [P2 + 0x118];
   1287c:	02 20       	JUMP.S 0x12880 <_uDNS_SetupDNSConfig+0xe4>;
   1287e:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
   12880:	45 30       	R0 = P5;
   12882:	ff e3 f9 8e 	CALL 0x4674 <_GetServerForName>;
   12886:	00 0c       	CC = R0 == 0x0;
   12888:	35 1c       	IF CC JUMP 0x128f2 <_uDNS_SetupDNSConfig+0x156> (BP);
   1288a:	a1 a2       	R1 = [P4 + 0x28];
   1288c:	08 08       	CC = R0 == R1;
   1288e:	32 1c       	IF CC JUMP 0x128f2 <_uDNS_SetupDNSConfig+0x156> (BP);
   12890:	20 e4 10 00 	R0 = [P4 + 0x40];
   12894:	00 0c       	CC = R0 == 0x0;
   12896:	18 14       	IF !CC JUMP 0x128c6 <_uDNS_SetupDNSConfig+0x12a> (BP);
   12898:	18 91       	R0 = [P3];
   1289a:	00 0c       	CC = R0 == 0x0;
   1289c:	10 1c       	IF CC JUMP 0x128bc <_uDNS_SetupDNSConfig+0x120> (BP);
   1289e:	61 a2       	R1 = [P4 + 0x24];
   128a0:	44 30       	R0 = P4;
   128a2:	21 64       	R1 += 0x4;		/* (  4) */
   128a4:	14 30       	R2 = R4;
   128a6:	20 64       	R0 += 0x4;		/* (  4) */
   128a8:	ff e3 ac 6b 	CALL 0x0 <_AddRecordToResponseList>;
   128ac:	10 30       	R2 = R0;
   128ae:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1(  1) */
   128b2:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
   128b4:	01 e1 44 5e 	R1.L = 0x5e44;		/* (24132)	R1=0x5e44(24132) */
   128b8:	ff e3 a4 6b 	CALL 0x0 <_AddRecordToResponseList>;
   128bc:	45 30       	R0 = P5;
   128be:	4c 30       	R1 = P4;
   128c0:	ff e3 7e 8a 	CALL 0x3dbc <_mDNS_PurgeCacheResourceRecord>;
   128c4:	17 20       	JUMP.S 0x128f2 <_uDNS_SetupDNSConfig+0x156>;
   128c6:	18 91       	R0 = [P3];
   128c8:	00 0c       	CC = R0 == 0x0;
   128ca:	10 1c       	IF CC JUMP 0x128ea <_uDNS_SetupDNSConfig+0x14e> (BP);
   128cc:	61 a2       	R1 = [P4 + 0x24];
   128ce:	44 30       	R0 = P4;
   128d0:	21 64       	R1 += 0x4;		/* (  4) */
   128d2:	14 30       	R2 = R4;
   128d4:	20 64       	R0 += 0x4;		/* (  4) */
   128d6:	ff e3 95 6b 	CALL 0x0 <_AddRecordToResponseList>;
   128da:	10 30       	R2 = R0;
   128dc:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5e44(24132) */
   128e0:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
   128e2:	01 e1 74 5e 	R1.L = 0x5e74;		/* (24180)	R1=0x5e74(24180) */
   128e6:	ff e3 8d 6b 	CALL 0x0 <_AddRecordToResponseList>;
   128ea:	45 30       	R0 = P5;
   128ec:	4c 30       	R1 = P4;
   128ee:	ff e3 91 8a 	CALL 0x3e10 <_PurgeOrReconfirmCacheRecord.clone.16>;
   128f2:	00 00       	NOP;
   128f4:	64 91       	P4 = [P4];
   128f6:	44 0c       	CC = P4 == 0x0;
   128f8:	b7 17       	IF !CC JUMP 0x12866 <_uDNS_SetupDNSConfig+0xca> (BP);
   128fa:	7f 91       	FP = [FP];
   128fc:	47 0c       	CC = FP == 0x0;
   128fe:	b1 17       	IF !CC JUMP 0x12860 <_uDNS_SetupDNSConfig+0xc4> (BP);
   12900:	70 a2       	R0 = [SP + 0x24];
   12902:	07 08       	CC = R7 == R0;
   12904:	aa 17       	IF !CC JUMP 0x12858 <_uDNS_SetupDNSConfig+0xbc> (BP);
   12906:	2c e5 4c 00 	P4 = [P5 + 0x130];
   1290a:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
   1290c:	04 60       	R4 = 0x0 (X);		/*		R4=0x0(  0) */
   1290e:	53 20       	JUMP.S 0x129b4 <_uDNS_SetupDNSConfig+0x218>;
   12910:	00 00       	NOP;
   12912:	60 e4 99 00 	R0 = W[P4 + 0x132] (Z);
   12916:	00 0c       	CC = R0 == 0x0;
   12918:	4c 1c       	IF CC JUMP 0x129b0 <_uDNS_SetupDNSConfig+0x214> (BP);
   1291a:	a0 a3       	R0 = [P4 + 0x38];
   1291c:	00 0c       	CC = R0 == 0x0;
   1291e:	49 14       	IF !CC JUMP 0x129b0 <_uDNS_SetupDNSConfig+0x214> (BP);
   12920:	4c 30       	R1 = P4;
   12922:	45 30       	R0 = P5;
   12924:	ff e3 10 8e 	CALL 0x4544 <_SetValidDNSServers>;
   12928:	67 e6 6b 00 	W[P4 + 0xd6] = R7;
   1292c:	45 30       	R0 = P5;
   1292e:	4c 30       	R1 = P4;
   12930:	ff e3 12 8f 	CALL 0x4754 <_GetServerForQuestion>;
   12934:	10 30       	R2 = R0;
   12936:	20 e4 32 00 	R0 = [P4 + 0xc8];
   1293a:	10 08       	CC = R0 == R2;
   1293c:	24 18       	IF CC JUMP 0x12984 <_uDNS_SetupDNSConfig+0x1e8>;
   1293e:	45 30       	R0 = P5;
   12940:	4c 30       	R1 = P4;
   12942:	ff e3 c3 fd 	CALL 0x124c8 <_DNSServerChangeForQuestion>;
   12946:	20 e4 92 00 	R0 = [P4 + 0x248];
   1294a:	a4 e6 d8 00 	B[P4 + 0xd8] = R4;
   1294e:	00 0c       	CC = R0 == 0x0;
   12950:	05 1c       	IF CC JUMP 0x1295a <_uDNS_SetupDNSConfig+0x1be> (BP);
   12952:	20 e4 2d 00 	R0 = [P4 + 0xb4];
   12956:	00 0c       	CC = R0 == 0x0;
   12958:	2c 14       	IF !CC JUMP 0x129b0 <_uDNS_SetupDNSConfig+0x214> (BP);
   1295a:	45 30       	R0 = P5;
   1295c:	4c 30       	R1 = P4;
   1295e:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
   12960:	ff e3 e0 91 	CALL 0x4d20 <_ActivateUnicastQuery>;
   12964:	63 91       	P3 = [P4];
   12966:	0c 20       	JUMP.S 0x1297e <_uDNS_SetupDNSConfig+0x1e2>;
   12968:	4c 30       	R1 = P4;
   1296a:	98 a3       	R0 = [P3 + 0x38];
   1296c:	08 08       	CC = R0 == R1;
   1296e:	06 14       	IF !CC JUMP 0x1297a <_uDNS_SetupDNSConfig+0x1de> (BP);
   12970:	45 30       	R0 = P5;
   12972:	4b 30       	R1 = P3;
   12974:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
   12976:	ff e3 d5 91 	CALL 0x4d20 <_ActivateUnicastQuery>;
   1297a:	00 00       	NOP;
   1297c:	5b 91       	P3 = [P3];
   1297e:	43 0c       	CC = P3 == 0x0;
   12980:	f4 17       	IF !CC JUMP 0x12968 <_uDNS_SetupDNSConfig+0x1cc> (BP);
   12982:	17 20       	JUMP.S 0x129b0 <_uDNS_SetupDNSConfig+0x214>;
   12984:	62 91       	P2 = [P4];
   12986:	13 20       	JUMP.S 0x129ac <_uDNS_SetupDNSConfig+0x210>;
   12988:	00 00       	NOP;
   1298a:	91 af       	P1 = [P2 + 0x38];
   1298c:	61 08       	CC = P1 == P4;
   1298e:	0d 14       	IF !CC JUMP 0x129a8 <_uDNS_SetupDNSConfig+0x20c> (BP);
   12990:	20 e4 33 00 	R0 = [P4 + 0xcc];
   12994:	21 e4 34 00 	R1 = [P4 + 0xd0];
   12998:	10 e6 33 00 	[P2 + 0xcc] = R0;
   1299c:	20 e4 32 00 	R0 = [P4 + 0xc8];
   129a0:	11 e6 34 00 	[P2 + 0xd0] = R1;
   129a4:	10 e6 32 00 	[P2 + 0xc8] = R0;
   129a8:	00 00       	NOP;
   129aa:	52 91       	P2 = [P2];
   129ac:	42 0c       	CC = P2 == 0x0;
   129ae:	ed 17       	IF !CC JUMP 0x12988 <_uDNS_SetupDNSConfig+0x1ec> (BP);
   129b0:	00 00       	NOP;
   129b2:	64 91       	P4 = [P4];
   129b4:	44 0c       	CC = P4 == 0x0;
   129b6:	ad 17       	IF !CC JUMP 0x12910 <_uDNS_SetupDNSConfig+0x174> (BP);
   129b8:	a3 20       	JUMP.S 0x12afe <_uDNS_SetupDNSConfig+0x362>;
   129ba:	00 00       	NOP;
   129bc:	38 a2       	R0 = [FP + 0x20];
   129be:	00 48       	CC = !BITTST (R0, 0x0);		/* bit  0 */
   129c0:	9b 1c       	IF CC JUMP 0x12af6 <_uDNS_SetupDNSConfig+0x35a> (BP);
   129c2:	57 30       	R2 = FP;
   129c4:	42 64       	R2 += 0x8;		/* (  8) */
   129c6:	35 b2       	[SP + 0x20] = R5;
   129c8:	b2 b2       	[SP + 0x28] = R2;
   129ca:	31 ae       	P1 = [SP + 0x20];
   129cc:	0f 90       	R7 = [P1++];
   129ce:	31 be       	[SP + 0x20] = P1;
   129d0:	81 20       	JUMP.S 0x12ad2 <_uDNS_SetupDNSConfig+0x336>;
   129d2:	17 32       	P2 = R7;
   129d4:	94 ac       	P4 = [P2 + 0x8];
   129d6:	7a 20       	JUMP.S 0x12aca <_uDNS_SetupDNSConfig+0x32e>;
   129d8:	00 00       	NOP;
   129da:	e0 a1       	R0 = [P4 + 0x1c];
   129dc:	00 0c       	CC = R0 == 0x0;
   129de:	74 14       	IF !CC JUMP 0x12ac6 <_uDNS_SetupDNSConfig+0x32a> (BP);
   129e0:	a0 a2       	R0 = [P4 + 0x28];
   129e2:	4f 30       	R1 = FP;
   129e4:	08 08       	CC = R0 == R1;
   129e6:	70 14       	IF !CC JUMP 0x12ac6 <_uDNS_SetupDNSConfig+0x32a> (BP);
   129e8:	23 e5 10 00 	P3 = [P4 + 0x40];
   129ec:	43 0c       	CC = P3 == 0x0;
   129ee:	53 1c       	IF CC JUMP 0x12a94 <_uDNS_SetupDNSConfig+0x2f8> (BP);
   129f0:	18 e4 32 00 	R0 = [P3 + 0xc8];
   129f4:	00 0c       	CC = R0 == 0x0;
   129f6:	44 30       	R0 = P4;
   129f8:	20 64       	R0 += 0x4;		/* (  4) */
   129fa:	61 a2       	R1 = [P4 + 0x24];
   129fc:	1b 14       	IF !CC JUMP 0x12a32 <_uDNS_SetupDNSConfig+0x296> (BP);
   129fe:	21 64       	R1 += 0x4;		/* (  4) */
   12a00:	f2 a2       	R2 = [SP + 0x2c];
   12a02:	ff e3 ff 6a 	CALL 0x0 <_AddRecordToResponseList>;
   12a06:	10 30       	R2 = R0;
   12a08:	58 e5 1a 01 	R0 = W[P3 + 0x234] (X);
   12a0c:	f2 b1       	[SP + 0x1c] = R2;
   12a0e:	ff e3 f9 6a 	CALL 0x0 <_AddRecordToResponseList>;
   12a12:	29 e1 34 01 	P1 = 0x134 (X);		/*		P1=0x134(308) */
   12a16:	8b 5a       	P2 = P3 + P1;
   12a18:	f2 bc       	[SP + 0xc] = P2;
   12a1a:	b2 ae       	P2 = [SP + 0x28];
   12a1c:	30 b1       	[SP + 0x10] = R0;
   12a1e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5e74(24180) */
   12a22:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   12a24:	72 bd       	[SP + 0x14] = P2;
   12a26:	01 e1 b0 5e 	R1.L = 0x5eb0;		/* (24240)	R1=0x5eb0(24240) */
   12a2a:	f2 a1       	R2 = [SP + 0x1c];
   12a2c:	ff e3 ea 6a 	CALL 0x0 <_AddRecordToResponseList>;
   12a30:	1e 20       	JUMP.S 0x12a6c <_uDNS_SetupDNSConfig+0x2d0>;
   12a32:	21 64       	R1 += 0x4;		/* (  4) */
   12a34:	f2 a2       	R2 = [SP + 0x2c];
   12a36:	ff e3 e5 6a 	CALL 0x0 <_AddRecordToResponseList>;
   12a3a:	10 30       	R2 = R0;
   12a3c:	58 e5 1a 01 	R0 = W[P3 + 0x234] (X);
   12a40:	f2 b1       	[SP + 0x1c] = R2;
   12a42:	ff e3 df 6a 	CALL 0x0 <_AddRecordToResponseList>;
   12a46:	29 e1 34 01 	P1 = 0x134 (X);		/*		P1=0x134(308) */
   12a4a:	8b 5a       	P2 = P3 + P1;
   12a4c:	f2 bc       	[SP + 0xc] = P2;
   12a4e:	30 b1       	[SP + 0x10] = R0;
   12a50:	b2 ae       	P2 = [SP + 0x28];
   12a52:	18 e4 32 00 	R0 = [P3 + 0xc8];
   12a56:	40 64       	R0 += 0x8;		/* (  8) */
   12a58:	70 b1       	[SP + 0x14] = R0;
   12a5a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5eb0(24240) */
   12a5e:	b2 bd       	[SP + 0x18] = P2;
   12a60:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   12a62:	01 e1 2c 5f 	R1.L = 0x5f2c;		/* (24364)	R1=0x5f2c(24364) */
   12a66:	f2 a1       	R2 = [SP + 0x1c];
   12a68:	ff e3 cc 6a 	CALL 0x0 <_AddRecordToResponseList>;
   12a6c:	18 e4 32 00 	R0 = [P3 + 0xc8];
   12a70:	4f 30       	R1 = FP;
   12a72:	08 08       	CC = R0 == R1;
   12a74:	24 14       	IF !CC JUMP 0x12abc <_uDNS_SetupDNSConfig+0x320> (BP);
   12a76:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x134 */
   12a7a:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
   12a7e:	02 68       	P2 = 0x0 (X);		/*		P2=0x0(  0) */
   12a80:	08 91       	R0 = [P1];
   12a82:	49 a0       	R1 = [P1 + 0x4];
   12a84:	18 e6 33 00 	[P3 + 0xcc] = R0;
   12a88:	19 e6 34 00 	[P3 + 0xd0] = R1;
   12a8c:	1a e7 32 00 	[P3 + 0xc8] = P2;
   12a90:	a2 be       	[P4 + 0x28] = P2;
   12a92:	16 20       	JUMP.S 0x12abe <_uDNS_SetupDNSConfig+0x322>;
   12a94:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
   12a98:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_AddRecordToResponseList> */
   12a9c:	09 91       	R1 = [P1];
   12a9e:	01 0c       	CC = R1 == 0x0;
   12aa0:	0d 1c       	IF CC JUMP 0x12aba <_uDNS_SetupDNSConfig+0x31e> (BP);
   12aa2:	b2 ae       	P2 = [SP + 0x28];
   12aa4:	22 a2       	R2 = [P4 + 0x20];
   12aa6:	40 64       	R0 += 0x8;		/* (  8) */
   12aa8:	f0 b0       	[SP + 0xc] = R0;
   12aaa:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5f2c(24364) */
   12aae:	32 bd       	[SP + 0x10] = P2;
   12ab0:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
   12ab2:	01 e1 a4 5f 	R1.L = 0x5fa4;		/* (24484)	R1=0x5fa4(24484) */
   12ab6:	ff e3 a5 6a 	CALL 0x0 <_AddRecordToResponseList>;
   12aba:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   12abc:	a0 b2       	[P4 + 0x28] = R0;
   12abe:	45 30       	R0 = P5;
   12ac0:	4c 30       	R1 = P4;
   12ac2:	ff e3 a7 89 	CALL 0x3e10 <_PurgeOrReconfirmCacheRecord.clone.16>;
   12ac6:	00 00       	NOP;
   12ac8:	64 91       	P4 = [P4];
   12aca:	44 0c       	CC = P4 == 0x0;
   12acc:	86 17       	IF !CC JUMP 0x129d8 <_uDNS_SetupDNSConfig+0x23c> (BP);
   12ace:	0f 32       	P1 = R7;
   12ad0:	0f 91       	R7 = [P1];
   12ad2:	07 0c       	CC = R7 == 0x0;
   12ad4:	7f 17       	IF !CC JUMP 0x129d2 <_uDNS_SetupDNSConfig+0x236> (BP);
   12ad6:	32 ae       	P2 = [SP + 0x20];
   12ad8:	71 ae       	P1 = [SP + 0x24];
   12ada:	4a 08       	CC = P2 == P1;
   12adc:	77 17       	IF !CC JUMP 0x129ca <_uDNS_SetupDNSConfig+0x22e> (BP);
   12ade:	0e 32       	P1 = R6;
   12ae0:	4a 91       	P2 = [P1];
   12ae2:	10 91       	R0 = [P2];
   12ae4:	08 93       	[P1] = R0;
   12ae6:	47 30       	R0 = FP;
   12ae8:	ff e3 8c 6a 	CALL 0x0 <_AddRecordToResponseList>;
   12aec:	14 32       	P2 = R4;
   12aee:	50 99       	R0 = B[P2] (X);
   12af0:	f8 67       	R0 += -0x1;		/* ( -1) */
   12af2:	10 9b       	B[P2] = R0;
   12af4:	0c 20       	JUMP.S 0x12b0c <_uDNS_SetupDNSConfig+0x370>;
   12af6:	08 4c       	BITCLR (R0, 0x1);		/* bit  1 */
   12af8:	38 b2       	[FP + 0x20] = R0;
   12afa:	77 30       	R6 = FP;
   12afc:	08 20       	JUMP.S 0x12b0c <_uDNS_SetupDNSConfig+0x370>;
   12afe:	45 30       	R0 = P5;
   12b00:	b8 65       	R0 += 0x37;		/* ( 55) */
   12b02:	44 e1 00 00 	R4.H = 0x0;		/* (  0)	R4=0x0 <_AddRecordToResponseList>(  0) */
   12b06:	f0 b2       	[SP + 0x2c] = R0;
   12b08:	04 e1 00 00 	R4.L = 0x0;		/* (  0)	R4=0x0 <_AddRecordToResponseList>(  0) */
   12b0c:	0e 32       	P1 = R6;
   12b0e:	4f 91       	FP = [P1];
   12b10:	47 0c       	CC = FP == 0x0;
   12b12:	54 17       	IF !CC JUMP 0x129ba <_uDNS_SetupDNSConfig+0x21e> (BP);
   12b14:	30 a3       	R0 = [SP + 0x30];
   12b16:	00 0c       	CC = R0 == 0x0;
   12b18:	01 02       	R1 = CC;
   12b1a:	28 e4 fd 07 	R0 = [P5 + 0x1ff4];
   12b1e:	00 0c       	CC = R0 == 0x0;
   12b20:	00 02       	R0 = CC;
   12b22:	01 08       	CC = R1 == R0;
   12b24:	3a 1c       	IF CC JUMP 0x12b98 <_uDNS_SetupDNSConfig+0x3fc> (BP);
   12b26:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
   12b28:	0d 32       	P1 = R5;
   12b2a:	25 64       	R5 += 0x4;		/* (  4) */
   12b2c:	4b 90       	P3 = [P1++];
   12b2e:	12 20       	JUMP.S 0x12b52 <_uDNS_SetupDNSConfig+0x3b6>;
   12b30:	00 00       	NOP;
   12b32:	9c ac       	P4 = [P3 + 0x8];
   12b34:	0c 20       	JUMP.S 0x12b4c <_uDNS_SetupDNSConfig+0x3b0>;
   12b36:	00 00       	NOP;
   12b38:	e0 a1       	R0 = [P4 + 0x1c];
   12b3a:	00 0c       	CC = R0 == 0x0;
   12b3c:	06 14       	IF !CC JUMP 0x12b48 <_uDNS_SetupDNSConfig+0x3ac> (BP);
   12b3e:	45 30       	R0 = P5;
   12b40:	4c 30       	R1 = P4;
   12b42:	ff e3 3d 89 	CALL 0x3dbc <_mDNS_PurgeCacheResourceRecord>;
   12b46:	0f 64       	R7 += 0x1;		/* (  1) */
   12b48:	00 00       	NOP;
   12b4a:	64 91       	P4 = [P4];
   12b4c:	44 0c       	CC = P4 == 0x0;
   12b4e:	f4 17       	IF !CC JUMP 0x12b36 <_uDNS_SetupDNSConfig+0x39a> (BP);
   12b50:	5b 91       	P3 = [P3];
   12b52:	43 0c       	CC = P3 == 0x0;
   12b54:	ee 17       	IF !CC JUMP 0x12b30 <_uDNS_SetupDNSConfig+0x394> (BP);
   12b56:	70 a2       	R0 = [SP + 0x24];
   12b58:	05 08       	CC = R5 == R0;
   12b5a:	e7 17       	IF !CC JUMP 0x12b28 <_uDNS_SetupDNSConfig+0x38c> (BP);
   12b5c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   12b60:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   12b64:	10 91       	R0 = [P2];
   12b66:	00 0c       	CC = R0 == 0x0;
   12b68:	15 1c       	IF CC JUMP 0x12b92 <_uDNS_SetupDNSConfig+0x3f6> (BP);
   12b6a:	28 e4 fd 07 	R0 = [P5 + 0x1ff4];
   12b6e:	00 0c       	CC = R0 == 0x0;
   12b70:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_AddRecordToResponseList>(  0) */
   12b74:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x1(  1) */
   12b78:	00 e1 20 5e 	R0.L = 0x5e20;		/* (24096)	R0=0x5e20(24096) */
   12b7c:	02 e1 34 5e 	R2.L = 0x5e34;		/* (24116)	R2=0x5e34(24116) */
   12b80:	10 06       	IF !CC R2 = R0;
   12b82:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5fa4(24484) */
   12b86:	f7 b0       	[SP + 0xc] = R7;
   12b88:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
   12b8a:	01 e1 1c 60 	R1.L = 0x601c;		/* (24604)	R1=0x601c(24604) */
   12b8e:	ff e3 39 6a 	CALL 0x0 <_AddRecordToResponseList>;
   12b92:	45 30       	R0 = P5;
   12b94:	ff e3 e4 91 	CALL 0x4f5c <_RestartRecordGetZoneData>;
   12b98:	2c e1 04 26 	P4 = 0x2604 (X);		/*		P4=0x2604(9732) */
   12b9c:	25 5b       	P4 = P5 + P4;
   12b9e:	46 30       	R0 = SP;
   12ba0:	a0 65       	R0 += 0x34;		/* ( 52) */
   12ba2:	4c 30       	R1 = P4;
   12ba4:	ff e3 2e 6a 	CALL 0x0 <_AddRecordToResponseList>;
   12ba8:	00 0c       	CC = R0 == 0x0;
   12baa:	34 14       	IF !CC JUMP 0x12c12 <_uDNS_SetupDNSConfig+0x476> (BP);
   12bac:	a8 e4 04 26 	R0 = B[P5 + 0x2604] (Z);
   12bb0:	00 0c       	CC = R0 == 0x0;
   12bb2:	05 1c       	IF CC JUMP 0x12bbc <_uDNS_SetupDNSConfig+0x420> (BP);
   12bb4:	45 30       	R0 = P5;
   12bb6:	4c 30       	R1 = P4;
   12bb8:	ff e3 24 6a 	CALL 0x0 <_AddRecordToResponseList>;
   12bbc:	5e 32       	P3 = SP;
   12bbe:	56 30       	R2 = SP;
   12bc0:	23 e1 34 01 	R3 = 0x134 (X);		/*		R3=0x134(308) */
   12bc4:	a3 6d       	P3 += 0x34;		/* ( 52) */
   12bc6:	5a 50       	R1 = R2 + R3;
   12bc8:	43 30       	R0 = P3;
   12bca:	ff e3 1b 6a 	CALL 0x0 <_AddRecordToResponseList>;
   12bce:	c2 42       	R2 = R0.L (Z);
   12bd0:	27 e1 00 01 	R7 = 0x100 (X);		/*		R7=0x100(256) */
   12bd4:	3a 0a       	CC = R2 <= R7 (IU);
   12bd6:	09 14       	IF !CC JUMP 0x12be8 <_uDNS_SetupDNSConfig+0x44c> (BP);
   12bd8:	2a e1 04 26 	P2 = 0x2604 (X);		/*		P2=0x2604(9732) */
   12bdc:	95 5a       	P2 = P5 + P2;
   12bde:	42 30       	R0 = P2;
   12be0:	4b 30       	R1 = P3;
   12be2:	ff e3 0f 6a 	CALL 0x0 <_AddRecordToResponseList>;
   12be6:	04 20       	JUMP.S 0x12bee <_uDNS_SetupDNSConfig+0x452>;
   12be8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   12bea:	a8 e6 04 26 	B[P5 + 0x2604] = R0;
   12bee:	a8 e4 04 26 	R0 = B[P5 + 0x2604] (Z);
   12bf2:	00 0c       	CC = R0 == 0x0;
   12bf4:	0f 1c       	IF CC JUMP 0x12c12 <_uDNS_SetupDNSConfig+0x476> (BP);
   12bf6:	44 30       	R0 = P4;
   12bf8:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
   12bfa:	ff e3 03 6a 	CALL 0x0 <_AddRecordToResponseList>;
   12bfe:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   12c00:	f0 b0       	[SP + 0xc] = R0;
   12c02:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x5e34(24116) */
   12c06:	45 30       	R0 = P5;
   12c08:	4c 30       	R1 = P4;
   12c0a:	02 e1 e4 05 	R2.L = 0x5e4;		/* (1508)	R2=0x5e4 <_DynDNSHostNameCallback>(1508) */
   12c0e:	ff e3 f9 69 	CALL 0x0 <_AddRecordToResponseList>;
   12c12:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1(  1) */
   12c16:	45 30       	R0 = P5;
   12c18:	01 e1 3c 00 	R1.L = 0x3c;		/* ( 60)	R1=0x3c( 60) */
   12c1c:	ff e3 f2 69 	CALL 0x0 <_AddRecordToResponseList>;
   12c20:	46 30       	R0 = SP;
   12c22:	21 e1 34 01 	R1 = 0x134 (X);		/*		R1=0x134(308) */
   12c26:	c8 51       	R7 = R0 + R1;
   12c28:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x134(308) */
   12c2c:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
   12c30:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
   12c32:	07 30       	R0 = R7;
   12c34:	ff e3 e6 69 	CALL 0x0 <_AddRecordToResponseList>;
   12c38:	29 e1 48 01 	P1 = 0x148 (X);		/*		P1=0x148 <_GetRDLengthMem>(328) */
   12c3c:	ce 5a       	P3 = SP + P1;
   12c3e:	0f 30       	R1 = R7;
   12c40:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
   12c42:	43 30       	R0 = P3;
   12c44:	ff e3 de 69 	CALL 0x0 <_AddRecordToResponseList>;
   12c48:	46 30       	R0 = SP;
   12c4a:	21 e1 5c 01 	R1 = 0x15c (X);		/*		R1=0x15c(348) */
   12c4e:	88 51       	R6 = R0 + R1;
   12c50:	4b 30       	R1 = P3;
   12c52:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
   12c54:	06 30       	R0 = R6;
   12c56:	ff e3 d5 69 	CALL 0x0 <_AddRecordToResponseList>;
   12c5a:	20 60       	R0 = 0x4 (X);		/*		R0=0x4(  4) */
   12c5c:	30 e6 4d 00 	[SP + 0x134] = R0;
   12c60:	30 e6 57 00 	[SP + 0x15c] = R0;
   12c64:	f7 b0       	[SP + 0xc] = R7;
   12c66:	45 30       	R0 = P5;
   12c68:	0e 30       	R1 = R6;
   12c6a:	53 30       	R2 = P3;
   12c6c:	ff e3 ca 69 	CALL 0x0 <_AddRecordToResponseList>;
   12c70:	00 0c       	CC = R0 == 0x0;
   12c72:	29 10       	IF !CC JUMP 0x12cc4 <_uDNS_SetupDNSConfig+0x528>;
   12c74:	82 e1 a9 fe 	R2 = 0xfea9 (Z);		/*		R2=0xfea9(65193) */
   12c78:	70 e4 b0 00 	R0 = W[SP + 0x160] (Z);
   12c7c:	10 08       	CC = R0 == R2;
   12c7e:	23 18       	IF CC JUMP 0x12cc4 <_uDNS_SetupDNSConfig+0x528>;
   12c80:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
   12c82:	30 e4 58 00 	R0 = [SP + 0x160];
   12c86:	00 0c       	CC = R0 == 0x0;
   12c88:	32 e4 54 00 	R2 = [SP + 0x150];
   12c8c:	30 e4 53 00 	R0 = [SP + 0x14c];
   12c90:	02 56       	R0 = R2 | R0;
   12c92:	32 e4 55 00 	R2 = [SP + 0x154];
   12c96:	10 56       	R0 = R0 | R2;
   12c98:	32 e4 56 00 	R2 = [SP + 0x158];
   12c9c:	10 56       	R0 = R0 | R2;
   12c9e:	0e 06       	IF !CC R1 = R6;
   12ca0:	00 0c       	CC = R0 == 0x0;
   12ca2:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
   12ca4:	53 06       	IF !CC R2 = P3;
   12ca6:	30 e4 4e 00 	R0 = [SP + 0x138];
   12caa:	00 0c       	CC = R0 == 0x0;
   12cac:	06 1c       	IF CC JUMP 0x12cb8 <_uDNS_SetupDNSConfig+0x51c> (BP);
   12cae:	5e 30       	R3 = SP;
   12cb0:	27 e1 34 01 	R7 = 0x134 (X);		/*		R7=0x134(308) */
   12cb4:	3b 50       	R0 = R3 + R7;
   12cb6:	02 20       	JUMP.S 0x12cba <_uDNS_SetupDNSConfig+0x51e>;
   12cb8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   12cba:	f0 b0       	[SP + 0xc] = R0;
   12cbc:	45 30       	R0 = P5;
   12cbe:	ff e3 a1 69 	CALL 0x0 <_AddRecordToResponseList>;
   12cc2:	10 20       	JUMP.S 0x12ce2 <_uDNS_SetupDNSConfig+0x546>;
   12cc4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   12cc6:	f0 b0       	[SP + 0xc] = R0;
   12cc8:	45 30       	R0 = P5;
   12cca:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
   12ccc:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
   12cce:	ff e3 99 69 	CALL 0x0 <_AddRecordToResponseList>;
   12cd2:	a8 e4 04 26 	R0 = B[P5 + 0x2604] (Z);
   12cd6:	00 0c       	CC = R0 == 0x0;
   12cd8:	05 1c       	IF CC JUMP 0x12ce2 <_uDNS_SetupDNSConfig+0x546> (BP);
   12cda:	44 30       	R0 = P4;
   12cdc:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
   12cde:	ff e3 91 69 	CALL 0x0 <_AddRecordToResponseList>;
   12ce2:	29 e1 70 01 	P1 = 0x170 (X);		/*		P1=0x170(368) */
   12ce6:	8e 5b       	SP = SP + P1;
   12ce8:	77 90       	FP = [SP++];
   12cea:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   12cec:	27 01       	RETS = [SP++];
   12cee:	a3 05       	(R7:4, P5:3) = [SP++];
   12cf0:	10 00       	RTS;
	...

00012cf4 <_mDNSCoreInitComplete>:
_mDNSCoreInitComplete():
   12cf4:	c5 04       	[--SP] = (P5:5);
   12cf6:	28 32       	P5 = R0;
   12cf8:	67 01       	[--SP] = RETS;
   12cfa:	66 6f       	SP += -0x14;		/* (-20) */
   12cfc:	68 a2       	R0 = [P5 + 0x24];
   12cfe:	69 b1       	[P5 + 0x14] = R1;
   12d00:	00 0c       	CC = R0 == 0x0;
   12d02:	3d 18       	IF CC JUMP 0x12d7c <_mDNSCoreInitComplete+0x88>;
   12d04:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1(  1) */
   12d08:	45 30       	R0 = P5;
   12d0a:	01 e1 24 00 	R1.L = 0x24;		/* ( 36)	R1=0x24( 36) */
   12d0e:	ff e3 79 69 	CALL 0x0 <_AddRecordToResponseList>;
   12d12:	28 a3       	R0 = [P5 + 0x30];
   12d14:	08 64       	R0 += 0x1;		/* (  1) */
   12d16:	e9 a2       	R1 = [P5 + 0x2c];
   12d18:	28 b3       	[P5 + 0x30] = R0;
   12d1a:	01 08       	CC = R1 == R0;
   12d1c:	0e 18       	IF CC JUMP 0x12d38 <_mDNSCoreInitComplete+0x44>;
   12d1e:	f1 b0       	[SP + 0xc] = R1;
   12d20:	30 b1       	[SP + 0x10] = R0;
   12d22:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x24( 36) */
   12d26:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x0 <_AddRecordToResponseList>(  0) */
   12d2a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   12d2c:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
   12d30:	02 e1 24 00 	R2.L = 0x24;		/* ( 36)	R2=0x24( 36) */
   12d34:	ff e3 66 69 	CALL 0x0 <_AddRecordToResponseList>;
   12d38:	6a ae       	P2 = [P5 + 0x24];
   12d3a:	45 30       	R0 = P5;
   12d3c:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
   12d3e:	62 00       	CALL (P2);
   12d40:	e9 a2       	R1 = [P5 + 0x2c];
   12d42:	28 a3       	R0 = [P5 + 0x30];
   12d44:	01 08       	CC = R1 == R0;
   12d46:	0e 18       	IF CC JUMP 0x12d62 <_mDNSCoreInitComplete+0x6e>;
   12d48:	f1 b0       	[SP + 0xc] = R1;
   12d4a:	30 b1       	[SP + 0x10] = R0;
   12d4c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
   12d50:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x24( 36) */
   12d54:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   12d56:	01 e1 40 00 	R1.L = 0x40;		/* ( 64)	R1=0x40( 64) */
   12d5a:	02 e1 24 00 	R2.L = 0x24;		/* ( 36)	R2=0x24( 36) */
   12d5e:	ff e3 51 69 	CALL 0x0 <_AddRecordToResponseList>;
   12d62:	28 a3       	R0 = [P5 + 0x30];
   12d64:	f8 67       	R0 += -0x1;		/* ( -1) */
   12d66:	28 b3       	[P5 + 0x30] = R0;
   12d68:	a6 6c       	SP += 0x14;		/* ( 20) */
   12d6a:	27 01       	RETS = [SP++];
   12d6c:	45 30       	R0 = P5;
   12d6e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x40( 64) */
   12d72:	01 e1 24 00 	R1.L = 0x24;		/* ( 36)	R1=0x24( 36) */
   12d76:	85 04       	(P5:5) = [SP++];
   12d78:	ff e2 44 69 	JUMP.L 0x0 <_AddRecordToResponseList>;
   12d7c:	a6 6c       	SP += 0x14;		/* ( 20) */
   12d7e:	27 01       	RETS = [SP++];
   12d80:	85 04       	(P5:5) = [SP++];
   12d82:	10 00       	RTS;

00012d84 <_mDNS_StartExit>:
_mDNS_StartExit():
   12d84:	fb 05       	[--SP] = (R7:7, P5:3);
   12d86:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x24( 36) */
   12d8a:	28 32       	P5 = R0;
   12d8c:	00 e8 05 00 	LINK 0x14;		/* (20) */
   12d90:	01 e1 14 00 	R1.L = 0x14;		/* ( 20)	R1=0x14( 20) */
   12d94:	ff e3 36 69 	CALL 0x0 <_AddRecordToResponseList>;
   12d98:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x2604 */
   12d9c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   12da0:	10 91       	R0 = [P2];
   12da2:	00 0c       	CC = R0 == 0x0;
   12da4:	08 1c       	IF CC JUMP 0x12db4 <_mDNS_StartExit+0x30> (BP);
   12da6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x14( 20) */
   12daa:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
   12dac:	01 e1 68 60 	R1.L = 0x6068;		/* (24680)	R1=0x6068(24680) */
   12db0:	ff e3 28 69 	CALL 0x0 <_AddRecordToResponseList>;
   12db4:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   12db8:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   12dbc:	52 91       	P2 = [P2];
   12dbe:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
   12dc0:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
   12dc2:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
   12dc4:	51 44       	P1 = P2 << 0x2;
   12dc6:	91 5a       	P2 = P1 + P2;
   12dc8:	29 e5 37 00 	P1 = [P5 + 0xdc];
   12dcc:	27 e1 40 00 	R7 = 0x40 (X);		/*		R7=0x40( 64) */
   12dd0:	8a 5a       	P2 = P2 + P1;
   12dd2:	42 0c       	CC = P2 == 0x0;
   12dd4:	90 07       	IF CC P2 = R0;
   12dd6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   12dd8:	b0 e6 0c 00 	B[SP + 0xc] = R0;
   12ddc:	b0 e6 10 00 	B[SP + 0x10] = R0;
   12de0:	2a e7 3a 00 	[P5 + 0xe8] = P2;
   12de4:	45 30       	R0 = P5;
   12de6:	ff e3 09 f7 	CALL 0x11bf8 <_mDNSCoreBeSleepProxyServer_internal>;
   12dea:	45 30       	R0 = P5;
   12dec:	ff e3 5e 6b 	CALL 0x4a8 <_SuspendLLQs>;
   12df0:	05 20       	JUMP.S 0x12dfa <_mDNS_StartExit+0x76>;
   12df2:	79 50       	R1 = R1 + R7;
   12df4:	45 30       	R0 = P5;
   12df6:	ff e3 05 69 	CALL 0x0 <_AddRecordToResponseList>;
   12dfa:	29 e4 c1 09 	R1 = [P5 + 0x2704];
   12dfe:	01 0c       	CC = R1 == 0x0;
   12e00:	f9 17       	IF !CC JUMP 0x12df2 <_mDNS_StartExit+0x6e> (BP);
   12e02:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   12e06:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   12e0a:	54 91       	P4 = [P2];
   12e0c:	0f 20       	JUMP.S 0x12e2a <_mDNS_StartExit+0xa6>;
   12e0e:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
   12e10:	10 90       	R0 = [P2++];
   12e12:	20 e6 41 03 	[P4 + 0xd04] = R0;
   12e16:	45 30       	R0 = P5;
   12e18:	4a 30       	R1 = P2;
   12e1a:	ff e3 f1 90 	CALL 0x4ffc <_mDNS_Deregister_internal>;
   12e1e:	00 00       	NOP;
   12e20:	22 e5 41 03 	P2 = [P4 + 0xd04];
   12e24:	42 0c       	CC = P2 == 0x0;
   12e26:	f4 17       	IF !CC JUMP 0x12e0e <_mDNS_StartExit+0x8a> (BP);
   12e28:	64 91       	P4 = [P4];
   12e2a:	44 0c       	CC = P4 == 0x0;
   12e2c:	f9 17       	IF !CC JUMP 0x12e1e <_mDNS_StartExit+0x9a> (BP);
   12e2e:	2c e5 f7 07 	P4 = [P5 + 0x1fdc];
   12e32:	0c 20       	JUMP.S 0x12e4a <_mDNS_StartExit+0xc6>;
   12e34:	00 00       	NOP;
   12e36:	a0 e4 b4 14 	R0 = B[P4 + 0x14b4] (Z);
   12e3a:	00 0c       	CC = R0 == 0x0;
   12e3c:	05 1c       	IF CC JUMP 0x12e46 <_mDNS_StartExit+0xc2> (BP);
   12e3e:	45 30       	R0 = P5;
   12e40:	4c 30       	R1 = P4;
   12e42:	ff e3 05 94 	CALL 0x564c <_DeadvertiseInterface>;
   12e46:	00 00       	NOP;
   12e48:	64 91       	P4 = [P4];
   12e4a:	44 0c       	CC = P4 == 0x0;
   12e4c:	f4 17       	IF !CC JUMP 0x12e34 <_mDNS_StartExit+0xb0> (BP);
   12e4e:	0e 20       	JUMP.S 0x12e6a <_mDNS_StartExit+0xe6>;
   12e50:	45 30       	R0 = P5;
   12e52:	4c 30       	R1 = P4;
   12e54:	ff e3 d6 68 	CALL 0x0 <_AddRecordToResponseList>;
   12e58:	38 91       	R0 = [FP];
   12e5a:	a0 b1       	[P4 + 0x18] = R0;
   12e5c:	18 95       	R0 = W[P3] (Z);
   12e5e:	a0 b7       	W[P4 + 0x1c] = R0;
   12e60:	60 e6 16 00 	W[P4 + 0x2c] = R0;
   12e64:	27 b2       	[P4 + 0x20] = R7;
   12e66:	67 b2       	[P4 + 0x24] = R7;
   12e68:	0a 20       	JUMP.S 0x12e7c <_mDNS_StartExit+0xf8>;
   12e6a:	4f e1 00 00 	FP.H = 0x0;		/* (  0)	FP=0x3 */
   12e6e:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
   12e72:	0f e1 00 00 	FP.L = 0x0;		/* (  0)	FP=0x0 <_AddRecordToResponseList> */
   12e76:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_AddRecordToResponseList> */
   12e7a:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
   12e7c:	2c e5 f0 09 	P4 = [P5 + 0x27c0];
   12e80:	44 0c       	CC = P4 == 0x0;
   12e82:	e7 17       	IF !CC JUMP 0x12e50 <_mDNS_StartExit+0xcc> (BP);
   12e84:	2a e5 f5 07 	P2 = [P5 + 0x1fd4];
   12e88:	42 0c       	CC = P2 == 0x0;
   12e8a:	11 18       	IF CC JUMP 0x12eac <_mDNS_StartExit+0x128>;
   12e8c:	42 30       	R0 = P2;
   12e8e:	55 30       	R2 = P5;
   12e90:	ba 65       	R2 += 0x37;		/* ( 55) */
   12e92:	51 a2       	R1 = [P2 + 0x24];
   12e94:	21 64       	R1 += 0x4;		/* (  4) */
   12e96:	20 64       	R0 += 0x4;		/* (  4) */
   12e98:	ff e3 b4 68 	CALL 0x0 <_AddRecordToResponseList>;
   12e9c:	10 30       	R2 = R0;
   12e9e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_AddRecordToResponseList>(  0) */
   12ea2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   12ea4:	01 e1 78 60 	R1.L = 0x6078;		/* (24696)	R1=0x6078(24696) */
   12ea8:	ff e3 ac 68 	CALL 0x0 <_AddRecordToResponseList>;
   12eac:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   12eb0:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   12eb4:	10 91       	R0 = [P2];
   12eb6:	00 0c       	CC = R0 == 0x0;
   12eb8:	08 1c       	IF CC JUMP 0x12ec8 <_mDNS_StartExit+0x144> (BP);
   12eba:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x6078(24696) */
   12ebe:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
   12ec0:	01 e1 b0 60 	R1.L = 0x60b0;		/* (24752)	R1=0x60b0(24752) */
   12ec4:	ff e3 9e 68 	CALL 0x0 <_AddRecordToResponseList>;
   12ec8:	45 30       	R0 = P5;
   12eca:	29 e4 f3 07 	R1 = [P5 + 0x1fcc];
   12ece:	ff e3 11 94 	CALL 0x56f0 <_DeregLoop>;
   12ed2:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   12ed6:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   12eda:	10 91       	R0 = [P2];
   12edc:	00 0c       	CC = R0 == 0x0;
   12ede:	08 1c       	IF CC JUMP 0x12eee <_mDNS_StartExit+0x16a> (BP);
   12ee0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x60b0(24752) */
   12ee4:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
   12ee6:	01 e1 ec 60 	R1.L = 0x60ec;		/* (24812)	R1=0x60ec(24812) */
   12eea:	ff e3 8b 68 	CALL 0x0 <_AddRecordToResponseList>;
   12eee:	45 30       	R0 = P5;
   12ef0:	29 e4 f2 07 	R1 = [P5 + 0x1fc8];
   12ef4:	ff e3 fe 93 	CALL 0x56f0 <_DeregLoop>;
   12ef8:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   12efc:	28 e4 37 00 	R0 = [P5 + 0xdc];
   12f00:	2a e4 3f 00 	R2 = [P5 + 0xfc];
   12f04:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   12f08:	82 52       	R2 = R2 - R0;
   12f0a:	11 91       	R1 = [P2];
   12f0c:	8a 08       	CC = R2 < R1;
   12f0e:	06 14       	IF !CC JUMP 0x12f1a <_mDNS_StartExit+0x196> (BP);
   12f10:	28 e6 3f 00 	[P5 + 0xfc] = R0;
   12f14:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   12f16:	28 e6 3b 00 	[P5 + 0xec] = R0;
   12f1a:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   12f1e:	28 e4 f2 07 	R0 = [P5 + 0x1fc8];
   12f22:	00 0c       	CC = R0 == 0x0;
   12f24:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   12f28:	0a 18       	IF CC JUMP 0x12f3c <_mDNS_StartExit+0x1b8>;
   12f2a:	10 91       	R0 = [P2];
   12f2c:	00 0c       	CC = R0 == 0x0;
   12f2e:	11 1c       	IF CC JUMP 0x12f50 <_mDNS_StartExit+0x1cc> (BP);
   12f30:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x60ec(24812) */
   12f34:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
   12f36:	01 e1 1c 61 	R1.L = 0x611c;		/* (24860)	R1=0x611c(24860) */
   12f3a:	09 20       	JUMP.S 0x12f4c <_mDNS_StartExit+0x1c8>;
   12f3c:	10 91       	R0 = [P2];
   12f3e:	00 0c       	CC = R0 == 0x0;
   12f40:	08 1c       	IF CC JUMP 0x12f50 <_mDNS_StartExit+0x1cc> (BP);
   12f42:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x611c(24860) */
   12f46:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
   12f48:	01 e1 54 61 	R1.L = 0x6154;		/* (24916)	R1=0x6154(24916) */
   12f4c:	ff e3 5a 68 	CALL 0x0 <_AddRecordToResponseList>;
   12f50:	5d 32       	P3 = P5;
   12f52:	2c e5 f3 07 	P4 = [P5 + 0x1fcc];
   12f56:	bb 6d       	P3 += 0x37;		/* ( 55) */
   12f58:	14 20       	JUMP.S 0x12f80 <_mDNS_StartExit+0x1fc>;
   12f5a:	44 30       	R0 = P4;
   12f5c:	61 a2       	R1 = [P4 + 0x24];
   12f5e:	a7 e4 04 00 	R7 = B[P4 + 0x4] (Z);
   12f62:	21 64       	R1 += 0x4;		/* (  4) */
   12f64:	53 30       	R2 = P3;
   12f66:	20 64       	R0 += 0x4;		/* (  4) */
   12f68:	ff e3 4c 68 	CALL 0x0 <_AddRecordToResponseList>;
   12f6c:	f0 b0       	[SP + 0xc] = R0;
   12f6e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x6154(24916) */
   12f72:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   12f74:	01 e1 84 61 	R1.L = 0x6184;		/* (24964)	R1=0x6184(24964) */
   12f78:	17 30       	R2 = R7;
   12f7a:	ff e3 43 68 	CALL 0x0 <_AddRecordToResponseList>;
   12f7e:	64 91       	P4 = [P4];
   12f80:	44 0c       	CC = P4 == 0x0;
   12f82:	ec 17       	IF !CC JUMP 0x12f5a <_mDNS_StartExit+0x1d6> (BP);
   12f84:	68 a1       	R0 = [P5 + 0x14];
   12f86:	00 0c       	CC = R0 == 0x0;
   12f88:	04 1c       	IF CC JUMP 0x12f90 <_mDNS_StartExit+0x20c> (BP);
   12f8a:	45 30       	R0 = P5;
   12f8c:	ff e3 c6 bd 	CALL 0xab18 <_DiscardDeregistrations>;
   12f90:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x6184(24964) */
   12f94:	45 30       	R0 = P5;
   12f96:	01 e1 14 00 	R1.L = 0x14;		/* ( 20)	R1=0x14( 20) */
   12f9a:	ff e3 33 68 	CALL 0x0 <_AddRecordToResponseList>;
   12f9e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   12fa2:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   12fa6:	10 91       	R0 = [P2];
   12fa8:	00 0c       	CC = R0 == 0x0;
   12faa:	0c 1c       	IF CC JUMP 0x12fc2 <_mDNS_StartExit+0x23e> (BP);
   12fac:	a6 6c       	SP += 0x14;		/* ( 20) */
   12fae:	77 90       	FP = [SP++];
   12fb0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x14( 20) */
   12fb4:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
   12fb6:	01 e1 d0 61 	R1.L = 0x61d0;		/* (25040)	R1=0x61d0(25040) */
   12fba:	27 01       	RETS = [SP++];
   12fbc:	bb 05       	(R7:7, P5:3) = [SP++];
   12fbe:	ff e2 21 68 	JUMP.L 0x0 <_AddRecordToResponseList>;
   12fc2:	a6 6c       	SP += 0x14;		/* ( 20) */
   12fc4:	77 90       	FP = [SP++];
   12fc6:	27 01       	RETS = [SP++];
   12fc8:	bb 05       	(R7:7, P5:3) = [SP++];
   12fca:	10 00       	RTS;

00012fcc <_mDNS_FinalExit>:
_mDNS_FinalExit():
   12fcc:	e3 05       	[--SP] = (R7:4, P5:3);
   12fce:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   12fd2:	28 32       	P5 = R0;
   12fd4:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   12fd8:	10 91       	R0 = [P2];
   12fda:	00 e8 05 00 	LINK 0x14;		/* (20) */
   12fde:	00 0c       	CC = R0 == 0x0;
   12fe0:	08 1c       	IF CC JUMP 0x12ff0 <_mDNS_FinalExit+0x24> (BP);
   12fe2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x61d0(25040) */
   12fe6:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
   12fe8:	01 e1 e8 61 	R1.L = 0x61e8;		/* (25064)	R1=0x61e8(25064) */
   12fec:	ff e3 0a 68 	CALL 0x0 <_AddRecordToResponseList>;
   12ff0:	45 30       	R0 = P5;
   12ff2:	ff e3 07 68 	CALL 0x0 <_AddRecordToResponseList>;
   12ff6:	7d 32       	FP = P5;
   12ff8:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
   12ffa:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
   12ffc:	25 e1 50 00 	R5 = 0x50 (X);		/*		R5=0x50( 80) */
   13000:	24 e1 57 00 	R4 = 0x57 (X);		/*		R4=0x57( 87) */
   13004:	2d 20       	JUMP.S 0x1305e <_mDNS_FinalExit+0x92>;
   13006:	00 00       	NOP;
   13008:	20 91       	R0 = [P4];
   1300a:	98 b0       	[P3 + 0x8] = R0;
   1300c:	20 e4 10 00 	R0 = [P4 + 0x40];
   13010:	00 0c       	CC = R0 == 0x0;
   13012:	07 30       	R0 = R7;
   13014:	08 64       	R0 += 0x1;		/* (  1) */
   13016:	38 06       	IF !CC R7 = R0;
   13018:	60 a2       	R0 = [P4 + 0x24];
   1301a:	00 0c       	CC = R0 == 0x0;
   1301c:	07 18       	IF CC JUMP 0x1302a <_mDNS_FinalExit+0x5e>;
   1301e:	54 30       	R2 = P4;
   13020:	6a 50       	R1 = R2 + R5;
   13022:	08 08       	CC = R0 == R1;
   13024:	03 18       	IF CC JUMP 0x1302a <_mDNS_FinalExit+0x5e>;
   13026:	ff e3 ed 67 	CALL 0x0 <_AddRecordToResponseList>;
   1302a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   1302c:	60 b2       	[P4 + 0x24] = R0;
   1302e:	28 e4 56 00 	R0 = [P5 + 0x158];
   13032:	20 93       	[P4] = R0;
   13034:	28 e4 53 00 	R0 = [P5 + 0x14c];
   13038:	f8 67       	R0 += -0x1;		/* ( -1) */
   1303a:	2c e7 56 00 	[P5 + 0x158] = P4;
   1303e:	28 e6 53 00 	[P5 + 0x14c] = R0;
   13042:	00 00       	NOP;
   13044:	9c ac       	P4 = [P3 + 0x8];
   13046:	44 0c       	CC = P4 == 0x0;
   13048:	df 17       	IF !CC JUMP 0x13006 <_mDNS_FinalExit+0x3a> (BP);
   1304a:	43 30       	R0 = P3;
   1304c:	40 64       	R0 += 0x8;		/* (  8) */
   1304e:	0e 30       	R1 = R6;
   13050:	d8 b0       	[P3 + 0xc] = R0;
   13052:	61 41       	R1 = (R1 + R4) << 0x2;
   13054:	55 30       	R2 = P5;
   13056:	4a 50       	R1 = R2 + R1;
   13058:	45 30       	R0 = P5;
   1305a:	ff e3 f9 69 	CALL 0x44c <_ReleaseCacheGroup>;
   1305e:	00 00       	NOP;
   13060:	3b e5 57 00 	P3 = [FP + 0x15c];
   13064:	43 0c       	CC = P3 == 0x0;
   13066:	ee 17       	IF !CC JUMP 0x13042 <_mDNS_FinalExit+0x76> (BP);
   13068:	0e 64       	R6 += 0x1;		/* (  1) */
   1306a:	20 e1 f3 01 	R0 = 0x1f3 (X);		/*		R0=0x1f3(499) */
   1306e:	27 6c       	FP += 0x4;		/* (  4) */
   13070:	06 08       	CC = R6 == R0;
   13072:	f6 17       	IF !CC JUMP 0x1305e <_mDNS_FinalExit+0x92> (BP);
   13074:	28 e4 54 00 	R0 = [P5 + 0x150];
   13078:	07 08       	CC = R7 == R0;
   1307a:	0a 18       	IF CC JUMP 0x1308e <_mDNS_FinalExit+0xc2>;
   1307c:	f0 b0       	[SP + 0xc] = R0;
   1307e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x61e8(25064) */
   13082:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   13084:	01 e1 0c 62 	R1.L = 0x620c;		/* (25100)	R1=0x620c(25100) */
   13088:	17 30       	R2 = R7;
   1308a:	ff e3 bb 67 	CALL 0x0 <_AddRecordToResponseList>;
   1308e:	2c e5 f2 07 	P4 = [P5 + 0x1fc8];
   13092:	bd 6d       	P5 += 0x37;		/* ( 55) */
   13094:	15 20       	JUMP.S 0x130be <_mDNS_FinalExit+0xf2>;
   13096:	44 30       	R0 = P4;
   13098:	61 a2       	R1 = [P4 + 0x24];
   1309a:	a7 e4 04 00 	R7 = B[P4 + 0x4] (Z);
   1309e:	21 64       	R1 += 0x4;		/* (  4) */
   130a0:	55 30       	R2 = P5;
   130a2:	20 64       	R0 += 0x4;		/* (  4) */
   130a4:	ff e3 ae 67 	CALL 0x0 <_AddRecordToResponseList>;
   130a8:	30 b1       	[SP + 0x10] = R0;
   130aa:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x620c(25100) */
   130ae:	54 30       	R2 = P4;
   130b0:	f7 b0       	[SP + 0xc] = R7;
   130b2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
   130b4:	01 e1 48 62 	R1.L = 0x6248;		/* (25160)	R1=0x6248(25160) */
   130b8:	ff e3 a4 67 	CALL 0x0 <_AddRecordToResponseList>;
   130bc:	64 91       	P4 = [P4];
   130be:	44 0c       	CC = P4 == 0x0;
   130c0:	eb 17       	IF !CC JUMP 0x13096 <_mDNS_FinalExit+0xca> (BP);
   130c2:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   130c6:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_AddRecordToResponseList> */
   130ca:	10 91       	R0 = [P2];
   130cc:	00 0c       	CC = R0 == 0x0;
   130ce:	0c 1c       	IF CC JUMP 0x130e6 <_mDNS_FinalExit+0x11a> (BP);
   130d0:	a6 6c       	SP += 0x14;		/* ( 20) */
   130d2:	77 90       	FP = [SP++];
   130d4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x6248(25160) */
   130d8:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
   130da:	01 e1 80 62 	R1.L = 0x6280;		/* (25216)	R1=0x6280(25216) */
   130de:	27 01       	RETS = [SP++];
   130e0:	a3 05       	(R7:4, P5:3) = [SP++];
   130e2:	ff e2 8f 67 	JUMP.L 0x0 <_AddRecordToResponseList>;
   130e6:	a6 6c       	SP += 0x14;		/* ( 20) */
   130e8:	77 90       	FP = [SP++];
   130ea:	27 01       	RETS = [SP++];
   130ec:	a3 05       	(R7:4, P5:3) = [SP++];
   130ee:	10 00       	RTS;

mDNSDebug.o:     file format elf32-dv10


Disassembly of section .text:

00000000 <_LogMsgWithLevelv>:
_LogMsgWithLevelv():
   0:	fd 05       	[--SP] = (R7:7, P5:5);
   2:	67 01       	[--SP] = RETS;
   4:	29 e1 f0 fd 	P1 = -0x210 (X);		/*		P1=0xfffffdf0(-528) */
   8:	8e 5b       	SP = SP + P1;
   a:	6e 32       	P5 = SP;
   c:	19 30       	R3 = R1;
   e:	85 6c       	P5 += 0x10;		/* ( 16) */
  10:	38 30       	R7 = R0;
  12:	f2 b0       	[SP + 0xc] = R2;
  14:	13 30       	R2 = R3;
  16:	45 30       	R0 = P5;
  18:	21 e1 00 02 	R1 = 0x200 (X);		/*		R1=0x200(512) */
  1c:	ff e3 f2 ff 	CALL 0x0 <_LogMsgWithLevelv>;
  20:	08 32       	P1 = R0;
  22:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
  24:	4d 30       	R1 = P5;
  26:	17 30       	R2 = R7;
  28:	8d 5a       	P2 = P5 + P1;
  2a:	10 9b       	B[P2] = R0;
  2c:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_LogMsgWithLevelv>(  0) */
  30:	00 e1 00 00 	R0.L = 0x0;		/* (  0)	R0=0x0 <_LogMsgWithLevelv>(  0) */
  34:	ff e3 e6 ff 	CALL 0x0 <_LogMsgWithLevelv>;
  38:	29 e1 10 02 	P1 = 0x210 (X);		/*		P1=0x210(528) */
  3c:	8e 5b       	SP = SP + P1;
  3e:	27 01       	RETS = [SP++];
  40:	bd 05       	(R7:7, P5:5) = [SP++];
  42:	10 00       	RTS;

00000044 <_LogMsgWithLevel>:
_LogMsgWithLevel():
  44:	67 01       	[--SP] = RETS;
  46:	a6 6f       	SP += -0xc;		/* (-12) */
  48:	b2 b1       	[SP + 0x18] = R2;
  4a:	56 30       	R2 = SP;
  4c:	c2 64       	R2 += 0x18;		/* ( 24) */
  4e:	ff e3 d9 ff 	CALL 0x0 <_LogMsgWithLevelv>;
  52:	66 6c       	SP += 0xc;		/* ( 12) */
  54:	27 01       	RETS = [SP++];
  56:	10 00       	RTS;

mDNSPosix.o:     file format elf32-dv10


Disassembly of section .text:

00000000 <_SockAddrTomDNSAddr>:
_SockAddrTomDNSAddr():
   0:	10 32       	P2 = R0;
   2:	09 32       	P1 = R1;
   4:	02 32       	P0 = R2;
   6:	90 e4 01 00 	R0 = B[P2 + 0x1] (Z);
   a:	10 0c       	CC = R0 == 0x2;
   c:	09 14       	IF !CC JUMP 0x1e <_SockAddrTomDNSAddr+0x1e> (BP);
   e:	20 60       	R0 = 0x4 (X);		/*		R0=0x4(  4) */
  10:	08 93       	[P1] = R0;
  12:	50 a0       	R0 = [P2 + 0x4];
  14:	48 b0       	[P1 + 0x4] = R0;
  16:	40 0c       	CC = P0 == 0x0;
  18:	08 1c       	IF CC JUMP 0x28 <_SockAddrTomDNSAddr+0x28> (BP);
  1a:	50 a8       	R0 = W[P2 + 0x2] (X);
  1c:	05 20       	JUMP.S 0x26 <_SockAddrTomDNSAddr+0x26>;
  1e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
  20:	08 93       	[P1] = R0;
  22:	40 0c       	CC = P0 == 0x0;
  24:	02 18       	IF CC JUMP 0x28 <_SockAddrTomDNSAddr+0x28>;
  26:	00 97       	W[P0] = R0;
  28:	10 00       	RTS;
	...

0000002c <_SocketDataReady>:
_SocketDataReady():
  2c:	e4 05       	[--SP] = (R7:4, P5:4);
  2e:	29 32       	P5 = R1;
  30:	67 01       	[--SP] = RETS;
  32:	29 e1 84 dc 	P1 = -0x237c (X);		/*		P1=0xffffdc84(-9084) */
  36:	20 30       	R4 = R0;
  38:	8e 5b       	SP = SP + P1;
  3a:	02 30       	R0 = R2;
  3c:	45 0c       	CC = P5 == 0x0;
  3e:	04 1c       	IF CC JUMP 0x46 <_SocketDataReady+0x1a> (BP);
  40:	2e e4 10 05 	R6 = [P5 + 0x1440];
  44:	02 20       	JUMP.S 0x48 <_SocketDataReady+0x1c>;
  46:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
  48:	81 60       	R1 = 0x10 (X);		/*		R1=0x10( 16) */
  4a:	31 e6 dd 08 	[SP + 0x2374] = R1;
  4e:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
  50:	f1 b0       	[SP + 0xc] = R1;
  52:	4e 30       	R1 = SP;
  54:	22 e1 64 23 	R2 = 0x2364 (X);		/*		R2=0x2364(9060) */
  58:	d1 51       	R7 = R1 + R2;
  5a:	23 e1 74 23 	R3 = 0x2374 (X);		/*		R3=0x2374(9076) */
  5e:	59 50       	R1 = R1 + R3;
  60:	71 b1       	[SP + 0x14] = R1;
  62:	4e 30       	R1 = SP;
  64:	01 65       	R1 += 0x20;		/* ( 32) */
  66:	22 e1 f8 22 	R2 = 0x22f8 (X);		/*		R2=0x22f8(8952) */
  6a:	37 b1       	[SP + 0x10] = R7;
  6c:	ff e3 ca ff 	CALL 0x0 <_SockAddrTomDNSAddr>;
  70:	2a e1 18 23 	P2 = 0x2318 (X);		/*		P2=0x2318(8984) */
  74:	28 30       	R5 = R0;
  76:	16 5b       	P4 = SP + P2;
  78:	44 30       	R0 = P4;
  7a:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
  7c:	22 61       	R2 = 0x24 (X);		/*		R2=0x24( 36) */
  7e:	ff e3 c1 ff 	CALL 0x0 <_SockAddrTomDNSAddr>;
  82:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
  84:	30 e6 ca 08 	[SP + 0x2328] = R0;
  88:	85 0c       	CC = R5 < 0x0;
  8a:	6d 18       	IF CC JUMP 0x164 <_SocketDataReady+0x138>;
  8c:	07 30       	R0 = R7;
  8e:	23 e1 50 23 	R3 = 0x2350 (X);		/*		R3=0x2350(9040) */
  92:	56 30       	R2 = SP;
  94:	5a 50       	R1 = R2 + R3;
  96:	27 e1 78 23 	R7 = 0x2378 (X);		/*		R7=0x2378(9080) */
  9a:	ba 50       	R2 = R2 + R7;
  9c:	ff e3 b2 ff 	CALL 0x0 <_SockAddrTomDNSAddr>;
  a0:	46 30       	R0 = SP;
  a2:	21 e1 3c 23 	R1 = 0x233c (X);		/*		R1=0x233c(9020) */
  a6:	c8 51       	R7 = R0 + R1;
  a8:	44 30       	R0 = P4;
  aa:	0f 30       	R1 = R7;
  ac:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
  ae:	ff e3 a9 ff 	CALL 0x0 <_SockAddrTomDNSAddr>;
  b2:	45 0c       	CC = P5 == 0x0;
  b4:	07 14       	IF !CC JUMP 0xc2 <_SocketDataReady+0x96> (BP);
  b6:	07 30       	R0 = R7;
  b8:	ff e3 a4 ff 	CALL 0x0 <_SockAddrTomDNSAddr>;
  bc:	00 0c       	CC = R0 == 0x0;
  be:	53 14       	IF !CC JUMP 0x164 <_SocketDataReady+0x138> (BP);
  c0:	3a 20       	JUMP.S 0x134 <_SocketDataReady+0x108>;
  c2:	b0 e5 2c 23 	R0 = B[SP + 0x232c] (X);
  c6:	00 0c       	CC = R0 == 0x0;
  c8:	09 1c       	IF CC JUMP 0xda <_SocketDataReady+0xae> (BP);
  ca:	44 30       	R0 = P4;
  cc:	a0 64       	R0 += 0x14;		/* ( 20) */
  ce:	29 e4 2e 05 	R1 = [P5 + 0x14b8];
  d2:	ff e3 97 ff 	CALL 0x0 <_SockAddrTomDNSAddr>;
  d6:	00 0c       	CC = R0 == 0x0;
  d8:	08 20       	JUMP.S 0xe8 <_SocketDataReady+0xbc>;
  da:	30 e4 ca 08 	R0 = [SP + 0x2328];
  de:	38 0c       	CC = R0 == -0x1;
  e0:	23 1c       	IF CC JUMP 0x126 <_SocketDataReady+0xfa> (BP);
  e2:	29 e4 30 05 	R1 = [P5 + 0x14c0];
  e6:	08 08       	CC = R0 == R1;
  e8:	00 02       	R0 = CC;
  ea:	00 4b       	BITTGL (R0, 0x0);		/* bit  0 */
  ec:	00 0c       	CC = R0 == 0x0;
  ee:	1c 18       	IF CC JUMP 0x126 <_SocketDataReady+0xfa>;
  f0:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0xdc84 */
  f4:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0x15c */
  f8:	09 e1 40 00 	P1.L = 0x40;		/* ( 64)	P1=0x40 */
  fc:	08 e1 44 00 	P0.L = 0x44;		/* ( 68)	P0=0x44 */
 100:	08 91       	R0 = [P1];
 102:	02 91       	R2 = [P0];
 104:	08 64       	R0 += 0x1;		/* (  1) */
 106:	0a 64       	R2 += 0x1;		/* (  1) */
 108:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x2318 */
 10c:	d0 40       	R0 *= R2;
 10e:	0a e1 3c 00 	P2.L = 0x3c;		/* ( 60)	P2=0x3c */
 112:	11 91       	R1 = [P2];
 114:	09 64       	R1 += 0x1;		/* (  1) */
 116:	08 4f       	R0 <<= 0x1;
 118:	11 93       	[P2] = R1;
 11a:	01 09       	CC = R1 <= R0;
 11c:	24 1c       	IF CC JUMP 0x164 <_SocketDataReady+0x138> (BP);
 11e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 120:	08 93       	[P1] = R0;
 122:	10 93       	[P2] = R0;
 124:	20 20       	JUMP.S 0x164 <_SocketDataReady+0x138>;
 126:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x3c */
 12a:	0a e1 40 00 	P2.L = 0x40;		/* ( 64)	P2=0x40 */
 12e:	10 91       	R0 = [P2];
 130:	08 64       	R0 += 0x1;		/* (  1) */
 132:	10 93       	[P2] = R0;
 134:	5e 30       	R3 = SP;
 136:	27 e1 50 23 	R7 = 0x2350 (X);		/*		R7=0x2350(9040) */
 13a:	3b 50       	R0 = R3 + R7;
 13c:	f0 b0       	[SP + 0xc] = R0;
 13e:	70 e5 bc 11 	R0 = W[SP + 0x2378] (X);
 142:	30 b6       	W[SP + 0x10] = R0;
 144:	67 67       	R7 += -0x14;		/* (-20) */
 146:	3b 50       	R0 = R3 + R7;
 148:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x40 */
 14c:	70 b1       	[SP + 0x14] = R0;
 14e:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 152:	10 95       	R0 = W[P2] (Z);
 154:	4e 30       	R1 = SP;
 156:	01 65       	R1 += 0x20;		/* ( 32) */
 158:	30 b7       	W[SP + 0x18] = R0;
 15a:	a9 50       	R2 = R1 + R5;
 15c:	f6 b1       	[SP + 0x1c] = R6;
 15e:	04 30       	R0 = R4;
 160:	ff e3 50 ff 	CALL 0x0 <_SockAddrTomDNSAddr>;
 164:	29 e1 7c 23 	P1 = 0x237c (X);		/*		P1=0x237c(9084) */
 168:	8e 5b       	SP = SP + P1;
 16a:	27 01       	RETS = [SP++];
 16c:	a4 05       	(R7:4, P5:4) = [SP++];
 16e:	10 00       	RTS;

00000170 <_ClearInterfaceList>:
_ClearInterfaceList():
 170:	c4 04       	[--SP] = (P5:4);
 172:	67 01       	[--SP] = RETS;
 174:	a6 6f       	SP += -0xc;		/* (-12) */
 176:	20 32       	P4 = R0;
 178:	0f 20       	JUMP.S 0x196 <_ClearInterfaceList+0x26>;
 17a:	44 30       	R0 = P4;
 17c:	4d 30       	R1 = P5;
 17e:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
 180:	ff e3 40 ff 	CALL 0x0 <_SockAddrTomDNSAddr>;
 184:	28 e4 2e 05 	R0 = [P5 + 0x14b8];
 188:	00 0c       	CC = R0 == 0x0;
 18a:	03 18       	IF CC JUMP 0x190 <_ClearInterfaceList+0x20>;
 18c:	ff e3 3a ff 	CALL 0x0 <_SockAddrTomDNSAddr>;
 190:	45 30       	R0 = P5;
 192:	ff e3 37 ff 	CALL 0x0 <_SockAddrTomDNSAddr>;
 196:	25 e5 f7 07 	P5 = [P4 + 0x1fdc];
 19a:	45 0c       	CC = P5 == 0x0;
 19c:	ef 17       	IF !CC JUMP 0x17a <_ClearInterfaceList+0xa> (BP);
 19e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 1a2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 1a4:	0a e1 44 00 	P2.L = 0x44;		/* ( 68)	P2=0x44 */
 1a8:	10 93       	[P2] = R0;
 1aa:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x44 */
 1ae:	0a e1 40 00 	P2.L = 0x40;		/* ( 64)	P2=0x40 */
 1b2:	10 93       	[P2] = R0;
 1b4:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x40 */
 1b8:	0a e1 3c 00 	P2.L = 0x3c;		/* ( 60)	P2=0x3c */
 1bc:	10 93       	[P2] = R0;
 1be:	66 6c       	SP += 0xc;		/* ( 12) */
 1c0:	27 01       	RETS = [SP++];
 1c2:	84 04       	(P5:4) = [SP++];
 1c4:	10 00       	RTS;
	...

000001c8 <_GetUserSpecifiedRFC1034ComputerName>:
_GetUserSpecifiedRFC1034ComputerName():
 1c8:	fd 05       	[--SP] = (R7:7, P5:5);
 1ca:	38 30       	R7 = R0;
 1cc:	67 01       	[--SP] = RETS;
 1ce:	0f 64       	R7 += 0x1;		/* (  1) */
 1d0:	28 32       	P5 = R0;
 1d2:	a6 6f       	SP += -0xc;		/* (-12) */
 1d4:	07 30       	R0 = R7;
 1d6:	f9 61       	R1 = 0x3f (X);		/*		R1=0x3f( 63) */
 1d8:	ff e3 14 ff 	CALL 0x0 <_SockAddrTomDNSAddr>;
 1dc:	0f 32       	P1 = R7;
 1de:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 1e0:	fa 69       	P2 = 0x3f (X);		/*		P2=0x3f( 63) */
 1e2:	73 61       	R3 = 0x2e (X);		/*		R3=0x2e( 46) */
 1e4:	06 20       	JUMP.S 0x1f0 <_GetUserSpecifiedRFC1034ComputerName+0x28>;
 1e6:	fa 6f       	P2 += -0x1;		/* ( -1) */
 1e8:	42 0c       	CC = P2 == 0x0;
 1ea:	02 10       	IF !CC JUMP 0x1ee <_GetUserSpecifiedRFC1034ComputerName+0x26>;
 1ec:	0a 20       	JUMP.S 0x200 <_GetUserSpecifiedRFC1034ComputerName+0x38>;
 1ee:	01 30       	R0 = R1;
 1f0:	08 30       	R1 = R0;
 1f2:	0a 98       	R2 = B[P1++] (Z);
 1f4:	09 64       	R1 += 0x1;		/* (  1) */
 1f6:	02 0c       	CC = R2 == 0x0;
 1f8:	05 18       	IF CC JUMP 0x202 <_GetUserSpecifiedRFC1034ComputerName+0x3a>;
 1fa:	1a 08       	CC = R2 == R3;
 1fc:	f5 17       	IF !CC JUMP 0x1e6 <_GetUserSpecifiedRFC1034ComputerName+0x1e> (BP);
 1fe:	02 20       	JUMP.S 0x202 <_GetUserSpecifiedRFC1034ComputerName+0x3a>;
 200:	01 30       	R0 = R1;
 202:	66 6c       	SP += 0xc;		/* ( 12) */
 204:	27 01       	RETS = [SP++];
 206:	28 9b       	B[P5] = R0;
 208:	bd 05       	(R7:7, P5:5) = [SP++];
 20a:	10 00       	RTS;

0000020c <_mDNSPlatformSendUDP>:
_mDNSPlatformSendUDP():
 20c:	f4 05       	[--SP] = (R7:6, P5:4);
 20e:	67 01       	[--SP] = RETS;
 210:	86 6e       	SP += -0x30;		/* (-48) */
 212:	73 e5 2e 00 	R3 = W[SP + 0x5c] (X);
 216:	df 42       	R7 = R3.L (Z);
 218:	34 e5 14 00 	P4 = [SP + 0x50];
 21c:	35 e5 16 00 	P5 = [SP + 0x58];
 220:	07 0c       	CC = R7 == 0x0;
 222:	08 14       	IF !CC JUMP 0x232 <_mDNSPlatformSendUDP+0x26> (BP);
 224:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_SockAddrTomDNSAddr>(  0) */
 228:	00 e1 00 00 	R0.L = 0x0;		/* (  0)	R0=0x0 <_SockAddrTomDNSAddr>(  0) */
 22c:	ff e3 ea fe 	CALL 0x0 <_SockAddrTomDNSAddr>;
 230:	a0 20       	JUMP.S 0x370 <_mDNSPlatformSendUDP+0x164>;
 232:	26 60       	R6 = 0x4 (X);		/*		R6=0x4(  4) */
 234:	2f 91       	R7 = [P5];
 236:	37 08       	CC = R7 == R6;
 238:	98 14       	IF !CC JUMP 0x368 <_mDNSPlatformSendUDP+0x15c> (BP);
 23a:	87 60       	R7 = 0x10 (X);		/*		R7=0x10( 16) */
 23c:	b7 e6 20 00 	B[SP + 0x20] = R7;
 240:	56 32       	P2 = SP;
 242:	02 6d       	P2 += 0x20;		/* ( 32) */
 244:	17 60       	R7 = 0x2 (X);		/*		R7=0x2(  2) */
 246:	97 e6 01 00 	B[P2 + 0x1] = R7;
 24a:	53 b4       	W[P2 + 0x2] = R3;
 24c:	6b a0       	R3 = [P5 + 0x4];
 24e:	53 b0       	[P2 + 0x4] = R3;
 250:	44 0c       	CC = P4 == 0x0;
 252:	04 1c       	IF CC JUMP 0x25a <_mDNSPlatformSendUDP+0x4e> (BP);
 254:	20 e4 31 05 	R0 = [P4 + 0x14c4];
 258:	04 20       	JUMP.S 0x260 <_mDNSPlatformSendUDP+0x54>;
 25a:	08 32       	P1 = R0;
 25c:	4a 91       	P2 = [P1];
 25e:	10 91       	R0 = [P2];
 260:	80 0c       	CC = R0 < 0x0;
 262:	83 18       	IF CC JUMP 0x368 <_mDNSPlatformSendUDP+0x15c>;
 264:	7e 60       	R6 = 0xf (X);		/*		R6=0xf( 15) */
 266:	87 60       	R7 = 0x10 (X);		/*		R7=0x10( 16) */
 268:	8a 52       	R2 = R2 - R1;
 26a:	b3 e4 20 00 	R3 = B[SP + 0x20] (Z);
 26e:	33 0a       	CC = R3 <= R6 (IU);
 270:	1f 07       	IF CC R3 = R7;
 272:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
 274:	f7 b0       	[SP + 0xc] = R7;
 276:	7e 30       	R7 = SP;
 278:	07 65       	R7 += 0x20;		/* ( 32) */
 27a:	37 b1       	[SP + 0x10] = R7;
 27c:	73 b1       	[SP + 0x14] = R3;
 27e:	ff e3 c1 fe 	CALL 0x0 <_SockAddrTomDNSAddr>;
 282:	00 0d       	CC = R0 <= 0x0;
 284:	72 14       	IF !CC JUMP 0x368 <_mDNSPlatformSendUDP+0x15c> (BP);
 286:	00 0c       	CC = R0 == 0x0;
 288:	70 1c       	IF CC JUMP 0x368 <_mDNSPlatformSendUDP+0x15c> (BP);
 28a:	27 60       	R7 = 0x4 (X);		/*		R7=0x4(  4) */
 28c:	28 91       	R0 = [P5];
 28e:	38 08       	CC = R0 == R7;
 290:	08 14       	IF !CC JUMP 0x2a0 <_mDNSPlatformSendUDP+0x94> (BP);
 292:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x3f */
 296:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 29a:	69 a0       	R1 = [P5 + 0x4];
 29c:	50 a0       	R0 = [P2 + 0x4];
 29e:	16 20       	JUMP.S 0x2ca <_mDNSPlatformSendUDP+0xbe>;
 2a0:	31 60       	R1 = 0x6 (X);		/*		R1=0x6(  6) */
 2a2:	08 08       	CC = R0 == R1;
 2a4:	15 14       	IF !CC JUMP 0x2ce <_mDNSPlatformSendUDP+0xc2> (BP);
 2a6:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 2aa:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 2ae:	69 a0       	R1 = [P5 + 0x4];
 2b0:	50 a0       	R0 = [P2 + 0x4];
 2b2:	01 08       	CC = R1 == R0;
 2b4:	0d 14       	IF !CC JUMP 0x2ce <_mDNSPlatformSendUDP+0xc2> (BP);
 2b6:	a9 a0       	R1 = [P5 + 0x8];
 2b8:	90 a0       	R0 = [P2 + 0x8];
 2ba:	01 08       	CC = R1 == R0;
 2bc:	09 14       	IF !CC JUMP 0x2ce <_mDNSPlatformSendUDP+0xc2> (BP);
 2be:	e9 a0       	R1 = [P5 + 0xc];
 2c0:	d0 a0       	R0 = [P2 + 0xc];
 2c2:	01 08       	CC = R1 == R0;
 2c4:	05 14       	IF !CC JUMP 0x2ce <_mDNSPlatformSendUDP+0xc2> (BP);
 2c6:	29 a1       	R1 = [P5 + 0x10];
 2c8:	10 a1       	R0 = [P2 + 0x10];
 2ca:	01 08       	CC = R1 == R0;
 2cc:	15 1c       	IF CC JUMP 0x2f6 <_mDNSPlatformSendUDP+0xea> (BP);
 2ce:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 2d2:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 2d6:	10 91       	R0 = [P2];
 2d8:	26 e1 70 00 	R6 = 0x70 (X);		/*		R6=0x70(112) */
 2dc:	30 08       	CC = R0 == R6;
 2de:	47 1c       	IF CC JUMP 0x36c <_mDNSPlatformSendUDP+0x160> (BP);
 2e0:	27 e1 64 00 	R7 = 0x64 (X);		/*		R7=0x64(100) */
 2e4:	38 08       	CC = R0 == R7;
 2e6:	43 1c       	IF CC JUMP 0x36c <_mDNSPlatformSendUDP+0x160> (BP);
 2e8:	21 e1 71 00 	R1 = 0x71 (X);		/*		R1=0x71(113) */
 2ec:	08 08       	CC = R0 == R1;
 2ee:	3f 1c       	IF CC JUMP 0x36c <_mDNSPlatformSendUDP+0x160> (BP);
 2f0:	ae 67       	R6 += -0xb;		/* (-11) */
 2f2:	30 08       	CC = R0 == R6;
 2f4:	3c 18       	IF CC JUMP 0x36c <_mDNSPlatformSendUDP+0x160>;
 2f6:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 2fa:	0a e1 58 00 	P2.L = 0x58;		/* ( 88)	P2=0x58 */
 2fe:	27 e1 e7 03 	R7 = 0x3e7 (X);		/*		R7=0x3e7(999) */
 302:	10 91       	R0 = [P2];
 304:	38 09       	CC = R0 <= R7;
 306:	35 14       	IF !CC JUMP 0x370 <_mDNSPlatformSendUDP+0x164> (BP);
 308:	08 64       	R0 += 0x1;		/* (  1) */
 30a:	10 93       	[P2] = R0;
 30c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x58 */
 310:	44 0c       	CC = P4 == 0x0;
 312:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 316:	1a 18       	IF CC JUMP 0x34a <_mDNSPlatformSendUDP+0x13e>;
 318:	17 91       	R7 = [P2];
 31a:	07 30       	R0 = R7;
 31c:	ff e3 72 fe 	CALL 0x0 <_SockAddrTomDNSAddr>;
 320:	2a e1 44 14 	P2 = 0x1444 (X);		/*		P2=0x1444(5188) */
 324:	94 5a       	P2 = P4 + P2;
 326:	f0 b0       	[SP + 0xc] = R0;
 328:	35 bd       	[SP + 0x10] = P5;
 32a:	72 bd       	[SP + 0x14] = P2;
 32c:	20 e4 2e 05 	R0 = [P4 + 0x14b8];
 330:	b0 b1       	[SP + 0x18] = R0;
 332:	20 e4 30 05 	R0 = [P4 + 0x14c0];
 336:	f0 b1       	[SP + 0x1c] = R0;
 338:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x71(113) */
 33c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 33e:	01 e1 3c 00 	R1.L = 0x3c;		/* ( 60)	R1=0x3c( 60) */
 342:	17 30       	R2 = R7;
 344:	ff e3 5e fe 	CALL 0x0 <_SockAddrTomDNSAddr>;
 348:	14 20       	JUMP.S 0x370 <_mDNSPlatformSendUDP+0x164>;
 34a:	54 91       	P4 = [P2];
 34c:	44 30       	R0 = P4;
 34e:	ff e3 59 fe 	CALL 0x0 <_SockAddrTomDNSAddr>;
 352:	f0 b0       	[SP + 0xc] = R0;
 354:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3c( 60) */
 358:	35 bd       	[SP + 0x10] = P5;
 35a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 35c:	01 e1 90 00 	R1.L = 0x90;		/* (144)	R1=0x90(144) */
 360:	54 30       	R2 = P4;
 362:	ff e3 4f fe 	CALL 0x0 <_SockAddrTomDNSAddr>;
 366:	05 20       	JUMP.S 0x370 <_mDNSPlatformSendUDP+0x164>;
 368:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 36a:	06 20       	JUMP.S 0x376 <_mDNSPlatformSendUDP+0x16a>;
 36c:	30 63       	R0 = -0x1a (X);		/*		R0=0xffffffe6(-26) */
 36e:	02 20       	JUMP.S 0x372 <_mDNSPlatformSendUDP+0x166>;
 370:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
 372:	40 e1 fe ff 	R0.H = 0xfffe;		/* ( -2)	R0=0xfffeffff(-65537) */
 376:	86 6d       	SP += 0x30;		/* ( 48) */
 378:	27 01       	RETS = [SP++];
 37a:	b4 05       	(R7:6, P5:4) = [SP++];
 37c:	10 00       	RTS;
	...

00000380 <_mDNSPlatformTCPSocket>:
_mDNSPlatformTCPSocket():
 380:	00 00       	NOP;
 382:	00 00       	NOP;
 384:	00 00       	NOP;
 386:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 388:	10 00       	RTS;
	...

0000038c <_mDNSPlatformTCPAccept>:
_mDNSPlatformTCPAccept():
 38c:	00 00       	NOP;
 38e:	00 00       	NOP;
 390:	00 00       	NOP;
 392:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 394:	10 00       	RTS;
	...

00000398 <_mDNSPlatformTCPGetFD>:
_mDNSPlatformTCPGetFD():
 398:	00 00       	NOP;
 39a:	00 00       	NOP;
 39c:	00 00       	NOP;
 39e:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
 3a0:	10 00       	RTS;
	...

000003a4 <_mDNSPlatformTCPConnect>:
_mDNSPlatformTCPConnect():
 3a4:	00 00       	NOP;
 3a6:	00 00       	NOP;
 3a8:	20 e1 ff df 	R0 = -0x2001 (X);		/*		R0=0xffffdfff(-8193) */
 3ac:	18 4f       	R0 <<= 0x3;
 3ae:	10 00       	RTS;

000003b0 <_mDNSPlatformTCPCloseConnection>:
	...
_mDNSPlatformTCPCloseConnection():
 3b8:	10 00       	RTS;
	...

000003bc <_mDNSPlatformReadTCP>:
_mDNSPlatformReadTCP():
 3bc:	00 00       	NOP;
 3be:	00 00       	NOP;
 3c0:	00 00       	NOP;
 3c2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 3c4:	10 00       	RTS;
	...

000003c8 <_mDNSPlatformWriteTCP>:
_mDNSPlatformWriteTCP():
 3c8:	00 00       	NOP;
 3ca:	00 00       	NOP;
 3cc:	00 00       	NOP;
 3ce:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 3d0:	10 00       	RTS;
	...

000003d4 <_mDNSPlatformUDPSocket>:
_mDNSPlatformUDPSocket():
 3d4:	00 00       	NOP;
 3d6:	00 00       	NOP;
 3d8:	00 00       	NOP;
 3da:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 3dc:	10 00       	RTS;
	...

000003e0 <_mDNSPlatformUDPClose>:
	...
_mDNSPlatformUDPClose():
 3e8:	10 00       	RTS;
	...

000003ec <_mDNSPlatformUpdateProxyList>:
	...
_mDNSPlatformUpdateProxyList():
 3f4:	10 00       	RTS;
	...

000003f8 <_mDNSPlatformSendRawPacket>:
	...
_mDNSPlatformSendRawPacket():
 400:	10 00       	RTS;
	...

00000404 <_mDNSPlatformSetLocalAddressCacheEntry>:
	...
_mDNSPlatformSetLocalAddressCacheEntry():
 40c:	10 00       	RTS;
	...

00000410 <_mDNSPlatformTLSSetupCerts>:
_mDNSPlatformTLSSetupCerts():
 410:	00 00       	NOP;
 412:	00 00       	NOP;
 414:	20 e1 ff df 	R0 = -0x2001 (X);		/*		R0=0xffffdfff(-8193) */
 418:	18 4f       	R0 <<= 0x3;
 41a:	10 00       	RTS;

0000041c <_mDNSPlatformTLSTearDownCerts>:
	...
_mDNSPlatformTLSTearDownCerts():
 424:	10 00       	RTS;
	...

00000428 <_mDNSPlatformSetAllowSleep>:
	...
_mDNSPlatformSetAllowSleep():
 430:	10 00       	RTS;
	...

00000434 <_FreeEtcHosts>:
	...
_FreeEtcHosts():
 43c:	10 00       	RTS;
	...

00000440 <_mDNSPlatformSetDNSConfig>:
	...
_mDNSPlatformSetDNSConfig():
 448:	10 00       	RTS;
	...

0000044c <_mDNSPlatformGetPrimaryInterface>:
_mDNSPlatformGetPrimaryInterface():
 44c:	00 00       	NOP;
 44e:	00 00       	NOP;
 450:	20 e1 ff df 	R0 = -0x2001 (X);		/*		R0=0xffffdfff(-8193) */
 454:	18 4f       	R0 <<= 0x3;
 456:	10 00       	RTS;

00000458 <_mDNSPlatformDynDNSHostNameStatusChanged>:
	...
_mDNSPlatformDynDNSHostNameStatusChanged():
 460:	10 00       	RTS;
	...

00000464 <_mDNSPlatformInterfaceIDfromInterfaceIndex>:
_mDNSPlatformInterfaceIDfromInterfaceIndex():
 464:	39 0c       	CC = R1 == -0x1;
 466:	06 14       	IF !CC JUMP 0x472 <_mDNSPlatformInterfaceIDfromInterfaceIndex+0xe> (BP);
 468:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x1444 */
 46c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 470:	07 20       	JUMP.S 0x47e <_mDNSPlatformInterfaceIDfromInterfaceIndex+0x1a>;
 472:	29 0c       	CC = R1 == -0x3;
 474:	07 14       	IF !CC JUMP 0x482 <_mDNSPlatformInterfaceIDfromInterfaceIndex+0x1e> (BP);
 476:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 47a:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 47e:	10 91       	R0 = [P2];
 480:	15 20       	JUMP.S 0x4aa <_mDNSPlatformInterfaceIDfromInterfaceIndex+0x46>;
 482:	01 0c       	CC = R1 == 0x0;
 484:	06 14       	IF !CC JUMP 0x490 <_mDNSPlatformInterfaceIDfromInterfaceIndex+0x2c> (BP);
 486:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 48a:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 48e:	f8 2f       	JUMP.S 0x47e <_mDNSPlatformInterfaceIDfromInterfaceIndex+0x1a>;
 490:	08 32       	P1 = R0;
 492:	0a e5 f7 07 	P2 = [P1 + 0x1fdc];
 496:	03 20       	JUMP.S 0x49c <_mDNSPlatformInterfaceIDfromInterfaceIndex+0x38>;
 498:	00 00       	NOP;
 49a:	52 91       	P2 = [P2];
 49c:	42 0c       	CC = P2 == 0x0;
 49e:	05 1c       	IF CC JUMP 0x4a8 <_mDNSPlatformInterfaceIDfromInterfaceIndex+0x44> (BP);
 4a0:	10 e4 30 05 	R0 = [P2 + 0x14c0];
 4a4:	08 08       	CC = R0 == R1;
 4a6:	f9 17       	IF !CC JUMP 0x498 <_mDNSPlatformInterfaceIDfromInterfaceIndex+0x34> (BP);
 4a8:	42 30       	R0 = P2;
 4aa:	10 00       	RTS;

000004ac <_mDNSPlatformInterfaceIndexfromInterfaceID>:
_mDNSPlatformInterfaceIndexfromInterfaceID():
 4ac:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 4b0:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 4b4:	12 91       	R2 = [P2];
 4b6:	11 08       	CC = R1 == R2;
 4b8:	1b 18       	IF CC JUMP 0x4ee <_mDNSPlatformInterfaceIndexfromInterfaceID+0x42>;
 4ba:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 4be:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 4c2:	12 91       	R2 = [P2];
 4c4:	11 08       	CC = R1 == R2;
 4c6:	16 18       	IF CC JUMP 0x4f2 <_mDNSPlatformInterfaceIndexfromInterfaceID+0x46>;
 4c8:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 4cc:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 4d0:	12 91       	R2 = [P2];
 4d2:	11 08       	CC = R1 == R2;
 4d4:	11 1c       	IF CC JUMP 0x4f6 <_mDNSPlatformInterfaceIndexfromInterfaceID+0x4a> (BP);
 4d6:	08 32       	P1 = R0;
 4d8:	0a e5 f7 07 	P2 = [P1 + 0x1fdc];
 4dc:	03 20       	JUMP.S 0x4e2 <_mDNSPlatformInterfaceIndexfromInterfaceID+0x36>;
 4de:	00 00       	NOP;
 4e0:	52 91       	P2 = [P2];
 4e2:	42 0c       	CC = P2 == 0x0;
 4e4:	09 18       	IF CC JUMP 0x4f6 <_mDNSPlatformInterfaceIndexfromInterfaceID+0x4a>;
 4e6:	42 30       	R0 = P2;
 4e8:	08 08       	CC = R0 == R1;
 4ea:	fa 17       	IF !CC JUMP 0x4de <_mDNSPlatformInterfaceIndexfromInterfaceID+0x32> (BP);
 4ec:	07 20       	JUMP.S 0x4fa <_mDNSPlatformInterfaceIndexfromInterfaceID+0x4e>;
 4ee:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
 4f0:	04 20       	JUMP.S 0x4f8 <_mDNSPlatformInterfaceIndexfromInterfaceID+0x4c>;
 4f2:	e8 63       	R0 = -0x3 (X);		/*		R0=0xfffffffd( -3) */
 4f4:	02 20       	JUMP.S 0x4f8 <_mDNSPlatformInterfaceIndexfromInterfaceID+0x4c>;
 4f6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 4f8:	10 00       	RTS;
 4fa:	10 e4 30 05 	R0 = [P2 + 0x14c0];
 4fe:	fd 2f       	JUMP.S 0x4f8 <_mDNSPlatformInterfaceIndexfromInterfaceID+0x4c>;

00000500 <_SetupSocket>:
_SetupSocket():
 500:	fc 05       	[--SP] = (R7:7, P5:4);
 502:	20 32       	P4 = R0;
 504:	67 01       	[--SP] = RETS;
 506:	a6 6e       	SP += -0x2c;		/* (-44) */
 508:	39 30       	R7 = R1;
 50a:	35 e5 12 00 	P5 = [SP + 0x48];
 50e:	a0 e4 01 00 	R0 = B[P4 + 0x1] (Z);
 512:	10 0c       	CC = R0 == 0x2;
 514:	d2 14       	IF !CC JUMP 0x6b8 <_SetupSocket+0x1b8> (BP);
 516:	11 60       	R1 = 0x2 (X);		/*		R1=0x2(  2) */
 518:	8a 60       	R2 = 0x11 (X);		/*		R2=0x11( 17) */
 51a:	ff e3 73 fd 	CALL 0x0 <_SockAddrTomDNSAddr>;
 51e:	08 30       	R1 = R0;
 520:	28 93       	[P5] = R0;
 522:	80 0c       	CC = R0 < 0x0;
 524:	08 14       	IF !CC JUMP 0x534 <_SetupSocket+0x34> (BP);
 526:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 52a:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 52e:	10 91       	R0 = [P2];
 530:	00 0c       	CC = R0 == 0x0;
 532:	1a 14       	IF !CC JUMP 0x566 <_SetupSocket+0x66> (BP);
 534:	f8 42       	R0 = R7.L (Z);
 536:	00 0c       	CC = R0 == 0x0;
 538:	16 1c       	IF CC JUMP 0x564 <_SetupSocket+0x64> (BP);
 53a:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_SockAddrTomDNSAddr>(  0) */
 53e:	00 e1 08 00 	R0.L = 0x8;		/* (  8)	R0=0x8(  8) */
 542:	f0 b0       	[SP + 0xc] = R0;
 544:	20 60       	R0 = 0x4 (X);		/*		R0=0x4(  4) */
 546:	30 b1       	[SP + 0x10] = R0;
 548:	01 30       	R0 = R1;
 54a:	21 e1 ff 0f 	R1 = 0xfff (X);		/*		R1=0xfff(4095) */
 54e:	22 60       	R2 = 0x4 (X);		/*		R2=0x4(  4) */
 550:	ff e3 58 fd 	CALL 0x0 <_SockAddrTomDNSAddr>;
 554:	80 0c       	CC = R0 < 0x0;
 556:	08 14       	IF !CC JUMP 0x566 <_SetupSocket+0x66> (BP);
 558:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 55c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 560:	10 91       	R0 = [P2];
 562:	02 20       	JUMP.S 0x566 <_SetupSocket+0x66>;
 564:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 566:	00 00       	NOP;
 568:	a1 e4 01 00 	R1 = B[P4 + 0x1] (Z);
 56c:	11 0c       	CC = R1 == 0x2;
 56e:	86 14       	IF !CC JUMP 0x67a <_SetupSocket+0x17a> (BP);
 570:	00 0c       	CC = R0 == 0x0;
 572:	9c 14       	IF !CC JUMP 0x6aa <_SetupSocket+0x1aa> (BP);
 574:	f8 42       	R0 = R7.L (Z);
 576:	00 0c       	CC = R0 == 0x0;
 578:	2e 1c       	IF CC JUMP 0x5d4 <_SetupSocket+0xd4> (BP);
 57a:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 57e:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 582:	50 a0       	R0 = [P2 + 0x4];
 584:	70 b2       	[SP + 0x24] = R0;
 586:	60 a0       	R0 = [P4 + 0x4];
 588:	b0 b2       	[SP + 0x28] = R0;
 58a:	46 30       	R0 = SP;
 58c:	20 65       	R0 += 0x24;		/* ( 36) */
 58e:	f0 b0       	[SP + 0xc] = R0;
 590:	40 60       	R0 = 0x8 (X);		/*		R0=0x8(  8) */
 592:	30 b1       	[SP + 0x10] = R0;
 594:	28 91       	R0 = [P5];
 596:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
 598:	1a 60       	R2 = 0x3 (X);		/*		R2=0x3(  3) */
 59a:	ff e3 33 fd 	CALL 0x0 <_SockAddrTomDNSAddr>;
 59e:	80 0c       	CC = R0 < 0x0;
 5a0:	06 14       	IF !CC JUMP 0x5ac <_SetupSocket+0xac> (BP);
 5a2:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 5a6:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 5aa:	10 91       	R0 = [P2];
 5ac:	00 0c       	CC = R0 == 0x0;
 5ae:	7e 10       	IF !CC JUMP 0x6aa <_SetupSocket+0x1aa>;
 5b0:	20 60       	R0 = 0x4 (X);		/*		R0=0x4(  4) */
 5b2:	24 6c       	P4 += 0x4;		/* (  4) */
 5b4:	f4 bc       	[SP + 0xc] = P4;
 5b6:	30 b1       	[SP + 0x10] = R0;
 5b8:	28 91       	R0 = [P5];
 5ba:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
 5bc:	32 60       	R2 = 0x6 (X);		/*		R2=0x6(  6) */
 5be:	ff e3 21 fd 	CALL 0x0 <_SockAddrTomDNSAddr>;
 5c2:	80 0c       	CC = R0 < 0x0;
 5c4:	06 14       	IF !CC JUMP 0x5d0 <_SetupSocket+0xd0> (BP);
 5c6:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 5ca:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 5ce:	10 91       	R0 = [P2];
 5d0:	00 0c       	CC = R0 == 0x0;
 5d2:	6c 14       	IF !CC JUMP 0x6aa <_SetupSocket+0x1aa> (BP);
 5d4:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x4(  4) */
 5d8:	00 e1 04 00 	R0.L = 0x4;		/* (  4)	R0=0x4(  4) */
 5dc:	f0 b0       	[SP + 0xc] = R0;
 5de:	20 60       	R0 = 0x4 (X);		/*		R0=0x4(  4) */
 5e0:	30 b1       	[SP + 0x10] = R0;
 5e2:	28 91       	R0 = [P5];
 5e4:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
 5e6:	12 60       	R2 = 0x2 (X);		/*		R2=0x2(  2) */
 5e8:	ff e3 0c fd 	CALL 0x0 <_SockAddrTomDNSAddr>;
 5ec:	80 0c       	CC = R0 < 0x0;
 5ee:	06 14       	IF !CC JUMP 0x5fa <_SetupSocket+0xfa> (BP);
 5f0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 5f4:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 5f8:	10 91       	R0 = [P2];
 5fa:	00 0c       	CC = R0 == 0x0;
 5fc:	57 10       	IF !CC JUMP 0x6aa <_SetupSocket+0x1aa>;
 5fe:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x4(  4) */
 602:	00 e1 00 00 	R0.L = 0x0;		/* (  0)	R0=0x0 <_SockAddrTomDNSAddr>(  0) */
 606:	f0 b0       	[SP + 0xc] = R0;
 608:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
 60a:	30 b1       	[SP + 0x10] = R0;
 60c:	28 91       	R0 = [P5];
 60e:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
 610:	2a 60       	R2 = 0x5 (X);		/*		R2=0x5(  5) */
 612:	ff e3 f7 fc 	CALL 0x0 <_SockAddrTomDNSAddr>;
 616:	80 0c       	CC = R0 < 0x0;
 618:	1c 14       	IF !CC JUMP 0x650 <_SetupSocket+0x150> (BP);
 61a:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 61e:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 622:	10 91       	R0 = [P2];
 624:	b1 60       	R1 = 0x16 (X);		/*		R1=0x16( 22) */
 626:	08 08       	CC = R0 == R1;
 628:	0f 14       	IF !CC JUMP 0x646 <_SetupSocket+0x146> (BP);
 62a:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x1(  1) */
 62e:	00 e1 04 00 	R0.L = 0x4;		/* (  4)	R0=0x4(  4) */
 632:	f0 b0       	[SP + 0xc] = R0;
 634:	20 60       	R0 = 0x4 (X);		/*		R0=0x4(  4) */
 636:	30 b1       	[SP + 0x10] = R0;
 638:	28 91       	R0 = [P5];
 63a:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
 63c:	2a 60       	R2 = 0x5 (X);		/*		R2=0x5(  5) */
 63e:	ff e3 e1 fc 	CALL 0x0 <_SockAddrTomDNSAddr>;
 642:	80 0c       	CC = R0 < 0x0;
 644:	06 10       	IF !CC JUMP 0x650 <_SetupSocket+0x150>;
 646:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 64a:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 64e:	10 91       	R0 = [P2];
 650:	00 0c       	CC = R0 == 0x0;
 652:	2c 10       	IF !CC JUMP 0x6aa <_SetupSocket+0x1aa>;
 654:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
 656:	b0 e6 15 00 	B[SP + 0x15] = R0;
 65a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 65c:	b0 b1       	[SP + 0x18] = R0;
 65e:	4e 30       	R1 = SP;
 660:	f7 b6       	W[SP + 0x16] = R7;
 662:	28 91       	R0 = [P5];
 664:	a1 64       	R1 += 0x14;		/* ( 20) */
 666:	82 60       	R2 = 0x10 (X);		/*		R2=0x10( 16) */
 668:	ff e3 cc fc 	CALL 0x0 <_SockAddrTomDNSAddr>;
 66c:	80 0c       	CC = R0 < 0x0;
 66e:	06 14       	IF !CC JUMP 0x67a <_SetupSocket+0x17a> (BP);
 670:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 674:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 678:	10 91       	R0 = [P2];
 67a:	00 0c       	CC = R0 == 0x0;
 67c:	17 14       	IF !CC JUMP 0x6aa <_SetupSocket+0x1aa> (BP);
 67e:	28 91       	R0 = [P5];
 680:	19 60       	R1 = 0x3 (X);		/*		R1=0x3(  3) */
 682:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
 684:	ff e3 be fc 	CALL 0x0 <_SockAddrTomDNSAddr>;
 688:	80 0c       	CC = R0 < 0x0;
 68a:	09 18       	IF CC JUMP 0x69c <_SetupSocket+0x19c>;
 68c:	10 30       	R2 = R0;
 68e:	02 4a       	BITSET (R2, 0x0);		/* bit  0 */
 690:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
 692:	28 91       	R0 = [P5];
 694:	ff e3 b6 fc 	CALL 0x0 <_SockAddrTomDNSAddr>;
 698:	80 0c       	CC = R0 < 0x0;
 69a:	06 14       	IF !CC JUMP 0x6a6 <_SetupSocket+0x1a6> (BP);
 69c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 6a0:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 6a4:	10 91       	R0 = [P2];
 6a6:	00 0c       	CC = R0 == 0x0;
 6a8:	09 1c       	IF CC JUMP 0x6ba <_SetupSocket+0x1ba> (BP);
 6aa:	00 00       	NOP;
 6ac:	29 91       	R1 = [P5];
 6ae:	39 0c       	CC = R1 == -0x1;
 6b0:	05 18       	IF CC JUMP 0x6ba <_SetupSocket+0x1ba>;
 6b2:	f9 63       	R1 = -0x1 (X);		/*		R1=0xffffffff( -1) */
 6b4:	29 93       	[P5] = R1;
 6b6:	02 20       	JUMP.S 0x6ba <_SetupSocket+0x1ba>;
 6b8:	b0 60       	R0 = 0x16 (X);		/*		R0=0x16( 22) */
 6ba:	66 6d       	SP += 0x2c;		/* ( 44) */
 6bc:	27 01       	RETS = [SP++];
 6be:	bc 05       	(R7:7, P5:4) = [SP++];
 6c0:	10 00       	RTS;
	...

000006c4 <_SetupInterfaceList>:
_SetupInterfaceList():
 6c4:	eb 05       	[--SP] = (R7:5, P5:3);
 6c6:	00 e8 04 00 	LINK 0x10;		/* (16) */
 6ca:	38 32       	FP = R0;
 6cc:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
 6ce:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
 6d0:	ff e3 98 fc 	CALL 0x0 <_SockAddrTomDNSAddr>;
 6d4:	18 32       	P3 = R0;
 6d6:	43 0c       	CC = P3 == 0x0;
 6d8:	09 14       	IF !CC JUMP 0x6ea <_SetupInterfaceList+0x26> (BP);
 6da:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x2(  2) */
 6de:	00 e1 cc 00 	R0.L = 0xcc;		/* (204)	R0=0xcc(204) */
 6e2:	ff e3 8f fc 	CALL 0x0 <_SockAddrTomDNSAddr>;
 6e6:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
 6e8:	56 20       	JUMP.S 0x794 <_SetupInterfaceList+0xd0>;
 6ea:	20 e1 c8 14 	R0 = 0x14c8 (X);		/*		R0=0x14c8(5320) */
 6ee:	5f a1       	R7 = [P3 + 0x14];
 6f0:	9c ad       	P4 = [P3 + 0x18];
 6f2:	1e a1       	R6 = [P3 + 0x10];
 6f4:	ff e3 86 fc 	CALL 0x0 <_SockAddrTomDNSAddr>;
 6f8:	28 32       	P5 = R0;
 6fa:	45 0c       	CC = P5 == 0x0;
 6fc:	7e 18       	IF CC JUMP 0x7f8 <_SetupInterfaceList+0x134>;
 6fe:	43 30       	R0 = P3;
 700:	ff e3 80 fc 	CALL 0x0 <_SockAddrTomDNSAddr>;
 704:	28 e6 2e 05 	[P5 + 0x14b8] = R0;
 708:	00 0c       	CC = R0 == 0x0;
 70a:	4a 14       	IF !CC JUMP 0x79e <_SetupInterfaceList+0xda> (BP);
 70c:	45 0c       	CC = P5 == 0x0;
 70e:	38 14       	IF !CC JUMP 0x77e <_SetupInterfaceList+0xba> (BP);
 710:	74 20       	JUMP.S 0x7f8 <_SetupInterfaceList+0x134>;
 712:	00 00       	NOP;
 714:	64 91       	P4 = [P4];
 716:	44 0c       	CC = P4 == 0x0;
 718:	09 1c       	IF CC JUMP 0x72a <_SetupInterfaceList+0x66> (BP);
 71a:	0d 30       	R1 = R5;
 71c:	20 e4 2e 05 	R0 = [P4 + 0x14b8];
 720:	ff e3 70 fc 	CALL 0x0 <_SockAddrTomDNSAddr>;
 724:	00 0c       	CC = R0 == 0x0;
 726:	f6 17       	IF !CC JUMP 0x712 <_SetupInterfaceList+0x4e> (BP);
 728:	02 20       	JUMP.S 0x72c <_SetupInterfaceList+0x68>;
 72a:	65 32       	P4 = P5;
 72c:	20 e4 31 05 	R0 = [P4 + 0x14c4];
 730:	2c e7 10 05 	[P5 + 0x1440] = P4;
 734:	38 0c       	CC = R0 == -0x1;
 736:	15 14       	IF !CC JUMP 0x760 <_SetupInterfaceList+0x9c> (BP);
 738:	17 32       	P2 = R7;
 73a:	90 e4 01 00 	R0 = B[P2 + 0x1] (Z);
 73e:	10 0c       	CC = R0 == 0x2;
 740:	10 14       	IF !CC JUMP 0x760 <_SetupInterfaceList+0x9c> (BP);
 742:	2a e1 c4 14 	P2 = 0x14c4 (X);		/*		P2=0x14c4(5316) */
 746:	14 5b       	P4 = P4 + P2;
 748:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x14c4 */
 74c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 750:	f4 bc       	[SP + 0xc] = P4;
 752:	07 30       	R0 = R7;
 754:	11 95       	R1 = W[P2] (Z);
 756:	16 30       	R2 = R6;
 758:	ff e3 d4 fe 	CALL 0x500 <_SetupSocket>;
 75c:	00 0c       	CC = R0 == 0x0;
 75e:	10 14       	IF !CC JUMP 0x77e <_SetupInterfaceList+0xba> (BP);
 760:	47 30       	R0 = FP;
 762:	4d 30       	R1 = P5;
 764:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
 766:	ff e3 4d fc 	CALL 0x0 <_SockAddrTomDNSAddr>;
 76a:	00 0c       	CC = R0 == 0x0;
 76c:	09 10       	IF !CC JUMP 0x77e <_SetupInterfaceList+0xba>;
 76e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 772:	0a e1 44 00 	P2.L = 0x44;		/* ( 68)	P2=0x44 */
 776:	10 91       	R0 = [P2];
 778:	08 64       	R0 += 0x1;		/* (  1) */
 77a:	10 93       	[P2] = R0;
 77c:	3e 20       	JUMP.S 0x7f8 <_SetupInterfaceList+0x134>;
 77e:	00 00       	NOP;
 780:	28 e4 2e 05 	R0 = [P5 + 0x14b8];
 784:	00 0c       	CC = R0 == 0x0;
 786:	03 18       	IF CC JUMP 0x78c <_SetupInterfaceList+0xc8>;
 788:	ff e3 3c fc 	CALL 0x0 <_SockAddrTomDNSAddr>;
 78c:	45 30       	R0 = P5;
 78e:	ff e3 39 fc 	CALL 0x0 <_SockAddrTomDNSAddr>;
 792:	33 20       	JUMP.S 0x7f8 <_SetupInterfaceList+0x134>;
 794:	86 6c       	SP += 0x10;		/* ( 16) */
 796:	77 90       	FP = [SP++];
 798:	27 01       	RETS = [SP++];
 79a:	ab 05       	(R7:5, P5:3) = [SP++];
 79c:	10 00       	RTS;
 79e:	2a e1 44 14 	P2 = 0x1444 (X);		/*		P2=0x1444(5188) */
 7a2:	95 5a       	P2 = P5 + P2;
 7a4:	4a 30       	R1 = P2;
 7a6:	07 30       	R0 = R7;
 7a8:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
 7aa:	ff e3 2b fc 	CALL 0x0 <_SockAddrTomDNSAddr>;
 7ae:	2a e1 58 14 	P2 = 0x1458 (X);		/*		P2=0x1458(5208) */
 7b2:	95 5a       	P2 = P5 + P2;
 7b4:	4a 30       	R1 = P2;
 7b6:	44 30       	R0 = P4;
 7b8:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
 7ba:	ff e3 23 fc 	CALL 0x0 <_SockAddrTomDNSAddr>;
 7be:	2a e1 74 14 	P2 = 0x1474 (X);		/*		P2=0x1474(5236) */
 7c2:	95 5a       	P2 = P5 + P2;
 7c4:	42 30       	R0 = P2;
 7c6:	4b 30       	R1 = P3;
 7c8:	22 e1 40 00 	R2 = 0x40 (X);		/*		R2=0x40( 64) */
 7cc:	ff e3 1a fc 	CALL 0x0 <_SockAddrTomDNSAddr>;
 7d0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 7d2:	a8 e6 b3 14 	B[P5 + 0x14b3] = R0;
 7d6:	b8 e5 0c 00 	R0 = B[FP + 0xc] (X);
 7da:	a8 e6 b4 14 	B[P5 + 0x14b4] = R0;
 7de:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
 7e0:	a8 e6 b5 14 	B[P5 + 0x14b5] = R0;
 7e4:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
 7e6:	2e e6 30 05 	[P5 + 0x14c0] = R6;
 7ea:	28 e6 31 05 	[P5 + 0x14c4] = R0;
 7ee:	2d e4 2e 05 	R5 = [P5 + 0x14b8];
 7f2:	3c e5 f7 07 	P4 = [FP + 0x1fdc];
 7f6:	90 2f       	JUMP.S 0x716 <_SetupInterfaceList+0x52>;
 7f8:	43 30       	R0 = P3;
 7fa:	ff e3 03 fc 	CALL 0x0 <_SockAddrTomDNSAddr>;
 7fe:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 800:	ca 2f       	JUMP.S 0x794 <_SetupInterfaceList+0xd0>;
	...

00000804 <_mDNSPlatformInit>:
_mDNSPlatformInit():
 804:	fc 05       	[--SP] = (R7:7, P5:4);
 806:	67 01       	[--SP] = RETS;
 808:	28 32       	P5 = R0;
 80a:	86 6e       	SP += -0x30;		/* (-48) */
 80c:	11 60       	R1 = 0x2 (X);		/*		R1=0x2(  2) */
 80e:	8a 60       	R2 = 0x11 (X);		/*		R2=0x11( 17) */
 810:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
 812:	ff e3 f7 fb 	CALL 0x0 <_SockAddrTomDNSAddr>;
 816:	20 32       	P4 = R0;
 818:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
 81a:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x1474 */
 81e:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 822:	b0 e6 11 00 	B[SP + 0x11] = R0;
 826:	10 95       	R0 = W[P2] (Z);
 828:	70 b6       	W[SP + 0x12] = R0;
 82a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 82c:	70 b1       	[SP + 0x14] = R0;
 82e:	4e 30       	R1 = SP;
 830:	81 64       	R1 += 0x10;		/* ( 16) */
 832:	82 60       	R2 = 0x10 (X);		/*		R2=0x10( 16) */
 834:	44 30       	R0 = P4;
 836:	ff e3 e5 fb 	CALL 0x0 <_SockAddrTomDNSAddr>;
 83a:	38 30       	R7 = R0;
 83c:	44 30       	R0 = P4;
 83e:	ff e3 e1 fb 	CALL 0x0 <_SockAddrTomDNSAddr>;
 842:	07 0c       	CC = R7 == 0x0;
 844:	03 14       	IF !CC JUMP 0x84a <_mDNSPlatformInit+0x46> (BP);
 846:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
 848:	a8 b0       	[P5 + 0x8] = R0;
 84a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 84c:	2c e1 d4 18 	P4 = 0x18d4 (X);		/*		P4=0x18d4(6356) */
 850:	a8 e6 d4 18 	B[P5 + 0x18d4] = R0;
 854:	25 5b       	P4 = P5 + P4;
 856:	44 30       	R0 = P4;
 858:	ff e3 b8 fc 	CALL 0x1c8 <_GetUserSpecifiedRFC1034ComputerName>;
 85c:	a8 e4 d4 18 	R0 = B[P5 + 0x18d4] (Z);
 860:	00 0c       	CC = R0 == 0x0;
 862:	08 14       	IF !CC JUMP 0x872 <_mDNSPlatformInit+0x6e> (BP);
 864:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2(  2) */
 868:	44 30       	R0 = P4;
 86a:	01 e1 dc 00 	R1.L = 0xdc;		/* (220)	R1=0xdc(220) */
 86e:	ff e3 c9 fb 	CALL 0x0 <_SockAddrTomDNSAddr>;
 872:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 874:	2c e1 14 19 	P4 = 0x1914 (X);		/*		P4=0x1914(6420) */
 878:	a8 e6 14 19 	B[P5 + 0x1914] = R0;
 87c:	25 5b       	P4 = P5 + P4;
 87e:	44 30       	R0 = P4;
 880:	ff e3 a4 fc 	CALL 0x1c8 <_GetUserSpecifiedRFC1034ComputerName>;
 884:	a8 e4 14 19 	R0 = B[P5 + 0x1914] (Z);
 888:	00 0c       	CC = R0 == 0x0;
 88a:	08 14       	IF !CC JUMP 0x89a <_mDNSPlatformInit+0x96> (BP);
 88c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xdc(220) */
 890:	44 30       	R0 = P4;
 892:	01 e1 dc 00 	R1.L = 0xdc;		/* (220)	R1=0xdc(220) */
 896:	ff e3 b5 fb 	CALL 0x0 <_SockAddrTomDNSAddr>;
 89a:	45 30       	R0 = P5;
 89c:	ff e3 b2 fb 	CALL 0x0 <_SockAddrTomDNSAddr>;
 8a0:	6a 91       	P2 = [P5];
 8a2:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
 8a4:	b0 e6 21 00 	B[SP + 0x21] = R0;
 8a8:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
 8aa:	10 93       	[P2] = R0;
 8ac:	f2 bc       	[SP + 0xc] = P2;
 8ae:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 8b2:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 8b6:	46 30       	R0 = SP;
 8b8:	00 65       	R0 += 0x20;		/* ( 32) */
 8ba:	11 95       	R1 = W[P2] (Z);
 8bc:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
 8be:	ff e3 21 fe 	CALL 0x500 <_SetupSocket>;
 8c2:	00 0c       	CC = R0 == 0x0;
 8c4:	0c 14       	IF !CC JUMP 0x8dc <_mDNSPlatformInit+0xd8> (BP);
 8c6:	45 30       	R0 = P5;
 8c8:	ff e3 fe fe 	CALL 0x6c4 <_SetupInterfaceList>;
 8cc:	00 0c       	CC = R0 == 0x0;
 8ce:	07 10       	IF !CC JUMP 0x8dc <_mDNSPlatformInit+0xd8>;
 8d0:	45 30       	R0 = P5;
 8d2:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
 8d4:	ff e3 96 fb 	CALL 0x0 <_SockAddrTomDNSAddr>;
 8d8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 8da:	04 20       	JUMP.S 0x8e2 <_mDNSPlatformInit+0xde>;
 8dc:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
 8de:	40 e1 fe ff 	R0.H = 0xfffe;		/* ( -2)	R0=0xfffeffff(-65537) */
 8e2:	86 6d       	SP += 0x30;		/* ( 48) */
 8e4:	27 01       	RETS = [SP++];
 8e6:	bc 05       	(R7:7, P5:4) = [SP++];
 8e8:	10 00       	RTS;
	...

000008ec <_mDNSPlatformClose>:
_mDNSPlatformClose():
 8ec:	ff e2 42 fc 	JUMP.L 0x170 <_ClearInterfaceList>;

000008f0 <_mDNSPlatformPosixRefreshInterfaceList>:
_mDNSPlatformPosixRefreshInterfaceList():
 8f0:	78 05       	[--SP] = (R7:7);
 8f2:	67 01       	[--SP] = RETS;
 8f4:	a6 6f       	SP += -0xc;		/* (-12) */
 8f6:	38 30       	R7 = R0;
 8f8:	ff e3 3c fc 	CALL 0x170 <_ClearInterfaceList>;
 8fc:	07 30       	R0 = R7;
 8fe:	ff e3 e3 fe 	CALL 0x6c4 <_SetupInterfaceList>;
 902:	00 0c       	CC = R0 == 0x0;
 904:	66 6c       	SP += 0xc;		/* ( 12) */
 906:	f9 63       	R1 = -0x1 (X);		/*		R1=0xffffffff( -1) */
 908:	27 01       	RETS = [SP++];
 90a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 90c:	41 e1 fe ff 	R1.H = 0xfffe;		/* ( -2)	R1=0xfffeffff(-65537) */
 910:	01 06       	IF !CC R0 = R1;
 912:	38 05       	(R7:7) = [SP++];
 914:	10 00       	RTS;
	...

00000918 <_mDNSPlatformLock>:
	...
_mDNSPlatformLock():
 920:	10 00       	RTS;
	...

00000924 <_mDNSPlatformUnlock>:
	...
_mDNSPlatformUnlock():
 92c:	10 00       	RTS;
	...

00000930 <_mDNSPlatformStrCopy>:
_mDNSPlatformStrCopy():
 930:	ff e2 68 fb 	JUMP.L 0x0 <_SockAddrTomDNSAddr>;

00000934 <_mDNSPlatformStrLen>:
_mDNSPlatformStrLen():
 934:	ff e2 66 fb 	JUMP.L 0x0 <_SockAddrTomDNSAddr>;

00000938 <_mDNSPlatformMemCopy>:
_mDNSPlatformMemCopy():
 938:	ff e2 64 fb 	JUMP.L 0x0 <_SockAddrTomDNSAddr>;

0000093c <_mDNSPlatformMemSame>:
_mDNSPlatformMemSame():
 93c:	67 01       	[--SP] = RETS;
 93e:	a6 6f       	SP += -0xc;		/* (-12) */
 940:	ff e3 60 fb 	CALL 0x0 <_SockAddrTomDNSAddr>;
 944:	00 0c       	CC = R0 == 0x0;
 946:	66 6c       	SP += 0xc;		/* ( 12) */
 948:	00 02       	R0 = CC;
 94a:	27 01       	RETS = [SP++];
 94c:	10 00       	RTS;
	...

00000950 <_mDNSPlatformMemZero>:
_mDNSPlatformMemZero():
 950:	11 30       	R2 = R1;
 952:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
 954:	ff e2 56 fb 	JUMP.L 0x0 <_SockAddrTomDNSAddr>;

00000958 <_mDNSPlatformMemAllocate>:
_mDNSPlatformMemAllocate():
 958:	ff e2 54 fb 	JUMP.L 0x0 <_SockAddrTomDNSAddr>;

0000095c <_mDNSPlatformMemFree>:
_mDNSPlatformMemFree():
 95c:	ff e2 52 fb 	JUMP.L 0x0 <_SockAddrTomDNSAddr>;

00000960 <_mDNSPlatformRandomSeed>:
_mDNSPlatformRandomSeed():
 960:	67 01       	[--SP] = RETS;
 962:	66 6f       	SP += -0x14;		/* (-20) */
 964:	46 30       	R0 = SP;
 966:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
 968:	60 64       	R0 += 0xc;		/* ( 12) */
 96a:	ff e3 4b fb 	CALL 0x0 <_SockAddrTomDNSAddr>;
 96e:	30 a1       	R0 = [SP + 0x10];
 970:	a6 6c       	SP += 0x14;		/* ( 20) */
 972:	27 01       	RETS = [SP++];
 974:	10 00       	RTS;
	...

00000978 <_mDNSPlatformTimeInit>:
_mDNSPlatformTimeInit():
 978:	00 00       	NOP;
 97a:	00 00       	NOP;
 97c:	00 00       	NOP;
 97e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 980:	10 00       	RTS;
	...

00000984 <_mDNSPlatformRawTime>:
_mDNSPlatformRawTime():
 984:	78 05       	[--SP] = (R7:7);
 986:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_SockAddrTomDNSAddr> */
 98a:	67 01       	[--SP] = RETS;
 98c:	0a e1 50 00 	P2.L = 0x50;		/* ( 80)	P2=0x50 */
 990:	17 91       	R7 = [P2];
 992:	0f 64       	R7 += 0x1;		/* (  1) */
 994:	0c 03       	CC = AC0;
 996:	51 a0       	R1 = [P2 + 0x4];
 998:	00 02       	R0 = CC;
 99a:	01 50       	R0 = R1 + R0;
 99c:	17 93       	[P2] = R7;
 99e:	50 b0       	[P2 + 0x4] = R0;
 9a0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x50 */
 9a4:	0a e1 48 00 	P2.L = 0x48;		/* ( 72)	P2=0x48 */
 9a8:	10 91       	R0 = [P2];
 9aa:	08 64       	R0 += 0x1;		/* (  1) */
 9ac:	0c 03       	CC = AC0;
 9ae:	52 a0       	R2 = [P2 + 0x4];
 9b0:	01 02       	R1 = CC;
 9b2:	4a 50       	R1 = R2 + R1;
 9b4:	10 93       	[P2] = R0;
 9b6:	51 b0       	[P2 + 0x4] = R1;
 9b8:	a6 6f       	SP += -0xc;		/* (-12) */
 9ba:	20 4f       	R0 <<= 0x4;
 9bc:	21 e1 09 3d 	R1 = 0x3d09 (X);		/*		R1=0x3d09(15625) */
 9c0:	ff e3 20 fb 	CALL 0x0 <_SockAddrTomDNSAddr>;
 9c4:	57 4f       	R7 <<= 0xa;
 9c6:	66 6c       	SP += 0xc;		/* ( 12) */
 9c8:	38 56       	R0 = R0 | R7;
 9ca:	27 01       	RETS = [SP++];
 9cc:	38 05       	(R7:7) = [SP++];
 9ce:	10 00       	RTS;

000009d0 <_mDNSPlatformUTC>:
_mDNSPlatformUTC():
 9d0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 9d2:	ff e2 17 fb 	JUMP.L 0x0 <_SockAddrTomDNSAddr>;
	...

000009d8 <_mDNSPlatformSendWakeupPacket>:
	...
_mDNSPlatformSendWakeupPacket():
 9e0:	10 00       	RTS;
	...

000009e4 <_mDNSPlatformValidRecordForInterface>:
_mDNSPlatformValidRecordForInterface():
 9e4:	00 00       	NOP;
 9e6:	00 00       	NOP;
 9e8:	00 00       	NOP;
 9ea:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
 9ec:	10 00       	RTS;
	...

000009f0 <_mDNSPosixGetFDSet>:
_mDNSPosixGetFDSet():
 9f0:	f3 05       	[--SP] = (R7:6, P5:3);
 9f2:	20 32       	P4 = R0;
 9f4:	67 01       	[--SP] = RETS;
 9f6:	a6 6f       	SP += -0xc;		/* (-12) */
 9f8:	29 32       	P5 = R1;
 9fa:	3a 30       	R7 = R2;
 9fc:	33 af       	P3 = [SP + 0x30];
 9fe:	ff e3 01 fb 	CALL 0x0 <_SockAddrTomDNSAddr>;
 a02:	61 91       	P1 = [P4];
 a04:	30 30       	R6 = R0;
 a06:	22 e5 f7 07 	P2 = [P4 + 0x1fdc];
 a0a:	08 91       	R0 = [P1];
 a0c:	38 0c       	CC = R0 == -0x1;
 a0e:	32 1c       	IF CC JUMP 0xa72 <_mDNSPosixGetFDSet+0x82> (BP);
 a10:	29 91       	R1 = [P5];
 a12:	88 08       	CC = R0 < R1;
 a14:	04 1c       	IF CC JUMP 0xa1c <_mDNSPosixGetFDSet+0x2c> (BP);
 a16:	08 30       	R1 = R0;
 a18:	09 64       	R1 += 0x1;		/* (  1) */
 a1a:	29 93       	[P5] = R1;
 a1c:	08 30       	R1 = R0;
 a1e:	80 0c       	CC = R0 < 0x0;
 a20:	39 64       	R1 += 0x7;		/* (  7) */
 a22:	08 06       	IF !CC R1 = R0;
 a24:	19 4d       	R1 >>>= 0x3;
 a26:	4f 50       	R1 = R7 + R1;
 a28:	09 32       	P1 = R1;
 a2a:	39 60       	R1 = 0x7 (X);		/*		R1=0x7(  7) */
 a2c:	08 54       	R0 = R0 & R1;
 a2e:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
 a30:	81 40       	R1 <<= R0;
 a32:	48 99       	R0 = B[P1] (X);
 a34:	41 56       	R1 = R1 | R0;
 a36:	09 9b       	B[P1] = R1;
 a38:	1d 20       	JUMP.S 0xa72 <_mDNSPosixGetFDSet+0x82>;
 a3a:	00 00       	NOP;
 a3c:	10 e4 31 05 	R0 = [P2 + 0x14c4];
 a40:	38 0c       	CC = R0 == -0x1;
 a42:	15 1c       	IF CC JUMP 0xa6c <_mDNSPosixGetFDSet+0x7c> (BP);
 a44:	2b 91       	R3 = [P5];
 a46:	98 08       	CC = R0 < R3;
 a48:	04 1c       	IF CC JUMP 0xa50 <_mDNSPosixGetFDSet+0x60> (BP);
 a4a:	18 30       	R3 = R0;
 a4c:	0b 64       	R3 += 0x1;		/* (  1) */
 a4e:	2b 93       	[P5] = R3;
 a50:	18 30       	R3 = R0;
 a52:	80 0c       	CC = R0 < 0x0;
 a54:	3b 64       	R3 += 0x7;		/* (  7) */
 a56:	18 06       	IF !CC R3 = R0;
 a58:	1b 4d       	R3 >>>= 0x3;
 a5a:	df 50       	R3 = R7 + R3;
 a5c:	0b 32       	P1 = R3;
 a5e:	10 54       	R0 = R0 & R2;
 a60:	19 30       	R3 = R1;
 a62:	83 40       	R3 <<= R0;
 a64:	03 30       	R0 = R3;
 a66:	4b 99       	R3 = B[P1] (X);
 a68:	18 56       	R0 = R0 | R3;
 a6a:	08 9b       	B[P1] = R0;
 a6c:	00 00       	NOP;
 a6e:	52 91       	P2 = [P2];
 a70:	03 20       	JUMP.S 0xa76 <_mDNSPosixGetFDSet+0x86>;
 a72:	3a 60       	R2 = 0x7 (X);		/*		R2=0x7(  7) */
 a74:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
 a76:	42 0c       	CC = P2 == 0x0;
 a78:	e1 17       	IF !CC JUMP 0xa3a <_mDNSPosixGetFDSet+0x4a> (BP);
 a7a:	44 30       	R0 = P4;
 a7c:	ff e3 c2 fa 	CALL 0x0 <_SockAddrTomDNSAddr>;
 a80:	86 53       	R6 = R6 - R0;
 a82:	06 0d       	CC = R6 <= 0x0;
 a84:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
 a86:	30 07       	IF CC R6 = R0;
 a88:	82 c6 b6 01 	R0 = R6 >>> 0xa;
 a8c:	21 e1 ff 03 	R1 = 0x3ff (X);		/*		R1=0x3ff(1023) */
 a90:	8e 55       	R6 = R6 & R1;
 a92:	21 e1 09 3d 	R1 = 0x3d09 (X);		/*		R1=0x3d09(15625) */
 a96:	ce 40       	R6 *= R1;
 a98:	19 91       	R1 = [P3];
 a9a:	26 4d       	R6 >>>= 0x4;
 a9c:	01 09       	CC = R1 <= R0;
 a9e:	06 14       	IF !CC JUMP 0xaaa <_mDNSPosixGetFDSet+0xba> (BP);
 aa0:	01 08       	CC = R1 == R0;
 aa2:	06 14       	IF !CC JUMP 0xaae <_mDNSPosixGetFDSet+0xbe> (BP);
 aa4:	59 a0       	R1 = [P3 + 0x4];
 aa6:	31 09       	CC = R1 <= R6;
 aa8:	03 18       	IF CC JUMP 0xaae <_mDNSPosixGetFDSet+0xbe>;
 aaa:	18 93       	[P3] = R0;
 aac:	5e b0       	[P3 + 0x4] = R6;
 aae:	66 6c       	SP += 0xc;		/* ( 12) */
 ab0:	27 01       	RETS = [SP++];
 ab2:	b3 05       	(R7:6, P5:3) = [SP++];
 ab4:	10 00       	RTS;
	...

00000ab8 <_mDNSPosixProcessFDSet>:
_mDNSPosixProcessFDSet():
 ab8:	ec 05       	[--SP] = (R7:5, P5:4);
 aba:	20 32       	P4 = R0;
 abc:	67 01       	[--SP] = RETS;
 abe:	a6 6f       	SP += -0xc;		/* (-12) */
 ac0:	39 30       	R7 = R1;
 ac2:	62 91       	P2 = [P4];
 ac4:	25 e5 f7 07 	P5 = [P4 + 0x1fdc];
 ac8:	10 91       	R0 = [P2];
 aca:	38 0c       	CC = R0 == -0x1;
 acc:	3b 18       	IF CC JUMP 0xb42 <_mDNSPosixProcessFDSet+0x8a>;
 ace:	08 30       	R1 = R0;
 ad0:	80 0c       	CC = R0 < 0x0;
 ad2:	39 64       	R1 += 0x7;		/* (  7) */
 ad4:	08 06       	IF !CC R1 = R0;
 ad6:	19 4d       	R1 >>>= 0x3;
 ad8:	4f 50       	R1 = R7 + R1;
 ada:	11 32       	P2 = R1;
 adc:	39 60       	R1 = 0x7 (X);		/*		R1=0x7(  7) */
 ade:	08 54       	R0 = R0 & R1;
 ae0:	52 99       	R2 = B[P2] (X);
 ae2:	51 43       	R1 = R2.B (Z);
 ae4:	01 40       	R1 >>>= R0;
 ae6:	01 48       	CC = !BITTST (R1, 0x0);		/* bit  0 */
 ae8:	2d 1c       	IF CC JUMP 0xb42 <_mDNSPosixProcessFDSet+0x8a> (BP);
 aea:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
 aec:	81 40       	R1 <<= R0;
 aee:	c8 43       	R0 =~ R1;
 af0:	90 54       	R2 = R0 & R2;
 af2:	12 9b       	B[P2] = R2;
 af4:	62 91       	P2 = [P4];
 af6:	44 30       	R0 = P4;
 af8:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
 afa:	12 91       	R2 = [P2];
 afc:	ff e3 98 fa 	CALL 0x2c <_SocketDataReady>;
 b00:	21 20       	JUMP.S 0xb42 <_mDNSPosixProcessFDSet+0x8a>;
 b02:	00 00       	NOP;
 b04:	28 e4 31 05 	R0 = [P5 + 0x14c4];
 b08:	38 0c       	CC = R0 == -0x1;
 b0a:	19 18       	IF CC JUMP 0xb3c <_mDNSPosixProcessFDSet+0x84>;
 b0c:	08 30       	R1 = R0;
 b0e:	80 0c       	CC = R0 < 0x0;
 b10:	39 64       	R1 += 0x7;		/* (  7) */
 b12:	08 06       	IF !CC R1 = R0;
 b14:	19 4d       	R1 >>>= 0x3;
 b16:	4f 50       	R1 = R7 + R1;
 b18:	11 32       	P2 = R1;
 b1a:	30 54       	R0 = R0 & R6;
 b1c:	52 99       	R2 = B[P2] (X);
 b1e:	51 43       	R1 = R2.B (Z);
 b20:	01 40       	R1 >>>= R0;
 b22:	01 48       	CC = !BITTST (R1, 0x0);		/* bit  0 */
 b24:	0c 1c       	IF CC JUMP 0xb3c <_mDNSPosixProcessFDSet+0x84> (BP);
 b26:	0d 30       	R1 = R5;
 b28:	81 40       	R1 <<= R0;
 b2a:	c8 43       	R0 =~ R1;
 b2c:	90 54       	R2 = R0 & R2;
 b2e:	12 9b       	B[P2] = R2;
 b30:	2a e4 31 05 	R2 = [P5 + 0x14c4];
 b34:	44 30       	R0 = P4;
 b36:	4d 30       	R1 = P5;
 b38:	ff e3 7a fa 	CALL 0x2c <_SocketDataReady>;
 b3c:	00 00       	NOP;
 b3e:	6d 91       	P5 = [P5];
 b40:	03 20       	JUMP.S 0xb46 <_mDNSPosixProcessFDSet+0x8e>;
 b42:	3e 60       	R6 = 0x7 (X);		/*		R6=0x7(  7) */
 b44:	0d 60       	R5 = 0x1 (X);		/*		R5=0x1(  1) */
 b46:	45 0c       	CC = P5 == 0x0;
 b48:	dd 17       	IF !CC JUMP 0xb02 <_mDNSPosixProcessFDSet+0x4a> (BP);
 b4a:	66 6c       	SP += 0xc;		/* ( 12) */
 b4c:	27 01       	RETS = [SP++];
 b4e:	ac 05       	(R7:5, P5:4) = [SP++];
 b50:	10 00       	RTS;
	...

00000b54 <_mDNSPosixAddFDToEventLoop>:
_mDNSPosixAddFDToEventLoop():
 b54:	f5 05       	[--SP] = (R7:6, P5:5);
 b56:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x48 */
 b5a:	67 01       	[--SP] = RETS;
 b5c:	38 30       	R7 = R0;
 b5e:	0a e1 04 00 	P2.L = 0x4;		/* (  4)	P2=0x4 */
 b62:	90 a0       	R0 = [P2 + 0x8];
 b64:	a6 6f       	SP += -0xc;		/* (-12) */
 b66:	31 30       	R6 = R1;
 b68:	2a 32       	P5 = R2;
 b6a:	00 0c       	CC = R0 == 0x0;
 b6c:	05 14       	IF !CC JUMP 0xb76 <_mDNSPosixAddFDToEventLoop+0x22> (BP);
 b6e:	42 30       	R0 = P2;
 b70:	61 60       	R1 = 0xc (X);		/*		R1=0xc( 12) */
 b72:	ff e3 47 fa 	CALL 0x0 <_SockAddrTomDNSAddr>;
 b76:	20 e1 2b 01 	R0 = 0x12b (X);		/*		R0=0x12b(299) */
 b7a:	07 0a       	CC = R7 <= R0 (IU);
 b7c:	34 14       	IF !CC JUMP 0xbe4 <_mDNSPosixAddFDToEventLoop+0x90> (BP);
 b7e:	06 0c       	CC = R6 == 0x0;
 b80:	36 1c       	IF CC JUMP 0xbec <_mDNSPosixAddFDToEventLoop+0x98> (BP);
 b82:	80 60       	R0 = 0x10 (X);		/*		R0=0x10( 16) */
 b84:	ff e3 3e fa 	CALL 0x0 <_SockAddrTomDNSAddr>;
 b88:	10 32       	P2 = R0;
 b8a:	42 0c       	CC = P2 == 0x0;
 b8c:	34 18       	IF CC JUMP 0xbf4 <_mDNSPosixAddFDToEventLoop+0xa0>;
 b8e:	55 bc       	[P2 + 0x4] = P5;
 b90:	4d e1 00 00 	P5.H = 0x0;		/* (  0)	P5=0x0 <_SockAddrTomDNSAddr> */
 b94:	0d e1 04 00 	P5.L = 0x4;		/* (  4)	P5=0x4 */
 b98:	97 b0       	[P2 + 0x8] = R7;
 b9a:	4a 30       	R1 = P2;
 b9c:	16 93       	[P2] = R6;
 b9e:	45 30       	R0 = P5;
 ba0:	ff e3 30 fa 	CALL 0x0 <_SockAddrTomDNSAddr>;
 ba4:	82 c6 ef 01 	R0 = R7 >>> 0x3;
 ba8:	08 32       	P1 = R0;
 baa:	38 60       	R0 = 0x7 (X);		/*		R0=0x7(  7) */
 bac:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x4 */
 bb0:	c7 55       	R7 = R7 & R0;
 bb2:	0a e1 10 00 	P2.L = 0x10;		/* ( 16)	P2=0x10 */
 bb6:	8a 5a       	P2 = P2 + P1;
 bb8:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
 bba:	51 99       	R1 = B[P2] (X);
 bbc:	b8 40       	R0 <<= R7;
 bbe:	08 56       	R0 = R0 | R1;
 bc0:	10 9b       	B[P2] = R0;
 bc2:	6a 91       	P2 = [P5];
 bc4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 bc6:	06 20       	JUMP.S 0xbd2 <_mDNSPosixAddFDToEventLoop+0x7e>;
 bc8:	00 00       	NOP;
 bca:	91 a0       	R1 = [P2 + 0x8];
 bcc:	07 c4 01 00 	R0 = MAX (R0, R1);
 bd0:	d2 ac       	P2 = [P2 + 0xc];
 bd2:	42 0c       	CC = P2 == 0x0;
 bd4:	fa 17       	IF !CC JUMP 0xbc8 <_mDNSPosixAddFDToEventLoop+0x74> (BP);
 bd6:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x10 */
 bda:	0a e1 38 00 	P2.L = 0x38;		/* ( 56)	P2=0x38 */
 bde:	10 93       	[P2] = R0;
 be0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
 be2:	0c 20       	JUMP.S 0xbfa <_mDNSPosixAddFDToEventLoop+0xa6>;
 be4:	20 e1 ff df 	R0 = -0x2001 (X);		/*		R0=0xffffdfff(-8193) */
 be8:	18 4f       	R0 <<= 0x3;
 bea:	08 20       	JUMP.S 0xbfa <_mDNSPosixAddFDToEventLoop+0xa6>;
 bec:	20 e1 ff bf 	R0 = -0x4001 (X);		/*		R0=0xffffbfff(-16385) */
 bf0:	10 4f       	R0 <<= 0x2;
 bf2:	04 20       	JUMP.S 0xbfa <_mDNSPosixAddFDToEventLoop+0xa6>;
 bf4:	e8 63       	R0 = -0x3 (X);		/*		R0=0xfffffffd( -3) */
 bf6:	40 e1 fe ff 	R0.H = 0xfffe;		/* ( -2)	R0=0xfffefffd(-65539) */
 bfa:	66 6c       	SP += 0xc;		/* ( 12) */
 bfc:	27 01       	RETS = [SP++];
 bfe:	b5 05       	(R7:6, P5:5) = [SP++];
 c00:	10 00       	RTS;
	...

mDNSUNP.o:     file format elf32-dv10


Disassembly of section .text:

00000000 <_free_ifi_info>:
_free_ifi_info():
   0:	c5 04       	[--SP] = (P5:5);
   2:	28 32       	P5 = R0;
   4:	67 01       	[--SP] = RETS;
   6:	a6 6f       	SP += -0xc;		/* (-12) */
   8:	68 a1       	R0 = [P5 + 0x14];
   a:	00 0c       	CC = R0 == 0x0;
   c:	03 18       	IF CC JUMP 0x12 <_free_ifi_info+0x12>;
   e:	ff e3 f9 ff 	CALL 0x0 <_free_ifi_info>;
  12:	a8 a1       	R0 = [P5 + 0x18];
  14:	00 0c       	CC = R0 == 0x0;
  16:	03 18       	IF CC JUMP 0x1c <_free_ifi_info+0x1c>;
  18:	ff e3 f4 ff 	CALL 0x0 <_free_ifi_info>;
  1c:	66 6c       	SP += 0xc;		/* ( 12) */
  1e:	27 01       	RETS = [SP++];
  20:	45 30       	R0 = P5;
  22:	85 04       	(P5:5) = [SP++];
  24:	ff e2 ee ff 	JUMP.L 0x0 <_free_ifi_info>;

00000028 <_get_ifi_info>:
_get_ifi_info():
  28:	fc 05       	[--SP] = (R7:7, P5:4);
  2a:	67 01       	[--SP] = RETS;
  2c:	a6 6f       	SP += -0xc;		/* (-12) */
  2e:	e1 60       	R1 = 0x1c (X);		/*		R1=0x1c( 28) */
  30:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
  32:	ff e3 e7 ff 	CALL 0x0 <_free_ifi_info>;
  36:	28 32       	P5 = R0;
  38:	38 30       	R7 = R0;
  3a:	80 60       	R0 = 0x10 (X);		/*		R0=0x10( 16) */
  3c:	ff e3 e2 ff 	CALL 0x0 <_free_ifi_info>;
  40:	20 32       	P4 = R0;
  42:	45 0c       	CC = P5 == 0x0;
  44:	4f 18       	IF CC JUMP 0xe2 <_get_ifi_info+0xba>;
  46:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
  48:	a0 e6 01 00 	B[P4 + 0x1] = R0;
  4c:	80 60       	R0 = 0x10 (X);		/*		R0=0x10( 16) */
  4e:	20 9b       	B[P4] = R0;
  50:	ff e3 d8 ff 	CALL 0x0 <_free_ifi_info>;
  54:	60 b0       	[P4 + 0x4] = R0;
  56:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
  58:	ff e3 d4 ff 	CALL 0x0 <_free_ifi_info>;
  5c:	60 b4       	W[P4 + 0x2] = R0;
  5e:	68 a1       	R0 = [P5 + 0x14];
  60:	00 0c       	CC = R0 == 0x0;
  62:	08 14       	IF !CC JUMP 0x72 <_get_ifi_info+0x4a> (BP);
  64:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
  66:	81 60       	R1 = 0x10 (X);		/*		R1=0x10( 16) */
  68:	ff e3 cc ff 	CALL 0x0 <_free_ifi_info>;
  6c:	68 b1       	[P5 + 0x14] = R0;
  6e:	00 0c       	CC = R0 == 0x0;
  70:	39 1c       	IF CC JUMP 0xe2 <_get_ifi_info+0xba> (BP);
  72:	4c 30       	R1 = P4;
  74:	82 60       	R2 = 0x10 (X);		/*		R2=0x10( 16) */
  76:	68 a1       	R0 = [P5 + 0x14];
  78:	ff e3 c4 ff 	CALL 0x0 <_free_ifi_info>;
  7c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
  7e:	ff e3 c1 ff 	CALL 0x0 <_free_ifi_info>;
  82:	60 b4       	W[P4 + 0x2] = R0;
  84:	a8 a1       	R0 = [P5 + 0x18];
  86:	00 0c       	CC = R0 == 0x0;
  88:	08 14       	IF !CC JUMP 0x98 <_get_ifi_info+0x70> (BP);
  8a:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
  8c:	81 60       	R1 = 0x10 (X);		/*		R1=0x10( 16) */
  8e:	ff e3 b9 ff 	CALL 0x0 <_free_ifi_info>;
  92:	a8 b1       	[P5 + 0x18] = R0;
  94:	00 0c       	CC = R0 == 0x0;
  96:	26 1c       	IF CC JUMP 0xe2 <_get_ifi_info+0xba> (BP);
  98:	00 00       	NOP;
  9a:	a8 a1       	R0 = [P5 + 0x18];
  9c:	00 0c       	CC = R0 == 0x0;
  9e:	22 18       	IF CC JUMP 0xe2 <_get_ifi_info+0xba>;
  a0:	ff e3 b0 ff 	CALL 0x0 <_free_ifi_info>;
  a4:	60 b0       	[P4 + 0x4] = R0;
  a6:	4c 30       	R1 = P4;
  a8:	a8 a1       	R0 = [P5 + 0x18];
  aa:	82 60       	R2 = 0x10 (X);		/*		R2=0x10( 16) */
  ac:	ff e3 aa ff 	CALL 0x0 <_free_ifi_info>;
  b0:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0x44 */
  b4:	08 e1 00 00 	P0.L = 0x0;		/* (  0)	P0=0x0 <_free_ifi_info> */
  b8:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
  ba:	28 b1       	[P5 + 0x10] = R0;
  bc:	48 32       	P1 = P0;
  be:	08 90       	R0 = [P1++];
  c0:	55 32       	P2 = P5;
  c2:	10 92       	[P2++] = R0;
  c4:	40 a0       	R0 = [P0 + 0x4];
  c6:	68 b0       	[P5 + 0x4] = R0;
  c8:	21 6c       	P1 += 0x4;		/* (  4) */
  ca:	08 90       	R0 = [P1++];
  cc:	22 6c       	P2 += 0x4;		/* (  4) */
  ce:	10 92       	[P2++] = R0;
  d0:	08 91       	R0 = [P1];
  d2:	10 93       	[P2] = R0;
  d4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
  d6:	a8 e6 0f 00 	B[P5 + 0xf] = R0;
  da:	44 30       	R0 = P4;
  dc:	ff e3 92 ff 	CALL 0x0 <_free_ifi_info>;
  e0:	0a 20       	JUMP.S 0xf4 <_get_ifi_info+0xcc>;
  e2:	44 0c       	CC = P4 == 0x0;
  e4:	04 18       	IF CC JUMP 0xec <_get_ifi_info+0xc4>;
  e6:	44 30       	R0 = P4;
  e8:	ff e3 8c ff 	CALL 0x0 <_free_ifi_info>;
  ec:	45 30       	R0 = P5;
  ee:	ff e3 89 ff 	CALL 0x0 <_free_ifi_info>;
  f2:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
  f4:	66 6c       	SP += 0xc;		/* ( 12) */
  f6:	07 30       	R0 = R7;
  f8:	27 01       	RETS = [SP++];
  fa:	bc 05       	(R7:7, P5:4) = [SP++];
  fc:	10 00       	RTS;
	...

uDNS.o:     file format elf32-dv10


Disassembly of section .text:

00000000 <_FlushAddressCacheRecords>:
_FlushAddressCacheRecords():
       0:	eb 05       	[--SP] = (R7:5, P5:3);
       2:	18 32       	P3 = R0;
       4:	00 e8 03 00 	LINK 0xc;		/* (12) */
       8:	2f e1 5c 01 	FP = 0x15c (X);		/*		FP=0x15c(348) */
       c:	26 e1 28 09 	R6 = 0x928 (X);		/*		R6=0x928(2344) */
      10:	47 e1 00 00 	R7.H = 0x0;		/* (  0)	R7=0x0 <_FlushAddressCacheRecords>(  0) */
      14:	28 30       	R5 = R0;
      16:	fb 5b       	FP = P3 + FP;
      18:	b0 51       	R6 = R0 + R6;
      1a:	07 e1 00 00 	R7.L = 0x0;		/* (  0)	R7=0x0 <_FlushAddressCacheRecords>(  0) */
      1e:	bd 65       	R5 += 0x37;		/* ( 55) */
      20:	00 00       	NOP;
      22:	7c 90       	P4 = [FP++];
      24:	3a 20       	JUMP.S 0x98 <_FlushAddressCacheRecords+0x98>;
      26:	00 00       	NOP;
      28:	a5 ac       	P5 = [P4 + 0x8];
      2a:	34 20       	JUMP.S 0x92 <_FlushAddressCacheRecords+0x92>;
      2c:	00 00       	NOP;
      2e:	e8 a1       	R0 = [P5 + 0x1c];
      30:	00 0c       	CC = R0 == 0x0;
      32:	2e 14       	IF !CC JUMP 0x8e <_FlushAddressCacheRecords+0x8e> (BP);
      34:	e8 a4       	R0 = W[P5 + 0x6] (Z);
      36:	29 60       	R1 = 0x5 (X);		/*		R1=0x5(  5) */
      38:	08 08       	CC = R0 == R1;
      3a:	13 18       	IF CC JUMP 0x60 <_FlushAddressCacheRecords+0x60>;
      3c:	08 0c       	CC = R0 == 0x1;
      3e:	11 18       	IF CC JUMP 0x60 <_FlushAddressCacheRecords+0x60>;
      40:	79 61       	R1 = 0x2f (X);		/*		R1=0x2f( 47) */
      42:	08 08       	CC = R0 == R1;
      44:	07 14       	IF !CC JUMP 0x52 <_FlushAddressCacheRecords+0x52> (BP);
      46:	6a ae       	P2 = [P5 + 0x24];
      48:	90 e4 04 00 	R0 = B[P2 + 0x4] (Z);
      4c:	30 48       	CC = !BITTST (R0, 0x6);		/* bit  6 */
      4e:	09 1c       	IF CC JUMP 0x60 <_FlushAddressCacheRecords+0x60> (BP);
      50:	04 20       	JUMP.S 0x58 <_FlushAddressCacheRecords+0x58>;
      52:	e1 60       	R1 = 0x1c (X);		/*		R1=0x1c( 28) */
      54:	08 08       	CC = R0 == R1;
      56:	04 20       	JUMP.S 0x5e <_FlushAddressCacheRecords+0x5e>;
      58:	90 e4 07 00 	R0 = B[P2 + 0x7] (Z);
      5c:	18 48       	CC = !BITTST (R0, 0x3);		/* bit  3 */
      5e:	18 14       	IF !CC JUMP 0x8e <_FlushAddressCacheRecords+0x8e> (BP);
      60:	17 32       	P2 = R7;
      62:	10 91       	R0 = [P2];
      64:	00 0c       	CC = R0 == 0x0;
      66:	10 1c       	IF CC JUMP 0x86 <_FlushAddressCacheRecords+0x86> (BP);
      68:	69 a2       	R1 = [P5 + 0x24];
      6a:	45 30       	R0 = P5;
      6c:	21 64       	R1 += 0x4;		/* (  4) */
      6e:	15 30       	R2 = R5;
      70:	20 64       	R0 += 0x4;		/* (  4) */
      72:	ff e3 c7 ff 	CALL 0x0 <_FlushAddressCacheRecords>;
      76:	10 30       	R2 = R0;
      78:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1c( 28) */
      7c:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
      7e:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_FlushAddressCacheRecords>(  0) */
      82:	ff e3 bf ff 	CALL 0x0 <_FlushAddressCacheRecords>;
      86:	43 30       	R0 = P3;
      88:	4d 30       	R1 = P5;
      8a:	ff e3 bb ff 	CALL 0x0 <_FlushAddressCacheRecords>;
      8e:	00 00       	NOP;
      90:	6d 91       	P5 = [P5];
      92:	45 0c       	CC = P5 == 0x0;
      94:	cc 17       	IF !CC JUMP 0x2c <_FlushAddressCacheRecords+0x2c> (BP);
      96:	64 91       	P4 = [P4];
      98:	44 0c       	CC = P4 == 0x0;
      9a:	c6 17       	IF !CC JUMP 0x26 <_FlushAddressCacheRecords+0x26> (BP);
      9c:	47 30       	R0 = FP;
      9e:	30 08       	CC = R0 == R6;
      a0:	c0 17       	IF !CC JUMP 0x20 <_FlushAddressCacheRecords+0x20> (BP);
      a2:	66 6c       	SP += 0xc;		/* ( 12) */
      a4:	77 90       	FP = [SP++];
      a6:	27 01       	RETS = [SP++];
      a8:	ab 05       	(R7:5, P5:3) = [SP++];
      aa:	10 00       	RTS;

000000ac <_NoTestQuery>:
_NoTestQuery():
      ac:	10 32       	P2 = R0;
      ae:	50 a3       	R0 = [P2 + 0x34];
      b0:	00 0c       	CC = R0 == 0x0;
      b2:	36 14       	IF !CC JUMP 0x11e <_NoTestQuery+0x72> (BP);
      b4:	50 e4 1a 01 	R0 = W[P2 + 0x234] (Z);
      b8:	61 60       	R1 = 0xc (X);		/*		R1=0xc( 12) */
      ba:	08 08       	CC = R0 == R1;
      bc:	31 14       	IF !CC JUMP 0x11e <_NoTestQuery+0x72> (BP);
      be:	29 e1 34 01 	P1 = 0x134 (X);		/*		P1=0x134(308) */
      c2:	8a 5a       	P2 = P2 + P1;
      c4:	21 68       	P1 = 0x4 (X);		/*		P1=0x4(  4) */
      c6:	4b 60       	R3 = 0x9 (X);		/*		R3=0x9(  9) */
      c8:	b2 e0 23 10 	LSETUP(0xcc <_NoTestQuery+0x20>, 0x10e <_NoTestQuery+0x62>) LC1 = P1;
      cc:	50 99       	R0 = B[P2] (X);
      ce:	08 30       	R1 = R0;
      d0:	f9 67       	R1 += -0x1;		/* ( -1) */
      d2:	49 43       	R1 = R1.B (Z);
      d4:	11 0e       	CC = R1 <= 0x2 (IU);
      d6:	26 14       	IF !CC JUMP 0x122 <_NoTestQuery+0x76> (BP);
      d8:	4a 60       	R2 = 0x9 (X);		/*		R2=0x9(  9) */
      da:	91 e5 01 00 	R1 = B[P2 + 0x1] (X);
      de:	81 66       	R1 += -0x30;		/* (-48) */
      e0:	49 43       	R1 = R1.B (Z);
      e2:	11 0a       	CC = R1 <= R2 (IU);
      e4:	1f 10       	IF !CC JUMP 0x122 <_NoTestQuery+0x76>;
      e6:	41 43       	R1 = R0.B (Z);
      e8:	09 0c       	CC = R1 == 0x1;
      ea:	0f 1c       	IF CC JUMP 0x108 <_NoTestQuery+0x5c> (BP);
      ec:	92 e5 02 00 	R2 = B[P2 + 0x2] (X);
      f0:	82 66       	R2 += -0x30;		/* (-48) */
      f2:	52 43       	R2 = R2.B (Z);
      f4:	1a 0a       	CC = R2 <= R3 (IU);
      f6:	16 10       	IF !CC JUMP 0x122 <_NoTestQuery+0x76>;
      f8:	19 0c       	CC = R1 == 0x3;
      fa:	07 14       	IF !CC JUMP 0x108 <_NoTestQuery+0x5c> (BP);
      fc:	91 e5 03 00 	R1 = B[P2 + 0x3] (X);
     100:	81 66       	R1 += -0x30;		/* (-48) */
     102:	49 43       	R1 = R1.B (Z);
     104:	19 0a       	CC = R1 <= R3 (IU);
     106:	0e 10       	IF !CC JUMP 0x122 <_NoTestQuery+0x76>;
     108:	40 43       	R0 = R0.B (Z);
     10a:	08 64       	R0 += 0x1;		/* (  1) */
     10c:	00 32       	P0 = R0;
     10e:	82 5a       	P2 = P2 + P0;
     110:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xc( 12) */
     114:	42 30       	R0 = P2;
     116:	01 e1 34 00 	R1.L = 0x34;		/* ( 52)	R1=0x34( 52) */
     11a:	ff e2 73 ff 	JUMP.L 0x0 <_FlushAddressCacheRecords>;
     11e:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
     120:	02 20       	JUMP.S 0x124 <_NoTestQuery+0x78>;
     122:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     124:	10 00       	RTS;
	...

00000128 <_FreeARElemCallback>:
_FreeARElemCallback():
     128:	20 e1 ff fe 	R0 = -0x101 (X);		/*		R0=0xfffffeff(-257) */
     12c:	40 4f       	R0 <<= 0x8;
     12e:	02 08       	CC = R2 == R0;
     130:	06 14       	IF !CC JUMP 0x13c <_FreeARElemCallback+0x14> (BP);
     132:	11 32       	P2 = R1;
     134:	10 e4 10 00 	R0 = [P2 + 0x40];
     138:	ff e2 64 ff 	JUMP.L 0x0 <_FlushAddressCacheRecords>;
     13c:	10 00       	RTS;
	...

00000140 <_RRAdditionalSize>:
_RRAdditionalSize():
     140:	fb 05       	[--SP] = (R7:7, P5:3);
     142:	29 32       	P5 = R1;
     144:	67 01       	[--SP] = RETS;
     146:	a6 6f       	SP += -0xc;		/* (-12) */
     148:	18 32       	P3 = R0;
     14a:	45 0c       	CC = P5 == 0x0;
     14c:	1b 1c       	IF CC JUMP 0x182 <_RRAdditionalSize+0x42> (BP);
     14e:	a8 a0       	R0 = [P5 + 0x8];
     150:	00 0c       	CC = R0 == 0x0;
     152:	21 18       	IF CC JUMP 0x194 <_RRAdditionalSize+0x54>;
     154:	2a e1 8c 11 	P2 = 0x118c (X);		/*		P2=0x118c(4492) */
     158:	95 5a       	P2 = P5 + P2;
     15a:	42 30       	R0 = P2;
     15c:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
     160:	9f e4 14 19 	R7 = B[P3 + 0x1914] (Z);
     164:	48 50       	R1 = R0 + R1;
     166:	ff e3 4d ff 	CALL 0x0 <_FlushAddressCacheRecords>;
     16a:	9a e4 54 1a 	R2 = B[P3 + 0x1a54] (Z);
     16e:	99 e4 54 1b 	R1 = B[P3 + 0x1b54] (Z);
     172:	0f 64       	R7 += 0x1;		/* (  1) */
     174:	4a 50       	R1 = R2 + R1;
     176:	c0 42       	R0 = R0.L (Z);
     178:	61 64       	R1 += 0xc;		/* ( 12) */
     17a:	c7 51       	R7 = R7 + R0;
     17c:	f9 51       	R7 = R1 + R7;
     17e:	27 32       	P4 = R7;
     180:	0b 20       	JUMP.S 0x196 <_RRAdditionalSize+0x56>;
     182:	04 68       	P4 = 0x0 (X);		/*		P4=0x0(  0) */
     184:	02 68       	P2 = 0x0 (X);		/*		P2=0x0(  0) */
     186:	22 5b       	P4 = P2 + P4;
     188:	66 6c       	SP += 0xc;		/* ( 12) */
     18a:	44 30       	R0 = P4;
     18c:	27 01       	RETS = [SP++];
     18e:	58 65       	R0 += 0x2b;		/* ( 43) */
     190:	bb 05       	(R7:7, P5:3) = [SP++];
     192:	10 00       	RTS;
     194:	04 68       	P4 = 0x0 (X);		/*		P4=0x0(  0) */
     196:	2a e1 8c 12 	P2 = 0x128c (X);		/*		P2=0x128c(4748) */
     19a:	95 5a       	P2 = P5 + P2;
     19c:	42 30       	R0 = P2;
     19e:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
     1a2:	48 50       	R1 = R0 + R1;
     1a4:	ff e3 2e ff 	CALL 0x0 <_FlushAddressCacheRecords>;
     1a8:	c0 42       	R0 = R0.L (Z);
     1aa:	10 32       	P2 = R0;
     1ac:	29 e1 44 00 	P1 = 0x44 (X);		/*		P1=0x44( 68) */
     1b0:	8a 5a       	P2 = P2 + P1;
     1b2:	ea 2f       	JUMP.S 0x186 <_RRAdditionalSize+0x46>;

000001b4 <_FoundStaticHostname>:
_FoundStaticHostname():
     1b4:	eb 05       	[--SP] = (R7:5, P5:3);
     1b6:	1a 32       	P3 = R2;
     1b8:	28 32       	P5 = R0;
     1ba:	00 e8 05 00 	LINK 0x14;		/* (20) */
     1be:	2f e1 04 25 	FP = 0x2504 (X);		/*		FP=0x2504(9476) */
     1c2:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x128c */
     1c6:	1d a2       	R5 = [P3 + 0x20];
     1c8:	3d 30       	R7 = R5;
     1ca:	98 a5       	R0 = W[P3 + 0xc] (Z);
     1cc:	36 e4 10 00 	R6 = [SP + 0x40];
     1d0:	27 64       	R7 += 0x4;		/* (  4) */
     1d2:	fd 5b       	FP = P5 + FP;
     1d4:	2c e5 c1 09 	P4 = [P5 + 0x2704];
     1d8:	00 0c       	CC = R0 == 0x0;
     1da:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     1de:	1b 1c       	IF CC JUMP 0x214 <_FoundStaticHostname+0x60> (BP);
     1e0:	10 91       	R0 = [P2];
     1e2:	00 0c       	CC = R0 == 0x0;
     1e4:	30 1c       	IF CC JUMP 0x244 <_FoundStaticHostname+0x90> (BP);
     1e6:	22 e1 34 01 	R2 = 0x134 (X);		/*		R2=0x134(308) */
     1ea:	91 50       	R2 = R1 + R2;
     1ec:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0xfeff(65279) */
     1f0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x100(256) */
     1f4:	06 0c       	CC = R6 == 0x0;
     1f6:	01 e1 48 00 	R1.L = 0x48;		/* ( 72)	R1=0x48( 72) */
     1fa:	00 e1 44 00 	R0.L = 0x44;		/* ( 68)	R0=0x44( 68) */
     1fe:	01 07       	IF CC R0 = R1;
     200:	30 b1       	[SP + 0x10] = R0;
     202:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x48( 72) */
     206:	f7 b0       	[SP + 0xc] = R7;
     208:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
     20a:	01 e1 4c 00 	R1.L = 0x4c;		/* ( 76)	R1=0x4c( 76) */
     20e:	ff e3 f9 fe 	CALL 0x0 <_FlushAddressCacheRecords>;
     212:	19 20       	JUMP.S 0x244 <_FoundStaticHostname+0x90>;
     214:	10 91       	R0 = [P2];
     216:	00 0c       	CC = R0 == 0x0;
     218:	16 1c       	IF CC JUMP 0x244 <_FoundStaticHostname+0x90> (BP);
     21a:	22 e1 34 01 	R2 = 0x134 (X);		/*		R2=0x134(308) */
     21e:	91 50       	R2 = R1 + R2;
     220:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x3(  3) */
     224:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4c( 76) */
     228:	01 e1 48 00 	R1.L = 0x48;		/* ( 72)	R1=0x48( 72) */
     22c:	06 0c       	CC = R6 == 0x0;
     22e:	00 e1 44 00 	R0.L = 0x44;		/* ( 68)	R0=0x44( 68) */
     232:	01 07       	IF CC R0 = R1;
     234:	f0 b0       	[SP + 0xc] = R0;
     236:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x48( 72) */
     23a:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
     23c:	01 e1 84 00 	R1.L = 0x84;		/* (132)	R1=0x84(132) */
     240:	ff e3 e0 fe 	CALL 0x0 <_FlushAddressCacheRecords>;
     244:	06 0c       	CC = R6 == 0x0;
     246:	4b 1c       	IF CC JUMP 0x2dc <_FoundStaticHostname+0x128> (BP);
     248:	98 a5       	R0 = W[P3 + 0xc] (Z);
     24a:	00 0c       	CC = R0 == 0x0;
     24c:	6a 1c       	IF CC JUMP 0x320 <_FoundStaticHostname+0x16c> (BP);
     24e:	07 30       	R0 = R7;
     250:	4f 30       	R1 = FP;
     252:	ff e3 d7 fe 	CALL 0x0 <_FlushAddressCacheRecords>;
     256:	00 0c       	CC = R0 == 0x0;
     258:	64 14       	IF !CC JUMP 0x320 <_FoundStaticHostname+0x16c> (BP);
     25a:	35 30       	R6 = R5;
     25c:	26 64       	R6 += 0x4;		/* (  4) */
     25e:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
     262:	4e 50       	R1 = R6 + R1;
     264:	07 30       	R0 = R7;
     266:	ff e3 cd fe 	CALL 0x0 <_FlushAddressCacheRecords>;
     26a:	c2 42       	R2 = R0.L (Z);
     26c:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
     270:	02 0a       	CC = R2 <= R0 (IU);
     272:	09 14       	IF !CC JUMP 0x284 <_FoundStaticHostname+0xd0> (BP);
     274:	2a e1 04 25 	P2 = 0x2504 (X);		/*		P2=0x2504(9476) */
     278:	95 5a       	P2 = P5 + P2;
     27a:	42 30       	R0 = P2;
     27c:	0e 30       	R1 = R6;
     27e:	ff e3 c1 fe 	CALL 0x0 <_FlushAddressCacheRecords>;
     282:	23 20       	JUMP.S 0x2c8 <_FoundStaticHostname+0x114>;
     284:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     286:	a8 e6 04 25 	B[P5 + 0x2504] = R0;
     28a:	1f 20       	JUMP.S 0x2c8 <_FoundStaticHostname+0x114>;
     28c:	00 00       	NOP;
     28e:	20 e4 89 00 	R0 = [P4 + 0x224];
     292:	08 0c       	CC = R0 == 0x1;
     294:	08 18       	IF CC JUMP 0x2a4 <_FoundStaticHostname+0xf0>;
     296:	31 60       	R1 = 0x6 (X);		/*		R1=0x6(  6) */
     298:	08 08       	CC = R0 == R1;
     29a:	05 1c       	IF CC JUMP 0x2a4 <_FoundStaticHostname+0xf0> (BP);
     29c:	20 e4 66 01 	R0 = [P4 + 0x598];
     2a0:	08 0c       	CC = R0 == 0x1;
     2a2:	11 14       	IF !CC JUMP 0x2c4 <_FoundStaticHostname+0x110> (BP);
     2a4:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x2504 */
     2a8:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     2ac:	52 91       	P2 = [P2];
     2ae:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
     2b0:	51 44       	P1 = P2 << 0x2;
     2b2:	91 5a       	P2 = P1 + P2;
     2b4:	29 e5 37 00 	P1 = [P5 + 0xdc];
     2b8:	8a 5a       	P2 = P2 + P1;
     2ba:	42 0c       	CC = P2 == 0x0;
     2bc:	90 07       	IF CC P2 = R0;
     2be:	2a e7 fc 07 	[P5 + 0x1ff0] = P2;
     2c2:	2f 20       	JUMP.S 0x320 <_FoundStaticHostname+0x16c>;
     2c4:	00 00       	NOP;
     2c6:	64 91       	P4 = [P4];
     2c8:	44 0c       	CC = P4 == 0x0;
     2ca:	e1 17       	IF !CC JUMP 0x28c <_FoundStaticHostname+0xd8> (BP);
     2cc:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x6(  6) */
     2d0:	45 30       	R0 = P5;
     2d2:	01 e1 40 01 	R1.L = 0x140;		/* (320)	R1=0x140 <_RRAdditionalSize>(320) */
     2d6:	ff e3 95 fe 	CALL 0x0 <_FlushAddressCacheRecords>;
     2da:	11 20       	JUMP.S 0x2fc <_FoundStaticHostname+0x148>;
     2dc:	07 30       	R0 = R7;
     2de:	4f 30       	R1 = FP;
     2e0:	ff e3 90 fe 	CALL 0x0 <_FlushAddressCacheRecords>;
     2e4:	00 0c       	CC = R0 == 0x0;
     2e6:	1d 1c       	IF CC JUMP 0x320 <_FoundStaticHostname+0x16c> (BP);
     2e8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x140 <_RRAdditionalSize>(320) */
     2ec:	45 30       	R0 = P5;
     2ee:	01 e1 40 01 	R1.L = 0x140;		/* (320)	R1=0x140 <_RRAdditionalSize>(320) */
     2f2:	ff e3 87 fe 	CALL 0x0 <_FlushAddressCacheRecords>;
     2f6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     2f8:	a8 e6 04 25 	B[P5 + 0x2504] = R0;
     2fc:	a6 6c       	SP += 0x14;		/* ( 20) */
     2fe:	28 e4 37 00 	R0 = [P5 + 0xdc];
     302:	77 90       	FP = [SP++];
     304:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
     306:	00 0c       	CC = R0 == 0x0;
     308:	01 07       	IF CC R0 = R1;
     30a:	28 e6 fc 07 	[P5 + 0x1ff0] = R0;
     30e:	27 01       	RETS = [SP++];
     310:	45 30       	R0 = P5;
     312:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1(  1) */
     316:	01 e1 40 01 	R1.L = 0x140;		/* (320)	R1=0x140 <_RRAdditionalSize>(320) */
     31a:	ab 05       	(R7:5, P5:3) = [SP++];
     31c:	ff e2 72 fe 	JUMP.L 0x0 <_FlushAddressCacheRecords>;
     320:	a6 6c       	SP += 0x14;		/* ( 20) */
     322:	77 90       	FP = [SP++];
     324:	27 01       	RETS = [SP++];
     326:	ab 05       	(R7:5, P5:3) = [SP++];
     328:	10 00       	RTS;
	...

0000032c <_FoundDomain>:
_FoundDomain():
     32c:	e3 05       	[--SP] = (R7:4, P5:3);
     32e:	00 e8 0a 00 	LINK 0x28;		/* (40) */
     332:	3a 32       	FP = R2;
     334:	29 32       	P5 = R1;
     336:	30 30       	R6 = R0;
     338:	61 60       	R1 = 0xc (X);		/*		R1=0xc( 12) */
     33a:	34 e5 16 00 	P4 = [SP + 0x58];
     33e:	78 a4       	R0 = W[FP + 0x2] (Z);
     340:	2b e5 98 00 	P3 = [P5 + 0x260];
     344:	08 08       	CC = R0 == R1;
     346:	34 15       	IF !CC JUMP 0x5ae <_FoundDomain+0x282> (BP);
     348:	38 99       	R0 = B[FP] (Z);
     34a:	21 e1 f0 00 	R1 = 0xf0 (X);		/*		R1=0xf0(240) */
     34e:	08 08       	CC = R0 == R1;
     350:	2f 19       	IF CC JUMP 0x5ae <_FoundDomain+0x282>;
     352:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     356:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     35a:	52 91       	P2 = [P2];
     35c:	bd a1       	R5 = [FP + 0x18];
     35e:	42 30       	R0 = P2;
     360:	72 be       	[SP + 0x24] = P2;
     362:	05 08       	CC = R5 == R0;
     364:	25 19       	IF CC JUMP 0x5ae <_FoundDomain+0x282>;
     366:	2a e1 0c 01 	P2 = 0x10c (X);		/*		P2=0x10c(268) */
     36a:	93 5a       	P2 = P3 + P2;
     36c:	55 08       	CC = P5 == P2;
     36e:	07 14       	IF !CC JUMP 0x37c <_FoundDomain+0x50> (BP);
     370:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x10c */
     374:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     378:	17 91       	R7 = [P2];
     37a:	33 20       	JUMP.S 0x3e0 <_FoundDomain+0xb4>;
     37c:	2a e1 70 03 	P2 = 0x370 (X);		/*		P2=0x370(880) */
     380:	93 5a       	P2 = P3 + P2;
     382:	55 08       	CC = P5 == P2;
     384:	07 14       	IF !CC JUMP 0x392 <_FoundDomain+0x66> (BP);
     386:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x370 */
     38a:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     38e:	57 a0       	R7 = [P2 + 0x4];
     390:	28 20       	JUMP.S 0x3e0 <_FoundDomain+0xb4>;
     392:	2a e1 d4 05 	P2 = 0x5d4 (X);		/*		P2=0x5d4(1492) */
     396:	93 5a       	P2 = P3 + P2;
     398:	55 08       	CC = P5 == P2;
     39a:	07 14       	IF !CC JUMP 0x3a8 <_FoundDomain+0x7c> (BP);
     39c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x5d4 */
     3a0:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     3a4:	97 a0       	R7 = [P2 + 0x8];
     3a6:	1d 20       	JUMP.S 0x3e0 <_FoundDomain+0xb4>;
     3a8:	2a e1 38 08 	P2 = 0x838 (X);		/*		P2=0x838(2104) */
     3ac:	93 5a       	P2 = P3 + P2;
     3ae:	55 08       	CC = P5 == P2;
     3b0:	07 14       	IF !CC JUMP 0x3be <_FoundDomain+0x92> (BP);
     3b2:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x838 */
     3b6:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     3ba:	d7 a0       	R7 = [P2 + 0xc];
     3bc:	12 20       	JUMP.S 0x3e0 <_FoundDomain+0xb4>;
     3be:	2a e1 9c 0a 	P2 = 0xa9c (X);		/*		P2=0xa9c(2716) */
     3c2:	93 5a       	P2 = P3 + P2;
     3c4:	55 08       	CC = P5 == P2;
     3c6:	07 14       	IF !CC JUMP 0x3d4 <_FoundDomain+0xa8> (BP);
     3c8:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0xa9c */
     3cc:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     3d0:	17 a1       	R7 = [P2 + 0x10];
     3d2:	07 20       	JUMP.S 0x3e0 <_FoundDomain+0xb4>;
     3d4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xf0(240) */
     3d8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     3da:	01 e1 c4 00 	R1.L = 0xc4;		/* (196)	R1=0xc4(196) */
     3de:	36 20       	JUMP.S 0x44a <_FoundDomain+0x11e>;
     3e0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     3e4:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     3e8:	10 91       	R0 = [P2];
     3ea:	00 0c       	CC = R0 == 0x0;
     3ec:	21 1c       	IF CC JUMP 0x42e <_FoundDomain+0x102> (BP);
     3ee:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_FlushAddressCacheRecords>(  0) */
     3f2:	44 e1 00 00 	R4.H = 0x0;		/* (  0)	R4=0x57( 87) */
     3f6:	44 0c       	CC = P4 == 0x0;
     3f8:	00 e1 bc 00 	R0.L = 0xbc;		/* (188)	R0=0xbc(188) */
     3fc:	04 e1 c0 00 	R4.L = 0xc0;		/* (192)	R4=0xc0(192) */
     400:	20 06       	IF !CC R4 = R0;
     402:	39 a2       	R1 = [FP + 0x20];
     404:	16 30       	R2 = R6;
     406:	21 64       	R1 += 0x4;		/* (  4) */
     408:	ba 65       	R2 += 0x37;		/* ( 55) */
     40a:	47 30       	R0 = FP;
     40c:	ff e3 fa fd 	CALL 0x0 <_FlushAddressCacheRecords>;
     410:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
     414:	55 5b       	P5 = P5 + P2;
     416:	b0 b1       	[SP + 0x18] = R0;
     418:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xc4(196) */
     41c:	f4 b0       	[SP + 0xc] = R4;
     41e:	37 b1       	[SP + 0x10] = R7;
     420:	75 bd       	[SP + 0x14] = P5;
     422:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
     424:	01 e1 e4 00 	R1.L = 0xe4;		/* (228)	R1=0xe4(228) */
     428:	15 30       	R2 = R5;
     42a:	ff e3 eb fd 	CALL 0x0 <_FlushAddressCacheRecords>;
     42e:	44 0c       	CC = P4 == 0x0;
     430:	82 1c       	IF CC JUMP 0x534 <_FoundDomain+0x208> (BP);
     432:	20 e1 78 03 	R0 = 0x378 (X);		/*		R0=0x378(888) */
     436:	ff e3 e5 fd 	CALL 0x0 <_FlushAddressCacheRecords>;
     43a:	20 32       	P4 = R0;
     43c:	44 0c       	CC = P4 == 0x0;
     43e:	0c 14       	IF !CC JUMP 0x456 <_FoundDomain+0x12a> (BP);
     440:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xe4(228) */
     444:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     446:	01 e1 08 01 	R1.L = 0x108;		/* (264)	R1=0x108(264) */
     44a:	46 6d       	SP += 0x28;		/* ( 40) */
     44c:	77 90       	FP = [SP++];
     44e:	27 01       	RETS = [SP++];
     450:	a3 05       	(R7:4, P5:3) = [SP++];
     452:	ff e2 d7 fd 	JUMP.L 0x0 <_FlushAddressCacheRecords>;
     456:	28 30       	R5 = R0;
     458:	60 60       	R0 = 0xc (X);		/*		R0=0xc( 12) */
     45a:	b0 b5       	W[SP + 0xc] = R0;
     45c:	20 e1 20 1c 	R0 = 0x1c20 (X);		/*		R0=0x1c20(7200) */
     460:	30 b1       	[SP + 0x10] = R0;
     462:	40 60       	R0 = 0x8 (X);		/*		R0=0x8(  8) */
     464:	b0 e6 14 00 	B[SP + 0x14] = R0;
     468:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
     46a:	b0 b1       	[SP + 0x18] = R0;
     46c:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x2(  2) */
     470:	00 e1 28 01 	R0.L = 0x128;		/* (296)	R0=0x128 <_FreeARElemCallback>(296) */
     474:	f0 b1       	[SP + 0x1c] = R0;
     476:	25 64       	R5 += 0x4;		/* (  4) */
     478:	72 a2       	R2 = [SP + 0x24];
     47a:	05 30       	R0 = R5;
     47c:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
     47e:	34 be       	[SP + 0x20] = P4;
     480:	2d e1 6c 01 	P5 = 0x16c (X);		/*		P5=0x16c(364) */
     484:	ff e3 be fd 	CALL 0x0 <_FlushAddressCacheRecords>;
     488:	6c 5b       	P5 = P4 + P5;
     48a:	0f 30       	R1 = R7;
     48c:	45 30       	R0 = P5;
     48e:	ff e3 b9 fd 	CALL 0x0 <_FlushAddressCacheRecords>;
     492:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_FlushAddressCacheRecords>(  0) */
     496:	01 e1 2c 01 	R1.L = 0x12c;		/* (300)	R1=0x12c(300) */
     49a:	45 30       	R0 = P5;
     49c:	ff e3 b2 fd 	CALL 0x0 <_FlushAddressCacheRecords>;
     4a0:	38 a2       	R0 = [FP + 0x20];
     4a2:	20 64       	R0 += 0x4;		/* (  4) */
     4a4:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
     4a8:	48 50       	R1 = R0 + R1;
     4aa:	ff e3 ab fd 	CALL 0x0 <_FlushAddressCacheRecords>;
     4ae:	c2 42       	R2 = R0.L (Z);
     4b0:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
     4b4:	0a 0a       	CC = R2 <= R1 (IU);
     4b6:	a2 ae       	P2 = [P4 + 0x28];
     4b8:	08 14       	IF !CC JUMP 0x4c8 <_FoundDomain+0x19c> (BP);
     4ba:	42 30       	R0 = P2;
     4bc:	39 a2       	R1 = [FP + 0x20];
     4be:	20 64       	R0 += 0x4;		/* (  4) */
     4c0:	21 64       	R1 += 0x4;		/* (  4) */
     4c2:	ff e3 9f fd 	CALL 0x0 <_FlushAddressCacheRecords>;
     4c6:	04 20       	JUMP.S 0x4ce <_FoundDomain+0x1a2>;
     4c8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     4ca:	90 e6 04 00 	B[P2 + 0x4] = R0;
     4ce:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
     4d2:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     4d6:	10 91       	R0 = [P2];
     4d8:	00 0c       	CC = R0 == 0x0;
     4da:	11 1c       	IF CC JUMP 0x4fc <_FoundDomain+0x1d0> (BP);
     4dc:	a1 a2       	R1 = [P4 + 0x28];
     4de:	44 30       	R0 = P4;
     4e0:	16 30       	R2 = R6;
     4e2:	21 64       	R1 += 0x4;		/* (  4) */
     4e4:	ba 65       	R2 += 0x37;		/* ( 55) */
     4e6:	40 64       	R0 += 0x8;		/* (  8) */
     4e8:	ff e3 8c fd 	CALL 0x0 <_FlushAddressCacheRecords>;
     4ec:	10 30       	R2 = R0;
     4ee:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x100(256) */
     4f2:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
     4f4:	01 e1 34 01 	R1.L = 0x134;		/* (308)	R1=0x134(308) */
     4f8:	ff e3 84 fd 	CALL 0x0 <_FlushAddressCacheRecords>;
     4fc:	06 30       	R0 = R6;
     4fe:	0d 30       	R1 = R5;
     500:	ff e3 80 fd 	CALL 0x0 <_FlushAddressCacheRecords>;
     504:	10 30       	R2 = R0;
     506:	00 0c       	CC = R0 == 0x0;
     508:	0f 1c       	IF CC JUMP 0x526 <_FoundDomain+0x1fa> (BP);
     50a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x134(308) */
     50e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     510:	01 e1 50 01 	R1.L = 0x150;		/* (336)	R1=0x150(336) */
     514:	ff e3 76 fd 	CALL 0x0 <_FlushAddressCacheRecords>;
     518:	46 6d       	SP += 0x28;		/* ( 40) */
     51a:	77 90       	FP = [SP++];
     51c:	44 30       	R0 = P4;
     51e:	27 01       	RETS = [SP++];
     520:	a3 05       	(R7:4, P5:3) = [SP++];
     522:	ff e2 6f fd 	JUMP.L 0x0 <_FlushAddressCacheRecords>;
     526:	00 00       	NOP;
     528:	18 e4 41 03 	R0 = [P3 + 0xd04];
     52c:	20 93       	[P4] = R0;
     52e:	1c e7 41 03 	[P3 + 0xd04] = P4;
     532:	3e 20       	JUMP.S 0x5ae <_FoundDomain+0x282>;
     534:	2a e1 04 0d 	P2 = 0xd04 (X);		/*		P2=0xd04(3332) */
     538:	4c e1 00 00 	P4.H = 0x0;		/* (  0)	P4=0x0 <_FlushAddressCacheRecords> */
     53c:	3e 30       	R7 = R6;
     53e:	d3 5a       	P3 = P3 + P2;
     540:	0c e1 00 00 	P4.L = 0x0;		/* (  0)	P4=0x0 <_FlushAddressCacheRecords> */
     544:	bf 65       	R7 += 0x37;		/* ( 55) */
     546:	30 20       	JUMP.S 0x5a6 <_FoundDomain+0x27a>;
     548:	00 00       	NOP;
     54a:	90 a2       	R0 = [P2 + 0x28];
     54c:	39 a2       	R1 = [FP + 0x20];
     54e:	20 64       	R0 += 0x4;		/* (  4) */
     550:	21 64       	R1 += 0x4;		/* (  4) */
     552:	ff e3 57 fd 	CALL 0x0 <_FlushAddressCacheRecords>;
     556:	00 0c       	CC = R0 == 0x0;
     558:	5d 91       	P5 = [P3];
     55a:	25 1c       	IF CC JUMP 0x5a4 <_FoundDomain+0x278> (BP);
     55c:	28 91       	R0 = [P5];
     55e:	18 93       	[P3] = R0;
     560:	20 91       	R0 = [P4];
     562:	00 0c       	CC = R0 == 0x0;
     564:	10 1c       	IF CC JUMP 0x584 <_FoundDomain+0x258> (BP);
     566:	a9 a2       	R1 = [P5 + 0x28];
     568:	45 30       	R0 = P5;
     56a:	21 64       	R1 += 0x4;		/* (  4) */
     56c:	17 30       	R2 = R7;
     56e:	40 64       	R0 += 0x8;		/* (  8) */
     570:	ff e3 48 fd 	CALL 0x0 <_FlushAddressCacheRecords>;
     574:	10 30       	R2 = R0;
     576:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x150(336) */
     57a:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
     57c:	01 e1 80 01 	R1.L = 0x180;		/* (384)	R1=0x180(384) */
     580:	ff e3 40 fd 	CALL 0x0 <_FlushAddressCacheRecords>;
     584:	4d 30       	R1 = P5;
     586:	21 64       	R1 += 0x4;		/* (  4) */
     588:	06 30       	R0 = R6;
     58a:	ff e3 3b fd 	CALL 0x0 <_FlushAddressCacheRecords>;
     58e:	10 30       	R2 = R0;
     590:	00 0c       	CC = R0 == 0x0;
     592:	0a 1c       	IF CC JUMP 0x5a6 <_FoundDomain+0x27a> (BP);
     594:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x180(384) */
     598:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     59a:	01 e1 a0 01 	R1.L = 0x1a0;		/* (416)	R1=0x1a0(416) */
     59e:	ff e3 31 fd 	CALL 0x0 <_FlushAddressCacheRecords>;
     5a2:	02 20       	JUMP.S 0x5a6 <_FoundDomain+0x27a>;
     5a4:	5d 32       	P3 = P5;
     5a6:	00 00       	NOP;
     5a8:	5a 91       	P2 = [P3];
     5aa:	42 0c       	CC = P2 == 0x0;
     5ac:	ce 17       	IF !CC JUMP 0x548 <_FoundDomain+0x21c> (BP);
     5ae:	46 6d       	SP += 0x28;		/* ( 40) */
     5b0:	77 90       	FP = [SP++];
     5b2:	27 01       	RETS = [SP++];
     5b4:	a3 05       	(R7:4, P5:3) = [SP++];
     5b6:	10 00       	RTS;

000005b8 <_BuildUpdateMessage>:
_BuildUpdateMessage():
     5b8:	e4 05       	[--SP] = (R7:4, P5:4);
     5ba:	2a 32       	P5 = R2;
     5bc:	67 01       	[--SP] = RETS;
     5be:	38 30       	R7 = R0;
     5c0:	46 6f       	SP += -0x18;		/* (-24) */
     5c2:	31 30       	R6 = R1;
     5c4:	28 e4 39 00 	R0 = [P5 + 0xe4];
     5c8:	35 e4 10 00 	R5 = [SP + 0x40];
     5cc:	18 0c       	CC = R0 == 0x3;
     5ce:	0c 14       	IF !CC JUMP 0x5e6 <_BuildUpdateMessage+0x2e> (BP);
     5d0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     5d2:	28 e6 3b 00 	[P5 + 0xec] = R0;
     5d6:	20 e1 8c 59 	R0 = 0x598c (X);		/*		R0=0x598c(22924) */
     5da:	07 50       	R0 = R7 + R0;
     5dc:	22 64       	R2 += 0x4;		/* (  4) */
     5de:	f5 b0       	[SP + 0xc] = R5;
     5e0:	ff e3 10 fd 	CALL 0x0 <_FlushAddressCacheRecords>;
     5e4:	7d 20       	JUMP.S 0x6de <_BuildUpdateMessage+0x126>;
     5e6:	10 0c       	CC = R0 == 0x2;
     5e8:	04 14       	IF !CC JUMP 0x5f0 <_BuildUpdateMessage+0x38> (BP);
     5ea:	28 60       	R0 = 0x5 (X);		/*		R0=0x5(  5) */
     5ec:	28 e6 39 00 	[P5 + 0xe4] = R0;
     5f0:	29 60       	R1 = 0x5 (X);		/*		R1=0x5(  5) */
     5f2:	28 e4 39 00 	R0 = [P5 + 0xe4];
     5f6:	08 08       	CC = R0 == R1;
     5f8:	07 18       	IF CC JUMP 0x606 <_BuildUpdateMessage+0x4e>;
     5fa:	39 60       	R1 = 0x7 (X);		/*		R1=0x7(  7) */
     5fc:	08 08       	CC = R0 == R1;
     5fe:	04 1c       	IF CC JUMP 0x606 <_BuildUpdateMessage+0x4e> (BP);
     600:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
     602:	28 e6 39 00 	[P5 + 0xe4] = R0;
     606:	00 00       	NOP;
     608:	a8 e4 04 00 	R0 = B[P5 + 0x4] (Z);
     60c:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
     60e:	08 08       	CC = R0 == R1;
     610:	04 1c       	IF CC JUMP 0x618 <_BuildUpdateMessage+0x60> (BP);
     612:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
     614:	a8 e6 87 00 	B[P5 + 0x87] = R0;
     618:	00 00       	NOP;
     61a:	e8 a4       	R0 = W[P5 + 0x6] (Z);
     61c:	09 61       	R1 = 0x21 (X);		/*		R1=0x21( 33) */
     61e:	08 08       	CC = R0 == R1;
     620:	0d 14       	IF !CC JUMP 0x63a <_BuildUpdateMessage+0x82> (BP);
     622:	a8 e4 44 00 	R0 = B[P5 + 0x44] (Z);
     626:	10 0c       	CC = R0 == 0x2;
     628:	09 14       	IF !CC JUMP 0x63a <_BuildUpdateMessage+0x82> (BP);
     62a:	68 e4 90 00 	R0 = W[P5 + 0x120] (Z);
     62e:	00 0c       	CC = R0 == 0x0;
     630:	05 1c       	IF CC JUMP 0x63a <_BuildUpdateMessage+0x82> (BP);
     632:	6a ae       	P2 = [P5 + 0x24];
     634:	68 e5 90 00 	R0 = W[P5 + 0x120] (X);
     638:	10 b5       	W[P2 + 0x8] = R0;
     63a:	39 60       	R1 = 0x7 (X);		/*		R1=0x7(  7) */
     63c:	28 e4 39 00 	R0 = [P5 + 0xe4];
     640:	08 08       	CC = R0 == R1;
     642:	26 14       	IF !CC JUMP 0x68e <_BuildUpdateMessage+0xd6> (BP);
     644:	65 30       	R4 = P5;
     646:	24 64       	R4 += 0x4;		/* (  4) */
     648:	29 e4 57 00 	R1 = [P5 + 0x15c];
     64c:	6a e5 aa 00 	R2 = W[P5 + 0x154] (X);
     650:	04 30       	R0 = R4;
     652:	ff e3 d7 fc 	CALL 0x0 <_FlushAddressCacheRecords>;
     656:	20 e1 8c 59 	R0 = 0x598c (X);		/*		R0=0x598c(22924) */
     65a:	07 50       	R0 = R7 + R0;
     65c:	0e 30       	R1 = R6;
     65e:	20 32       	P4 = R0;
     660:	f5 b0       	[SP + 0xc] = R5;
     662:	14 30       	R2 = R4;
     664:	ff e3 ce fc 	CALL 0x0 <_FlushAddressCacheRecords>;
     668:	30 30       	R6 = R0;
     66a:	00 0c       	CC = R0 == 0x0;
     66c:	3b 1c       	IF CC JUMP 0x6e2 <_BuildUpdateMessage+0x12a> (BP);
     66e:	04 30       	R0 = R4;
     670:	6a e5 ab 00 	R2 = W[P5 + 0x156] (X);
     674:	29 e4 58 00 	R1 = [P5 + 0x160];
     678:	ff e3 c4 fc 	CALL 0x0 <_FlushAddressCacheRecords>;
     67c:	e8 a0       	R0 = [P5 + 0xc];
     67e:	22 e1 94 59 	R2 = 0x5994 (X);		/*		R2=0x5994(22932) */
     682:	30 b1       	[SP + 0x10] = R0;
     684:	97 50       	R2 = R7 + R2;
     686:	f4 b0       	[SP + 0xc] = R4;
     688:	75 b1       	[SP + 0x14] = R5;
     68a:	44 30       	R0 = P4;
     68c:	26 20       	JUMP.S 0x6d8 <_BuildUpdateMessage+0x120>;
     68e:	01 61       	R1 = 0x20 (X);		/*		R1=0x20( 32) */
     690:	a8 e4 04 00 	R0 = B[P5 + 0x4] (Z);
     694:	08 08       	CC = R0 == R1;
     696:	04 18       	IF CC JUMP 0x69e <_BuildUpdateMessage+0xe6>;
     698:	81 60       	R1 = 0x10 (X);		/*		R1=0x10( 16) */
     69a:	08 08       	CC = R0 == R1;
     69c:	0d 14       	IF !CC JUMP 0x6b6 <_BuildUpdateMessage+0xfe> (BP);
     69e:	e9 a8       	R1 = W[P5 + 0x6] (X);
     6a0:	b1 b5       	W[SP + 0xc] = R1;
     6a2:	20 e1 8c 59 	R0 = 0x598c (X);		/*		R0=0x598c(22924) */
     6a6:	0e 30       	R1 = R6;
     6a8:	07 50       	R0 = R7 + R0;
     6aa:	2a a2       	R2 = [P5 + 0x20];
     6ac:	35 b1       	[SP + 0x10] = R5;
     6ae:	ff e3 a9 fc 	CALL 0x0 <_FlushAddressCacheRecords>;
     6b2:	30 30       	R6 = R0;
     6b4:	04 20       	JUMP.S 0x6bc <_BuildUpdateMessage+0x104>;
     6b6:	41 60       	R1 = 0x8 (X);		/*		R1=0x8(  8) */
     6b8:	08 08       	CC = R0 == R1;
     6ba:	03 18       	IF CC JUMP 0x6c0 <_BuildUpdateMessage+0x108>;
     6bc:	06 0c       	CC = R6 == 0x0;
     6be:	12 18       	IF CC JUMP 0x6e2 <_BuildUpdateMessage+0x12a>;
     6c0:	4d 30       	R1 = P5;
     6c2:	21 64       	R1 += 0x4;		/* (  4) */
     6c4:	f1 b0       	[SP + 0xc] = R1;
     6c6:	20 e1 8c 59 	R0 = 0x598c (X);		/*		R0=0x598c(22924) */
     6ca:	22 e1 94 59 	R2 = 0x5994 (X);		/*		R2=0x5994(22932) */
     6ce:	e9 a0       	R1 = [P5 + 0xc];
     6d0:	07 50       	R0 = R7 + R0;
     6d2:	97 50       	R2 = R7 + R2;
     6d4:	31 b1       	[SP + 0x10] = R1;
     6d6:	75 b1       	[SP + 0x14] = R5;
     6d8:	0e 30       	R1 = R6;
     6da:	ff e3 93 fc 	CALL 0x0 <_FlushAddressCacheRecords>;
     6de:	00 0c       	CC = R0 == 0x0;
     6e0:	13 14       	IF !CC JUMP 0x706 <_BuildUpdateMessage+0x14e> (BP);
     6e2:	00 00       	NOP;
     6e4:	69 a2       	R1 = [P5 + 0x24];
     6e6:	45 30       	R0 = P5;
     6e8:	17 30       	R2 = R7;
     6ea:	21 64       	R1 += 0x4;		/* (  4) */
     6ec:	ba 65       	R2 += 0x37;		/* ( 55) */
     6ee:	20 64       	R0 += 0x4;		/* (  4) */
     6f0:	ff e3 88 fc 	CALL 0x0 <_FlushAddressCacheRecords>;
     6f4:	10 30       	R2 = R0;
     6f6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x8(  8) */
     6fa:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     6fc:	01 e1 d4 01 	R1.L = 0x1d4;		/* (468)	R1=0x1d4(468) */
     700:	ff e3 80 fc 	CALL 0x0 <_FlushAddressCacheRecords>;
     704:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     706:	c6 6c       	SP += 0x18;		/* ( 24) */
     708:	27 01       	RETS = [SP++];
     70a:	a4 05       	(R7:4, P5:4) = [SP++];
     70c:	10 00       	RTS;
	...

00000710 <_RRMergeFailure>:
_RRMergeFailure():
     710:	f4 05       	[--SP] = (R7:6, P5:4);
     712:	20 32       	P4 = R0;
     714:	67 01       	[--SP] = RETS;
     716:	a6 6f       	SP += -0xc;		/* (-12) */
     718:	0f 60       	R7 = 0x1 (X);		/*		R7=0x1(  1) */
     71a:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
     71c:	25 e5 f2 07 	P5 = [P4 + 0x1fc8];
     720:	0a 20       	JUMP.S 0x734 <_RRMergeFailure+0x24>;
     722:	2f e6 51 00 	[P5 + 0x144] = R7;
     726:	2e e6 26 00 	[P5 + 0x98] = R6;
     72a:	4d 30       	R1 = P5;
     72c:	44 30       	R0 = P4;
     72e:	ff e3 69 fc 	CALL 0x0 <_FlushAddressCacheRecords>;
     732:	6d 91       	P5 = [P5];
     734:	45 0c       	CC = P5 == 0x0;
     736:	f6 17       	IF !CC JUMP 0x722 <_RRMergeFailure+0x12> (BP);
     738:	66 6c       	SP += 0xc;		/* ( 12) */
     73a:	27 01       	RETS = [SP++];
     73c:	b4 05       	(R7:6, P5:4) = [SP++];
     73e:	10 00       	RTS;

00000740 <_UpdateAllServiceRecords>:
_UpdateAllServiceRecords():
     740:	e3 05       	[--SP] = (R7:4, P5:3);
     742:	21 32       	P4 = R1;
     744:	18 32       	P3 = R0;
     746:	09 61       	R1 = 0x21 (X);		/*		R1=0x21( 33) */
     748:	00 e8 05 00 	LINK 0x14;		/* (20) */
     74c:	3a 30       	R7 = R2;
     74e:	e0 a4       	R0 = W[P4 + 0x6] (Z);
     750:	08 08       	CC = R0 == R1;
     752:	10 1c       	IF CC JUMP 0x772 <_UpdateAllServiceRecords+0x32> (BP);
     754:	61 a2       	R1 = [P4 + 0x24];
     756:	44 30       	R0 = P4;
     758:	53 30       	R2 = P3;
     75a:	21 64       	R1 += 0x4;		/* (  4) */
     75c:	ba 65       	R2 += 0x37;		/* ( 55) */
     75e:	20 64       	R0 += 0x4;		/* (  4) */
     760:	ff e3 50 fc 	CALL 0x0 <_FlushAddressCacheRecords>;
     764:	10 30       	R2 = R0;
     766:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x21( 33) */
     76a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     76c:	01 e1 08 02 	R1.L = 0x208;		/* (520)	R1=0x208(520) */
     770:	16 20       	JUMP.S 0x79c <_UpdateAllServiceRecords+0x5c>;
     772:	02 0c       	CC = R2 == 0x0;
     774:	1a 1c       	IF CC JUMP 0x7a8 <_UpdateAllServiceRecords+0x68> (BP);
     776:	20 e4 39 00 	R0 = [P4 + 0xe4];
     77a:	41 60       	R1 = 0x8 (X);		/*		R1=0x8(  8) */
     77c:	08 08       	CC = R0 == R1;
     77e:	15 14       	IF !CC JUMP 0x7a8 <_UpdateAllServiceRecords+0x68> (BP);
     780:	61 a2       	R1 = [P4 + 0x24];
     782:	44 30       	R0 = P4;
     784:	53 30       	R2 = P3;
     786:	21 64       	R1 += 0x4;		/* (  4) */
     788:	ba 65       	R2 += 0x37;		/* ( 55) */
     78a:	20 64       	R0 += 0x4;		/* (  4) */
     78c:	ff e3 3a fc 	CALL 0x0 <_FlushAddressCacheRecords>;
     790:	10 30       	R2 = R0;
     792:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x8(  8) */
     796:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     798:	01 e1 50 02 	R1.L = 0x250;		/* (592)	R1=0x250(592) */
     79c:	a6 6c       	SP += 0x14;		/* ( 20) */
     79e:	77 90       	FP = [SP++];
     7a0:	27 01       	RETS = [SP++];
     7a2:	a3 05       	(R7:4, P5:3) = [SP++];
     7a4:	ff e2 2e fc 	JUMP.L 0x0 <_FlushAddressCacheRecords>;
     7a8:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0xd04 */
     7ac:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     7b0:	10 91       	R0 = [P2];
     7b2:	00 0c       	CC = R0 == 0x0;
     7b4:	11 1c       	IF CC JUMP 0x7d6 <_UpdateAllServiceRecords+0x96> (BP);
     7b6:	61 a2       	R1 = [P4 + 0x24];
     7b8:	44 30       	R0 = P4;
     7ba:	53 30       	R2 = P3;
     7bc:	21 64       	R1 += 0x4;		/* (  4) */
     7be:	ba 65       	R2 += 0x37;		/* ( 55) */
     7c0:	20 64       	R0 += 0x4;		/* (  4) */
     7c2:	ff e3 1f fc 	CALL 0x0 <_FlushAddressCacheRecords>;
     7c6:	10 30       	R2 = R0;
     7c8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x250(592) */
     7cc:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
     7ce:	01 e1 a4 02 	R1.L = 0x2a4;		/* (676)	R1=0x2a4(676) */
     7d2:	ff e3 17 fc 	CALL 0x0 <_FlushAddressCacheRecords>;
     7d6:	07 0c       	CC = R7 == 0x0;
     7d8:	44 e1 00 00 	R4.H = 0x0;		/* (  0)	R4=0xc0(192) */
     7dc:	00 02       	R0 = CC;
     7de:	47 e1 00 00 	R7.H = 0x0;		/* (  0)	R7=0x1(  1) */
     7e2:	73 30       	R6 = P3;
     7e4:	45 e1 00 00 	R5.H = 0x0;		/* (  0)	R5=0x1(  1) */
     7e8:	1d e5 f2 07 	P5 = [P3 + 0x1fc8];
     7ec:	04 e1 00 00 	R4.L = 0x0;		/* (  0)	R4=0x0 <_FlushAddressCacheRecords>(  0) */
     7f0:	b0 e6 13 00 	B[SP + 0x13] = R0;
     7f4:	07 e1 00 00 	R7.L = 0x0;		/* (  0)	R7=0x0 <_FlushAddressCacheRecords>(  0) */
     7f8:	be 65       	R6 += 0x37;		/* ( 55) */
     7fa:	05 e1 00 00 	R5.L = 0x0;		/* (  0)	R5=0x0 <_FlushAddressCacheRecords>(  0) */
     7fe:	9d 20       	JUMP.S 0x938 <_UpdateAllServiceRecords+0x1f8>;
     800:	14 32       	P2 = R4;
     802:	e9 a1       	R1 = [P5 + 0x1c];
     804:	10 91       	R0 = [P2];
     806:	01 08       	CC = R1 == R0;
     808:	96 14       	IF !CC JUMP 0x934 <_UpdateAllServiceRecords+0x1f4> (BP);
     80a:	a8 e4 46 00 	R0 = B[P5 + 0x46] (Z);
     80e:	00 0c       	CC = R0 == 0x0;
     810:	92 14       	IF !CC JUMP 0x934 <_UpdateAllServiceRecords+0x1f4> (BP);
     812:	28 a2       	R0 = [P5 + 0x20];
     814:	ff e3 f6 fb 	CALL 0x0 <_FlushAddressCacheRecords>;
     818:	00 0c       	CC = R0 == 0x0;
     81a:	8d 14       	IF !CC JUMP 0x934 <_UpdateAllServiceRecords+0x1f4> (BP);
     81c:	e8 a4       	R0 = W[P5 + 0x6] (Z);
     81e:	61 60       	R1 = 0xc (X);		/*		R1=0xc( 12) */
     820:	08 08       	CC = R0 == R1;
     822:	03 14       	IF !CC JUMP 0x828 <_UpdateAllServiceRecords+0xe8> (BP);
     824:	ef ae       	FP = [P5 + 0x2c];
     826:	05 20       	JUMP.S 0x830 <_UpdateAllServiceRecords+0xf0>;
     828:	81 60       	R1 = 0x10 (X);		/*		R1=0x10( 16) */
     82a:	08 08       	CC = R0 == R1;
     82c:	18 14       	IF !CC JUMP 0x85c <_UpdateAllServiceRecords+0x11c> (BP);
     82e:	6f af       	FP = [P5 + 0x34];
     830:	47 0c       	CC = FP == 0x0;
     832:	16 1c       	IF CC JUMP 0x85e <_UpdateAllServiceRecords+0x11e> (BP);
     834:	09 61       	R1 = 0x21 (X);		/*		R1=0x21( 33) */
     836:	f8 a4       	R0 = W[FP + 0x6] (Z);
     838:	08 08       	CC = R0 == R1;
     83a:	12 18       	IF CC JUMP 0x85e <_UpdateAllServiceRecords+0x11e>;
     83c:	47 30       	R0 = FP;
     83e:	16 30       	R2 = R6;
     840:	20 64       	R0 += 0x4;		/* (  4) */
     842:	79 a2       	R1 = [FP + 0x24];
     844:	21 64       	R1 += 0x4;		/* (  4) */
     846:	ff e3 dd fb 	CALL 0x0 <_FlushAddressCacheRecords>;
     84a:	10 30       	R2 = R0;
     84c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x21( 33) */
     850:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     852:	01 e1 d0 02 	R1.L = 0x2d0;		/* (720)	R1=0x2d0(720) */
     856:	ff e3 d5 fb 	CALL 0x0 <_FlushAddressCacheRecords>;
     85a:	02 20       	JUMP.S 0x85e <_UpdateAllServiceRecords+0x11e>;
     85c:	07 68       	FP = 0x0 (X);		/*		FP=0x0(  0) */
     85e:	67 08       	CC = FP == P4;
     860:	6a 14       	IF !CC JUMP 0x934 <_UpdateAllServiceRecords+0x1f4> (BP);
     862:	b0 e4 13 00 	R0 = B[SP + 0x13] (Z);
     866:	08 02       	CC = R0;
     868:	24 14       	IF !CC JUMP 0x8b0 <_UpdateAllServiceRecords+0x170> (BP);
     86a:	17 32       	P2 = R7;
     86c:	10 91       	R0 = [P2];
     86e:	00 0c       	CC = R0 == 0x0;
     870:	10 1c       	IF CC JUMP 0x890 <_UpdateAllServiceRecords+0x150> (BP);
     872:	69 a2       	R1 = [P5 + 0x24];
     874:	45 30       	R0 = P5;
     876:	21 64       	R1 += 0x4;		/* (  4) */
     878:	16 30       	R2 = R6;
     87a:	20 64       	R0 += 0x4;		/* (  4) */
     87c:	ff e3 c2 fb 	CALL 0x0 <_FlushAddressCacheRecords>;
     880:	10 30       	R2 = R0;
     882:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2d0(720) */
     886:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
     888:	01 e1 20 03 	R1.L = 0x320;		/* (800)	R1=0x320(800) */
     88c:	ff e3 ba fb 	CALL 0x0 <_FlushAddressCacheRecords>;
     890:	15 32       	P2 = R5;
     892:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
     894:	28 e6 50 00 	[P5 + 0x140] = R0;
     898:	19 e4 37 00 	R1 = [P3 + 0xdc];
     89c:	10 91       	R0 = [P2];
     89e:	28 e6 2f 00 	[P5 + 0xbc] = R0;
     8a2:	01 52       	R0 = R1 - R0;
     8a4:	28 e6 30 00 	[P5 + 0xc0] = R0;
     8a8:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
     8aa:	28 e6 39 00 	[P5 + 0xe4] = R0;
     8ae:	43 20       	JUMP.S 0x934 <_UpdateAllServiceRecords+0x1f4>;
     8b0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     8b2:	28 e6 50 00 	[P5 + 0x140] = R0;
     8b6:	28 e4 39 00 	R0 = [P5 + 0xe4];
     8ba:	10 0c       	CC = R0 == 0x2;
     8bc:	0b 18       	IF CC JUMP 0x8d2 <_UpdateAllServiceRecords+0x192>;
     8be:	08 0c       	CC = R0 == 0x1;
     8c0:	20 14       	IF !CC JUMP 0x900 <_UpdateAllServiceRecords+0x1c0> (BP);
     8c2:	2a e5 3f 00 	P2 = [P5 + 0xfc];
     8c6:	42 0c       	CC = P2 == 0x0;
     8c8:	1c 1c       	IF CC JUMP 0x900 <_UpdateAllServiceRecords+0x1c0> (BP);
     8ca:	10 e4 c4 00 	R0 = [P2 + 0x310];
     8ce:	00 0c       	CC = R0 == 0x0;
     8d0:	18 1c       	IF CC JUMP 0x900 <_UpdateAllServiceRecords+0x1c0> (BP);
     8d2:	17 32       	P2 = R7;
     8d4:	10 91       	R0 = [P2];
     8d6:	00 0c       	CC = R0 == 0x0;
     8d8:	2e 1c       	IF CC JUMP 0x934 <_UpdateAllServiceRecords+0x1f4> (BP);
     8da:	69 a2       	R1 = [P5 + 0x24];
     8dc:	45 30       	R0 = P5;
     8de:	16 30       	R2 = R6;
     8e0:	21 64       	R1 += 0x4;		/* (  4) */
     8e2:	20 64       	R0 += 0x4;		/* (  4) */
     8e4:	ff e3 8e fb 	CALL 0x0 <_FlushAddressCacheRecords>;
     8e8:	10 30       	R2 = R0;
     8ea:	28 e4 39 00 	R0 = [P5 + 0xe4];
     8ee:	f0 b0       	[SP + 0xc] = R0;
     8f0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x320(800) */
     8f4:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
     8f6:	01 e1 4c 03 	R1.L = 0x34c;		/* (844)	R1=0x34c(844) */
     8fa:	ff e3 83 fb 	CALL 0x0 <_FlushAddressCacheRecords>;
     8fe:	1b 20       	JUMP.S 0x934 <_UpdateAllServiceRecords+0x1f4>;
     900:	17 32       	P2 = R7;
     902:	10 91       	R0 = [P2];
     904:	00 0c       	CC = R0 == 0x0;
     906:	13 1c       	IF CC JUMP 0x92c <_UpdateAllServiceRecords+0x1ec> (BP);
     908:	69 a2       	R1 = [P5 + 0x24];
     90a:	45 30       	R0 = P5;
     90c:	21 64       	R1 += 0x4;		/* (  4) */
     90e:	16 30       	R2 = R6;
     910:	20 64       	R0 += 0x4;		/* (  4) */
     912:	ff e3 77 fb 	CALL 0x0 <_FlushAddressCacheRecords>;
     916:	10 30       	R2 = R0;
     918:	28 e4 39 00 	R0 = [P5 + 0xe4];
     91c:	f0 b0       	[SP + 0xc] = R0;
     91e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x34c(844) */
     922:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
     924:	01 e1 84 03 	R1.L = 0x384;		/* (900)	R1=0x384(900) */
     928:	ff e3 6c fb 	CALL 0x0 <_FlushAddressCacheRecords>;
     92c:	43 30       	R0 = P3;
     92e:	4d 30       	R1 = P5;
     930:	ff e3 68 fb 	CALL 0x0 <_FlushAddressCacheRecords>;
     934:	00 00       	NOP;
     936:	6d 91       	P5 = [P5];
     938:	45 0c       	CC = P5 == 0x0;
     93a:	63 17       	IF !CC JUMP 0x800 <_UpdateAllServiceRecords+0xc0> (BP);
     93c:	a6 6c       	SP += 0x14;		/* ( 20) */
     93e:	77 90       	FP = [SP++];
     940:	27 01       	RETS = [SP++];
     942:	a3 05       	(R7:4, P5:3) = [SP++];
     944:	10 00       	RTS;
	...

00000948 <_putLLQ>:
_putLLQ():
     948:	12 32       	P2 = R2;
     94a:	e5 05       	[--SP] = (R7:4, P5:5);
     94c:	67 01       	[--SP] = RETS;
     94e:	29 e1 68 fc 	P1 = -0x398 (X);		/*		P1=0xfffffc68(-920) */
     952:	8e 5b       	SP = SP + P1;
     954:	29 e1 34 01 	P1 = 0x134 (X);		/*		P1=0x134(308) */
     958:	4a 5a       	P1 = P2 + P1;
     95a:	24 e1 f8 22 	R4 = 0x22f8 (X);		/*		R4=0x22f8(8952) */
     95e:	f1 bc       	[SP + 0xc] = P1;
     960:	28 30       	R5 = R0;
     962:	20 51       	R4 = R0 + R4;
     964:	50 e5 1a 01 	R0 = W[P2 + 0x234] (X);
     968:	30 b6       	W[SP + 0x10] = R0;
     96a:	50 e5 1b 01 	R0 = W[P2 + 0x236] (X);
     96e:	b0 b6       	W[SP + 0x14] = R0;
     970:	05 30       	R0 = R5;
     972:	14 30       	R2 = R4;
     974:	ff e3 46 fb 	CALL 0x0 <_FlushAddressCacheRecords>;
     978:	38 30       	R7 = R0;
     97a:	00 0c       	CC = R0 == 0x0;
     97c:	07 14       	IF !CC JUMP 0x98a <_putLLQ+0x42> (BP);
     97e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x384(900) */
     982:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     984:	01 e1 b8 03 	R1.L = 0x3b8;		/* (952)	R1=0x3b8(952) */
     988:	3e 20       	JUMP.S 0xa04 <_putLLQ+0xbc>;
     98a:	48 61       	R0 = 0x29 (X);		/*		R0=0x29( 41) */
     98c:	b0 b5       	W[SP + 0xc] = R0;
     98e:	20 e1 94 11 	R0 = 0x1194 (X);		/*		R0=0x1194(4500) */
     992:	30 b1       	[SP + 0x10] = R0;
     994:	00 61       	R0 = 0x20 (X);		/*		R0=0x20( 32) */
     996:	6e 32       	P5 = SP;
     998:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     99c:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
     99e:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     9a2:	25 6d       	P5 += 0x24;		/* ( 36) */
     9a4:	b0 e6 14 00 	B[SP + 0x14] = R0;
     9a8:	45 30       	R0 = P5;
     9aa:	12 91       	R2 = [P2];
     9ac:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
     9ae:	b6 b1       	[SP + 0x18] = R6;
     9b0:	f6 b1       	[SP + 0x1c] = R6;
     9b2:	36 b2       	[SP + 0x20] = R6;
     9b4:	ff e3 26 fb 	CALL 0x0 <_FlushAddressCacheRecords>;
     9b8:	20 e1 a0 05 	R0 = 0x5a0 (X);		/*		R0=0x5a0(1440) */
     9bc:	32 e5 12 00 	P2 = [SP + 0x48];
     9c0:	70 e6 16 00 	W[SP + 0x2c] = R0;
     9c4:	00 61       	R0 = 0x20 (X);		/*		R0=0x20( 32) */
     9c6:	70 e6 1a 00 	W[SP + 0x34] = R0;
     9ca:	70 e6 1b 00 	W[SP + 0x36] = R0;
     9ce:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
     9d0:	90 b4       	W[P2 + 0x4] = R0;
     9d2:	42 30       	R0 = P2;
     9d4:	31 e4 ef 00 	R1 = [SP + 0x3bc];
     9d8:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
     9da:	40 64       	R0 += 0x8;		/* (  8) */
     9dc:	ff e3 12 fb 	CALL 0x0 <_FlushAddressCacheRecords>;
     9e0:	15 30       	R2 = R5;
     9e2:	25 6c       	P5 += 0x4;		/* (  4) */
     9e4:	0f 30       	R1 = R7;
     9e6:	52 64       	R2 += 0xa;		/* ( 10) */
     9e8:	f5 bc       	[SP + 0xc] = P5;
     9ea:	36 b1       	[SP + 0x10] = R6;
     9ec:	74 b1       	[SP + 0x14] = R4;
     9ee:	05 30       	R0 = R5;
     9f0:	ff e3 08 fb 	CALL 0x0 <_FlushAddressCacheRecords>;
     9f4:	38 30       	R7 = R0;
     9f6:	00 0c       	CC = R0 == 0x0;
     9f8:	08 14       	IF !CC JUMP 0xa08 <_putLLQ+0xc0> (BP);
     9fa:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_FlushAddressCacheRecords>(  0) */
     9fe:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     a00:	01 e1 d4 03 	R1.L = 0x3d4;		/* (980)	R1=0x3d4(980) */
     a04:	ff e3 fe fa 	CALL 0x0 <_FlushAddressCacheRecords>;
     a08:	29 e1 98 03 	P1 = 0x398 (X);		/*		P1=0x398(920) */
     a0c:	8e 5b       	SP = SP + P1;
     a0e:	07 30       	R0 = R7;
     a10:	27 01       	RETS = [SP++];
     a12:	a5 05       	(R7:4, P5:5) = [SP++];
     a14:	10 00       	RTS;
	...

00000a18 <_StartLLQPolling>:
_StartLLQPolling():
     a18:	11 32       	P2 = R1;
     a1a:	22 60       	R2 = 0x4 (X);		/*		R2=0x4(  4) */
     a1c:	12 e6 40 00 	[P2 + 0x100] = R2;
     a20:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     a24:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     a28:	12 91       	R2 = [P2];
     a2a:	11 32       	P2 = R1;
     a2c:	82 c6 0a 86 	R3 = R2 << 0x1;
     a30:	d3 50       	R3 = R3 + R2;
     a32:	13 b1       	[P2 + 0x10] = R3;
     a34:	10 32       	P2 = R0;
     a36:	12 e4 37 00 	R2 = [P2 + 0xdc];
     a3a:	11 32       	P2 = R1;
     a3c:	0a 64       	R2 += 0x1;		/* (  1) */
     a3e:	9a 52       	R2 = R2 - R3;
     a40:	d2 b0       	[P2 + 0xc] = R2;
     a42:	ff e2 df fa 	JUMP.L 0x0 <_FlushAddressCacheRecords>;
	...

00000a48 <_sendChallengeResponse>:
_sendChallengeResponse():
     a48:	ed 05       	[--SP] = (R7:5, P5:5);
     a4a:	29 32       	P5 = R1;
     a4c:	38 30       	R7 = R0;
     a4e:	67 01       	[--SP] = RETS;
     a50:	46 6e       	SP += -0x38;		/* (-56) */
     a52:	32 30       	R6 = R2;
     a54:	28 e4 3e 00 	R0 = [P5 + 0xf8];
     a58:	00 0c       	CC = R0 == 0x0;
     a5a:	10 1c       	IF CC JUMP 0xa7a <_sendChallengeResponse+0x32> (BP);
     a5c:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
     a60:	ff e3 d0 fa 	CALL 0x0 <_FlushAddressCacheRecords>;
     a64:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
     a68:	95 5a       	P2 = P5 + P2;
     a6a:	f0 b0       	[SP + 0xc] = R0;
     a6c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3d4(980) */
     a70:	52 30       	R2 = P2;
     a72:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     a74:	01 e1 0c 04 	R1.L = 0x40c;		/* (1036)	R1=0x40c(1036) */
     a78:	96 20       	JUMP.S 0xba4 <_sendChallengeResponse+0x15c>;
     a7a:	00 00       	NOP;
     a7c:	6a af       	P2 = [P5 + 0x34];
     a7e:	42 0c       	CC = P2 == 0x0;
     a80:	13 1c       	IF CC JUMP 0xaa6 <_sendChallengeResponse+0x5e> (BP);
     a82:	90 a0       	R0 = [P2 + 0x8];
     a84:	00 0c       	CC = R0 == 0x0;
     a86:	10 1c       	IF CC JUMP 0xaa6 <_sendChallengeResponse+0x5e> (BP);
     a88:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
     a8c:	ff e3 ba fa 	CALL 0x0 <_FlushAddressCacheRecords>;
     a90:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
     a94:	95 5a       	P2 = P5 + P2;
     a96:	f0 b0       	[SP + 0xc] = R0;
     a98:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x40c(1036) */
     a9c:	52 30       	R2 = P2;
     a9e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     aa0:	01 e1 4c 04 	R1.L = 0x44c;		/* (1100)	R1=0x44c(1100) */
     aa4:	80 20       	JUMP.S 0xba4 <_sendChallengeResponse+0x15c>;
     aa6:	00 00       	NOP;
     aa8:	68 e5 86 00 	R0 = W[P5 + 0x10c] (X);
     aac:	10 30       	R2 = R0;
     aae:	0a 64       	R2 += 0x1;		/* (  1) */
     ab0:	6a e6 86 00 	W[P5 + 0x10c] = R2;
     ab4:	18 0c       	CC = R0 == 0x3;
     ab6:	0e 14       	IF !CC JUMP 0xad2 <_sendChallengeResponse+0x8a> (BP);
     ab8:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
     abc:	95 5a       	P2 = P5 + P2;
     abe:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x44c(1100) */
     ac2:	f2 bc       	[SP + 0xc] = P2;
     ac4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     ac6:	01 e1 84 04 	R1.L = 0x484;		/* (1156)	R1=0x484(1156) */
     aca:	1a 60       	R2 = 0x3 (X);		/*		R2=0x3(  3) */
     acc:	ff e3 9a fa 	CALL 0x0 <_FlushAddressCacheRecords>;
     ad0:	6d 20       	JUMP.S 0xbaa <_sendChallengeResponse+0x162>;
     ad2:	06 0c       	CC = R6 == 0x0;
     ad4:	14 14       	IF !CC JUMP 0xafc <_sendChallengeResponse+0xb4> (BP);
     ad6:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
     ad8:	70 e6 12 00 	W[SP + 0x24] = R0;
     adc:	70 e6 13 00 	W[SP + 0x26] = R0;
     ae0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     ae2:	70 e6 14 00 	W[SP + 0x28] = R0;
     ae6:	28 e4 44 00 	R0 = [P5 + 0x110];
     aea:	f0 b2       	[SP + 0x2c] = R0;
     aec:	29 e4 45 00 	R1 = [P5 + 0x114];
     af0:	28 e4 41 00 	R0 = [P5 + 0x104];
     af4:	76 30       	R6 = SP;
     af6:	31 b3       	[SP + 0x30] = R1;
     af8:	70 b3       	[SP + 0x34] = R0;
     afa:	26 65       	R6 += 0x24;		/* ( 36) */
     afc:	17 32       	P2 = R7;
     afe:	92 42       	R2 = R2.L (X);
     b00:	4d 30       	R1 = P5;
     b02:	25 e1 8c 59 	R5 = 0x598c (X);		/*		R5=0x598c(22924) */
     b06:	6f 51       	R5 = R7 + R5;
     b08:	10 e4 37 00 	R0 = [P2 + 0xdc];
     b0c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
     b10:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     b14:	e8 b0       	[P5 + 0xc] = R0;
     b16:	10 91       	R0 = [P2];
     b18:	08 4f       	R0 <<= 0x1;
     b1a:	d0 40       	R0 *= R2;
     b1c:	28 b1       	[P5 + 0x10] = R0;
     b1e:	07 30       	R0 = R7;
     b20:	ff e3 70 fa 	CALL 0x0 <_FlushAddressCacheRecords>;
     b24:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     b28:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     b2c:	12 95       	R2 = W[P2] (Z);
     b2e:	69 e5 99 00 	R1 = W[P5 + 0x132] (X);
     b32:	05 30       	R0 = R5;
     b34:	ff e3 66 fa 	CALL 0x0 <_FlushAddressCacheRecords>;
     b38:	21 e1 98 59 	R1 = 0x5998 (X);		/*		R1=0x5998(22936) */
     b3c:	55 30       	R2 = P5;
     b3e:	4f 50       	R1 = R7 + R1;
     b40:	f6 b0       	[SP + 0xc] = R6;
     b42:	05 30       	R0 = R5;
     b44:	ff e3 02 ff 	CALL 0x948 <_putLLQ>;
     b48:	10 30       	R2 = R0;
     b4a:	00 0c       	CC = R0 == 0x0;
     b4c:	2f 18       	IF CC JUMP 0xbaa <_sendChallengeResponse+0x162>;
     b4e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     b52:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     b56:	0d 30       	R1 = R5;
     b58:	10 91       	R0 = [P2];
     b5a:	f0 b0       	[SP + 0xc] = R0;
     b5c:	28 e4 30 00 	R0 = [P5 + 0xc0];
     b60:	30 b1       	[SP + 0x10] = R0;
     b62:	68 e5 7a 00 	R0 = W[P5 + 0xf4] (X);
     b66:	30 b7       	W[SP + 0x18] = R0;
     b68:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     b6a:	2a e1 e0 00 	P2 = 0xe0 (X);		/*		P2=0xe0(224) */
     b6e:	95 5a       	P2 = P5 + P2;
     b70:	f0 b1       	[SP + 0x1c] = R0;
     b72:	30 b2       	[SP + 0x20] = R0;
     b74:	72 bd       	[SP + 0x14] = P2;
     b76:	07 30       	R0 = R7;
     b78:	ff e3 44 fa 	CALL 0x0 <_FlushAddressCacheRecords>;
     b7c:	00 0c       	CC = R0 == 0x0;
     b7e:	1a 18       	IF CC JUMP 0xbb2 <_sendChallengeResponse+0x16a>;
     b80:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x3(  3) */
     b84:	02 e1 08 04 	R2.L = 0x408;		/* (1032)	R2=0x408(1032) */
     b88:	f0 b0       	[SP + 0xc] = R0;
     b8a:	29 e4 3e 00 	R1 = [P5 + 0xf8];
     b8e:	01 0c       	CC = R1 == 0x0;
     b90:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5998(22936) */
     b94:	01 e1 00 04 	R1.L = 0x400;		/* (1024)	R1=0x400(1024) */
     b98:	11 06       	IF !CC R2 = R1;
     b9a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x400(1024) */
     b9e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     ba0:	01 e1 bc 04 	R1.L = 0x4bc;		/* (1212)	R1=0x4bc(1212) */
     ba4:	ff e3 2e fa 	CALL 0x0 <_FlushAddressCacheRecords>;
     ba8:	05 20       	JUMP.S 0xbb2 <_sendChallengeResponse+0x16a>;
     baa:	07 30       	R0 = R7;
     bac:	4d 30       	R1 = P5;
     bae:	ff e3 35 ff 	CALL 0xa18 <_StartLLQPolling>;
     bb2:	c6 6d       	SP += 0x38;		/* ( 56) */
     bb4:	27 01       	RETS = [SP++];
     bb6:	ad 05       	(R7:5, P5:5) = [SP++];
     bb8:	10 00       	RTS;
	...

00000bbc <_GetLLQEventPort>:
_GetLLQEventPort():
     bbc:	c5 04       	[--SP] = (P5:5);
     bbe:	67 01       	[--SP] = RETS;
     bc0:	06 6f       	SP += -0x20;		/* (-32) */
     bc2:	28 32       	P5 = R0;
     bc4:	46 30       	R0 = SP;
     bc6:	60 64       	R0 += 0xc;		/* ( 12) */
     bc8:	ff e3 1c fa 	CALL 0x0 <_FlushAddressCacheRecords>;
     bcc:	46 30       	R0 = SP;
     bce:	80 64       	R0 += 0x10;		/* ( 16) */
     bd0:	ff e3 18 fa 	CALL 0x0 <_FlushAddressCacheRecords>;
     bd4:	00 0c       	CC = R0 == 0x0;
     bd6:	07 1c       	IF CC JUMP 0xbe4 <_GetLLQEventPort+0x28> (BP);
     bd8:	a8 e4 a0 27 	R0 = B[P5 + 0x27a0] (Z);
     bdc:	40 4f       	R0 <<= 0x8;
     bde:	a9 e4 a1 27 	R1 = B[P5 + 0x27a1] (Z);
     be2:	09 20       	JUMP.S 0xbf4 <_GetLLQEventPort+0x38>;
     be4:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0xe0 */
     be8:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     bec:	10 99       	R0 = B[P2] (Z);
     bee:	40 4f       	R0 <<= 0x8;
     bf0:	91 e4 01 00 	R1 = B[P2 + 0x1] (Z);
     bf4:	06 6d       	SP += 0x20;		/* ( 32) */
     bf6:	27 01       	RETS = [SP++];
     bf8:	08 56       	R0 = R0 | R1;
     bfa:	85 04       	(P5:5) = [SP++];
     bfc:	10 00       	RTS;
	...

00000c00 <_hostnameGetPublicAddressCallback>:
_hostnameGetPublicAddressCallback():
     c00:	f4 05       	[--SP] = (R7:6, P5:4);
     c02:	21 32       	P4 = R1;
     c04:	67 01       	[--SP] = RETS;
     c06:	46 6f       	SP += -0x18;		/* (-24) */
     c08:	30 30       	R6 = R0;
     c0a:	a5 af       	P5 = [P4 + 0x38];
     c0c:	45 0c       	CC = P5 == 0x0;
     c0e:	0b 14       	IF !CC JUMP 0xc24 <_hostnameGetPublicAddressCallback+0x24> (BP);
     c10:	c6 6c       	SP += 0x18;		/* ( 24) */
     c12:	27 01       	RETS = [SP++];
     c14:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4bc(1212) */
     c18:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     c1a:	01 e1 f4 04 	R1.L = 0x4f4;		/* (1268)	R1=0x4f4(1268) */
     c1e:	b4 05       	(R7:6, P5:4) = [SP++];
     c20:	ff e2 f0 f9 	JUMP.L 0x0 <_FlushAddressCacheRecords>;
     c24:	00 00       	NOP;
     c26:	60 a2       	R0 = [P4 + 0x24];
     c28:	00 0c       	CC = R0 == 0x0;
     c2a:	56 14       	IF !CC JUMP 0xcd6 <_hostnameGetPublicAddressCallback+0xd6> (BP);
     c2c:	a0 a1       	R0 = [P4 + 0x18];
     c2e:	00 0c       	CC = R0 == 0x0;
     c30:	53 1c       	IF CC JUMP 0xcd6 <_hostnameGetPublicAddressCallback+0xd6> (BP);
     c32:	39 30       	R7 = R1;
     c34:	c7 64       	R7 += 0x18;		/* ( 24) */
     c36:	07 30       	R0 = R7;
     c38:	ff e3 e4 f9 	CALL 0x0 <_FlushAddressCacheRecords>;
     c3c:	00 0c       	CC = R0 == 0x0;
     c3e:	4c 14       	IF !CC JUMP 0xcd6 <_hostnameGetPublicAddressCallback+0xd6> (BP);
     c40:	a8 e4 44 01 	R0 = B[P5 + 0x144] (Z);
     c44:	00 0c       	CC = R0 == 0x0;
     c46:	26 1c       	IF CC JUMP 0xc92 <_hostnameGetPublicAddressCallback+0x92> (BP);
     c48:	2a e5 59 00 	P2 = [P5 + 0x164];
     c4c:	a0 a1       	R0 = [P4 + 0x18];
     c4e:	51 a0       	R1 = [P2 + 0x4];
     c50:	01 08       	CC = R1 == R0;
     c52:	42 18       	IF CC JUMP 0xcd6 <_hostnameGetPublicAddressCallback+0xd6>;
     c54:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x398 */
     c58:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_FlushAddressCacheRecords> */
     c5c:	08 91       	R0 = [P1];
     c5e:	00 0c       	CC = R0 == 0x0;
     c60:	0f 1c       	IF CC JUMP 0xc7e <_hostnameGetPublicAddressCallback+0x7e> (BP);
     c62:	28 e4 58 00 	R0 = [P5 + 0x160];
     c66:	f0 b0       	[SP + 0xc] = R0;
     c68:	22 6c       	P2 += 0x4;		/* (  4) */
     c6a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4f4(1268) */
     c6e:	32 bd       	[SP + 0x10] = P2;
     c70:	77 b1       	[SP + 0x14] = R7;
     c72:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
     c74:	01 e1 24 05 	R1.L = 0x524;		/* (1316)	R1=0x524(1316) */
     c78:	54 30       	R2 = P4;
     c7a:	ff e3 c3 f9 	CALL 0x0 <_FlushAddressCacheRecords>;
     c7e:	c6 6c       	SP += 0x18;		/* ( 24) */
     c80:	2a e1 40 01 	P2 = 0x140 (X);		/*		P2=0x140 <_RRAdditionalSize>(320) */
     c84:	95 5a       	P2 = P5 + P2;
     c86:	27 01       	RETS = [SP++];
     c88:	06 30       	R0 = R6;
     c8a:	4a 30       	R1 = P2;
     c8c:	b4 05       	(R7:6, P5:4) = [SP++];
     c8e:	ff e2 b9 f9 	JUMP.L 0x0 <_FlushAddressCacheRecords>;
     c92:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x140 <_RRAdditionalSize> */
     c96:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     c9a:	10 91       	R0 = [P2];
     c9c:	00 0c       	CC = R0 == 0x0;
     c9e:	0b 1c       	IF CC JUMP 0xcb4 <_hostnameGetPublicAddressCallback+0xb4> (BP);
     ca0:	2a e4 58 00 	R2 = [P5 + 0x160];
     ca4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x524(1316) */
     ca8:	f7 b0       	[SP + 0xc] = R7;
     caa:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
     cac:	01 e1 78 05 	R1.L = 0x578;		/* (1400)	R1=0x578(1400) */
     cb0:	ff e3 a8 f9 	CALL 0x0 <_FlushAddressCacheRecords>;
     cb4:	00 61       	R0 = 0x20 (X);		/*		R0=0x20( 32) */
     cb6:	2a e5 59 00 	P2 = [P5 + 0x164];
     cba:	a8 e6 44 01 	B[P5 + 0x144] = R0;
     cbe:	a0 a1       	R0 = [P4 + 0x18];
     cc0:	c6 6c       	SP += 0x18;		/* ( 24) */
     cc2:	50 b0       	[P2 + 0x4] = R0;
     cc4:	2a e1 40 01 	P2 = 0x140 (X);		/*		P2=0x140 <_RRAdditionalSize>(320) */
     cc8:	95 5a       	P2 = P5 + P2;
     cca:	27 01       	RETS = [SP++];
     ccc:	06 30       	R0 = R6;
     cce:	4a 30       	R1 = P2;
     cd0:	b4 05       	(R7:6, P5:4) = [SP++];
     cd2:	ff e2 97 f9 	JUMP.L 0x0 <_FlushAddressCacheRecords>;
     cd6:	c6 6c       	SP += 0x18;		/* ( 24) */
     cd8:	27 01       	RETS = [SP++];
     cda:	b4 05       	(R7:6, P5:4) = [SP++];
     cdc:	10 00       	RTS;
	...

00000ce0 <_SetRecordRetry>:
_SetRecordRetry():
     ce0:	e4 05       	[--SP] = (R7:4, P5:4);
     ce2:	29 32       	P5 = R1;
     ce4:	20 32       	P4 = R0;
     ce6:	67 01       	[--SP] = RETS;
     ce8:	66 6f       	SP += -0x14;		/* (-20) */
     cea:	32 30       	R6 = R2;
     cec:	29 e4 3b 00 	R1 = [P5 + 0xec];
     cf0:	20 e4 37 00 	R0 = [P4 + 0xdc];
     cf4:	28 e6 30 00 	[P5 + 0xc0] = R0;
     cf8:	01 0c       	CC = R1 == 0x0;
     cfa:	7d 1c       	IF CC JUMP 0xdf4 <_SetRecordRetry+0x114> (BP);
     cfc:	aa e5 48 01 	R2 = B[P5 + 0x148] (X);
     d00:	53 43       	R3 = R2.B (Z);
     d02:	23 0e       	CC = R3 <= 0x4 (IU);
     d04:	78 14       	IF !CC JUMP 0xdf4 <_SetRecordRetry+0x114> (BP);
     d06:	0a 64       	R2 += 0x1;		/* (  1) */
     d08:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x140 <_RRAdditionalSize> */
     d0c:	aa e6 48 01 	B[P5 + 0x148] = R2;
     d10:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     d14:	15 91       	R5 = [P2];
     d16:	27 e1 2c 01 	R7 = 0x12c (X);		/*		R7=0x12c(300) */
     d1a:	ef 40       	R7 *= R5;
     d1c:	01 52       	R0 = R1 - R0;
     d1e:	38 09       	CC = R0 <= R7;
     d20:	42 1c       	IF CC JUMP 0xda4 <_SetRecordRetry+0xc4> (BP);
     d22:	51 60       	R1 = 0xa (X);		/*		R1=0xa( 10) */
     d24:	ff e3 6e f9 	CALL 0x0 <_FlushAddressCacheRecords>;
     d28:	82 c6 18 8e 	R7 = R0 << 0x3;
     d2c:	c7 53       	R7 = R7 - R0;
     d2e:	06 0c       	CC = R6 == 0x0;
     d30:	04 14       	IF !CC JUMP 0xd38 <_SetRecordRetry+0x58> (BP);
     d32:	ff e3 67 f9 	CALL 0x0 <_FlushAddressCacheRecords>;
     d36:	30 30       	R6 = R0;
     d38:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     d3c:	be 51       	R6 = R6 + R7;
     d3e:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     d42:	17 91       	R7 = [P2];
     d44:	20 e1 2c 01 	R0 = 0x12c (X);		/*		R0=0x12c(300) */
     d48:	f8 40       	R0 *= R7;
     d4a:	2e e6 2f 00 	[P5 + 0xbc] = R6;
     d4e:	86 08       	CC = R6 < R0;
     d50:	03 14       	IF !CC JUMP 0xd56 <_SetRecordRetry+0x76> (BP);
     d52:	28 e6 2f 00 	[P5 + 0xbc] = R0;
     d56:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     d5a:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     d5e:	10 91       	R0 = [P2];
     d60:	00 0c       	CC = R0 == 0x0;
     d62:	7f 1c       	IF CC JUMP 0xe60 <_SetRecordRetry+0x180> (BP);
     d64:	0f 30       	R1 = R7;
     d66:	28 e4 2f 00 	R0 = [P5 + 0xbc];
     d6a:	ff e3 4b f9 	CALL 0x0 <_FlushAddressCacheRecords>;
     d6e:	30 30       	R6 = R0;
     d70:	29 e4 3b 00 	R1 = [P5 + 0xec];
     d74:	20 e4 37 00 	R0 = [P4 + 0xdc];
     d78:	01 52       	R0 = R1 - R0;
     d7a:	0f 30       	R1 = R7;
     d7c:	ff e3 42 f9 	CALL 0x0 <_FlushAddressCacheRecords>;
     d80:	38 30       	R7 = R0;
     d82:	69 a2       	R1 = [P5 + 0x24];
     d84:	45 30       	R0 = P5;
     d86:	54 30       	R2 = P4;
     d88:	21 64       	R1 += 0x4;		/* (  4) */
     d8a:	ba 65       	R2 += 0x37;		/* ( 55) */
     d8c:	20 64       	R0 += 0x4;		/* (  4) */
     d8e:	ff e3 39 f9 	CALL 0x0 <_FlushAddressCacheRecords>;
     d92:	30 b1       	[SP + 0x10] = R0;
     d94:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xa( 10) */
     d98:	f7 b0       	[SP + 0xc] = R7;
     d9a:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
     d9c:	01 e1 c0 05 	R1.L = 0x5c0;		/* (1472)	R1=0x5c0(1472) */
     da0:	16 30       	R2 = R6;
     da2:	26 20       	JUMP.S 0xdee <_SetRecordRetry+0x10e>;
     da4:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     da8:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     dac:	10 91       	R0 = [P2];
     dae:	2f e6 2f 00 	[P5 + 0xbc] = R7;
     db2:	00 0c       	CC = R0 == 0x0;
     db4:	56 1c       	IF CC JUMP 0xe60 <_SetRecordRetry+0x180> (BP);
     db6:	20 e4 37 00 	R0 = [P4 + 0xdc];
     dba:	01 52       	R0 = R1 - R0;
     dbc:	0d 30       	R1 = R5;
     dbe:	ff e3 21 f9 	CALL 0x0 <_FlushAddressCacheRecords>;
     dc2:	20 30       	R4 = R0;
     dc4:	69 a2       	R1 = [P5 + 0x24];
     dc6:	45 30       	R0 = P5;
     dc8:	54 30       	R2 = P4;
     dca:	ba 65       	R2 += 0x37;		/* ( 55) */
     dcc:	21 64       	R1 += 0x4;		/* (  4) */
     dce:	20 64       	R0 += 0x4;		/* (  4) */
     dd0:	ff e3 18 f9 	CALL 0x0 <_FlushAddressCacheRecords>;
     dd4:	30 30       	R6 = R0;
     dd6:	0d 30       	R1 = R5;
     dd8:	07 30       	R0 = R7;
     dda:	ff e3 13 f9 	CALL 0x0 <_FlushAddressCacheRecords>;
     dde:	10 30       	R2 = R0;
     de0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5c0(1472) */
     de4:	f4 b0       	[SP + 0xc] = R4;
     de6:	36 b1       	[SP + 0x10] = R6;
     de8:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
     dea:	01 e1 ec 05 	R1.L = 0x5ec;		/* (1516)	R1=0x5ec(1516) */
     dee:	ff e3 09 f9 	CALL 0x0 <_FlushAddressCacheRecords>;
     df2:	37 20       	JUMP.S 0xe60 <_SetRecordRetry+0x180>;
     df4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     df6:	28 e6 3b 00 	[P5 + 0xec] = R0;
     dfa:	28 e4 2f 00 	R0 = [P5 + 0xbc];
     dfe:	82 c6 08 82 	R1 = R0 << 0x1;
     e02:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     e06:	01 50       	R0 = R1 + R0;
     e08:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     e0c:	11 91       	R1 = [P2];
     e0e:	28 e6 2f 00 	[P5 + 0xbc] = R0;
     e12:	88 08       	CC = R0 < R1;
     e14:	03 14       	IF !CC JUMP 0xe1a <_SetRecordRetry+0x13a> (BP);
     e16:	29 e6 2f 00 	[P5 + 0xbc] = R1;
     e1a:	20 e1 84 03 	R0 = 0x384 (X);		/*		R0=0x384(900) */
     e1e:	c8 40       	R0 *= R1;
     e20:	29 e4 2f 00 	R1 = [P5 + 0xbc];
     e24:	01 09       	CC = R1 <= R0;
     e26:	03 1c       	IF CC JUMP 0xe2c <_SetRecordRetry+0x14c> (BP);
     e28:	28 e6 2f 00 	[P5 + 0xbc] = R0;
     e2c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     e30:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     e34:	10 91       	R0 = [P2];
     e36:	00 0c       	CC = R0 == 0x0;
     e38:	14 1c       	IF CC JUMP 0xe60 <_SetRecordRetry+0x180> (BP);
     e3a:	69 a2       	R1 = [P5 + 0x24];
     e3c:	45 30       	R0 = P5;
     e3e:	54 30       	R2 = P4;
     e40:	2f e4 2f 00 	R7 = [P5 + 0xbc];
     e44:	21 64       	R1 += 0x4;		/* (  4) */
     e46:	ba 65       	R2 += 0x37;		/* ( 55) */
     e48:	20 64       	R0 += 0x4;		/* (  4) */
     e4a:	ff e3 db f8 	CALL 0x0 <_FlushAddressCacheRecords>;
     e4e:	f0 b0       	[SP + 0xc] = R0;
     e50:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5ec(1516) */
     e54:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
     e56:	01 e1 28 06 	R1.L = 0x628;		/* (1576)	R1=0x628(1576) */
     e5a:	17 30       	R2 = R7;
     e5c:	ff e3 d2 f8 	CALL 0x0 <_FlushAddressCacheRecords>;
     e60:	a6 6c       	SP += 0x14;		/* ( 20) */
     e62:	27 01       	RETS = [SP++];
     e64:	a4 05       	(R7:4, P5:4) = [SP++];
     e66:	10 00       	RTS;

00000e68 <_uDNS_SendNATMsg>:
_uDNS_SendNATMsg():
     e68:	c4 04       	[--SP] = (P5:4);
     e6a:	20 32       	P4 = R0;
     e6c:	67 01       	[--SP] = RETS;
     e6e:	c6 6e       	SP += -0x28;		/* (-40) */
     e70:	29 32       	P5 = R1;
     e72:	20 e4 00 08 	R0 = [P4 + 0x2000];
     e76:	00 0c       	CC = R0 == 0x0;
     e78:	4c 1c       	IF CC JUMP 0xf10 <_uDNS_SendNATMsg+0xa8> (BP);
     e7a:	2a e1 00 20 	P2 = 0x2000 (X);		/*		P2=0x2000(8192) */
     e7e:	94 5a       	P2 = P4 + P2;
     e80:	42 30       	R0 = P2;
     e82:	ff e3 bf f8 	CALL 0x0 <_FlushAddressCacheRecords>;
     e86:	00 0c       	CC = R0 == 0x0;
     e88:	44 18       	IF CC JUMP 0xf10 <_uDNS_SendNATMsg+0xa8>;
     e8a:	46 30       	R0 = SP;
     e8c:	e0 64       	R0 += 0x1c;		/* ( 28) */
     e8e:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
     e90:	62 60       	R2 = 0xc (X);		/*		R2=0xc( 12) */
     e92:	ff e3 b7 f8 	CALL 0x0 <_FlushAddressCacheRecords>;
     e96:	45 0c       	CC = P5 == 0x0;
     e98:	27 18       	IF CC JUMP 0xee6 <_uDNS_SendNATMsg+0x7e>;
     e9a:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x0 <_FlushAddressCacheRecords> */
     e9e:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_FlushAddressCacheRecords> */
     ea2:	56 32       	P2 = SP;
     ea4:	a8 e5 28 00 	R0 = B[P5 + 0x28] (X);
     ea8:	b0 e6 1d 00 	B[SP + 0x1d] = R0;
     eac:	08 95       	R0 = W[P1] (Z);
     eae:	f0 b7       	W[SP + 0x1e] = R0;
     eb0:	68 e5 15 00 	R0 = W[P5 + 0x2a] (X);
     eb4:	70 e6 10 00 	W[SP + 0x20] = R0;
     eb8:	68 e5 16 00 	R0 = W[P5 + 0x2c] (X);
     ebc:	70 e6 11 00 	W[SP + 0x22] = R0;
     ec0:	28 a3       	R0 = [P5 + 0x30];
     ec2:	82 c6 40 83 	R1 = R0 >> 0x18;
     ec6:	b1 e6 24 00 	B[SP + 0x24] = R1;
     eca:	22 6d       	P2 += 0x24;		/* ( 36) */
     ecc:	82 c6 80 83 	R1 = R0 >> 0x10;
     ed0:	91 e6 01 00 	B[P2 + 0x1] = R1;
     ed4:	82 c6 c0 83 	R1 = R0 >> 0x8;
     ed8:	56 30       	R2 = SP;
     eda:	91 e6 02 00 	B[P2 + 0x2] = R1;
     ede:	90 e6 03 00 	B[P2 + 0x3] = R0;
     ee2:	42 65       	R2 += 0x28;		/* ( 40) */
     ee4:	03 20       	JUMP.S 0xeea <_uDNS_SendNATMsg+0x82>;
     ee6:	56 30       	R2 = SP;
     ee8:	f2 64       	R2 += 0x1e;		/* ( 30) */
     eea:	2a e1 fc 1f 	P2 = 0x1ffc (X);		/*		P2=0x1ffc(8188) */
     eee:	94 5a       	P2 = P4 + P2;
     ef0:	72 bd       	[SP + 0x14] = P2;
     ef2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     ef4:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x1ffc */
     ef8:	f0 b0       	[SP + 0xc] = R0;
     efa:	30 b1       	[SP + 0x10] = R0;
     efc:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     f00:	10 95       	R0 = W[P2] (Z);
     f02:	30 b7       	W[SP + 0x18] = R0;
     f04:	4e 30       	R1 = SP;
     f06:	44 30       	R0 = P4;
     f08:	e1 64       	R1 += 0x1c;		/* ( 28) */
     f0a:	ff e3 7b f8 	CALL 0x0 <_FlushAddressCacheRecords>;
     f0e:	02 20       	JUMP.S 0xf12 <_uDNS_SendNATMsg+0xaa>;
     f10:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     f12:	46 6d       	SP += 0x28;		/* ( 40) */
     f14:	27 01       	RETS = [SP++];
     f16:	84 04       	(P5:4) = [SP++];
     f18:	10 00       	RTS;
	...

00000f1c <_uDNS_ReceiveTestQuestionResponse>:
_uDNS_ReceiveTestQuestionResponse():
     f1c:	e3 05       	[--SP] = (R7:4, P5:3);
     f1e:	19 32       	P3 = R1;
     f20:	00 e8 a4 00 	LINK 0x290;		/* (656) */
     f24:	38 32       	FP = R0;
     f26:	76 e5 62 01 	R6 = W[SP + 0x2c4] (X);
     f2a:	98 a4       	R0 = W[P3 + 0x4] (Z);
     f2c:	08 0c       	CC = R0 == 0x1;
     f2e:	de 14       	IF !CC JUMP 0x10ea <_uDNS_ReceiveTestQuestionResponse+0x1ce> (BP);
     f30:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     f34:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     f38:	10 91       	R0 = [P2];
     f3a:	6e 32       	P5 = SP;
     f3c:	f0 b0       	[SP + 0xc] = R0;
     f3e:	65 6d       	P5 += 0x2c;		/* ( 44) */
     f40:	61 64       	R1 += 0xc;		/* ( 12) */
     f42:	35 bd       	[SP + 0x10] = P5;
     f44:	43 30       	R0 = P3;
     f46:	ff e3 5d f8 	CALL 0x0 <_FlushAddressCacheRecords>;
     f4a:	00 0c       	CC = R0 == 0x0;
     f4c:	cf 18       	IF CC JUMP 0x10ea <_uDNS_ReceiveTestQuestionResponse+0x1ce>;
     f4e:	21 e1 03 40 	R1 = 0x4003 (X);		/*		R1=0x4003(16387) */
     f52:	11 4f       	R1 <<= 0x2;
     f54:	30 e4 98 00 	R0 = [SP + 0x260];
     f58:	08 08       	CC = R0 == R1;
     f5a:	c8 14       	IF !CC JUMP 0x10ea <_uDNS_ReceiveTestQuestionResponse+0x1ce> (BP);
     f5c:	56 30       	R2 = SP;
     f5e:	23 e1 60 01 	R3 = 0x160 (X);		/*		R3=0x160(352) */
     f62:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4003(16387) */
     f66:	1a 50       	R0 = R2 + R3;
     f68:	01 e1 90 06 	R1.L = 0x690;		/* (1680)	R1=0x690(1680) */
     f6c:	ff e3 4a f8 	CALL 0x0 <_FlushAddressCacheRecords>;
     f70:	00 0c       	CC = R0 == 0x0;
     f72:	bc 1c       	IF CC JUMP 0x10ea <_uDNS_ReceiveTestQuestionResponse+0x1ce> (BP);
     f74:	78 60       	R0 = 0xf (X);		/*		R0=0xf( 15) */
     f76:	99 e4 03 00 	R1 = B[P3 + 0x3] (Z);
     f7a:	01 54       	R0 = R1 & R0;
     f7c:	00 0c       	CC = R0 == 0x0;
     f7e:	07 14       	IF !CC JUMP 0xf8c <_uDNS_ReceiveTestQuestionResponse+0x70> (BP);
     f80:	d8 a4       	R0 = W[P3 + 0x6] (Z);
     f82:	00 0c       	CC = R0 == 0x0;
     f84:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
     f86:	17 60       	R7 = 0x2 (X);		/*		R7=0x2(  2) */
     f88:	38 07       	IF CC R7 = R0;
     f8a:	02 20       	JUMP.S 0xf8e <_uDNS_ReceiveTestQuestionResponse+0x72>;
     f8c:	0f 60       	R7 = 0x1 (X);		/*		R7=0x1(  1) */
     f8e:	f4 42       	R4 = R6.L (Z);
     f90:	76 43       	R6 = R6.B (Z);
     f92:	46 4f       	R6 <<= 0x8;
     f94:	82 c6 c4 81 	R0 = R4 >> 0x8;
     f98:	30 56       	R0 = R0 | R6;
     f9a:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0x0 <_FlushAddressCacheRecords>(  0) */
     f9e:	45 e1 00 00 	R5.H = 0x0;		/* (  0)	R5=0x598c(22924) */
     fa2:	3d e5 fd 07 	P5 = [FP + 0x1ff4];
     fa6:	b0 b2       	[SP + 0x28] = R0;
     fa8:	06 e1 50 06 	R6.L = 0x650;		/* (1616)	R6=0x650(1616) */
     fac:	05 e1 08 04 	R5.L = 0x408;		/* (1032)	R5=0x408(1032) */
     fb0:	99 20       	JUMP.S 0x10e2 <_uDNS_ReceiveTestQuestionResponse+0x1c6>;
     fb2:	00 00       	NOP;
     fb4:	68 a2       	R0 = [P5 + 0x24];
     fb6:	38 08       	CC = R0 == R7;
     fb8:	0d 18       	IF CC JUMP 0xfd2 <_uDNS_ReceiveTestQuestionResponse+0xb6>;
     fba:	4d 30       	R1 = P5;
     fbc:	41 64       	R1 += 0x8;		/* (  8) */
     fbe:	30 e4 b0 00 	R0 = [SP + 0x2c0];
     fc2:	ff e3 1f f8 	CALL 0x0 <_FlushAddressCacheRecords>;
     fc6:	00 0c       	CC = R0 == 0x0;
     fc8:	05 1c       	IF CC JUMP 0xfd2 <_uDNS_ReceiveTestQuestionResponse+0xb6> (BP);
     fca:	a8 a7       	R0 = W[P5 + 0x1c] (Z);
     fcc:	04 08       	CC = R4 == R0;
     fce:	00 02       	R0 = CC;
     fd0:	02 20       	JUMP.S 0xfd4 <_uDNS_ReceiveTestQuestionResponse+0xb8>;
     fd2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
     fd4:	69 a2       	R1 = [P5 + 0x24];
     fd6:	01 0c       	CC = R1 == 0x0;
     fd8:	06 14       	IF !CC JUMP 0xfe4 <_uDNS_ReceiveTestQuestionResponse+0xc8> (BP);
     fda:	e9 a7       	R1 = W[P5 + 0x1e] (Z);
     fdc:	1a 95       	R2 = W[P3] (Z);
     fde:	0a 08       	CC = R2 == R1;
     fe0:	01 02       	R1 = CC;
     fe2:	02 20       	JUMP.S 0xfe6 <_uDNS_ReceiveTestQuestionResponse+0xca>;
     fe4:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
     fe6:	00 0c       	CC = R0 == 0x0;
     fe8:	03 14       	IF !CC JUMP 0xfee <_uDNS_ReceiveTestQuestionResponse+0xd2> (BP);
     fea:	01 0c       	CC = R1 == 0x0;
     fec:	79 1c       	IF CC JUMP 0x10de <_uDNS_ReceiveTestQuestionResponse+0x1c2> (BP);
     fee:	6f b2       	[P5 + 0x24] = R7;
     ff0:	0f 0c       	CC = R7 == 0x1;
     ff2:	2d 14       	IF !CC JUMP 0x104c <_uDNS_ReceiveTestQuestionResponse+0x130> (BP);
     ff4:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     ff8:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
     ffc:	11 91       	R1 = [P2];
     ffe:	01 0c       	CC = R1 == 0x0;
    1000:	4b 1c       	IF CC JUMP 0x1096 <_uDNS_ReceiveTestQuestionResponse+0x17a> (BP);
    1002:	ab e4 1c 00 	R3 = B[P5 + 0x1c] (Z);
    1006:	a9 e4 1d 00 	R1 = B[P5 + 0x1d] (Z);
    100a:	43 4f       	R3 <<= 0x8;
    100c:	59 56       	R1 = R1 | R3;
    100e:	01 32       	P0 = R1;
    1010:	a9 e4 1e 00 	R1 = B[P5 + 0x1e] (Z);
    1014:	41 4f       	R1 <<= 0x8;
    1016:	09 32       	P1 = R1;
    1018:	a9 e4 1f 00 	R1 = B[P5 + 0x1f] (Z);
    101c:	00 0c       	CC = R0 == 0x0;
    101e:	06 07       	IF CC R0 = R6;
    1020:	05 06       	IF !CC R0 = R5;
    1022:	55 30       	R2 = P5;
    1024:	59 30       	R3 = P1;
    1026:	59 56       	R1 = R1 | R3;
    1028:	11 32       	P2 = R1;
    102a:	31 e4 b0 00 	R1 = [SP + 0x2c0];
    102e:	31 b1       	[SP + 0x10] = R1;
    1030:	b3 a2       	R3 = [SP + 0x28];
    1032:	f0 b1       	[SP + 0x1c] = R0;
    1034:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_FlushAddressCacheRecords>(  0) */
    1038:	42 64       	R2 += 0x8;		/* (  8) */
    103a:	f0 bc       	[SP + 0xc] = P0;
    103c:	73 b1       	[SP + 0x14] = R3;
    103e:	b2 bd       	[SP + 0x18] = P2;
    1040:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    1042:	01 e1 c0 06 	R1.L = 0x6c0;		/* (1728)	R1=0x6c0(1728) */
    1046:	ff e3 dd f7 	CALL 0x0 <_FlushAddressCacheRecords>;
    104a:	26 20       	JUMP.S 0x1096 <_uDNS_ReceiveTestQuestionResponse+0x17a>;
    104c:	00 0c       	CC = R0 == 0x0;
    104e:	ab e4 1c 00 	R3 = B[P5 + 0x1c] (Z);
    1052:	a9 e4 1d 00 	R1 = B[P5 + 0x1d] (Z);
    1056:	43 4f       	R3 <<= 0x8;
    1058:	59 56       	R1 = R1 | R3;
    105a:	01 32       	P0 = R1;
    105c:	a9 e4 1e 00 	R1 = B[P5 + 0x1e] (Z);
    1060:	41 4f       	R1 <<= 0x8;
    1062:	09 32       	P1 = R1;
    1064:	a9 e4 1f 00 	R1 = B[P5 + 0x1f] (Z);
    1068:	06 07       	IF CC R0 = R6;
    106a:	05 06       	IF !CC R0 = R5;
    106c:	55 30       	R2 = P5;
    106e:	f0 b1       	[SP + 0x1c] = R0;
    1070:	59 30       	R3 = P1;
    1072:	59 56       	R1 = R1 | R3;
    1074:	11 32       	P2 = R1;
    1076:	31 e4 b0 00 	R1 = [SP + 0x2c0];
    107a:	31 b1       	[SP + 0x10] = R1;
    107c:	b3 a2       	R3 = [SP + 0x28];
    107e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x6c0(1728) */
    1082:	42 64       	R2 += 0x8;		/* (  8) */
    1084:	f0 bc       	[SP + 0xc] = P0;
    1086:	73 b1       	[SP + 0x14] = R3;
    1088:	b2 bd       	[SP + 0x18] = P2;
    108a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    108c:	01 e1 e8 06 	R1.L = 0x6e8;		/* (1768)	R1=0x6e8(1768) */
    1090:	ff e3 b8 f7 	CALL 0x0 <_FlushAddressCacheRecords>;
    1094:	25 20       	JUMP.S 0x10de <_uDNS_ReceiveTestQuestionResponse+0x1c2>;
    1096:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    109a:	3c e5 4c 00 	P4 = [FP + 0x130];
    109e:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    10a2:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    10a4:	1b 20       	JUMP.S 0x10da <_uDNS_ReceiveTestQuestionResponse+0x1be>;
    10a6:	55 30       	R2 = P5;
    10a8:	20 e4 32 00 	R0 = [P4 + 0xc8];
    10ac:	10 08       	CC = R0 == R2;
    10ae:	14 14       	IF !CC JUMP 0x10d6 <_uDNS_ReceiveTestQuestionResponse+0x1ba> (BP);
    10b0:	31 b2       	[SP + 0x20] = R1;
    10b2:	72 be       	[SP + 0x24] = P2;
    10b4:	44 30       	R0 = P4;
    10b6:	ff e3 fb f7 	CALL 0xac <_NoTestQuery>;
    10ba:	00 0c       	CC = R0 == 0x0;
    10bc:	31 a2       	R1 = [SP + 0x20];
    10be:	72 ae       	P2 = [SP + 0x24];
    10c0:	0b 14       	IF !CC JUMP 0x10d6 <_uDNS_ReceiveTestQuestionResponse+0x1ba> (BP);
    10c2:	12 91       	R2 = [P2];
    10c4:	a1 e6 d8 00 	B[P4 + 0xd8] = R1;
    10c8:	38 e4 37 00 	R0 = [FP + 0xdc];
    10cc:	22 b1       	[P4 + 0x10] = R2;
    10ce:	90 52       	R2 = R0 - R2;
    10d0:	e2 b0       	[P4 + 0xc] = R2;
    10d2:	38 e6 3d 00 	[FP + 0xf4] = R0;
    10d6:	00 00       	NOP;
    10d8:	64 91       	P4 = [P4];
    10da:	44 0c       	CC = P4 == 0x0;
    10dc:	e5 17       	IF !CC JUMP 0x10a6 <_uDNS_ReceiveTestQuestionResponse+0x18a> (BP);
    10de:	00 00       	NOP;
    10e0:	6d 91       	P5 = [P5];
    10e2:	45 0c       	CC = P5 == 0x0;
    10e4:	67 17       	IF !CC JUMP 0xfb2 <_uDNS_ReceiveTestQuestionResponse+0x96> (BP);
    10e6:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    10e8:	02 20       	JUMP.S 0x10ec <_uDNS_ReceiveTestQuestionResponse+0x1d0>;
    10ea:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    10ec:	29 e1 90 02 	P1 = 0x290 (X);		/*		P1=0x290(656) */
    10f0:	8e 5b       	SP = SP + P1;
    10f2:	77 90       	FP = [SP++];
    10f4:	27 01       	RETS = [SP++];
    10f6:	a3 05       	(R7:4, P5:3) = [SP++];
    10f8:	10 00       	RTS;
	...

000010fc <_ParseTSIGError>:
_ParseTSIGError():
    10fc:	e3 05       	[--SP] = (R7:4, P5:3);
    10fe:	28 32       	P5 = R0;
    1100:	00 e8 08 00 	LINK 0x20;		/* (32) */
    1104:	01 30       	R0 = R1;
    1106:	21 32       	P4 = R1;
    1108:	2a 30       	R5 = R2;
    110a:	0a 30       	R1 = R2;
    110c:	36 e4 14 00 	R6 = [SP + 0x50];
    1110:	ff e3 78 f7 	CALL 0x0 <_FlushAddressCacheRecords>;
    1114:	10 30       	R2 = R0;
    1116:	00 0c       	CC = R0 == 0x0;
    1118:	9b 18       	IF CC JUMP 0x124e <_ParseTSIGError+0x152>;
    111a:	2f e1 84 7c 	FP = 0x7c84 (X);		/*		FP=0x7c84(31876) */
    111e:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    1120:	03 68       	P3 = 0x0 (X);		/*		P3=0x0(  0) */
    1122:	24 e1 80 ff 	R4 = -0x80 (X);		/*		R4=0xffffff80(-128) */
    1126:	fd 5b       	FP = P5 + FP;
    1128:	03 60       	R3 = 0x0 (X);		/*		R3=0x0(  0) */
    112a:	8f 20       	JUMP.S 0x1248 <_ParseTSIGError+0x14c>;
    112c:	f3 b1       	[SP + 0x1c] = R3;
    112e:	f5 b0       	[SP + 0xc] = R5;
    1130:	33 bd       	[SP + 0x10] = P3;
    1132:	b4 e6 14 00 	B[SP + 0x14] = R4;
    1136:	b7 bd       	[SP + 0x18] = FP;
    1138:	45 30       	R0 = P5;
    113a:	4c 30       	R1 = P4;
    113c:	ff e3 62 f7 	CALL 0x0 <_FlushAddressCacheRecords>;
    1140:	10 30       	R2 = R0;
    1142:	00 0c       	CC = R0 == 0x0;
    1144:	f3 a1       	R3 = [SP + 0x1c];
    1146:	84 1c       	IF CC JUMP 0x124e <_ParseTSIGError+0x152> (BP);
    1148:	21 e1 f0 00 	R1 = 0xf0 (X);		/*		R1=0xf0(240) */
    114c:	a8 e4 88 7c 	R0 = B[P5 + 0x7c88] (Z);
    1150:	08 08       	CC = R0 == R1;
    1152:	78 1c       	IF CC JUMP 0x1242 <_ParseTSIGError+0x146> (BP);
    1154:	51 64       	R1 += 0xa;		/* ( 10) */
    1156:	68 e4 45 3e 	R0 = W[P5 + 0x7c8a] (Z);
    115a:	08 08       	CC = R0 == R1;
    115c:	73 14       	IF !CC JUMP 0x1242 <_ParseTSIGError+0x146> (BP);
    115e:	68 e4 4a 3e 	R0 = W[P5 + 0x7c94] (Z);
    1162:	2f e4 2a 1f 	R7 = [P5 + 0x7ca8];
    1166:	20 64       	R0 += 0x4;		/* (  4) */
    1168:	07 50       	R0 = R7 + R0;
    116a:	20 32       	P4 = R0;
    116c:	07 30       	R0 = R7;
    116e:	20 64       	R0 += 0x4;		/* (  4) */
    1170:	4c 30       	R1 = P4;
    1172:	ff e3 47 f7 	CALL 0x0 <_FlushAddressCacheRecords>;
    1176:	c0 42       	R0 = R0.L (Z);
    1178:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    117c:	08 09       	CC = R0 <= R1;
    117e:	68 10       	IF !CC JUMP 0x124e <_ParseTSIGError+0x152>;
    1180:	10 32       	P2 = R0;
    1182:	0f 32       	P1 = R7;
    1184:	4c 30       	R1 = P4;
    1186:	22 6c       	P2 += 0x4;		/* (  4) */
    1188:	91 5a       	P2 = P1 + P2;
    118a:	42 30       	R0 = P2;
    118c:	30 64       	R0 += 0x6;		/* (  6) */
    118e:	08 0a       	CC = R0 <= R1 (IU);
    1190:	5f 10       	IF !CC JUMP 0x124e <_ParseTSIGError+0x152>;
    1192:	42 32       	P0 = P2;
    1194:	40 6c       	P0 += 0x8;		/* (  8) */
    1196:	60 0a       	CC = P0 <= P4 (IU);
    1198:	5b 10       	IF !CC JUMP 0x124e <_ParseTSIGError+0x152>;
    119a:	20 64       	R0 += 0x4;		/* (  4) */
    119c:	08 0a       	CC = R0 <= R1 (IU);
    119e:	58 14       	IF !CC JUMP 0x124e <_ParseTSIGError+0x152> (BP);
    11a0:	91 e4 08 00 	R1 = B[P2 + 0x8] (Z);
    11a4:	41 4f       	R1 <<= 0x8;
    11a6:	82 e4 01 00 	R2 = B[P0 + 0x1] (Z);
    11aa:	4a 56       	R1 = R2 | R1;
    11ac:	48 50       	R1 = R0 + R1;
    11ae:	09 32       	P1 = R1;
    11b0:	61 0a       	CC = P1 <= P4 (IU);
    11b2:	4e 10       	IF !CC JUMP 0x124e <_ParseTSIGError+0x152>;
    11b4:	11 32       	P2 = R1;
    11b6:	12 6c       	P2 += 0x2;		/* (  2) */
    11b8:	62 0a       	CC = P2 <= P4 (IU);
    11ba:	4a 10       	IF !CC JUMP 0x124e <_ParseTSIGError+0x152>;
    11bc:	42 30       	R0 = P2;
    11be:	10 64       	R0 += 0x2;		/* (  2) */
    11c0:	4c 30       	R1 = P4;
    11c2:	81 09       	CC = R1 < R0 (IU);
    11c4:	45 1c       	IF CC JUMP 0x124e <_ParseTSIGError+0x152> (BP);
    11c6:	88 e4 02 00 	R0 = B[P1 + 0x2] (Z);
    11ca:	91 e4 01 00 	R1 = B[P2 + 0x1] (Z);
    11ce:	40 4f       	R0 <<= 0x8;
    11d0:	01 56       	R0 = R1 | R0;
    11d2:	81 60       	R1 = 0x10 (X);		/*		R1=0x10( 16) */
    11d4:	08 08       	CC = R0 == R1;
    11d6:	0d 14       	IF !CC JUMP 0x11f0 <_ParseTSIGError+0xf4> (BP);
    11d8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x10( 16) */
    11dc:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    11de:	01 e1 50 07 	R1.L = 0x750;		/* (1872)	R1=0x750(1872) */
    11e2:	16 30       	R2 = R6;
    11e4:	ff e3 0e f7 	CALL 0x0 <_FlushAddressCacheRecords>;
    11e8:	20 e1 fd df 	R0 = -0x2003 (X);		/*		R0=0xffffdffd(-8195) */
    11ec:	18 4f       	R0 <<= 0x3;
    11ee:	31 20       	JUMP.S 0x1250 <_ParseTSIGError+0x154>;
    11f0:	89 60       	R1 = 0x11 (X);		/*		R1=0x11( 17) */
    11f2:	08 08       	CC = R0 == R1;
    11f4:	0b 14       	IF !CC JUMP 0x120a <_ParseTSIGError+0x10e> (BP);
    11f6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x11( 17) */
    11fa:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    11fc:	01 e1 64 07 	R1.L = 0x764;		/* (1892)	R1=0x764(1892) */
    1200:	16 30       	R2 = R6;
    1202:	ff e3 ff f6 	CALL 0x0 <_FlushAddressCacheRecords>;
    1206:	38 63       	R0 = -0x19 (X);		/*		R0=0xffffffe7(-25) */
    1208:	1a 20       	JUMP.S 0x123c <_ParseTSIGError+0x140>;
    120a:	91 60       	R1 = 0x12 (X);		/*		R1=0x12( 18) */
    120c:	08 08       	CC = R0 == R1;
    120e:	0b 14       	IF !CC JUMP 0x1224 <_ParseTSIGError+0x128> (BP);
    1210:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x12( 18) */
    1214:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1216:	01 e1 74 07 	R1.L = 0x774;		/* (1908)	R1=0x774(1908) */
    121a:	16 30       	R2 = R6;
    121c:	ff e3 f2 f6 	CALL 0x0 <_FlushAddressCacheRecords>;
    1220:	48 63       	R0 = -0x17 (X);		/*		R0=0xffffffe9(-23) */
    1222:	0d 20       	JUMP.S 0x123c <_ParseTSIGError+0x140>;
    1224:	00 0c       	CC = R0 == 0x0;
    1226:	15 1c       	IF CC JUMP 0x1250 <_ParseTSIGError+0x154> (BP);
    1228:	f0 b0       	[SP + 0xc] = R0;
    122a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x774(1908) */
    122e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1230:	01 e1 84 07 	R1.L = 0x784;		/* (1924)	R1=0x784(1924) */
    1234:	16 30       	R2 = R6;
    1236:	ff e3 e5 f6 	CALL 0x0 <_FlushAddressCacheRecords>;
    123a:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
    123c:	40 e1 fe ff 	R0.H = 0xfffe;		/* ( -2)	R0=0xfffeffff(-65537) */
    1240:	08 20       	JUMP.S 0x1250 <_ParseTSIGError+0x154>;
    1242:	ab e6 88 7c 	B[P5 + 0x7c88] = R3;
    1246:	0f 64       	R7 += 0x1;		/* (  1) */
    1248:	60 a5       	R0 = W[P4 + 0xa] (Z);
    124a:	87 08       	CC = R7 < R0;
    124c:	70 1f       	IF CC JUMP 0x112c <_ParseTSIGError+0x30> (BP);
    124e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1250:	06 6d       	SP += 0x20;		/* ( 32) */
    1252:	77 90       	FP = [SP++];
    1254:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    1256:	a9 e6 88 7c 	B[P5 + 0x7c88] = R1;
    125a:	27 01       	RETS = [SP++];
    125c:	a3 05       	(R7:4, P5:3) = [SP++];
    125e:	10 00       	RTS;

00001260 <_GetZoneData_StartQuery>:
_GetZoneData_StartQuery():
    1260:	f5 05       	[--SP] = (R7:6, P5:5);
    1262:	30 30       	R6 = R0;
    1264:	29 32       	P5 = R1;
    1266:	67 01       	[--SP] = RETS;
    1268:	d0 42       	R0 = R2.L (Z);
    126a:	09 61       	R1 = 0x21 (X);		/*		R1=0x21( 33) */
    126c:	a6 6f       	SP += -0xc;		/* (-12) */
    126e:	3a 30       	R7 = R2;
    1270:	08 08       	CC = R0 == R1;
    1272:	8d 14       	IF !CC JUMP 0x138c <_GetZoneData_StartQuery+0x12c> (BP);
    1274:	28 e4 40 00 	R0 = [P5 + 0x100];
    1278:	00 0c       	CC = R0 == 0x0;
    127a:	0f 14       	IF !CC JUMP 0x1298 <_GetZoneData_StartQuery+0x38> (BP);
    127c:	28 e4 c8 00 	R0 = [P5 + 0x320];
    1280:	00 0c       	CC = R0 == 0x0;
    1282:	06 1c       	IF CC JUMP 0x128e <_GetZoneData_StartQuery+0x2e> (BP);
    1284:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    1288:	0a e1 a0 07 	P2.L = 0x7a0;		/* (1952)	P2=0x7a0 */
    128c:	15 20       	JUMP.S 0x12b6 <_GetZoneData_StartQuery+0x56>;
    128e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x7a0 */
    1292:	0a e1 b8 07 	P2.L = 0x7b8;		/* (1976)	P2=0x7b8 */
    1296:	10 20       	JUMP.S 0x12b6 <_GetZoneData_StartQuery+0x56>;
    1298:	08 0c       	CC = R0 == 0x1;
    129a:	10 14       	IF !CC JUMP 0x12ba <_GetZoneData_StartQuery+0x5a> (BP);
    129c:	28 e4 c8 00 	R0 = [P5 + 0x320];
    12a0:	00 0c       	CC = R0 == 0x0;
    12a2:	06 1c       	IF CC JUMP 0x12ae <_GetZoneData_StartQuery+0x4e> (BP);
    12a4:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x7b8 */
    12a8:	0a e1 cc 07 	P2.L = 0x7cc;		/* (1996)	P2=0x7cc */
    12ac:	05 20       	JUMP.S 0x12b6 <_GetZoneData_StartQuery+0x56>;
    12ae:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x7cc */
    12b2:	0a e1 08 04 	P2.L = 0x408;		/* (1032)	P2=0x408 */
    12b6:	42 30       	R0 = P2;
    12b8:	19 20       	JUMP.S 0x12ea <_GetZoneData_StartQuery+0x8a>;
    12ba:	10 0c       	CC = R0 == 0x2;
    12bc:	f9 17       	IF !CC JUMP 0x12ae <_GetZoneData_StartQuery+0x4e> (BP);
    12be:	29 e4 c8 00 	R1 = [P5 + 0x320];
    12c2:	01 0c       	CC = R1 == 0x0;
    12c4:	08 1c       	IF CC JUMP 0x12d4 <_GetZoneData_StartQuery+0x74> (BP);
    12c6:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_FlushAddressCacheRecords>(  0) */
    12ca:	00 e1 e4 07 	R0.L = 0x7e4;		/* (2020)	R0=0x7e4(2020) */
    12ce:	01 0c       	CC = R1 == 0x0;
    12d0:	07 14       	IF !CC JUMP 0x12de <_GetZoneData_StartQuery+0x7e> (BP);
    12d2:	08 20       	JUMP.S 0x12e2 <_GetZoneData_StartQuery+0x82>;
    12d4:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x7e4(2020) */
    12d8:	00 e1 f8 07 	R0.L = 0x7f8;		/* (2040)	R0=0x7f8(2040) */
    12dc:	03 20       	JUMP.S 0x12e2 <_GetZoneData_StartQuery+0x82>;
    12de:	10 32       	P2 = R0;
    12e0:	05 20       	JUMP.S 0x12ea <_GetZoneData_StartQuery+0x8a>;
    12e2:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x408 */
    12e6:	0a e1 f8 07 	P2.L = 0x7f8;		/* (2040)	P2=0x7f8 */
    12ea:	29 e1 00 01 	P1 = 0x100 (X);		/*		P1=0x100(256) */
    12ee:	4a 5a       	P1 = P2 + P1;
    12f0:	49 30       	R1 = P1;
    12f2:	ff e3 87 f6 	CALL 0x0 <_FlushAddressCacheRecords>;
    12f6:	c1 42       	R1 = R0.L (Z);
    12f8:	22 e1 00 01 	R2 = 0x100 (X);		/*		R2=0x100(256) */
    12fc:	11 0a       	CC = R1 <= R2 (IU);
    12fe:	3a 14       	IF !CC JUMP 0x1372 <_GetZoneData_StartQuery+0x112> (BP);
    1300:	2a e1 60 04 	P2 = 0x460 (X);		/*		P2=0x460(1120) */
    1304:	29 e4 40 00 	R1 = [P5 + 0x100];
    1308:	95 5a       	P2 = P5 + P2;
    130a:	01 0c       	CC = R1 == 0x0;
    130c:	0d 14       	IF !CC JUMP 0x1326 <_GetZoneData_StartQuery+0xc6> (BP);
    130e:	29 e4 c8 00 	R1 = [P5 + 0x320];
    1312:	01 0c       	CC = R1 == 0x0;
    1314:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x21( 33) */
    1318:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x100(256) */
    131c:	01 e1 a0 07 	R1.L = 0x7a0;		/* (1952)	R1=0x7a0(1952) */
    1320:	02 e1 b8 07 	R2.L = 0x7b8;		/* (1976)	R2=0x7b8(1976) */
    1324:	0e 20       	JUMP.S 0x1340 <_GetZoneData_StartQuery+0xe0>;
    1326:	09 0c       	CC = R1 == 0x1;
    1328:	0e 14       	IF !CC JUMP 0x1344 <_GetZoneData_StartQuery+0xe4> (BP);
    132a:	29 e4 c8 00 	R1 = [P5 + 0x320];
    132e:	01 0c       	CC = R1 == 0x0;
    1330:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x7a0(1952) */
    1334:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x7b8(1976) */
    1338:	01 e1 cc 07 	R1.L = 0x7cc;		/* (1996)	R1=0x7cc(1996) */
    133c:	02 e1 08 04 	R2.L = 0x408;		/* (1032)	R2=0x408(1032) */
    1340:	0a 07       	IF CC R1 = R2;
    1342:	13 20       	JUMP.S 0x1368 <_GetZoneData_StartQuery+0x108>;
    1344:	11 0c       	CC = R1 == 0x2;
    1346:	0d 14       	IF !CC JUMP 0x1360 <_GetZoneData_StartQuery+0x100> (BP);
    1348:	29 e4 c8 00 	R1 = [P5 + 0x320];
    134c:	01 0c       	CC = R1 == 0x0;
    134e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x7cc(1996) */
    1352:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x408(1032) */
    1356:	01 e1 e4 07 	R1.L = 0x7e4;		/* (2020)	R1=0x7e4(2020) */
    135a:	02 e1 f8 07 	R2.L = 0x7f8;		/* (2040)	R2=0x7f8(2040) */
    135e:	f1 2f       	JUMP.S 0x1340 <_GetZoneData_StartQuery+0xe0>;
    1360:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x7e4(2020) */
    1364:	01 e1 08 04 	R1.L = 0x408;		/* (1032)	R1=0x408(1032) */
    1368:	c2 42       	R2 = R0.L (Z);
    136a:	42 30       	R0 = P2;
    136c:	ff e3 4a f6 	CALL 0x0 <_FlushAddressCacheRecords>;
    1370:	04 20       	JUMP.S 0x1378 <_GetZoneData_StartQuery+0x118>;
    1372:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1374:	a8 e6 60 04 	B[P5 + 0x460] = R0;
    1378:	2a e1 60 04 	P2 = 0x460 (X);		/*		P2=0x460(1120) */
    137c:	95 5a       	P2 = P5 + P2;
    137e:	42 30       	R0 = P2;
    1380:	2a e1 08 01 	P2 = 0x108 (X);		/*		P2=0x108(264) */
    1384:	95 5a       	P2 = P5 + P2;
    1386:	4a 30       	R1 = P2;
    1388:	ff e3 3c f6 	CALL 0x0 <_FlushAddressCacheRecords>;
    138c:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
    138e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x108 */
    1392:	28 e6 cf 00 	[P5 + 0x33c] = R0;
    1396:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    139a:	10 91       	R0 = [P2];
    139c:	2a e1 48 04 	P2 = 0x448 (X);		/*		P2=0x448(1096) */
    13a0:	95 5a       	P2 = P5 + P2;
    13a2:	28 e6 11 01 	[P5 + 0x444] = R0;
    13a6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x408(1032) */
    13aa:	42 30       	R0 = P2;
    13ac:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_FlushAddressCacheRecords>(  0) */
    13b0:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
    13b2:	ff e3 27 f6 	CALL 0x0 <_FlushAddressCacheRecords>;
    13b6:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    13b8:	68 e6 b1 02 	W[P5 + 0x562] = R0;
    13bc:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    13be:	28 e6 59 01 	[P5 + 0x564] = R0;
    13c2:	28 e6 5b 01 	[P5 + 0x56c] = R0;
    13c6:	28 e6 5d 01 	[P5 + 0x574] = R0;
    13ca:	28 e6 5e 01 	[P5 + 0x578] = R0;
    13ce:	28 e6 61 01 	[P5 + 0x584] = R0;
    13d2:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    13d4:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_FlushAddressCacheRecords>(  0) */
    13d8:	29 e6 5a 01 	[P5 + 0x568] = R1;
    13dc:	29 e6 5c 01 	[P5 + 0x570] = R1;
    13e0:	00 e1 7c 1a 	R0.L = 0x1a7c;		/* (6780)	R0=0x1a7c <_GetZoneData_QuestionCallback>(6780) */
    13e4:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    13e6:	28 e6 62 01 	[P5 + 0x588] = R0;
    13ea:	66 6c       	SP += 0xc;		/* ( 12) */
    13ec:	2a e1 2c 03 	P2 = 0x32c (X);		/*		P2=0x32c <_FoundDomain>(812) */
    13f0:	a9 e6 7e 05 	B[P5 + 0x57e] = R1;
    13f4:	a9 e6 7f 05 	B[P5 + 0x57f] = R1;
    13f8:	a9 e6 7c 05 	B[P5 + 0x57c] = R1;
    13fc:	a9 e6 7d 05 	B[P5 + 0x57d] = R1;
    1400:	95 5a       	P2 = P5 + P2;
    1402:	27 01       	RETS = [SP++];
    1404:	6f e6 b0 02 	W[P5 + 0x560] = R7;
    1408:	2d e7 63 01 	[P5 + 0x58c] = P5;
    140c:	06 30       	R0 = R6;
    140e:	4a 30       	R1 = P2;
    1410:	b5 05       	(R7:6, P5:5) = [SP++];
    1412:	ff e2 f7 f5 	JUMP.L 0x0 <_FlushAddressCacheRecords>;
	...

00001418 <_GetAuthInfoForName_direct.clone.1>:
_GetAuthInfoForName_direct.clone.1():
    1418:	fb 05       	[--SP] = (R7:7, P5:3);
    141a:	67 01       	[--SP] = RETS;
    141c:	a6 6f       	SP += -0xc;		/* (-12) */
    141e:	18 32       	P3 = R0;
    1420:	21 32       	P4 = R1;
    1422:	27 e1 8c 11 	R7 = 0x118c (X);		/*		R7=0x118c(4492) */
    1426:	12 20       	JUMP.S 0x144a <_GetAuthInfoForName_direct.clone.1+0x32>;
    1428:	00 00       	NOP;
    142a:	5d 91       	P5 = [P3];
    142c:	09 20       	JUMP.S 0x143e <_GetAuthInfoForName_direct.clone.1+0x26>;
    142e:	4d 30       	R1 = P5;
    1430:	39 50       	R0 = R1 + R7;
    1432:	4c 30       	R1 = P4;
    1434:	ff e3 e6 f5 	CALL 0x0 <_FlushAddressCacheRecords>;
    1438:	00 0c       	CC = R0 == 0x0;
    143a:	0c 14       	IF !CC JUMP 0x1452 <_GetAuthInfoForName_direct.clone.1+0x3a> (BP);
    143c:	6d 91       	P5 = [P5];
    143e:	45 0c       	CC = P5 == 0x0;
    1440:	f7 17       	IF !CC JUMP 0x142e <_GetAuthInfoForName_direct.clone.1+0x16> (BP);
    1442:	20 99       	R0 = B[P4] (Z);
    1444:	08 64       	R0 += 0x1;		/* (  1) */
    1446:	10 32       	P2 = R0;
    1448:	14 5b       	P4 = P4 + P2;
    144a:	20 99       	R0 = B[P4] (Z);
    144c:	00 0c       	CC = R0 == 0x0;
    144e:	ed 17       	IF !CC JUMP 0x1428 <_GetAuthInfoForName_direct.clone.1+0x10> (BP);
    1450:	05 68       	P5 = 0x0 (X);		/*		P5=0x0(  0) */
    1452:	66 6c       	SP += 0xc;		/* ( 12) */
    1454:	45 30       	R0 = P5;
    1456:	27 01       	RETS = [SP++];
    1458:	bb 05       	(R7:7, P5:3) = [SP++];
    145a:	10 00       	RTS;

0000145c <_mDNS_AddDNSServer>:
_mDNS_AddDNSServer():
    145c:	e3 05       	[--SP] = (R7:4, P5:3);
    145e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x32c <_FoundDomain> */
    1462:	00 e8 06 00 	LINK 0x18;		/* (24) */
    1466:	18 32       	P3 = R0;
    1468:	39 30       	R7 = R1;
    146a:	0a e1 08 00 	P2.L = 0x8;		/* (  8)	P2=0x8 */
    146e:	10 99       	R0 = B[P2] (Z);
    1470:	f9 61       	R1 = 0x3f (X);		/*		R1=0x3f( 63) */
    1472:	32 30       	R6 = R2;
    1474:	34 e4 12 00 	R4 = [SP + 0x48];
    1478:	35 e4 14 00 	R5 = [SP + 0x50];
    147c:	08 09       	CC = R0 <= R1;
    147e:	0c 1c       	IF CC JUMP 0x1496 <_mDNS_AddDNSServer+0x3a> (BP);
    1480:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3f( 63) */
    1484:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1486:	01 e1 08 08 	R1.L = 0x808;		/* (2056)	R1=0x808(2056) */
    148a:	22 e1 40 00 	R2 = 0x40 (X);		/*		R2=0x40( 64) */
    148e:	ff e3 b9 f5 	CALL 0x0 <_FlushAddressCacheRecords>;
    1492:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1494:	b9 20       	JUMP.S 0x1606 <_mDNS_AddDNSServer+0x1aa>;
    1496:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_FlushAddressCacheRecords>(  0) */
    149a:	07 0c       	CC = R7 == 0x0;
    149c:	00 e1 08 04 	R0.L = 0x408;		/* (1032)	R0=0x408(1032) */
    14a0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x8 */
    14a4:	38 07       	IF CC R7 = R0;
    14a6:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    14aa:	10 91       	R0 = [P2];
    14ac:	00 0c       	CC = R0 == 0x0;
    14ae:	0c 1c       	IF CC JUMP 0x14c6 <_mDNS_AddDNSServer+0x6a> (BP);
    14b0:	32 b1       	[SP + 0x10] = R2;
    14b2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x808(2056) */
    14b6:	f7 b0       	[SP + 0xc] = R7;
    14b8:	75 b1       	[SP + 0x14] = R5;
    14ba:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    14bc:	01 e1 54 08 	R1.L = 0x854;		/* (2132)	R1=0x854(2132) */
    14c0:	14 30       	R2 = R4;
    14c2:	ff e3 9f f5 	CALL 0x0 <_FlushAddressCacheRecords>;
    14c6:	00 00       	NOP;
    14c8:	18 a3       	R0 = [P3 + 0x30];
    14ca:	08 30       	R1 = R0;
    14cc:	da a2       	R2 = [P3 + 0x2c];
    14ce:	09 64       	R1 += 0x1;		/* (  1) */
    14d0:	0a 08       	CC = R2 == R1;
    14d2:	09 18       	IF CC JUMP 0x14e4 <_mDNS_AddDNSServer+0x88>;
    14d4:	f0 b0       	[SP + 0xc] = R0;
    14d6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x854(2132) */
    14da:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    14dc:	01 e1 98 08 	R1.L = 0x898;		/* (2200)	R1=0x898(2200) */
    14e0:	ff e3 90 f5 	CALL 0x0 <_FlushAddressCacheRecords>;
    14e4:	2d e1 f4 1f 	P5 = 0x1ff4 (X);		/*		P5=0x1ff4(8180) */
    14e8:	70 e4 26 00 	R0 = W[SP + 0x4c] (Z);
    14ec:	6b 5b       	P5 = P3 + P5;
    14ee:	04 68       	P4 = 0x0 (X);		/*		P4=0x0(  0) */
    14f0:	38 32       	FP = R0;
    14f2:	2a 20       	JUMP.S 0x1546 <_mDNS_AddDNSServer+0xea>;
    14f4:	00 00       	NOP;
    14f6:	10 e4 4c 00 	R0 = [P2 + 0x130];
    14fa:	28 08       	CC = R0 == R5;
    14fc:	23 14       	IF !CC JUMP 0x1542 <_mDNS_AddDNSServer+0xe6> (BP);
    14fe:	50 a0       	R0 = [P2 + 0x4];
    1500:	30 08       	CC = R0 == R6;
    1502:	20 14       	IF !CC JUMP 0x1542 <_mDNS_AddDNSServer+0xe6> (BP);
    1504:	50 a2       	R0 = [P2 + 0x24];
    1506:	18 0c       	CC = R0 == 0x3;
    1508:	1d 18       	IF CC JUMP 0x1542 <_mDNS_AddDNSServer+0xe6>;
    150a:	42 30       	R0 = P2;
    150c:	40 64       	R0 += 0x8;		/* (  8) */
    150e:	0c 30       	R1 = R4;
    1510:	ff e3 78 f5 	CALL 0x0 <_FlushAddressCacheRecords>;
    1514:	00 0c       	CC = R0 == 0x0;
    1516:	16 1c       	IF CC JUMP 0x1542 <_mDNS_AddDNSServer+0xe6> (BP);
    1518:	6a 91       	P2 = [P5];
    151a:	4f 30       	R1 = FP;
    151c:	90 a7       	R0 = W[P2 + 0x1c] (Z);
    151e:	08 08       	CC = R0 == R1;
    1520:	11 14       	IF !CC JUMP 0x1542 <_mDNS_AddDNSServer+0xe6> (BP);
    1522:	42 30       	R0 = P2;
    1524:	60 65       	R0 += 0x2c;		/* ( 44) */
    1526:	0f 30       	R1 = R7;
    1528:	ff e3 6c f5 	CALL 0x0 <_FlushAddressCacheRecords>;
    152c:	00 0c       	CC = R0 == 0x0;
    152e:	0a 1c       	IF CC JUMP 0x1542 <_mDNS_AddDNSServer+0xe6> (BP);
    1530:	6c 91       	P4 = [P5];
    1532:	02 68       	P2 = 0x0 (X);		/*		P2=0x0(  0) */
    1534:	20 a2       	R0 = [P4 + 0x20];
    1536:	00 4c       	BITCLR (R0, 0x0);		/* bit  0 */
    1538:	20 b2       	[P4 + 0x20] = R0;
    153a:	20 91       	R0 = [P4];
    153c:	28 93       	[P5] = R0;
    153e:	62 93       	[P4] = P2;
    1540:	03 20       	JUMP.S 0x1546 <_mDNS_AddDNSServer+0xea>;
    1542:	00 00       	NOP;
    1544:	6d 91       	P5 = [P5];
    1546:	6a 91       	P2 = [P5];
    1548:	42 0c       	CC = P2 == 0x0;
    154a:	d5 17       	IF !CC JUMP 0x14f4 <_mDNS_AddDNSServer+0x98> (BP);
    154c:	44 0c       	CC = P4 == 0x0;
    154e:	03 18       	IF CC JUMP 0x1554 <_mDNS_AddDNSServer+0xf8>;
    1550:	6c 93       	[P5] = P4;
    1552:	55 20       	JUMP.S 0x15fc <_mDNS_AddDNSServer+0x1a0>;
    1554:	20 e1 3c 01 	R0 = 0x13c (X);		/*		R0=0x13c(316) */
    1558:	ff e3 54 f5 	CALL 0x0 <_FlushAddressCacheRecords>;
    155c:	28 93       	[P5] = R0;
    155e:	00 0c       	CC = R0 == 0x0;
    1560:	08 14       	IF !CC JUMP 0x1570 <_mDNS_AddDNSServer+0x114> (BP);
    1562:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x898(2200) */
    1566:	01 e1 e0 08 	R1.L = 0x8e0;		/* (2272)	R1=0x8e0(2272) */
    156a:	ff e3 4b f5 	CALL 0x0 <_FlushAddressCacheRecords>;
    156e:	47 20       	JUMP.S 0x15fc <_mDNS_AddDNSServer+0x1a0>;
    1570:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    1574:	0a e1 08 00 	P2.L = 0x8;		/* (  8)	P2=0x8 */
    1578:	50 99       	R0 = B[P2] (X);
    157a:	08 64       	R0 += 0x1;		/* (  1) */
    157c:	10 9b       	B[P2] = R0;
    157e:	6a 91       	P2 = [P5];
    1580:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
    1582:	0c 30       	R1 = R4;
    1584:	42 30       	R0 = P2;
    1586:	15 e6 4c 00 	[P2 + 0x130] = R5;
    158a:	56 b0       	[P2 + 0x4] = R6;
    158c:	40 64       	R0 += 0x8;		/* (  8) */
    158e:	ff e3 39 f5 	CALL 0x0 <_FlushAddressCacheRecords>;
    1592:	6a 91       	P2 = [P5];
    1594:	70 e5 26 00 	R0 = W[SP + 0x4c] (X);
    1598:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x100 */
    159c:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_FlushAddressCacheRecords> */
    15a0:	90 b7       	W[P2 + 0x1c] = R0;
    15a2:	6a 91       	P2 = [P5];
    15a4:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    15a6:	10 b2       	[P2 + 0x20] = R0;
    15a8:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    15aa:	50 b2       	[P2 + 0x24] = R0;
    15ac:	08 91       	R0 = [P1];
    15ae:	82 c6 10 82 	R1 = R0 << 0x2;
    15b2:	08 52       	R0 = R0 - R1;
    15b4:	19 e4 37 00 	R1 = [P3 + 0xdc];
    15b8:	08 50       	R0 = R0 + R1;
    15ba:	90 b2       	[P2 + 0x28] = R0;
    15bc:	30 e4 15 00 	R0 = [SP + 0x54];
    15c0:	10 e6 4d 00 	[P2 + 0x134] = R0;
    15c4:	30 e4 16 00 	R0 = [SP + 0x58];
    15c8:	10 e6 4e 00 	[P2 + 0x138] = R0;
    15cc:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    15d0:	4f 50       	R1 = R7 + R1;
    15d2:	07 30       	R0 = R7;
    15d4:	ff e3 16 f5 	CALL 0x0 <_FlushAddressCacheRecords>;
    15d8:	c2 42       	R2 = R0.L (Z);
    15da:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    15de:	0a 0a       	CC = R2 <= R1 (IU);
    15e0:	6a 91       	P2 = [P5];
    15e2:	07 14       	IF !CC JUMP 0x15f0 <_mDNS_AddDNSServer+0x194> (BP);
    15e4:	42 30       	R0 = P2;
    15e6:	60 65       	R0 += 0x2c;		/* ( 44) */
    15e8:	0f 30       	R1 = R7;
    15ea:	ff e3 0b f5 	CALL 0x0 <_FlushAddressCacheRecords>;
    15ee:	04 20       	JUMP.S 0x15f6 <_mDNS_AddDNSServer+0x19a>;
    15f0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    15f2:	90 e6 2c 00 	B[P2 + 0x2c] = R0;
    15f6:	6a 91       	P2 = [P5];
    15f8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    15fa:	10 93       	[P2] = R0;
    15fc:	28 91       	R0 = [P5];
    15fe:	10 32       	P2 = R0;
    1600:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    1602:	11 e6 4b 00 	[P2 + 0x12c] = R1;
    1606:	c6 6c       	SP += 0x18;		/* ( 24) */
    1608:	77 90       	FP = [SP++];
    160a:	27 01       	RETS = [SP++];
    160c:	a3 05       	(R7:4, P5:3) = [SP++];
    160e:	10 00       	RTS;

00001610 <_PenalizeDNSServer>:
_PenalizeDNSServer():
    1610:	fb 05       	[--SP] = (R7:7, P5:3);
    1612:	20 32       	P4 = R0;
    1614:	29 32       	P5 = R1;
    1616:	00 e8 09 00 	LINK 0x24;		/* (36) */
    161a:	20 a3       	R0 = [P4 + 0x30];
    161c:	08 30       	R1 = R0;
    161e:	e2 a2       	R2 = [P4 + 0x2c];
    1620:	09 64       	R1 += 0x1;		/* (  1) */
    1622:	2f e5 32 00 	FP = [P5 + 0xc8];
    1626:	0a 08       	CC = R2 == R1;
    1628:	09 18       	IF CC JUMP 0x163a <_PenalizeDNSServer+0x2a>;
    162a:	f0 b0       	[SP + 0xc] = R0;
    162c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_FlushAddressCacheRecords>(  0) */
    1630:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1632:	01 e1 04 09 	R1.L = 0x904;		/* (2308)	R1=0x904(2308) */
    1636:	ff e3 e5 f4 	CALL 0x0 <_FlushAddressCacheRecords>;
    163a:	2b e5 32 00 	P3 = [P5 + 0xc8];
    163e:	43 0c       	CC = P3 == 0x0;
    1640:	15 14       	IF !CC JUMP 0x166a <_PenalizeDNSServer+0x5a> (BP);
    1642:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    1646:	ff e3 dd f4 	CALL 0x0 <_FlushAddressCacheRecords>;
    164a:	f0 b0       	[SP + 0xc] = R0;
    164c:	a8 e4 d8 00 	R0 = B[P5 + 0xd8] (Z);
    1650:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    1654:	95 5a       	P2 = P5 + P2;
    1656:	30 b1       	[SP + 0x10] = R0;
    1658:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x904(2308) */
    165c:	52 30       	R2 = P2;
    165e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1660:	01 e1 4c 09 	R1.L = 0x94c;		/* (2380)	R1=0x94c(2380) */
    1664:	ff e3 ce f4 	CALL 0x0 <_FlushAddressCacheRecords>;
    1668:	74 20       	JUMP.S 0x1750 <_PenalizeDNSServer+0x140>;
    166a:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    166e:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    1672:	10 91       	R0 = [P2];
    1674:	00 0c       	CC = R0 == 0x0;
    1676:	20 1c       	IF CC JUMP 0x16b6 <_PenalizeDNSServer+0xa6> (BP);
    1678:	9f e4 1c 00 	R7 = B[P3 + 0x1c] (Z);
    167c:	98 e4 1d 00 	R0 = B[P3 + 0x1d] (Z);
    1680:	47 4f       	R7 <<= 0x8;
    1682:	f8 57       	R7 = R0 | R7;
    1684:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    1688:	ff e3 bc f4 	CALL 0x0 <_FlushAddressCacheRecords>;
    168c:	f0 b1       	[SP + 0x1c] = R0;
    168e:	53 30       	R2 = P3;
    1690:	28 e4 92 00 	R0 = [P5 + 0x248];
    1694:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    1698:	63 6d       	P3 += 0x2c;		/* ( 44) */
    169a:	95 5a       	P2 = P5 + P2;
    169c:	30 b2       	[SP + 0x20] = R0;
    169e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x94c(2380) */
    16a2:	42 64       	R2 += 0x8;		/* (  8) */
    16a4:	f7 b0       	[SP + 0xc] = R7;
    16a6:	33 bd       	[SP + 0x10] = P3;
    16a8:	75 bd       	[SP + 0x14] = P5;
    16aa:	b2 bd       	[SP + 0x18] = P2;
    16ac:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    16ae:	01 e1 88 09 	R1.L = 0x988;		/* (2440)	R1=0x988(2440) */
    16b2:	ff e3 a7 f4 	CALL 0x0 <_FlushAddressCacheRecords>;
    16b6:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    16ba:	0a e1 04 00 	P2.L = 0x4;		/* (  4)	P2=0x4 */
    16be:	10 91       	R0 = [P2];
    16c0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x4 */
    16c4:	00 0c       	CC = R0 == 0x0;
    16c6:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    16ca:	39 14       	IF !CC JUMP 0x173c <_PenalizeDNSServer+0x12c> (BP);
    16cc:	10 91       	R0 = [P2];
    16ce:	00 0c       	CC = R0 == 0x0;
    16d0:	08 1c       	IF CC JUMP 0x16e0 <_PenalizeDNSServer+0xd0> (BP);
    16d2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x988(2440) */
    16d6:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    16d8:	01 e1 f8 09 	R1.L = 0x9f8;		/* (2552)	R1=0x9f8(2552) */
    16dc:	ff e3 92 f4 	CALL 0x0 <_FlushAddressCacheRecords>;
    16e0:	60 60       	R0 = 0xc (X);		/*		R0=0xc( 12) */
    16e2:	6a e4 1a 01 	R2 = W[P5 + 0x234] (Z);
    16e6:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    16ea:	02 08       	CC = R2 == R0;
    16ec:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    16f0:	0a 14       	IF !CC JUMP 0x1704 <_PenalizeDNSServer+0xf4> (BP);
    16f2:	10 91       	R0 = [P2];
    16f4:	00 0c       	CC = R0 == 0x0;
    16f6:	2d 1c       	IF CC JUMP 0x1750 <_PenalizeDNSServer+0x140> (BP);
    16f8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x9f8(2552) */
    16fc:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    16fe:	01 e1 2c 0a 	R1.L = 0xa2c;		/* (2604)	R1=0xa2c(2604) */
    1702:	25 20       	JUMP.S 0x174c <_PenalizeDNSServer+0x13c>;
    1704:	10 91       	R0 = [P2];
    1706:	00 0c       	CC = R0 == 0x0;
    1708:	08 1c       	IF CC JUMP 0x1718 <_PenalizeDNSServer+0x108> (BP);
    170a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xa2c(2604) */
    170e:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    1710:	01 e1 5c 0a 	R1.L = 0xa5c;		/* (2652)	R1=0xa5c(2652) */
    1714:	ff e3 76 f4 	CALL 0x0 <_FlushAddressCacheRecords>;
    1718:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x0 <_FlushAddressCacheRecords> */
    171c:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_FlushAddressCacheRecords> */
    1720:	09 91       	R1 = [P1];
    1722:	e0 61       	R0 = 0x3c (X);		/*		R0=0x3c( 60) */
    1724:	c8 40       	R0 *= R1;
    1726:	21 e4 37 00 	R1 = [P4 + 0xdc];
    172a:	2a e5 32 00 	P2 = [P5 + 0xc8];
    172e:	08 50       	R0 = R0 + R1;
    1730:	00 0c       	CC = R0 == 0x0;
    1732:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    1734:	01 07       	IF CC R0 = R1;
    1736:	10 e6 4b 00 	[P2 + 0x12c] = R0;
    173a:	0b 20       	JUMP.S 0x1750 <_PenalizeDNSServer+0x140>;
    173c:	10 91       	R0 = [P2];
    173e:	00 0c       	CC = R0 == 0x0;
    1740:	08 1c       	IF CC JUMP 0x1750 <_PenalizeDNSServer+0x140> (BP);
    1742:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1(  1) */
    1746:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    1748:	01 e1 8c 0a 	R1.L = 0xa8c;		/* (2700)	R1=0xa8c(2700) */
    174c:	ff e3 5a f4 	CALL 0x0 <_FlushAddressCacheRecords>;
    1750:	44 30       	R0 = P4;
    1752:	4d 30       	R1 = P5;
    1754:	ff e3 56 f4 	CALL 0x0 <_FlushAddressCacheRecords>;
    1758:	18 32       	P3 = R0;
    175a:	7b 08       	CC = P3 == FP;
    175c:	1e 14       	IF !CC JUMP 0x1798 <_PenalizeDNSServer+0x188> (BP);
    175e:	43 0c       	CC = P3 == 0x0;
    1760:	12 1c       	IF CC JUMP 0x1784 <_PenalizeDNSServer+0x174> (BP);
    1762:	10 30       	R2 = R0;
    1764:	42 64       	R2 += 0x8;		/* (  8) */
    1766:	98 e4 1c 00 	R0 = B[P3 + 0x1c] (Z);
    176a:	99 e4 1d 00 	R1 = B[P3 + 0x1d] (Z);
    176e:	40 4f       	R0 <<= 0x8;
    1770:	01 56       	R0 = R1 | R0;
    1772:	f0 b0       	[SP + 0xc] = R0;
    1774:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xa8c(2700) */
    1778:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    177a:	01 e1 c0 0a 	R1.L = 0xac0;		/* (2752)	R1=0xac0(2752) */
    177e:	ff e3 41 f4 	CALL 0x0 <_FlushAddressCacheRecords>;
    1782:	08 20       	JUMP.S 0x1792 <_PenalizeDNSServer+0x182>;
    1784:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xac0(2752) */
    1788:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    178a:	01 e1 10 0b 	R1.L = 0xb10;		/* (2832)	R1=0xb10(2832) */
    178e:	ff e3 39 f4 	CALL 0x0 <_FlushAddressCacheRecords>;
    1792:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1794:	28 b1       	[P5 + 0x10] = R0;
    1796:	5e 20       	JUMP.S 0x1852 <_PenalizeDNSServer+0x242>;
    1798:	44 30       	R0 = P4;
    179a:	4d 30       	R1 = P5;
    179c:	53 30       	R2 = P3;
    179e:	ff e3 31 f4 	CALL 0x0 <_FlushAddressCacheRecords>;
    17a2:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    17a6:	43 0c       	CC = P3 == 0x0;
    17a8:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    17ac:	3a 18       	IF CC JUMP 0x1820 <_PenalizeDNSServer+0x210>;
    17ae:	10 91       	R0 = [P2];
    17b0:	00 0c       	CC = R0 == 0x0;
    17b2:	1f 1c       	IF CC JUMP 0x17f0 <_PenalizeDNSServer+0x1e0> (BP);
    17b4:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    17b8:	ff e3 24 f4 	CALL 0x0 <_FlushAddressCacheRecords>;
    17bc:	2a e5 32 00 	P2 = [P5 + 0xc8];
    17c0:	f0 b0       	[SP + 0xc] = R0;
    17c2:	29 e1 34 01 	P1 = 0x134 (X);		/*		P1=0x134(308) */
    17c6:	4d 5a       	P1 = P5 + P1;
    17c8:	42 30       	R0 = P2;
    17ca:	40 64       	R0 += 0x8;		/* (  8) */
    17cc:	30 b1       	[SP + 0x10] = R0;
    17ce:	90 e4 1c 00 	R0 = B[P2 + 0x1c] (Z);
    17d2:	91 e4 1d 00 	R1 = B[P2 + 0x1d] (Z);
    17d6:	40 4f       	R0 <<= 0x8;
    17d8:	01 56       	R0 = R1 | R0;
    17da:	70 b1       	[SP + 0x14] = R0;
    17dc:	62 6d       	P2 += 0x2c;		/* ( 44) */
    17de:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xb10(2832) */
    17e2:	51 30       	R2 = P1;
    17e4:	b2 bd       	[SP + 0x18] = P2;
    17e6:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    17e8:	01 e1 60 0b 	R1.L = 0xb60;		/* (2912)	R1=0xb60(2912) */
    17ec:	ff e3 0a f4 	CALL 0x0 <_FlushAddressCacheRecords>;
    17f0:	00 00       	NOP;
    17f2:	68 e4 6b 00 	R0 = W[P5 + 0xd6] (Z);
    17f6:	00 0c       	CC = R0 == 0x0;
    17f8:	2a 14       	IF !CC JUMP 0x184c <_PenalizeDNSServer+0x23c> (BP);
    17fa:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    17fe:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    1802:	10 91       	R0 = [P2];
    1804:	19 60       	R1 = 0x3 (X);		/*		R1=0x3(  3) */
    1806:	10 64       	R0 += 0x2;		/* (  2) */
    1808:	ff e3 fc f3 	CALL 0x0 <_FlushAddressCacheRecords>;
    180c:	21 e4 37 00 	R1 = [P4 + 0xdc];
    1810:	28 b1       	[P5 + 0x10] = R0;
    1812:	01 52       	R0 = R1 - R0;
    1814:	e8 b0       	[P5 + 0xc] = R0;
    1816:	44 30       	R0 = P4;
    1818:	4d 30       	R1 = P5;
    181a:	ff e3 f3 f3 	CALL 0x0 <_FlushAddressCacheRecords>;
    181e:	17 20       	JUMP.S 0x184c <_PenalizeDNSServer+0x23c>;
    1820:	10 91       	R0 = [P2];
    1822:	00 0c       	CC = R0 == 0x0;
    1824:	14 1c       	IF CC JUMP 0x184c <_PenalizeDNSServer+0x23c> (BP);
    1826:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    182a:	ff e3 eb f3 	CALL 0x0 <_FlushAddressCacheRecords>;
    182e:	30 b1       	[SP + 0x10] = R0;
    1830:	28 a1       	R0 = [P5 + 0x10];
    1832:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    1836:	95 5a       	P2 = P5 + P2;
    1838:	70 b1       	[SP + 0x14] = R0;
    183a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3(  3) */
    183e:	f2 bc       	[SP + 0xc] = P2;
    1840:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    1842:	01 e1 a4 0b 	R1.L = 0xba4;		/* (2980)	R1=0xba4(2980) */
    1846:	55 30       	R2 = P5;
    1848:	ff e3 dc f3 	CALL 0x0 <_FlushAddressCacheRecords>;
    184c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    184e:	a8 e6 d8 00 	B[P5 + 0xd8] = R0;
    1852:	26 6d       	SP += 0x24;		/* ( 36) */
    1854:	77 90       	FP = [SP++];
    1856:	27 01       	RETS = [SP++];
    1858:	bb 05       	(R7:7, P5:3) = [SP++];
    185a:	10 00       	RTS;

0000185c <_GetAuthInfoForName_internal>:
_GetAuthInfoForName_internal():
    185c:	e3 05       	[--SP] = (R7:4, P5:3);
    185e:	18 32       	P3 = R0;
    1860:	00 e8 05 00 	LINK 0x14;		/* (20) */
    1864:	31 b1       	[SP + 0x10] = R1;
    1866:	2a e1 38 20 	P2 = 0x2038 (X);		/*		P2=0x2038(8248) */
    186a:	18 a3       	R0 = [P3 + 0x30];
    186c:	08 30       	R1 = R0;
    186e:	93 5a       	P2 = P3 + P2;
    1870:	da a2       	R2 = [P3 + 0x2c];
    1872:	09 64       	R1 += 0x1;		/* (  1) */
    1874:	7a 30       	R7 = P2;
    1876:	0a 08       	CC = R2 == R1;
    1878:	09 18       	IF CC JUMP 0x188a <_GetAuthInfoForName_internal+0x2e>;
    187a:	f0 b0       	[SP + 0xc] = R0;
    187c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xba4(2980) */
    1880:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1882:	01 e1 f0 0b 	R1.L = 0xbf0;		/* (3056)	R1=0xbf0(3056) */
    1886:	ff e3 bd f3 	CALL 0x0 <_FlushAddressCacheRecords>;
    188a:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0x650(1616) */
    188e:	3f 32       	FP = R7;
    1890:	06 e1 00 00 	R6.L = 0x0;		/* (  0)	R6=0x0 <_FlushAddressCacheRecords>(  0) */
    1894:	25 e1 34 01 	R5 = 0x134 (X);		/*		R5=0x134(308) */
    1898:	24 e1 8c 11 	R4 = 0x118c (X);		/*		R4=0x118c(4492) */
    189c:	49 20       	JUMP.S 0x192e <_GetAuthInfoForName_internal+0xd2>;
    189e:	00 00       	NOP;
    18a0:	68 a0       	R0 = [P5 + 0x4];
    18a2:	00 0c       	CC = R0 == 0x0;
    18a4:	44 1c       	IF CC JUMP 0x192c <_GetAuthInfoForName_internal+0xd0> (BP);
    18a6:	19 e4 37 00 	R1 = [P3 + 0xdc];
    18aa:	01 52       	R0 = R1 - R0;
    18ac:	80 0c       	CC = R0 < 0x0;
    18ae:	3f 1c       	IF CC JUMP 0x192c <_GetAuthInfoForName_internal+0xd0> (BP);
    18b0:	a8 e4 10 00 	R0 = B[P5 + 0x10] (Z);
    18b4:	00 0c       	CC = R0 == 0x0;
    18b6:	3b 14       	IF !CC JUMP 0x192c <_GetAuthInfoForName_internal+0xd0> (BP);
    18b8:	a8 e4 f8 06 	R0 = B[P5 + 0x6f8] (Z);
    18bc:	00 0c       	CC = R0 == 0x0;
    18be:	37 14       	IF !CC JUMP 0x192c <_GetAuthInfoForName_internal+0xd0> (BP);
    18c0:	a8 e4 6c 0a 	R0 = B[P5 + 0xa6c] (Z);
    18c4:	00 0c       	CC = R0 == 0x0;
    18c6:	33 14       	IF !CC JUMP 0x192c <_GetAuthInfoForName_internal+0xd0> (BP);
    18c8:	a8 e4 e0 0d 	R0 = B[P5 + 0xde0] (Z);
    18cc:	00 0c       	CC = R0 == 0x0;
    18ce:	2f 14       	IF !CC JUMP 0x192c <_GetAuthInfoForName_internal+0xd0> (BP);
    18d0:	0e 32       	P1 = R6;
    18d2:	08 91       	R0 = [P1];
    18d4:	00 0c       	CC = R0 == 0x0;
    18d6:	0e 1c       	IF CC JUMP 0x18f2 <_GetAuthInfoForName_internal+0x96> (BP);
    18d8:	45 30       	R0 = P5;
    18da:	29 e1 8c 12 	P1 = 0x128c (X);		/*		P1=0x128c(4748) */
    18de:	a0 50       	R2 = R0 + R4;
    18e0:	8d 5a       	P2 = P5 + P1;
    18e2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xbf0(3056) */
    18e6:	f2 bc       	[SP + 0xc] = P2;
    18e8:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    18ea:	01 e1 44 0c 	R1.L = 0xc44;		/* (3140)	R1=0xc44(3140) */
    18ee:	ff e3 89 f3 	CALL 0x0 <_FlushAddressCacheRecords>;
    18f2:	00 00       	NOP;
    18f4:	28 91       	R0 = [P5];
    18f6:	38 93       	[FP] = R0;
    18f8:	1c e5 4c 00 	P4 = [P3 + 0x130];
    18fc:	0d 20       	JUMP.S 0x1916 <_GetAuthInfoForName_internal+0xba>;
    18fe:	4d 30       	R1 = P5;
    1900:	60 a3       	R0 = [P4 + 0x34];
    1902:	08 08       	CC = R0 == R1;
    1904:	07 14       	IF !CC JUMP 0x1912 <_GetAuthInfoForName_internal+0xb6> (BP);
    1906:	44 30       	R0 = P4;
    1908:	68 50       	R1 = R0 + R5;
    190a:	07 30       	R0 = R7;
    190c:	ff e3 86 fd 	CALL 0x1418 <_GetAuthInfoForName_direct.clone.1>;
    1910:	60 b3       	[P4 + 0x34] = R0;
    1912:	00 00       	NOP;
    1914:	64 91       	P4 = [P4];
    1916:	44 0c       	CC = P4 == 0x0;
    1918:	f3 17       	IF !CC JUMP 0x18fe <_GetAuthInfoForName_internal+0xa2> (BP);
    191a:	45 30       	R0 = P5;
    191c:	21 e1 30 15 	R1 = 0x1530 (X);		/*		R1=0x1530(5424) */
    1920:	ff e3 70 f3 	CALL 0x0 <_FlushAddressCacheRecords>;
    1924:	45 30       	R0 = P5;
    1926:	ff e3 6d f3 	CALL 0x0 <_FlushAddressCacheRecords>;
    192a:	02 20       	JUMP.S 0x192e <_GetAuthInfoForName_internal+0xd2>;
    192c:	7d 32       	FP = P5;
    192e:	7d 91       	P5 = [FP];
    1930:	45 0c       	CC = P5 == 0x0;
    1932:	b6 17       	IF !CC JUMP 0x189e <_GetAuthInfoForName_internal+0x42> (BP);
    1934:	31 a1       	R1 = [SP + 0x10];
    1936:	a6 6c       	SP += 0x14;		/* ( 20) */
    1938:	77 90       	FP = [SP++];
    193a:	07 30       	R0 = R7;
    193c:	27 01       	RETS = [SP++];
    193e:	a3 05       	(R7:4, P5:3) = [SP++];
    1940:	ff e2 6c fd 	JUMP.L 0x1418 <_GetAuthInfoForName_direct.clone.1>;

00001944 <_IsRecordMergeable>:
_IsRecordMergeable():
    1944:	fc 05       	[--SP] = (R7:7, P5:4);
    1946:	29 32       	P5 = R1;
    1948:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x2038 */
    194c:	20 32       	P4 = R0;
    194e:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    1952:	67 01       	[--SP] = RETS;
    1954:	e9 a1       	R1 = [P5 + 0x1c];
    1956:	10 91       	R0 = [P2];
    1958:	a6 6f       	SP += -0xc;		/* (-12) */
    195a:	3a 30       	R7 = R2;
    195c:	01 08       	CC = R1 == R0;
    195e:	45 14       	IF !CC JUMP 0x19e8 <_IsRecordMergeable+0xa4> (BP);
    1960:	a8 e4 46 00 	R0 = B[P5 + 0x46] (Z);
    1964:	00 0c       	CC = R0 == 0x0;
    1966:	41 14       	IF !CC JUMP 0x19e8 <_IsRecordMergeable+0xa4> (BP);
    1968:	28 a2       	R0 = [P5 + 0x20];
    196a:	ff e3 4b f3 	CALL 0x0 <_FlushAddressCacheRecords>;
    196e:	00 0c       	CC = R0 == 0x0;
    1970:	3c 14       	IF !CC JUMP 0x19e8 <_IsRecordMergeable+0xa4> (BP);
    1972:	29 e4 2f 00 	R1 = [P5 + 0xbc];
    1976:	28 e4 30 00 	R0 = [P5 + 0xc0];
    197a:	01 50       	R0 = R1 + R0;
    197c:	f8 53       	R7 = R0 - R7;
    197e:	07 0d       	CC = R7 <= 0x0;
    1980:	34 14       	IF !CC JUMP 0x19e8 <_IsRecordMergeable+0xa4> (BP);
    1982:	29 e4 3e 00 	R1 = [P5 + 0xf8];
    1986:	01 0c       	CC = R1 == 0x0;
    1988:	30 18       	IF CC JUMP 0x19e8 <_IsRecordMergeable+0xa4>;
    198a:	44 30       	R0 = P4;
    198c:	ff e3 68 ff 	CALL 0x185c <_GetAuthInfoForName_internal>;
    1990:	10 32       	P2 = R0;
    1992:	42 0c       	CC = P2 == 0x0;
    1994:	09 1c       	IF CC JUMP 0x19a6 <_IsRecordMergeable+0x62> (BP);
    1996:	50 a0       	R0 = [P2 + 0x4];
    1998:	00 0c       	CC = R0 == 0x0;
    199a:	06 1c       	IF CC JUMP 0x19a6 <_IsRecordMergeable+0x62> (BP);
    199c:	21 e4 37 00 	R1 = [P4 + 0xdc];
    19a0:	01 52       	R0 = R1 - R0;
    19a2:	80 0c       	CC = R0 < 0x0;
    19a4:	22 14       	IF !CC JUMP 0x19e8 <_IsRecordMergeable+0xa4> (BP);
    19a6:	00 00       	NOP;
    19a8:	28 e4 39 00 	R0 = [P5 + 0xe4];
    19ac:	18 0c       	CC = R0 == 0x3;
    19ae:	0b 18       	IF CC JUMP 0x19c4 <_IsRecordMergeable+0x80>;
    19b0:	08 0c       	CC = R0 == 0x1;
    19b2:	09 18       	IF CC JUMP 0x19c4 <_IsRecordMergeable+0x80>;
    19b4:	10 0c       	CC = R0 == 0x2;
    19b6:	07 18       	IF CC JUMP 0x19c4 <_IsRecordMergeable+0x80>;
    19b8:	29 60       	R1 = 0x5 (X);		/*		R1=0x5(  5) */
    19ba:	08 08       	CC = R0 == R1;
    19bc:	04 18       	IF CC JUMP 0x19c4 <_IsRecordMergeable+0x80>;
    19be:	39 60       	R1 = 0x7 (X);		/*		R1=0x7(  7) */
    19c0:	08 08       	CC = R0 == R1;
    19c2:	13 14       	IF !CC JUMP 0x19e8 <_IsRecordMergeable+0xa4> (BP);
    19c4:	2a e5 3f 00 	P2 = [P5 + 0xfc];
    19c8:	42 0c       	CC = P2 == 0x0;
    19ca:	0f 1c       	IF CC JUMP 0x19e8 <_IsRecordMergeable+0xa4> (BP);
    19cc:	10 e4 c4 00 	R0 = [P2 + 0x310];
    19d0:	00 0c       	CC = R0 == 0x0;
    19d2:	0b 1c       	IF CC JUMP 0x19e8 <_IsRecordMergeable+0xa4> (BP);
    19d4:	28 e4 3a 00 	R0 = [P5 + 0xe8];
    19d8:	00 0c       	CC = R0 == 0x0;
    19da:	07 1c       	IF CC JUMP 0x19e8 <_IsRecordMergeable+0xa4> (BP);
    19dc:	28 e4 51 00 	R0 = [P5 + 0x144];
    19e0:	08 0c       	CC = R0 == 0x1;
    19e2:	00 02       	R0 = CC;
    19e4:	00 4b       	BITTGL (R0, 0x0);		/* bit  0 */
    19e6:	02 20       	JUMP.S 0x19ea <_IsRecordMergeable+0xa6>;
    19e8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    19ea:	66 6c       	SP += 0xc;		/* ( 12) */
    19ec:	27 01       	RETS = [SP++];
    19ee:	bc 05       	(R7:7, P5:4) = [SP++];
    19f0:	10 00       	RTS;
	...

000019f4 <_AreRecordsMergeable>:
_AreRecordsMergeable():
    19f4:	c4 04       	[--SP] = (P5:4);
    19f6:	67 01       	[--SP] = RETS;
    19f8:	21 32       	P4 = R1;
    19fa:	a6 6f       	SP += -0xc;		/* (-12) */
    19fc:	0a 30       	R1 = R2;
    19fe:	2a 32       	P5 = R2;
    1a00:	72 a2       	R2 = [SP + 0x24];
    1a02:	ff e3 a1 ff 	CALL 0x1944 <_IsRecordMergeable>;
    1a06:	00 0c       	CC = R0 == 0x0;
    1a08:	1a 1c       	IF CC JUMP 0x1a3c <_AreRecordsMergeable+0x48> (BP);
    1a0a:	20 e4 3e 00 	R0 = [P4 + 0xf8];
    1a0e:	29 e4 3e 00 	R1 = [P5 + 0xf8];
    1a12:	ff e3 f7 f2 	CALL 0x0 <_FlushAddressCacheRecords>;
    1a16:	00 0c       	CC = R0 == 0x0;
    1a18:	12 1c       	IF CC JUMP 0x1a3c <_AreRecordsMergeable+0x48> (BP);
    1a1a:	21 e5 3f 00 	P1 = [P4 + 0xfc];
    1a1e:	2a e5 3f 00 	P2 = [P5 + 0xfc];
    1a22:	09 e4 c4 00 	R1 = [P1 + 0x310];
    1a26:	10 e4 c4 00 	R0 = [P2 + 0x310];
    1a2a:	01 08       	CC = R1 == R0;
    1a2c:	08 14       	IF !CC JUMP 0x1a3c <_AreRecordsMergeable+0x48> (BP);
    1a2e:	50 e4 85 01 	R0 = W[P2 + 0x30a] (Z);
    1a32:	49 e4 85 01 	R1 = W[P1 + 0x30a] (Z);
    1a36:	01 08       	CC = R1 == R0;
    1a38:	00 02       	R0 = CC;
    1a3a:	02 20       	JUMP.S 0x1a3e <_AreRecordsMergeable+0x4a>;
    1a3c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1a3e:	66 6c       	SP += 0xc;		/* ( 12) */
    1a40:	27 01       	RETS = [SP++];
    1a42:	84 04       	(P5:4) = [SP++];
    1a44:	10 00       	RTS;
	...

00001a48 <_GetAuthInfoForName>:
_GetAuthInfoForName():
    1a48:	68 05       	[--SP] = (R7:5);
    1a4a:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0x0 <_FlushAddressCacheRecords>(  0) */
    1a4e:	67 01       	[--SP] = RETS;
    1a50:	29 30       	R5 = R1;
    1a52:	06 e1 84 01 	R6.L = 0x184;		/* (388)	R6=0x184(388) */
    1a56:	a6 6f       	SP += -0xc;		/* (-12) */
    1a58:	38 30       	R7 = R0;
    1a5a:	0e 30       	R1 = R6;
    1a5c:	ff e3 d2 f2 	CALL 0x0 <_FlushAddressCacheRecords>;
    1a60:	0d 30       	R1 = R5;
    1a62:	07 30       	R0 = R7;
    1a64:	ff e3 fc fe 	CALL 0x185c <_GetAuthInfoForName_internal>;
    1a68:	28 30       	R5 = R0;
    1a6a:	07 30       	R0 = R7;
    1a6c:	0e 30       	R1 = R6;
    1a6e:	ff e3 c9 f2 	CALL 0x0 <_FlushAddressCacheRecords>;
    1a72:	66 6c       	SP += 0xc;		/* ( 12) */
    1a74:	05 30       	R0 = R5;
    1a76:	27 01       	RETS = [SP++];
    1a78:	28 05       	(R7:5) = [SP++];
    1a7a:	10 00       	RTS;

00001a7c <_GetZoneData_QuestionCallback>:
_GetZoneData_QuestionCallback():
    1a7c:	fb 05       	[--SP] = (R7:7, P5:3);
    1a7e:	21 32       	P4 = R1;
    1a80:	67 01       	[--SP] = RETS;
    1a82:	66 6f       	SP += -0x14;		/* (-20) */
    1a84:	38 30       	R7 = R0;
    1a86:	70 a3       	R0 = [SP + 0x34];
    1a88:	1a 32       	P3 = R2;
    1a8a:	25 e5 98 00 	P5 = [P4 + 0x260];
    1a8e:	00 0c       	CC = R0 == 0x0;
    1a90:	64 19       	IF CC JUMP 0x1d58 <_GetZoneData_QuestionCallback+0x2dc>;
    1a92:	10 0c       	CC = R0 == 0x2;
    1a94:	04 14       	IF !CC JUMP 0x1a9c <_GetZoneData_QuestionCallback+0x20> (BP);
    1a96:	98 a5       	R0 = W[P3 + 0xc] (Z);
    1a98:	00 0c       	CC = R0 == 0x0;
    1a9a:	5f 1d       	IF CC JUMP 0x1d58 <_GetZoneData_QuestionCallback+0x2dc> (BP);
    1a9c:	00 00       	NOP;
    1a9e:	58 a4       	R0 = W[P3 + 0x2] (Z);
    1aa0:	61 e4 1a 01 	R1 = W[P4 + 0x234] (Z);
    1aa4:	08 08       	CC = R0 == R1;
    1aa6:	59 15       	IF !CC JUMP 0x1d58 <_GetZoneData_QuestionCallback+0x2dc> (BP);
    1aa8:	31 60       	R1 = 0x6 (X);		/*		R1=0x6(  6) */
    1aaa:	08 08       	CC = R0 == R1;
    1aac:	b0 14       	IF !CC JUMP 0x1c0c <_GetZoneData_QuestionCallback+0x190> (BP);
    1aae:	07 30       	R0 = R7;
    1ab0:	4c 30       	R1 = P4;
    1ab2:	ff e3 a7 f2 	CALL 0x0 <_FlushAddressCacheRecords>;
    1ab6:	20 a1       	R0 = [P4 + 0x10];
    1ab8:	38 0c       	CC = R0 == -0x1;
    1aba:	13 1c       	IF CC JUMP 0x1ae0 <_GetZoneData_QuestionCallback+0x64> (BP);
    1abc:	60 e5 1a 01 	R0 = W[P4 + 0x234] (X);
    1ac0:	ff e3 a0 f2 	CALL 0x0 <_FlushAddressCacheRecords>;
    1ac4:	f0 b0       	[SP + 0xc] = R0;
    1ac6:	20 a1       	R0 = [P4 + 0x10];
    1ac8:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    1acc:	94 5a       	P2 = P4 + P2;
    1ace:	30 b1       	[SP + 0x10] = R0;
    1ad0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x6(  6) */
    1ad4:	52 30       	R2 = P2;
    1ad6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1ad8:	01 e1 80 0c 	R1.L = 0xc80;		/* (3200)	R1=0xc80(3200) */
    1adc:	ff e3 92 f2 	CALL 0x0 <_FlushAddressCacheRecords>;
    1ae0:	00 00       	NOP;
    1ae2:	98 a5       	R0 = W[P3 + 0xc] (Z);
    1ae4:	00 0c       	CC = R0 == 0x0;
    1ae6:	37 1c       	IF CC JUMP 0x1b54 <_GetZoneData_QuestionCallback+0xd8> (BP);
    1ae8:	d8 a1       	R0 = [P3 + 0x1c];
    1aea:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    1aee:	48 50       	R1 = R0 + R1;
    1af0:	ff e3 88 f2 	CALL 0x0 <_FlushAddressCacheRecords>;
    1af4:	c2 42       	R2 = R0.L (Z);
    1af6:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    1afa:	02 0a       	CC = R2 <= R0 (IU);
    1afc:	09 14       	IF !CC JUMP 0x1b0e <_GetZoneData_QuestionCallback+0x92> (BP);
    1afe:	2a e1 08 01 	P2 = 0x108 (X);		/*		P2=0x108(264) */
    1b02:	95 5a       	P2 = P5 + P2;
    1b04:	42 30       	R0 = P2;
    1b06:	d9 a1       	R1 = [P3 + 0x1c];
    1b08:	ff e3 7c f2 	CALL 0x0 <_FlushAddressCacheRecords>;
    1b0c:	04 20       	JUMP.S 0x1b14 <_GetZoneData_QuestionCallback+0x98>;
    1b0e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1b10:	a8 e6 08 01 	B[P5 + 0x108] = R0;
    1b14:	98 a8       	R0 = W[P3 + 0x4] (X);
    1b16:	2c e1 08 01 	P4 = 0x108 (X);		/*		P4=0x108(264) */
    1b1a:	68 e6 04 01 	W[P5 + 0x208] = R0;
    1b1e:	25 5b       	P4 = P5 + P4;
    1b20:	44 30       	R0 = P4;
    1b22:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    1b26:	48 50       	R1 = R0 + R1;
    1b28:	ff e3 6c f2 	CALL 0x0 <_FlushAddressCacheRecords>;
    1b2c:	c2 42       	R2 = R0.L (Z);
    1b2e:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    1b32:	0a 0a       	CC = R2 <= R1 (IU);
    1b34:	09 14       	IF !CC JUMP 0x1b46 <_GetZoneData_QuestionCallback+0xca> (BP);
    1b36:	2a e1 60 04 	P2 = 0x460 (X);		/*		P2=0x460(1120) */
    1b3a:	95 5a       	P2 = P5 + P2;
    1b3c:	42 30       	R0 = P2;
    1b3e:	4c 30       	R1 = P4;
    1b40:	ff e3 60 f2 	CALL 0x0 <_FlushAddressCacheRecords>;
    1b44:	04 20       	JUMP.S 0x1b4c <_GetZoneData_QuestionCallback+0xd0>;
    1b46:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1b48:	a8 e6 60 04 	B[P5 + 0x460] = R0;
    1b4c:	07 30       	R0 = R7;
    1b4e:	4d 30       	R1 = P5;
    1b50:	0a 61       	R2 = 0x21 (X);		/*		R2=0x21( 33) */
    1b52:	42 20       	JUMP.S 0x1bd6 <_GetZoneData_QuestionCallback+0x15a>;
    1b54:	00 00       	NOP;
    1b56:	29 e4 41 00 	R1 = [P5 + 0x104];
    1b5a:	11 32       	P2 = R1;
    1b5c:	10 99       	R0 = B[P2] (Z);
    1b5e:	00 0c       	CC = R0 == 0x0;
    1b60:	40 1c       	IF CC JUMP 0x1be0 <_GetZoneData_QuestionCallback+0x164> (BP);
    1b62:	07 30       	R0 = R7;
    1b64:	ff e3 72 ff 	CALL 0x1a48 <_GetAuthInfoForName>;
    1b68:	10 32       	P2 = R0;
    1b6a:	42 0c       	CC = P2 == 0x0;
    1b6c:	13 1c       	IF CC JUMP 0x1b92 <_GetZoneData_QuestionCallback+0x116> (BP);
    1b6e:	90 a0       	R0 = [P2 + 0x8];
    1b70:	00 0c       	CC = R0 == 0x0;
    1b72:	10 18       	IF CC JUMP 0x1b92 <_GetZoneData_QuestionCallback+0x116>;
    1b74:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x460 */
    1b78:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    1b7c:	10 91       	R0 = [P2];
    1b7e:	00 0c       	CC = R0 == 0x0;
    1b80:	3f 1c       	IF CC JUMP 0x1bfe <_GetZoneData_QuestionCallback+0x182> (BP);
    1b82:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x100(256) */
    1b86:	2a e4 41 00 	R2 = [P5 + 0x104];
    1b8a:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    1b8c:	01 e1 cc 0c 	R1.L = 0xccc;		/* (3276)	R1=0xccc(3276) */
    1b90:	35 20       	JUMP.S 0x1bfa <_GetZoneData_QuestionCallback+0x17e>;
    1b92:	00 00       	NOP;
    1b94:	29 e4 41 00 	R1 = [P5 + 0x104];
    1b98:	11 32       	P2 = R1;
    1b9a:	10 99       	R0 = B[P2] (Z);
    1b9c:	08 64       	R0 += 0x1;		/* (  1) */
    1b9e:	01 50       	R0 = R1 + R0;
    1ba0:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    1ba4:	28 e6 41 00 	[P5 + 0x104] = R0;
    1ba8:	48 50       	R1 = R0 + R1;
    1baa:	ff e3 2b f2 	CALL 0x0 <_FlushAddressCacheRecords>;
    1bae:	c2 42       	R2 = R0.L (Z);
    1bb0:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    1bb4:	02 0a       	CC = R2 <= R0 (IU);
    1bb6:	0a 14       	IF !CC JUMP 0x1bca <_GetZoneData_QuestionCallback+0x14e> (BP);
    1bb8:	2a e1 60 04 	P2 = 0x460 (X);		/*		P2=0x460(1120) */
    1bbc:	95 5a       	P2 = P5 + P2;
    1bbe:	42 30       	R0 = P2;
    1bc0:	29 e4 41 00 	R1 = [P5 + 0x104];
    1bc4:	ff e3 1e f2 	CALL 0x0 <_FlushAddressCacheRecords>;
    1bc8:	04 20       	JUMP.S 0x1bd0 <_GetZoneData_QuestionCallback+0x154>;
    1bca:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1bcc:	a8 e6 60 04 	B[P5 + 0x460] = R0;
    1bd0:	07 30       	R0 = R7;
    1bd2:	4d 30       	R1 = P5;
    1bd4:	32 60       	R2 = 0x6 (X);		/*		R2=0x6(  6) */
    1bd6:	a6 6c       	SP += 0x14;		/* ( 20) */
    1bd8:	27 01       	RETS = [SP++];
    1bda:	bb 05       	(R7:7, P5:3) = [SP++];
    1bdc:	ff e2 42 fb 	JUMP.L 0x1260 <_GetZoneData_StartQuery>;
    1be0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x460 */
    1be4:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    1be8:	10 91       	R0 = [P2];
    1bea:	00 0c       	CC = R0 == 0x0;
    1bec:	09 1c       	IF CC JUMP 0x1bfe <_GetZoneData_QuestionCallback+0x182> (BP);
    1bee:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x100(256) */
    1bf2:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    1bf4:	01 e1 08 0d 	R1.L = 0xd08;		/* (3336)	R1=0xd08(3336) */
    1bf8:	55 30       	R2 = P5;
    1bfa:	ff e3 03 f2 	CALL 0x0 <_FlushAddressCacheRecords>;
    1bfe:	f1 63       	R1 = -0x2 (X);		/*		R1=0xfffffffe( -2) */
    1c00:	2a e5 c9 00 	P2 = [P5 + 0x324];
    1c04:	07 30       	R0 = R7;
    1c06:	41 e1 fe ff 	R1.H = 0xfffe;		/* ( -2)	R1=0xfffefffe(-65538) */
    1c0a:	a2 20       	JUMP.S 0x1d4e <_GetZoneData_QuestionCallback+0x2d2>;
    1c0c:	09 61       	R1 = 0x21 (X);		/*		R1=0x21( 33) */
    1c0e:	08 08       	CC = R0 == R1;
    1c10:	6f 14       	IF !CC JUMP 0x1cee <_GetZoneData_QuestionCallback+0x272> (BP);
    1c12:	07 30       	R0 = R7;
    1c14:	4c 30       	R1 = P4;
    1c16:	ff e3 f5 f1 	CALL 0x0 <_FlushAddressCacheRecords>;
    1c1a:	20 a1       	R0 = [P4 + 0x10];
    1c1c:	38 0c       	CC = R0 == -0x1;
    1c1e:	13 1c       	IF CC JUMP 0x1c44 <_GetZoneData_QuestionCallback+0x1c8> (BP);
    1c20:	60 e5 1a 01 	R0 = W[P4 + 0x234] (X);
    1c24:	ff e3 ee f1 	CALL 0x0 <_FlushAddressCacheRecords>;
    1c28:	f0 b0       	[SP + 0xc] = R0;
    1c2a:	20 a1       	R0 = [P4 + 0x10];
    1c2c:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    1c30:	94 5a       	P2 = P4 + P2;
    1c32:	30 b1       	[SP + 0x10] = R0;
    1c34:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x21( 33) */
    1c38:	52 30       	R2 = P2;
    1c3a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1c3c:	01 e1 80 0c 	R1.L = 0xc80;		/* (3200)	R1=0xc80(3200) */
    1c40:	ff e3 e0 f1 	CALL 0x0 <_FlushAddressCacheRecords>;
    1c44:	00 00       	NOP;
    1c46:	98 a5       	R0 = W[P3 + 0xc] (Z);
    1c48:	00 0c       	CC = R0 == 0x0;
    1c4a:	3a 1c       	IF CC JUMP 0x1cbe <_GetZoneData_QuestionCallback+0x242> (BP);
    1c4c:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    1c50:	18 a2       	R0 = [P3 + 0x20];
    1c52:	50 64       	R0 += 0xa;		/* ( 10) */
    1c54:	48 50       	R1 = R0 + R1;
    1c56:	ff e3 d5 f1 	CALL 0x0 <_FlushAddressCacheRecords>;
    1c5a:	c2 42       	R2 = R0.L (Z);
    1c5c:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    1c60:	02 0a       	CC = R2 <= R0 (IU);
    1c62:	0a 14       	IF !CC JUMP 0x1c76 <_GetZoneData_QuestionCallback+0x1fa> (BP);
    1c64:	2a e1 0a 02 	P2 = 0x20a (X);		/*		P2=0x20a(522) */
    1c68:	95 5a       	P2 = P5 + P2;
    1c6a:	19 a2       	R1 = [P3 + 0x20];
    1c6c:	42 30       	R0 = P2;
    1c6e:	51 64       	R1 += 0xa;		/* ( 10) */
    1c70:	ff e3 c8 f1 	CALL 0x0 <_FlushAddressCacheRecords>;
    1c74:	04 20       	JUMP.S 0x1c7c <_GetZoneData_QuestionCallback+0x200>;
    1c76:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1c78:	a8 e6 0a 02 	B[P5 + 0x20a] = R0;
    1c7c:	1a ae       	P2 = [P3 + 0x20];
    1c7e:	2c e1 0a 02 	P4 = 0x20a (X);		/*		P4=0x20a(522) */
    1c82:	25 5b       	P4 = P5 + P4;
    1c84:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    1c88:	10 a9       	R0 = W[P2 + 0x8] (X);
    1c8a:	68 e6 85 01 	W[P5 + 0x30a] = R0;
    1c8e:	44 30       	R0 = P4;
    1c90:	48 50       	R1 = R0 + R1;
    1c92:	ff e3 b7 f1 	CALL 0x0 <_FlushAddressCacheRecords>;
    1c96:	c2 42       	R2 = R0.L (Z);
    1c98:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    1c9c:	0a 0a       	CC = R2 <= R1 (IU);
    1c9e:	09 14       	IF !CC JUMP 0x1cb0 <_GetZoneData_QuestionCallback+0x234> (BP);
    1ca0:	2a e1 60 04 	P2 = 0x460 (X);		/*		P2=0x460(1120) */
    1ca4:	95 5a       	P2 = P5 + P2;
    1ca6:	42 30       	R0 = P2;
    1ca8:	4c 30       	R1 = P4;
    1caa:	ff e3 ab f1 	CALL 0x0 <_FlushAddressCacheRecords>;
    1cae:	04 20       	JUMP.S 0x1cb6 <_GetZoneData_QuestionCallback+0x23a>;
    1cb0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1cb2:	a8 e6 60 04 	B[P5 + 0x460] = R0;
    1cb6:	07 30       	R0 = R7;
    1cb8:	4d 30       	R1 = P5;
    1cba:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
    1cbc:	8d 2f       	JUMP.S 0x1bd6 <_GetZoneData_QuestionCallback+0x15a>;
    1cbe:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1cc0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x460 */
    1cc4:	28 e6 c8 00 	[P5 + 0x320] = R0;
    1cc8:	a8 e6 0a 02 	B[P5 + 0x20a] = R0;
    1ccc:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    1cd0:	10 95       	R0 = W[P2] (Z);
    1cd2:	2a e1 0c 03 	P2 = 0x30c (X);		/*		P2=0x30c(780) */
    1cd6:	68 e6 85 01 	W[P5 + 0x30a] = R0;
    1cda:	95 5a       	P2 = P5 + P2;
    1cdc:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x100(256) */
    1ce0:	42 30       	R0 = P2;
    1ce2:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_FlushAddressCacheRecords>(  0) */
    1ce6:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
    1ce8:	ff e3 8c f1 	CALL 0x0 <_FlushAddressCacheRecords>;
    1cec:	2d 20       	JUMP.S 0x1d46 <_GetZoneData_QuestionCallback+0x2ca>;
    1cee:	08 0c       	CC = R0 == 0x1;
    1cf0:	34 14       	IF !CC JUMP 0x1d58 <_GetZoneData_QuestionCallback+0x2dc> (BP);
    1cf2:	07 30       	R0 = R7;
    1cf4:	4c 30       	R1 = P4;
    1cf6:	ff e3 85 f1 	CALL 0x0 <_FlushAddressCacheRecords>;
    1cfa:	20 a1       	R0 = [P4 + 0x10];
    1cfc:	38 0c       	CC = R0 == -0x1;
    1cfe:	13 1c       	IF CC JUMP 0x1d24 <_GetZoneData_QuestionCallback+0x2a8> (BP);
    1d00:	60 e5 1a 01 	R0 = W[P4 + 0x234] (X);
    1d04:	ff e3 7e f1 	CALL 0x0 <_FlushAddressCacheRecords>;
    1d08:	f0 b0       	[SP + 0xc] = R0;
    1d0a:	20 a1       	R0 = [P4 + 0x10];
    1d0c:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    1d10:	94 5a       	P2 = P4 + P2;
    1d12:	30 b1       	[SP + 0x10] = R0;
    1d14:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_FlushAddressCacheRecords>(  0) */
    1d18:	52 30       	R2 = P2;
    1d1a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1d1c:	01 e1 80 0c 	R1.L = 0xc80;		/* (3200)	R1=0xc80(3200) */
    1d20:	ff e3 70 f1 	CALL 0x0 <_FlushAddressCacheRecords>;
    1d24:	20 60       	R0 = 0x4 (X);		/*		R0=0x4(  4) */
    1d26:	28 e6 c3 00 	[P5 + 0x30c] = R0;
    1d2a:	98 a5       	R0 = W[P3 + 0xc] (Z);
    1d2c:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
    1d2e:	08 08       	CC = R0 == R1;
    1d30:	04 14       	IF !CC JUMP 0x1d38 <_GetZoneData_QuestionCallback+0x2bc> (BP);
    1d32:	1a ae       	P2 = [P3 + 0x20];
    1d34:	50 a0       	R0 = [P2 + 0x4];
    1d36:	06 20       	JUMP.S 0x1d42 <_GetZoneData_QuestionCallback+0x2c6>;
    1d38:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    1d3c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    1d40:	10 91       	R0 = [P2];
    1d42:	28 e6 c4 00 	[P5 + 0x310] = R0;
    1d46:	2a e5 c9 00 	P2 = [P5 + 0x324];
    1d4a:	07 30       	R0 = R7;
    1d4c:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    1d4e:	a6 6c       	SP += 0x14;		/* ( 20) */
    1d50:	27 01       	RETS = [SP++];
    1d52:	55 30       	R2 = P5;
    1d54:	bb 05       	(R7:7, P5:3) = [SP++];
    1d56:	52 00       	JUMP (P2);
    1d58:	a6 6c       	SP += 0x14;		/* ( 20) */
    1d5a:	27 01       	RETS = [SP++];
    1d5c:	bb 05       	(R7:7, P5:3) = [SP++];
    1d5e:	10 00       	RTS;

00001d60 <_RecreateNATMappings>:
_RecreateNATMappings():
    1d60:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0x0 <_FlushAddressCacheRecords> */
    1d64:	08 32       	P1 = R0;
    1d66:	08 e1 00 00 	P0.L = 0x0;		/* (  0)	P0=0x0 <_FlushAddressCacheRecords> */
    1d6a:	01 91       	R1 = [P0];
    1d6c:	01 30       	R0 = R1;
    1d6e:	81 0c       	CC = R1 < 0x0;
    1d70:	18 64       	R0 += 0x3;		/* (  3) */
    1d72:	08 07       	IF CC R1 = R0;
    1d74:	0a e5 f0 09 	P2 = [P1 + 0x27c0];
    1d78:	11 4d       	R1 >>>= 0x2;
    1d7a:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    1d7c:	05 20       	JUMP.S 0x1d86 <_RecreateNATMappings+0x26>;
    1d7e:	52 b0       	[P2 + 0x4] = R2;
    1d80:	91 b0       	[P2 + 0x8] = R1;
    1d82:	d0 b0       	[P2 + 0xc] = R0;
    1d84:	52 91       	P2 = [P2];
    1d86:	42 0c       	CC = P2 == 0x0;
    1d88:	08 e4 37 00 	R0 = [P1 + 0xdc];
    1d8c:	f9 17       	IF !CC JUMP 0x1d7e <_RecreateNATMappings+0x1e> (BP);
    1d8e:	08 e6 40 00 	[P1 + 0x100] = R0;
    1d92:	10 00       	RTS;

00001d94 <_natTraversalHandleAddressReply>:
_natTraversalHandleAddressReply():
    1d94:	f5 05       	[--SP] = (R7:6, P5:5);
    1d96:	67 01       	[--SP] = RETS;
    1d98:	a6 6f       	SP += -0xc;		/* (-12) */
    1d9a:	72 b2       	[SP + 0x24] = R2;
    1d9c:	ca 42       	R2 = R1.L (Z);
    1d9e:	28 32       	P5 = R0;
    1da0:	39 30       	R7 = R1;
    1da2:	02 0c       	CC = R2 == 0x0;
    1da4:	16 1c       	IF CC JUMP 0x1dd0 <_natTraversalHandleAddressReply+0x3c> (BP);
    1da6:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    1daa:	0a e1 0a 00 	P2.L = 0xa;		/* ( 10)	P2=0xa */
    1dae:	10 95       	R0 = W[P2] (Z);
    1db0:	02 08       	CC = R2 == R0;
    1db2:	08 18       	IF CC JUMP 0x1dc2 <_natTraversalHandleAddressReply+0x2e>;
    1db4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_FlushAddressCacheRecords>(  0) */
    1db8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1dba:	01 e1 48 0d 	R1.L = 0xd48;		/* (3400)	R1=0xd48(3400) */
    1dbe:	ff e3 21 f1 	CALL 0x0 <_FlushAddressCacheRecords>;
    1dc2:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0xa */
    1dc6:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    1dca:	10 91       	R0 = [P2];
    1dcc:	70 b2       	[SP + 0x24] = R0;
    1dce:	24 20       	JUMP.S 0x1e16 <_natTraversalHandleAddressReply+0x82>;
    1dd0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    1dd4:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    1dd8:	10 91       	R0 = [P2];
    1dda:	00 0c       	CC = R0 == 0x0;
    1ddc:	0a 1c       	IF CC JUMP 0x1df0 <_natTraversalHandleAddressReply+0x5c> (BP);
    1dde:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xd48(3400) */
    1de2:	56 30       	R2 = SP;
    1de4:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    1de6:	01 e1 6c 0d 	R1.L = 0xd6c;		/* (3436)	R1=0xd6c(3436) */
    1dea:	22 65       	R2 += 0x24;		/* ( 36) */
    1dec:	ff e3 0a f1 	CALL 0x0 <_FlushAddressCacheRecords>;
    1df0:	76 30       	R6 = SP;
    1df2:	26 65       	R6 += 0x24;		/* ( 36) */
    1df4:	06 30       	R0 = R6;
    1df6:	ff e3 05 f1 	CALL 0x0 <_FlushAddressCacheRecords>;
    1dfa:	00 0c       	CC = R0 == 0x0;
    1dfc:	09 1c       	IF CC JUMP 0x1e0e <_natTraversalHandleAddressReply+0x7a> (BP);
    1dfe:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xd6c(3436) */
    1e02:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    1e04:	01 e1 98 0d 	R1.L = 0xd98;		/* (3480)	R1=0xd98(3480) */
    1e08:	16 30       	R2 = R6;
    1e0a:	ff e3 fb f0 	CALL 0x0 <_FlushAddressCacheRecords>;
    1e0e:	70 a2       	R0 = [SP + 0x24];
    1e10:	00 0c       	CC = R0 == 0x0;
    1e12:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    1e14:	38 07       	IF CC R7 = R0;
    1e16:	29 e4 f4 09 	R1 = [P5 + 0x27d0];
    1e1a:	70 a2       	R0 = [SP + 0x24];
    1e1c:	01 08       	CC = R1 == R0;
    1e1e:	06 18       	IF CC JUMP 0x1e2a <_natTraversalHandleAddressReply+0x96>;
    1e20:	28 e6 f4 09 	[P5 + 0x27d0] = R0;
    1e24:	45 30       	R0 = P5;
    1e26:	ff e3 9d ff 	CALL 0x1d60 <_RecreateNATMappings>;
    1e2a:	f8 42       	R0 = R7.L (Z);
    1e2c:	00 0c       	CC = R0 == 0x0;
    1e2e:	0a 14       	IF !CC JUMP 0x1e42 <_natTraversalHandleAddressReply+0xae> (BP);
    1e30:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    1e34:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    1e38:	10 91       	R0 = [P2];
    1e3a:	21 e1 84 03 	R1 = 0x384 (X);		/*		R1=0x384(900) */
    1e3e:	c8 40       	R0 *= R1;
    1e40:	12 20       	JUMP.S 0x1e64 <_natTraversalHandleAddressReply+0xd0>;
    1e42:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    1e46:	0a e1 0a 00 	P2.L = 0xa;		/* ( 10)	P2=0xa */
    1e4a:	10 95       	R0 = W[P2] (Z);
    1e4c:	00 0c       	CC = R0 == 0x0;
    1e4e:	0d 14       	IF !CC JUMP 0x1e68 <_natTraversalHandleAddressReply+0xd4> (BP);
    1e50:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0xa */
    1e54:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    1e58:	10 91       	R0 = [P2];
    1e5a:	08 30       	R1 = R0;
    1e5c:	80 0c       	CC = R0 < 0x0;
    1e5e:	19 64       	R1 += 0x3;		/* (  3) */
    1e60:	01 07       	IF CC R0 = R1;
    1e62:	10 4d       	R0 >>>= 0x2;
    1e64:	28 e6 f2 09 	[P5 + 0x27c8] = R0;
    1e68:	00 00       	NOP;
    1e6a:	28 e4 f2 09 	R0 = [P5 + 0x27c8];
    1e6e:	29 e4 37 00 	R1 = [P5 + 0xdc];
    1e72:	48 50       	R1 = R0 + R1;
    1e74:	29 e6 f3 09 	[P5 + 0x27cc] = R1;
    1e78:	29 e4 40 00 	R1 = [P5 + 0x100];
    1e7c:	41 52       	R1 = R1 - R0;
    1e7e:	01 0d       	CC = R1 <= 0x0;
    1e80:	03 18       	IF CC JUMP 0x1e86 <_natTraversalHandleAddressReply+0xf2>;
    1e82:	28 e6 40 00 	[P5 + 0x100] = R0;
    1e86:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    1e8a:	0a e1 0a 00 	P2.L = 0xa;		/* ( 10)	P2=0xa */
    1e8e:	17 97       	W[P2] = R7;
    1e90:	66 6c       	SP += 0xc;		/* ( 12) */
    1e92:	27 01       	RETS = [SP++];
    1e94:	b5 05       	(R7:6, P5:5) = [SP++];
    1e96:	10 00       	RTS;

00001e98 <_natTraversalHandlePortMapReply>:
_natTraversalHandlePortMapReply():
    1e98:	e3 05       	[--SP] = (R7:4, P5:3);
    1e9a:	29 32       	P5 = R1;
    1e9c:	00 e8 08 00 	LINK 0x20;		/* (32) */
    1ea0:	20 32       	P4 = R0;
    1ea2:	70 e5 28 00 	R0 = W[SP + 0x50] (X);
    1ea6:	18 32       	P3 = R0;
    1ea8:	a8 e4 28 00 	R0 = B[P5 + 0x28] (Z);
    1eac:	3a 32       	FP = R2;
    1eae:	77 e5 2a 00 	R7 = W[SP + 0x54] (X);
    1eb2:	35 e4 16 00 	R5 = [SP + 0x58];
    1eb6:	08 0c       	CC = R0 == 0x1;
    1eb8:	0c 18       	IF CC JUMP 0x1ed0 <_natTraversalHandlePortMapReply+0x38>;
    1eba:	10 0c       	CC = R0 == 0x2;
    1ebc:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x3(  3) */
    1ec0:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0x184(388) */
    1ec4:	00 e1 f4 0d 	R0.L = 0xdf4;		/* (3572)	R0=0xdf4(3572) */
    1ec8:	06 e1 ec 0d 	R6.L = 0xdec;		/* (3564)	R6=0xdec(3564) */
    1ecc:	30 07       	IF CC R6 = R0;
    1ece:	05 20       	JUMP.S 0x1ed8 <_natTraversalHandlePortMapReply+0x40>;
    1ed0:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0xdec(3564) */
    1ed4:	06 e1 f0 0d 	R6.L = 0xdf0;		/* (3568)	R6=0xdf0(3568) */
    1ed8:	4b 30       	R1 = P3;
    1eda:	c8 42       	R0 = R1.L (Z);
    1edc:	28 b1       	[P5 + 0x10] = R0;
    1ede:	00 0c       	CC = R0 == 0x0;
    1ee0:	06 14       	IF !CC JUMP 0x1eec <_natTraversalHandlePortMapReply+0x54> (BP);
    1ee2:	05 0c       	CC = R5 == 0x0;
    1ee4:	04 1c       	IF CC JUMP 0x1eec <_natTraversalHandlePortMapReply+0x54> (BP);
    1ee6:	fc 42       	R4 = R7.L (Z);
    1ee8:	04 0c       	CC = R4 == 0x0;
    1eea:	3f 14       	IF !CC JUMP 0x1f68 <_natTraversalHandlePortMapReply+0xd0> (BP);
    1eec:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0xa */
    1ef0:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    1ef4:	11 91       	R1 = [P2];
    1ef6:	01 0c       	CC = R1 == 0x0;
    1ef8:	19 1c       	IF CC JUMP 0x1f2a <_natTraversalHandlePortMapReply+0x92> (BP);
    1efa:	a9 e4 2a 00 	R1 = B[P5 + 0x2a] (Z);
    1efe:	aa e4 2b 00 	R2 = B[P5 + 0x2b] (Z);
    1f02:	41 4f       	R1 <<= 0x8;
    1f04:	4a 56       	R1 = R2 | R1;
    1f06:	31 b1       	[SP + 0x10] = R1;
    1f08:	79 43       	R1 = R7.B (Z);
    1f0a:	ff 42       	R7 = R7.L (Z);
    1f0c:	41 4f       	R1 <<= 0x8;
    1f0e:	47 4e       	R7 >>= 0x8;
    1f10:	cf 57       	R7 = R7 | R1;
    1f12:	f0 b1       	[SP + 0x1c] = R0;
    1f14:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x384(900) */
    1f18:	f6 b0       	[SP + 0xc] = R6;
    1f1a:	77 b1       	[SP + 0x14] = R7;
    1f1c:	b5 b1       	[SP + 0x18] = R5;
    1f1e:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    1f20:	01 e1 f8 0d 	R1.L = 0xdf8;		/* (3576)	R1=0xdf8(3576) */
    1f24:	55 30       	R2 = P5;
    1f26:	ff e3 6d f0 	CALL 0x0 <_FlushAddressCacheRecords>;
    1f2a:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    1f2e:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    1f32:	21 e1 84 03 	R1 = 0x384 (X);		/*		R1=0x384(900) */
    1f36:	10 91       	R0 = [P2];
    1f38:	c8 40       	R0 *= R1;
    1f3a:	21 e4 37 00 	R1 = [P4 + 0xdc];
    1f3e:	a8 b0       	[P5 + 0x8] = R0;
    1f40:	08 50       	R0 = R0 + R1;
    1f42:	e8 b0       	[P5 + 0xc] = R0;
    1f44:	4b 30       	R1 = P3;
    1f46:	c8 42       	R0 = R1.L (Z);
    1f48:	10 0c       	CC = R0 == 0x2;
    1f4a:	05 14       	IF !CC JUMP 0x1f54 <_natTraversalHandlePortMapReply+0xbc> (BP);
    1f4c:	18 63       	R0 = -0x1d (X);		/*		R0=0xffffffe3(-29) */
    1f4e:	40 e1 fe ff 	R0.H = 0xfffe;		/* ( -2)	R0=0xfffeffe3(-65565) */
    1f52:	09 20       	JUMP.S 0x1f64 <_natTraversalHandlePortMapReply+0xcc>;
    1f54:	43 30       	R0 = P3;
    1f56:	f8 67       	R0 += -0x1;		/* ( -1) */
    1f58:	c0 42       	R0 = R0.L (Z);
    1f5a:	20 0e       	CC = R0 <= 0x4 (IU);
    1f5c:	7d 14       	IF !CC JUMP 0x2056 <_natTraversalHandlePortMapReply+0x1be> (BP);
    1f5e:	20 e1 f9 bf 	R0 = -0x4007 (X);		/*		R0=0xffffbff9(-16391) */
    1f62:	10 4f       	R0 <<= 0x2;
    1f64:	28 b1       	[P5 + 0x10] = R0;
    1f66:	78 20       	JUMP.S 0x2056 <_natTraversalHandlePortMapReply+0x1be>;
    1f68:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    1f6c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    1f70:	53 91       	P3 = [P2];
    1f72:	40 e1 9a 3b 	R0.H = 0x3b9a;		/* (15258)	R0=0x3b9abff9(999997433) */
    1f76:	00 e1 ff c9 	R0.L = 0xc9ff;		/* (-13825)	R0=0x3b9ac9ff(999999999) */
    1f7a:	4b 30       	R1 = P3;
    1f7c:	ff e3 42 f0 	CALL 0x0 <_FlushAddressCacheRecords>;
    1f80:	05 0a       	CC = R5 <= R0 (IU);
    1f82:	28 06       	IF !CC R5 = R0;
    1f84:	4b 30       	R1 = P3;
    1f86:	e9 40       	R1 *= R5;
    1f88:	20 e4 37 00 	R0 = [P4 + 0xdc];
    1f8c:	01 50       	R0 = R1 + R0;
    1f8e:	00 0c       	CC = R0 == 0x0;
    1f90:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    1f92:	01 07       	IF CC R0 = R1;
    1f94:	68 b0       	[P5 + 0x4] = R0;
    1f96:	68 e4 16 00 	R0 = W[P5 + 0x2c] (Z);
    1f9a:	20 08       	CC = R0 == R4;
    1f9c:	24 18       	IF CC JUMP 0x1fe4 <_natTraversalHandlePortMapReply+0x14c>;
    1f9e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    1fa2:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    1fa6:	10 91       	R0 = [P2];
    1fa8:	00 0c       	CC = R0 == 0x0;
    1faa:	1d 1c       	IF CC JUMP 0x1fe4 <_natTraversalHandlePortMapReply+0x14c> (BP);
    1fac:	a9 e4 2a 00 	R1 = B[P5 + 0x2a] (Z);
    1fb0:	a8 e4 2b 00 	R0 = B[P5 + 0x2b] (Z);
    1fb4:	41 4f       	R1 <<= 0x8;
    1fb6:	48 56       	R1 = R0 | R1;
    1fb8:	a8 e4 2c 00 	R0 = B[P5 + 0x2c] (Z);
    1fbc:	aa e4 2d 00 	R2 = B[P5 + 0x2d] (Z);
    1fc0:	40 4f       	R0 <<= 0x8;
    1fc2:	02 56       	R0 = R2 | R0;
    1fc4:	70 b1       	[SP + 0x14] = R0;
    1fc6:	78 43       	R0 = R7.B (Z);
    1fc8:	40 4f       	R0 <<= 0x8;
    1fca:	31 b1       	[SP + 0x10] = R1;
    1fcc:	44 4e       	R4 >>= 0x8;
    1fce:	04 57       	R4 = R4 | R0;
    1fd0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1(  1) */
    1fd4:	f6 b0       	[SP + 0xc] = R6;
    1fd6:	b4 b1       	[SP + 0x18] = R4;
    1fd8:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    1fda:	01 e1 54 0e 	R1.L = 0xe54;		/* (3668)	R1=0xe54(3668) */
    1fde:	55 30       	R2 = P5;
    1fe0:	ff e3 10 f0 	CALL 0x0 <_FlushAddressCacheRecords>;
    1fe4:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    1fe8:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    1fec:	10 91       	R0 = [P2];
    1fee:	6f bd       	[P5 + 0x14] = FP;
    1ff0:	6f e6 16 00 	W[P5 + 0x2c] = R7;
    1ff4:	00 0c       	CC = R0 == 0x0;
    1ff6:	18 1c       	IF CC JUMP 0x2026 <_natTraversalHandlePortMapReply+0x18e> (BP);
    1ff8:	a8 e4 2a 00 	R0 = B[P5 + 0x2a] (Z);
    1ffc:	a9 e4 2b 00 	R1 = B[P5 + 0x2b] (Z);
    2000:	40 4f       	R0 <<= 0x8;
    2002:	01 56       	R0 = R1 | R0;
    2004:	30 b1       	[SP + 0x10] = R0;
    2006:	78 43       	R0 = R7.B (Z);
    2008:	ff 42       	R7 = R7.L (Z);
    200a:	40 4f       	R0 <<= 0x8;
    200c:	47 4e       	R7 >>= 0x8;
    200e:	c7 57       	R7 = R7 | R0;
    2010:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xe54(3668) */
    2014:	f6 b0       	[SP + 0xc] = R6;
    2016:	77 b1       	[SP + 0x14] = R7;
    2018:	b5 b1       	[SP + 0x18] = R5;
    201a:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    201c:	01 e1 b0 0e 	R1.L = 0xeb0;		/* (3760)	R1=0xeb0(3760) */
    2020:	55 30       	R2 = P5;
    2022:	ff e3 ef ef 	CALL 0x0 <_FlushAddressCacheRecords>;
    2026:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    202a:	20 e4 37 00 	R0 = [P4 + 0xdc];
    202e:	6a a0       	R2 = [P5 + 0x4];
    2030:	82 52       	R2 = R2 - R0;
    2032:	82 c6 0a 83 	R1 = R2 >> 0x1f;
    2036:	91 50       	R2 = R1 + R2;
    2038:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    203c:	11 91       	R1 = [P2];
    203e:	0a 4d       	R2 >>>= 0x1;
    2040:	09 4f       	R1 <<= 0x1;
    2042:	aa b0       	[P5 + 0x8] = R2;
    2044:	8a 08       	CC = R2 < R1;
    2046:	02 14       	IF !CC JUMP 0x204a <_natTraversalHandlePortMapReply+0x1b2> (BP);
    2048:	a9 b0       	[P5 + 0x8] = R1;
    204a:	00 00       	NOP;
    204c:	a9 a0       	R1 = [P5 + 0x8];
    204e:	41 50       	R1 = R1 + R0;
    2050:	e9 b0       	[P5 + 0xc] = R1;
    2052:	20 e6 40 00 	[P4 + 0x100] = R0;
    2056:	06 6d       	SP += 0x20;		/* ( 32) */
    2058:	77 90       	FP = [SP++];
    205a:	27 01       	RETS = [SP++];
    205c:	a3 05       	(R7:4, P5:3) = [SP++];
    205e:	10 00       	RTS;

00002060 <_mDNS_StartNATOperation_internal>:
_mDNS_StartNATOperation_internal():
    2060:	fb 05       	[--SP] = (R7:7, P5:3);
    2062:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    2066:	00 e8 0a 00 	LINK 0x28;		/* (40) */
    206a:	20 32       	P4 = R0;
    206c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    2070:	10 91       	R0 = [P2];
    2072:	29 32       	P5 = R1;
    2074:	00 0c       	CC = R0 == 0x0;
    2076:	1c 1c       	IF CC JUMP 0x20ae <_mDNS_StartNATOperation_internal+0x4e> (BP);
    2078:	a8 e4 28 00 	R0 = B[P5 + 0x28] (Z);
    207c:	f0 b0       	[SP + 0xc] = R0;
    207e:	a8 e4 2a 00 	R0 = B[P5 + 0x2a] (Z);
    2082:	a9 e4 2b 00 	R1 = B[P5 + 0x2b] (Z);
    2086:	40 4f       	R0 <<= 0x8;
    2088:	01 56       	R0 = R1 | R0;
    208a:	30 b1       	[SP + 0x10] = R0;
    208c:	a8 e4 2c 00 	R0 = B[P5 + 0x2c] (Z);
    2090:	a9 e4 2d 00 	R1 = B[P5 + 0x2d] (Z);
    2094:	40 4f       	R0 <<= 0x8;
    2096:	01 56       	R0 = R1 | R0;
    2098:	70 b1       	[SP + 0x14] = R0;
    209a:	28 a3       	R0 = [P5 + 0x30];
    209c:	b0 b1       	[SP + 0x18] = R0;
    209e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xeb0(3760) */
    20a2:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    20a4:	01 e1 04 0f 	R1.L = 0xf04;		/* (3844)	R1=0xf04(3844) */
    20a8:	55 30       	R2 = P5;
    20aa:	ff e3 ab ef 	CALL 0x0 <_FlushAddressCacheRecords>;
    20ae:	2b e1 c0 27 	P3 = 0x27c0 (X);		/*		P3=0x27c0(10176) */
    20b2:	ff 63       	R7 = -0x1 (X);		/*		R7=0xffffffff( -1) */
    20b4:	4f e1 00 00 	FP.H = 0x0;		/* (  0)	FP=0x7c84 */
    20b8:	dc 5a       	P3 = P4 + P3;
    20ba:	07 e1 ff 00 	R7.L = 0xff;		/* (255)	R7=0xffff00ff(-65281) */
    20be:	0f e1 00 00 	FP.L = 0x0;		/* (  0)	FP=0x0 <_FlushAddressCacheRecords> */
    20c2:	4c 20       	JUMP.S 0x215a <_mDNS_StartNATOperation_internal+0xfa>;
    20c4:	55 08       	CC = P5 == P2;
    20c6:	19 14       	IF !CC JUMP 0x20f8 <_mDNS_StartNATOperation_internal+0x98> (BP);
    20c8:	a8 e4 28 00 	R0 = B[P5 + 0x28] (Z);
    20cc:	f0 b0       	[SP + 0xc] = R0;
    20ce:	a8 e4 2a 00 	R0 = B[P5 + 0x2a] (Z);
    20d2:	a9 e4 2b 00 	R1 = B[P5 + 0x2b] (Z);
    20d6:	40 4f       	R0 <<= 0x8;
    20d8:	01 56       	R0 = R1 | R0;
    20da:	30 b1       	[SP + 0x10] = R0;
    20dc:	28 a3       	R0 = [P5 + 0x30];
    20de:	70 b1       	[SP + 0x14] = R0;
    20e0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xf04(3844) */
    20e4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    20e6:	01 e1 5c 0f 	R1.L = 0xf5c;		/* (3932)	R1=0xf5c(3932) */
    20ea:	55 30       	R2 = P5;
    20ec:	ff e3 8a ef 	CALL 0x0 <_FlushAddressCacheRecords>;
    20f0:	a8 63       	R0 = -0xb (X);		/*		R0=0xfffffff5(-11) */
    20f2:	40 e1 fe ff 	R0.H = 0xfffe;		/* ( -2)	R0=0xfffefff5(-65547) */
    20f6:	6d 20       	JUMP.S 0x21d0 <_mDNS_StartNATOperation_internal+0x170>;
    20f8:	00 00       	NOP;
    20fa:	a8 e4 28 00 	R0 = B[P5 + 0x28] (Z);
    20fe:	00 0c       	CC = R0 == 0x0;
    2100:	2b 1c       	IF CC JUMP 0x2156 <_mDNS_StartNATOperation_internal+0xf6> (BP);
    2102:	aa a2       	R2 = [P5 + 0x28];
    2104:	91 a2       	R1 = [P2 + 0x28];
    2106:	ba 54       	R2 = R2 & R7;
    2108:	79 54       	R1 = R1 & R7;
    210a:	0a 08       	CC = R2 == R1;
    210c:	25 14       	IF !CC JUMP 0x2156 <_mDNS_StartNATOperation_internal+0xf6> (BP);
    210e:	6a e4 15 00 	R2 = W[P5 + 0x2a] (Z);
    2112:	39 95       	R1 = W[FP] (Z);
    2114:	0a 08       	CC = R2 == R1;
    2116:	20 18       	IF CC JUMP 0x2156 <_mDNS_StartNATOperation_internal+0xf6>;
    2118:	f0 b0       	[SP + 0xc] = R0;
    211a:	b2 bd       	[SP + 0x18] = P2;
    211c:	55 30       	R2 = P5;
    211e:	a8 e4 2a 00 	R0 = B[P5 + 0x2a] (Z);
    2122:	a9 e4 2b 00 	R1 = B[P5 + 0x2b] (Z);
    2126:	40 4f       	R0 <<= 0x8;
    2128:	01 56       	R0 = R1 | R0;
    212a:	30 b1       	[SP + 0x10] = R0;
    212c:	28 a3       	R0 = [P5 + 0x30];
    212e:	70 b1       	[SP + 0x14] = R0;
    2130:	90 e4 28 00 	R0 = B[P2 + 0x28] (Z);
    2134:	f0 b1       	[SP + 0x1c] = R0;
    2136:	90 e4 2a 00 	R0 = B[P2 + 0x2a] (Z);
    213a:	91 e4 2b 00 	R1 = B[P2 + 0x2b] (Z);
    213e:	40 4f       	R0 <<= 0x8;
    2140:	01 56       	R0 = R1 | R0;
    2142:	30 b2       	[SP + 0x20] = R0;
    2144:	10 a3       	R0 = [P2 + 0x30];
    2146:	70 b2       	[SP + 0x24] = R0;
    2148:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xf5c(3932) */
    214c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    214e:	01 e1 c4 0f 	R1.L = 0xfc4;		/* (4036)	R1=0xfc4(4036) */
    2152:	ff e3 57 ef 	CALL 0x0 <_FlushAddressCacheRecords>;
    2156:	00 00       	NOP;
    2158:	5b 91       	P3 = [P3];
    215a:	5a 91       	P2 = [P3];
    215c:	42 0c       	CC = P2 == 0x0;
    215e:	b3 17       	IF !CC JUMP 0x20c4 <_mDNS_StartNATOperation_internal+0x64> (BP);
    2160:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    2164:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    2168:	11 91       	R1 = [P2];
    216a:	11 30       	R2 = R1;
    216c:	81 0c       	CC = R1 < 0x0;
    216e:	1a 64       	R2 += 0x3;		/* (  3) */
    2170:	0a 07       	IF CC R1 = R2;
    2172:	22 e4 37 00 	R2 = [P4 + 0xdc];
    2176:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    217a:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    217e:	ea b0       	[P5 + 0xc] = R2;
    2180:	12 91       	R2 = [P2];
    2182:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2184:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    2188:	28 93       	[P5] = R0;
    218a:	68 b0       	[P5 + 0x4] = R0;
    218c:	28 b1       	[P5 + 0x10] = R0;
    218e:	aa b1       	[P5 + 0x18] = R2;
    2190:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    2194:	28 b2       	[P5 + 0x20] = R0;
    2196:	68 b2       	[P5 + 0x24] = R0;
    2198:	11 4d       	R1 >>>= 0x2;
    219a:	12 95       	R2 = W[P2] (Z);
    219c:	28 a3       	R0 = [P5 + 0x30];
    219e:	a9 b0       	[P5 + 0x8] = R1;
    21a0:	aa b7       	W[P5 + 0x1c] = R2;
    21a2:	00 0c       	CC = R0 == 0x0;
    21a4:	04 14       	IF !CC JUMP 0x21ac <_mDNS_StartNATOperation_internal+0x14c> (BP);
    21a6:	20 e1 20 1c 	R0 = 0x1c20 (X);		/*		R0=0x1c20(7200) */
    21aa:	28 b3       	[P5 + 0x30] = R0;
    21ac:	00 00       	NOP;
    21ae:	20 e4 f0 09 	R0 = [P4 + 0x27c0];
    21b2:	00 0c       	CC = R0 == 0x0;
    21b4:	07 14       	IF !CC JUMP 0x21c2 <_mDNS_StartNATOperation_internal+0x162> (BP);
    21b6:	20 e4 37 00 	R0 = [P4 + 0xdc];
    21ba:	20 e6 f3 09 	[P4 + 0x27cc] = R0;
    21be:	21 e6 f2 09 	[P4 + 0x27c8] = R1;
    21c2:	00 00       	NOP;
    21c4:	20 e4 37 00 	R0 = [P4 + 0xdc];
    21c8:	20 e6 40 00 	[P4 + 0x100] = R0;
    21cc:	5d 93       	[P3] = P5;
    21ce:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    21d0:	46 6d       	SP += 0x28;		/* ( 40) */
    21d2:	77 90       	FP = [SP++];
    21d4:	27 01       	RETS = [SP++];
    21d6:	bb 05       	(R7:7, P5:3) = [SP++];
    21d8:	10 00       	RTS;
	...

000021dc <_mDNS_StopNATOperation_internal>:
_mDNS_StopNATOperation_internal():
    21dc:	fb 05       	[--SP] = (R7:7, P5:3);
    21de:	18 32       	P3 = R0;
    21e0:	29 e1 c0 27 	P1 = 0x27c0 (X);		/*		P1=0x27c0(10176) */
    21e4:	00 e8 0a 00 	LINK 0x28;		/* (40) */
    21e8:	29 32       	P5 = R1;
    21ea:	4b 5a       	P1 = P3 + P1;
    21ec:	1a e5 f0 09 	P2 = [P3 + 0x27c0];
    21f0:	03 20       	JUMP.S 0x21f6 <_mDNS_StopNATOperation_internal+0x1a>;
    21f2:	4a 32       	P1 = P2;
    21f4:	52 91       	P2 = [P2];
    21f6:	42 0c       	CC = P2 == 0x0;
    21f8:	0f 18       	IF CC JUMP 0x2216 <_mDNS_StopNATOperation_internal+0x3a>;
    21fa:	6a 08       	CC = P2 == P5;
    21fc:	fb 17       	IF !CC JUMP 0x21f2 <_mDNS_StopNATOperation_internal+0x16> (BP);
    21fe:	42 0c       	CC = P2 == 0x0;
    2200:	0b 1c       	IF CC JUMP 0x2216 <_mDNS_StopNATOperation_internal+0x3a> (BP);
    2202:	10 91       	R0 = [P2];
    2204:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    2208:	08 93       	[P1] = R0;
    220a:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    220e:	10 91       	R0 = [P2];
    2210:	00 0c       	CC = R0 == 0x0;
    2212:	29 1c       	IF CC JUMP 0x2264 <_mDNS_StopNATOperation_internal+0x88> (BP);
    2214:	0d 20       	JUMP.S 0x222e <_mDNS_StopNATOperation_internal+0x52>;
    2216:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xfc4(4036) */
    221a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    221c:	01 e1 48 10 	R1.L = 0x1048;		/* (4168)	R1=0x1048(4168) */
    2220:	55 30       	R2 = P5;
    2222:	ff e3 ef ee 	CALL 0x0 <_FlushAddressCacheRecords>;
    2226:	d8 63       	R0 = -0x5 (X);		/*		R0=0xfffffffb( -5) */
    2228:	40 e1 fe ff 	R0.H = 0xfffe;		/* ( -2)	R0=0xfffefffb(-65541) */
    222c:	75 20       	JUMP.S 0x2316 <_mDNS_StopNATOperation_internal+0x13a>;
    222e:	a8 e4 28 00 	R0 = B[P5 + 0x28] (Z);
    2232:	f0 b0       	[SP + 0xc] = R0;
    2234:	a8 e4 2a 00 	R0 = B[P5 + 0x2a] (Z);
    2238:	a9 e4 2b 00 	R1 = B[P5 + 0x2b] (Z);
    223c:	40 4f       	R0 <<= 0x8;
    223e:	01 56       	R0 = R1 | R0;
    2240:	30 b1       	[SP + 0x10] = R0;
    2242:	a8 e4 2c 00 	R0 = B[P5 + 0x2c] (Z);
    2246:	a9 e4 2d 00 	R1 = B[P5 + 0x2d] (Z);
    224a:	40 4f       	R0 <<= 0x8;
    224c:	01 56       	R0 = R1 | R0;
    224e:	70 b1       	[SP + 0x14] = R0;
    2250:	28 a3       	R0 = [P5 + 0x30];
    2252:	b0 b1       	[SP + 0x18] = R0;
    2254:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1048(4168) */
    2258:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    225a:	01 e1 90 10 	R1.L = 0x1090;		/* (4240)	R1=0x1090(4240) */
    225e:	55 30       	R2 = P5;
    2260:	ff e3 d0 ee 	CALL 0x0 <_FlushAddressCacheRecords>;
    2264:	00 00       	NOP;
    2266:	1a e5 f1 09 	P2 = [P3 + 0x27c4];
    226a:	6a 08       	CC = P2 == P5;
    226c:	04 14       	IF !CC JUMP 0x2274 <_mDNS_StopNATOperation_internal+0x98> (BP);
    226e:	10 91       	R0 = [P2];
    2270:	18 e6 f1 09 	[P3 + 0x27c4] = R0;
    2274:	00 00       	NOP;
    2276:	a8 e4 28 00 	R0 = B[P5 + 0x28] (Z);
    227a:	00 0c       	CC = R0 == 0x0;
    227c:	3f 1c       	IF CC JUMP 0x22fa <_mDNS_StopNATOperation_internal+0x11e> (BP);
    227e:	ff 63       	R7 = -0x1 (X);		/*		R7=0xffffffff( -1) */
    2280:	4f e1 00 00 	FP.H = 0x0;		/* (  0)	FP=0x0 <_FlushAddressCacheRecords> */
    2284:	1c e5 f0 09 	P4 = [P3 + 0x27c0];
    2288:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    228a:	07 e1 ff 00 	R7.L = 0xff;		/* (255)	R7=0xffff00ff(-65281) */
    228e:	0f e1 00 00 	FP.L = 0x0;		/* (  0)	FP=0x0 <_FlushAddressCacheRecords> */
    2292:	31 20       	JUMP.S 0x22f4 <_mDNS_StopNATOperation_internal+0x118>;
    2294:	00 00       	NOP;
    2296:	aa a2       	R2 = [P5 + 0x28];
    2298:	a1 a2       	R1 = [P4 + 0x28];
    229a:	ba 54       	R2 = R2 & R7;
    229c:	79 54       	R1 = R1 & R7;
    229e:	0a 08       	CC = R2 == R1;
    22a0:	28 14       	IF !CC JUMP 0x22f0 <_mDNS_StopNATOperation_internal+0x114> (BP);
    22a2:	69 e4 15 00 	R1 = W[P5 + 0x2a] (Z);
    22a6:	38 95       	R0 = W[FP] (Z);
    22a8:	01 08       	CC = R1 == R0;
    22aa:	22 1c       	IF CC JUMP 0x22ee <_mDNS_StopNATOperation_internal+0x112> (BP);
    22ac:	b4 bd       	[SP + 0x18] = P4;
    22ae:	55 30       	R2 = P5;
    22b0:	a8 e4 28 00 	R0 = B[P5 + 0x28] (Z);
    22b4:	f0 b0       	[SP + 0xc] = R0;
    22b6:	a8 e4 2a 00 	R0 = B[P5 + 0x2a] (Z);
    22ba:	a9 e4 2b 00 	R1 = B[P5 + 0x2b] (Z);
    22be:	40 4f       	R0 <<= 0x8;
    22c0:	01 56       	R0 = R1 | R0;
    22c2:	30 b1       	[SP + 0x10] = R0;
    22c4:	28 a3       	R0 = [P5 + 0x30];
    22c6:	70 b1       	[SP + 0x14] = R0;
    22c8:	a0 e4 28 00 	R0 = B[P4 + 0x28] (Z);
    22cc:	f0 b1       	[SP + 0x1c] = R0;
    22ce:	a0 e4 2a 00 	R0 = B[P4 + 0x2a] (Z);
    22d2:	a1 e4 2b 00 	R1 = B[P4 + 0x2b] (Z);
    22d6:	40 4f       	R0 <<= 0x8;
    22d8:	01 56       	R0 = R1 | R0;
    22da:	30 b2       	[SP + 0x20] = R0;
    22dc:	20 a3       	R0 = [P4 + 0x30];
    22de:	70 b2       	[SP + 0x24] = R0;
    22e0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1090(4240) */
    22e4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    22e6:	01 e1 c0 10 	R1.L = 0x10c0;		/* (4288)	R1=0x10c0(4288) */
    22ea:	ff e3 8b ee 	CALL 0x0 <_FlushAddressCacheRecords>;
    22ee:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    22f0:	00 00       	NOP;
    22f2:	64 91       	P4 = [P4];
    22f4:	44 0c       	CC = P4 == 0x0;
    22f6:	cf 17       	IF !CC JUMP 0x2294 <_mDNS_StopNATOperation_internal+0xb8> (BP);
    22f8:	02 20       	JUMP.S 0x22fc <_mDNS_StopNATOperation_internal+0x120>;
    22fa:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    22fc:	69 a0       	R1 = [P5 + 0x4];
    22fe:	01 0c       	CC = R1 == 0x0;
    2300:	0a 18       	IF CC JUMP 0x2314 <_mDNS_StopNATOperation_internal+0x138>;
    2302:	00 0c       	CC = R0 == 0x0;
    2304:	08 1c       	IF CC JUMP 0x2314 <_mDNS_StopNATOperation_internal+0x138> (BP);
    2306:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2308:	28 b3       	[P5 + 0x30] = R0;
    230a:	a8 b0       	[P5 + 0x8] = R0;
    230c:	43 30       	R0 = P3;
    230e:	4d 30       	R1 = P5;
    2310:	ff e3 ac f5 	CALL 0xe68 <_uDNS_SendNATMsg>;
    2314:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2316:	46 6d       	SP += 0x28;		/* ( 40) */
    2318:	77 90       	FP = [SP++];
    231a:	27 01       	RETS = [SP++];
    231c:	bb 05       	(R7:7, P5:3) = [SP++];
    231e:	10 00       	RTS;

00002320 <_AdvertiseHostname>:
_AdvertiseHostname():
    2320:	fb 05       	[--SP] = (R7:7, P5:3);
    2322:	20 32       	P4 = R0;
    2324:	00 e8 09 00 	LINK 0x24;		/* (36) */
    2328:	29 32       	P5 = R1;
    232a:	20 e4 05 08 	R0 = [P4 + 0x2014];
    232e:	00 0c       	CC = R0 == 0x0;
    2330:	81 1c       	IF CC JUMP 0x2432 <_AdvertiseHostname+0x112> (BP);
    2332:	a8 e4 44 01 	R0 = B[P5 + 0x144] (Z);
    2336:	00 0c       	CC = R0 == 0x0;
    2338:	7d 14       	IF !CC JUMP 0x2432 <_AdvertiseHostname+0x112> (BP);
    233a:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    233c:	b0 b5       	W[SP + 0xc] = R0;
    233e:	20 e1 78 00 	R0 = 0x78 (X);		/*		R0=0x78(120) */
    2342:	30 b1       	[SP + 0x10] = R0;
    2344:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2346:	b0 b1       	[SP + 0x18] = R0;
    2348:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_FlushAddressCacheRecords>(  0) */
    234c:	00 e1 24 25 	R0.L = 0x2524;		/* (9508)	R0=0x2524 <_HostnameCallback>(9508) */
    2350:	2b e1 40 01 	P3 = 0x140 (X);		/*		P3=0x140 <_RRAdditionalSize>(320) */
    2354:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    2358:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    235c:	dd 5a       	P3 = P5 + P3;
    235e:	f0 b1       	[SP + 0x1c] = R0;
    2360:	31 b2       	[SP + 0x20] = R1;
    2362:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    2364:	12 91       	R2 = [P2];
    2366:	43 30       	R0 = P3;
    2368:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    236a:	b7 e6 14 00 	B[SP + 0x14] = R7;
    236e:	ff e3 49 ee 	CALL 0x0 <_FlushAddressCacheRecords>;
    2372:	2f e1 40 00 	FP = 0x40 (X);		/*		FP=0x40( 64) */
    2376:	fd 5b       	FP = P5 + FP;
    2378:	47 30       	R0 = FP;
    237a:	4b 30       	R1 = P3;
    237c:	ff e3 42 ee 	CALL 0x0 <_FlushAddressCacheRecords>;
    2380:	c2 42       	R2 = R0.L (Z);
    2382:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    2386:	02 0a       	CC = R2 <= R0 (IU);
    2388:	09 14       	IF !CC JUMP 0x239a <_AdvertiseHostname+0x7a> (BP);
    238a:	2a e1 a8 02 	P2 = 0x2a8 (X);		/*		P2=0x2a8(680) */
    238e:	95 5a       	P2 = P5 + P2;
    2390:	42 30       	R0 = P2;
    2392:	4f 30       	R1 = FP;
    2394:	ff e3 36 ee 	CALL 0x0 <_FlushAddressCacheRecords>;
    2398:	03 20       	JUMP.S 0x239e <_AdvertiseHostname+0x7e>;
    239a:	af e6 a8 02 	B[P5 + 0x2a8] = R7;
    239e:	2a e5 59 00 	P2 = [P5 + 0x164];
    23a2:	20 e4 05 08 	R0 = [P4 + 0x2014];
    23a6:	2f e1 14 20 	FP = 0x2014 (X);		/*		FP=0x2014(8212) */
    23aa:	fc 5b       	FP = P4 + FP;
    23ac:	50 b0       	[P2 + 0x4] = R0;
    23ae:	20 60       	R0 = 0x4 (X);		/*		R0=0x4(  4) */
    23b0:	28 e6 89 00 	[P5 + 0x224] = R0;
    23b4:	47 30       	R0 = FP;
    23b6:	ff e3 25 ee 	CALL 0x0 <_FlushAddressCacheRecords>;
    23ba:	00 0c       	CC = R0 == 0x0;
    23bc:	23 1c       	IF CC JUMP 0x2402 <_AdvertiseHostname+0xe2> (BP);
    23be:	e8 a3       	R0 = [P5 + 0x3c];
    23c0:	00 0c       	CC = R0 == 0x0;
    23c2:	06 18       	IF CC JUMP 0x23ce <_AdvertiseHostname+0xae>;
    23c4:	4d 30       	R1 = P5;
    23c6:	21 64       	R1 += 0x4;		/* (  4) */
    23c8:	44 30       	R0 = P4;
    23ca:	ff e3 09 ff 	CALL 0x21dc <_mDNS_StopNATOperation_internal>;
    23ce:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    23d0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x2a8 */
    23d4:	a8 e6 2c 00 	B[P5 + 0x2c] = R0;
    23d8:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    23dc:	10 95       	R0 = W[P2] (Z);
    23de:	68 e6 17 00 	W[P5 + 0x2e] = R0;
    23e2:	68 e6 18 00 	W[P5 + 0x30] = R0;
    23e6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    23e8:	68 b3       	[P5 + 0x34] = R0;
    23ea:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_FlushAddressCacheRecords>(  0) */
    23ee:	00 e1 00 0c 	R0.L = 0xc00;		/* (3072)	R0=0xc00 <_hostnameGetPublicAddressCallback>(3072) */
    23f2:	a8 b3       	[P5 + 0x38] = R0;
    23f4:	4d 30       	R1 = P5;
    23f6:	ed bf       	[P5 + 0x3c] = P5;
    23f8:	21 64       	R1 += 0x4;		/* (  4) */
    23fa:	44 30       	R0 = P4;
    23fc:	ff e3 32 fe 	CALL 0x2060 <_mDNS_StartNATOperation_internal>;
    2400:	19 20       	JUMP.S 0x2432 <_AdvertiseHostname+0x112>;
    2402:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    2406:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    240a:	10 91       	R0 = [P2];
    240c:	00 0c       	CC = R0 == 0x0;
    240e:	0b 1c       	IF CC JUMP 0x2424 <_AdvertiseHostname+0x104> (BP);
    2410:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_FlushAddressCacheRecords>(  0) */
    2414:	2a e4 58 00 	R2 = [P5 + 0x160];
    2418:	f7 bc       	[SP + 0xc] = FP;
    241a:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    241c:	01 e1 44 11 	R1.L = 0x1144;		/* (4420)	R1=0x1144(4420) */
    2420:	ff e3 f0 ed 	CALL 0x0 <_FlushAddressCacheRecords>;
    2424:	00 61       	R0 = 0x20 (X);		/*		R0=0x20( 32) */
    2426:	a8 e6 44 01 	B[P5 + 0x144] = R0;
    242a:	44 30       	R0 = P4;
    242c:	4b 30       	R1 = P3;
    242e:	ff e3 e9 ed 	CALL 0x0 <_FlushAddressCacheRecords>;
    2432:	00 00       	NOP;
    2434:	21 e4 0b 08 	R1 = [P4 + 0x202c];
    2438:	20 e4 0a 08 	R0 = [P4 + 0x2028];
    243c:	01 56       	R0 = R1 | R0;
    243e:	21 e4 0c 08 	R1 = [P4 + 0x2030];
    2442:	08 56       	R0 = R0 | R1;
    2444:	21 e4 0d 08 	R1 = [P4 + 0x2034];
    2448:	08 56       	R0 = R0 | R1;
    244a:	00 0c       	CC = R0 == 0x0;
    244c:	66 1c       	IF CC JUMP 0x2518 <_AdvertiseHostname+0x1f8> (BP);
    244e:	a8 e4 b8 04 	R0 = B[P5 + 0x4b8] (Z);
    2452:	00 0c       	CC = R0 == 0x0;
    2454:	62 14       	IF !CC JUMP 0x2518 <_AdvertiseHostname+0x1f8> (BP);
    2456:	e0 60       	R0 = 0x1c (X);		/*		R0=0x1c( 28) */
    2458:	b0 b5       	W[SP + 0xc] = R0;
    245a:	20 e1 78 00 	R0 = 0x78 (X);		/*		R0=0x78(120) */
    245e:	30 b1       	[SP + 0x10] = R0;
    2460:	00 61       	R0 = 0x20 (X);		/*		R0=0x20( 32) */
    2462:	b0 e6 14 00 	B[SP + 0x14] = R0;
    2466:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2468:	b0 b1       	[SP + 0x18] = R0;
    246a:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_FlushAddressCacheRecords>(  0) */
    246e:	00 e1 24 25 	R0.L = 0x2524;		/* (9508)	R0=0x2524 <_HostnameCallback>(9508) */
    2472:	2b e1 b4 04 	P3 = 0x4b4 (X);		/*		P3=0x4b4(1204) */
    2476:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    247a:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    247e:	f0 b1       	[SP + 0x1c] = R0;
    2480:	dd 5a       	P3 = P5 + P3;
    2482:	12 91       	R2 = [P2];
    2484:	43 30       	R0 = P3;
    2486:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    2488:	35 be       	[SP + 0x20] = P5;
    248a:	ff e3 bb ed 	CALL 0x0 <_FlushAddressCacheRecords>;
    248e:	2a e1 40 00 	P2 = 0x40 (X);		/*		P2=0x40( 64) */
    2492:	95 5a       	P2 = P5 + P2;
    2494:	7a 30       	R7 = P2;
    2496:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    249a:	4f 50       	R1 = R7 + R1;
    249c:	42 30       	R0 = P2;
    249e:	ff e3 b1 ed 	CALL 0x0 <_FlushAddressCacheRecords>;
    24a2:	c2 42       	R2 = R0.L (Z);
    24a4:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    24a8:	02 0a       	CC = R2 <= R0 (IU);
    24aa:	09 14       	IF !CC JUMP 0x24bc <_AdvertiseHostname+0x19c> (BP);
    24ac:	2a e1 1c 06 	P2 = 0x61c (X);		/*		P2=0x61c(1564) */
    24b0:	95 5a       	P2 = P5 + P2;
    24b2:	42 30       	R0 = P2;
    24b4:	0f 30       	R1 = R7;
    24b6:	ff e3 a5 ed 	CALL 0x0 <_FlushAddressCacheRecords>;
    24ba:	04 20       	JUMP.S 0x24c2 <_AdvertiseHostname+0x1a2>;
    24bc:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    24be:	a8 e6 1c 06 	B[P5 + 0x61c] = R0;
    24c2:	29 e5 36 01 	P1 = [P5 + 0x4d8];
    24c6:	28 e1 28 20 	P0 = 0x2028 (X);		/*		P0=0x2028(8232) */
    24ca:	84 5a       	P2 = P4 + P0;
    24cc:	10 90       	R0 = [P2++];
    24ce:	48 b0       	[P1 + 0x4] = R0;
    24d0:	10 90       	R0 = [P2++];
    24d2:	41 6c       	P1 += 0x8;		/* (  8) */
    24d4:	08 92       	[P1++] = R0;
    24d6:	10 90       	R0 = [P2++];
    24d8:	08 92       	[P1++] = R0;
    24da:	10 91       	R0 = [P2];
    24dc:	08 93       	[P1] = R0;
    24de:	20 60       	R0 = 0x4 (X);		/*		R0=0x4(  4) */
    24e0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x61c */
    24e4:	28 e6 66 01 	[P5 + 0x598] = R0;
    24e8:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    24ec:	10 91       	R0 = [P2];
    24ee:	00 0c       	CC = R0 == 0x0;
    24f0:	0c 1c       	IF CC JUMP 0x2508 <_AdvertiseHostname+0x1e8> (BP);
    24f2:	04 5a       	P0 = P4 + P0;
    24f4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x100(256) */
    24f8:	2a e4 35 01 	R2 = [P5 + 0x4d4];
    24fc:	f0 bc       	[SP + 0xc] = P0;
    24fe:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    2500:	01 e1 68 11 	R1.L = 0x1168;		/* (4456)	R1=0x1168(4456) */
    2504:	ff e3 7e ed 	CALL 0x0 <_FlushAddressCacheRecords>;
    2508:	26 6d       	SP += 0x24;		/* ( 36) */
    250a:	77 90       	FP = [SP++];
    250c:	44 30       	R0 = P4;
    250e:	4b 30       	R1 = P3;
    2510:	27 01       	RETS = [SP++];
    2512:	bb 05       	(R7:7, P5:3) = [SP++];
    2514:	ff e2 76 ed 	JUMP.L 0x0 <_FlushAddressCacheRecords>;
    2518:	26 6d       	SP += 0x24;		/* ( 36) */
    251a:	77 90       	FP = [SP++];
    251c:	27 01       	RETS = [SP++];
    251e:	bb 05       	(R7:7, P5:3) = [SP++];
    2520:	10 00       	RTS;
	...

00002524 <_HostnameCallback>:
_HostnameCallback():
    2524:	fb 05       	[--SP] = (R7:7, P5:3);
    2526:	29 32       	P5 = R1;
    2528:	18 32       	P3 = R0;
    252a:	20 e1 ff fe 	R0 = -0x101 (X);		/*		R0=0xfffffeff(-257) */
    252e:	40 4f       	R0 <<= 0x8;
    2530:	00 e8 05 00 	LINK 0x14;		/* (20) */
    2534:	3a 30       	R7 = R2;
    2536:	2c e5 10 00 	P4 = [P5 + 0x40];
    253a:	02 08       	CC = R2 == R0;
    253c:	57 14       	IF !CC JUMP 0x25ea <_HostnameCallback+0xc6> (BP);
    253e:	44 0c       	CC = P4 == 0x0;
    2540:	ed 18       	IF CC JUMP 0x271a <_HostnameCallback+0x1f6>;
    2542:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    2546:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    254a:	10 91       	R0 = [P2];
    254c:	00 0c       	CC = R0 == 0x0;
    254e:	13 1c       	IF CC JUMP 0x2574 <_HostnameCallback+0x50> (BP);
    2550:	01 30       	R0 = R1;
    2552:	69 a2       	R1 = [P5 + 0x24];
    2554:	53 30       	R2 = P3;
    2556:	21 64       	R1 += 0x4;		/* (  4) */
    2558:	ba 65       	R2 += 0x37;		/* ( 55) */
    255a:	20 64       	R0 += 0x4;		/* (  4) */
    255c:	ff e3 52 ed 	CALL 0x0 <_FlushAddressCacheRecords>;
    2560:	30 b1       	[SP + 0x10] = R0;
    2562:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1168(4456) */
    2566:	f5 bc       	[SP + 0xc] = P5;
    2568:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    256a:	01 e1 90 11 	R1.L = 0x1190;		/* (4496)	R1=0x1190(4496) */
    256e:	54 30       	R2 = P4;
    2570:	ff e3 48 ed 	CALL 0x0 <_FlushAddressCacheRecords>;
    2574:	29 e1 40 01 	P1 = 0x140 (X);		/*		P1=0x140 <_RRAdditionalSize>(320) */
    2578:	1f e5 c1 09 	FP = [P3 + 0x2704];
    257c:	2a e1 b4 04 	P2 = 0x4b4 (X);		/*		P2=0x4b4(1204) */
    2580:	1f 20       	JUMP.S 0x25be <_HostnameCallback+0x9a>;
    2582:	0f 5a       	P0 = FP + P1;
    2584:	45 08       	CC = P5 == P0;
    2586:	04 18       	IF CC JUMP 0x258e <_HostnameCallback+0x6a>;
    2588:	17 5a       	P0 = FP + P2;
    258a:	45 08       	CC = P5 == P0;
    258c:	17 14       	IF !CC JUMP 0x25ba <_HostnameCallback+0x96> (BP);
    258e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1190(4496) */
    2592:	43 30       	R0 = P3;
    2594:	01 e1 18 01 	R1.L = 0x118;		/* (280)	R1=0x118(280) */
    2598:	ff e3 34 ed 	CALL 0x0 <_FlushAddressCacheRecords>;
    259c:	43 30       	R0 = P3;
    259e:	4f 30       	R1 = FP;
    25a0:	ff e3 c0 fe 	CALL 0x2320 <_AdvertiseHostname>;
    25a4:	a6 6c       	SP += 0x14;		/* ( 20) */
    25a6:	77 90       	FP = [SP++];
    25a8:	43 30       	R0 = P3;
    25aa:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x118(280) */
    25ae:	01 e1 18 01 	R1.L = 0x118;		/* (280)	R1=0x118(280) */
    25b2:	27 01       	RETS = [SP++];
    25b4:	bb 05       	(R7:7, P5:3) = [SP++];
    25b6:	ff e2 25 ed 	JUMP.L 0x0 <_FlushAddressCacheRecords>;
    25ba:	00 00       	NOP;
    25bc:	7f 91       	FP = [FP];
    25be:	47 0c       	CC = FP == 0x0;
    25c0:	e1 17       	IF !CC JUMP 0x2582 <_HostnameCallback+0x5e> (BP);
    25c2:	a0 e4 44 01 	R0 = B[P4 + 0x144] (Z);
    25c6:	00 0c       	CC = R0 == 0x0;
    25c8:	a9 14       	IF !CC JUMP 0x271a <_HostnameCallback+0x1f6> (BP);
    25ca:	a0 e4 b8 04 	R0 = B[P4 + 0x4b8] (Z);
    25ce:	00 0c       	CC = R0 == 0x0;
    25d0:	a5 14       	IF !CC JUMP 0x271a <_HostnameCallback+0x1f6> (BP);
    25d2:	e0 a3       	R0 = [P4 + 0x3c];
    25d4:	00 0c       	CC = R0 == 0x0;
    25d6:	06 18       	IF CC JUMP 0x25e2 <_HostnameCallback+0xbe>;
    25d8:	4c 30       	R1 = P4;
    25da:	21 64       	R1 += 0x4;		/* (  4) */
    25dc:	43 30       	R0 = P3;
    25de:	ff e3 ff fd 	CALL 0x21dc <_mDNS_StopNATOperation_internal>;
    25e2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    25e4:	e0 b3       	[P4 + 0x3c] = R0;
    25e6:	44 30       	R0 = P4;
    25e8:	1f 20       	JUMP.S 0x2626 <_HostnameCallback+0x102>;
    25ea:	02 0c       	CC = R2 == 0x0;
    25ec:	44 1c       	IF CC JUMP 0x2674 <_HostnameCallback+0x150> (BP);
    25ee:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    25f0:	08 0c       	CC = R0 == 0x1;
    25f2:	68 a2       	R0 = [P5 + 0x24];
    25f4:	29 a2       	R1 = [P5 + 0x20];
    25f6:	0a 14       	IF !CC JUMP 0x260a <_HostnameCallback+0xe6> (BP);
    25f8:	20 64       	R0 += 0x4;		/* (  4) */
    25fa:	f1 b0       	[SP + 0xc] = R1;
    25fc:	30 b1       	[SP + 0x10] = R0;
    25fe:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x118(280) */
    2602:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2604:	01 e1 c4 11 	R1.L = 0x11c4;		/* (4548)	R1=0x11c4(4548) */
    2608:	09 20       	JUMP.S 0x261a <_HostnameCallback+0xf6>;
    260a:	20 64       	R0 += 0x4;		/* (  4) */
    260c:	f1 b0       	[SP + 0xc] = R1;
    260e:	30 b1       	[SP + 0x10] = R0;
    2610:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x11c4(4548) */
    2614:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2616:	01 e1 00 12 	R1.L = 0x1200;		/* (4608)	R1=0x1200(4608) */
    261a:	17 30       	R2 = R7;
    261c:	ff e3 f2 ec 	CALL 0x0 <_FlushAddressCacheRecords>;
    2620:	44 0c       	CC = P4 == 0x0;
    2622:	08 14       	IF !CC JUMP 0x2632 <_HostnameCallback+0x10e> (BP);
    2624:	45 30       	R0 = P5;
    2626:	a6 6c       	SP += 0x14;		/* ( 20) */
    2628:	77 90       	FP = [SP++];
    262a:	27 01       	RETS = [SP++];
    262c:	bb 05       	(R7:7, P5:3) = [SP++];
    262e:	ff e2 e9 ec 	JUMP.L 0x0 <_FlushAddressCacheRecords>;
    2632:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
    2634:	28 e4 39 00 	R0 = [P5 + 0xe4];
    2638:	08 08       	CC = R0 == R1;
    263a:	08 18       	IF CC JUMP 0x264a <_HostnameCallback+0x126>;
    263c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4(  4) */
    2640:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2642:	01 e1 40 12 	R1.L = 0x1240;		/* (4672)	R1=0x1240(4672) */
    2646:	ff e3 dd ec 	CALL 0x0 <_FlushAddressCacheRecords>;
    264a:	20 e4 89 00 	R0 = [P4 + 0x224];
    264e:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
    2650:	08 08       	CC = R0 == R1;
    2652:	64 14       	IF !CC JUMP 0x271a <_HostnameCallback+0x1f6> (BP);
    2654:	20 e4 66 01 	R0 = [P4 + 0x598];
    2658:	08 08       	CC = R0 == R1;
    265a:	60 14       	IF !CC JUMP 0x271a <_HostnameCallback+0x1f6> (BP);
    265c:	22 e5 0a 02 	P2 = [P4 + 0x828];
    2660:	20 e4 0b 02 	R0 = [P4 + 0x82c];
    2664:	28 e6 10 00 	[P5 + 0x40] = R0;
    2668:	42 0c       	CC = P2 == 0x0;
    266a:	56 18       	IF CC JUMP 0x2716 <_HostnameCallback+0x1f2>;
    266c:	43 30       	R0 = P3;
    266e:	4d 30       	R1 = P5;
    2670:	17 30       	R2 = R7;
    2672:	51 20       	JUMP.S 0x2714 <_HostnameCallback+0x1f0>;
    2674:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4(  4) */
    2678:	43 30       	R0 = P3;
    267a:	01 e1 18 01 	R1.L = 0x118;		/* (280)	R1=0x118(280) */
    267e:	ff e3 c1 ec 	CALL 0x0 <_FlushAddressCacheRecords>;
    2682:	18 e4 37 00 	R0 = [P3 + 0xdc];
    2686:	00 0c       	CC = R0 == 0x0;
    2688:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    268a:	01 07       	IF CC R0 = R1;
    268c:	18 e6 fc 07 	[P3 + 0x1ff0] = R0;
    2690:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1(  1) */
    2694:	43 30       	R0 = P3;
    2696:	01 e1 18 01 	R1.L = 0x118;		/* (280)	R1=0x118(280) */
    269a:	ff e3 b3 ec 	CALL 0x0 <_FlushAddressCacheRecords>;
    269e:	44 0c       	CC = P4 == 0x0;
    26a0:	0c 14       	IF !CC JUMP 0x26b8 <_HostnameCallback+0x194> (BP);
    26a2:	a6 6c       	SP += 0x14;		/* ( 20) */
    26a4:	77 90       	FP = [SP++];
    26a6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x118(280) */
    26aa:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    26ac:	01 e1 9c 12 	R1.L = 0x129c;		/* (4764)	R1=0x129c(4764) */
    26b0:	27 01       	RETS = [SP++];
    26b2:	bb 05       	(R7:7, P5:3) = [SP++];
    26b4:	ff e2 a6 ec 	JUMP.L 0x0 <_FlushAddressCacheRecords>;
    26b8:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x4b4 */
    26bc:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    26be:	08 0c       	CC = R0 == 0x1;
    26c0:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    26c4:	0e 14       	IF !CC JUMP 0x26e0 <_HostnameCallback+0x1bc> (BP);
    26c6:	10 91       	R0 = [P2];
    26c8:	00 0c       	CC = R0 == 0x0;
    26ca:	19 1c       	IF CC JUMP 0x26fc <_HostnameCallback+0x1d8> (BP);
    26cc:	68 a2       	R0 = [P5 + 0x24];
    26ce:	20 64       	R0 += 0x4;		/* (  4) */
    26d0:	f0 b0       	[SP + 0xc] = R0;
    26d2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x129c(4764) */
    26d6:	2a a2       	R2 = [P5 + 0x20];
    26d8:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    26da:	01 e1 d4 12 	R1.L = 0x12d4;		/* (4820)	R1=0x12d4(4820) */
    26de:	0d 20       	JUMP.S 0x26f8 <_HostnameCallback+0x1d4>;
    26e0:	10 91       	R0 = [P2];
    26e2:	00 0c       	CC = R0 == 0x0;
    26e4:	0c 1c       	IF CC JUMP 0x26fc <_HostnameCallback+0x1d8> (BP);
    26e6:	68 a2       	R0 = [P5 + 0x24];
    26e8:	20 64       	R0 += 0x4;		/* (  4) */
    26ea:	f0 b0       	[SP + 0xc] = R0;
    26ec:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x12d4(4820) */
    26f0:	2a a2       	R2 = [P5 + 0x20];
    26f2:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    26f4:	01 e1 f8 12 	R1.L = 0x12f8;		/* (4856)	R1=0x12f8(4856) */
    26f8:	ff e3 84 ec 	CALL 0x0 <_FlushAddressCacheRecords>;
    26fc:	00 00       	NOP;
    26fe:	22 e5 0a 02 	P2 = [P4 + 0x828];
    2702:	20 e4 0b 02 	R0 = [P4 + 0x82c];
    2706:	28 e6 10 00 	[P5 + 0x40] = R0;
    270a:	42 0c       	CC = P2 == 0x0;
    270c:	05 18       	IF CC JUMP 0x2716 <_HostnameCallback+0x1f2>;
    270e:	43 30       	R0 = P3;
    2710:	4d 30       	R1 = P5;
    2712:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    2714:	62 00       	CALL (P2);
    2716:	2c e7 10 00 	[P5 + 0x40] = P4;
    271a:	a6 6c       	SP += 0x14;		/* ( 20) */
    271c:	77 90       	FP = [SP++];
    271e:	27 01       	RETS = [SP++];
    2720:	bb 05       	(R7:7, P5:3) = [SP++];
    2722:	10 00       	RTS;

00002724 <_mDNS_StartNATOperation>:
_mDNS_StartNATOperation():
    2724:	68 05       	[--SP] = (R7:5);
    2726:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0xdf0(3568) */
    272a:	67 01       	[--SP] = RETS;
    272c:	29 30       	R5 = R1;
    272e:	06 e1 6c 01 	R6.L = 0x16c;		/* (364)	R6=0x16c(364) */
    2732:	a6 6f       	SP += -0xc;		/* (-12) */
    2734:	38 30       	R7 = R0;
    2736:	0e 30       	R1 = R6;
    2738:	ff e3 64 ec 	CALL 0x0 <_FlushAddressCacheRecords>;
    273c:	0d 30       	R1 = R5;
    273e:	07 30       	R0 = R7;
    2740:	ff e3 90 fc 	CALL 0x2060 <_mDNS_StartNATOperation_internal>;
    2744:	28 30       	R5 = R0;
    2746:	07 30       	R0 = R7;
    2748:	0e 30       	R1 = R6;
    274a:	ff e3 5b ec 	CALL 0x0 <_FlushAddressCacheRecords>;
    274e:	66 6c       	SP += 0xc;		/* ( 12) */
    2750:	05 30       	R0 = R5;
    2752:	27 01       	RETS = [SP++];
    2754:	28 05       	(R7:5) = [SP++];
    2756:	10 00       	RTS;

00002758 <_mDNS_StopNATOperation>:
_mDNS_StopNATOperation():
    2758:	68 05       	[--SP] = (R7:5);
    275a:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0x16c(364) */
    275e:	67 01       	[--SP] = RETS;
    2760:	29 30       	R5 = R1;
    2762:	06 e1 54 01 	R6.L = 0x154;		/* (340)	R6=0x154(340) */
    2766:	a6 6f       	SP += -0xc;		/* (-12) */
    2768:	38 30       	R7 = R0;
    276a:	0e 30       	R1 = R6;
    276c:	ff e3 4a ec 	CALL 0x0 <_FlushAddressCacheRecords>;
    2770:	0d 30       	R1 = R5;
    2772:	07 30       	R0 = R7;
    2774:	ff e3 34 fd 	CALL 0x21dc <_mDNS_StopNATOperation_internal>;
    2778:	28 30       	R5 = R0;
    277a:	07 30       	R0 = R7;
    277c:	0e 30       	R1 = R6;
    277e:	ff e3 41 ec 	CALL 0x0 <_FlushAddressCacheRecords>;
    2782:	66 6c       	SP += 0xc;		/* ( 12) */
    2784:	05 30       	R0 = R5;
    2786:	27 01       	RETS = [SP++];
    2788:	28 05       	(R7:5) = [SP++];
    278a:	10 00       	RTS;

0000278c <_uDNS_recvLLQResponse>:
_uDNS_recvLLQResponse():
    278c:	e3 05       	[--SP] = (R7:4, P5:3);
    278e:	00 e8 a3 00 	LINK 0x28c;		/* (652) */
    2792:	39 32       	FP = R1;
    2794:	18 32       	P3 = R0;
    2796:	3a 30       	R7 = R2;
    2798:	36 e4 b1 00 	R6 = [SP + 0x2c4];
    279c:	b8 a4       	R0 = W[FP + 0x4] (Z);
    279e:	00 0c       	CC = R0 == 0x0;
    27a0:	02 10       	IF !CC JUMP 0x27a4 <_uDNS_recvLLQResponse+0x18>;
    27a2:	41 22       	JUMP.S 0x2c24 <_uDNS_recvLLQResponse+0x498>;
    27a4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    27a6:	6e 30       	R5 = SP;
    27a8:	f0 b0       	[SP + 0xc] = R0;
    27aa:	45 65       	R5 += 0x28;		/* ( 40) */
    27ac:	61 64       	R1 += 0xc;		/* ( 12) */
    27ae:	35 b1       	[SP + 0x10] = R5;
    27b0:	47 30       	R0 = FP;
    27b2:	ff e3 27 ec 	CALL 0x0 <_FlushAddressCacheRecords>;
    27b6:	00 0c       	CC = R0 == 0x0;
    27b8:	02 14       	IF !CC JUMP 0x27bc <_uDNS_recvLLQResponse+0x30> (BP);
    27ba:	35 22       	JUMP.S 0x2c24 <_uDNS_recvLLQResponse+0x498>;
    27bc:	4f 30       	R1 = FP;
    27be:	17 30       	R2 = R7;
    27c0:	43 30       	R0 = P3;
    27c2:	ff e3 1f ec 	CALL 0x0 <_FlushAddressCacheRecords>;
    27c6:	20 32       	P4 = R0;
    27c8:	46 30       	R0 = SP;
    27ca:	21 e1 5c 01 	R1 = 0x15c (X);		/*		R1=0x15c(348) */
    27ce:	08 51       	R4 = R0 + R1;
    27d0:	1d e5 4c 00 	P5 = [P3 + 0x130];
    27d4:	44 0c       	CC = P4 == 0x0;
    27d6:	00 02       	R0 = CC;
    27d8:	27 e1 34 01 	R7 = 0x134 (X);		/*		R7=0x134(308) */
    27dc:	b0 e6 27 00 	B[SP + 0x27] = R0;
    27e0:	25 e1 e0 00 	R5 = 0xe0 (X);		/*		R5=0xe0(224) */
    27e4:	1a 22       	JUMP.S 0x2c18 <_uDNS_recvLLQResponse+0x48c>;
    27e6:	00 00       	NOP;
    27e8:	68 e4 99 00 	R0 = W[P5 + 0x132] (Z);
    27ec:	00 0c       	CC = R0 == 0x0;
    27ee:	02 10       	IF !CC JUMP 0x27f2 <_uDNS_recvLLQResponse+0x66>;
    27f0:	12 22       	JUMP.S 0x2c14 <_uDNS_recvLLQResponse+0x488>;
    27f2:	28 e4 8e 00 	R0 = [P5 + 0x238];
    27f6:	00 0c       	CC = R0 == 0x0;
    27f8:	02 10       	IF !CC JUMP 0x27fc <_uDNS_recvLLQResponse+0x70>;
    27fa:	0d 22       	JUMP.S 0x2c14 <_uDNS_recvLLQResponse+0x488>;
    27fc:	69 e4 1a 01 	R1 = W[P5 + 0x234] (Z);
    2800:	70 e4 2e 01 	R0 = W[SP + 0x25c] (Z);
    2804:	01 08       	CC = R1 == R0;
    2806:	02 18       	IF CC JUMP 0x280a <_uDNS_recvLLQResponse+0x7e>;
    2808:	06 22       	JUMP.S 0x2c14 <_uDNS_recvLLQResponse+0x488>;
    280a:	69 a0       	R1 = [P5 + 0x4];
    280c:	f0 a2       	R0 = [SP + 0x2c];
    280e:	01 08       	CC = R1 == R0;
    2810:	02 18       	IF CC JUMP 0x2814 <_uDNS_recvLLQResponse+0x88>;
    2812:	01 22       	JUMP.S 0x2c14 <_uDNS_recvLLQResponse+0x488>;
    2814:	4d 30       	R1 = P5;
    2816:	39 50       	R0 = R1 + R7;
    2818:	0c 30       	R1 = R4;
    281a:	ff e3 f3 eb 	CALL 0x0 <_FlushAddressCacheRecords>;
    281e:	00 0c       	CC = R0 == 0x0;
    2820:	fa 1d       	IF CC JUMP 0x2c14 <_uDNS_recvLLQResponse+0x488> (BP);
    2822:	28 e4 40 00 	R0 = [P5 + 0x100];
    2826:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
    2828:	08 08       	CC = R0 == R1;
    282a:	4e 14       	IF !CC JUMP 0x28c6 <_uDNS_recvLLQResponse+0x13a> (BP);
    282c:	3a 95       	R2 = W[FP] (Z);
    282e:	69 e4 99 00 	R1 = W[P5 + 0x132] (Z);
    2832:	0a 08       	CC = R2 == R1;
    2834:	49 14       	IF !CC JUMP 0x28c6 <_uDNS_recvLLQResponse+0x13a> (BP);
    2836:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2838:	98 e6 88 7c 	B[P3 + 0x7c88] = R0;
    283c:	28 e4 38 00 	R0 = [P5 + 0xe0];
    2840:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
    2842:	08 08       	CC = R0 == R1;
    2844:	04 14       	IF !CC JUMP 0x284c <_uDNS_recvLLQResponse+0xc0> (BP);
    2846:	28 e4 39 00 	R0 = [P5 + 0xe4];
    284a:	0f 20       	JUMP.S 0x2868 <_uDNS_recvLLQResponse+0xdc>;
    284c:	31 60       	R1 = 0x6 (X);		/*		R1=0x6(  6) */
    284e:	08 08       	CC = R0 == R1;
    2850:	0e 14       	IF !CC JUMP 0x286c <_uDNS_recvLLQResponse+0xe0> (BP);
    2852:	29 e4 3a 00 	R1 = [P5 + 0xe8];
    2856:	28 e4 39 00 	R0 = [P5 + 0xe4];
    285a:	01 54       	R0 = R1 & R0;
    285c:	29 e4 3b 00 	R1 = [P5 + 0xec];
    2860:	08 54       	R0 = R0 & R1;
    2862:	29 e4 3c 00 	R1 = [P5 + 0xf0];
    2866:	08 54       	R0 = R0 & R1;
    2868:	38 0c       	CC = R0 == -0x1;
    286a:	0d 1c       	IF CC JUMP 0x2884 <_uDNS_recvLLQResponse+0xf8> (BP);
    286c:	00 00       	NOP;
    286e:	58 e4 d0 13 	R0 = W[P3 + 0x27a0] (Z);
    2872:	00 0c       	CC = R0 == 0x0;
    2874:	08 1c       	IF CC JUMP 0x2884 <_uDNS_recvLLQResponse+0xf8> (BP);
    2876:	18 e4 ea 09 	R0 = [P3 + 0x27a8];
    287a:	00 0c       	CC = R0 == 0x0;
    287c:	04 10       	IF !CC JUMP 0x2884 <_uDNS_recvLLQResponse+0xf8>;
    287e:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    2880:	28 e6 40 00 	[P5 + 0x100] = R0;
    2884:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    2888:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    288c:	10 95       	R0 = W[P2] (Z);
    288e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    2892:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    2896:	68 e6 7a 00 	W[P5 + 0xf4] = R0;
    289a:	17 91       	R7 = [P2];
    289c:	20 e1 5a 00 	R0 = 0x5a (X);		/*		R0=0x5a( 90) */
    28a0:	f8 40       	R0 *= R7;
    28a2:	ff e3 af eb 	CALL 0x0 <_FlushAddressCacheRecords>;
    28a6:	21 e1 84 03 	R1 = 0x384 (X);		/*		R1=0x384(900) */
    28aa:	f9 40       	R1 *= R7;
    28ac:	48 50       	R1 = R0 + R1;
    28ae:	18 e4 37 00 	R0 = [P3 + 0xdc];
    28b2:	29 b1       	[P5 + 0x10] = R1;
    28b4:	e8 b0       	[P5 + 0xc] = R0;
    28b6:	43 30       	R0 = P3;
    28b8:	4d 30       	R1 = P5;
    28ba:	ff e3 a3 eb 	CALL 0x0 <_FlushAddressCacheRecords>;
    28be:	16 32       	P2 = R6;
    28c0:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    28c2:	55 93       	[P2] = P5;
    28c4:	b3 21       	JUMP.S 0x2c2a <_uDNS_recvLLQResponse+0x49e>;
    28c6:	b1 e4 27 00 	R1 = B[SP + 0x27] (Z);
    28ca:	09 02       	CC = R1;
    28cc:	a4 19       	IF CC JUMP 0x2c14 <_uDNS_recvLLQResponse+0x488>;
    28ce:	18 0c       	CC = R0 == 0x3;
    28d0:	45 14       	IF !CC JUMP 0x295a <_uDNS_recvLLQResponse+0x1ce> (BP);
    28d2:	e1 a4       	R1 = W[P4 + 0x6] (Z);
    28d4:	19 0c       	CC = R1 == 0x3;
    28d6:	42 14       	IF !CC JUMP 0x295a <_uDNS_recvLLQResponse+0x1ce> (BP);
    28d8:	e2 a0       	R2 = [P4 + 0xc];
    28da:	29 e4 44 00 	R1 = [P5 + 0x110];
    28de:	0a 08       	CC = R2 == R1;
    28e0:	3d 14       	IF !CC JUMP 0x295a <_uDNS_recvLLQResponse+0x1ce> (BP);
    28e2:	22 a1       	R2 = [P4 + 0x10];
    28e4:	29 e4 45 00 	R1 = [P5 + 0x114];
    28e8:	0a 08       	CC = R2 == R1;
    28ea:	38 14       	IF !CC JUMP 0x295a <_uDNS_recvLLQResponse+0x1ce> (BP);
    28ec:	2a e1 8c 59 	P2 = 0x598c (X);		/*		P2=0x598c(22924) */
    28f0:	93 5a       	P2 = P3 + P2;
    28f2:	42 30       	R0 = P2;
    28f4:	7a 30       	R7 = P2;
    28f6:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x598c */
    28fa:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    28fe:	12 95       	R2 = W[P2] (Z);
    2900:	39 95       	R1 = W[FP] (Z);
    2902:	ff e3 7f eb 	CALL 0x0 <_FlushAddressCacheRecords>;
    2906:	2a e1 98 59 	P2 = 0x5998 (X);		/*		P2=0x5998(22936) */
    290a:	93 5a       	P2 = P3 + P2;
    290c:	24 6c       	P4 += 0x4;		/* (  4) */
    290e:	55 30       	R2 = P5;
    2910:	4a 30       	R1 = P2;
    2912:	f4 bc       	[SP + 0xc] = P4;
    2914:	07 30       	R0 = R7;
    2916:	ff e3 19 f0 	CALL 0x948 <_putLLQ>;
    291a:	10 30       	R2 = R0;
    291c:	00 0c       	CC = R0 == 0x0;
    291e:	17 18       	IF CC JUMP 0x294c <_uDNS_recvLLQResponse+0x1c0>;
    2920:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x5998 */
    2924:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    2928:	0f 30       	R1 = R7;
    292a:	10 91       	R0 = [P2];
    292c:	f0 b0       	[SP + 0xc] = R0;
    292e:	28 e4 30 00 	R0 = [P5 + 0xc0];
    2932:	30 b1       	[SP + 0x10] = R0;
    2934:	70 e5 60 01 	R0 = W[SP + 0x2c0] (X);
    2938:	32 e5 af 00 	P2 = [SP + 0x2bc];
    293c:	30 b7       	W[SP + 0x18] = R0;
    293e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2940:	f0 b1       	[SP + 0x1c] = R0;
    2942:	30 b2       	[SP + 0x20] = R0;
    2944:	72 bd       	[SP + 0x14] = P2;
    2946:	43 30       	R0 = P3;
    2948:	ff e3 5c eb 	CALL 0x0 <_FlushAddressCacheRecords>;
    294c:	16 32       	P2 = R6;
    294e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2950:	98 e6 88 7c 	B[P3 + 0x7c88] = R0;
    2954:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    2956:	55 93       	[P2] = P5;
    2958:	69 21       	JUMP.S 0x2c2a <_uDNS_recvLLQResponse+0x49e>;
    295a:	00 00       	NOP;
    295c:	3a 95       	R2 = W[FP] (Z);
    295e:	69 e4 99 00 	R1 = W[P5 + 0x132] (Z);
    2962:	0a 08       	CC = R2 == R1;
    2964:	58 15       	IF !CC JUMP 0x2c14 <_uDNS_recvLLQResponse+0x488> (BP);
    2966:	18 0c       	CC = R0 == 0x3;
    2968:	58 14       	IF !CC JUMP 0x2a18 <_uDNS_recvLLQResponse+0x28c> (BP);
    296a:	e0 a4       	R0 = W[P4 + 0x6] (Z);
    296c:	10 0c       	CC = R0 == 0x2;
    296e:	53 15       	IF !CC JUMP 0x2c14 <_uDNS_recvLLQResponse+0x488> (BP);
    2970:	e1 a0       	R1 = [P4 + 0xc];
    2972:	28 e4 44 00 	R0 = [P5 + 0x110];
    2976:	01 08       	CC = R1 == R0;
    2978:	4e 15       	IF !CC JUMP 0x2c14 <_uDNS_recvLLQResponse+0x488> (BP);
    297a:	21 a1       	R1 = [P4 + 0x10];
    297c:	28 e4 45 00 	R0 = [P5 + 0x114];
    2980:	01 08       	CC = R1 == R0;
    2982:	49 15       	IF !CC JUMP 0x2c14 <_uDNS_recvLLQResponse+0x488> (BP);
    2984:	78 a5       	R0 = W[FP + 0xa] (Z);
    2986:	00 0c       	CC = R0 == 0x0;
    2988:	46 1d       	IF CC JUMP 0x2c14 <_uDNS_recvLLQResponse+0x488> (BP);
    298a:	f8 a4       	R0 = W[FP + 0x6] (Z);
    298c:	00 0c       	CC = R0 == 0x0;
    298e:	43 15       	IF !CC JUMP 0x2c14 <_uDNS_recvLLQResponse+0x488> (BP);
    2990:	22 a5       	R2 = W[P4 + 0x8] (Z);
    2992:	02 0c       	CC = R2 == 0x0;
    2994:	08 1c       	IF CC JUMP 0x29a4 <_uDNS_recvLLQResponse+0x218> (BP);
    2996:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x384(900) */
    299a:	01 e1 1c 13 	R1.L = 0x131c;		/* (4892)	R1=0x131c(4892) */
    299e:	ff e3 31 eb 	CALL 0x0 <_FlushAddressCacheRecords>;
    29a2:	34 20       	JUMP.S 0x2a0a <_uDNS_recvLLQResponse+0x27e>;
    29a4:	00 00       	NOP;
    29a6:	60 a1       	R0 = [P4 + 0x14];
    29a8:	00 0c       	CC = R0 == 0x0;
    29aa:	09 14       	IF !CC JUMP 0x29bc <_uDNS_recvLLQResponse+0x230> (BP);
    29ac:	18 e4 49 00 	R0 = [P3 + 0x124];
    29b0:	00 0c       	CC = R0 == 0x0;
    29b2:	05 1c       	IF CC JUMP 0x29bc <_uDNS_recvLLQResponse+0x230> (BP);
    29b4:	18 e4 37 00 	R0 = [P3 + 0xdc];
    29b8:	18 e6 4a 00 	[P3 + 0x128] = R0;
    29bc:	43 30       	R0 = P3;
    29be:	62 a1       	R2 = [P4 + 0x14];
    29c0:	4d 30       	R1 = P5;
    29c2:	ff e3 1f eb 	CALL 0x0 <_FlushAddressCacheRecords>;
    29c6:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    29ca:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    29ce:	60 a1       	R0 = [P4 + 0x14];
    29d0:	17 91       	R7 = [P2];
    29d2:	c7 40       	R7 *= R0;
    29d4:	28 e6 41 00 	[P5 + 0x104] = R0;
    29d8:	18 e4 37 00 	R0 = [P3 + 0xdc];
    29dc:	e8 b0       	[P5 + 0xc] = R0;
    29de:	07 50       	R0 = R7 + R0;
    29e0:	28 e6 42 00 	[P5 + 0x108] = R0;
    29e4:	51 60       	R1 = 0xa (X);		/*		R1=0xa( 10) */
    29e6:	07 30       	R0 = R7;
    29e8:	ff e3 0c eb 	CALL 0x0 <_FlushAddressCacheRecords>;
    29ec:	ff e3 0a eb 	CALL 0x0 <_FlushAddressCacheRecords>;
    29f0:	82 c6 0f 83 	R1 = R7 >> 0x1f;
    29f4:	f9 51       	R7 = R1 + R7;
    29f6:	0f 4d       	R7 >>>= 0x1;
    29f8:	38 50       	R0 = R0 + R7;
    29fa:	28 b1       	[P5 + 0x10] = R0;
    29fc:	43 30       	R0 = P3;
    29fe:	4d 30       	R1 = P5;
    2a00:	ff e3 00 eb 	CALL 0x0 <_FlushAddressCacheRecords>;
    2a04:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2a06:	68 e6 86 00 	W[P5 + 0x10c] = R0;
    2a0a:	16 32       	P2 = R6;
    2a0c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2a0e:	98 e6 88 7c 	B[P3 + 0x7c88] = R0;
    2a12:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    2a14:	55 93       	[P2] = P5;
    2a16:	0a 21       	JUMP.S 0x2c2a <_uDNS_recvLLQResponse+0x49e>;
    2a18:	10 0e       	CC = R0 <= 0x2 (IU);
    2a1a:	fd 14       	IF !CC JUMP 0x2c14 <_uDNS_recvLLQResponse+0x488> (BP);
    2a1c:	45 30       	R0 = P5;
    2a1e:	68 50       	R1 = R0 + R5;
    2a20:	30 e4 af 00 	R0 = [SP + 0x2bc];
    2a24:	ff e3 ee ea 	CALL 0x0 <_FlushAddressCacheRecords>;
    2a28:	00 0c       	CC = R0 == 0x0;
    2a2a:	f5 1c       	IF CC JUMP 0x2c14 <_uDNS_recvLLQResponse+0x488> (BP);
    2a2c:	b9 e5 03 00 	R1 = B[FP + 0x3] (X);
    2a30:	78 60       	R0 = 0xf (X);		/*		R0=0xf( 15) */
    2a32:	01 54       	R0 = R1 & R0;
    2a34:	40 43       	R0 = R0.B (Z);
    2a36:	2d e4 40 00 	R5 = [P5 + 0x100];
    2a3a:	00 0c       	CC = R0 == 0x0;
    2a3c:	14 1c       	IF CC JUMP 0x2a64 <_uDNS_recvLLQResponse+0x2d8> (BP);
    2a3e:	18 0c       	CC = R0 == 0x3;
    2a40:	12 1c       	IF CC JUMP 0x2a64 <_uDNS_recvLLQResponse+0x2d8> (BP);
    2a42:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    2a46:	ff e3 dd ea 	CALL 0x0 <_FlushAddressCacheRecords>;
    2a4a:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    2a4e:	95 5a       	P2 = P5 + P2;
    2a50:	f0 b0       	[SP + 0xc] = R0;
    2a52:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xa( 10) */
    2a56:	52 30       	R2 = P2;
    2a58:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2a5a:	01 e1 4c 13 	R1.L = 0x134c;		/* (4940)	R1=0x134c(4940) */
    2a5e:	ff e3 d1 ea 	CALL 0x0 <_FlushAddressCacheRecords>;
    2a62:	cf 20       	JUMP.S 0x2c00 <_uDNS_recvLLQResponse+0x474>;
    2a64:	00 00       	NOP;
    2a66:	e0 a4       	R0 = W[P4 + 0x6] (Z);
    2a68:	08 0c       	CC = R0 == 0x1;
    2a6a:	12 1c       	IF CC JUMP 0x2a8e <_uDNS_recvLLQResponse+0x302> (BP);
    2a6c:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    2a70:	ff e3 c8 ea 	CALL 0x0 <_FlushAddressCacheRecords>;
    2a74:	f0 b0       	[SP + 0xc] = R0;
    2a76:	e0 a4       	R0 = W[P4 + 0x6] (Z);
    2a78:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    2a7c:	95 5a       	P2 = P5 + P2;
    2a7e:	30 b1       	[SP + 0x10] = R0;
    2a80:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x134c(4940) */
    2a84:	52 30       	R2 = P2;
    2a86:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2a88:	01 e1 9c 13 	R1.L = 0x139c;		/* (5020)	R1=0x139c(5020) */
    2a8c:	15 20       	JUMP.S 0x2ab6 <_uDNS_recvLLQResponse+0x32a>;
    2a8e:	00 00       	NOP;
    2a90:	a0 a4       	R0 = W[P4 + 0x4] (Z);
    2a92:	08 0c       	CC = R0 == 0x1;
    2a94:	14 1c       	IF CC JUMP 0x2abc <_uDNS_recvLLQResponse+0x330> (BP);
    2a96:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    2a9a:	ff e3 b3 ea 	CALL 0x0 <_FlushAddressCacheRecords>;
    2a9e:	f0 b0       	[SP + 0xc] = R0;
    2aa0:	a0 a4       	R0 = W[P4 + 0x4] (Z);
    2aa2:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    2aa6:	95 5a       	P2 = P5 + P2;
    2aa8:	30 b1       	[SP + 0x10] = R0;
    2aaa:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x139c(5020) */
    2aae:	52 30       	R2 = P2;
    2ab0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2ab2:	01 e1 cc 13 	R1.L = 0x13cc;		/* (5068)	R1=0x13cc(5068) */
    2ab6:	ff e3 a5 ea 	CALL 0x0 <_FlushAddressCacheRecords>;
    2aba:	a3 20       	JUMP.S 0x2c00 <_uDNS_recvLLQResponse+0x474>;
    2abc:	0d 0c       	CC = R5 == 0x1;
    2abe:	2e 14       	IF !CC JUMP 0x2b1a <_uDNS_recvLLQResponse+0x38e> (BP);
    2ac0:	22 a5       	R2 = W[P4 + 0x8] (Z);
    2ac2:	02 0c       	CC = R2 == 0x0;
    2ac4:	09 1c       	IF CC JUMP 0x2ad6 <_uDNS_recvLLQResponse+0x34a> (BP);
    2ac6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x13cc(5068) */
    2aca:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2acc:	01 e1 00 14 	R1.L = 0x1400;		/* (5120)	R1=0x1400(5120) */
    2ad0:	ff e3 98 ea 	CALL 0x0 <_FlushAddressCacheRecords>;
    2ad4:	59 20       	JUMP.S 0x2b86 <_uDNS_recvLLQResponse+0x3fa>;
    2ad6:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    2ada:	60 a1       	R0 = [P4 + 0x14];
    2adc:	28 e6 41 00 	[P5 + 0x104] = R0;
    2ae0:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    2ae4:	60 a1       	R0 = [P4 + 0x14];
    2ae6:	11 91       	R1 = [P2];
    2ae8:	c8 40       	R0 *= R1;
    2aea:	19 e4 37 00 	R1 = [P3 + 0xdc];
    2aee:	08 50       	R0 = R0 + R1;
    2af0:	28 e6 42 00 	[P5 + 0x108] = R0;
    2af4:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    2af6:	28 e6 40 00 	[P5 + 0x100] = R0;
    2afa:	e0 a0       	R0 = [P4 + 0xc];
    2afc:	21 a1       	R1 = [P4 + 0x10];
    2afe:	28 e6 44 00 	[P5 + 0x110] = R0;
    2b02:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2b04:	29 e6 45 00 	[P5 + 0x114] = R1;
    2b08:	68 e6 86 00 	W[P5 + 0x10c] = R0;
    2b0c:	54 30       	R2 = P4;
    2b0e:	22 64       	R2 += 0x4;		/* (  4) */
    2b10:	43 30       	R0 = P3;
    2b12:	4d 30       	R1 = P5;
    2b14:	ff e3 9a ef 	CALL 0xa48 <_sendChallengeResponse>;
    2b18:	74 20       	JUMP.S 0x2c00 <_uDNS_recvLLQResponse+0x474>;
    2b1a:	15 0c       	CC = R5 == 0x2;
    2b1c:	72 14       	IF !CC JUMP 0x2c00 <_uDNS_recvLLQResponse+0x474> (BP);
    2b1e:	6a af       	P2 = [P5 + 0x34];
    2b20:	42 0c       	CC = P2 == 0x0;
    2b22:	1c 1c       	IF CC JUMP 0x2b5a <_uDNS_recvLLQResponse+0x3ce> (BP);
    2b24:	90 a0       	R0 = [P2 + 0x8];
    2b26:	00 0c       	CC = R0 == 0x0;
    2b28:	19 18       	IF CC JUMP 0x2b5a <_uDNS_recvLLQResponse+0x3ce>;
    2b2a:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    2b2e:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    2b32:	10 91       	R0 = [P2];
    2b34:	00 0c       	CC = R0 == 0x0;
    2b36:	0b 1c       	IF CC JUMP 0x2b4c <_uDNS_recvLLQResponse+0x3c0> (BP);
    2b38:	20 a1       	R0 = [P4 + 0x10];
    2b3a:	e2 a0       	R2 = [P4 + 0xc];
    2b3c:	f0 b0       	[SP + 0xc] = R0;
    2b3e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1400(5120) */
    2b42:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    2b44:	01 e1 38 14 	R1.L = 0x1438;		/* (5176)	R1=0x1438(5176) */
    2b48:	ff e3 5c ea 	CALL 0x0 <_FlushAddressCacheRecords>;
    2b4c:	00 00       	NOP;
    2b4e:	e0 a0       	R0 = [P4 + 0xc];
    2b50:	21 a1       	R1 = [P4 + 0x10];
    2b52:	28 e6 44 00 	[P5 + 0x110] = R0;
    2b56:	29 e6 45 00 	[P5 + 0x114] = R1;
    2b5a:	00 00       	NOP;
    2b5c:	20 a5       	R0 = W[P4 + 0x8] (Z);
    2b5e:	00 0c       	CC = R0 == 0x0;
    2b60:	18 1c       	IF CC JUMP 0x2b90 <_uDNS_recvLLQResponse+0x404> (BP);
    2b62:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    2b66:	ff e3 4d ea 	CALL 0x0 <_FlushAddressCacheRecords>;
    2b6a:	f0 b0       	[SP + 0xc] = R0;
    2b6c:	20 a5       	R0 = W[P4 + 0x8] (Z);
    2b6e:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    2b72:	95 5a       	P2 = P5 + P2;
    2b74:	30 b1       	[SP + 0x10] = R0;
    2b76:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1438(5176) */
    2b7a:	52 30       	R2 = P2;
    2b7c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2b7e:	01 e1 6c 14 	R1.L = 0x146c;		/* (5228)	R1=0x146c(5228) */
    2b82:	ff e3 3f ea 	CALL 0x0 <_FlushAddressCacheRecords>;
    2b86:	43 30       	R0 = P3;
    2b88:	4d 30       	R1 = P5;
    2b8a:	ff e3 47 ef 	CALL 0xa18 <_StartLLQPolling>;
    2b8e:	39 20       	JUMP.S 0x2c00 <_uDNS_recvLLQResponse+0x474>;
    2b90:	00 00       	NOP;
    2b92:	29 e4 44 00 	R1 = [P5 + 0x110];
    2b96:	e0 a0       	R0 = [P4 + 0xc];
    2b98:	01 08       	CC = R1 == R0;
    2b9a:	06 14       	IF !CC JUMP 0x2ba6 <_uDNS_recvLLQResponse+0x41a> (BP);
    2b9c:	29 e4 45 00 	R1 = [P5 + 0x114];
    2ba0:	20 a1       	R0 = [P4 + 0x10];
    2ba2:	01 08       	CC = R1 == R0;
    2ba4:	09 18       	IF CC JUMP 0x2bb6 <_uDNS_recvLLQResponse+0x42a>;
    2ba6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x146c(5228) */
    2baa:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2bac:	01 e1 a4 14 	R1.L = 0x14a4;		/* (5284)	R1=0x14a4(5284) */
    2bb0:	ff e3 28 ea 	CALL 0x0 <_FlushAddressCacheRecords>;
    2bb4:	26 20       	JUMP.S 0x2c00 <_uDNS_recvLLQResponse+0x474>;
    2bb6:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    2bb8:	28 e6 40 00 	[P5 + 0x100] = R0;
    2bbc:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2bbe:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    2bc2:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    2bc6:	68 e6 86 00 	W[P5 + 0x10c] = R0;
    2bca:	60 a1       	R0 = [P4 + 0x14];
    2bcc:	17 91       	R7 = [P2];
    2bce:	c7 40       	R7 *= R0;
    2bd0:	28 e6 41 00 	[P5 + 0x104] = R0;
    2bd4:	18 e4 37 00 	R0 = [P3 + 0xdc];
    2bd8:	e8 b0       	[P5 + 0xc] = R0;
    2bda:	07 50       	R0 = R7 + R0;
    2bdc:	28 e6 42 00 	[P5 + 0x108] = R0;
    2be0:	51 60       	R1 = 0xa (X);		/*		R1=0xa( 10) */
    2be2:	07 30       	R0 = R7;
    2be4:	ff e3 0e ea 	CALL 0x0 <_FlushAddressCacheRecords>;
    2be8:	ff e3 0c ea 	CALL 0x0 <_FlushAddressCacheRecords>;
    2bec:	82 c6 0f 83 	R1 = R7 >> 0x1f;
    2bf0:	f9 51       	R7 = R1 + R7;
    2bf2:	0f 4d       	R7 >>>= 0x1;
    2bf4:	38 50       	R0 = R0 + R7;
    2bf6:	28 b1       	[P5 + 0x10] = R0;
    2bf8:	43 30       	R0 = P3;
    2bfa:	4d 30       	R1 = P5;
    2bfc:	ff e3 02 ea 	CALL 0x0 <_FlushAddressCacheRecords>;
    2c00:	16 32       	P2 = R6;
    2c02:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2c04:	98 e6 88 7c 	B[P3 + 0x7c88] = R0;
    2c08:	15 0c       	CC = R5 == 0x2;
    2c0a:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    2c0c:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    2c0e:	55 93       	[P2] = P5;
    2c10:	01 06       	IF !CC R0 = R1;
    2c12:	0c 20       	JUMP.S 0x2c2a <_uDNS_recvLLQResponse+0x49e>;
    2c14:	00 00       	NOP;
    2c16:	6d 91       	P5 = [P5];
    2c18:	45 0c       	CC = P5 == 0x0;
    2c1a:	02 18       	IF CC JUMP 0x2c1e <_uDNS_recvLLQResponse+0x492>;
    2c1c:	e5 2d       	JUMP.S 0x27e6 <_uDNS_recvLLQResponse+0x5a>;
    2c1e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2c20:	98 e6 88 7c 	B[P3 + 0x7c88] = R0;
    2c24:	16 32       	P2 = R6;
    2c26:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2c28:	10 93       	[P2] = R0;
    2c2a:	29 e1 8c 02 	P1 = 0x28c (X);		/*		P1=0x28c(652) */
    2c2e:	8e 5b       	SP = SP + P1;
    2c30:	77 90       	FP = [SP++];
    2c32:	27 01       	RETS = [SP++];
    2c34:	a3 05       	(R7:4, P5:3) = [SP++];
    2c36:	10 00       	RTS;

00002c38 <_DisposeTCPConn>:
_DisposeTCPConn():
    2c38:	c5 04       	[--SP] = (P5:5);
    2c3a:	28 32       	P5 = R0;
    2c3c:	67 01       	[--SP] = RETS;
    2c3e:	a6 6f       	SP += -0xc;		/* (-12) */
    2c40:	68 a0       	R0 = [P5 + 0x4];
    2c42:	ff e3 df e9 	CALL 0x0 <_FlushAddressCacheRecords>;
    2c46:	28 e4 c9 08 	R0 = [P5 + 0x2324];
    2c4a:	00 0c       	CC = R0 == 0x0;
    2c4c:	03 18       	IF CC JUMP 0x2c52 <_DisposeTCPConn+0x1a>;
    2c4e:	ff e3 d9 e9 	CALL 0x0 <_FlushAddressCacheRecords>;
    2c52:	66 6c       	SP += 0xc;		/* ( 12) */
    2c54:	27 01       	RETS = [SP++];
    2c56:	45 30       	R0 = P5;
    2c58:	85 04       	(P5:5) = [SP++];
    2c5a:	ff e2 d3 e9 	JUMP.L 0x0 <_FlushAddressCacheRecords>;
	...

00002c60 <_tcpCallback>:
_tcpCallback():
    2c60:	e3 05       	[--SP] = (R7:4, P5:3);
    2c62:	21 32       	P4 = R1;
    2c64:	30 30       	R6 = R0;
    2c66:	00 e8 15 00 	LINK 0x54;		/* (84) */
    2c6a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2c6c:	2a 30       	R5 = R2;
    2c6e:	25 e5 c1 08 	P5 = [P4 + 0x2304];
    2c72:	37 e4 21 00 	R7 = [SP + 0x84];
    2c76:	30 e6 14 00 	[SP + 0x50] = R0;
    2c7a:	63 91       	P3 = [P4];
    2c7c:	45 0c       	CC = P5 == 0x0;
    2c7e:	05 18       	IF CC JUMP 0x2c88 <_tcpCallback+0x28>;
    2c80:	2f e1 f8 00 	FP = 0xf8 (X);		/*		FP=0xf8(248) */
    2c84:	fd 5b       	FP = P5 + FP;
    2c86:	08 20       	JUMP.S 0x2c96 <_tcpCallback+0x36>;
    2c88:	22 e5 c2 08 	P2 = [P4 + 0x2308];
    2c8c:	42 0c       	CC = P2 == 0x0;
    2c8e:	1a 1c       	IF CC JUMP 0x2cc2 <_tcpCallback+0x62> (BP);
    2c90:	2f e1 00 01 	FP = 0x100 (X);		/*		FP=0x100(256) */
    2c94:	fa 5b       	FP = P2 + FP;
    2c96:	7a 91       	P2 = [FP];
    2c98:	62 08       	CC = P2 == P4;
    2c9a:	15 1c       	IF CC JUMP 0x2cc4 <_tcpCallback+0x64> (BP);
    2c9c:	60 a0       	R0 = [P4 + 0x4];
    2c9e:	ff e3 b1 e9 	CALL 0x0 <_FlushAddressCacheRecords>;
    2ca2:	10 30       	R2 = R0;
    2ca4:	38 91       	R0 = [FP];
    2ca6:	f0 b0       	[SP + 0xc] = R0;
    2ca8:	20 e4 c2 08 	R0 = [P4 + 0x2308];
    2cac:	b0 b1       	[SP + 0x18] = R0;
    2cae:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1(  1) */
    2cb2:	34 bd       	[SP + 0x10] = P4;
    2cb4:	75 bd       	[SP + 0x14] = P5;
    2cb6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2cb8:	01 e1 d0 14 	R1.L = 0x14d0;		/* (5328)	R1=0x14d0(5328) */
    2cbc:	ff e3 a2 e9 	CALL 0x0 <_FlushAddressCacheRecords>;
    2cc0:	02 20       	JUMP.S 0x2cc4 <_tcpCallback+0x64>;
    2cc2:	07 68       	FP = 0x0 (X);		/*		FP=0x0(  0) */
    2cc4:	07 0c       	CC = R7 == 0x0;
    2cc6:	d3 15       	IF !CC JUMP 0x306c <_tcpCallback+0x40c> (BP);
    2cc8:	05 0c       	CC = R5 == 0x0;
    2cca:	f2 1c       	IF CC JUMP 0x2eae <_tcpCallback+0x24e> (BP);
    2ccc:	22 e5 c2 08 	P2 = [P4 + 0x2308];
    2cd0:	27 e4 c0 08 	R7 = [P4 + 0x2300];
    2cd4:	42 0c       	CC = P2 == 0x0;
    2cd6:	10 1c       	IF CC JUMP 0x2cf6 <_tcpCallback+0x96> (BP);
    2cd8:	29 e1 68 01 	P1 = 0x168 (X);		/*		P1=0x168(360) */
    2cdc:	12 a2       	R2 = [P2 + 0x20];
    2cde:	8a 5a       	P2 = P2 + P1;
    2ce0:	42 30       	R0 = P2;
    2ce2:	02 08       	CC = R2 == R0;
    2ce4:	09 18       	IF CC JUMP 0x2cf6 <_tcpCallback+0x96>;
    2ce6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x14d0(5328) */
    2cea:	f2 bc       	[SP + 0xc] = P2;
    2cec:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2cee:	01 e1 18 15 	R1.L = 0x1518;		/* (5400)	R1=0x1518(5400) */
    2cf2:	ff e3 87 e9 	CALL 0x0 <_FlushAddressCacheRecords>;
    2cf6:	00 00       	NOP;
    2cf8:	22 e5 c2 08 	P2 = [P4 + 0x2308];
    2cfc:	42 0c       	CC = P2 == 0x0;
    2cfe:	0d 1c       	IF CC JUMP 0x2d18 <_tcpCallback+0xb8> (BP);
    2d00:	29 e1 68 01 	P1 = 0x168 (X);		/*		P1=0x168(360) */
    2d04:	11 a2       	R1 = [P2 + 0x20];
    2d06:	8a 5a       	P2 = P2 + P1;
    2d08:	5a 30       	R3 = P2;
    2d0a:	19 08       	CC = R1 == R3;
    2d0c:	02 18       	IF CC JUMP 0x2d10 <_tcpCallback+0xb0>;
    2d0e:	7a 22       	JUMP.S 0x3202 <_tcpCallback+0x5a2>;
    2d10:	43 30       	R0 = P3;
    2d12:	ff e3 9b f6 	CALL 0x1a48 <_GetAuthInfoForName>;
    2d16:	02 20       	JUMP.S 0x2d1a <_tcpCallback+0xba>;
    2d18:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2d1a:	45 0c       	CC = P5 == 0x0;
    2d1c:	05 14       	IF !CC JUMP 0x2d26 <_tcpCallback+0xc6> (BP);
    2d1e:	47 64       	R7 += 0x8;		/* (  8) */
    2d20:	6c 30       	R5 = P4;
    2d22:	bd 50       	R2 = R5 + R7;
    2d24:	8b 20       	JUMP.S 0x2e3a <_tcpCallback+0x1da>;
    2d26:	00 00       	NOP;
    2d28:	29 e4 8e 00 	R1 = [P5 + 0x238];
    2d2c:	01 0c       	CC = R1 == 0x0;
    2d2e:	66 1c       	IF CC JUMP 0x2dfa <_tcpCallback+0x19a> (BP);
    2d30:	29 e4 40 00 	R1 = [P5 + 0x100];
    2d34:	19 0c       	CC = R1 == 0x3;
    2d36:	07 14       	IF !CC JUMP 0x2d44 <_tcpCallback+0xe4> (BP);
    2d38:	22 e4 c0 08 	R2 = [P4 + 0x2300];
    2d3c:	42 64       	R2 += 0x8;		/* (  8) */
    2d3e:	7c 30       	R7 = P4;
    2d40:	97 50       	R2 = R7 + R2;
    2d42:	7c 20       	JUMP.S 0x2e3a <_tcpCallback+0x1da>;
    2d44:	20 60       	R0 = 0x4 (X);		/*		R0=0x4(  4) */
    2d46:	01 08       	CC = R1 == R0;
    2d48:	59 1c       	IF CC JUMP 0x2dfa <_tcpCallback+0x19a> (BP);
    2d4a:	58 e4 d0 13 	R0 = W[P3 + 0x27a0] (Z);
    2d4e:	00 0c       	CC = R0 == 0x0;
    2d50:	55 1c       	IF CC JUMP 0x2dfa <_tcpCallback+0x19a> (BP);
    2d52:	68 e4 7a 00 	R0 = W[P5 + 0xf4] (Z);
    2d56:	00 0c       	CC = R0 == 0x0;
    2d58:	51 1c       	IF CC JUMP 0x2dfa <_tcpCallback+0x19a> (BP);
    2d5a:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    2d5c:	2a e1 0c 23 	P2 = 0x230c (X);		/*		P2=0x230c(8972) */
    2d60:	94 5a       	P2 = P4 + P2;
    2d62:	70 e6 1e 00 	W[SP + 0x3c] = R0;
    2d66:	70 e6 1f 00 	W[SP + 0x3e] = R0;
    2d6a:	4a 30       	R1 = P2;
    2d6c:	43 30       	R0 = P3;
    2d6e:	ff e3 27 ef 	CALL 0xbbc <_GetLLQEventPort>;
    2d72:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x230c */
    2d76:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    2d7a:	11 91       	R1 = [P2];
    2d7c:	70 e6 20 00 	W[SP + 0x40] = R0;
    2d80:	01 0c       	CC = R1 == 0x0;
    2d82:	09 1c       	IF CC JUMP 0x2d94 <_tcpCallback+0x134> (BP);
    2d84:	c2 42       	R2 = R0.L (Z);
    2d86:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1518(5400) */
    2d8a:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    2d8c:	01 e1 68 15 	R1.L = 0x1568;		/* (5480)	R1=0x1568(5480) */
    2d90:	ff e3 38 e9 	CALL 0x0 <_FlushAddressCacheRecords>;
    2d94:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    2d98:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    2d9c:	10 91       	R0 = [P2];
    2d9e:	51 a0       	R1 = [P2 + 0x4];
    2da0:	30 e6 11 00 	[SP + 0x44] = R0;
    2da4:	20 e1 20 1c 	R0 = 0x1c20 (X);		/*		R0=0x1c20(7200) */
    2da8:	7c 30       	R7 = P4;
    2daa:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    2dae:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    2db2:	31 e6 12 00 	[SP + 0x48] = R1;
    2db6:	30 e6 13 00 	[SP + 0x4c] = R0;
    2dba:	47 64       	R7 += 0x8;		/* (  8) */
    2dbc:	12 95       	R2 = W[P2] (Z);
    2dbe:	69 e5 99 00 	R1 = W[P5 + 0x132] (X);
    2dc2:	07 30       	R0 = R7;
    2dc4:	ff e3 1e e9 	CALL 0x0 <_FlushAddressCacheRecords>;
    2dc8:	46 30       	R0 = SP;
    2dca:	e0 65       	R0 += 0x3c;		/* ( 60) */
    2dcc:	f0 b0       	[SP + 0xc] = R0;
    2dce:	4c 30       	R1 = P4;
    2dd0:	55 30       	R2 = P5;
    2dd2:	a1 64       	R1 += 0x14;		/* ( 20) */
    2dd4:	07 30       	R0 = R7;
    2dd6:	ff e3 b9 ed 	CALL 0x948 <_putLLQ>;
    2dda:	10 30       	R2 = R0;
    2ddc:	00 0c       	CC = R0 == 0x0;
    2dde:	09 14       	IF !CC JUMP 0x2df0 <_tcpCallback+0x190> (BP);
    2de0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1568(5480) */
    2de4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2de6:	01 e1 84 15 	R1.L = 0x1584;		/* (5508)	R1=0x1584(5508) */
    2dea:	ff e3 0b e9 	CALL 0x0 <_FlushAddressCacheRecords>;
    2dee:	3c 21       	JUMP.S 0x3066 <_tcpCallback+0x406>;
    2df0:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    2df2:	68 a3       	R0 = [P5 + 0x34];
    2df4:	69 e6 86 00 	W[P5 + 0x10c] = R1;
    2df8:	21 20       	JUMP.S 0x2e3a <_tcpCallback+0x1da>;
    2dfa:	7c 30       	R7 = P4;
    2dfc:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    2e00:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    2e04:	47 64       	R7 += 0x8;		/* (  8) */
    2e06:	12 95       	R2 = W[P2] (Z);
    2e08:	69 e5 99 00 	R1 = W[P5 + 0x132] (X);
    2e0c:	07 30       	R0 = R7;
    2e0e:	ff e3 f9 e8 	CALL 0x0 <_FlushAddressCacheRecords>;
    2e12:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    2e16:	95 5a       	P2 = P5 + P2;
    2e18:	f2 bc       	[SP + 0xc] = P2;
    2e1a:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    2e1e:	30 b6       	W[SP + 0x10] = R0;
    2e20:	68 e5 1b 01 	R0 = W[P5 + 0x236] (X);
    2e24:	4c 30       	R1 = P4;
    2e26:	a1 64       	R1 += 0x14;		/* ( 20) */
    2e28:	b0 b6       	W[SP + 0x14] = R0;
    2e2a:	22 e1 ec 22 	R2 = 0x22ec (X);		/*		R2=0x22ec(8940) */
    2e2e:	91 50       	R2 = R1 + R2;
    2e30:	07 30       	R0 = R7;
    2e32:	ff e3 e7 e8 	CALL 0x0 <_FlushAddressCacheRecords>;
    2e36:	10 30       	R2 = R0;
    2e38:	68 a3       	R0 = [P5 + 0x34];
    2e3a:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    2e3e:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    2e42:	13 91       	R3 = [P2];
    2e44:	f3 b0       	[SP + 0xc] = R3;
    2e46:	03 60       	R3 = 0x0 (X);		/*		R3=0x0(  0) */
    2e48:	33 b1       	[SP + 0x10] = R3;
    2e4a:	2a e1 0c 23 	P2 = 0x230c (X);		/*		P2=0x230c(8972) */
    2e4e:	94 5a       	P2 = P4 + P2;
    2e50:	63 e5 90 11 	R3 = W[P4 + 0x2320] (X);
    2e54:	30 b2       	[SP + 0x20] = R0;
    2e56:	4c 30       	R1 = P4;
    2e58:	41 64       	R1 += 0x8;		/* (  8) */
    2e5a:	72 bd       	[SP + 0x14] = P2;
    2e5c:	33 b7       	W[SP + 0x18] = R3;
    2e5e:	f6 b1       	[SP + 0x1c] = R6;
    2e60:	43 30       	R0 = P3;
    2e62:	ff e3 cf e8 	CALL 0x0 <_FlushAddressCacheRecords>;
    2e66:	00 0c       	CC = R0 == 0x0;
    2e68:	ff 14       	IF !CC JUMP 0x3066 <_tcpCallback+0x406> (BP);
    2e6a:	45 0c       	CC = P5 == 0x0;
    2e6c:	cb 19       	IF CC JUMP 0x3202 <_tcpCallback+0x5a2>;
    2e6e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_FlushAddressCacheRecords>(  0) */
    2e72:	43 30       	R0 = P3;
    2e74:	01 e1 60 00 	R1.L = 0x60;		/* ( 96)	R1=0x60( 96) */
    2e78:	ff e3 c4 e8 	CALL 0x0 <_FlushAddressCacheRecords>;
    2e7c:	18 e4 37 00 	R0 = [P3 + 0xdc];
    2e80:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x230c */
    2e84:	e8 b0       	[P5 + 0xc] = R0;
    2e86:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    2e8a:	10 91       	R0 = [P2];
    2e8c:	40 4f       	R0 <<= 0x8;
    2e8e:	29 a1       	R1 = [P5 + 0x10];
    2e90:	81 08       	CC = R1 < R0;
    2e92:	02 14       	IF !CC JUMP 0x2e96 <_tcpCallback+0x236> (BP);
    2e94:	28 b1       	[P5 + 0x10] = R0;
    2e96:	43 30       	R0 = P3;
    2e98:	4d 30       	R1 = P5;
    2e9a:	ff e3 b3 e8 	CALL 0x0 <_FlushAddressCacheRecords>;
    2e9e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x60( 96) */
    2ea2:	43 30       	R0 = P3;
    2ea4:	01 e1 60 00 	R1.L = 0x60;		/* ( 96)	R1=0x60( 96) */
    2ea8:	ff e3 ac e8 	CALL 0x0 <_FlushAddressCacheRecords>;
    2eac:	ab 21       	JUMP.S 0x3202 <_tcpCallback+0x5a2>;
    2eae:	00 00       	NOP;
    2eb0:	20 e4 cb 08 	R0 = [P4 + 0x232c];
    2eb4:	08 0e       	CC = R0 <= 0x1 (IU);
    2eb6:	47 14       	IF !CC JUMP 0x2f44 <_tcpCallback+0x2e4> (BP);
    2eb8:	2a e1 28 23 	P2 = 0x2328 (X);		/*		P2=0x2328(9000) */
    2ebc:	94 5a       	P2 = P4 + P2;
    2ebe:	7a 30       	R7 = P2;
    2ec0:	12 60       	R2 = 0x2 (X);		/*		R2=0x2(  2) */
    2ec2:	82 52       	R2 = R2 - R0;
    2ec4:	47 50       	R1 = R7 + R0;
    2ec6:	5e 30       	R3 = SP;
    2ec8:	25 e1 50 00 	R5 = 0x50 (X);		/*		R5=0x50( 80) */
    2ecc:	2b 50       	R0 = R3 + R5;
    2ece:	f0 b0       	[SP + 0xc] = R0;
    2ed0:	06 30       	R0 = R6;
    2ed2:	ff e3 97 e8 	CALL 0x0 <_FlushAddressCacheRecords>;
    2ed6:	10 30       	R2 = R0;
    2ed8:	80 0c       	CC = R0 < 0x0;
    2eda:	07 14       	IF !CC JUMP 0x2ee8 <_tcpCallback+0x288> (BP);
    2edc:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x60( 96) */
    2ee0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2ee2:	01 e1 a0 15 	R1.L = 0x15a0;		/* (5536)	R1=0x15a0(5536) */
    2ee6:	5a 20       	JUMP.S 0x2f9a <_tcpCallback+0x33a>;
    2ee8:	30 e4 14 00 	R0 = [SP + 0x50];
    2eec:	00 0c       	CC = R0 == 0x0;
    2eee:	4b 14       	IF !CC JUMP 0x2f84 <_tcpCallback+0x324> (BP);
    2ef0:	20 e4 cb 08 	R0 = [P4 + 0x232c];
    2ef4:	82 50       	R2 = R2 + R0;
    2ef6:	22 e6 cb 08 	[P4 + 0x232c] = R2;
    2efa:	0a 0e       	CC = R2 <= 0x1 (IU);
    2efc:	83 1d       	IF CC JUMP 0x3202 <_tcpCallback+0x5a2> (BP);
    2efe:	17 32       	P2 = R7;
    2f00:	12 99       	R2 = B[P2] (Z);
    2f02:	90 e4 01 00 	R0 = B[P2 + 0x1] (Z);
    2f06:	42 4f       	R2 <<= 0x8;
    2f08:	82 56       	R2 = R2 | R0;
    2f0a:	62 e6 94 11 	W[P4 + 0x2328] = R2;
    2f0e:	d2 42       	R2 = R2.L (Z);
    2f10:	58 60       	R0 = 0xb (X);		/*		R0=0xb( 11) */
    2f12:	02 0a       	CC = R2 <= R0 (IU);
    2f14:	09 14       	IF !CC JUMP 0x2f26 <_tcpCallback+0x2c6> (BP);
    2f16:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x15a0(5536) */
    2f1a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2f1c:	01 e1 18 16 	R1.L = 0x1618;		/* (5656)	R1=0x1618(5656) */
    2f20:	ff e3 70 e8 	CALL 0x0 <_FlushAddressCacheRecords>;
    2f24:	a1 20       	JUMP.S 0x3066 <_tcpCallback+0x406>;
    2f26:	02 30       	R0 = R2;
    2f28:	ff e3 6c e8 	CALL 0x0 <_FlushAddressCacheRecords>;
    2f2c:	20 e6 c9 08 	[P4 + 0x2324] = R0;
    2f30:	00 0c       	CC = R0 == 0x0;
    2f32:	09 14       	IF !CC JUMP 0x2f44 <_tcpCallback+0x2e4> (BP);
    2f34:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1618(5656) */
    2f38:	01 e1 4c 16 	R1.L = 0x164c;		/* (5708)	R1=0x164c(5708) */
    2f3c:	ff e3 62 e8 	CALL 0x0 <_FlushAddressCacheRecords>;
    2f40:	ef 63       	R7 = -0x3 (X);		/*		R7=0xfffffffd( -3) */
    2f42:	93 20       	JUMP.S 0x3068 <_tcpCallback+0x408>;
    2f44:	5e 30       	R3 = SP;
    2f46:	20 e4 cb 08 	R0 = [P4 + 0x232c];
    2f4a:	08 30       	R1 = R0;
    2f4c:	22 e4 c9 08 	R2 = [P4 + 0x2324];
    2f50:	f1 67       	R1 += -0x2;		/* ( -2) */
    2f52:	4a 50       	R1 = R2 + R1;
    2f54:	62 e4 94 11 	R2 = W[P4 + 0x2328] (Z);
    2f58:	82 52       	R2 = R2 - R0;
    2f5a:	25 e1 50 00 	R5 = 0x50 (X);		/*		R5=0x50( 80) */
    2f5e:	2b 50       	R0 = R3 + R5;
    2f60:	f0 b0       	[SP + 0xc] = R0;
    2f62:	12 64       	R2 += 0x2;		/* (  2) */
    2f64:	06 30       	R0 = R6;
    2f66:	ff e3 4d e8 	CALL 0x0 <_FlushAddressCacheRecords>;
    2f6a:	10 30       	R2 = R0;
    2f6c:	80 0c       	CC = R0 < 0x0;
    2f6e:	07 14       	IF !CC JUMP 0x2f7c <_tcpCallback+0x31c> (BP);
    2f70:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x164c(5708) */
    2f74:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2f76:	01 e1 70 16 	R1.L = 0x1670;		/* (5744)	R1=0x1670(5744) */
    2f7a:	10 20       	JUMP.S 0x2f9a <_tcpCallback+0x33a>;
    2f7c:	30 e4 14 00 	R0 = [SP + 0x50];
    2f80:	00 0c       	CC = R0 == 0x0;
    2f82:	17 1c       	IF CC JUMP 0x2fb0 <_tcpCallback+0x350> (BP);
    2f84:	00 00       	NOP;
    2f86:	20 e4 cc 08 	R0 = [P4 + 0x2330];
    2f8a:	00 0c       	CC = R0 == 0x0;
    2f8c:	0d 14       	IF !CC JUMP 0x2fa6 <_tcpCallback+0x346> (BP);
    2f8e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1670(5744) */
    2f92:	22 e4 cb 08 	R2 = [P4 + 0x232c];
    2f96:	01 e1 e0 15 	R1.L = 0x15e0;		/* (5600)	R1=0x15e0(5600) */
    2f9a:	27 e1 c1 bf 	R7 = -0x403f (X);		/*		R7=0xffffbfc1(-16447) */
    2f9e:	ff e3 31 e8 	CALL 0x0 <_FlushAddressCacheRecords>;
    2fa2:	17 4f       	R7 <<= 0x2;
    2fa4:	64 20       	JUMP.S 0x306c <_tcpCallback+0x40c>;
    2fa6:	47 0c       	CC = FP == 0x0;
    2fa8:	2a 19       	IF CC JUMP 0x31fc <_tcpCallback+0x59c>;
    2faa:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2fac:	38 93       	[FP] = R0;
    2fae:	27 21       	JUMP.S 0x31fc <_tcpCallback+0x59c>;
    2fb0:	00 00       	NOP;
    2fb2:	20 e4 cb 08 	R0 = [P4 + 0x232c];
    2fb6:	82 50       	R2 = R2 + R0;
    2fb8:	22 e6 cb 08 	[P4 + 0x232c] = R2;
    2fbc:	f2 67       	R2 += -0x2;		/* ( -2) */
    2fbe:	60 e4 94 11 	R0 = W[P4 + 0x2328] (Z);
    2fc2:	02 08       	CC = R2 == R0;
    2fc4:	1f 15       	IF !CC JUMP 0x3202 <_tcpCallback+0x5a2> (BP);
    2fc6:	25 e4 c9 08 	R5 = [P4 + 0x2324];
    2fca:	95 50       	R2 = R5 + R2;
    2fcc:	2a e1 0c 23 	P2 = 0x230c (X);		/*		P2=0x230c(8972) */
    2fd0:	94 5a       	P2 = P4 + P2;
    2fd2:	72 b2       	[SP + 0x24] = R2;
    2fd4:	46 30       	R0 = SP;
    2fd6:	4a 30       	R1 = P2;
    2fd8:	40 65       	R0 += 0x28;		/* ( 40) */
    2fda:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
    2fdc:	ff e3 12 e8 	CALL 0x0 <_FlushAddressCacheRecords>;
    2fe0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x230c */
    2fe4:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    2fe8:	17 95       	R7 = W[P2] (Z);
    2fea:	20 e4 cc 08 	R0 = [P4 + 0x2330];
    2fee:	16 32       	P2 = R6;
    2ff0:	08 64       	R0 += 0x1;		/* (  1) */
    2ff2:	20 e6 cc 08 	[P4 + 0x2330] = R0;
    2ff6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    2ff8:	20 e6 c9 08 	[P4 + 0x2324] = R0;
    2ffc:	20 e6 cb 08 	[P4 + 0x232c] = R0;
    3000:	60 e6 94 11 	W[P4 + 0x2328] = R0;
    3004:	10 91       	R0 = [P2];
    3006:	0e 60       	R6 = 0x1 (X);		/*		R6=0x1(  1) */
    3008:	64 e5 90 11 	R4 = W[P4 + 0x2320] (X);
    300c:	86 55       	R6 = R6 & R0;
    300e:	45 0c       	CC = P5 == 0x0;
    3010:	09 1c       	IF CC JUMP 0x3022 <_tcpCallback+0x3c2> (BP);
    3012:	2a e5 3e 00 	P2 = [P5 + 0xf8];
    3016:	42 0c       	CC = P2 == 0x0;
    3018:	05 1c       	IF CC JUMP 0x3022 <_tcpCallback+0x3c2> (BP);
    301a:	57 e5 91 11 	R7 = W[P2 + 0x2322] (X);
    301e:	6f e6 7e 00 	W[P5 + 0xfc] = R7;
    3022:	47 0c       	CC = FP == 0x0;
    3024:	10 18       	IF CC JUMP 0x3044 <_tcpCallback+0x3e4>;
    3026:	45 0c       	CC = P5 == 0x0;
    3028:	09 1c       	IF CC JUMP 0x303a <_tcpCallback+0x3da> (BP);
    302a:	28 e4 8e 00 	R0 = [P5 + 0x238];
    302e:	00 0c       	CC = R0 == 0x0;
    3030:	05 1c       	IF CC JUMP 0x303a <_tcpCallback+0x3da> (BP);
    3032:	98 e4 15 01 	R0 = B[P3 + 0x115] (Z);
    3036:	00 0c       	CC = R0 == 0x0;
    3038:	06 1c       	IF CC JUMP 0x3044 <_tcpCallback+0x3e4> (BP);
    303a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    303c:	38 93       	[FP] = R0;
    303e:	44 30       	R0 = P4;
    3040:	ff e3 fc fd 	CALL 0x2c38 <_DisposeTCPConn>;
    3044:	46 30       	R0 = SP;
    3046:	40 65       	R0 += 0x28;		/* ( 40) */
    3048:	f0 b0       	[SP + 0xc] = R0;
    304a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    304c:	f0 b1       	[SP + 0x1c] = R0;
    304e:	43 30       	R0 = P3;
    3050:	34 b6       	W[SP + 0x10] = R4;
    3052:	76 b1       	[SP + 0x14] = R6;
    3054:	37 b7       	W[SP + 0x18] = R7;
    3056:	0d 30       	R1 = R5;
    3058:	72 a2       	R2 = [SP + 0x24];
    305a:	ff e3 d3 e7 	CALL 0x0 <_FlushAddressCacheRecords>;
    305e:	05 30       	R0 = R5;
    3060:	ff e3 d0 e7 	CALL 0x0 <_FlushAddressCacheRecords>;
    3064:	cf 20       	JUMP.S 0x3202 <_tcpCallback+0x5a2>;
    3066:	ff 63       	R7 = -0x1 (X);		/*		R7=0xffffffff( -1) */
    3068:	47 e1 fe ff 	R7.H = 0xfffe;		/* ( -2)	R7=0xfffeffff(-65537) */
    306c:	47 0c       	CC = FP == 0x0;
    306e:	03 18       	IF CC JUMP 0x3074 <_tcpCallback+0x414>;
    3070:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3072:	38 93       	[FP] = R0;
    3074:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x15e0(5600) */
    3078:	43 30       	R0 = P3;
    307a:	01 e1 60 00 	R1.L = 0x60;		/* ( 96)	R1=0x60( 96) */
    307e:	ff e3 c1 e7 	CALL 0x0 <_FlushAddressCacheRecords>;
    3082:	45 0c       	CC = P5 == 0x0;
    3084:	b5 1c       	IF CC JUMP 0x31ee <_tcpCallback+0x58e> (BP);
    3086:	28 a1       	R0 = [P5 + 0x10];
    3088:	00 0c       	CC = R0 == 0x0;
    308a:	29 e4 8e 00 	R1 = [P5 + 0x238];
    308e:	1a e4 37 00 	R2 = [P3 + 0xdc];
    3092:	57 14       	IF !CC JUMP 0x3140 <_tcpCallback+0x4e0> (BP);
    3094:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    3098:	ea b0       	[P5 + 0xc] = R2;
    309a:	01 0c       	CC = R1 == 0x0;
    309c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    30a0:	34 18       	IF CC JUMP 0x3108 <_tcpCallback+0x4a8>;
    30a2:	19 60       	R1 = 0x3 (X);		/*		R1=0x3(  3) */
    30a4:	16 91       	R6 = [P2];
    30a6:	06 30       	R0 = R6;
    30a8:	10 64       	R0 += 0x2;		/* (  2) */
    30aa:	ff e3 ab e7 	CALL 0x0 <_FlushAddressCacheRecords>;
    30ae:	6d e5 86 00 	R5 = W[P5 + 0x10c] (X);
    30b2:	28 b1       	[P5 + 0x10] = R0;
    30b4:	a8 42       	R0 = R5.L (X);
    30b6:	05 20       	JUMP.S 0x30c0 <_tcpCallback+0x460>;
    30b8:	82 c6 09 84 	R2 = R1 << 0x1;
    30bc:	4a 50       	R1 = R2 + R1;
    30be:	29 b1       	[P5 + 0x10] = R1;
    30c0:	f8 67       	R0 += -0x1;		/* ( -1) */
    30c2:	30 0c       	CC = R0 == -0x2;
    30c4:	29 a1       	R1 = [P5 + 0x10];
    30c6:	f9 17       	IF !CC JUMP 0x30b8 <_tcpCallback+0x458> (BP);
    30c8:	20 e1 84 03 	R0 = 0x384 (X);		/*		R0=0x384(900) */
    30cc:	f0 40       	R0 *= R6;
    30ce:	01 09       	CC = R1 <= R0;
    30d0:	03 1c       	IF CC JUMP 0x30d6 <_tcpCallback+0x476> (BP);
    30d2:	28 b1       	[P5 + 0x10] = R0;
    30d4:	04 20       	JUMP.S 0x30dc <_tcpCallback+0x47c>;
    30d6:	0d 64       	R5 += 0x1;		/* (  1) */
    30d8:	6d e6 86 00 	W[P5 + 0x10c] = R5;
    30dc:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    30e0:	ff e3 90 e7 	CALL 0x0 <_FlushAddressCacheRecords>;
    30e4:	f0 b0       	[SP + 0xc] = R0;
    30e6:	68 e5 86 00 	R0 = W[P5 + 0x10c] (X);
    30ea:	30 b1       	[SP + 0x10] = R0;
    30ec:	28 a1       	R0 = [P5 + 0x10];
    30ee:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    30f2:	95 5a       	P2 = P5 + P2;
    30f4:	70 b1       	[SP + 0x14] = R0;
    30f6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3(  3) */
    30fa:	52 30       	R2 = P2;
    30fc:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    30fe:	01 e1 98 16 	R1.L = 0x1698;		/* (5784)	R1=0x1698(5784) */
    3102:	ff e3 7f e7 	CALL 0x0 <_FlushAddressCacheRecords>;
    3106:	18 20       	JUMP.S 0x3136 <_tcpCallback+0x4d6>;
    3108:	10 91       	R0 = [P2];
    310a:	21 e1 10 0e 	R1 = 0xe10 (X);		/*		R1=0xe10(3600) */
    310e:	c8 40       	R0 *= R1;
    3110:	28 b1       	[P5 + 0x10] = R0;
    3112:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    3116:	ff e3 75 e7 	CALL 0x0 <_FlushAddressCacheRecords>;
    311a:	f0 b0       	[SP + 0xc] = R0;
    311c:	28 a1       	R0 = [P5 + 0x10];
    311e:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    3122:	95 5a       	P2 = P5 + P2;
    3124:	30 b1       	[SP + 0x10] = R0;
    3126:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xe10(3600) */
    312a:	52 30       	R2 = P2;
    312c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    312e:	01 e1 ec 16 	R1.L = 0x16ec;		/* (5868)	R1=0x16ec(5868) */
    3132:	ff e3 67 e7 	CALL 0x0 <_FlushAddressCacheRecords>;
    3136:	43 30       	R0 = P3;
    3138:	4d 30       	R1 = P5;
    313a:	ff e3 63 e7 	CALL 0x0 <_FlushAddressCacheRecords>;
    313e:	3a 20       	JUMP.S 0x31b2 <_tcpCallback+0x552>;
    3140:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    3144:	eb a0       	R3 = [P5 + 0xc];
    3146:	18 50       	R0 = R0 + R3;
    3148:	d0 52       	R3 = R0 - R2;
    314a:	01 0c       	CC = R1 == 0x0;
    314c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    3150:	05 1c       	IF CC JUMP 0x315a <_tcpCallback+0x4fa> (BP);
    3152:	10 91       	R0 = [P2];
    3154:	26 e1 84 03 	R6 = 0x384 (X);		/*		R6=0x384(900) */
    3158:	04 20       	JUMP.S 0x3160 <_tcpCallback+0x500>;
    315a:	26 e1 10 0e 	R6 = 0xe10 (X);		/*		R6=0xe10(3600) */
    315e:	10 91       	R0 = [P2];
    3160:	f0 40       	R0 *= R6;
    3162:	03 09       	CC = R3 <= R0;
    3164:	27 1c       	IF CC JUMP 0x31b2 <_tcpCallback+0x552> (BP);
    3166:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    316a:	ea b0       	[P5 + 0xc] = R2;
    316c:	01 0c       	CC = R1 == 0x0;
    316e:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    3172:	05 1c       	IF CC JUMP 0x317c <_tcpCallback+0x51c> (BP);
    3174:	10 91       	R0 = [P2];
    3176:	21 e1 84 03 	R1 = 0x384 (X);		/*		R1=0x384(900) */
    317a:	04 20       	JUMP.S 0x3182 <_tcpCallback+0x522>;
    317c:	21 e1 10 0e 	R1 = 0xe10 (X);		/*		R1=0xe10(3600) */
    3180:	10 91       	R0 = [P2];
    3182:	c8 40       	R0 *= R1;
    3184:	28 b1       	[P5 + 0x10] = R0;
    3186:	4d 30       	R1 = P5;
    3188:	43 30       	R0 = P3;
    318a:	ff e3 3b e7 	CALL 0x0 <_FlushAddressCacheRecords>;
    318e:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    3192:	ff e3 37 e7 	CALL 0x0 <_FlushAddressCacheRecords>;
    3196:	f0 b0       	[SP + 0xc] = R0;
    3198:	28 a1       	R0 = [P5 + 0x10];
    319a:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    319e:	95 5a       	P2 = P5 + P2;
    31a0:	30 b1       	[SP + 0x10] = R0;
    31a2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xe10(3600) */
    31a6:	52 30       	R2 = P2;
    31a8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    31aa:	01 e1 ec 16 	R1.L = 0x16ec;		/* (5868)	R1=0x16ec(5868) */
    31ae:	ff e3 29 e7 	CALL 0x0 <_FlushAddressCacheRecords>;
    31b2:	00 00       	NOP;
    31b4:	28 e4 8e 00 	R0 = [P5 + 0x238];
    31b8:	00 0c       	CC = R0 == 0x0;
    31ba:	08 1c       	IF CC JUMP 0x31ca <_tcpCallback+0x56a> (BP);
    31bc:	28 e4 40 00 	R0 = [P5 + 0x100];
    31c0:	10 0c       	CC = R0 == 0x2;
    31c2:	04 14       	IF !CC JUMP 0x31ca <_tcpCallback+0x56a> (BP);
    31c4:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    31c6:	28 e6 40 00 	[P5 + 0x100] = R0;
    31ca:	20 e1 c1 bf 	R0 = -0x403f (X);		/*		R0=0xffffbfc1(-16447) */
    31ce:	10 4f       	R0 <<= 0x2;
    31d0:	07 08       	CC = R7 == R0;
    31d2:	0e 1c       	IF CC JUMP 0x31ee <_tcpCallback+0x58e> (BP);
    31d4:	28 e4 8e 00 	R0 = [P5 + 0x238];
    31d8:	00 0c       	CC = R0 == 0x0;
    31da:	0a 1c       	IF CC JUMP 0x31ee <_tcpCallback+0x58e> (BP);
    31dc:	28 e4 40 00 	R0 = [P5 + 0x100];
    31e0:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
    31e2:	08 08       	CC = R0 == R1;
    31e4:	05 18       	IF CC JUMP 0x31ee <_tcpCallback+0x58e>;
    31e6:	43 30       	R0 = P3;
    31e8:	4d 30       	R1 = P5;
    31ea:	ff e3 17 ec 	CALL 0xa18 <_StartLLQPolling>;
    31ee:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4(  4) */
    31f2:	43 30       	R0 = P3;
    31f4:	01 e1 60 00 	R1.L = 0x60;		/* ( 96)	R1=0x60( 96) */
    31f8:	ff e3 04 e7 	CALL 0x0 <_FlushAddressCacheRecords>;
    31fc:	44 30       	R0 = P4;
    31fe:	ff e3 1d fd 	CALL 0x2c38 <_DisposeTCPConn>;
    3202:	e6 6d       	SP += 0x3c;		/* ( 60) */
    3204:	c6 6c       	SP += 0x18;		/* ( 24) */
    3206:	77 90       	FP = [SP++];
    3208:	27 01       	RETS = [SP++];
    320a:	a3 05       	(R7:4, P5:3) = [SP++];
    320c:	10 00       	RTS;
	...

00003210 <_MakeTCPConn>:
_MakeTCPConn():
    3210:	e3 05       	[--SP] = (R7:4, P5:3);
    3212:	00 e8 08 00 	LINK 0x20;		/* (32) */
    3216:	38 30       	R7 = R0;
    3218:	70 e5 2c 00 	R0 = W[SP + 0x58] (X);
    321c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    3220:	38 32       	FP = R0;
    3222:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    3226:	35 e4 14 00 	R5 = [SP + 0x50];
    322a:	10 95       	R0 = W[P2] (Z);
    322c:	31 30       	R6 = R1;
    322e:	22 30       	R4 = R2;
    3230:	33 e5 17 00 	P3 = [SP + 0x5c];
    3234:	34 e5 18 00 	P4 = [SP + 0x60];
    3238:	b0 b7       	W[SP + 0x1c] = R0;
    323a:	05 48       	CC = !BITTST (R5, 0x0);		/* bit  0 */
    323c:	0e 18       	IF CC JUMP 0x3258 <_MakeTCPConn+0x48>;
    323e:	43 0c       	CC = P3 == 0x0;
    3240:	04 1c       	IF CC JUMP 0x3248 <_MakeTCPConn+0x38> (BP);
    3242:	18 99       	R0 = B[P3] (Z);
    3244:	00 0c       	CC = R0 == 0x0;
    3246:	09 14       	IF !CC JUMP 0x3258 <_MakeTCPConn+0x48> (BP);
    3248:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x60( 96) */
    324c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    324e:	01 e1 34 17 	R1.L = 0x1734;		/* (5940)	R1=0x1734(5940) */
    3252:	ff e3 d7 e6 	CALL 0x0 <_FlushAddressCacheRecords>;
    3256:	8c 20       	JUMP.S 0x336e <_MakeTCPConn+0x15e>;
    3258:	20 e1 34 23 	R0 = 0x2334 (X);		/*		R0=0x2334(9012) */
    325c:	ff e3 d2 e6 	CALL 0x0 <_FlushAddressCacheRecords>;
    3260:	28 32       	P5 = R0;
    3262:	45 0c       	CC = P5 == 0x0;
    3264:	09 14       	IF !CC JUMP 0x3276 <_MakeTCPConn+0x66> (BP);
    3266:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1734(5940) */
    326a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    326c:	01 e1 70 17 	R1.L = 0x1770;		/* (6000)	R1=0x1770(6000) */
    3270:	ff e3 c8 e6 	CALL 0x0 <_FlushAddressCacheRecords>;
    3274:	7e 20       	JUMP.S 0x3370 <_MakeTCPConn+0x160>;
    3276:	21 e1 34 23 	R1 = 0x2334 (X);		/*		R1=0x2334(9012) */
    327a:	ff e3 c3 e6 	CALL 0x0 <_FlushAddressCacheRecords>;
    327e:	56 30       	R2 = SP;
    3280:	2f 93       	[P5] = R7;
    3282:	07 30       	R0 = R7;
    3284:	0d 30       	R1 = R5;
    3286:	e2 64       	R2 += 0x1c;		/* ( 28) */
    3288:	ff e3 bc e6 	CALL 0x0 <_FlushAddressCacheRecords>;
    328c:	68 b0       	[P5 + 0x4] = R0;
    328e:	30 e4 19 00 	R0 = [SP + 0x64];
    3292:	2a e1 0c 23 	P2 = 0x230c (X);		/*		P2=0x230c(8972) */
    3296:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    3298:	28 e6 c2 08 	[P5 + 0x2308] = R0;
    329c:	95 5a       	P2 = P5 + P2;
    329e:	31 e4 15 00 	R1 = [SP + 0x54];
    32a2:	2f e6 c0 08 	[P5 + 0x2300] = R7;
    32a6:	2c e7 c1 08 	[P5 + 0x2304] = P4;
    32aa:	42 30       	R0 = P2;
    32ac:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
    32ae:	ff e3 a9 e6 	CALL 0x0 <_FlushAddressCacheRecords>;
    32b2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    32b4:	68 e6 94 11 	W[P5 + 0x2328] = R0;
    32b8:	4f 30       	R1 = FP;
    32ba:	b0 ab       	R0 = W[SP + 0x1c] (X);
    32bc:	69 e6 90 11 	W[P5 + 0x2320] = R1;
    32c0:	2f e6 c9 08 	[P5 + 0x2324] = R7;
    32c4:	2f e6 cb 08 	[P5 + 0x232c] = R7;
    32c8:	2f e6 cc 08 	[P5 + 0x2330] = R7;
    32cc:	68 e6 91 11 	W[P5 + 0x2322] = R0;
    32d0:	06 0c       	CC = R6 == 0x0;
    32d2:	09 18       	IF CC JUMP 0x32e4 <_MakeTCPConn+0xd4>;
    32d4:	b4 52       	R2 = R4 - R6;
    32d6:	45 30       	R0 = P5;
    32d8:	2a e6 c0 08 	[P5 + 0x2300] = R2;
    32dc:	40 64       	R0 += 0x8;		/* (  8) */
    32de:	0e 30       	R1 = R6;
    32e0:	ff e3 90 e6 	CALL 0x0 <_FlushAddressCacheRecords>;
    32e4:	68 a0       	R0 = [P5 + 0x4];
    32e6:	00 0c       	CC = R0 == 0x0;
    32e8:	0b 14       	IF !CC JUMP 0x32fe <_MakeTCPConn+0xee> (BP);
    32ea:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2334(9012) */
    32ee:	01 e1 94 17 	R1.L = 0x1794;		/* (6036)	R1=0x1794(6036) */
    32f2:	ff e3 87 e6 	CALL 0x0 <_FlushAddressCacheRecords>;
    32f6:	45 30       	R0 = P5;
    32f8:	ff e3 84 e6 	CALL 0x0 <_FlushAddressCacheRecords>;
    32fc:	39 20       	JUMP.S 0x336e <_MakeTCPConn+0x15e>;
    32fe:	44 0c       	CC = P4 == 0x0;
    3300:	04 1c       	IF CC JUMP 0x3308 <_MakeTCPConn+0xf8> (BP);
    3302:	21 e4 46 00 	R1 = [P4 + 0x118];
    3306:	02 20       	JUMP.S 0x330a <_MakeTCPConn+0xfa>;
    3308:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    330a:	31 b1       	[SP + 0x10] = R1;
    330c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_FlushAddressCacheRecords>(  0) */
    3310:	01 e1 60 2c 	R1.L = 0x2c60;		/* (11360)	R1=0x2c60 <_tcpCallback>(11360) */
    3314:	71 b1       	[SP + 0x14] = R1;
    3316:	31 e4 15 00 	R1 = [SP + 0x54];
    331a:	f3 bc       	[SP + 0xc] = P3;
    331c:	b5 bd       	[SP + 0x18] = P5;
    331e:	57 30       	R2 = FP;
    3320:	ff e3 70 e6 	CALL 0x0 <_FlushAddressCacheRecords>;
    3324:	41 e1 fe ff 	R1.H = 0xfffe;		/* ( -2)	R1=0xfffe2c60(-119712) */
    3328:	01 e1 03 ff 	R1.L = 0xff03;		/* (-253)	R1=0xfffeff03(-65789) */
    332c:	08 08       	CC = R0 == R1;
    332e:	09 14       	IF !CC JUMP 0x3340 <_MakeTCPConn+0x130> (BP);
    3330:	68 a0       	R0 = [P5 + 0x4];
    3332:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    3334:	f1 b0       	[SP + 0xc] = R1;
    3336:	4d 30       	R1 = P5;
    3338:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
    333a:	ff e3 93 fc 	CALL 0x2c60 <_tcpCallback>;
    333e:	19 20       	JUMP.S 0x3370 <_MakeTCPConn+0x160>;
    3340:	41 e1 fe ff 	R1.H = 0xfffe;		/* ( -2)	R1=0xfffe0000(-131072) */
    3344:	01 e1 05 ff 	R1.L = 0xff05;		/* (-251)	R1=0xfffeff05(-65787) */
    3348:	08 08       	CC = R0 == R1;
    334a:	13 1c       	IF CC JUMP 0x3370 <_MakeTCPConn+0x160> (BP);
    334c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x230c */
    3350:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    3354:	10 91       	R0 = [P2];
    3356:	00 0c       	CC = R0 == 0x0;
    3358:	08 1c       	IF CC JUMP 0x3368 <_MakeTCPConn+0x158> (BP);
    335a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xff05(65285) */
    335e:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    3360:	01 e1 c0 17 	R1.L = 0x17c0;		/* (6080)	R1=0x17c0(6080) */
    3364:	ff e3 4e e6 	CALL 0x0 <_FlushAddressCacheRecords>;
    3368:	45 30       	R0 = P5;
    336a:	ff e3 67 fc 	CALL 0x2c38 <_DisposeTCPConn>;
    336e:	05 68       	P5 = 0x0 (X);		/*		P5=0x0(  0) */
    3370:	06 6d       	SP += 0x20;		/* ( 32) */
    3372:	77 90       	FP = [SP++];
    3374:	45 30       	R0 = P5;
    3376:	27 01       	RETS = [SP++];
    3378:	a3 05       	(R7:4, P5:3) = [SP++];
    337a:	10 00       	RTS;

0000337c <_SendGroupRRMessage>:
_SendGroupRRMessage():
    337c:	f3 05       	[--SP] = (R7:6, P5:3);
    337e:	29 32       	P5 = R1;
    3380:	00 e8 09 00 	LINK 0x24;		/* (36) */
    3384:	20 32       	P4 = R0;
    3386:	0a 30       	R1 = R2;
    3388:	33 e5 13 00 	P3 = [SP + 0x4c];
    338c:	45 0c       	CC = P5 == 0x0;
    338e:	dc 18       	IF CC JUMP 0x3546 <_SendGroupRRMessage+0x1ca>;
    3390:	43 0c       	CC = P3 == 0x0;
    3392:	0b 1c       	IF CC JUMP 0x33a8 <_SendGroupRRMessage+0x2c> (BP);
    3394:	98 a0       	R0 = [P3 + 0x8];
    3396:	00 0c       	CC = R0 == 0x0;
    3398:	08 18       	IF CC JUMP 0x33a8 <_SendGroupRRMessage+0x2c>;
    339a:	2f e1 98 59 	FP = 0x5998 (X);		/*		FP=0x5998(22936) */
    339e:	fc 5b       	FP = P4 + FP;
    33a0:	2a e1 ec 22 	P2 = 0x22ec (X);		/*		P2=0x22ec(8940) */
    33a4:	d7 5b       	FP = FP + P2;
    33a6:	04 20       	JUMP.S 0x33ae <_SendGroupRRMessage+0x32>;
    33a8:	2f e1 38 5f 	FP = 0x5f38 (X);		/*		FP=0x5f38(24376) */
    33ac:	fc 5b       	FP = P4 + FP;
    33ae:	2a e1 8c 59 	P2 = 0x598c (X);		/*		P2=0x598c(22924) */
    33b2:	94 5a       	P2 = P4 + P2;
    33b4:	72 30       	R6 = P2;
    33b6:	f7 bc       	[SP + 0xc] = FP;
    33b8:	42 30       	R0 = P2;
    33ba:	22 e1 20 1c 	R2 = 0x1c20 (X);		/*		R2=0x1c20(7200) */
    33be:	ff e3 21 e6 	CALL 0x0 <_FlushAddressCacheRecords>;
    33c2:	38 30       	R7 = R0;
    33c4:	00 0c       	CC = R0 == 0x0;
    33c6:	0f 14       	IF !CC JUMP 0x33e4 <_SendGroupRRMessage+0x68> (BP);
    33c8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x17c0(6080) */
    33cc:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    33ce:	01 e1 e0 17 	R1.L = 0x17e0;		/* (6112)	R1=0x17e0(6112) */
    33d2:	ff e3 17 e6 	CALL 0x0 <_FlushAddressCacheRecords>;
    33d6:	26 6d       	SP += 0x24;		/* ( 36) */
    33d8:	77 90       	FP = [SP++];
    33da:	44 30       	R0 = P4;
    33dc:	27 01       	RETS = [SP++];
    33de:	b3 05       	(R7:6, P5:3) = [SP++];
    33e0:	ff e2 98 e9 	JUMP.L 0x710 <_RRMergeFailure>;
    33e4:	00 00       	NOP;
    33e6:	28 e4 3c 00 	R0 = [P5 + 0xf0];
    33ea:	00 0c       	CC = R0 == 0x0;
    33ec:	61 1c       	IF CC JUMP 0x34ae <_SendGroupRRMessage+0x132> (BP);
    33ee:	28 e4 40 00 	R0 = [P5 + 0x100];
    33f2:	00 0c       	CC = R0 == 0x0;
    33f4:	06 18       	IF CC JUMP 0x3400 <_SendGroupRRMessage+0x84>;
    33f6:	ff e3 21 fc 	CALL 0x2c38 <_DisposeTCPConn>;
    33fa:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    33fc:	28 e6 40 00 	[P5 + 0x100] = R0;
    3400:	2a e5 3f 00 	P2 = [P5 + 0xfc];
    3404:	42 0c       	CC = P2 == 0x0;
    3406:	10 14       	IF !CC JUMP 0x3426 <_SendGroupRRMessage+0xaa> (BP);
    3408:	69 a2       	R1 = [P5 + 0x24];
    340a:	45 30       	R0 = P5;
    340c:	54 30       	R2 = P4;
    340e:	21 64       	R1 += 0x4;		/* (  4) */
    3410:	ba 65       	R2 += 0x37;		/* ( 55) */
    3412:	20 64       	R0 += 0x4;		/* (  4) */
    3414:	ff e3 f6 e5 	CALL 0x0 <_FlushAddressCacheRecords>;
    3418:	10 30       	R2 = R0;
    341a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x17e0(6112) */
    341e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3420:	01 e1 38 18 	R1.L = 0x1838;		/* (6200)	R1=0x1838(6200) */
    3424:	75 20       	JUMP.S 0x350e <_SendGroupRRMessage+0x192>;
    3426:	29 e1 0c 03 	P1 = 0x30c (X);		/*		P1=0x30c(780) */
    342a:	4a 5a       	P1 = P2 + P1;
    342c:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    342e:	31 bd       	[SP + 0x10] = P1;
    3430:	f0 b0       	[SP + 0xc] = R0;
    3432:	50 e5 85 01 	R0 = W[P2 + 0x30a] (X);
    3436:	b0 b6       	W[SP + 0x14] = R0;
    3438:	29 e1 0a 02 	P1 = 0x20a (X);		/*		P1=0x20a(522) */
    343c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    343e:	8a 5a       	P2 = P2 + P1;
    3440:	f0 b1       	[SP + 0x1c] = R0;
    3442:	b2 bd       	[SP + 0x18] = P2;
    3444:	35 be       	[SP + 0x20] = P5;
    3446:	44 30       	R0 = P4;
    3448:	0e 30       	R1 = R6;
    344a:	17 30       	R2 = R7;
    344c:	ff e3 e2 fe 	CALL 0x3210 <_MakeTCPConn>;
    3450:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x598c */
    3454:	28 e6 40 00 	[P5 + 0x100] = R0;
    3458:	00 0c       	CC = R0 == 0x0;
    345a:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    345e:	13 14       	IF !CC JUMP 0x3484 <_SendGroupRRMessage+0x108> (BP);
    3460:	10 91       	R0 = [P2];
    3462:	00 0c       	CC = R0 == 0x0;
    3464:	71 1c       	IF CC JUMP 0x3546 <_SendGroupRRMessage+0x1ca> (BP);
    3466:	69 a2       	R1 = [P5 + 0x24];
    3468:	45 30       	R0 = P5;
    346a:	54 30       	R2 = P4;
    346c:	21 64       	R1 += 0x4;		/* (  4) */
    346e:	ba 65       	R2 += 0x37;		/* ( 55) */
    3470:	20 64       	R0 += 0x4;		/* (  4) */
    3472:	ff e3 c7 e5 	CALL 0x0 <_FlushAddressCacheRecords>;
    3476:	10 30       	R2 = R0;
    3478:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1838(6200) */
    347c:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    347e:	01 e1 68 18 	R1.L = 0x1868;		/* (6248)	R1=0x1868(6248) */
    3482:	46 20       	JUMP.S 0x350e <_SendGroupRRMessage+0x192>;
    3484:	10 91       	R0 = [P2];
    3486:	00 0c       	CC = R0 == 0x0;
    3488:	5f 1c       	IF CC JUMP 0x3546 <_SendGroupRRMessage+0x1ca> (BP);
    348a:	a2 e4 8c 59 	R2 = B[P4 + 0x598c] (Z);
    348e:	a0 e4 8d 59 	R0 = B[P4 + 0x598d] (Z);
    3492:	42 4f       	R2 <<= 0x8;
    3494:	2a e1 98 59 	P2 = 0x5998 (X);		/*		P2=0x5998(22936) */
    3498:	90 56       	R2 = R0 | R2;
    349a:	14 5b       	P4 = P4 + P2;
    349c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1868(6248) */
    34a0:	f4 bc       	[SP + 0xc] = P4;
    34a2:	37 b1       	[SP + 0x10] = R7;
    34a4:	77 bd       	[SP + 0x14] = FP;
    34a6:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    34a8:	01 e1 a4 18 	R1.L = 0x18a4;		/* (6308)	R1=0x18a4(6308) */
    34ac:	4b 20       	JUMP.S 0x3542 <_SendGroupRRMessage+0x1c6>;
    34ae:	00 00       	NOP;
    34b0:	2a e5 3f 00 	P2 = [P5 + 0xfc];
    34b4:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x20a */
    34b8:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_FlushAddressCacheRecords> */
    34bc:	08 91       	R0 = [P1];
    34be:	f0 b0       	[SP + 0xc] = R0;
    34c0:	29 e1 0c 03 	P1 = 0x30c (X);		/*		P1=0x30c(780) */
    34c4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    34c6:	4a 5a       	P1 = P2 + P1;
    34c8:	30 b1       	[SP + 0x10] = R0;
    34ca:	71 bd       	[SP + 0x14] = P1;
    34cc:	51 e5 85 01 	R1 = W[P2 + 0x30a] (X);
    34d0:	31 b7       	W[SP + 0x18] = R1;
    34d2:	f0 b1       	[SP + 0x1c] = R0;
    34d4:	33 be       	[SP + 0x20] = P3;
    34d6:	44 30       	R0 = P4;
    34d8:	0e 30       	R1 = R6;
    34da:	17 30       	R2 = R7;
    34dc:	ff e3 92 e5 	CALL 0x0 <_FlushAddressCacheRecords>;
    34e0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x5998 */
    34e4:	00 0c       	CC = R0 == 0x0;
    34e6:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    34ea:	18 1c       	IF CC JUMP 0x351a <_SendGroupRRMessage+0x19e> (BP);
    34ec:	10 91       	R0 = [P2];
    34ee:	00 0c       	CC = R0 == 0x0;
    34f0:	2b 1c       	IF CC JUMP 0x3546 <_SendGroupRRMessage+0x1ca> (BP);
    34f2:	69 a2       	R1 = [P5 + 0x24];
    34f4:	45 30       	R0 = P5;
    34f6:	54 30       	R2 = P4;
    34f8:	21 64       	R1 += 0x4;		/* (  4) */
    34fa:	ba 65       	R2 += 0x37;		/* ( 55) */
    34fc:	20 64       	R0 += 0x4;		/* (  4) */
    34fe:	ff e3 81 e5 	CALL 0x0 <_FlushAddressCacheRecords>;
    3502:	10 30       	R2 = R0;
    3504:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x18a4(6308) */
    3508:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    350a:	01 e1 f0 18 	R1.L = 0x18f0;		/* (6384)	R1=0x18f0(6384) */
    350e:	26 6d       	SP += 0x24;		/* ( 36) */
    3510:	77 90       	FP = [SP++];
    3512:	27 01       	RETS = [SP++];
    3514:	b3 05       	(R7:6, P5:3) = [SP++];
    3516:	ff e2 75 e5 	JUMP.L 0x0 <_FlushAddressCacheRecords>;
    351a:	10 91       	R0 = [P2];
    351c:	00 0c       	CC = R0 == 0x0;
    351e:	14 1c       	IF CC JUMP 0x3546 <_SendGroupRRMessage+0x1ca> (BP);
    3520:	a2 e4 8c 59 	R2 = B[P4 + 0x598c] (Z);
    3524:	a0 e4 8d 59 	R0 = B[P4 + 0x598d] (Z);
    3528:	42 4f       	R2 <<= 0x8;
    352a:	2a e1 98 59 	P2 = 0x5998 (X);		/*		P2=0x5998(22936) */
    352e:	90 56       	R2 = R0 | R2;
    3530:	14 5b       	P4 = P4 + P2;
    3532:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x18f0(6384) */
    3536:	f4 bc       	[SP + 0xc] = P4;
    3538:	37 b1       	[SP + 0x10] = R7;
    353a:	77 bd       	[SP + 0x14] = FP;
    353c:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    353e:	01 e1 24 19 	R1.L = 0x1924;		/* (6436)	R1=0x1924(6436) */
    3542:	ff e3 5f e5 	CALL 0x0 <_FlushAddressCacheRecords>;
    3546:	26 6d       	SP += 0x24;		/* ( 36) */
    3548:	77 90       	FP = [SP++];
    354a:	27 01       	RETS = [SP++];
    354c:	b3 05       	(R7:6, P5:3) = [SP++];
    354e:	10 00       	RTS;

00003550 <_SendRecordRegistration>:
_SendRecordRegistration():
    3550:	f3 05       	[--SP] = (R7:6, P5:3);
    3552:	29 32       	P5 = R1;
    3554:	20 32       	P4 = R0;
    3556:	00 e8 09 00 	LINK 0x24;		/* (36) */
    355a:	29 a2       	R1 = [P5 + 0x20];
    355c:	ff e3 80 f1 	CALL 0x185c <_GetAuthInfoForName_internal>;
    3560:	08 30       	R1 = R0;
    3562:	44 30       	R0 = P4;
    3564:	ff e3 ee e5 	CALL 0x140 <_RRAdditionalSize>;
    3568:	38 30       	R7 = R0;
    356a:	20 a3       	R0 = [P4 + 0x30];
    356c:	08 30       	R1 = R0;
    356e:	e2 a2       	R2 = [P4 + 0x2c];
    3570:	09 64       	R1 += 0x1;		/* (  1) */
    3572:	0a 08       	CC = R2 == R1;
    3574:	09 18       	IF CC JUMP 0x3586 <_SendRecordRegistration+0x36>;
    3576:	f0 b0       	[SP + 0xc] = R0;
    3578:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1924(6436) */
    357c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    357e:	01 e1 74 19 	R1.L = 0x1974;		/* (6516)	R1=0x1974(6516) */
    3582:	ff e3 3f e5 	CALL 0x0 <_FlushAddressCacheRecords>;
    3586:	2a e5 3f 00 	P2 = [P5 + 0xfc];
    358a:	42 0c       	CC = P2 == 0x0;
    358c:	05 1c       	IF CC JUMP 0x3596 <_SendRecordRegistration+0x46> (BP);
    358e:	10 e4 c4 00 	R0 = [P2 + 0x310];
    3592:	00 0c       	CC = R0 == 0x0;
    3594:	10 10       	IF !CC JUMP 0x35b4 <_SendRecordRegistration+0x64>;
    3596:	45 30       	R0 = P5;
    3598:	54 30       	R2 = P4;
    359a:	ba 65       	R2 += 0x37;		/* ( 55) */
    359c:	69 a2       	R1 = [P5 + 0x24];
    359e:	21 64       	R1 += 0x4;		/* (  4) */
    35a0:	20 64       	R0 += 0x4;		/* (  4) */
    35a2:	ff e3 2f e5 	CALL 0x0 <_FlushAddressCacheRecords>;
    35a6:	10 30       	R2 = R0;
    35a8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1974(6516) */
    35ac:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    35ae:	01 e1 c4 19 	R1.L = 0x19c4;		/* (6596)	R1=0x19c4(6596) */
    35b2:	98 20       	JUMP.S 0x36e2 <_SendRecordRegistration+0x192>;
    35b4:	2f e1 98 59 	FP = 0x5998 (X);		/*		FP=0x5998(22936) */
    35b8:	fc 5b       	FP = P4 + FP;
    35ba:	47 30       	R0 = FP;
    35bc:	26 e1 ec 22 	R6 = 0x22ec (X);		/*		R6=0x22ec(8940) */
    35c0:	b0 51       	R6 = R0 + R6;
    35c2:	44 30       	R0 = P4;
    35c4:	ff e3 1e e5 	CALL 0x0 <_FlushAddressCacheRecords>;
    35c8:	2b e1 8c 59 	P3 = 0x598c (X);		/*		P3=0x598c(22924) */
    35cc:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x5998 */
    35d0:	08 30       	R1 = R0;
    35d2:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    35d6:	68 e6 7a 00 	W[P5 + 0xf4] = R0;
    35da:	dc 5a       	P3 = P4 + P3;
    35dc:	12 95       	R2 = W[P2] (Z);
    35de:	43 30       	R0 = P3;
    35e0:	ff e3 10 e5 	CALL 0x0 <_FlushAddressCacheRecords>;
    35e4:	a8 e4 08 00 	R0 = B[P5 + 0x8] (Z);
    35e8:	aa e4 09 00 	R2 = B[P5 + 0x9] (Z);
    35ec:	40 4f       	R0 <<= 0x8;
    35ee:	29 e4 3e 00 	R1 = [P5 + 0xf8];
    35f2:	02 56       	R0 = R2 | R0;
    35f4:	f1 b0       	[SP + 0xc] = R1;
    35f6:	30 b6       	W[SP + 0x10] = R0;
    35f8:	be 53       	R6 = R6 - R7;
    35fa:	4f 30       	R1 = FP;
    35fc:	43 30       	R0 = P3;
    35fe:	16 30       	R2 = R6;
    3600:	ff e3 00 e5 	CALL 0x0 <_FlushAddressCacheRecords>;
    3604:	08 30       	R1 = R0;
    3606:	00 0c       	CC = R0 == 0x0;
    3608:	d5 18       	IF CC JUMP 0x37b2 <_SendRecordRegistration+0x262>;
    360a:	f6 b0       	[SP + 0xc] = R6;
    360c:	44 30       	R0 = P4;
    360e:	55 30       	R2 = P5;
    3610:	ff e3 d4 e7 	CALL 0x5b8 <_BuildUpdateMessage>;
    3614:	38 30       	R7 = R0;
    3616:	00 0c       	CC = R0 == 0x0;
    3618:	cd 1c       	IF CC JUMP 0x37b2 <_SendRecordRegistration+0x262> (BP);
    361a:	28 e4 3a 00 	R0 = [P5 + 0xe8];
    361e:	00 0c       	CC = R0 == 0x0;
    3620:	0b 1c       	IF CC JUMP 0x3636 <_SendRecordRegistration+0xe6> (BP);
    3622:	0f 30       	R1 = R7;
    3624:	f6 b0       	[SP + 0xc] = R6;
    3626:	43 30       	R0 = P3;
    3628:	22 e1 20 1c 	R2 = 0x1c20 (X);		/*		R2=0x1c20(7200) */
    362c:	ff e3 ea e4 	CALL 0x0 <_FlushAddressCacheRecords>;
    3630:	38 30       	R7 = R0;
    3632:	00 0c       	CC = R0 == 0x0;
    3634:	bf 1c       	IF CC JUMP 0x37b2 <_SendRecordRegistration+0x262> (BP);
    3636:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    363a:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    363e:	28 e4 3c 00 	R0 = [P5 + 0xf0];
    3642:	00 0c       	CC = R0 == 0x0;
    3644:	6d 1c       	IF CC JUMP 0x371e <_SendRecordRegistration+0x1ce> (BP);
    3646:	10 91       	R0 = [P2];
    3648:	00 0c       	CC = R0 == 0x0;
    364a:	14 1c       	IF CC JUMP 0x3672 <_SendRecordRegistration+0x122> (BP);
    364c:	69 a2       	R1 = [P5 + 0x24];
    364e:	45 30       	R0 = P5;
    3650:	54 30       	R2 = P4;
    3652:	2e e4 40 00 	R6 = [P5 + 0x100];
    3656:	21 64       	R1 += 0x4;		/* (  4) */
    3658:	ba 65       	R2 += 0x37;		/* ( 55) */
    365a:	20 64       	R0 += 0x4;		/* (  4) */
    365c:	ff e3 d2 e4 	CALL 0x0 <_FlushAddressCacheRecords>;
    3660:	f0 b0       	[SP + 0xc] = R0;
    3662:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x19c4(6596) */
    3666:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    3668:	01 e1 08 1a 	R1.L = 0x1a08;		/* (6664)	R1=0x1a08(6664) */
    366c:	16 30       	R2 = R6;
    366e:	ff e3 c9 e4 	CALL 0x0 <_FlushAddressCacheRecords>;
    3672:	00 00       	NOP;
    3674:	28 e4 40 00 	R0 = [P5 + 0x100];
    3678:	00 0c       	CC = R0 == 0x0;
    367a:	18 18       	IF CC JUMP 0x36aa <_SendRecordRegistration+0x15a>;
    367c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    3680:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    3684:	10 91       	R0 = [P2];
    3686:	00 0c       	CC = R0 == 0x0;
    3688:	11 1c       	IF CC JUMP 0x36aa <_SendRecordRegistration+0x15a> (BP);
    368a:	69 a2       	R1 = [P5 + 0x24];
    368c:	45 30       	R0 = P5;
    368e:	54 30       	R2 = P4;
    3690:	21 64       	R1 += 0x4;		/* (  4) */
    3692:	ba 65       	R2 += 0x37;		/* ( 55) */
    3694:	20 64       	R0 += 0x4;		/* (  4) */
    3696:	ff e3 b5 e4 	CALL 0x0 <_FlushAddressCacheRecords>;
    369a:	10 30       	R2 = R0;
    369c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1a08(6664) */
    36a0:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    36a2:	01 e1 2c 1a 	R1.L = 0x1a2c;		/* (6700)	R1=0x1a2c(6700) */
    36a6:	ff e3 ad e4 	CALL 0x0 <_FlushAddressCacheRecords>;
    36aa:	00 00       	NOP;
    36ac:	28 e4 40 00 	R0 = [P5 + 0x100];
    36b0:	00 0c       	CC = R0 == 0x0;
    36b2:	06 18       	IF CC JUMP 0x36be <_SendRecordRegistration+0x16e>;
    36b4:	ff e3 c2 fa 	CALL 0x2c38 <_DisposeTCPConn>;
    36b8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    36ba:	28 e6 40 00 	[P5 + 0x100] = R0;
    36be:	2a e5 3f 00 	P2 = [P5 + 0xfc];
    36c2:	42 0c       	CC = P2 == 0x0;
    36c4:	15 14       	IF !CC JUMP 0x36ee <_SendRecordRegistration+0x19e> (BP);
    36c6:	69 a2       	R1 = [P5 + 0x24];
    36c8:	45 30       	R0 = P5;
    36ca:	54 30       	R2 = P4;
    36cc:	21 64       	R1 += 0x4;		/* (  4) */
    36ce:	ba 65       	R2 += 0x37;		/* ( 55) */
    36d0:	20 64       	R0 += 0x4;		/* (  4) */
    36d2:	ff e3 97 e4 	CALL 0x0 <_FlushAddressCacheRecords>;
    36d6:	10 30       	R2 = R0;
    36d8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1a2c(6700) */
    36dc:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    36de:	01 e1 70 1a 	R1.L = 0x1a70;		/* (6768)	R1=0x1a70(6768) */
    36e2:	26 6d       	SP += 0x24;		/* ( 36) */
    36e4:	77 90       	FP = [SP++];
    36e6:	27 01       	RETS = [SP++];
    36e8:	b3 05       	(R7:6, P5:3) = [SP++];
    36ea:	ff e2 8b e4 	JUMP.L 0x0 <_FlushAddressCacheRecords>;
    36ee:	29 e1 0c 03 	P1 = 0x30c (X);		/*		P1=0x30c(780) */
    36f2:	4a 5a       	P1 = P2 + P1;
    36f4:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    36f6:	31 bd       	[SP + 0x10] = P1;
    36f8:	f0 b0       	[SP + 0xc] = R0;
    36fa:	50 e5 85 01 	R0 = W[P2 + 0x30a] (X);
    36fe:	b0 b6       	W[SP + 0x14] = R0;
    3700:	29 e1 0a 02 	P1 = 0x20a (X);		/*		P1=0x20a(522) */
    3704:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3706:	8a 5a       	P2 = P2 + P1;
    3708:	f0 b1       	[SP + 0x1c] = R0;
    370a:	b2 bd       	[SP + 0x18] = P2;
    370c:	35 be       	[SP + 0x20] = P5;
    370e:	44 30       	R0 = P4;
    3710:	4b 30       	R1 = P3;
    3712:	17 30       	R2 = R7;
    3714:	ff e3 7e fd 	CALL 0x3210 <_MakeTCPConn>;
    3718:	28 e6 40 00 	[P5 + 0x100] = R0;
    371c:	42 20       	JUMP.S 0x37a0 <_SendRecordRegistration+0x250>;
    371e:	10 91       	R0 = [P2];
    3720:	00 0c       	CC = R0 == 0x0;
    3722:	11 1c       	IF CC JUMP 0x3744 <_SendRecordRegistration+0x1f4> (BP);
    3724:	69 a2       	R1 = [P5 + 0x24];
    3726:	45 30       	R0 = P5;
    3728:	54 30       	R2 = P4;
    372a:	21 64       	R1 += 0x4;		/* (  4) */
    372c:	ba 65       	R2 += 0x37;		/* ( 55) */
    372e:	20 64       	R0 += 0x4;		/* (  4) */
    3730:	ff e3 68 e4 	CALL 0x0 <_FlushAddressCacheRecords>;
    3734:	10 30       	R2 = R0;
    3736:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1a70(6768) */
    373a:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    373c:	01 e1 ac 1a 	R1.L = 0x1aac;		/* (6828)	R1=0x1aac(6828) */
    3740:	ff e3 60 e4 	CALL 0x0 <_FlushAddressCacheRecords>;
    3744:	00 00       	NOP;
    3746:	2f e5 3f 00 	FP = [P5 + 0xfc];
    374a:	47 0c       	CC = FP == 0x0;
    374c:	10 14       	IF !CC JUMP 0x376c <_SendRecordRegistration+0x21c> (BP);
    374e:	69 a2       	R1 = [P5 + 0x24];
    3750:	45 30       	R0 = P5;
    3752:	54 30       	R2 = P4;
    3754:	21 64       	R1 += 0x4;		/* (  4) */
    3756:	ba 65       	R2 += 0x37;		/* ( 55) */
    3758:	20 64       	R0 += 0x4;		/* (  4) */
    375a:	ff e3 53 e4 	CALL 0x0 <_FlushAddressCacheRecords>;
    375e:	10 30       	R2 = R0;
    3760:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1aac(6828) */
    3764:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3766:	01 e1 cc 1a 	R1.L = 0x1acc;		/* (6860)	R1=0x1acc(6860) */
    376a:	bc 2f       	JUMP.S 0x36e2 <_SendRecordRegistration+0x192>;
    376c:	44 30       	R0 = P4;
    376e:	29 a2       	R1 = [P5 + 0x20];
    3770:	ff e3 76 f0 	CALL 0x185c <_GetAuthInfoForName_internal>;
    3774:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    3778:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    377c:	11 91       	R1 = [P2];
    377e:	f1 b0       	[SP + 0xc] = R1;
    3780:	2a e1 0c 03 	P2 = 0x30c (X);		/*		P2=0x30c(780) */
    3784:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    3786:	97 5a       	P2 = FP + P2;
    3788:	31 b1       	[SP + 0x10] = R1;
    378a:	72 bd       	[SP + 0x14] = P2;
    378c:	7a e5 85 01 	R2 = W[FP + 0x30a] (X);
    3790:	32 b7       	W[SP + 0x18] = R2;
    3792:	f1 b1       	[SP + 0x1c] = R1;
    3794:	30 b2       	[SP + 0x20] = R0;
    3796:	44 30       	R0 = P4;
    3798:	4b 30       	R1 = P3;
    379a:	17 30       	R2 = R7;
    379c:	ff e3 32 e4 	CALL 0x0 <_FlushAddressCacheRecords>;
    37a0:	26 6d       	SP += 0x24;		/* ( 36) */
    37a2:	77 90       	FP = [SP++];
    37a4:	44 30       	R0 = P4;
    37a6:	4d 30       	R1 = P5;
    37a8:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    37aa:	27 01       	RETS = [SP++];
    37ac:	b3 05       	(R7:6, P5:3) = [SP++];
    37ae:	ff e2 99 ea 	JUMP.L 0xce0 <_SetRecordRetry>;
    37b2:	00 00       	NOP;
    37b4:	69 a2       	R1 = [P5 + 0x24];
    37b6:	45 30       	R0 = P5;
    37b8:	54 30       	R2 = P4;
    37ba:	21 64       	R1 += 0x4;		/* (  4) */
    37bc:	ba 65       	R2 += 0x37;		/* ( 55) */
    37be:	20 64       	R0 += 0x4;		/* (  4) */
    37c0:	ff e3 20 e4 	CALL 0x0 <_FlushAddressCacheRecords>;
    37c4:	10 30       	R2 = R0;
    37c6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_FlushAddressCacheRecords>(  0) */
    37ca:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    37cc:	01 e1 00 1b 	R1.L = 0x1b00;		/* (6912)	R1=0x1b00(6912) */
    37d0:	ff e3 18 e4 	CALL 0x0 <_FlushAddressCacheRecords>;
    37d4:	26 6d       	SP += 0x24;		/* ( 36) */
    37d6:	77 90       	FP = [SP++];
    37d8:	40 60       	R0 = 0x8 (X);		/*		R0=0x8(  8) */
    37da:	28 e6 39 00 	[P5 + 0xe4] = R0;
    37de:	27 01       	RETS = [SP++];
    37e0:	b3 05       	(R7:6, P5:3) = [SP++];
    37e2:	10 00       	RTS;

000037e4 <_PrivateQueryGotZoneData>:
_PrivateQueryGotZoneData():
    37e4:	f3 05       	[--SP] = (R7:6, P5:3);
    37e6:	22 32       	P4 = R2;
    37e8:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x30c */
    37ec:	67 01       	[--SP] = RETS;
    37ee:	18 32       	P3 = R0;
    37f0:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    37f4:	10 91       	R0 = [P2];
    37f6:	e6 6e       	SP += -0x24;		/* (-36) */
    37f8:	39 30       	R7 = R1;
    37fa:	25 e5 ca 00 	P5 = [P4 + 0x328];
    37fe:	00 0c       	CC = R0 == 0x0;
    3800:	19 1c       	IF CC JUMP 0x3832 <_PrivateQueryGotZoneData+0x4e> (BP);
    3802:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    3806:	ff e3 fd e3 	CALL 0x0 <_FlushAddressCacheRecords>;
    380a:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    380e:	95 5a       	P2 = P5 + P2;
    3810:	52 30       	R2 = P2;
    3812:	f0 b0       	[SP + 0xc] = R0;
    3814:	20 e4 c8 00 	R0 = [P4 + 0x320];
    3818:	2a e1 08 01 	P2 = 0x108 (X);		/*		P2=0x108(264) */
    381c:	94 5a       	P2 = P4 + P2;
    381e:	b0 b1       	[SP + 0x18] = R0;
    3820:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1b00(6912) */
    3824:	37 b1       	[SP + 0x10] = R7;
    3826:	72 bd       	[SP + 0x14] = P2;
    3828:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    382a:	01 e1 54 1b 	R1.L = 0x1b54;		/* (6996)	R1=0x1b54(6996) */
    382e:	ff e3 e9 e3 	CALL 0x0 <_FlushAddressCacheRecords>;
    3832:	44 30       	R0 = P4;
    3834:	2e e4 37 00 	R6 = [P5 + 0xdc];
    3838:	06 08       	CC = R6 == R0;
    383a:	13 1c       	IF CC JUMP 0x3860 <_PrivateQueryGotZoneData+0x7c> (BP);
    383c:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    3840:	ff e3 e0 e3 	CALL 0x0 <_FlushAddressCacheRecords>;
    3844:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    3848:	95 5a       	P2 = P5 + P2;
    384a:	70 b1       	[SP + 0x14] = R0;
    384c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1b54(6996) */
    3850:	f4 bc       	[SP + 0xc] = P4;
    3852:	32 bd       	[SP + 0x10] = P2;
    3854:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3856:	01 e1 94 1b 	R1.L = 0x1b94;		/* (7060)	R1=0x1b94(7060) */
    385a:	16 30       	R2 = R6;
    385c:	ff e3 d2 e3 	CALL 0x0 <_FlushAddressCacheRecords>;
    3860:	07 0c       	CC = R7 == 0x0;
    3862:	22 14       	IF !CC JUMP 0x38a6 <_PrivateQueryGotZoneData+0xc2> (BP);
    3864:	20 e4 c3 00 	R0 = [P4 + 0x30c];
    3868:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
    386a:	08 08       	CC = R0 == R1;
    386c:	04 14       	IF !CC JUMP 0x3874 <_PrivateQueryGotZoneData+0x90> (BP);
    386e:	20 e4 c4 00 	R0 = [P4 + 0x310];
    3872:	0f 20       	JUMP.S 0x3890 <_PrivateQueryGotZoneData+0xac>;
    3874:	31 60       	R1 = 0x6 (X);		/*		R1=0x6(  6) */
    3876:	08 08       	CC = R0 == R1;
    3878:	0e 14       	IF !CC JUMP 0x3894 <_PrivateQueryGotZoneData+0xb0> (BP);
    387a:	21 e4 c5 00 	R1 = [P4 + 0x314];
    387e:	20 e4 c4 00 	R0 = [P4 + 0x310];
    3882:	01 56       	R0 = R1 | R0;
    3884:	21 e4 c6 00 	R1 = [P4 + 0x318];
    3888:	08 56       	R0 = R0 | R1;
    388a:	21 e4 c7 00 	R1 = [P4 + 0x31c];
    388e:	08 56       	R0 = R0 | R1;
    3890:	00 0c       	CC = R0 == 0x0;
    3892:	0a 1c       	IF CC JUMP 0x38a6 <_PrivateQueryGotZoneData+0xc2> (BP);
    3894:	00 00       	NOP;
    3896:	60 e4 85 01 	R0 = W[P4 + 0x30a] (Z);
    389a:	00 0c       	CC = R0 == 0x0;
    389c:	05 1c       	IF CC JUMP 0x38a6 <_PrivateQueryGotZoneData+0xc2> (BP);
    389e:	a0 e4 0a 02 	R0 = B[P4 + 0x20a] (Z);
    38a2:	00 0c       	CC = R0 == 0x0;
    38a4:	26 14       	IF !CC JUMP 0x38f0 <_PrivateQueryGotZoneData+0x10c> (BP);
    38a6:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    38aa:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    38ae:	10 91       	R0 = [P2];
    38b0:	00 0c       	CC = R0 == 0x0;
    38b2:	6a 1c       	IF CC JUMP 0x3986 <_PrivateQueryGotZoneData+0x1a2> (BP);
    38b4:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    38b8:	ff e3 a4 e3 	CALL 0x0 <_FlushAddressCacheRecords>;
    38bc:	f0 b0       	[SP + 0xc] = R0;
    38be:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    38c2:	95 5a       	P2 = P5 + P2;
    38c4:	a0 e4 0a 03 	R0 = B[P4 + 0x30a] (Z);
    38c8:	a1 e4 0b 03 	R1 = B[P4 + 0x30b] (Z);
    38cc:	52 30       	R2 = P2;
    38ce:	40 4f       	R0 <<= 0x8;
    38d0:	01 56       	R0 = R1 | R0;
    38d2:	2a e1 0c 03 	P2 = 0x30c (X);		/*		P2=0x30c(780) */
    38d6:	94 5a       	P2 = P4 + P2;
    38d8:	f0 b1       	[SP + 0x1c] = R0;
    38da:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x6(  6) */
    38de:	37 b1       	[SP + 0x10] = R7;
    38e0:	74 bd       	[SP + 0x14] = P4;
    38e2:	b2 bd       	[SP + 0x18] = P2;
    38e4:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    38e6:	01 e1 dc 1b 	R1.L = 0x1bdc;		/* (7132)	R1=0x1bdc(7132) */
    38ea:	ff e3 8b e3 	CALL 0x0 <_FlushAddressCacheRecords>;
    38ee:	4c 20       	JUMP.S 0x3986 <_PrivateQueryGotZoneData+0x1a2>;
    38f0:	00 00       	NOP;
    38f2:	20 e4 c8 00 	R0 = [P4 + 0x320];
    38f6:	00 0c       	CC = R0 == 0x0;
    38f8:	2d 14       	IF !CC JUMP 0x3952 <_PrivateQueryGotZoneData+0x16e> (BP);
    38fa:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x30c */
    38fe:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    3902:	10 91       	R0 = [P2];
    3904:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    3906:	6f b3       	[P5 + 0x34] = R7;
    3908:	19 60       	R1 = 0x3 (X);		/*		R1=0x3(  3) */
    390a:	10 64       	R0 += 0x2;		/* (  2) */
    390c:	ff e3 7a e3 	CALL 0x0 <_FlushAddressCacheRecords>;
    3910:	19 e4 37 00 	R1 = [P3 + 0xdc];
    3914:	28 b1       	[P5 + 0x10] = R0;
    3916:	01 52       	R0 = R1 - R0;
    3918:	e8 b0       	[P5 + 0xc] = R0;
    391a:	29 e4 37 00 	R1 = [P5 + 0xdc];
    391e:	43 30       	R0 = P3;
    3920:	ff e3 70 e3 	CALL 0x0 <_FlushAddressCacheRecords>;
    3924:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3(  3) */
    3928:	43 30       	R0 = P3;
    392a:	2f e6 37 00 	[P5 + 0xdc] = R7;
    392e:	01 e1 80 00 	R1.L = 0x80;		/* (128)	R1=0x80(128) */
    3932:	ff e3 67 e3 	CALL 0x0 <_FlushAddressCacheRecords>;
    3936:	43 30       	R0 = P3;
    3938:	4d 30       	R1 = P5;
    393a:	ff e3 63 e3 	CALL 0x0 <_FlushAddressCacheRecords>;
    393e:	26 6d       	SP += 0x24;		/* ( 36) */
    3940:	27 01       	RETS = [SP++];
    3942:	43 30       	R0 = P3;
    3944:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x80(128) */
    3948:	01 e1 80 00 	R1.L = 0x80;		/* (128)	R1=0x80(128) */
    394c:	b3 05       	(R7:6, P5:3) = [SP++];
    394e:	ff e2 59 e3 	JUMP.L 0x0 <_FlushAddressCacheRecords>;
    3952:	00 00       	NOP;
    3954:	6a af       	P2 = [P5 + 0x34];
    3956:	42 0c       	CC = P2 == 0x0;
    3958:	04 1c       	IF CC JUMP 0x3960 <_PrivateQueryGotZoneData+0x17c> (BP);
    395a:	90 a0       	R0 = [P2 + 0x8];
    395c:	00 0c       	CC = R0 == 0x0;
    395e:	1d 14       	IF !CC JUMP 0x3998 <_PrivateQueryGotZoneData+0x1b4> (BP);
    3960:	00 00       	NOP;
    3962:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    3966:	ff e3 4d e3 	CALL 0x0 <_FlushAddressCacheRecords>;
    396a:	f0 b0       	[SP + 0xc] = R0;
    396c:	68 a3       	R0 = [P5 + 0x34];
    396e:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    3972:	95 5a       	P2 = P5 + P2;
    3974:	30 b1       	[SP + 0x10] = R0;
    3976:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x80(128) */
    397a:	52 30       	R2 = P2;
    397c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    397e:	01 e1 2c 1c 	R1.L = 0x1c2c;		/* (7212)	R1=0x1c2c(7212) */
    3982:	ff e3 3f e3 	CALL 0x0 <_FlushAddressCacheRecords>;
    3986:	43 30       	R0 = P3;
    3988:	29 e4 37 00 	R1 = [P5 + 0xdc];
    398c:	ff e3 3a e3 	CALL 0x0 <_FlushAddressCacheRecords>;
    3990:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3992:	28 e6 37 00 	[P5 + 0xdc] = R0;
    3996:	44 20       	JUMP.S 0x3a1e <_PrivateQueryGotZoneData+0x23a>;
    3998:	43 30       	R0 = P3;
    399a:	ff e3 33 e3 	CALL 0x0 <_FlushAddressCacheRecords>;
    399e:	68 e6 99 00 	W[P5 + 0x132] = R0;
    39a2:	28 e4 3e 00 	R0 = [P5 + 0xf8];
    39a6:	00 0c       	CC = R0 == 0x0;
    39a8:	06 18       	IF CC JUMP 0x39b4 <_PrivateQueryGotZoneData+0x1d0>;
    39aa:	ff e3 47 f9 	CALL 0x2c38 <_DisposeTCPConn>;
    39ae:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    39b0:	28 e6 3e 00 	[P5 + 0xf8] = R0;
    39b4:	2a e5 37 00 	P2 = [P5 + 0xdc];
    39b8:	42 0c       	CC = P2 == 0x0;
    39ba:	12 14       	IF !CC JUMP 0x39de <_PrivateQueryGotZoneData+0x1fa> (BP);
    39bc:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    39c0:	ff e3 20 e3 	CALL 0x0 <_FlushAddressCacheRecords>;
    39c4:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    39c8:	95 5a       	P2 = P5 + P2;
    39ca:	f0 b0       	[SP + 0xc] = R0;
    39cc:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1c2c(7212) */
    39d0:	52 30       	R2 = P2;
    39d2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    39d4:	01 e1 78 1c 	R1.L = 0x1c78;		/* (7288)	R1=0x1c78(7288) */
    39d8:	ff e3 14 e3 	CALL 0x0 <_FlushAddressCacheRecords>;
    39dc:	21 20       	JUMP.S 0x3a1e <_PrivateQueryGotZoneData+0x23a>;
    39de:	29 e1 0c 03 	P1 = 0x30c (X);		/*		P1=0x30c(780) */
    39e2:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    39e4:	4c 5a       	P1 = P4 + P1;
    39e6:	f0 b0       	[SP + 0xc] = R0;
    39e8:	31 bd       	[SP + 0x10] = P1;
    39ea:	60 e5 85 01 	R0 = W[P4 + 0x30a] (X);
    39ee:	29 e1 0a 02 	P1 = 0x20a (X);		/*		P1=0x20a(522) */
    39f2:	b0 b6       	W[SP + 0x14] = R0;
    39f4:	8a 5a       	P2 = P2 + P1;
    39f6:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    39f8:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    39fa:	b2 bd       	[SP + 0x18] = P2;
    39fc:	f5 bd       	[SP + 0x1c] = P5;
    39fe:	37 b2       	[SP + 0x20] = R7;
    3a00:	43 30       	R0 = P3;
    3a02:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    3a04:	ff e3 06 fc 	CALL 0x3210 <_MakeTCPConn>;
    3a08:	29 e4 37 00 	R1 = [P5 + 0xdc];
    3a0c:	28 e6 3e 00 	[P5 + 0xf8] = R0;
    3a10:	01 0c       	CC = R1 == 0x0;
    3a12:	06 18       	IF CC JUMP 0x3a1e <_PrivateQueryGotZoneData+0x23a>;
    3a14:	43 30       	R0 = P3;
    3a16:	ff e3 f5 e2 	CALL 0x0 <_FlushAddressCacheRecords>;
    3a1a:	2f e6 37 00 	[P5 + 0xdc] = R7;
    3a1e:	26 6d       	SP += 0x24;		/* ( 36) */
    3a20:	27 01       	RETS = [SP++];
    3a22:	b3 05       	(R7:6, P5:3) = [SP++];
    3a24:	10 00       	RTS;
	...

00003a28 <_GetServiceTarget>:
_GetServiceTarget():
    3a28:	e3 05       	[--SP] = (R7:4, P5:3);
    3a2a:	21 32       	P4 = R1;
    3a2c:	28 32       	P5 = R0;
    3a2e:	00 e8 12 00 	LINK 0x48;		/* (72) */
    3a32:	a0 e4 44 00 	R0 = B[P4 + 0x44] (Z);
    3a36:	00 0c       	CC = R0 == 0x0;
    3a38:	04 14       	IF !CC JUMP 0x3a40 <_GetServiceTarget+0x18> (BP);
    3a3a:	60 a2       	R0 = [P4 + 0x24];
    3a3c:	50 64       	R0 += 0xa;		/* ( 10) */
    3a3e:	f8 20       	JUMP.S 0x3c2e <_GetServiceTarget+0x206>;
    3a40:	00 00       	NOP;
    3a42:	20 a2       	R0 = [P4 + 0x20];
    3a44:	ff e3 de e2 	CALL 0x0 <_FlushAddressCacheRecords>;
    3a48:	f0 b1       	[SP + 0x1c] = R0;
    3a4a:	2b e5 c1 09 	P3 = [P5 + 0x2704];
    3a4e:	05 60       	R5 = 0x0 (X);		/*		R5=0x0(  0) */
    3a50:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
    3a52:	36 20       	JUMP.S 0x3abe <_GetServiceTarget+0x96>;
    3a54:	00 00       	NOP;
    3a56:	18 e4 89 00 	R0 = [P3 + 0x224];
    3a5a:	10 0c       	CC = R0 == 0x2;
    3a5c:	0a 18       	IF CC JUMP 0x3a70 <_GetServiceTarget+0x48>;
    3a5e:	29 60       	R1 = 0x5 (X);		/*		R1=0x5(  5) */
    3a60:	08 08       	CC = R0 == R1;
    3a62:	07 1c       	IF CC JUMP 0x3a70 <_GetServiceTarget+0x48> (BP);
    3a64:	18 e4 66 01 	R0 = [P3 + 0x598];
    3a68:	10 0c       	CC = R0 == 0x2;
    3a6a:	03 18       	IF CC JUMP 0x3a70 <_GetServiceTarget+0x48>;
    3a6c:	08 08       	CC = R0 == R1;
    3a6e:	26 14       	IF !CC JUMP 0x3aba <_GetServiceTarget+0x92> (BP);
    3a70:	2a e1 40 00 	P2 = 0x40 (X);		/*		P2=0x40( 64) */
    3a74:	93 5a       	P2 = P3 + P2;
    3a76:	32 be       	[SP + 0x20] = P2;
    3a78:	42 30       	R0 = P2;
    3a7a:	ff e3 c3 e2 	CALL 0x0 <_FlushAddressCacheRecords>;
    3a7e:	f1 a1       	R1 = [SP + 0x1c];
    3a80:	07 c4 01 4e 	R7 = MIN (R0, R1);
    3a84:	38 52       	R0 = R0 - R7;
    3a86:	39 53       	R4 = R1 - R7;
    3a88:	38 32       	FP = R0;
    3a8a:	14 20       	JUMP.S 0x3ab2 <_GetServiceTarget+0x8a>;
    3a8c:	0c 30       	R1 = R4;
    3a8e:	20 a2       	R0 = [P4 + 0x20];
    3a90:	ff e3 b8 e2 	CALL 0x0 <_FlushAddressCacheRecords>;
    3a94:	70 b2       	[SP + 0x24] = R0;
    3a96:	4f 30       	R1 = FP;
    3a98:	30 a2       	R0 = [SP + 0x20];
    3a9a:	ff e3 b3 e2 	CALL 0x0 <_FlushAddressCacheRecords>;
    3a9e:	08 30       	R1 = R0;
    3aa0:	70 a2       	R0 = [SP + 0x24];
    3aa2:	ff e3 af e2 	CALL 0x0 <_FlushAddressCacheRecords>;
    3aa6:	00 0c       	CC = R0 == 0x0;
    3aa8:	2f 06       	IF !CC R5 = R7;
    3aaa:	73 06       	IF !CC R6 = P3;
    3aac:	ff 67       	R7 += -0x1;		/* ( -1) */
    3aae:	0c 64       	R4 += 0x1;		/* (  1) */
    3ab0:	0f 6c       	FP += 0x1;		/* (  1) */
    3ab2:	07 0d       	CC = R7 <= 0x0;
    3ab4:	03 18       	IF CC JUMP 0x3aba <_GetServiceTarget+0x92>;
    3ab6:	2f 09       	CC = R7 <= R5;
    3ab8:	ea 17       	IF !CC JUMP 0x3a8c <_GetServiceTarget+0x64> (BP);
    3aba:	00 00       	NOP;
    3abc:	5b 91       	P3 = [P3];
    3abe:	43 0c       	CC = P3 == 0x0;
    3ac0:	ca 17       	IF !CC JUMP 0x3a54 <_GetServiceTarget+0x2c> (BP);
    3ac2:	06 0c       	CC = R6 == 0x0;
    3ac4:	05 18       	IF CC JUMP 0x3ace <_GetServiceTarget+0xa6>;
    3ac6:	20 e1 40 00 	R0 = 0x40 (X);		/*		R0=0x40( 64) */
    3aca:	06 50       	R0 = R6 + R0;
    3acc:	b1 20       	JUMP.S 0x3c2e <_GetServiceTarget+0x206>;
    3ace:	a8 e4 04 25 	R0 = B[P5 + 0x2504] (Z);
    3ad2:	00 0c       	CC = R0 == 0x0;
    3ad4:	06 18       	IF CC JUMP 0x3ae0 <_GetServiceTarget+0xb8>;
    3ad6:	2a e1 04 25 	P2 = 0x2504 (X);		/*		P2=0x2504(9476) */
    3ada:	95 5a       	P2 = P5 + P2;
    3adc:	42 30       	R0 = P2;
    3ade:	a8 20       	JUMP.S 0x3c2e <_GetServiceTarget+0x206>;
    3ae0:	28 e4 13 08 	R0 = [P5 + 0x204c];
    3ae4:	38 0c       	CC = R0 == -0x1;
    3ae6:	8c 14       	IF !CC JUMP 0x3bfe <_GetServiceTarget+0x1d6> (BP);
    3ae8:	28 e4 05 08 	R0 = [P5 + 0x2014];
    3aec:	00 0c       	CC = R0 == 0x0;
    3aee:	88 1c       	IF CC JUMP 0x3bfe <_GetServiceTarget+0x1d6> (BP);
    3af0:	2f e1 3c 20 	FP = 0x203c (X);		/*		FP=0x203c(8252) */
    3af4:	fd 5b       	FP = P5 + FP;
    3af6:	47 30       	R0 = FP;
    3af8:	21 e1 64 02 	R1 = 0x264 (X);		/*		R1=0x264(612) */
    3afc:	ff e3 82 e2 	CALL 0x0 <_FlushAddressCacheRecords>;
    3b00:	a8 e4 17 20 	R0 = B[P5 + 0x2017] (Z);
    3b04:	f0 b0       	[SP + 0xc] = R0;
    3b06:	a8 e4 16 20 	R0 = B[P5 + 0x2016] (Z);
    3b0a:	30 b1       	[SP + 0x10] = R0;
    3b0c:	a8 e4 15 20 	R0 = B[P5 + 0x2015] (Z);
    3b10:	70 b1       	[SP + 0x14] = R0;
    3b12:	a8 e4 14 20 	R0 = B[P5 + 0x2014] (Z);
    3b16:	7e 30       	R7 = SP;
    3b18:	47 65       	R7 += 0x28;		/* ( 40) */
    3b1a:	b0 b1       	[SP + 0x18] = R0;
    3b1c:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x0 <_FlushAddressCacheRecords>(  0) */
    3b20:	f1 60       	R1 = 0x1e (X);		/*		R1=0x1e( 30) */
    3b22:	02 e1 b4 1c 	R2.L = 0x1cb4;		/* (7348)	R2=0x1cb4(7348) */
    3b26:	07 30       	R0 = R7;
    3b28:	2b e1 70 21 	P3 = 0x2170 (X);		/*		P3=0x2170(8560) */
    3b2c:	ff e3 6a e2 	CALL 0x0 <_FlushAddressCacheRecords>;
    3b30:	dd 5a       	P3 = P5 + P3;
    3b32:	43 30       	R0 = P3;
    3b34:	0f 30       	R1 = R7;
    3b36:	ff e3 65 e2 	CALL 0x0 <_FlushAddressCacheRecords>;
    3b3a:	00 0c       	CC = R0 == 0x0;
    3b3c:	07 14       	IF !CC JUMP 0x3b4a <_GetServiceTarget+0x122> (BP);
    3b3e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1e( 30) */
    3b42:	01 e1 d0 1c 	R1.L = 0x1cd0;		/* (7376)	R1=0x1cd0(7376) */
    3b46:	17 30       	R2 = R7;
    3b48:	59 20       	JUMP.S 0x3bfa <_GetServiceTarget+0x1d2>;
    3b4a:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x2504 */
    3b4e:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    3b52:	10 91       	R0 = [P2];
    3b54:	2a e1 58 21 	P2 = 0x2158 (X);		/*		P2=0x2158(8536) */
    3b58:	95 5a       	P2 = P5 + P2;
    3b5a:	28 e6 55 08 	[P5 + 0x2154] = R0;
    3b5e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1cd0(7376) */
    3b62:	42 30       	R0 = P2;
    3b64:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_FlushAddressCacheRecords>(  0) */
    3b68:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
    3b6a:	ff e3 4b e2 	CALL 0x0 <_FlushAddressCacheRecords>;
    3b6e:	60 60       	R0 = 0xc (X);		/*		R0=0xc( 12) */
    3b70:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    3b72:	68 e6 38 11 	W[P5 + 0x2270] = R0;
    3b76:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    3b78:	29 e6 a0 08 	[P5 + 0x2280] = R1;
    3b7c:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    3b7e:	68 e6 39 11 	W[P5 + 0x2272] = R0;
    3b82:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3b84:	a9 e6 8e 22 	B[P5 + 0x228e] = R1;
    3b88:	a9 e6 8f 22 	B[P5 + 0x228f] = R1;
    3b8c:	a9 e6 8c 22 	B[P5 + 0x228c] = R1;
    3b90:	a9 e6 8d 22 	B[P5 + 0x228d] = R1;
    3b94:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x2158 */
    3b98:	28 e6 9d 08 	[P5 + 0x2274] = R0;
    3b9c:	28 e6 9e 08 	[P5 + 0x2278] = R0;
    3ba0:	28 e6 9f 08 	[P5 + 0x227c] = R0;
    3ba4:	28 e6 a1 08 	[P5 + 0x2284] = R0;
    3ba8:	28 e6 a2 08 	[P5 + 0x2288] = R0;
    3bac:	28 e6 a5 08 	[P5 + 0x2294] = R0;
    3bb0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_FlushAddressCacheRecords>(  0) */
    3bb4:	28 e6 a7 08 	[P5 + 0x229c] = R0;
    3bb8:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    3bbc:	01 e1 b4 01 	R1.L = 0x1b4;		/* (436)	R1=0x1b4 <_FoundStaticHostname>(436) */
    3bc0:	10 91       	R0 = [P2];
    3bc2:	29 e6 a6 08 	[P5 + 0x2298] = R1;
    3bc6:	00 0c       	CC = R0 == 0x0;
    3bc8:	0d 1c       	IF CC JUMP 0x3be2 <_GetServiceTarget+0x1ba> (BP);
    3bca:	60 60       	R0 = 0xc (X);		/*		R0=0xc( 12) */
    3bcc:	ff e3 1a e2 	CALL 0x0 <_FlushAddressCacheRecords>;
    3bd0:	f0 b0       	[SP + 0xc] = R0;
    3bd2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1b4 <_FoundStaticHostname>(436) */
    3bd6:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    3bd8:	01 e1 f8 1c 	R1.L = 0x1cf8;		/* (7416)	R1=0x1cf8(7416) */
    3bdc:	53 30       	R2 = P3;
    3bde:	ff e3 11 e2 	CALL 0x0 <_FlushAddressCacheRecords>;
    3be2:	45 30       	R0 = P5;
    3be4:	4f 30       	R1 = FP;
    3be6:	ff e3 0d e2 	CALL 0x0 <_FlushAddressCacheRecords>;
    3bea:	10 30       	R2 = R0;
    3bec:	00 0c       	CC = R0 == 0x0;
    3bee:	08 1c       	IF CC JUMP 0x3bfe <_GetServiceTarget+0x1d6> (BP);
    3bf0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1cf8(7416) */
    3bf4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3bf6:	01 e1 18 1d 	R1.L = 0x1d18;		/* (7448)	R1=0x1d18(7448) */
    3bfa:	ff e3 03 e2 	CALL 0x0 <_FlushAddressCacheRecords>;
    3bfe:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    3c02:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    3c06:	10 91       	R0 = [P2];
    3c08:	00 0c       	CC = R0 == 0x0;
    3c0a:	11 1c       	IF CC JUMP 0x3c2c <_GetServiceTarget+0x204> (BP);
    3c0c:	61 a2       	R1 = [P4 + 0x24];
    3c0e:	44 30       	R0 = P4;
    3c10:	55 30       	R2 = P5;
    3c12:	21 64       	R1 += 0x4;		/* (  4) */
    3c14:	ba 65       	R2 += 0x37;		/* ( 55) */
    3c16:	20 64       	R0 += 0x4;		/* (  4) */
    3c18:	ff e3 f4 e1 	CALL 0x0 <_FlushAddressCacheRecords>;
    3c1c:	10 30       	R2 = R0;
    3c1e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1d18(7448) */
    3c22:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    3c24:	01 e1 50 1d 	R1.L = 0x1d50;		/* (7504)	R1=0x1d50(7504) */
    3c28:	ff e3 ec e1 	CALL 0x0 <_FlushAddressCacheRecords>;
    3c2c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3c2e:	e6 6d       	SP += 0x3c;		/* ( 60) */
    3c30:	66 6c       	SP += 0xc;		/* ( 12) */
    3c32:	77 90       	FP = [SP++];
    3c34:	27 01       	RETS = [SP++];
    3c36:	a3 05       	(R7:4, P5:3) = [SP++];
    3c38:	10 00       	RTS;
	...

00003c3c <_CompleteRecordNatMap>:
_CompleteRecordNatMap():
    3c3c:	fb 05       	[--SP] = (R7:7, P5:3);
    3c3e:	00 e8 05 00 	LINK 0x14;		/* (20) */
    3c42:	39 32       	FP = R1;
    3c44:	20 32       	P4 = R0;
    3c46:	bd af       	P5 = [FP + 0x38];
    3c48:	45 0c       	CC = P5 == 0x0;
    3c4a:	0c 14       	IF !CC JUMP 0x3c62 <_CompleteRecordNatMap+0x26> (BP);
    3c4c:	a6 6c       	SP += 0x14;		/* ( 20) */
    3c4e:	77 90       	FP = [SP++];
    3c50:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1d50(7504) */
    3c54:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3c56:	01 e1 78 1d 	R1.L = 0x1d78;		/* (7544)	R1=0x1d78(7544) */
    3c5a:	27 01       	RETS = [SP++];
    3c5c:	bb 05       	(R7:7, P5:3) = [SP++];
    3c5e:	ff e2 d1 e1 	JUMP.L 0x0 <_FlushAddressCacheRecords>;
    3c62:	00 00       	NOP;
    3c64:	38 a3       	R0 = [FP + 0x30];
    3c66:	00 0c       	CC = R0 == 0x0;
    3c68:	10 14       	IF !CC JUMP 0x3c88 <_CompleteRecordNatMap+0x4c> (BP);
    3c6a:	69 a2       	R1 = [P5 + 0x24];
    3c6c:	45 30       	R0 = P5;
    3c6e:	54 30       	R2 = P4;
    3c70:	21 64       	R1 += 0x4;		/* (  4) */
    3c72:	ba 65       	R2 += 0x37;		/* ( 55) */
    3c74:	20 64       	R0 += 0x4;		/* (  4) */
    3c76:	ff e3 c5 e1 	CALL 0x0 <_FlushAddressCacheRecords>;
    3c7a:	10 30       	R2 = R0;
    3c7c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1d78(7544) */
    3c80:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3c82:	01 e1 b4 1d 	R1.L = 0x1db4;		/* (7604)	R1=0x1db4(7604) */
    3c86:	13 20       	JUMP.S 0x3cac <_CompleteRecordNatMap+0x70>;
    3c88:	09 61       	R1 = 0x21 (X);		/*		R1=0x21( 33) */
    3c8a:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    3c8c:	08 08       	CC = R0 == R1;
    3c8e:	15 1c       	IF CC JUMP 0x3cb8 <_CompleteRecordNatMap+0x7c> (BP);
    3c90:	69 a2       	R1 = [P5 + 0x24];
    3c92:	45 30       	R0 = P5;
    3c94:	54 30       	R2 = P4;
    3c96:	21 64       	R1 += 0x4;		/* (  4) */
    3c98:	ba 65       	R2 += 0x37;		/* ( 55) */
    3c9a:	20 64       	R0 += 0x4;		/* (  4) */
    3c9c:	ff e3 b2 e1 	CALL 0x0 <_FlushAddressCacheRecords>;
    3ca0:	10 30       	R2 = R0;
    3ca2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x21( 33) */
    3ca6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3ca8:	01 e1 dc 1d 	R1.L = 0x1ddc;		/* (7644)	R1=0x1ddc(7644) */
    3cac:	a6 6c       	SP += 0x14;		/* ( 20) */
    3cae:	77 90       	FP = [SP++];
    3cb0:	27 01       	RETS = [SP++];
    3cb2:	bb 05       	(R7:7, P5:3) = [SP++];
    3cb4:	ff e2 a6 e1 	JUMP.L 0x0 <_FlushAddressCacheRecords>;
    3cb8:	00 00       	NOP;
    3cba:	a8 e4 04 00 	R0 = B[P5 + 0x4] (Z);
    3cbe:	08 0c       	CC = R0 == 0x1;
    3cc0:	17 14       	IF !CC JUMP 0x3cee <_CompleteRecordNatMap+0xb2> (BP);
    3cc2:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    3cc6:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    3cca:	10 91       	R0 = [P2];
    3ccc:	00 0c       	CC = R0 == 0x0;
    3cce:	4e 1d       	IF CC JUMP 0x3f6a <_CompleteRecordNatMap+0x32e> (BP);
    3cd0:	69 a2       	R1 = [P5 + 0x24];
    3cd2:	45 30       	R0 = P5;
    3cd4:	54 30       	R2 = P4;
    3cd6:	21 64       	R1 += 0x4;		/* (  4) */
    3cd8:	ba 65       	R2 += 0x37;		/* ( 55) */
    3cda:	20 64       	R0 += 0x4;		/* (  4) */
    3cdc:	ff e3 92 e1 	CALL 0x0 <_FlushAddressCacheRecords>;
    3ce0:	10 30       	R2 = R0;
    3ce2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1ddc(7644) */
    3ce6:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    3ce8:	01 e1 0c 1e 	R1.L = 0x1e0c;		/* (7692)	R1=0x1e0c(7692) */
    3cec:	e0 2f       	JUMP.S 0x3cac <_CompleteRecordNatMap+0x70>;
    3cee:	00 00       	NOP;
    3cf0:	28 e4 39 00 	R0 = [P5 + 0xe4];
    3cf4:	18 0c       	CC = R0 == 0x3;
    3cf6:	17 14       	IF !CC JUMP 0x3d24 <_CompleteRecordNatMap+0xe8> (BP);
    3cf8:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    3cfc:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    3d00:	10 91       	R0 = [P2];
    3d02:	00 0c       	CC = R0 == 0x0;
    3d04:	33 1d       	IF CC JUMP 0x3f6a <_CompleteRecordNatMap+0x32e> (BP);
    3d06:	69 a2       	R1 = [P5 + 0x24];
    3d08:	45 30       	R0 = P5;
    3d0a:	54 30       	R2 = P4;
    3d0c:	21 64       	R1 += 0x4;		/* (  4) */
    3d0e:	ba 65       	R2 += 0x37;		/* ( 55) */
    3d10:	20 64       	R0 += 0x4;		/* (  4) */
    3d12:	ff e3 77 e1 	CALL 0x0 <_FlushAddressCacheRecords>;
    3d16:	10 30       	R2 = R0;
    3d18:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1e0c(7692) */
    3d1c:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    3d1e:	01 e1 48 1e 	R1.L = 0x1e48;		/* (7752)	R1=0x1e48(7752) */
    3d22:	c5 2f       	JUMP.S 0x3cac <_CompleteRecordNatMap+0x70>;
    3d24:	00 00       	NOP;
    3d26:	2a e5 3f 00 	P2 = [P5 + 0xfc];
    3d2a:	42 0c       	CC = P2 == 0x0;
    3d2c:	05 1c       	IF CC JUMP 0x3d36 <_CompleteRecordNatMap+0xfa> (BP);
    3d2e:	10 e4 c4 00 	R0 = [P2 + 0x310];
    3d32:	00 0c       	CC = R0 == 0x0;
    3d34:	37 10       	IF !CC JUMP 0x3da2 <_CompleteRecordNatMap+0x166>;
    3d36:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    3d3a:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    3d3e:	10 91       	R0 = [P2];
    3d40:	00 0c       	CC = R0 == 0x0;
    3d42:	11 1c       	IF CC JUMP 0x3d64 <_CompleteRecordNatMap+0x128> (BP);
    3d44:	69 a2       	R1 = [P5 + 0x24];
    3d46:	45 30       	R0 = P5;
    3d48:	54 30       	R2 = P4;
    3d4a:	21 64       	R1 += 0x4;		/* (  4) */
    3d4c:	ba 65       	R2 += 0x37;		/* ( 55) */
    3d4e:	20 64       	R0 += 0x4;		/* (  4) */
    3d50:	ff e3 58 e1 	CALL 0x0 <_FlushAddressCacheRecords>;
    3d54:	10 30       	R2 = R0;
    3d56:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1e48(7752) */
    3d5a:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    3d5c:	01 e1 84 1e 	R1.L = 0x1e84;		/* (7812)	R1=0x1e84(7812) */
    3d60:	ff e3 50 e1 	CALL 0x0 <_FlushAddressCacheRecords>;
    3d64:	00 00       	NOP;
    3d66:	28 e4 4f 00 	R0 = [P5 + 0x13c];
    3d6a:	00 0c       	CC = R0 == 0x0;
    3d6c:	0b 18       	IF CC JUMP 0x3d82 <_CompleteRecordNatMap+0x146>;
    3d6e:	2a e1 04 01 	P2 = 0x104 (X);		/*		P2=0x104(260) */
    3d72:	95 5a       	P2 = P5 + P2;
    3d74:	4a 30       	R1 = P2;
    3d76:	44 30       	R0 = P4;
    3d78:	ff e3 32 f2 	CALL 0x21dc <_mDNS_StopNATOperation_internal>;
    3d7c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3d7e:	28 e6 4f 00 	[P5 + 0x13c] = R0;
    3d82:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    3d84:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x104 */
    3d88:	28 e6 39 00 	[P5 + 0xe4] = R0;
    3d8c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    3d90:	10 91       	R0 = [P2];
    3d92:	21 e4 37 00 	R1 = [P4 + 0xdc];
    3d96:	28 e6 2f 00 	[P5 + 0xbc] = R0;
    3d9a:	01 52       	R0 = R1 - R0;
    3d9c:	28 e6 30 00 	[P5 + 0xc0] = R0;
    3da0:	e5 20       	JUMP.S 0x3f6a <_CompleteRecordNatMap+0x32e>;
    3da2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1e84(7812) */
    3da6:	44 30       	R0 = P4;
    3da8:	01 e1 b8 00 	R1.L = 0xb8;		/* (184)	R1=0xb8(184) */
    3dac:	ff e3 2a e1 	CALL 0x0 <_FlushAddressCacheRecords>;
    3db0:	4d 30       	R1 = P5;
    3db2:	44 30       	R0 = P4;
    3db4:	ff e3 3a fe 	CALL 0x3a28 <_GetServiceTarget>;
    3db8:	38 30       	R7 = R0;
    3dba:	e8 a8       	R0 = W[P5 + 0x6] (X);
    3dbc:	c1 42       	R1 = R0.L (Z);
    3dbe:	11 0c       	CC = R1 == 0x2;
    3dc0:	0b 18       	IF CC JUMP 0x3dd6 <_CompleteRecordNatMap+0x19a>;
    3dc2:	2a 60       	R2 = 0x5 (X);		/*		R2=0x5(  5) */
    3dc4:	11 08       	CC = R1 == R2;
    3dc6:	08 18       	IF CC JUMP 0x3dd6 <_CompleteRecordNatMap+0x19a>;
    3dc8:	62 60       	R2 = 0xc (X);		/*		R2=0xc( 12) */
    3dca:	11 08       	CC = R1 == R2;
    3dcc:	05 18       	IF CC JUMP 0x3dd6 <_CompleteRecordNatMap+0x19a>;
    3dce:	01 30       	R0 = R1;
    3dd0:	39 61       	R1 = 0x27 (X);		/*		R1=0x27( 39) */
    3dd2:	08 08       	CC = R0 == R1;
    3dd4:	04 14       	IF !CC JUMP 0x3ddc <_CompleteRecordNatMap+0x1a0> (BP);
    3dd6:	6b ae       	P3 = [P5 + 0x24];
    3dd8:	23 6c       	P3 += 0x4;		/* (  4) */
    3dda:	17 20       	JUMP.S 0x3e08 <_CompleteRecordNatMap+0x1cc>;
    3ddc:	7a 60       	R2 = 0xf (X);		/*		R2=0xf( 15) */
    3dde:	10 08       	CC = R0 == R2;
    3de0:	0a 18       	IF CC JUMP 0x3df4 <_CompleteRecordNatMap+0x1b8>;
    3de2:	91 60       	R1 = 0x12 (X);		/*		R1=0x12( 18) */
    3de4:	08 08       	CC = R0 == R1;
    3de6:	07 18       	IF CC JUMP 0x3df4 <_CompleteRecordNatMap+0x1b8>;
    3de8:	aa 60       	R2 = 0x15 (X);		/*		R2=0x15( 21) */
    3dea:	10 08       	CC = R0 == R2;
    3dec:	04 18       	IF CC JUMP 0x3df4 <_CompleteRecordNatMap+0x1b8>;
    3dee:	21 61       	R1 = 0x24 (X);		/*		R1=0x24( 36) */
    3df0:	08 08       	CC = R0 == R1;
    3df2:	04 14       	IF !CC JUMP 0x3dfa <_CompleteRecordNatMap+0x1be> (BP);
    3df4:	6b ae       	P3 = [P5 + 0x24];
    3df6:	33 6c       	P3 += 0x6;		/* (  6) */
    3df8:	08 20       	JUMP.S 0x3e08 <_CompleteRecordNatMap+0x1cc>;
    3dfa:	0a 61       	R2 = 0x21 (X);		/*		R2=0x21( 33) */
    3dfc:	10 08       	CC = R0 == R2;
    3dfe:	04 14       	IF !CC JUMP 0x3e06 <_CompleteRecordNatMap+0x1ca> (BP);
    3e00:	6b ae       	P3 = [P5 + 0x24];
    3e02:	53 6c       	P3 += 0xa;		/* ( 10) */
    3e04:	02 20       	JUMP.S 0x3e08 <_CompleteRecordNatMap+0x1cc>;
    3e06:	03 68       	P3 = 0x0 (X);		/*		P3=0x0(  0) */
    3e08:	07 0c       	CC = R7 == 0x0;
    3e0a:	21 1c       	IF CC JUMP 0x3e4c <_CompleteRecordNatMap+0x210> (BP);
    3e0c:	17 32       	P2 = R7;
    3e0e:	10 99       	R0 = B[P2] (Z);
    3e10:	00 0c       	CC = R0 == 0x0;
    3e12:	1d 1c       	IF CC JUMP 0x3e4c <_CompleteRecordNatMap+0x210> (BP);
    3e14:	b8 a7       	R0 = W[FP + 0x1c] (Z);
    3e16:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    3e1a:	00 0c       	CC = R0 == 0x0;
    3e1c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    3e20:	41 14       	IF !CC JUMP 0x3ea2 <_CompleteRecordNatMap+0x266> (BP);
    3e22:	10 91       	R0 = [P2];
    3e24:	00 0c       	CC = R0 == 0x0;
    3e26:	29 1c       	IF CC JUMP 0x3e78 <_CompleteRecordNatMap+0x23c> (BP);
    3e28:	28 a2       	R0 = [P5 + 0x20];
    3e2a:	f0 b0       	[SP + 0xc] = R0;
    3e2c:	b8 e4 1c 00 	R0 = B[FP + 0x1c] (Z);
    3e30:	b9 e4 1d 00 	R1 = B[FP + 0x1d] (Z);
    3e34:	40 4f       	R0 <<= 0x8;
    3e36:	01 56       	R0 = R1 | R0;
    3e38:	30 b1       	[SP + 0x10] = R0;
    3e3a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x24( 36) */
    3e3e:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    3e40:	01 e1 c0 1e 	R1.L = 0x1ec0;		/* (7872)	R1=0x1ec0(7872) */
    3e44:	17 30       	R2 = R7;
    3e46:	ff e3 dd e0 	CALL 0x0 <_FlushAddressCacheRecords>;
    3e4a:	17 20       	JUMP.S 0x3e78 <_CompleteRecordNatMap+0x23c>;
    3e4c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    3e50:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    3e54:	10 91       	R0 = [P2];
    3e56:	00 0c       	CC = R0 == 0x0;
    3e58:	10 1c       	IF CC JUMP 0x3e78 <_CompleteRecordNatMap+0x23c> (BP);
    3e5a:	b8 e4 1c 00 	R0 = B[FP + 0x1c] (Z);
    3e5e:	b9 e4 1d 00 	R1 = B[FP + 0x1d] (Z);
    3e62:	40 4f       	R0 <<= 0x8;
    3e64:	01 56       	R0 = R1 | R0;
    3e66:	2a a2       	R2 = [P5 + 0x20];
    3e68:	f0 b0       	[SP + 0xc] = R0;
    3e6a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1ec0(7872) */
    3e6e:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    3e70:	01 e1 0c 1f 	R1.L = 0x1f0c;		/* (7948)	R1=0x1f0c(7948) */
    3e74:	ff e3 c6 e0 	CALL 0x0 <_FlushAddressCacheRecords>;
    3e78:	43 0c       	CC = P3 == 0x0;
    3e7a:	03 18       	IF CC JUMP 0x3e80 <_CompleteRecordNatMap+0x244>;
    3e7c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3e7e:	18 9b       	B[P3] = R0;
    3e80:	40 60       	R0 = 0x8 (X);		/*		R0=0x8(  8) */
    3e82:	28 e6 39 00 	[P5 + 0xe4] = R0;
    3e86:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3e88:	68 b6       	W[P5 + 0x12] = R0;
    3e8a:	28 b6       	W[P5 + 0x10] = R0;
    3e8c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1f0c(7948) */
    3e90:	44 30       	R0 = P4;
    3e92:	01 e1 b8 00 	R1.L = 0xb8;		/* (184)	R1=0xb8(184) */
    3e96:	ff e3 b5 e0 	CALL 0x0 <_FlushAddressCacheRecords>;
    3e9a:	44 30       	R0 = P4;
    3e9c:	4d 30       	R1 = P5;
    3e9e:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    3ea0:	5f 20       	JUMP.S 0x3f5e <_CompleteRecordNatMap+0x322>;
    3ea2:	10 91       	R0 = [P2];
    3ea4:	00 0c       	CC = R0 == 0x0;
    3ea6:	12 1c       	IF CC JUMP 0x3eca <_CompleteRecordNatMap+0x28e> (BP);
    3ea8:	28 a2       	R0 = [P5 + 0x20];
    3eaa:	f0 b0       	[SP + 0xc] = R0;
    3eac:	b8 e4 1c 00 	R0 = B[FP + 0x1c] (Z);
    3eb0:	b9 e4 1d 00 	R1 = B[FP + 0x1d] (Z);
    3eb4:	40 4f       	R0 <<= 0x8;
    3eb6:	01 56       	R0 = R1 | R0;
    3eb8:	30 b1       	[SP + 0x10] = R0;
    3eba:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xb8(184) */
    3ebe:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    3ec0:	01 e1 c0 1e 	R1.L = 0x1ec0;		/* (7872)	R1=0x1ec0(7872) */
    3ec4:	17 30       	R2 = R7;
    3ec6:	ff e3 9d e0 	CALL 0x0 <_FlushAddressCacheRecords>;
    3eca:	43 0c       	CC = P3 == 0x0;
    3ecc:	20 18       	IF CC JUMP 0x3f0c <_CompleteRecordNatMap+0x2d0>;
    3ece:	43 30       	R0 = P3;
    3ed0:	0f 30       	R1 = R7;
    3ed2:	ff e3 97 e0 	CALL 0x0 <_FlushAddressCacheRecords>;
    3ed6:	00 0c       	CC = R0 == 0x0;
    3ed8:	1a 14       	IF !CC JUMP 0x3f0c <_CompleteRecordNatMap+0x2d0> (BP);
    3eda:	2a e1 00 01 	P2 = 0x100 (X);		/*		P2=0x100(256) */
    3ede:	42 30       	R0 = P2;
    3ee0:	47 50       	R1 = R7 + R0;
    3ee2:	07 30       	R0 = R7;
    3ee4:	ff e3 8e e0 	CALL 0x0 <_FlushAddressCacheRecords>;
    3ee8:	c2 42       	R2 = R0.L (Z);
    3eea:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    3eee:	0a 0a       	CC = R2 <= R1 (IU);
    3ef0:	06 14       	IF !CC JUMP 0x3efc <_CompleteRecordNatMap+0x2c0> (BP);
    3ef2:	43 30       	R0 = P3;
    3ef4:	0f 30       	R1 = R7;
    3ef6:	ff e3 85 e0 	CALL 0x0 <_FlushAddressCacheRecords>;
    3efa:	03 20       	JUMP.S 0x3f00 <_CompleteRecordNatMap+0x2c4>;
    3efc:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3efe:	18 9b       	B[P3] = R0;
    3f00:	45 30       	R0 = P5;
    3f02:	20 64       	R0 += 0x4;		/* (  4) */
    3f04:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    3f06:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    3f08:	ff e3 7c e0 	CALL 0x0 <_FlushAddressCacheRecords>;
    3f0c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3f0e:	28 e6 50 00 	[P5 + 0x140] = R0;
    3f12:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    3f14:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x0 <_FlushAddressCacheRecords> */
    3f18:	28 e6 39 00 	[P5 + 0xe4] = R0;
    3f1c:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_FlushAddressCacheRecords> */
    3f20:	18 91       	R0 = [P3];
    3f22:	22 e4 37 00 	R2 = [P4 + 0xdc];
    3f26:	42 52       	R1 = R2 - R0;
    3f28:	28 e6 2f 00 	[P5 + 0xbc] = R0;
    3f2c:	29 e6 30 00 	[P5 + 0xc0] = R1;
    3f30:	82 50       	R2 = R2 + R0;
    3f32:	44 30       	R0 = P4;
    3f34:	4d 30       	R1 = P5;
    3f36:	ff e3 07 ed 	CALL 0x1944 <_IsRecordMergeable>;
    3f3a:	00 0c       	CC = R0 == 0x0;
    3f3c:	07 1c       	IF CC JUMP 0x3f4a <_CompleteRecordNatMap+0x30e> (BP);
    3f3e:	29 e4 30 00 	R1 = [P5 + 0xc0];
    3f42:	18 91       	R0 = [P3];
    3f44:	01 50       	R0 = R1 + R0;
    3f46:	28 e6 30 00 	[P5 + 0xc0] = R0;
    3f4a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_FlushAddressCacheRecords>(  0) */
    3f4e:	44 30       	R0 = P4;
    3f50:	01 e1 b8 00 	R1.L = 0xb8;		/* (184)	R1=0xb8(184) */
    3f54:	ff e3 56 e0 	CALL 0x0 <_FlushAddressCacheRecords>;
    3f58:	44 30       	R0 = P4;
    3f5a:	4d 30       	R1 = P5;
    3f5c:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
    3f5e:	a6 6c       	SP += 0x14;		/* ( 20) */
    3f60:	77 90       	FP = [SP++];
    3f62:	27 01       	RETS = [SP++];
    3f64:	bb 05       	(R7:7, P5:3) = [SP++];
    3f66:	ff e2 ed e3 	JUMP.L 0x740 <_UpdateAllServiceRecords>;
    3f6a:	a6 6c       	SP += 0x14;		/* ( 20) */
    3f6c:	77 90       	FP = [SP++];
    3f6e:	27 01       	RETS = [SP++];
    3f70:	bb 05       	(R7:7, P5:3) = [SP++];
    3f72:	10 00       	RTS;

00003f74 <_UpdateOneSRVRecord>:
_UpdateOneSRVRecord():
    3f74:	eb 05       	[--SP] = (R7:5, P5:3);
    3f76:	29 32       	P5 = R1;
    3f78:	67 01       	[--SP] = RETS;
    3f7a:	26 6f       	SP += -0x1c;		/* (-28) */
    3f7c:	20 32       	P4 = R0;
    3f7e:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x0 <_FlushAddressCacheRecords> */
    3f82:	6f a2       	R7 = [P5 + 0x24];
    3f84:	ff e3 52 fd 	CALL 0x3a28 <_GetServiceTarget>;
    3f88:	00 0c       	CC = R0 == 0x0;
    3f8a:	0b e1 08 04 	P3.L = 0x408;		/* (1032)	P3=0x408 */
    3f8e:	98 06       	IF !CC P3 = R0;
    3f90:	28 30       	R5 = R0;
    3f92:	18 99       	R0 = B[P3] (Z);
    3f94:	00 0c       	CC = R0 == 0x0;
    3f96:	06 1c       	IF CC JUMP 0x3fa2 <_UpdateOneSRVRecord+0x2e> (BP);
    3f98:	41 60       	R1 = 0x8 (X);		/*		R1=0x8(  8) */
    3f9a:	28 e4 39 00 	R0 = [P5 + 0xe4];
    3f9e:	08 08       	CC = R0 == R1;
    3fa0:	09 18       	IF CC JUMP 0x3fb2 <_UpdateOneSRVRecord+0x3e>;
    3fa2:	07 30       	R0 = R7;
    3fa4:	50 64       	R0 += 0xa;		/* ( 10) */
    3fa6:	4b 30       	R1 = P3;
    3fa8:	ff e3 2c e0 	CALL 0x0 <_FlushAddressCacheRecords>;
    3fac:	00 0c       	CC = R0 == 0x0;
    3fae:	06 02       	R6 = CC;
    3fb0:	02 20       	JUMP.S 0x3fb4 <_UpdateOneSRVRecord+0x40>;
    3fb2:	0e 60       	R6 = 0x1 (X);		/*		R6=0x1(  1) */
    3fb4:	6a ae       	P2 = [P5 + 0x24];
    3fb6:	a8 e4 44 00 	R0 = B[P5 + 0x44] (Z);
    3fba:	10 0c       	CC = R0 == 0x2;
    3fbc:	17 a9       	R7 = W[P2 + 0x8] (X);
    3fbe:	1e 14       	IF !CC JUMP 0x3ffa <_UpdateOneSRVRecord+0x86> (BP);
    3fc0:	f8 42       	R0 = R7.L (Z);
    3fc2:	00 0c       	CC = R0 == 0x0;
    3fc4:	1b 1c       	IF CC JUMP 0x3ffa <_UpdateOneSRVRecord+0x86> (BP);
    3fc6:	2a e1 14 20 	P2 = 0x2014 (X);		/*		P2=0x2014(8212) */
    3fca:	94 5a       	P2 = P4 + P2;
    3fcc:	42 30       	R0 = P2;
    3fce:	ff e3 19 e0 	CALL 0x0 <_FlushAddressCacheRecords>;
    3fd2:	00 0c       	CC = R0 == 0x0;
    3fd4:	13 1c       	IF CC JUMP 0x3ffa <_UpdateOneSRVRecord+0x86> (BP);
    3fd6:	2a e5 3f 00 	P2 = [P5 + 0xfc];
    3fda:	42 0c       	CC = P2 == 0x0;
    3fdc:	0f 1c       	IF CC JUMP 0x3ffa <_UpdateOneSRVRecord+0x86> (BP);
    3fde:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
    3fe0:	10 e4 c3 00 	R0 = [P2 + 0x30c];
    3fe4:	08 08       	CC = R0 == R1;
    3fe6:	0c 14       	IF !CC JUMP 0x3ffe <_UpdateOneSRVRecord+0x8a> (BP);
    3fe8:	29 e1 10 03 	P1 = 0x310 (X);		/*		P1=0x310(784) */
    3fec:	4a 5a       	P1 = P2 + P1;
    3fee:	41 30       	R0 = P1;
    3ff0:	ff e3 08 e0 	CALL 0x0 <_FlushAddressCacheRecords>;
    3ff4:	00 0c       	CC = R0 == 0x0;
    3ff6:	00 02       	R0 = CC;
    3ff8:	04 20       	JUMP.S 0x4000 <_UpdateOneSRVRecord+0x8c>;
    3ffa:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    3ffc:	02 20       	JUMP.S 0x4000 <_UpdateOneSRVRecord+0x8c>;
    3ffe:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    4000:	29 e4 4f 00 	R1 = [P5 + 0x13c];
    4004:	01 0c       	CC = R1 == 0x0;
    4006:	0c 1c       	IF CC JUMP 0x401e <_UpdateOneSRVRecord+0xaa> (BP);
    4008:	69 e5 98 00 	R1 = W[P5 + 0x130] (X);
    400c:	f9 59       	R7 = R1 ^ R7;
    400e:	06 c4 38 8e 	R7 = ABS R7 (V);
    4012:	bf 43       	R7 = -R7;
    4014:	7f 49       	CC = BITTST (R7, 0xf);		/* bit 15 */
    4016:	01 02       	R1 = CC;
    4018:	00 0c       	CC = R0 == 0x0;
    401a:	06 14       	IF !CC JUMP 0x4026 <_UpdateOneSRVRecord+0xb2> (BP);
    401c:	03 20       	JUMP.S 0x4022 <_UpdateOneSRVRecord+0xae>;
    401e:	00 0c       	CC = R0 == 0x0;
    4020:	02 20       	JUMP.S 0x4024 <_UpdateOneSRVRecord+0xb0>;
    4022:	01 0c       	CC = R1 == 0x0;
    4024:	03 14       	IF !CC JUMP 0x402a <_UpdateOneSRVRecord+0xb6> (BP);
    4026:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    4028:	02 20       	JUMP.S 0x402c <_UpdateOneSRVRecord+0xb8>;
    402a:	0f 60       	R7 = 0x1 (X);		/*		R7=0x1(  1) */
    402c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x2014 */
    4030:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4034:	10 91       	R0 = [P2];
    4036:	00 0c       	CC = R0 == 0x0;
    4038:	13 1c       	IF CC JUMP 0x405e <_UpdateOneSRVRecord+0xea> (BP);
    403a:	69 a2       	R1 = [P5 + 0x24];
    403c:	45 30       	R0 = P5;
    403e:	54 30       	R2 = P4;
    4040:	21 64       	R1 += 0x4;		/* (  4) */
    4042:	ba 65       	R2 += 0x37;		/* ( 55) */
    4044:	20 64       	R0 += 0x4;		/* (  4) */
    4046:	ff e3 dd df 	CALL 0x0 <_FlushAddressCacheRecords>;
    404a:	10 30       	R2 = R0;
    404c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4(  4) */
    4050:	f6 b0       	[SP + 0xc] = R6;
    4052:	35 b1       	[SP + 0x10] = R5;
    4054:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    4056:	01 e1 48 1f 	R1.L = 0x1f48;		/* (8008)	R1=0x1f48(8008) */
    405a:	ff e3 d3 df 	CALL 0x0 <_FlushAddressCacheRecords>;
    405e:	00 00       	NOP;
    4060:	20 a3       	R0 = [P4 + 0x30];
    4062:	08 30       	R1 = R0;
    4064:	e2 a2       	R2 = [P4 + 0x2c];
    4066:	09 64       	R1 += 0x1;		/* (  1) */
    4068:	0a 08       	CC = R2 == R1;
    406a:	09 18       	IF CC JUMP 0x407c <_UpdateOneSRVRecord+0x108>;
    406c:	f0 b0       	[SP + 0xc] = R0;
    406e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1f48(8008) */
    4072:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4074:	01 e1 90 1f 	R1.L = 0x1f90;		/* (8080)	R1=0x1f90(8080) */
    4078:	ff e3 c4 df 	CALL 0x0 <_FlushAddressCacheRecords>;
    407c:	06 0c       	CC = R6 == 0x0;
    407e:	03 14       	IF !CC JUMP 0x4084 <_UpdateOneSRVRecord+0x110> (BP);
    4080:	07 0c       	CC = R7 == 0x0;
    4082:	e3 1c       	IF CC JUMP 0x4248 <_UpdateOneSRVRecord+0x2d4> (BP);
    4084:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4088:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    408c:	a8 e4 04 00 	R0 = B[P5 + 0x4] (Z);
    4090:	08 0c       	CC = R0 == 0x1;
    4092:	13 14       	IF !CC JUMP 0x40b8 <_UpdateOneSRVRecord+0x144> (BP);
    4094:	10 91       	R0 = [P2];
    4096:	00 0c       	CC = R0 == 0x0;
    4098:	d8 1c       	IF CC JUMP 0x4248 <_UpdateOneSRVRecord+0x2d4> (BP);
    409a:	28 a2       	R0 = [P5 + 0x20];
    409c:	30 b1       	[SP + 0x10] = R0;
    409e:	28 e4 39 00 	R0 = [P5 + 0xe4];
    40a2:	70 b1       	[SP + 0x14] = R0;
    40a4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1f90(8080) */
    40a8:	f7 b0       	[SP + 0xc] = R7;
    40aa:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    40ac:	01 e1 dc 1f 	R1.L = 0x1fdc;		/* (8156)	R1=0x1fdc(8156) */
    40b0:	16 30       	R2 = R6;
    40b2:	ff e3 a7 df 	CALL 0x0 <_FlushAddressCacheRecords>;
    40b6:	c9 20       	JUMP.S 0x4248 <_UpdateOneSRVRecord+0x2d4>;
    40b8:	10 91       	R0 = [P2];
    40ba:	00 0c       	CC = R0 == 0x0;
    40bc:	10 1c       	IF CC JUMP 0x40dc <_UpdateOneSRVRecord+0x168> (BP);
    40be:	28 a2       	R0 = [P5 + 0x20];
    40c0:	30 b1       	[SP + 0x10] = R0;
    40c2:	28 e4 39 00 	R0 = [P5 + 0xe4];
    40c6:	70 b1       	[SP + 0x14] = R0;
    40c8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1fdc(8156) */
    40cc:	f7 b0       	[SP + 0xc] = R7;
    40ce:	b3 bd       	[SP + 0x18] = P3;
    40d0:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    40d2:	01 e1 44 20 	R1.L = 0x2044;		/* (8260)	R1=0x2044(8260) */
    40d6:	16 30       	R2 = R6;
    40d8:	ff e3 94 df 	CALL 0x0 <_FlushAddressCacheRecords>;
    40dc:	41 68       	P1 = 0x8 (X);		/*		P1=0x8(  8) */
    40de:	2a e4 39 00 	R2 = [P5 + 0xe4];
    40e2:	12 32       	P2 = R2;
    40e4:	fa 6f       	P2 += -0x1;		/* ( -1) */
    40e6:	4a 0a       	CC = P2 <= P1 (IU);
    40e8:	a7 14       	IF !CC JUMP 0x4236 <_UpdateOneSRVRecord+0x2c2> (BP);
    40ea:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x8 */
    40ee:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_FlushAddressCacheRecords> */
    40f2:	91 5e       	P2 = P1 + (P2 << 0x2);
    40f4:	52 91       	P2 = [P2];
    40f6:	52 00       	JUMP (P2);
    40f8:	07 0c       	CC = R7 == 0x0;
    40fa:	a7 1c       	IF CC JUMP 0x4248 <_UpdateOneSRVRecord+0x2d4> (BP);
    40fc:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4100:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4104:	18 99       	R0 = B[P3] (Z);
    4106:	00 0c       	CC = R0 == 0x0;
    4108:	17 10       	IF !CC JUMP 0x4136 <_UpdateOneSRVRecord+0x1c2>;
    410a:	10 91       	R0 = [P2];
    410c:	00 0c       	CC = R0 == 0x0;
    410e:	9d 1c       	IF CC JUMP 0x4248 <_UpdateOneSRVRecord+0x2d4> (BP);
    4110:	69 a2       	R1 = [P5 + 0x24];
    4112:	45 30       	R0 = P5;
    4114:	54 30       	R2 = P4;
    4116:	21 64       	R1 += 0x4;		/* (  4) */
    4118:	ba 65       	R2 += 0x37;		/* ( 55) */
    411a:	20 64       	R0 += 0x4;		/* (  4) */
    411c:	ff e3 72 df 	CALL 0x0 <_FlushAddressCacheRecords>;
    4120:	e6 6c       	SP += 0x1c;		/* ( 28) */
    4122:	27 01       	RETS = [SP++];
    4124:	10 30       	R2 = R0;
    4126:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2044(8260) */
    412a:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    412c:	01 e1 9c 20 	R1.L = 0x209c;		/* (8348)	R1=0x209c(8348) */
    4130:	ab 05       	(R7:5, P5:3) = [SP++];
    4132:	ff e2 67 df 	JUMP.L 0x0 <_FlushAddressCacheRecords>;
    4136:	10 91       	R0 = [P2];
    4138:	00 0c       	CC = R0 == 0x0;
    413a:	09 1c       	IF CC JUMP 0x414c <_UpdateOneSRVRecord+0x1d8> (BP);
    413c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x209c(8348) */
    4140:	2a a2       	R2 = [P5 + 0x20];
    4142:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    4144:	01 e1 d8 20 	R1.L = 0x20d8;		/* (8408)	R1=0x20d8(8408) */
    4148:	ff e3 5c df 	CALL 0x0 <_FlushAddressCacheRecords>;
    414c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    414e:	29 e1 c8 1f 	P1 = 0x1fc8 (X);		/*		P1=0x1fc8(8136) */
    4152:	28 e6 50 00 	[P5 + 0x140] = R0;
    4156:	4c 5a       	P1 = P4 + P1;
    4158:	22 e5 f2 07 	P2 = [P4 + 0x1fc8];
    415c:	03 20       	JUMP.S 0x4162 <_UpdateOneSRVRecord+0x1ee>;
    415e:	4a 32       	P1 = P2;
    4160:	52 91       	P2 = [P2];
    4162:	42 0c       	CC = P2 == 0x0;
    4164:	1d 18       	IF CC JUMP 0x419e <_UpdateOneSRVRecord+0x22a>;
    4166:	6a 08       	CC = P2 == P5;
    4168:	fb 17       	IF !CC JUMP 0x415e <_UpdateOneSRVRecord+0x1ea> (BP);
    416a:	28 91       	R0 = [P5];
    416c:	08 93       	[P1] = R0;
    416e:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    4170:	28 e4 4f 00 	R0 = [P5 + 0x13c];
    4174:	2f 93       	[P5] = R7;
    4176:	00 0c       	CC = R0 == 0x0;
    4178:	1b 18       	IF CC JUMP 0x41ae <_UpdateOneSRVRecord+0x23a>;
    417a:	2a e1 04 01 	P2 = 0x104 (X);		/*		P2=0x104(260) */
    417e:	95 5a       	P2 = P5 + P2;
    4180:	4a 30       	R1 = P2;
    4182:	44 30       	R0 = P4;
    4184:	ff e3 2c f0 	CALL 0x21dc <_mDNS_StopNATOperation_internal>;
    4188:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    418a:	09 61       	R1 = 0x21 (X);		/*		R1=0x21( 33) */
    418c:	2f e6 4f 00 	[P5 + 0x13c] = R7;
    4190:	08 08       	CC = R0 == R1;
    4192:	0e 14       	IF !CC JUMP 0x41ae <_UpdateOneSRVRecord+0x23a> (BP);
    4194:	6a ae       	P2 = [P5 + 0x24];
    4196:	68 e5 97 00 	R0 = W[P5 + 0x12e] (X);
    419a:	10 b5       	W[P2 + 0x8] = R0;
    419c:	09 20       	JUMP.S 0x41ae <_UpdateOneSRVRecord+0x23a>;
    419e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x21( 33) */
    41a2:	2a a2       	R2 = [P5 + 0x20];
    41a4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    41a6:	01 e1 08 21 	R1.L = 0x2108;		/* (8456)	R1=0x2108(8456) */
    41aa:	ff e3 2b df 	CALL 0x0 <_FlushAddressCacheRecords>;
    41ae:	4d 30       	R1 = P5;
    41b0:	44 30       	R0 = P4;
    41b2:	ff e3 27 df 	CALL 0x0 <_FlushAddressCacheRecords>;
    41b6:	44 30       	R0 = P4;
    41b8:	4d 30       	R1 = P5;
    41ba:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
    41bc:	38 20       	JUMP.S 0x422c <_UpdateOneSRVRecord+0x2b8>;
    41be:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    41c0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x104 */
    41c4:	28 e6 50 00 	[P5 + 0x140] = R0;
    41c8:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    41cc:	10 91       	R0 = [P2];
    41ce:	28 e6 2f 00 	[P5 + 0xbc] = R0;
    41d2:	21 e4 37 00 	R1 = [P4 + 0xdc];
    41d6:	01 52       	R0 = R1 - R0;
    41d8:	28 e6 30 00 	[P5 + 0xc0] = R0;
    41dc:	18 99       	R0 = B[P3] (Z);
    41de:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    41e2:	00 0c       	CC = R0 == 0x0;
    41e4:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    41e8:	11 1c       	IF CC JUMP 0x420a <_UpdateOneSRVRecord+0x296> (BP);
    41ea:	10 91       	R0 = [P2];
    41ec:	00 0c       	CC = R0 == 0x0;
    41ee:	0a 1c       	IF CC JUMP 0x4202 <_UpdateOneSRVRecord+0x28e> (BP);
    41f0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2108(8456) */
    41f4:	2a a2       	R2 = [P5 + 0x20];
    41f6:	f3 bc       	[SP + 0xc] = P3;
    41f8:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    41fa:	01 e1 44 21 	R1.L = 0x2144;		/* (8516)	R1=0x2144(8516) */
    41fe:	ff e3 01 df 	CALL 0x0 <_FlushAddressCacheRecords>;
    4202:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    4204:	28 e6 39 00 	[P5 + 0xe4] = R0;
    4208:	20 20       	JUMP.S 0x4248 <_UpdateOneSRVRecord+0x2d4>;
    420a:	10 91       	R0 = [P2];
    420c:	00 0c       	CC = R0 == 0x0;
    420e:	09 1c       	IF CC JUMP 0x4220 <_UpdateOneSRVRecord+0x2ac> (BP);
    4210:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2144(8516) */
    4214:	2a a2       	R2 = [P5 + 0x20];
    4216:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    4218:	01 e1 a0 21 	R1.L = 0x21a0;		/* (8608)	R1=0x21a0(8608) */
    421c:	ff e3 f2 de 	CALL 0x0 <_FlushAddressCacheRecords>;
    4220:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    4222:	28 e6 39 00 	[P5 + 0xe4] = R0;
    4226:	44 30       	R0 = P4;
    4228:	4d 30       	R1 = P5;
    422a:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    422c:	e6 6c       	SP += 0x1c;		/* ( 28) */
    422e:	27 01       	RETS = [SP++];
    4230:	ab 05       	(R7:5, P5:3) = [SP++];
    4232:	ff e2 87 e2 	JUMP.L 0x740 <_UpdateAllServiceRecords>;
    4236:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x21a0(8608) */
    423a:	28 a2       	R0 = [P5 + 0x20];
    423c:	f0 b0       	[SP + 0xc] = R0;
    423e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4240:	01 e1 e8 21 	R1.L = 0x21e8;		/* (8680)	R1=0x21e8(8680) */
    4244:	ff e3 de de 	CALL 0x0 <_FlushAddressCacheRecords>;
    4248:	e6 6c       	SP += 0x1c;		/* ( 28) */
    424a:	27 01       	RETS = [SP++];
    424c:	ab 05       	(R7:5, P5:3) = [SP++];
    424e:	10 00       	RTS;

00004250 <_StartGetZoneData>:
_StartGetZoneData():
    4250:	e3 05       	[--SP] = (R7:4, P5:3);
    4252:	67 01       	[--SP] = RETS;
    4254:	66 6f       	SP += -0x14;		/* (-20) */
    4256:	18 32       	P3 = R0;
    4258:	39 30       	R7 = R1;
    425a:	22 30       	R4 = R2;
    425c:	ff e3 00 eb 	CALL 0x185c <_GetAuthInfoForName_internal>;
    4260:	20 32       	P4 = R0;
    4262:	44 0c       	CC = P4 == 0x0;
    4264:	16 1c       	IF CC JUMP 0x4290 <_StartGetZoneData+0x40> (BP);
    4266:	a0 a0       	R0 = [P4 + 0x8];
    4268:	00 0c       	CC = R0 == 0x0;
    426a:	13 18       	IF CC JUMP 0x4290 <_StartGetZoneData+0x40>;
    426c:	26 e1 00 01 	R6 = 0x100 (X);		/*		R6=0x100(256) */
    4270:	77 50       	R1 = R7 + R6;
    4272:	07 30       	R0 = R7;
    4274:	ff e3 c6 de 	CALL 0x0 <_FlushAddressCacheRecords>;
    4278:	2a e1 8c 11 	P2 = 0x118c (X);		/*		P2=0x118c(4492) */
    427c:	28 30       	R5 = R0;
    427e:	94 5a       	P2 = P4 + P2;
    4280:	42 30       	R0 = P2;
    4282:	70 50       	R1 = R0 + R6;
    4284:	ff e3 be de 	CALL 0x0 <_FlushAddressCacheRecords>;
    4288:	ed 42       	R5 = R5.L (Z);
    428a:	c0 42       	R0 = R0.L (Z);
    428c:	85 53       	R6 = R5 - R0;
    428e:	02 20       	JUMP.S 0x4292 <_StartGetZoneData+0x42>;
    4290:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
    4292:	20 e1 90 05 	R0 = 0x590 (X);		/*		R0=0x590(1424) */
    4296:	ff e3 b5 de 	CALL 0x0 <_FlushAddressCacheRecords>;
    429a:	28 32       	P5 = R0;
    429c:	45 0c       	CC = P5 == 0x0;
    429e:	09 14       	IF !CC JUMP 0x42b0 <_StartGetZoneData+0x60> (BP);
    42a0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x21e8(8680) */
    42a4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    42a6:	01 e1 18 22 	R1.L = 0x2218;		/* (8728)	R1=0x2218(8728) */
    42aa:	ff e3 ab de 	CALL 0x0 <_FlushAddressCacheRecords>;
    42ae:	11 21       	JUMP.S 0x44d0 <_StartGetZoneData+0x280>;
    42b0:	21 e1 90 05 	R1 = 0x590 (X);		/*		R1=0x590(1424) */
    42b4:	ff e3 a6 de 	CALL 0x0 <_FlushAddressCacheRecords>;
    42b8:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    42bc:	4f 50       	R1 = R7 + R1;
    42be:	07 30       	R0 = R7;
    42c0:	ff e3 a0 de 	CALL 0x0 <_FlushAddressCacheRecords>;
    42c4:	c2 42       	R2 = R0.L (Z);
    42c6:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    42ca:	02 0a       	CC = R2 <= R0 (IU);
    42cc:	06 14       	IF !CC JUMP 0x42d8 <_StartGetZoneData+0x88> (BP);
    42ce:	45 30       	R0 = P5;
    42d0:	0f 30       	R1 = R7;
    42d2:	ff e3 97 de 	CALL 0x0 <_FlushAddressCacheRecords>;
    42d6:	03 20       	JUMP.S 0x42dc <_StartGetZoneData+0x8c>;
    42d8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    42da:	28 9b       	B[P5] = R0;
    42dc:	0e 32       	P1 = R6;
    42de:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    42e0:	a8 e6 08 01 	B[P5 + 0x108] = R0;
    42e4:	a8 e6 0a 02 	B[P5 + 0x20a] = R0;
    42e8:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    42ea:	8d 5a       	P2 = P5 + P1;
    42ec:	2a e7 41 00 	[P5 + 0x104] = P2;
    42f0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x118c */
    42f4:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    42f8:	10 95       	R0 = W[P2] (Z);
    42fa:	69 e6 04 01 	W[P5 + 0x208] = R1;
    42fe:	2a e1 0c 03 	P2 = 0x30c (X);		/*		P2=0x30c(780) */
    4302:	68 e6 85 01 	W[P5 + 0x30a] = R0;
    4306:	95 5a       	P2 = P5 + P2;
    4308:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_FlushAddressCacheRecords>(  0) */
    430c:	2c e6 40 00 	[P5 + 0x100] = R4;
    4310:	42 30       	R0 = P2;
    4312:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_FlushAddressCacheRecords>(  0) */
    4316:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
    4318:	ff e3 74 de 	CALL 0x0 <_FlushAddressCacheRecords>;
    431c:	44 0c       	CC = P4 == 0x0;
    431e:	06 1c       	IF CC JUMP 0x432a <_StartGetZoneData+0xda> (BP);
    4320:	a0 a0       	R0 = [P4 + 0x8];
    4322:	00 0c       	CC = R0 == 0x0;
    4324:	00 02       	R0 = CC;
    4326:	00 4b       	BITTGL (R0, 0x0);		/* bit  0 */
    4328:	02 20       	JUMP.S 0x432c <_StartGetZoneData+0xdc>;
    432a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    432c:	28 e6 c8 00 	[P5 + 0x320] = R0;
    4330:	30 e4 10 00 	R0 = [SP + 0x40];
    4334:	28 e6 c9 00 	[P5 + 0x324] = R0;
    4338:	30 e4 11 00 	R0 = [SP + 0x44];
    433c:	28 e6 ca 00 	[P5 + 0x328] = R0;
    4340:	18 a3       	R0 = [P3 + 0x30];
    4342:	08 64       	R0 += 0x1;		/* (  1) */
    4344:	2d e7 63 01 	[P5 + 0x58c] = P5;
    4348:	d9 a2       	R1 = [P3 + 0x2c];
    434a:	18 b3       	[P3 + 0x30] = R0;
    434c:	01 08       	CC = R1 == R0;
    434e:	0e 18       	IF CC JUMP 0x436a <_StartGetZoneData+0x11a>;
    4350:	f1 b0       	[SP + 0xc] = R1;
    4352:	30 b1       	[SP + 0x10] = R0;
    4354:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_FlushAddressCacheRecords>(  0) */
    4358:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x14( 20) */
    435c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    435e:	01 e1 54 22 	R1.L = 0x2254;		/* (8788)	R1=0x2254(8788) */
    4362:	02 e1 2c 01 	R2.L = 0x12c;		/* (300)	R2=0x12c(300) */
    4366:	ff e3 4d de 	CALL 0x0 <_FlushAddressCacheRecords>;
    436a:	44 0c       	CC = P4 == 0x0;
    436c:	81 1c       	IF CC JUMP 0x446e <_StartGetZoneData+0x21e> (BP);
    436e:	a0 a0       	R0 = [P4 + 0x8];
    4370:	00 0c       	CC = R0 == 0x0;
    4372:	7e 1c       	IF CC JUMP 0x446e <_StartGetZoneData+0x21e> (BP);
    4374:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x30c */
    4378:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    437c:	60 e4 46 0a 	R0 = W[P4 + 0x148c] (Z);
    4380:	00 0c       	CC = R0 == 0x0;
    4382:	68 1c       	IF CC JUMP 0x4452 <_StartGetZoneData+0x202> (BP);
    4384:	10 91       	R0 = [P2];
    4386:	00 0c       	CC = R0 == 0x0;
    4388:	0c 1c       	IF CC JUMP 0x43a0 <_StartGetZoneData+0x150> (BP);
    438a:	2a e1 8c 11 	P2 = 0x118c (X);		/*		P2=0x118c(4492) */
    438e:	94 5a       	P2 = P4 + P2;
    4390:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2254(8788) */
    4394:	52 30       	R2 = P2;
    4396:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    4398:	01 e1 94 22 	R1.L = 0x2294;		/* (8852)	R1=0x2294(8852) */
    439c:	ff e3 32 de 	CALL 0x0 <_FlushAddressCacheRecords>;
    43a0:	2a e1 8c 11 	P2 = 0x118c (X);		/*		P2=0x118c(4492) */
    43a4:	94 5a       	P2 = P4 + P2;
    43a6:	7a 30       	R7 = P2;
    43a8:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    43ac:	4f 50       	R1 = R7 + R1;
    43ae:	42 30       	R0 = P2;
    43b0:	ff e3 28 de 	CALL 0x0 <_FlushAddressCacheRecords>;
    43b4:	c2 42       	R2 = R0.L (Z);
    43b6:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    43ba:	02 0a       	CC = R2 <= R0 (IU);
    43bc:	09 14       	IF !CC JUMP 0x43ce <_StartGetZoneData+0x17e> (BP);
    43be:	2a e1 08 01 	P2 = 0x108 (X);		/*		P2=0x108(264) */
    43c2:	95 5a       	P2 = P5 + P2;
    43c4:	42 30       	R0 = P2;
    43c6:	0f 30       	R1 = R7;
    43c8:	ff e3 1c de 	CALL 0x0 <_FlushAddressCacheRecords>;
    43cc:	04 20       	JUMP.S 0x43d4 <_StartGetZoneData+0x184>;
    43ce:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    43d0:	a8 e6 08 01 	B[P5 + 0x108] = R0;
    43d4:	2a e1 8c 13 	P2 = 0x138c (X);		/*		P2=0x138c(5004) */
    43d8:	94 5a       	P2 = P4 + P2;
    43da:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    43dc:	68 e6 04 01 	W[P5 + 0x208] = R0;
    43e0:	7a 30       	R7 = P2;
    43e2:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    43e6:	4f 50       	R1 = R7 + R1;
    43e8:	42 30       	R0 = P2;
    43ea:	ff e3 0b de 	CALL 0x0 <_FlushAddressCacheRecords>;
    43ee:	c2 42       	R2 = R0.L (Z);
    43f0:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    43f4:	02 0a       	CC = R2 <= R0 (IU);
    43f6:	09 14       	IF !CC JUMP 0x4408 <_StartGetZoneData+0x1b8> (BP);
    43f8:	2a e1 0a 02 	P2 = 0x20a (X);		/*		P2=0x20a(522) */
    43fc:	95 5a       	P2 = P5 + P2;
    43fe:	42 30       	R0 = P2;
    4400:	0f 30       	R1 = R7;
    4402:	ff e3 ff dd 	CALL 0x0 <_FlushAddressCacheRecords>;
    4406:	04 20       	JUMP.S 0x440e <_StartGetZoneData+0x1be>;
    4408:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    440a:	a8 e6 0a 02 	B[P5 + 0x20a] = R0;
    440e:	2a e1 0a 02 	P2 = 0x20a (X);		/*		P2=0x20a(522) */
    4412:	60 e5 46 0a 	R0 = W[P4 + 0x148c] (X);
    4416:	95 5a       	P2 = P5 + P2;
    4418:	68 e6 85 01 	W[P5 + 0x30a] = R0;
    441c:	7a 30       	R7 = P2;
    441e:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    4422:	4f 50       	R1 = R7 + R1;
    4424:	42 30       	R0 = P2;
    4426:	ff e3 ed dd 	CALL 0x0 <_FlushAddressCacheRecords>;
    442a:	c2 42       	R2 = R0.L (Z);
    442c:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    4430:	02 0a       	CC = R2 <= R0 (IU);
    4432:	09 14       	IF !CC JUMP 0x4444 <_StartGetZoneData+0x1f4> (BP);
    4434:	2a e1 60 04 	P2 = 0x460 (X);		/*		P2=0x460(1120) */
    4438:	95 5a       	P2 = P5 + P2;
    443a:	42 30       	R0 = P2;
    443c:	0f 30       	R1 = R7;
    443e:	ff e3 e1 dd 	CALL 0x0 <_FlushAddressCacheRecords>;
    4442:	04 20       	JUMP.S 0x444a <_StartGetZoneData+0x1fa>;
    4444:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4446:	a8 e6 60 04 	B[P5 + 0x460] = R0;
    444a:	43 30       	R0 = P3;
    444c:	4d 30       	R1 = P5;
    444e:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
    4450:	2a 20       	JUMP.S 0x44a4 <_StartGetZoneData+0x254>;
    4452:	10 91       	R0 = [P2];
    4454:	00 0c       	CC = R0 == 0x0;
    4456:	0c 1c       	IF CC JUMP 0x446e <_StartGetZoneData+0x21e> (BP);
    4458:	2a e1 8c 11 	P2 = 0x118c (X);		/*		P2=0x118c(4492) */
    445c:	94 5a       	P2 = P4 + P2;
    445e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x100(256) */
    4462:	52 30       	R2 = P2;
    4464:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    4466:	01 e1 c8 22 	R1.L = 0x22c8;		/* (8904)	R1=0x22c8(8904) */
    446a:	ff e3 cb dd 	CALL 0x0 <_FlushAddressCacheRecords>;
    446e:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    4472:	28 e4 41 00 	R0 = [P5 + 0x104];
    4476:	48 50       	R1 = R0 + R1;
    4478:	ff e3 c4 dd 	CALL 0x0 <_FlushAddressCacheRecords>;
    447c:	c2 42       	R2 = R0.L (Z);
    447e:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    4482:	02 0a       	CC = R2 <= R0 (IU);
    4484:	0a 14       	IF !CC JUMP 0x4498 <_StartGetZoneData+0x248> (BP);
    4486:	2a e1 60 04 	P2 = 0x460 (X);		/*		P2=0x460(1120) */
    448a:	95 5a       	P2 = P5 + P2;
    448c:	42 30       	R0 = P2;
    448e:	29 e4 41 00 	R1 = [P5 + 0x104];
    4492:	ff e3 b7 dd 	CALL 0x0 <_FlushAddressCacheRecords>;
    4496:	04 20       	JUMP.S 0x449e <_StartGetZoneData+0x24e>;
    4498:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    449a:	a8 e6 60 04 	B[P5 + 0x460] = R0;
    449e:	43 30       	R0 = P3;
    44a0:	4d 30       	R1 = P5;
    44a2:	32 60       	R2 = 0x6 (X);		/*		R2=0x6(  6) */
    44a4:	ff e3 de e6 	CALL 0x1260 <_GetZoneData_StartQuery>;
    44a8:	d9 a2       	R1 = [P3 + 0x2c];
    44aa:	18 a3       	R0 = [P3 + 0x30];
    44ac:	01 08       	CC = R1 == R0;
    44ae:	0e 18       	IF CC JUMP 0x44ca <_StartGetZoneData+0x27a>;
    44b0:	f1 b0       	[SP + 0xc] = R1;
    44b2:	30 b1       	[SP + 0x10] = R0;
    44b4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x100(256) */
    44b8:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x6(  6) */
    44bc:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    44be:	01 e1 00 23 	R1.L = 0x2300;		/* (8960)	R1=0x2300(8960) */
    44c2:	02 e1 2c 01 	R2.L = 0x12c;		/* (300)	R2=0x12c(300) */
    44c6:	ff e3 9d dd 	CALL 0x0 <_FlushAddressCacheRecords>;
    44ca:	18 a3       	R0 = [P3 + 0x30];
    44cc:	f8 67       	R0 += -0x1;		/* ( -1) */
    44ce:	18 b3       	[P3 + 0x30] = R0;
    44d0:	a6 6c       	SP += 0x14;		/* ( 20) */
    44d2:	45 30       	R0 = P5;
    44d4:	27 01       	RETS = [SP++];
    44d6:	a3 05       	(R7:4, P5:3) = [SP++];
    44d8:	10 00       	RTS;
	...

000044dc <_startLLQHandshake>:
_startLLQHandshake():
    44dc:	fb 05       	[--SP] = (R7:7, P5:3);
    44de:	20 32       	P4 = R0;
    44e0:	67 01       	[--SP] = RETS;
    44e2:	46 6e       	SP += -0x38;		/* (-56) */
    44e4:	29 32       	P5 = R1;
    44e6:	20 e4 e7 09 	R0 = [P4 + 0x279c];
    44ea:	38 0c       	CC = R0 == -0x1;
    44ec:	28 14       	IF !CC JUMP 0x453c <_startLLQHandshake+0x60> (BP);
    44ee:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x460 */
    44f2:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    44f6:	10 91       	R0 = [P2];
    44f8:	00 0c       	CC = R0 == 0x0;
    44fa:	11 1c       	IF CC JUMP 0x451c <_startLLQHandshake+0x40> (BP);
    44fc:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    4500:	ff e3 80 dd 	CALL 0x0 <_FlushAddressCacheRecords>;
    4504:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    4508:	95 5a       	P2 = P5 + P2;
    450a:	f0 b0       	[SP + 0xc] = R0;
    450c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2300(8960) */
    4510:	52 30       	R2 = P2;
    4512:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    4514:	01 e1 40 23 	R1.L = 0x2340;		/* (9024)	R1=0x2340(9024) */
    4518:	ff e3 74 dd 	CALL 0x0 <_FlushAddressCacheRecords>;
    451c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    4520:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4524:	17 91       	R7 = [P2];
    4526:	20 e1 5a 00 	R0 = 0x5a (X);		/*		R0=0x5a( 90) */
    452a:	f8 40       	R0 *= R7;
    452c:	ff e3 6a dd 	CALL 0x0 <_FlushAddressCacheRecords>;
    4530:	21 e1 84 03 	R1 = 0x384 (X);		/*		R1=0x384(900) */
    4534:	f9 40       	R1 *= R7;
    4536:	48 50       	R1 = R0 + R1;
    4538:	29 b1       	[P5 + 0x10] = R1;
    453a:	6f 21       	JUMP.S 0x4818 <_startLLQHandshake+0x33c>;
    453c:	00 00       	NOP;
    453e:	60 e4 d0 13 	R0 = W[P4 + 0x27a0] (Z);
    4542:	00 0c       	CC = R0 == 0x0;
    4544:	05 1c       	IF CC JUMP 0x454e <_startLLQHandshake+0x72> (BP);
    4546:	20 e4 ea 09 	R0 = [P4 + 0x27a8];
    454a:	00 0c       	CC = R0 == 0x0;
    454c:	23 1c       	IF CC JUMP 0x4592 <_startLLQHandshake+0xb6> (BP);
    454e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4552:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4556:	10 91       	R0 = [P2];
    4558:	00 0c       	CC = R0 == 0x0;
    455a:	37 1d       	IF CC JUMP 0x47c8 <_startLLQHandshake+0x2ec> (BP);
    455c:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    4560:	ff e3 50 dd 	CALL 0x0 <_FlushAddressCacheRecords>;
    4564:	f0 b0       	[SP + 0xc] = R0;
    4566:	a0 e4 a0 27 	R0 = B[P4 + 0x27a0] (Z);
    456a:	a1 e4 a1 27 	R1 = B[P4 + 0x27a1] (Z);
    456e:	40 4f       	R0 <<= 0x8;
    4570:	01 56       	R0 = R1 | R0;
    4572:	30 b1       	[SP + 0x10] = R0;
    4574:	20 e4 ea 09 	R0 = [P4 + 0x27a8];
    4578:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    457c:	95 5a       	P2 = P5 + P2;
    457e:	70 b1       	[SP + 0x14] = R0;
    4580:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x384(900) */
    4584:	52 30       	R2 = P2;
    4586:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    4588:	01 e1 78 23 	R1.L = 0x2378;		/* (9080)	R1=0x2378(9080) */
    458c:	ff e3 3a dd 	CALL 0x0 <_FlushAddressCacheRecords>;
    4590:	1c 21       	JUMP.S 0x47c8 <_startLLQHandshake+0x2ec>;
    4592:	00 00       	NOP;
    4594:	68 e4 7a 00 	R0 = W[P5 + 0xf4] (Z);
    4598:	00 0c       	CC = R0 == 0x0;
    459a:	2a 14       	IF !CC JUMP 0x45ee <_startLLQHandshake+0x112> (BP);
    459c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    45a0:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    45a4:	17 91       	R7 = [P2];
    45a6:	20 e1 5a 00 	R0 = 0x5a (X);		/*		R0=0x5a( 90) */
    45aa:	f8 40       	R0 *= R7;
    45ac:	ff e3 2a dd 	CALL 0x0 <_FlushAddressCacheRecords>;
    45b0:	21 e1 84 03 	R1 = 0x384 (X);		/*		R1=0x384(900) */
    45b4:	f9 40       	R1 *= R7;
    45b6:	48 50       	R1 = R0 + R1;
    45b8:	20 e4 37 00 	R0 = [P4 + 0xdc];
    45bc:	29 b1       	[P5 + 0x10] = R1;
    45be:	e8 b0       	[P5 + 0xc] = R0;
    45c0:	44 30       	R0 = P4;
    45c2:	4d 30       	R1 = P5;
    45c4:	ff e3 1e dd 	CALL 0x0 <_FlushAddressCacheRecords>;
    45c8:	2a e1 e0 00 	P2 = 0xe0 (X);		/*		P2=0xe0(224) */
    45cc:	95 5a       	P2 = P5 + P2;
    45ce:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x384(900) */
    45d2:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_FlushAddressCacheRecords>(  0) */
    45d6:	42 30       	R0 = P2;
    45d8:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
    45da:	ff e3 13 dd 	CALL 0x0 <_FlushAddressCacheRecords>;
    45de:	29 e4 37 00 	R1 = [P5 + 0xdc];
    45e2:	01 0c       	CC = R1 == 0x0;
    45e4:	4c 18       	IF CC JUMP 0x467c <_startLLQHandshake+0x1a0>;
    45e6:	44 30       	R0 = P4;
    45e8:	ff e3 0c dd 	CALL 0x0 <_FlushAddressCacheRecords>;
    45ec:	48 20       	JUMP.S 0x467c <_startLLQHandshake+0x1a0>;
    45ee:	00 00       	NOP;
    45f0:	6a af       	P2 = [P5 + 0x34];
    45f2:	42 0c       	CC = P2 == 0x0;
    45f4:	9f 1c       	IF CC JUMP 0x4732 <_startLLQHandshake+0x256> (BP);
    45f6:	90 a0       	R0 = [P2 + 0x8];
    45f8:	00 0c       	CC = R0 == 0x0;
    45fa:	9c 1c       	IF CC JUMP 0x4732 <_startLLQHandshake+0x256> (BP);
    45fc:	28 e4 3e 00 	R0 = [P5 + 0xf8];
    4600:	00 0c       	CC = R0 == 0x0;
    4602:	18 18       	IF CC JUMP 0x4632 <_startLLQHandshake+0x156>;
    4604:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0xe0 */
    4608:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    460c:	10 91       	R0 = [P2];
    460e:	00 0c       	CC = R0 == 0x0;
    4610:	11 1c       	IF CC JUMP 0x4632 <_startLLQHandshake+0x156> (BP);
    4612:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    4616:	ff e3 f5 dc 	CALL 0x0 <_FlushAddressCacheRecords>;
    461a:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    461e:	95 5a       	P2 = P5 + P2;
    4620:	f0 b0       	[SP + 0xc] = R0;
    4622:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_FlushAddressCacheRecords>(  0) */
    4626:	52 30       	R2 = P2;
    4628:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    462a:	01 e1 e4 23 	R1.L = 0x23e4;		/* (9188)	R1=0x23e4(9188) */
    462e:	ff e3 e9 dc 	CALL 0x0 <_FlushAddressCacheRecords>;
    4632:	00 00       	NOP;
    4634:	28 e4 3e 00 	R0 = [P5 + 0xf8];
    4638:	00 0c       	CC = R0 == 0x0;
    463a:	06 18       	IF CC JUMP 0x4646 <_startLLQHandshake+0x16a>;
    463c:	ff e3 fe f2 	CALL 0x2c38 <_DisposeTCPConn>;
    4640:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4642:	28 e6 3e 00 	[P5 + 0xf8] = R0;
    4646:	2a e5 37 00 	P2 = [P5 + 0xdc];
    464a:	42 0c       	CC = P2 == 0x0;
    464c:	29 14       	IF !CC JUMP 0x469e <_startLLQHandshake+0x1c2> (BP);
    464e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    4652:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4656:	10 91       	R0 = [P2];
    4658:	00 0c       	CC = R0 == 0x0;
    465a:	11 1c       	IF CC JUMP 0x467c <_startLLQHandshake+0x1a0> (BP);
    465c:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    4660:	ff e3 d0 dc 	CALL 0x0 <_FlushAddressCacheRecords>;
    4664:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    4668:	95 5a       	P2 = P5 + P2;
    466a:	f0 b0       	[SP + 0xc] = R0;
    466c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x23e4(9188) */
    4670:	52 30       	R2 = P2;
    4672:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    4674:	01 e1 28 24 	R1.L = 0x2428;		/* (9256)	R1=0x2428(9256) */
    4678:	ff e3 c4 dc 	CALL 0x0 <_FlushAddressCacheRecords>;
    467c:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x3(  3) */
    4680:	00 e1 30 48 	R0.L = 0x4830;		/* (18480)	R0=0x4830 <_LLQGotZoneData>(18480) */
    4684:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    4688:	95 5a       	P2 = P5 + P2;
    468a:	f0 b0       	[SP + 0xc] = R0;
    468c:	4a 30       	R1 = P2;
    468e:	35 bd       	[SP + 0x10] = P5;
    4690:	44 30       	R0 = P4;
    4692:	12 60       	R2 = 0x2 (X);		/*		R2=0x2(  2) */
    4694:	ff e3 de fd 	CALL 0x4250 <_StartGetZoneData>;
    4698:	28 e6 37 00 	[P5 + 0xdc] = R0;
    469c:	c5 20       	JUMP.S 0x4826 <_startLLQHandshake+0x34a>;
    469e:	00 00       	NOP;
    46a0:	90 e4 0a 02 	R0 = B[P2 + 0x20a] (Z);
    46a4:	00 0c       	CC = R0 == 0x0;
    46a6:	19 14       	IF !CC JUMP 0x46d8 <_startLLQHandshake+0x1fc> (BP);
    46a8:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    46ac:	ff e3 aa dc 	CALL 0x0 <_FlushAddressCacheRecords>;
    46b0:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    46b4:	95 5a       	P2 = P5 + P2;
    46b6:	52 30       	R2 = P2;
    46b8:	2a e5 37 00 	P2 = [P5 + 0xdc];
    46bc:	f0 b0       	[SP + 0xc] = R0;
    46be:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2428(9256) */
    46c2:	01 e1 58 24 	R1.L = 0x2458;		/* (9304)	R1=0x2458(9304) */
    46c6:	90 e4 0a 02 	R0 = B[P2 + 0x20a] (Z);
    46ca:	30 b1       	[SP + 0x10] = R0;
    46cc:	28 e4 8e 00 	R0 = [P5 + 0x238];
    46d0:	70 b1       	[SP + 0x14] = R0;
    46d2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    46d4:	ff e3 96 dc 	CALL 0x0 <_FlushAddressCacheRecords>;
    46d8:	2a e1 e0 00 	P2 = 0xe0 (X);		/*		P2=0xe0(224) */
    46dc:	29 e5 37 00 	P1 = [P5 + 0xdc];
    46e0:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    46e2:	95 5a       	P2 = P5 + P2;
    46e4:	f0 b0       	[SP + 0xc] = R0;
    46e6:	32 bd       	[SP + 0x10] = P2;
    46e8:	68 e5 7a 00 	R0 = W[P5 + 0xf4] (X);
    46ec:	2a e1 0a 02 	P2 = 0x20a (X);		/*		P2=0x20a(522) */
    46f0:	b0 b6       	W[SP + 0x14] = R0;
    46f2:	91 5a       	P2 = P1 + P2;
    46f4:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    46f6:	b2 bd       	[SP + 0x18] = P2;
    46f8:	f5 bd       	[SP + 0x1c] = P5;
    46fa:	37 b2       	[SP + 0x20] = R7;
    46fc:	44 30       	R0 = P4;
    46fe:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    4700:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    4702:	ff e3 87 f5 	CALL 0x3210 <_MakeTCPConn>;
    4706:	28 e6 3e 00 	[P5 + 0xf8] = R0;
    470a:	00 0c       	CC = R0 == 0x0;
    470c:	0a 14       	IF !CC JUMP 0x4720 <_startLLQHandshake+0x244> (BP);
    470e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x20a */
    4712:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4716:	10 91       	R0 = [P2];
    4718:	82 c6 10 82 	R1 = R0 << 0x2;
    471c:	01 50       	R0 = R1 + R0;
    471e:	7c 20       	JUMP.S 0x4816 <_startLLQHandshake+0x33a>;
    4720:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    4722:	28 e6 40 00 	[P5 + 0x100] = R0;
    4726:	20 e1 20 1c 	R0 = 0x1c20 (X);		/*		R0=0x1c20(7200) */
    472a:	28 e6 41 00 	[P5 + 0x104] = R0;
    472e:	2f b1       	[P5 + 0x10] = R7;
    4730:	74 20       	JUMP.S 0x4818 <_startLLQHandshake+0x33c>;
    4732:	00 00       	NOP;
    4734:	68 e5 86 00 	R0 = W[P5 + 0x10c] (X);
    4738:	08 30       	R1 = R0;
    473a:	09 64       	R1 += 0x1;		/* (  1) */
    473c:	69 e6 86 00 	W[P5 + 0x10c] = R1;
    4740:	10 0d       	CC = R0 <= 0x2;
    4742:	0e 1c       	IF CC JUMP 0x475e <_startLLQHandshake+0x282> (BP);
    4744:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    4748:	95 5a       	P2 = P5 + P2;
    474a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_FlushAddressCacheRecords>(  0) */
    474e:	f2 bc       	[SP + 0xc] = P2;
    4750:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4752:	01 e1 b4 24 	R1.L = 0x24b4;		/* (9396)	R1=0x24b4(9396) */
    4756:	1a 60       	R2 = 0x3 (X);		/*		R2=0x3(  3) */
    4758:	ff e3 54 dc 	CALL 0x0 <_FlushAddressCacheRecords>;
    475c:	36 20       	JUMP.S 0x47c8 <_startLLQHandshake+0x2ec>;
    475e:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    4760:	70 e6 12 00 	W[SP + 0x24] = R0;
    4764:	70 e6 13 00 	W[SP + 0x26] = R0;
    4768:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    476a:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    476e:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4772:	70 e6 14 00 	W[SP + 0x28] = R0;
    4776:	10 91       	R0 = [P2];
    4778:	51 a0       	R1 = [P2 + 0x4];
    477a:	2b e1 8c 59 	P3 = 0x598c (X);		/*		P3=0x598c(22924) */
    477e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4782:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4786:	f0 b2       	[SP + 0x2c] = R0;
    4788:	31 b3       	[SP + 0x30] = R1;
    478a:	dc 5a       	P3 = P4 + P3;
    478c:	27 e1 20 1c 	R7 = 0x1c20 (X);		/*		R7=0x1c20(7200) */
    4790:	12 95       	R2 = W[P2] (Z);
    4792:	69 e5 99 00 	R1 = W[P5 + 0x132] (X);
    4796:	43 30       	R0 = P3;
    4798:	77 b3       	[SP + 0x34] = R7;
    479a:	ff e3 33 dc 	CALL 0x0 <_FlushAddressCacheRecords>;
    479e:	46 30       	R0 = SP;
    47a0:	20 65       	R0 += 0x24;		/* ( 36) */
    47a2:	2a e1 98 59 	P2 = 0x5998 (X);		/*		P2=0x5998(22936) */
    47a6:	94 5a       	P2 = P4 + P2;
    47a8:	f0 b0       	[SP + 0xc] = R0;
    47aa:	55 30       	R2 = P5;
    47ac:	4a 30       	R1 = P2;
    47ae:	43 30       	R0 = P3;
    47b0:	ff e3 cc e0 	CALL 0x948 <_putLLQ>;
    47b4:	10 30       	R2 = R0;
    47b6:	00 0c       	CC = R0 == 0x0;
    47b8:	0d 14       	IF !CC JUMP 0x47d2 <_startLLQHandshake+0x2f6> (BP);
    47ba:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x24b4(9396) */
    47be:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    47c0:	01 e1 f0 24 	R1.L = 0x24f0;		/* (9456)	R1=0x24f0(9456) */
    47c4:	ff e3 1e dc 	CALL 0x0 <_FlushAddressCacheRecords>;
    47c8:	44 30       	R0 = P4;
    47ca:	4d 30       	R1 = P5;
    47cc:	ff e3 26 e1 	CALL 0xa18 <_StartLLQPolling>;
    47d0:	2b 20       	JUMP.S 0x4826 <_startLLQHandshake+0x34a>;
    47d2:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x5998 */
    47d6:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    47da:	10 91       	R0 = [P2];
    47dc:	f0 b0       	[SP + 0xc] = R0;
    47de:	28 e4 30 00 	R0 = [P5 + 0xc0];
    47e2:	30 b1       	[SP + 0x10] = R0;
    47e4:	68 e5 7a 00 	R0 = W[P5 + 0xf4] (X);
    47e8:	30 b7       	W[SP + 0x18] = R0;
    47ea:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    47ec:	2a e1 e0 00 	P2 = 0xe0 (X);		/*		P2=0xe0(224) */
    47f0:	95 5a       	P2 = P5 + P2;
    47f2:	f0 b1       	[SP + 0x1c] = R0;
    47f4:	30 b2       	[SP + 0x20] = R0;
    47f6:	72 bd       	[SP + 0x14] = P2;
    47f8:	44 30       	R0 = P4;
    47fa:	4b 30       	R1 = P3;
    47fc:	ff e3 02 dc 	CALL 0x0 <_FlushAddressCacheRecords>;
    4800:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    4802:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0xe0 */
    4806:	28 e6 40 00 	[P5 + 0x100] = R0;
    480a:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    480e:	10 91       	R0 = [P2];
    4810:	2f e6 41 00 	[P5 + 0x104] = R7;
    4814:	08 4f       	R0 <<= 0x1;
    4816:	28 b1       	[P5 + 0x10] = R0;
    4818:	20 e4 37 00 	R0 = [P4 + 0xdc];
    481c:	e8 b0       	[P5 + 0xc] = R0;
    481e:	44 30       	R0 = P4;
    4820:	4d 30       	R1 = P5;
    4822:	ff e3 ef db 	CALL 0x0 <_FlushAddressCacheRecords>;
    4826:	c6 6d       	SP += 0x38;		/* ( 56) */
    4828:	27 01       	RETS = [SP++];
    482a:	bb 05       	(R7:7, P5:3) = [SP++];
    482c:	10 00       	RTS;
	...

00004830 <_LLQGotZoneData>:
_LLQGotZoneData():
    4830:	ec 05       	[--SP] = (R7:5, P5:4);
    4832:	22 32       	P4 = R2;
    4834:	29 30       	R5 = R1;
    4836:	67 01       	[--SP] = RETS;
    4838:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x24f0(9456) */
    483c:	46 6f       	SP += -0x18;		/* (-24) */
    483e:	25 e5 ca 00 	P5 = [P4 + 0x328];
    4842:	38 30       	R7 = R0;
    4844:	01 e1 d0 00 	R1.L = 0xd0;		/* (208)	R1=0xd0(208) */
    4848:	ff e3 dc db 	CALL 0x0 <_FlushAddressCacheRecords>;
    484c:	2a e1 e0 00 	P2 = 0xe0 (X);		/*		P2=0xe0(224) */
    4850:	95 5a       	P2 = P5 + P2;
    4852:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xd0(208) */
    4856:	42 30       	R0 = P2;
    4858:	01 e1 00 00 	R1.L = 0x0;		/* (  0)	R1=0x0 <_FlushAddressCacheRecords>(  0) */
    485c:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
    485e:	ff e3 d1 db 	CALL 0x0 <_FlushAddressCacheRecords>;
    4862:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0xe0 */
    4866:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    486a:	10 95       	R0 = W[P2] (Z);
    486c:	68 e6 7a 00 	W[P5 + 0xf4] = R0;
    4870:	05 0c       	CC = R5 == 0x0;
    4872:	61 14       	IF !CC JUMP 0x4934 <_LLQGotZoneData+0x104> (BP);
    4874:	60 e4 85 01 	R0 = W[P4 + 0x30a] (Z);
    4878:	00 0c       	CC = R0 == 0x0;
    487a:	5d 1c       	IF CC JUMP 0x4934 <_LLQGotZoneData+0x104> (BP);
    487c:	20 e4 c3 00 	R0 = [P4 + 0x30c];
    4880:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
    4882:	08 08       	CC = R0 == R1;
    4884:	04 14       	IF !CC JUMP 0x488c <_LLQGotZoneData+0x5c> (BP);
    4886:	20 e4 c4 00 	R0 = [P4 + 0x310];
    488a:	0f 20       	JUMP.S 0x48a8 <_LLQGotZoneData+0x78>;
    488c:	31 60       	R1 = 0x6 (X);		/*		R1=0x6(  6) */
    488e:	08 08       	CC = R0 == R1;
    4890:	0e 14       	IF !CC JUMP 0x48ac <_LLQGotZoneData+0x7c> (BP);
    4892:	21 e4 c5 00 	R1 = [P4 + 0x314];
    4896:	20 e4 c4 00 	R0 = [P4 + 0x310];
    489a:	01 56       	R0 = R1 | R0;
    489c:	21 e4 c6 00 	R1 = [P4 + 0x318];
    48a0:	08 56       	R0 = R0 | R1;
    48a2:	21 e4 c7 00 	R1 = [P4 + 0x31c];
    48a6:	08 56       	R0 = R0 | R1;
    48a8:	00 0c       	CC = R0 == 0x0;
    48aa:	45 1c       	IF CC JUMP 0x4934 <_LLQGotZoneData+0x104> (BP);
    48ac:	00 00       	NOP;
    48ae:	a0 e4 0a 02 	R0 = B[P4 + 0x20a] (Z);
    48b2:	00 0c       	CC = R0 == 0x0;
    48b4:	40 1c       	IF CC JUMP 0x4934 <_LLQGotZoneData+0x104> (BP);
    48b6:	2a e1 e0 00 	P2 = 0xe0 (X);		/*		P2=0xe0(224) */
    48ba:	95 5a       	P2 = P5 + P2;
    48bc:	42 30       	R0 = P2;
    48be:	2a e1 0c 03 	P2 = 0x30c (X);		/*		P2=0x30c(780) */
    48c2:	94 5a       	P2 = P4 + P2;
    48c4:	4a 30       	R1 = P2;
    48c6:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
    48c8:	ff e3 9c db 	CALL 0x0 <_FlushAddressCacheRecords>;
    48cc:	6a af       	P2 = [P5 + 0x34];
    48ce:	60 e5 85 01 	R0 = W[P4 + 0x30a] (X);
    48d2:	68 e6 7a 00 	W[P5 + 0xf4] = R0;
    48d6:	42 0c       	CC = P2 == 0x0;
    48d8:	04 1c       	IF CC JUMP 0x48e0 <_LLQGotZoneData+0xb0> (BP);
    48da:	90 a0       	R0 = [P2 + 0x8];
    48dc:	00 0c       	CC = R0 == 0x0;
    48de:	23 14       	IF !CC JUMP 0x4924 <_LLQGotZoneData+0xf4> (BP);
    48e0:	00 00       	NOP;
    48e2:	2e e4 37 00 	R6 = [P5 + 0xdc];
    48e6:	06 0c       	CC = R6 == 0x0;
    48e8:	1e 18       	IF CC JUMP 0x4924 <_LLQGotZoneData+0xf4>;
    48ea:	44 30       	R0 = P4;
    48ec:	06 08       	CC = R6 == R0;
    48ee:	13 1c       	IF CC JUMP 0x4914 <_LLQGotZoneData+0xe4> (BP);
    48f0:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    48f4:	ff e3 86 db 	CALL 0x0 <_FlushAddressCacheRecords>;
    48f8:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    48fc:	95 5a       	P2 = P5 + P2;
    48fe:	70 b1       	[SP + 0x14] = R0;
    4900:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x6(  6) */
    4904:	f4 bc       	[SP + 0xc] = P4;
    4906:	32 bd       	[SP + 0x10] = P2;
    4908:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    490a:	01 e1 14 25 	R1.L = 0x2514;		/* (9492)	R1=0x2514(9492) */
    490e:	16 30       	R2 = R6;
    4910:	ff e3 78 db 	CALL 0x0 <_FlushAddressCacheRecords>;
    4914:	07 30       	R0 = R7;
    4916:	29 e4 37 00 	R1 = [P5 + 0xdc];
    491a:	ff e3 73 db 	CALL 0x0 <_FlushAddressCacheRecords>;
    491e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4920:	28 e6 37 00 	[P5 + 0xdc] = R0;
    4924:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4926:	68 e6 86 00 	W[P5 + 0x10c] = R0;
    492a:	07 30       	R0 = R7;
    492c:	4d 30       	R1 = P5;
    492e:	ff e3 d7 fd 	CALL 0x44dc <_startLLQHandshake>;
    4932:	36 20       	JUMP.S 0x499e <_LLQGotZoneData+0x16e>;
    4934:	00 00       	NOP;
    4936:	2e e4 37 00 	R6 = [P5 + 0xdc];
    493a:	06 0c       	CC = R6 == 0x0;
    493c:	1e 18       	IF CC JUMP 0x4978 <_LLQGotZoneData+0x148>;
    493e:	4c 30       	R1 = P4;
    4940:	0e 08       	CC = R6 == R1;
    4942:	13 1c       	IF CC JUMP 0x4968 <_LLQGotZoneData+0x138> (BP);
    4944:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    4948:	ff e3 5c db 	CALL 0x0 <_FlushAddressCacheRecords>;
    494c:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    4950:	95 5a       	P2 = P5 + P2;
    4952:	70 b1       	[SP + 0x14] = R0;
    4954:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2514(9492) */
    4958:	f4 bc       	[SP + 0xc] = P4;
    495a:	32 bd       	[SP + 0x10] = P2;
    495c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    495e:	01 e1 14 25 	R1.L = 0x2514;		/* (9492)	R1=0x2514(9492) */
    4962:	16 30       	R2 = R6;
    4964:	ff e3 4e db 	CALL 0x0 <_FlushAddressCacheRecords>;
    4968:	07 30       	R0 = R7;
    496a:	29 e4 37 00 	R1 = [P5 + 0xdc];
    496e:	ff e3 49 db 	CALL 0x0 <_FlushAddressCacheRecords>;
    4972:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4974:	28 e6 37 00 	[P5 + 0xdc] = R0;
    4978:	07 30       	R0 = R7;
    497a:	4d 30       	R1 = P5;
    497c:	ff e3 4e e0 	CALL 0xa18 <_StartLLQPolling>;
    4980:	f0 63       	R0 = -0x2 (X);		/*		R0=0xfffffffe( -2) */
    4982:	40 e1 fe ff 	R0.H = 0xfffe;		/* ( -2)	R0=0xfffefffe(-65538) */
    4986:	05 08       	CC = R5 == R0;
    4988:	0b 14       	IF !CC JUMP 0x499e <_LLQGotZoneData+0x16e> (BP);
    498a:	20 60       	R0 = 0x4 (X);		/*		R0=0x4(  4) */
    498c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    4990:	28 e6 38 00 	[P5 + 0xe0] = R0;
    4994:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4998:	10 91       	R0 = [P2];
    499a:	28 e6 39 00 	[P5 + 0xe4] = R0;
    499e:	c6 6c       	SP += 0x18;		/* ( 24) */
    49a0:	27 01       	RETS = [SP++];
    49a2:	07 30       	R0 = R7;
    49a4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2514(9492) */
    49a8:	01 e1 d0 00 	R1.L = 0xd0;		/* (208)	R1=0xd0(208) */
    49ac:	ac 05       	(R7:5, P5:4) = [SP++];
    49ae:	ff e2 29 db 	JUMP.L 0x0 <_FlushAddressCacheRecords>;
	...

000049b4 <_IsGetZoneDataQuestion>:
_IsGetZoneDataQuestion():
    49b4:	10 32       	P2 = R0;
    49b6:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x4(  4) */
    49ba:	00 e1 7c 1a 	R0.L = 0x1a7c;		/* (6780)	R0=0x1a7c <_GetZoneData_QuestionCallback>(6780) */
    49be:	11 e4 97 00 	R1 = [P2 + 0x25c];
    49c2:	01 08       	CC = R1 == R0;
    49c4:	00 02       	R0 = CC;
    49c6:	10 00       	RTS;

000049c8 <_GetAuthInfoForQuestion>:
_GetAuthInfoForQuestion():
    49c8:	11 32       	P2 = R1;
    49ca:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xd0(208) */
    49ce:	01 e1 7c 1a 	R1.L = 0x1a7c;		/* (6780)	R1=0x1a7c <_GetZoneData_QuestionCallback>(6780) */
    49d2:	12 e4 97 00 	R2 = [P2 + 0x25c];
    49d6:	0a 08       	CC = R2 == R1;
    49d8:	0c 1c       	IF CC JUMP 0x49f0 <_GetAuthInfoForQuestion+0x28> (BP);
    49da:	51 e4 1a 01 	R1 = W[P2 + 0x234] (Z);
    49de:	32 60       	R2 = 0x6 (X);		/*		R2=0x6(  6) */
    49e0:	11 08       	CC = R1 == R2;
    49e2:	07 18       	IF CC JUMP 0x49f0 <_GetAuthInfoForQuestion+0x28>;
    49e4:	29 e1 34 01 	P1 = 0x134 (X);		/*		P1=0x134(308) */
    49e8:	4a 5a       	P1 = P2 + P1;
    49ea:	49 30       	R1 = P1;
    49ec:	ff e2 38 e7 	JUMP.L 0x185c <_GetAuthInfoForName_internal>;
    49f0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    49f2:	10 00       	RTS;

000049f4 <_mDNS_SetSecretForDomain>:
_mDNS_SetSecretForDomain():
    49f4:	e3 05       	[--SP] = (R7:4, P5:3);
    49f6:	29 32       	P5 = R1;
    49f8:	00 e8 06 00 	LINK 0x18;		/* (24) */
    49fc:	20 32       	P4 = R0;
    49fe:	32 30       	R6 = R2;
    4a00:	35 e4 12 00 	R5 = [SP + 0x48];
    4a04:	37 e4 13 00 	R7 = [SP + 0x4c];
    4a08:	34 e4 14 00 	R4 = [SP + 0x50];
    4a0c:	33 e5 15 00 	P3 = [SP + 0x54];
    4a10:	37 e5 16 00 	FP = [SP + 0x58];
    4a14:	45 0c       	CC = P5 == 0x0;
    4a16:	03 18       	IF CC JUMP 0x4a1c <_mDNS_SetSecretForDomain+0x28>;
    4a18:	07 0c       	CC = R7 == 0x0;
    4a1a:	0b 14       	IF !CC JUMP 0x4a30 <_mDNS_SetSecretForDomain+0x3c> (BP);
    4a1c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1a7c <_GetZoneData_QuestionCallback>(6780) */
    4a20:	f7 b0       	[SP + 0xc] = R7;
    4a22:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4a24:	01 e1 58 25 	R1.L = 0x2558;		/* (9560)	R1=0x2558(9560) */
    4a28:	55 30       	R2 = P5;
    4a2a:	ff e3 eb da 	CALL 0x0 <_FlushAddressCacheRecords>;
    4a2e:	94 20       	JUMP.S 0x4b56 <_mDNS_SetSecretForDomain+0x162>;
    4a30:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4a34:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4a38:	10 91       	R0 = [P2];
    4a3a:	00 0c       	CC = R0 == 0x0;
    4a3c:	16 1c       	IF CC JUMP 0x4a68 <_mDNS_SetSecretForDomain+0x74> (BP);
    4a3e:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_FlushAddressCacheRecords>(  0) */
    4a42:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2558(9560) */
    4a46:	47 0c       	CC = FP == 0x0;
    4a48:	00 e1 08 04 	R0.L = 0x408;		/* (1032)	R0=0x408(1032) */
    4a4c:	01 e1 4c 25 	R1.L = 0x254c;		/* (9548)	R1=0x254c(9548) */
    4a50:	08 07       	IF CC R1 = R0;
    4a52:	47 06       	IF !CC R0 = FP;
    4a54:	31 b1       	[SP + 0x10] = R1;
    4a56:	70 b1       	[SP + 0x14] = R0;
    4a58:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x254c(9548) */
    4a5c:	f5 b0       	[SP + 0xc] = R5;
    4a5e:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    4a60:	01 e1 90 25 	R1.L = 0x2590;		/* (9616)	R1=0x2590(9616) */
    4a64:	ff e3 ce da 	CALL 0x0 <_FlushAddressCacheRecords>;
    4a68:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    4a6c:	af bc       	[P5 + 0x8] = FP;
    4a6e:	4e 50       	R1 = R6 + R1;
    4a70:	06 30       	R0 = R6;
    4a72:	ff e3 c7 da 	CALL 0x0 <_FlushAddressCacheRecords>;
    4a76:	c2 42       	R2 = R0.L (Z);
    4a78:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    4a7c:	02 0a       	CC = R2 <= R0 (IU);
    4a7e:	09 14       	IF !CC JUMP 0x4a90 <_mDNS_SetSecretForDomain+0x9c> (BP);
    4a80:	2a e1 8c 11 	P2 = 0x118c (X);		/*		P2=0x118c(4492) */
    4a84:	95 5a       	P2 = P5 + P2;
    4a86:	42 30       	R0 = P2;
    4a88:	0e 30       	R1 = R6;
    4a8a:	ff e3 bb da 	CALL 0x0 <_FlushAddressCacheRecords>;
    4a8e:	04 20       	JUMP.S 0x4a96 <_mDNS_SetSecretForDomain+0xa2>;
    4a90:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4a92:	a8 e6 8c 11 	B[P5 + 0x118c] = R0;
    4a96:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    4a9a:	4d 50       	R1 = R5 + R1;
    4a9c:	05 30       	R0 = R5;
    4a9e:	ff e3 b1 da 	CALL 0x0 <_FlushAddressCacheRecords>;
    4aa2:	c2 42       	R2 = R0.L (Z);
    4aa4:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    4aa8:	02 0a       	CC = R2 <= R0 (IU);
    4aaa:	09 14       	IF !CC JUMP 0x4abc <_mDNS_SetSecretForDomain+0xc8> (BP);
    4aac:	2a e1 8c 12 	P2 = 0x128c (X);		/*		P2=0x128c(4748) */
    4ab0:	95 5a       	P2 = P5 + P2;
    4ab2:	42 30       	R0 = P2;
    4ab4:	0d 30       	R1 = R5;
    4ab6:	ff e3 a5 da 	CALL 0x0 <_FlushAddressCacheRecords>;
    4aba:	04 20       	JUMP.S 0x4ac2 <_mDNS_SetSecretForDomain+0xce>;
    4abc:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4abe:	a8 e6 8c 12 	B[P5 + 0x128c] = R0;
    4ac2:	04 0c       	CC = R4 == 0x0;
    4ac4:	14 18       	IF CC JUMP 0x4aec <_mDNS_SetSecretForDomain+0xf8>;
    4ac6:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    4aca:	4c 50       	R1 = R4 + R1;
    4acc:	04 30       	R0 = R4;
    4ace:	ff e3 99 da 	CALL 0x0 <_FlushAddressCacheRecords>;
    4ad2:	c2 42       	R2 = R0.L (Z);
    4ad4:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    4ad8:	02 0a       	CC = R2 <= R0 (IU);
    4ada:	09 14       	IF !CC JUMP 0x4aec <_mDNS_SetSecretForDomain+0xf8> (BP);
    4adc:	2a e1 8c 13 	P2 = 0x138c (X);		/*		P2=0x138c(5004) */
    4ae0:	95 5a       	P2 = P5 + P2;
    4ae2:	42 30       	R0 = P2;
    4ae4:	0c 30       	R1 = R4;
    4ae6:	ff e3 8d da 	CALL 0x0 <_FlushAddressCacheRecords>;
    4aea:	04 20       	JUMP.S 0x4af2 <_mDNS_SetSecretForDomain+0xfe>;
    4aec:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4aee:	a8 e6 8c 13 	B[P5 + 0x138c] = R0;
    4af2:	43 0c       	CC = P3 == 0x0;
    4af4:	03 1c       	IF CC JUMP 0x4afa <_mDNS_SetSecretForDomain+0x106> (BP);
    4af6:	18 95       	R0 = W[P3] (Z);
    4af8:	06 20       	JUMP.S 0x4b04 <_mDNS_SetSecretForDomain+0x110>;
    4afa:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x138c */
    4afe:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4b02:	10 95       	R0 = W[P2] (Z);
    4b04:	2a e1 8e 14 	P2 = 0x148e (X);		/*		P2=0x148e(5262) */
    4b08:	68 e6 46 0a 	W[P5 + 0x148c] = R0;
    4b0c:	95 5a       	P2 = P5 + P2;
    4b0e:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x6(  6) */
    4b12:	42 30       	R0 = P2;
    4b14:	01 61       	R1 = 0x20 (X);		/*		R1=0x20( 32) */
    4b16:	02 e1 c4 25 	R2.L = 0x25c4;		/* (9668)	R2=0x25c4(9668) */
    4b1a:	f7 b0       	[SP + 0xc] = R7;
    4b1c:	ff e3 72 da 	CALL 0x0 <_FlushAddressCacheRecords>;
    4b20:	45 30       	R0 = P5;
    4b22:	0f 30       	R1 = R7;
    4b24:	ff e3 6e da 	CALL 0x0 <_FlushAddressCacheRecords>;
    4b28:	80 0c       	CC = R0 < 0x0;
    4b2a:	1a 14       	IF !CC JUMP 0x4b5e <_mDNS_SetSecretForDomain+0x16a> (BP);
    4b2c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x148e */
    4b30:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4b34:	10 91       	R0 = [P2];
    4b36:	00 0c       	CC = R0 == 0x0;
    4b38:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_FlushAddressCacheRecords>(  0) */
    4b3c:	00 e1 08 04 	R0.L = 0x408;		/* (1032)	R0=0x408(1032) */
    4b40:	38 07       	IF CC R7 = R0;
    4b42:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x20( 32) */
    4b46:	f5 b0       	[SP + 0xc] = R5;
    4b48:	37 b1       	[SP + 0x10] = R7;
    4b4a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4b4c:	01 e1 c8 25 	R1.L = 0x25c8;		/* (9672)	R1=0x25c8(9672) */
    4b50:	16 30       	R2 = R6;
    4b52:	ff e3 57 da 	CALL 0x0 <_FlushAddressCacheRecords>;
    4b56:	20 e1 ff bf 	R0 = -0x4001 (X);		/*		R0=0xffffbfff(-16385) */
    4b5a:	10 4f       	R0 <<= 0x2;
    4b5c:	3e 20       	JUMP.S 0x4bd8 <_mDNS_SetSecretForDomain+0x1e4>;
    4b5e:	29 e1 38 20 	P1 = 0x2038 (X);		/*		P1=0x2038(8248) */
    4b62:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4b64:	4c 5a       	P1 = P4 + P1;
    4b66:	68 b0       	[P5 + 0x4] = R0;
    4b68:	22 e5 0e 08 	P2 = [P4 + 0x2038];
    4b6c:	03 20       	JUMP.S 0x4b72 <_mDNS_SetSecretForDomain+0x17e>;
    4b6e:	4a 32       	P1 = P2;
    4b70:	52 91       	P2 = [P2];
    4b72:	42 0c       	CC = P2 == 0x0;
    4b74:	04 18       	IF CC JUMP 0x4b7c <_mDNS_SetSecretForDomain+0x188>;
    4b76:	6a 08       	CC = P2 == P5;
    4b78:	fb 17       	IF !CC JUMP 0x4b6e <_mDNS_SetSecretForDomain+0x17a> (BP);
    4b7a:	34 20       	JUMP.S 0x4be2 <_mDNS_SetSecretForDomain+0x1ee>;
    4b7c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4b7e:	a8 e6 10 00 	B[P5 + 0x10] = R0;
    4b82:	a8 e6 74 01 	B[P5 + 0x174] = R0;
    4b86:	a8 e6 84 03 	B[P5 + 0x384] = R0;
    4b8a:	a8 e6 f8 06 	B[P5 + 0x6f8] = R0;
    4b8e:	a8 e6 6c 0a 	B[P5 + 0xa6c] = R0;
    4b92:	a8 e6 e0 0d 	B[P5 + 0xde0] = R0;
    4b96:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4b98:	28 e6 62 04 	[P5 + 0x1188] = R0;
    4b9c:	28 93       	[P5] = R0;
    4b9e:	4d 93       	[P1] = P5;
    4ba0:	25 e5 4c 00 	P5 = [P4 + 0x130];
    4ba4:	17 20       	JUMP.S 0x4bd2 <_mDNS_SetSecretForDomain+0x1de>;
    4ba6:	29 e1 8c 11 	P1 = 0x118c (X);		/*		P1=0x118c(4492) */
    4baa:	4a 5a       	P1 = P2 + P1;
    4bac:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x25c8(9672) */
    4bb0:	51 30       	R2 = P1;
    4bb2:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    4bb4:	01 e1 30 26 	R1.L = 0x2630;		/* (9776)	R1=0x2630(9776) */
    4bb8:	ff e3 24 da 	CALL 0x0 <_FlushAddressCacheRecords>;
    4bbc:	1a 20       	JUMP.S 0x4bf0 <_mDNS_SetSecretForDomain+0x1fc>;
    4bbe:	4d 30       	R1 = P5;
    4bc0:	44 30       	R0 = P4;
    4bc2:	ff e3 03 ff 	CALL 0x49c8 <_GetAuthInfoForQuestion>;
    4bc6:	69 a3       	R1 = [P5 + 0x34];
    4bc8:	01 08       	CC = R1 == R0;
    4bca:	02 1c       	IF CC JUMP 0x4bce <_mDNS_SetSecretForDomain+0x1da> (BP);
    4bcc:	68 b3       	[P5 + 0x34] = R0;
    4bce:	00 00       	NOP;
    4bd0:	6d 91       	P5 = [P5];
    4bd2:	45 0c       	CC = P5 == 0x0;
    4bd4:	f5 17       	IF !CC JUMP 0x4bbe <_mDNS_SetSecretForDomain+0x1ca> (BP);
    4bd6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4bd8:	c6 6c       	SP += 0x18;		/* ( 24) */
    4bda:	77 90       	FP = [SP++];
    4bdc:	27 01       	RETS = [SP++];
    4bde:	a3 05       	(R7:4, P5:3) = [SP++];
    4be0:	10 00       	RTS;
    4be2:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x118c */
    4be6:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_FlushAddressCacheRecords> */
    4bea:	08 91       	R0 = [P1];
    4bec:	00 0c       	CC = R0 == 0x0;
    4bee:	dc 13       	IF !CC JUMP 0x4ba6 <_mDNS_SetSecretForDomain+0x1b2>;
    4bf0:	a8 63       	R0 = -0xb (X);		/*		R0=0xfffffff5(-11) */
    4bf2:	40 e1 fe ff 	R0.H = 0xfffe;		/* ( -2)	R0=0xfffefff5(-65547) */
    4bf6:	f1 2f       	JUMP.S 0x4bd8 <_mDNS_SetSecretForDomain+0x1e4>;

00004bf8 <_UpdateAllSRVRecords>:
_UpdateAllSRVRecords():
    4bf8:	c3 04       	[--SP] = (P5:3);
    4bfa:	20 32       	P4 = R0;
    4bfc:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4bfe:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4c02:	67 01       	[--SP] = RETS;
    4c04:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4c08:	20 e6 fc 07 	[P4 + 0x1ff0] = R0;
    4c0c:	10 91       	R0 = [P2];
    4c0e:	a6 6f       	SP += -0xc;		/* (-12) */
    4c10:	00 0c       	CC = R0 == 0x0;
    4c12:	0a 1c       	IF CC JUMP 0x4c26 <_UpdateAllSRVRecords+0x2e> (BP);
    4c14:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2630(9776) */
    4c18:	a2 e4 15 01 	R2 = B[P4 + 0x115] (Z);
    4c1c:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    4c1e:	01 e1 68 26 	R1.L = 0x2668;		/* (9832)	R1=0x2668(9832) */
    4c22:	ff e3 ef d9 	CALL 0x0 <_FlushAddressCacheRecords>;
    4c26:	00 00       	NOP;
    4c28:	22 e5 f5 07 	P2 = [P4 + 0x1fd4];
    4c2c:	42 0c       	CC = P2 == 0x0;
    4c2e:	11 18       	IF CC JUMP 0x4c50 <_UpdateAllSRVRecords+0x58>;
    4c30:	42 30       	R0 = P2;
    4c32:	54 30       	R2 = P4;
    4c34:	ba 65       	R2 += 0x37;		/* ( 55) */
    4c36:	51 a2       	R1 = [P2 + 0x24];
    4c38:	21 64       	R1 += 0x4;		/* (  4) */
    4c3a:	20 64       	R0 += 0x4;		/* (  4) */
    4c3c:	ff e3 e2 d9 	CALL 0x0 <_FlushAddressCacheRecords>;
    4c40:	10 30       	R2 = R0;
    4c42:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2668(9832) */
    4c46:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4c48:	01 e1 80 26 	R1.L = 0x2680;		/* (9856)	R1=0x2680(9856) */
    4c4c:	ff e3 da d9 	CALL 0x0 <_FlushAddressCacheRecords>;
    4c50:	20 e4 f2 07 	R0 = [P4 + 0x1fc8];
    4c54:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x598c */
    4c58:	20 e6 f5 07 	[P4 + 0x1fd4] = R0;
    4c5c:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_FlushAddressCacheRecords> */
    4c60:	1a 20       	JUMP.S 0x4c94 <_UpdateAllSRVRecords+0x9c>;
    4c62:	00 00       	NOP;
    4c64:	28 91       	R0 = [P5];
    4c66:	20 e6 f5 07 	[P4 + 0x1fd4] = R0;
    4c6a:	e9 a1       	R1 = [P5 + 0x1c];
    4c6c:	18 91       	R0 = [P3];
    4c6e:	01 08       	CC = R1 == R0;
    4c70:	12 14       	IF !CC JUMP 0x4c94 <_UpdateAllSRVRecords+0x9c> (BP);
    4c72:	a8 e4 46 00 	R0 = B[P5 + 0x46] (Z);
    4c76:	00 0c       	CC = R0 == 0x0;
    4c78:	0e 14       	IF !CC JUMP 0x4c94 <_UpdateAllSRVRecords+0x9c> (BP);
    4c7a:	28 a2       	R0 = [P5 + 0x20];
    4c7c:	ff e3 c2 d9 	CALL 0x0 <_FlushAddressCacheRecords>;
    4c80:	00 0c       	CC = R0 == 0x0;
    4c82:	09 14       	IF !CC JUMP 0x4c94 <_UpdateAllSRVRecords+0x9c> (BP);
    4c84:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    4c86:	09 61       	R1 = 0x21 (X);		/*		R1=0x21( 33) */
    4c88:	08 08       	CC = R0 == R1;
    4c8a:	05 14       	IF !CC JUMP 0x4c94 <_UpdateAllSRVRecords+0x9c> (BP);
    4c8c:	44 30       	R0 = P4;
    4c8e:	4d 30       	R1 = P5;
    4c90:	ff e3 72 f9 	CALL 0x3f74 <_UpdateOneSRVRecord>;
    4c94:	00 00       	NOP;
    4c96:	25 e5 f5 07 	P5 = [P4 + 0x1fd4];
    4c9a:	45 0c       	CC = P5 == 0x0;
    4c9c:	e3 17       	IF !CC JUMP 0x4c62 <_UpdateAllSRVRecords+0x6a> (BP);
    4c9e:	66 6c       	SP += 0xc;		/* ( 12) */
    4ca0:	27 01       	RETS = [SP++];
    4ca2:	83 04       	(P5:3) = [SP++];
    4ca4:	10 00       	RTS;
	...

00004ca8 <_mDNS_AddDynDNSHostName>:
_mDNS_AddDynDNSHostName():
    4ca8:	e4 05       	[--SP] = (R7:4, P5:4);
    4caa:	20 32       	P4 = R0;
    4cac:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4cb0:	67 01       	[--SP] = RETS;
    4cb2:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4cb6:	a6 6f       	SP += -0xc;		/* (-12) */
    4cb8:	2d e1 04 27 	P5 = 0x2704 (X);		/*		P5=0x2704(9988) */
    4cbc:	10 91       	R0 = [P2];
    4cbe:	39 30       	R7 = R1;
    4cc0:	22 30       	R4 = R2;
    4cc2:	75 a3       	R5 = [SP + 0x34];
    4cc4:	6c 5b       	P5 = P4 + P5;
    4cc6:	00 0c       	CC = R0 == 0x0;
    4cc8:	0d 1c       	IF CC JUMP 0x4ce2 <_mDNS_AddDynDNSHostName+0x3a> (BP);
    4cca:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x21( 33) */
    4cce:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    4cd0:	01 e1 bc 26 	R1.L = 0x26bc;		/* (9916)	R1=0x26bc(9916) */
    4cd4:	17 30       	R2 = R7;
    4cd6:	ff e3 95 d9 	CALL 0x0 <_FlushAddressCacheRecords>;
    4cda:	04 20       	JUMP.S 0x4ce2 <_mDNS_AddDynDNSHostName+0x3a>;
    4cdc:	00 00       	NOP;
    4cde:	6d 91       	P5 = [P5];
    4ce0:	03 20       	JUMP.S 0x4ce6 <_mDNS_AddDynDNSHostName+0x3e>;
    4ce2:	26 e1 40 00 	R6 = 0x40 (X);		/*		R6=0x40( 64) */
    4ce6:	29 91       	R1 = [P5];
    4ce8:	01 0c       	CC = R1 == 0x0;
    4cea:	07 18       	IF CC JUMP 0x4cf8 <_mDNS_AddDynDNSHostName+0x50>;
    4cec:	71 50       	R1 = R1 + R6;
    4cee:	07 30       	R0 = R7;
    4cf0:	ff e3 88 d9 	CALL 0x0 <_FlushAddressCacheRecords>;
    4cf4:	00 0c       	CC = R0 == 0x0;
    4cf6:	f3 1f       	IF CC JUMP 0x4cdc <_mDNS_AddDynDNSHostName+0x34> (BP);
    4cf8:	28 91       	R0 = [P5];
    4cfa:	00 0c       	CC = R0 == 0x0;
    4cfc:	0c 18       	IF CC JUMP 0x4d14 <_mDNS_AddDynDNSHostName+0x6c>;
    4cfe:	66 6c       	SP += 0xc;		/* ( 12) */
    4d00:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x26bc(9916) */
    4d04:	17 30       	R2 = R7;
    4d06:	27 01       	RETS = [SP++];
    4d08:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4d0a:	01 e1 d8 26 	R1.L = 0x26d8;		/* (9944)	R1=0x26d8(9944) */
    4d0e:	a4 05       	(R7:4, P5:4) = [SP++];
    4d10:	ff e2 78 d9 	JUMP.L 0x0 <_FlushAddressCacheRecords>;
    4d14:	20 e1 30 08 	R0 = 0x830 (X);		/*		R0=0x830(2096) */
    4d18:	ff e3 74 d9 	CALL 0x0 <_FlushAddressCacheRecords>;
    4d1c:	28 93       	[P5] = R0;
    4d1e:	00 0c       	CC = R0 == 0x0;
    4d20:	0a 14       	IF !CC JUMP 0x4d34 <_mDNS_AddDynDNSHostName+0x8c> (BP);
    4d22:	66 6c       	SP += 0xc;		/* ( 12) */
    4d24:	27 01       	RETS = [SP++];
    4d26:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x26d8(9944) */
    4d2a:	01 e1 fc 26 	R1.L = 0x26fc;		/* (9980)	R1=0x26fc(9980) */
    4d2e:	a4 05       	(R7:4, P5:4) = [SP++];
    4d30:	ff e2 68 d9 	JUMP.L 0x0 <_FlushAddressCacheRecords>;
    4d34:	21 e1 30 08 	R1 = 0x830 (X);		/*		R1=0x830(2096) */
    4d38:	ff e3 64 d9 	CALL 0x0 <_FlushAddressCacheRecords>;
    4d3c:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    4d40:	4f 50       	R1 = R7 + R1;
    4d42:	07 30       	R0 = R7;
    4d44:	ff e3 5e d9 	CALL 0x0 <_FlushAddressCacheRecords>;
    4d48:	c2 42       	R2 = R0.L (Z);
    4d4a:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    4d4e:	02 0a       	CC = R2 <= R0 (IU);
    4d50:	6a 91       	P2 = [P5];
    4d52:	09 14       	IF !CC JUMP 0x4d64 <_mDNS_AddDynDNSHostName+0xbc> (BP);
    4d54:	29 e1 40 00 	P1 = 0x40 (X);		/*		P1=0x40( 64) */
    4d58:	8a 5a       	P2 = P2 + P1;
    4d5a:	42 30       	R0 = P2;
    4d5c:	0f 30       	R1 = R7;
    4d5e:	ff e3 51 d9 	CALL 0x0 <_FlushAddressCacheRecords>;
    4d62:	04 20       	JUMP.S 0x4d6a <_mDNS_AddDynDNSHostName+0xc2>;
    4d64:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4d66:	90 e6 40 00 	B[P2 + 0x40] = R0;
    4d6a:	6a 91       	P2 = [P5];
    4d6c:	20 60       	R0 = 0x4 (X);		/*		R0=0x4(  4) */
    4d6e:	66 6c       	SP += 0xc;		/* ( 12) */
    4d70:	10 e6 89 00 	[P2 + 0x224] = R0;
    4d74:	10 e6 66 01 	[P2 + 0x598] = R0;
    4d78:	14 e6 0a 02 	[P2 + 0x828] = R4;
    4d7c:	15 e6 0b 02 	[P2 + 0x82c] = R5;
    4d80:	27 01       	RETS = [SP++];
    4d82:	44 30       	R0 = P4;
    4d84:	4a 30       	R1 = P2;
    4d86:	a4 05       	(R7:4, P5:4) = [SP++];
    4d88:	ff e2 cc ea 	JUMP.L 0x2320 <_AdvertiseHostname>;

00004d8c <_mDNS_RemoveDynDNSHostName>:
_mDNS_RemoveDynDNSHostName():
    4d8c:	eb 05       	[--SP] = (R7:5, P5:3);
    4d8e:	18 32       	P3 = R0;
    4d90:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4d94:	67 01       	[--SP] = RETS;
    4d96:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4d9a:	2c e1 04 27 	P4 = 0x2704 (X);		/*		P4=0x2704(9988) */
    4d9e:	10 91       	R0 = [P2];
    4da0:	a6 6f       	SP += -0xc;		/* (-12) */
    4da2:	29 30       	R5 = R1;
    4da4:	23 5b       	P4 = P3 + P4;
    4da6:	00 0c       	CC = R0 == 0x0;
    4da8:	0d 1c       	IF CC JUMP 0x4dc2 <_mDNS_RemoveDynDNSHostName+0x36> (BP);
    4daa:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x100(256) */
    4dae:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    4db0:	01 e1 24 27 	R1.L = 0x2724;		/* (10020)	R1=0x2724 <_mDNS_StartNATOperation>(10020) */
    4db4:	15 30       	R2 = R5;
    4db6:	ff e3 25 d9 	CALL 0x0 <_FlushAddressCacheRecords>;
    4dba:	04 20       	JUMP.S 0x4dc2 <_mDNS_RemoveDynDNSHostName+0x36>;
    4dbc:	00 00       	NOP;
    4dbe:	64 91       	P4 = [P4];
    4dc0:	03 20       	JUMP.S 0x4dc6 <_mDNS_RemoveDynDNSHostName+0x3a>;
    4dc2:	27 e1 40 00 	R7 = 0x40 (X);		/*		R7=0x40( 64) */
    4dc6:	21 91       	R1 = [P4];
    4dc8:	01 0c       	CC = R1 == 0x0;
    4dca:	07 18       	IF CC JUMP 0x4dd8 <_mDNS_RemoveDynDNSHostName+0x4c>;
    4dcc:	79 50       	R1 = R1 + R7;
    4dce:	05 30       	R0 = R5;
    4dd0:	ff e3 18 d9 	CALL 0x0 <_FlushAddressCacheRecords>;
    4dd4:	00 0c       	CC = R0 == 0x0;
    4dd6:	f3 1f       	IF CC JUMP 0x4dbc <_mDNS_RemoveDynDNSHostName+0x30> (BP);
    4dd8:	65 91       	P5 = [P4];
    4dda:	45 0c       	CC = P5 == 0x0;
    4ddc:	0a 14       	IF !CC JUMP 0x4df0 <_mDNS_RemoveDynDNSHostName+0x64> (BP);
    4dde:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2724 <_mDNS_StartNATOperation>(10020) */
    4de2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4de4:	01 e1 44 27 	R1.L = 0x2744;		/* (10052)	R1=0x2744(10052) */
    4de8:	15 30       	R2 = R5;
    4dea:	ff e3 0b d9 	CALL 0x0 <_FlushAddressCacheRecords>;
    4dee:	53 20       	JUMP.S 0x4e94 <_mDNS_RemoveDynDNSHostName+0x108>;
    4df0:	00 00       	NOP;
    4df2:	a8 e4 44 01 	R0 = B[P5 + 0x144] (Z);
    4df6:	00 0c       	CC = R0 == 0x0;
    4df8:	08 1c       	IF CC JUMP 0x4e08 <_mDNS_RemoveDynDNSHostName+0x7c> (BP);
    4dfa:	28 e4 89 00 	R0 = [P5 + 0x224];
    4dfe:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
    4e00:	08 08       	CC = R0 == R1;
    4e02:	07 02       	R7 = CC;
    4e04:	07 4b       	BITTGL (R7, 0x0);		/* bit  0 */
    4e06:	02 20       	JUMP.S 0x4e0a <_mDNS_RemoveDynDNSHostName+0x7e>;
    4e08:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    4e0a:	a8 e4 b8 04 	R0 = B[P5 + 0x4b8] (Z);
    4e0e:	00 0c       	CC = R0 == 0x0;
    4e10:	08 1c       	IF CC JUMP 0x4e20 <_mDNS_RemoveDynDNSHostName+0x94> (BP);
    4e12:	28 e4 66 01 	R0 = [P5 + 0x598];
    4e16:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
    4e18:	08 08       	CC = R0 == R1;
    4e1a:	06 02       	R6 = CC;
    4e1c:	06 4b       	BITTGL (R6, 0x0);		/* bit  0 */
    4e1e:	02 20       	JUMP.S 0x4e22 <_mDNS_RemoveDynDNSHostName+0x96>;
    4e20:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
    4e22:	07 0c       	CC = R7 == 0x0;
    4e24:	10 1c       	IF CC JUMP 0x4e44 <_mDNS_RemoveDynDNSHostName+0xb8> (BP);
    4e26:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4e2a:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4e2e:	10 91       	R0 = [P2];
    4e30:	00 0c       	CC = R0 == 0x0;
    4e32:	09 1c       	IF CC JUMP 0x4e44 <_mDNS_RemoveDynDNSHostName+0xb8> (BP);
    4e34:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4(  4) */
    4e38:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    4e3a:	01 e1 78 27 	R1.L = 0x2778;		/* (10104)	R1=0x2778(10104) */
    4e3e:	15 30       	R2 = R5;
    4e40:	ff e3 e0 d8 	CALL 0x0 <_FlushAddressCacheRecords>;
    4e44:	06 0c       	CC = R6 == 0x0;
    4e46:	10 1c       	IF CC JUMP 0x4e66 <_mDNS_RemoveDynDNSHostName+0xda> (BP);
    4e48:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4e4c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4e50:	10 91       	R0 = [P2];
    4e52:	00 0c       	CC = R0 == 0x0;
    4e54:	09 1c       	IF CC JUMP 0x4e66 <_mDNS_RemoveDynDNSHostName+0xda> (BP);
    4e56:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2778(10104) */
    4e5a:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    4e5c:	01 e1 a4 27 	R1.L = 0x27a4;		/* (10148)	R1=0x27a4(10148) */
    4e60:	15 30       	R2 = R5;
    4e62:	ff e3 cf d8 	CALL 0x0 <_FlushAddressCacheRecords>;
    4e66:	07 0c       	CC = R7 == 0x0;
    4e68:	62 91       	P2 = [P4];
    4e6a:	10 91       	R0 = [P2];
    4e6c:	20 93       	[P4] = R0;
    4e6e:	09 1c       	IF CC JUMP 0x4e80 <_mDNS_RemoveDynDNSHostName+0xf4> (BP);
    4e70:	2a e1 40 01 	P2 = 0x140 (X);		/*		P2=0x140 <_RRAdditionalSize>(320) */
    4e74:	95 5a       	P2 = P5 + P2;
    4e76:	4a 30       	R1 = P2;
    4e78:	43 30       	R0 = P3;
    4e7a:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    4e7c:	ff e3 c2 d8 	CALL 0x0 <_FlushAddressCacheRecords>;
    4e80:	06 0c       	CC = R6 == 0x0;
    4e82:	09 1c       	IF CC JUMP 0x4e94 <_mDNS_RemoveDynDNSHostName+0x108> (BP);
    4e84:	2a e1 b4 04 	P2 = 0x4b4 (X);		/*		P2=0x4b4(1204) */
    4e88:	95 5a       	P2 = P5 + P2;
    4e8a:	4a 30       	R1 = P2;
    4e8c:	43 30       	R0 = P3;
    4e8e:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    4e90:	ff e3 b8 d8 	CALL 0x0 <_FlushAddressCacheRecords>;
    4e94:	00 00       	NOP;
    4e96:	d8 a2       	R0 = [P3 + 0x2c];
    4e98:	00 0c       	CC = R0 == 0x0;
    4e9a:	07 14       	IF !CC JUMP 0x4ea8 <_mDNS_RemoveDynDNSHostName+0x11c> (BP);
    4e9c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x27a4(10148) */
    4ea0:	01 e1 d0 27 	R1.L = 0x27d0;		/* (10192)	R1=0x27d0(10192) */
    4ea4:	ff e3 ae d8 	CALL 0x0 <_FlushAddressCacheRecords>;
    4ea8:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    4eaa:	18 e4 37 00 	R0 = [P3 + 0xdc];
    4eae:	00 0c       	CC = R0 == 0x0;
    4eb0:	66 6c       	SP += 0xc;		/* ( 12) */
    4eb2:	01 07       	IF CC R0 = R1;
    4eb4:	27 01       	RETS = [SP++];
    4eb6:	18 e6 fc 07 	[P3 + 0x1ff0] = R0;
    4eba:	ab 05       	(R7:5, P5:3) = [SP++];
    4ebc:	10 00       	RTS;
	...

00004ec0 <_mDNS_SetPrimaryInterfaceInfo>:
_mDNS_SetPrimaryInterfaceInfo():
    4ec0:	e3 05       	[--SP] = (R7:4, P5:3);
    4ec2:	28 32       	P5 = R0;
    4ec4:	22 32       	P4 = R2;
    4ec6:	00 e8 08 00 	LINK 0x20;		/* (32) */
    4eca:	19 32       	P3 = R1;
    4ecc:	37 e5 14 00 	FP = [SP + 0x50];
    4ed0:	ea a2       	R2 = [P5 + 0x2c];
    4ed2:	28 a3       	R0 = [P5 + 0x30];
    4ed4:	02 08       	CC = R2 == R0;
    4ed6:	09 18       	IF CC JUMP 0x4ee8 <_mDNS_SetPrimaryInterfaceInfo+0x28>;
    4ed8:	f0 b0       	[SP + 0xc] = R0;
    4eda:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1(  1) */
    4ede:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4ee0:	01 e1 44 28 	R1.L = 0x2844;		/* (10308)	R1=0x2844(10308) */
    4ee4:	ff e3 8e d8 	CALL 0x0 <_FlushAddressCacheRecords>;
    4ee8:	43 0c       	CC = P3 == 0x0;
    4eea:	0c 1c       	IF CC JUMP 0x4f02 <_mDNS_SetPrimaryInterfaceInfo+0x42> (BP);
    4eec:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
    4eee:	18 91       	R0 = [P3];
    4ef0:	08 08       	CC = R0 == R1;
    4ef2:	08 1c       	IF CC JUMP 0x4f02 <_mDNS_SetPrimaryInterfaceInfo+0x42> (BP);
    4ef4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4(  4) */
    4ef8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4efa:	01 e1 8c 28 	R1.L = 0x288c;		/* (10380)	R1=0x288c(10380) */
    4efe:	53 30       	R2 = P3;
    4f00:	0d 20       	JUMP.S 0x4f1a <_mDNS_SetPrimaryInterfaceInfo+0x5a>;
    4f02:	44 0c       	CC = P4 == 0x0;
    4f04:	11 1c       	IF CC JUMP 0x4f26 <_mDNS_SetPrimaryInterfaceInfo+0x66> (BP);
    4f06:	32 60       	R2 = 0x6 (X);		/*		R2=0x6(  6) */
    4f08:	20 91       	R0 = [P4];
    4f0a:	10 08       	CC = R0 == R2;
    4f0c:	0d 1c       	IF CC JUMP 0x4f26 <_mDNS_SetPrimaryInterfaceInfo+0x66> (BP);
    4f0e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x288c(10380) */
    4f12:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4f14:	01 e1 d8 28 	R1.L = 0x28d8;		/* (10456)	R1=0x28d8(10456) */
    4f18:	54 30       	R2 = P4;
    4f1a:	06 6d       	SP += 0x20;		/* ( 32) */
    4f1c:	77 90       	FP = [SP++];
    4f1e:	27 01       	RETS = [SP++];
    4f20:	a3 05       	(R7:4, P5:3) = [SP++];
    4f22:	ff e2 6f d8 	JUMP.L 0x0 <_FlushAddressCacheRecords>;
    4f26:	47 0c       	CC = FP == 0x0;
    4f28:	0c 1c       	IF CC JUMP 0x4f40 <_mDNS_SetPrimaryInterfaceInfo+0x80> (BP);
    4f2a:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
    4f2c:	38 91       	R0 = [FP];
    4f2e:	08 08       	CC = R0 == R1;
    4f30:	08 1c       	IF CC JUMP 0x4f40 <_mDNS_SetPrimaryInterfaceInfo+0x80> (BP);
    4f32:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4(  4) */
    4f36:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    4f38:	01 e1 24 29 	R1.L = 0x2924;		/* (10532)	R1=0x2924(10532) */
    4f3c:	57 30       	R2 = FP;
    4f3e:	ee 2f       	JUMP.S 0x4f1a <_mDNS_SetPrimaryInterfaceInfo+0x5a>;
    4f40:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2924(10532) */
    4f44:	01 e1 f8 00 	R1.L = 0xf8;		/* (248)	R1=0xf8(248) */
    4f48:	45 30       	R0 = P5;
    4f4a:	ff e3 5b d8 	CALL 0x0 <_FlushAddressCacheRecords>;
    4f4e:	29 e4 05 08 	R1 = [P5 + 0x2014];
    4f52:	43 0c       	CC = P3 == 0x0;
    4f54:	03 1c       	IF CC JUMP 0x4f5a <_mDNS_SetPrimaryInterfaceInfo+0x9a> (BP);
    4f56:	58 a0       	R0 = [P3 + 0x4];
    4f58:	06 20       	JUMP.S 0x4f64 <_mDNS_SetPrimaryInterfaceInfo+0xa4>;
    4f5a:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x4b4 */
    4f5e:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4f62:	10 91       	R0 = [P2];
    4f64:	01 08       	CC = R1 == R0;
    4f66:	06 02       	R6 = CC;
    4f68:	06 4b       	BITTGL (R6, 0x0);		/* bit  0 */
    4f6a:	29 e4 0a 08 	R1 = [P5 + 0x2028];
    4f6e:	44 0c       	CC = P4 == 0x0;
    4f70:	03 1c       	IF CC JUMP 0x4f76 <_mDNS_SetPrimaryInterfaceInfo+0xb6> (BP);
    4f72:	60 a0       	R0 = [P4 + 0x4];
    4f74:	06 20       	JUMP.S 0x4f80 <_mDNS_SetPrimaryInterfaceInfo+0xc0>;
    4f76:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4f7a:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4f7e:	10 91       	R0 = [P2];
    4f80:	01 08       	CC = R1 == R0;
    4f82:	2a 14       	IF !CC JUMP 0x4fd6 <_mDNS_SetPrimaryInterfaceInfo+0x116> (BP);
    4f84:	29 e4 0b 08 	R1 = [P5 + 0x202c];
    4f88:	44 0c       	CC = P4 == 0x0;
    4f8a:	03 1c       	IF CC JUMP 0x4f90 <_mDNS_SetPrimaryInterfaceInfo+0xd0> (BP);
    4f8c:	a0 a0       	R0 = [P4 + 0x8];
    4f8e:	06 20       	JUMP.S 0x4f9a <_mDNS_SetPrimaryInterfaceInfo+0xda>;
    4f90:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4f94:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4f98:	50 a0       	R0 = [P2 + 0x4];
    4f9a:	01 08       	CC = R1 == R0;
    4f9c:	1d 14       	IF !CC JUMP 0x4fd6 <_mDNS_SetPrimaryInterfaceInfo+0x116> (BP);
    4f9e:	29 e4 0c 08 	R1 = [P5 + 0x2030];
    4fa2:	44 0c       	CC = P4 == 0x0;
    4fa4:	03 1c       	IF CC JUMP 0x4faa <_mDNS_SetPrimaryInterfaceInfo+0xea> (BP);
    4fa6:	e0 a0       	R0 = [P4 + 0xc];
    4fa8:	06 20       	JUMP.S 0x4fb4 <_mDNS_SetPrimaryInterfaceInfo+0xf4>;
    4faa:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4fae:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4fb2:	90 a0       	R0 = [P2 + 0x8];
    4fb4:	01 08       	CC = R1 == R0;
    4fb6:	10 14       	IF !CC JUMP 0x4fd6 <_mDNS_SetPrimaryInterfaceInfo+0x116> (BP);
    4fb8:	29 e4 0d 08 	R1 = [P5 + 0x2034];
    4fbc:	44 0c       	CC = P4 == 0x0;
    4fbe:	03 1c       	IF CC JUMP 0x4fc4 <_mDNS_SetPrimaryInterfaceInfo+0x104> (BP);
    4fc0:	20 a1       	R0 = [P4 + 0x10];
    4fc2:	06 20       	JUMP.S 0x4fce <_mDNS_SetPrimaryInterfaceInfo+0x10e>;
    4fc4:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4fc8:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4fcc:	d0 a0       	R0 = [P2 + 0xc];
    4fce:	01 08       	CC = R1 == R0;
    4fd0:	07 02       	R7 = CC;
    4fd2:	07 4b       	BITTGL (R7, 0x0);		/* bit  0 */
    4fd4:	02 20       	JUMP.S 0x4fd8 <_mDNS_SetPrimaryInterfaceInfo+0x118>;
    4fd6:	0f 60       	R7 = 0x1 (X);		/*		R7=0x1(  1) */
    4fd8:	29 e4 00 08 	R1 = [P5 + 0x2000];
    4fdc:	47 0c       	CC = FP == 0x0;
    4fde:	03 1c       	IF CC JUMP 0x4fe4 <_mDNS_SetPrimaryInterfaceInfo+0x124> (BP);
    4fe0:	78 a0       	R0 = [FP + 0x4];
    4fe2:	06 20       	JUMP.S 0x4fee <_mDNS_SetPrimaryInterfaceInfo+0x12e>;
    4fe4:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4fe8:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    4fec:	10 91       	R0 = [P2];
    4fee:	01 08       	CC = R1 == R0;
    4ff0:	05 02       	R5 = CC;
    4ff2:	05 4b       	BITTGL (R5, 0x0);		/* bit  0 */
    4ff4:	43 0c       	CC = P3 == 0x0;
    4ff6:	0a 18       	IF CC JUMP 0x500a <_mDNS_SetPrimaryInterfaceInfo+0x14a>;
    4ff8:	2a e1 10 20 	P2 = 0x2010 (X);		/*		P2=0x2010(8208) */
    4ffc:	95 5a       	P2 = P5 + P2;
    4ffe:	42 30       	R0 = P2;
    5000:	4b 30       	R1 = P3;
    5002:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
    5004:	ff e3 fe d7 	CALL 0x0 <_FlushAddressCacheRecords>;
    5008:	08 20       	JUMP.S 0x5018 <_mDNS_SetPrimaryInterfaceInfo+0x158>;
    500a:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x2010 */
    500e:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    5012:	10 91       	R0 = [P2];
    5014:	28 e6 05 08 	[P5 + 0x2014] = R0;
    5018:	44 0c       	CC = P4 == 0x0;
    501a:	0a 18       	IF CC JUMP 0x502e <_mDNS_SetPrimaryInterfaceInfo+0x16e>;
    501c:	2a e1 24 20 	P2 = 0x2024 (X);		/*		P2=0x2024(8228) */
    5020:	95 5a       	P2 = P5 + P2;
    5022:	42 30       	R0 = P2;
    5024:	4c 30       	R1 = P4;
    5026:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
    5028:	ff e3 ec d7 	CALL 0x0 <_FlushAddressCacheRecords>;
    502c:	10 20       	JUMP.S 0x504c <_mDNS_SetPrimaryInterfaceInfo+0x18c>;
    502e:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x40 */
    5032:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_FlushAddressCacheRecords> */
    5036:	2a e1 28 20 	P2 = 0x2028 (X);		/*		P2=0x2028(8232) */
    503a:	95 5a       	P2 = P5 + P2;
    503c:	08 91       	R0 = [P1];
    503e:	10 92       	[P2++] = R0;
    5040:	48 a0       	R0 = [P1 + 0x4];
    5042:	10 92       	[P2++] = R0;
    5044:	88 a0       	R0 = [P1 + 0x8];
    5046:	10 92       	[P2++] = R0;
    5048:	c8 a0       	R0 = [P1 + 0xc];
    504a:	10 93       	[P2] = R0;
    504c:	47 0c       	CC = FP == 0x0;
    504e:	0a 18       	IF CC JUMP 0x5062 <_mDNS_SetPrimaryInterfaceInfo+0x1a2>;
    5050:	2a e1 fc 1f 	P2 = 0x1ffc (X);		/*		P2=0x1ffc(8188) */
    5054:	95 5a       	P2 = P5 + P2;
    5056:	42 30       	R0 = P2;
    5058:	4f 30       	R1 = FP;
    505a:	a2 60       	R2 = 0x14 (X);		/*		R2=0x14( 20) */
    505c:	ff e3 d2 d7 	CALL 0x0 <_FlushAddressCacheRecords>;
    5060:	08 20       	JUMP.S 0x5070 <_mDNS_SetPrimaryInterfaceInfo+0x1b0>;
    5062:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x1ffc */
    5066:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    506a:	10 91       	R0 = [P2];
    506c:	28 e6 00 08 	[P5 + 0x2000] = R0;
    5070:	06 0c       	CC = R6 == 0x0;
    5072:	05 14       	IF !CC JUMP 0x507c <_mDNS_SetPrimaryInterfaceInfo+0x1bc> (BP);
    5074:	05 0c       	CC = R5 == 0x0;
    5076:	03 14       	IF !CC JUMP 0x507c <_mDNS_SetPrimaryInterfaceInfo+0x1bc> (BP);
    5078:	07 0c       	CC = R7 == 0x0;
    507a:	06 1d       	IF CC JUMP 0x5286 <_mDNS_SetPrimaryInterfaceInfo+0x3c6> (BP);
    507c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    5080:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    5084:	10 91       	R0 = [P2];
    5086:	00 0c       	CC = R0 == 0x0;
    5088:	23 1c       	IF CC JUMP 0x50ce <_mDNS_SetPrimaryInterfaceInfo+0x20e> (BP);
    508a:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_FlushAddressCacheRecords>(  0) */
    508e:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x14( 20) */
    5092:	00 e1 08 04 	R0.L = 0x408;		/* (1032)	R0=0x408(1032) */
    5096:	06 0c       	CC = R6 == 0x0;
    5098:	02 e1 00 28 	R2.L = 0x2800;		/* (10240)	R2=0x2800(10240) */
    509c:	10 07       	IF CC R2 = R0;
    509e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xf8(248) */
    50a2:	05 0c       	CC = R5 == 0x0;
    50a4:	01 e1 0c 28 	R1.L = 0x280c;		/* (10252)	R1=0x280c(10252) */
    50a8:	08 07       	IF CC R1 = R0;
    50aa:	43 e1 00 00 	R3.H = 0x0;		/* (  0)	R3=0x0 <_FlushAddressCacheRecords>(  0) */
    50ae:	07 0c       	CC = R7 == 0x0;
    50b0:	03 e1 1c 28 	R3.L = 0x281c;		/* (10268)	R3=0x281c(10268) */
    50b4:	03 06       	IF !CC R0 = R3;
    50b6:	f1 b0       	[SP + 0xc] = R1;
    50b8:	30 b1       	[SP + 0x10] = R0;
    50ba:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x280c(10252) */
    50be:	73 bd       	[SP + 0x14] = P3;
    50c0:	b4 bd       	[SP + 0x18] = P4;
    50c2:	f7 bd       	[SP + 0x1c] = FP;
    50c4:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    50c6:	01 e1 68 29 	R1.L = 0x2968;		/* (10600)	R1=0x2968(10600) */
    50ca:	ff e3 9b d7 	CALL 0x0 <_FlushAddressCacheRecords>;
    50ce:	4f e1 00 00 	FP.H = 0x0;		/* (  0)	FP=0x203c */
    50d2:	7d 30       	R7 = P5;
    50d4:	2c e5 c1 09 	P4 = [P5 + 0x2704];
    50d8:	0f e1 00 00 	FP.L = 0x0;		/* (  0)	FP=0x0 <_FlushAddressCacheRecords> */
    50dc:	24 e1 40 00 	R4 = 0x40 (X);		/*		R4=0x40( 64) */
    50e0:	bf 65       	R7 += 0x37;		/* ( 55) */
    50e2:	71 20       	JUMP.S 0x51c4 <_mDNS_SetPrimaryInterfaceInfo+0x304>;
    50e4:	38 91       	R0 = [FP];
    50e6:	00 0c       	CC = R0 == 0x0;
    50e8:	0a 1c       	IF CC JUMP 0x50fc <_mDNS_SetPrimaryInterfaceInfo+0x23c> (BP);
    50ea:	44 30       	R0 = P4;
    50ec:	a0 50       	R2 = R0 + R4;
    50ee:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2968(10600) */
    50f2:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    50f4:	01 e1 98 29 	R1.L = 0x2998;		/* (10648)	R1=0x2998(10648) */
    50f8:	ff e3 84 d7 	CALL 0x0 <_FlushAddressCacheRecords>;
    50fc:	00 00       	NOP;
    50fe:	a0 e4 44 01 	R0 = B[P4 + 0x144] (Z);
    5102:	08 0e       	CC = R0 <= 0x1 (IU);
    5104:	24 1c       	IF CC JUMP 0x514c <_mDNS_SetPrimaryInterfaceInfo+0x28c> (BP);
    5106:	22 e5 59 00 	P2 = [P4 + 0x164];
    510a:	28 e4 05 08 	R0 = [P5 + 0x2014];
    510e:	51 a0       	R1 = [P2 + 0x4];
    5110:	01 08       	CC = R1 == R0;
    5112:	1d 18       	IF CC JUMP 0x514c <_mDNS_SetPrimaryInterfaceInfo+0x28c>;
    5114:	38 91       	R0 = [FP];
    5116:	00 0c       	CC = R0 == 0x0;
    5118:	12 1c       	IF CC JUMP 0x513c <_mDNS_SetPrimaryInterfaceInfo+0x27c> (BP);
    511a:	4c 30       	R1 = P4;
    511c:	22 e1 44 01 	R2 = 0x144 (X);		/*		R2=0x144(324) */
    5120:	11 50       	R0 = R1 + R2;
    5122:	4a 30       	R1 = P2;
    5124:	21 64       	R1 += 0x4;		/* (  4) */
    5126:	17 30       	R2 = R7;
    5128:	ff e3 6c d7 	CALL 0x0 <_FlushAddressCacheRecords>;
    512c:	10 30       	R2 = R0;
    512e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2998(10648) */
    5132:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    5134:	01 e1 e0 29 	R1.L = 0x29e0;		/* (10720)	R1=0x29e0(10720) */
    5138:	ff e3 64 d7 	CALL 0x0 <_FlushAddressCacheRecords>;
    513c:	44 30       	R0 = P4;
    513e:	22 e1 40 01 	R2 = 0x140 (X);		/*		R2=0x140 <_RRAdditionalSize>(320) */
    5142:	50 50       	R1 = R0 + R2;
    5144:	45 30       	R0 = P5;
    5146:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    5148:	ff e3 5c d7 	CALL 0x0 <_FlushAddressCacheRecords>;
    514c:	00 00       	NOP;
    514e:	a0 e4 b8 04 	R0 = B[P4 + 0x4b8] (Z);
    5152:	08 0e       	CC = R0 <= 0x1 (IU);
    5154:	33 1c       	IF CC JUMP 0x51ba <_mDNS_SetPrimaryInterfaceInfo+0x2fa> (BP);
    5156:	22 e5 36 01 	P2 = [P4 + 0x4d8];
    515a:	28 e4 0a 08 	R0 = [P5 + 0x2028];
    515e:	51 a0       	R1 = [P2 + 0x4];
    5160:	01 08       	CC = R1 == R0;
    5162:	10 14       	IF !CC JUMP 0x5182 <_mDNS_SetPrimaryInterfaceInfo+0x2c2> (BP);
    5164:	91 a0       	R1 = [P2 + 0x8];
    5166:	28 e4 0b 08 	R0 = [P5 + 0x202c];
    516a:	01 08       	CC = R1 == R0;
    516c:	0b 14       	IF !CC JUMP 0x5182 <_mDNS_SetPrimaryInterfaceInfo+0x2c2> (BP);
    516e:	d1 a0       	R1 = [P2 + 0xc];
    5170:	28 e4 0c 08 	R0 = [P5 + 0x2030];
    5174:	01 08       	CC = R1 == R0;
    5176:	06 14       	IF !CC JUMP 0x5182 <_mDNS_SetPrimaryInterfaceInfo+0x2c2> (BP);
    5178:	11 a1       	R1 = [P2 + 0x10];
    517a:	28 e4 0d 08 	R0 = [P5 + 0x2034];
    517e:	01 08       	CC = R1 == R0;
    5180:	1d 18       	IF CC JUMP 0x51ba <_mDNS_SetPrimaryInterfaceInfo+0x2fa>;
    5182:	38 91       	R0 = [FP];
    5184:	00 0c       	CC = R0 == 0x0;
    5186:	12 1c       	IF CC JUMP 0x51aa <_mDNS_SetPrimaryInterfaceInfo+0x2ea> (BP);
    5188:	4c 30       	R1 = P4;
    518a:	22 e1 b8 04 	R2 = 0x4b8 (X);		/*		R2=0x4b8(1208) */
    518e:	11 50       	R0 = R1 + R2;
    5190:	4a 30       	R1 = P2;
    5192:	21 64       	R1 += 0x4;		/* (  4) */
    5194:	17 30       	R2 = R7;
    5196:	ff e3 35 d7 	CALL 0x0 <_FlushAddressCacheRecords>;
    519a:	10 30       	R2 = R0;
    519c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x29e0(10720) */
    51a0:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    51a2:	01 e1 e0 29 	R1.L = 0x29e0;		/* (10720)	R1=0x29e0(10720) */
    51a6:	ff e3 2d d7 	CALL 0x0 <_FlushAddressCacheRecords>;
    51aa:	44 30       	R0 = P4;
    51ac:	22 e1 b4 04 	R2 = 0x4b4 (X);		/*		R2=0x4b4(1204) */
    51b0:	50 50       	R1 = R0 + R2;
    51b2:	45 30       	R0 = P5;
    51b4:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    51b6:	ff e3 25 d7 	CALL 0x0 <_FlushAddressCacheRecords>;
    51ba:	4c 30       	R1 = P4;
    51bc:	45 30       	R0 = P5;
    51be:	ff e3 b1 e8 	CALL 0x2320 <_AdvertiseHostname>;
    51c2:	64 91       	P4 = [P4];
    51c4:	44 0c       	CC = P4 == 0x0;
    51c6:	8f 17       	IF !CC JUMP 0x50e4 <_mDNS_SetPrimaryInterfaceInfo+0x224> (BP);
    51c8:	06 0c       	CC = R6 == 0x0;
    51ca:	03 14       	IF !CC JUMP 0x51d0 <_mDNS_SetPrimaryInterfaceInfo+0x310> (BP);
    51cc:	05 0c       	CC = R5 == 0x0;
    51ce:	46 1c       	IF CC JUMP 0x525a <_mDNS_SetPrimaryInterfaceInfo+0x39a> (BP);
    51d0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    51d4:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    51d8:	10 91       	R0 = [P2];
    51da:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    51de:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    51e2:	52 91       	P2 = [P2];
    51e4:	28 e6 f4 09 	[P5 + 0x27d0] = R0;
    51e8:	29 e5 37 00 	P1 = [P5 + 0xdc];
    51ec:	42 30       	R0 = P2;
    51ee:	c2 0c       	CC = P2 < 0x0;
    51f0:	18 64       	R0 += 0x3;		/* (  3) */
    51f2:	42 06       	IF !CC R0 = P2;
    51f4:	10 4d       	R0 >>>= 0x2;
    51f6:	28 e6 f2 09 	[P5 + 0x27c8] = R0;
    51fa:	43 0c       	CC = P3 == 0x0;
    51fc:	04 14       	IF !CC JUMP 0x5204 <_mDNS_SetPrimaryInterfaceInfo+0x344> (BP);
    51fe:	50 44       	P0 = P2 << 0x2;
    5200:	90 5a       	P2 = P0 + P2;
    5202:	02 20       	JUMP.S 0x5206 <_mDNS_SetPrimaryInterfaceInfo+0x346>;
    5204:	02 68       	P2 = 0x0 (X);		/*		P2=0x0(  0) */
    5206:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5208:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0x2028 */
    520c:	68 e6 f0 13 	W[P5 + 0x27e0] = R0;
    5210:	08 e1 00 00 	P0.L = 0x0;		/* (  0)	P0=0x0 <_FlushAddressCacheRecords> */
    5214:	8a 5a       	P2 = P2 + P1;
    5216:	00 91       	R0 = [P0];
    5218:	2a e7 f3 09 	[P5 + 0x27cc] = P2;
    521c:	29 e7 40 00 	[P5 + 0x100] = P1;
    5220:	00 0c       	CC = R0 == 0x0;
    5222:	1c 1c       	IF CC JUMP 0x525a <_mDNS_SetPrimaryInterfaceInfo+0x39a> (BP);
    5224:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_FlushAddressCacheRecords>(  0) */
    5228:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x0 <_FlushAddressCacheRecords>(  0) */
    522c:	06 0c       	CC = R6 == 0x0;
    522e:	00 e1 08 04 	R0.L = 0x408;		/* (1032)	R0=0x408(1032) */
    5232:	02 e1 28 28 	R2.L = 0x2828;		/* (10280)	R2=0x2828(10280) */
    5236:	10 07       	IF CC R2 = R0;
    5238:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x29e0(10720) */
    523c:	01 e1 34 28 	R1.L = 0x2834;		/* (10292)	R1=0x2834(10292) */
    5240:	05 0c       	CC = R5 == 0x0;
    5242:	01 06       	IF !CC R0 = R1;
    5244:	f0 b0       	[SP + 0xc] = R0;
    5246:	0a 44       	P2 -= P1;
    5248:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2834(10292) */
    524c:	32 bd       	[SP + 0x10] = P2;
    524e:	71 bd       	[SP + 0x14] = P1;
    5250:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    5252:	01 e1 10 2a 	R1.L = 0x2a10;		/* (10768)	R1=0x2a10(10768) */
    5256:	ff e3 d5 d6 	CALL 0x0 <_FlushAddressCacheRecords>;
    525a:	00 00       	NOP;
    525c:	28 e4 13 08 	R0 = [P5 + 0x204c];
    5260:	38 0c       	CC = R0 == -0x1;
    5262:	08 18       	IF CC JUMP 0x5272 <_mDNS_SetPrimaryInterfaceInfo+0x3b2>;
    5264:	2a e1 3c 20 	P2 = 0x203c (X);		/*		P2=0x203c(8252) */
    5268:	95 5a       	P2 = P5 + P2;
    526a:	4a 30       	R1 = P2;
    526c:	45 30       	R0 = P5;
    526e:	ff e3 c9 d6 	CALL 0x0 <_FlushAddressCacheRecords>;
    5272:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5274:	a8 e6 04 25 	B[P5 + 0x2504] = R0;
    5278:	28 e4 37 00 	R0 = [P5 + 0xdc];
    527c:	00 0c       	CC = R0 == 0x0;
    527e:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    5280:	01 07       	IF CC R0 = R1;
    5282:	28 e6 fc 07 	[P5 + 0x1ff0] = R0;
    5286:	06 6d       	SP += 0x20;		/* ( 32) */
    5288:	77 90       	FP = [SP++];
    528a:	45 30       	R0 = P5;
    528c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1(  1) */
    5290:	01 e1 f8 00 	R1.L = 0xf8;		/* (248)	R1=0xf8(248) */
    5294:	27 01       	RETS = [SP++];
    5296:	a3 05       	(R7:4, P5:3) = [SP++];
    5298:	ff e2 b4 d6 	JUMP.L 0x0 <_FlushAddressCacheRecords>;

0000529c <_uDNS_ReceiveNATPMPPacket>:
_uDNS_ReceiveNATPMPPacket():
    529c:	e3 05       	[--SP] = (R7:4, P5:3);
    529e:	2a 32       	P5 = R2;
    52a0:	67 01       	[--SP] = RETS;
    52a2:	20 32       	P4 = R0;
    52a4:	46 6f       	SP += -0x18;		/* (-24) */
    52a6:	21 30       	R4 = R1;
    52a8:	68 a4       	R0 = W[P5 + 0x2] (Z);
    52aa:	76 e5 22 00 	R6 = W[SP + 0x44] (X);
    52ae:	00 0c       	CC = R0 == 0x0;
    52b0:	09 14       	IF !CC JUMP 0x52c2 <_uDNS_ReceiveNATPMPPacket+0x26> (BP);
    52b2:	f2 42       	R2 = R6.L (Z);
    52b4:	3a 0e       	CC = R2 <= 0x7 (IU);
    52b6:	06 14       	IF !CC JUMP 0x52c2 <_uDNS_ReceiveNATPMPPacket+0x26> (BP);
    52b8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xf8(248) */
    52bc:	01 e1 4c 2a 	R1.L = 0x2a4c;		/* (10828)	R1=0x2a4c(10828) */
    52c0:	b7 20       	JUMP.S 0x542e <_uDNS_ReceiveNATPMPPacket+0x192>;
    52c2:	00 00       	NOP;
    52c4:	2a 99       	R2 = B[P5] (Z);
    52c6:	02 0c       	CC = R2 == 0x0;
    52c8:	0d 1c       	IF CC JUMP 0x52e2 <_uDNS_ReceiveNATPMPPacket+0x46> (BP);
    52ca:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    52cc:	30 e6 11 00 	[SP + 0x44] = R0;
    52d0:	c6 6c       	SP += 0x18;		/* ( 24) */
    52d2:	27 01       	RETS = [SP++];
    52d4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2a4c(10828) */
    52d8:	01 e1 78 2a 	R1.L = 0x2a78;		/* (10872)	R1=0x2a78(10872) */
    52dc:	a3 05       	(R7:4, P5:3) = [SP++];
    52de:	ff e2 91 d6 	JUMP.L 0x0 <_FlushAddressCacheRecords>;
    52e2:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x203c */
    52e6:	a8 e4 02 00 	R0 = B[P5 + 0x2] (Z);
    52ea:	a9 e4 03 00 	R1 = B[P5 + 0x3] (Z);
    52ee:	40 4f       	R0 <<= 0x8;
    52f0:	08 56       	R0 = R0 | R1;
    52f2:	68 b4       	W[P5 + 0x2] = R0;
    52f4:	af e4 04 00 	R7 = B[P5 + 0x4] (Z);
    52f8:	a8 e4 05 00 	R0 = B[P5 + 0x5] (Z);
    52fc:	80 4f       	R0 <<= 0x10;
    52fe:	c7 4f       	R7 <<= 0x18;
    5300:	c7 57       	R7 = R7 | R0;
    5302:	a8 e4 07 00 	R0 = B[P5 + 0x7] (Z);
    5306:	c7 57       	R7 = R7 | R0;
    5308:	a8 e4 06 00 	R0 = B[P5 + 0x6] (Z);
    530c:	40 4f       	R0 <<= 0x8;
    530e:	c7 57       	R7 = R7 | R0;
    5310:	25 e4 f6 09 	R5 = [P4 + 0x27d8];
    5314:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    5318:	6f b0       	[P5 + 0x4] = R7;
    531a:	22 e4 37 00 	R2 = [P4 + 0xdc];
    531e:	20 e4 f7 09 	R0 = [P4 + 0x27dc];
    5322:	11 91       	R1 = [P2];
    5324:	af 09       	CC = R7 < R5 (IU);
    5326:	0b 18       	IF CC JUMP 0x533c <_uDNS_ReceiveNATPMPPacket+0xa0>;
    5328:	02 52       	R0 = R2 - R0;
    532a:	ff e3 6b d6 	CALL 0x0 <_FlushAddressCacheRecords>;
    532e:	ef 53       	R7 = R7 - R5;
    5330:	82 c6 e8 83 	R1 = R0 >> 0x3;
    5334:	17 64       	R7 += 0x2;		/* (  2) */
    5336:	08 52       	R0 = R0 - R1;
    5338:	87 09       	CC = R7 < R0 (IU);
    533a:	0f 14       	IF !CC JUMP 0x5358 <_uDNS_ReceiveNATPMPPacket+0xbc> (BP);
    533c:	2a e1 fc 1f 	P2 = 0x1ffc (X);		/*		P2=0x1ffc(8188) */
    5340:	94 5a       	P2 = P4 + P2;
    5342:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2a78(10872) */
    5346:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5348:	52 30       	R2 = P2;
    534a:	01 e1 b8 2a 	R1.L = 0x2ab8;		/* (10936)	R1=0x2ab8(10936) */
    534e:	ff e3 59 d6 	CALL 0x0 <_FlushAddressCacheRecords>;
    5352:	44 30       	R0 = P4;
    5354:	ff e3 06 e5 	CALL 0x1d60 <_RecreateNATMappings>;
    5358:	21 e1 80 00 	R1 = 0x80 (X);		/*		R1=0x80(128) */
    535c:	68 a0       	R0 = [P5 + 0x4];
    535e:	20 e6 f6 09 	[P4 + 0x27d8] = R0;
    5362:	20 e4 37 00 	R0 = [P4 + 0xdc];
    5366:	20 e6 f7 09 	[P4 + 0x27dc] = R0;
    536a:	a8 e5 01 00 	R0 = B[P5 + 0x1] (X);
    536e:	42 43       	R2 = R0.B (Z);
    5370:	0a 08       	CC = R2 == R1;
    5372:	14 14       	IF !CC JUMP 0x539a <_uDNS_ReceiveNATPMPPacket+0xfe> (BP);
    5374:	69 a8       	R1 = W[P5 + 0x2] (X);
    5376:	c8 42       	R0 = R1.L (Z);
    5378:	00 0c       	CC = R0 == 0x0;
    537a:	0b 10       	IF !CC JUMP 0x5390 <_uDNS_ReceiveNATPMPPacket+0xf4>;
    537c:	f2 42       	R2 = R6.L (Z);
    537e:	58 60       	R0 = 0xb (X);		/*		R0=0xb( 11) */
    5380:	02 0a       	CC = R2 <= R0 (IU);
    5382:	07 14       	IF !CC JUMP 0x5390 <_uDNS_ReceiveNATPMPPacket+0xf4> (BP);
    5384:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x80(128) */
    5388:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    538a:	01 e1 d4 2a 	R1.L = 0x2ad4;		/* (10964)	R1=0x2ad4(10964) */
    538e:	50 20       	JUMP.S 0x542e <_uDNS_ReceiveNATPMPPacket+0x192>;
    5390:	44 30       	R0 = P4;
    5392:	aa a0       	R2 = [P5 + 0x8];
    5394:	ff e3 00 e5 	CALL 0x1d94 <_natTraversalHandleAddressReply>;
    5398:	50 20       	JUMP.S 0x5438 <_uDNS_ReceiveNATPMPPacket+0x19c>;
    539a:	27 e1 7f 00 	R7 = 0x7f (X);		/*		R7=0x7f(127) */
    539e:	78 50       	R1 = R0 + R7;
    53a0:	49 43       	R1 = R1.B (Z);
    53a2:	09 0e       	CC = R1 <= 0x1 (IU);
    53a4:	40 14       	IF !CC JUMP 0x5424 <_uDNS_ReceiveNATPMPPacket+0x188> (BP);
    53a6:	c7 55       	R7 = R7 & R0;
    53a8:	69 a8       	R1 = W[P5 + 0x2] (X);
    53aa:	c8 42       	R0 = R1.L (Z);
    53ac:	00 0c       	CC = R0 == 0x0;
    53ae:	1b 14       	IF !CC JUMP 0x53e4 <_uDNS_ReceiveNATPMPPacket+0x148> (BP);
    53b0:	f2 42       	R2 = R6.L (Z);
    53b2:	78 60       	R0 = 0xf (X);		/*		R0=0xf( 15) */
    53b4:	02 0a       	CC = R2 <= R0 (IU);
    53b6:	07 14       	IF !CC JUMP 0x53c4 <_uDNS_ReceiveNATPMPPacket+0x128> (BP);
    53b8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2ad4(10964) */
    53bc:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    53be:	01 e1 0c 2b 	R1.L = 0x2b0c;		/* (11020)	R1=0x2b0c(11020) */
    53c2:	36 20       	JUMP.S 0x542e <_uDNS_ReceiveNATPMPPacket+0x192>;
    53c4:	00 00       	NOP;
    53c6:	aa e4 0c 00 	R2 = B[P5 + 0xc] (Z);
    53ca:	a8 e4 0d 00 	R0 = B[P5 + 0xd] (Z);
    53ce:	c2 4f       	R2 <<= 0x18;
    53d0:	80 4f       	R0 <<= 0x10;
    53d2:	02 56       	R0 = R2 | R0;
    53d4:	aa e4 0f 00 	R2 = B[P5 + 0xf] (Z);
    53d8:	10 56       	R0 = R0 | R2;
    53da:	aa e4 0e 00 	R2 = B[P5 + 0xe] (Z);
    53de:	42 4f       	R2 <<= 0x8;
    53e0:	10 56       	R0 = R0 | R2;
    53e2:	e8 b0       	[P5 + 0xc] = R0;
    53e4:	61 e6 f0 13 	W[P4 + 0x27e0] = R1;
    53e8:	23 e5 f0 09 	P3 = [P4 + 0x27c0];
    53ec:	7f 43       	R7 = R7.B (Z);
    53ee:	18 20       	JUMP.S 0x541e <_uDNS_ReceiveNATPMPPacket+0x182>;
    53f0:	00 00       	NOP;
    53f2:	98 e4 28 00 	R0 = B[P3 + 0x28] (Z);
    53f6:	38 08       	CC = R0 == R7;
    53f8:	11 14       	IF !CC JUMP 0x541a <_uDNS_ReceiveNATPMPPacket+0x17e> (BP);
    53fa:	59 e4 15 00 	R1 = W[P3 + 0x2a] (Z);
    53fe:	28 a5       	R0 = W[P5 + 0x8] (Z);
    5400:	01 08       	CC = R1 == R0;
    5402:	0c 14       	IF !CC JUMP 0x541a <_uDNS_ReceiveNATPMPPacket+0x17e> (BP);
    5404:	68 a8       	R0 = W[P5 + 0x2] (X);
    5406:	b0 b5       	W[SP + 0xc] = R0;
    5408:	68 a9       	R0 = W[P5 + 0xa] (X);
    540a:	30 b6       	W[SP + 0x10] = R0;
    540c:	e8 a0       	R0 = [P5 + 0xc];
    540e:	70 b1       	[SP + 0x14] = R0;
    5410:	44 30       	R0 = P4;
    5412:	4b 30       	R1 = P3;
    5414:	14 30       	R2 = R4;
    5416:	ff e3 41 e5 	CALL 0x1e98 <_natTraversalHandlePortMapReply>;
    541a:	00 00       	NOP;
    541c:	5b 91       	P3 = [P3];
    541e:	43 0c       	CC = P3 == 0x0;
    5420:	e8 17       	IF !CC JUMP 0x53f0 <_uDNS_ReceiveNATPMPPacket+0x154> (BP);
    5422:	0b 20       	JUMP.S 0x5438 <_uDNS_ReceiveNATPMPPacket+0x19c>;
    5424:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2b0c(11020) */
    5428:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    542a:	01 e1 44 2b 	R1.L = 0x2b44;		/* (11076)	R1=0x2b44(11076) */
    542e:	c6 6c       	SP += 0x18;		/* ( 24) */
    5430:	27 01       	RETS = [SP++];
    5432:	a3 05       	(R7:4, P5:3) = [SP++];
    5434:	ff e2 e6 d5 	JUMP.L 0x0 <_FlushAddressCacheRecords>;
    5438:	20 e4 1d 0a 	R0 = [P4 + 0x2874];
    543c:	00 0c       	CC = R0 == 0x0;
    543e:	06 18       	IF CC JUMP 0x544a <_uDNS_ReceiveNATPMPPacket+0x1ae>;
    5440:	ff e3 e0 d5 	CALL 0x0 <_FlushAddressCacheRecords>;
    5444:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5446:	20 e6 1d 0a 	[P4 + 0x2874] = R0;
    544a:	c6 6c       	SP += 0x18;		/* ( 24) */
    544c:	27 01       	RETS = [SP++];
    544e:	a3 05       	(R7:4, P5:3) = [SP++];
    5450:	10 00       	RTS;
	...

00005454 <_uDNS_ReceiveMsg>:
_uDNS_ReceiveMsg():
    5454:	e3 05       	[--SP] = (R7:4, P5:3);
    5456:	00 e8 10 00 	LINK 0x40;		/* (64) */
    545a:	39 32       	FP = R1;
    545c:	20 32       	P4 = R0;
    545e:	c0 63       	R0 = -0x8 (X);		/*		R0=0xfffffff8( -8) */
    5460:	32 e6 1b 00 	[SP + 0x6c] = R2;
    5464:	35 e4 1c 00 	R5 = [SP + 0x70];
    5468:	b9 e5 02 00 	R1 = B[FP + 0x2] (X);
    546c:	01 54       	R0 = R1 & R0;
    546e:	79 60       	R1 = 0xf (X);		/*		R1=0xf( 15) */
    5470:	be e5 03 00 	R6 = B[FP + 0x3] (X);
    5474:	8e 55       	R6 = R6 & R1;
    5476:	40 43       	R0 = R0.B (Z);
    5478:	21 e1 80 00 	R1 = 0x80 (X);		/*		R1=0x80(128) */
    547c:	74 e5 3a 00 	R4 = W[SP + 0x74] (X);
    5480:	08 08       	CC = R0 == R1;
    5482:	50 14       	IF !CC JUMP 0x5522 <_uDNS_ReceiveMsg+0xce> (BP);
    5484:	f5 b0       	[SP + 0xc] = R5;
    5486:	34 b6       	W[SP + 0x10] = R4;
    5488:	44 30       	R0 = P4;
    548a:	4f 30       	R1 = FP;
    548c:	ff e3 48 dd 	CALL 0xf1c <_uDNS_ReceiveTestQuestionResponse>;
    5490:	00 0c       	CC = R0 == 0x0;
    5492:	02 1c       	IF CC JUMP 0x5496 <_uDNS_ReceiveMsg+0x42> (BP);
    5494:	a6 23       	JUMP.S 0x5be0 <_uDNS_ReceiveMsg+0x78c>;
    5496:	05 0c       	CC = R5 == 0x0;
    5498:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x0 <_FlushAddressCacheRecords> */
    549c:	00 02       	R0 = CC;
    549e:	25 e5 4c 00 	P5 = [P4 + 0x130];
    54a2:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_FlushAddressCacheRecords> */
    54a6:	e6 61       	R6 = 0x3c (X);		/*		R6=0x3c( 60) */
    54a8:	b0 e6 2f 00 	B[SP + 0x2f] = R0;
    54ac:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    54ae:	37 20       	JUMP.S 0x551c <_uDNS_ReceiveMsg+0xc8>;
    54b0:	00 00       	NOP;
    54b2:	b8 e4 02 00 	R0 = B[FP + 0x2] (Z);
    54b6:	08 48       	CC = !BITTST (R0, 0x1);		/* bit  1 */
    54b8:	30 1c       	IF CC JUMP 0x5518 <_uDNS_ReceiveMsg+0xc4> (BP);
    54ba:	69 e4 99 00 	R1 = W[P5 + 0x132] (Z);
    54be:	38 95       	R0 = W[FP] (Z);
    54c0:	01 08       	CC = R1 == R0;
    54c2:	2b 14       	IF !CC JUMP 0x5518 <_uDNS_ReceiveMsg+0xc4> (BP);
    54c4:	e8 a0       	R0 = [P5 + 0xc];
    54c6:	21 e4 37 00 	R1 = [P4 + 0xdc];
    54ca:	41 52       	R1 = R1 - R0;
    54cc:	18 91       	R0 = [P3];
    54ce:	f0 40       	R0 *= R6;
    54d0:	81 08       	CC = R1 < R0;
    54d2:	23 14       	IF !CC JUMP 0x5518 <_uDNS_ReceiveMsg+0xc4> (BP);
    54d4:	b0 e4 2f 00 	R0 = B[SP + 0x2f] (Z);
    54d8:	08 02       	CC = R0;
    54da:	09 14       	IF !CC JUMP 0x54ec <_uDNS_ReceiveMsg+0x98> (BP);
    54dc:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x80(128) */
    54e0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    54e2:	01 e1 88 2b 	R1.L = 0x2b88;		/* (11144)	R1=0x2b88(11144) */
    54e6:	ff e3 8d d5 	CALL 0x0 <_FlushAddressCacheRecords>;
    54ea:	17 20       	JUMP.S 0x5518 <_uDNS_ReceiveMsg+0xc4>;
    54ec:	00 00       	NOP;
    54ee:	28 e4 3e 00 	R0 = [P5 + 0xf8];
    54f2:	00 0c       	CC = R0 == 0x0;
    54f4:	05 18       	IF CC JUMP 0x54fe <_uDNS_ReceiveMsg+0xaa>;
    54f6:	ff e3 a1 eb 	CALL 0x2c38 <_DisposeTCPConn>;
    54fa:	2f e6 3e 00 	[P5 + 0xf8] = R7;
    54fe:	f7 b0       	[SP + 0xc] = R7;
    5500:	35 b1       	[SP + 0x10] = R5;
    5502:	b4 b6       	W[SP + 0x14] = R4;
    5504:	b7 b1       	[SP + 0x18] = R7;
    5506:	f5 bd       	[SP + 0x1c] = P5;
    5508:	37 b2       	[SP + 0x20] = R7;
    550a:	44 30       	R0 = P4;
    550c:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    550e:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    5510:	ff e3 80 ee 	CALL 0x3210 <_MakeTCPConn>;
    5514:	28 e6 3e 00 	[P5 + 0xf8] = R0;
    5518:	00 00       	NOP;
    551a:	6d 91       	P5 = [P5];
    551c:	45 0c       	CC = P5 == 0x0;
    551e:	c9 17       	IF !CC JUMP 0x54b0 <_uDNS_ReceiveMsg+0x5c> (BP);
    5520:	60 23       	JUMP.S 0x5be0 <_uDNS_ReceiveMsg+0x78c>;
    5522:	21 e1 a8 00 	R1 = 0xa8 (X);		/*		R1=0xa8(168) */
    5526:	08 08       	CC = R0 == R1;
    5528:	02 18       	IF CC JUMP 0x552c <_uDNS_ReceiveMsg+0xd8>;
    552a:	5b 23       	JUMP.S 0x5be0 <_uDNS_ReceiveMsg+0x78c>;
    552c:	4f 30       	R1 = FP;
    552e:	32 e4 1b 00 	R2 = [SP + 0x6c];
    5532:	44 30       	R0 = P4;
    5534:	ff e3 66 d5 	CALL 0x0 <_FlushAddressCacheRecords>;
    5538:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x1ffc */
    553c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    5540:	30 b3       	[SP + 0x30] = R0;
    5542:	10 91       	R0 = [P2];
    5544:	32 a3       	R2 = [SP + 0x30];
    5546:	d0 40       	R0 *= R2;
    5548:	21 e4 37 00 	R1 = [P4 + 0xdc];
    554c:	48 50       	R1 = R0 + R1;
    554e:	71 b3       	[SP + 0x34] = R1;
    5550:	51 60       	R1 = 0xa (X);		/*		R1=0xa( 10) */
    5552:	ff e3 57 d5 	CALL 0x0 <_FlushAddressCacheRecords>;
    5556:	ff e3 55 d5 	CALL 0x0 <_FlushAddressCacheRecords>;
    555a:	22 e5 f5 07 	P2 = [P4 + 0x1fd4];
    555e:	b0 b3       	[SP + 0x38] = R0;
    5560:	42 0c       	CC = P2 == 0x0;
    5562:	11 18       	IF CC JUMP 0x5584 <_uDNS_ReceiveMsg+0x130>;
    5564:	42 30       	R0 = P2;
    5566:	54 30       	R2 = P4;
    5568:	ba 65       	R2 += 0x37;		/* ( 55) */
    556a:	51 a2       	R1 = [P2 + 0x24];
    556c:	21 64       	R1 += 0x4;		/* (  4) */
    556e:	20 64       	R0 += 0x4;		/* (  4) */
    5570:	ff e3 48 d5 	CALL 0x0 <_FlushAddressCacheRecords>;
    5574:	10 30       	R2 = R0;
    5576:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xa( 10) */
    557a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    557c:	01 e1 c4 2b 	R1.L = 0x2bc4;		/* (11204)	R1=0x2bc4(11204) */
    5580:	ff e3 40 d5 	CALL 0x0 <_FlushAddressCacheRecords>;
    5584:	20 e4 f2 07 	R0 = [P4 + 0x1fc8];
    5588:	20 e6 f5 07 	[P4 + 0x1fd4] = R0;
    558c:	30 60       	R0 = 0x6 (X);		/*		R0=0x6(  6) */
    558e:	76 43       	R6 = R6.B (Z);
    5590:	06 08       	CC = R6 == R0;
    5592:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x0 <_FlushAddressCacheRecords> */
    5596:	44 e1 00 00 	R4.H = 0x0;		/* (  0)	R4=0x40( 64) */
    559a:	00 02       	R0 = CC;
    559c:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_FlushAddressCacheRecords> */
    55a0:	04 e1 00 00 	R4.L = 0x0;		/* (  0)	R4=0x0 <_FlushAddressCacheRecords>(  0) */
    55a4:	b0 e6 3f 00 	B[SP + 0x3f] = R0;
    55a8:	11 23       	JUMP.S 0x5bca <_uDNS_ReceiveMsg+0x776>;
    55aa:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x0 <_FlushAddressCacheRecords> */
    55ae:	28 91       	R0 = [P5];
    55b0:	20 e6 f5 07 	[P4 + 0x1fd4] = R0;
    55b4:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_FlushAddressCacheRecords> */
    55b8:	e9 a1       	R1 = [P5 + 0x1c];
    55ba:	08 91       	R0 = [P1];
    55bc:	01 08       	CC = R1 == R0;
    55be:	02 18       	IF CC JUMP 0x55c2 <_uDNS_ReceiveMsg+0x16e>;
    55c0:	05 23       	JUMP.S 0x5bca <_uDNS_ReceiveMsg+0x776>;
    55c2:	a8 e4 46 00 	R0 = B[P5 + 0x46] (Z);
    55c6:	00 0c       	CC = R0 == 0x0;
    55c8:	02 18       	IF CC JUMP 0x55cc <_uDNS_ReceiveMsg+0x178>;
    55ca:	00 23       	JUMP.S 0x5bca <_uDNS_ReceiveMsg+0x776>;
    55cc:	28 a2       	R0 = [P5 + 0x20];
    55ce:	ff e3 19 d5 	CALL 0x0 <_FlushAddressCacheRecords>;
    55d2:	00 0c       	CC = R0 == 0x0;
    55d4:	02 18       	IF CC JUMP 0x55d8 <_uDNS_ReceiveMsg+0x184>;
    55d6:	fa 22       	JUMP.S 0x5bca <_uDNS_ReceiveMsg+0x776>;
    55d8:	69 e4 7a 00 	R1 = W[P5 + 0xf4] (Z);
    55dc:	38 95       	R0 = W[FP] (Z);
    55de:	01 08       	CC = R1 == R0;
    55e0:	02 18       	IF CC JUMP 0x55e4 <_uDNS_ReceiveMsg+0x190>;
    55e2:	f4 22       	JUMP.S 0x5bca <_uDNS_ReceiveMsg+0x776>;
    55e4:	2d a2       	R5 = [P5 + 0x20];
    55e6:	06 0c       	CC = R6 == 0x0;
    55e8:	55 1c       	IF CC JUMP 0x5692 <_uDNS_ReceiveMsg+0x23e> (BP);
    55ea:	b0 e4 3f 00 	R0 = B[SP + 0x3f] (Z);
    55ee:	08 02       	CC = R0;
    55f0:	02 14       	IF !CC JUMP 0x55f4 <_uDNS_ReceiveMsg+0x1a0> (BP);
    55f2:	f3 22       	JUMP.S 0x5bd8 <_uDNS_ReceiveMsg+0x784>;
    55f4:	29 60       	R1 = 0x5 (X);		/*		R1=0x5(  5) */
    55f6:	0e 08       	CC = R6 == R1;
    55f8:	0b 14       	IF !CC JUMP 0x560e <_uDNS_ReceiveMsg+0x1ba> (BP);
    55fa:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5(  5) */
    55fe:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5600:	01 e1 fc 2b 	R1.L = 0x2bfc;		/* (11260)	R1=0x2bfc(11260) */
    5604:	15 30       	R2 = R5;
    5606:	ff e3 fd d4 	CALL 0x0 <_FlushAddressCacheRecords>;
    560a:	7f 63       	R7 = -0x11 (X);		/*		R7=0xffffffef(-17) */
    560c:	40 20       	JUMP.S 0x568c <_uDNS_ReceiveMsg+0x238>;
    560e:	42 60       	R2 = 0x8 (X);		/*		R2=0x8(  8) */
    5610:	16 08       	CC = R6 == R2;
    5612:	0b 14       	IF !CC JUMP 0x5628 <_uDNS_ReceiveMsg+0x1d4> (BP);
    5614:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2bfc(11260) */
    5618:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    561a:	01 e1 10 2c 	R1.L = 0x2c10;		/* (11280)	R1=0x2c10(11280) */
    561e:	15 30       	R2 = R5;
    5620:	ff e3 f0 d4 	CALL 0x0 <_FlushAddressCacheRecords>;
    5624:	77 63       	R7 = -0x12 (X);		/*		R7=0xffffffee(-18) */
    5626:	33 20       	JUMP.S 0x568c <_uDNS_ReceiveMsg+0x238>;
    5628:	48 60       	R0 = 0x9 (X);		/*		R0=0x9(  9) */
    562a:	06 08       	CC = R6 == R0;
    562c:	11 14       	IF !CC JUMP 0x564e <_uDNS_ReceiveMsg+0x1fa> (BP);
    562e:	f5 b0       	[SP + 0xc] = R5;
    5630:	44 30       	R0 = P4;
    5632:	4f 30       	R1 = FP;
    5634:	32 e4 1b 00 	R2 = [SP + 0x6c];
    5638:	ff e3 62 dd 	CALL 0x10fc <_ParseTSIGError>;
    563c:	38 30       	R7 = R0;
    563e:	00 0c       	CC = R0 == 0x0;
    5640:	43 14       	IF !CC JUMP 0x56c6 <_uDNS_ReceiveMsg+0x272> (BP);
    5642:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2c10(11280) */
    5646:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5648:	01 e1 34 2c 	R1.L = 0x2c34;		/* (11316)	R1=0x2c34(11316) */
    564c:	12 20       	JUMP.S 0x5670 <_uDNS_ReceiveMsg+0x21c>;
    564e:	0e 0c       	CC = R6 == 0x1;
    5650:	14 14       	IF !CC JUMP 0x5678 <_uDNS_ReceiveMsg+0x224> (BP);
    5652:	f5 b0       	[SP + 0xc] = R5;
    5654:	44 30       	R0 = P4;
    5656:	4f 30       	R1 = FP;
    5658:	32 e4 1b 00 	R2 = [SP + 0x6c];
    565c:	ff e3 50 dd 	CALL 0x10fc <_ParseTSIGError>;
    5660:	38 30       	R7 = R0;
    5662:	00 0c       	CC = R0 == 0x0;
    5664:	31 14       	IF !CC JUMP 0x56c6 <_uDNS_ReceiveMsg+0x272> (BP);
    5666:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2c34(11316) */
    566a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    566c:	01 e1 58 2c 	R1.L = 0x2c58;		/* (11352)	R1=0x2c58(11352) */
    5670:	15 30       	R2 = R5;
    5672:	ff e3 c7 d4 	CALL 0x0 <_FlushAddressCacheRecords>;
    5676:	0a 20       	JUMP.S 0x568a <_uDNS_ReceiveMsg+0x236>;
    5678:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2c58(11352) */
    567c:	f6 b0       	[SP + 0xc] = R6;
    567e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5680:	01 e1 6c 2c 	R1.L = 0x2c6c;		/* (11372)	R1=0x2c6c(11372) */
    5684:	15 30       	R2 = R5;
    5686:	ff e3 bd d4 	CALL 0x0 <_FlushAddressCacheRecords>;
    568a:	ff 63       	R7 = -0x1 (X);		/*		R7=0xffffffff( -1) */
    568c:	47 e1 fe ff 	R7.H = 0xfffe;		/* ( -2)	R7=0xfffeffff(-65537) */
    5690:	1b 20       	JUMP.S 0x56c6 <_uDNS_ReceiveMsg+0x272>;
    5692:	00 00       	NOP;
    5694:	28 e4 3a 00 	R0 = [P5 + 0xe8];
    5698:	00 0c       	CC = R0 == 0x0;
    569a:	15 1c       	IF CC JUMP 0x56c4 <_uDNS_ReceiveMsg+0x270> (BP);
    569c:	31 a3       	R1 = [SP + 0x30];
    569e:	01 0c       	CC = R1 == 0x0;
    56a0:	12 1c       	IF CC JUMP 0x56c4 <_uDNS_ReceiveMsg+0x270> (BP);
    56a2:	28 e4 3b 00 	R0 = [P5 + 0xec];
    56a6:	72 a3       	R2 = [SP + 0x34];
    56a8:	10 52       	R0 = R0 - R2;
    56aa:	80 0c       	CC = R0 < 0x0;
    56ac:	06 14       	IF !CC JUMP 0x56b8 <_uDNS_ReceiveMsg+0x264> (BP);
    56ae:	28 e4 39 00 	R0 = [P5 + 0xe4];
    56b2:	39 60       	R1 = 0x7 (X);		/*		R1=0x7(  7) */
    56b4:	08 08       	CC = R0 == R1;
    56b6:	07 18       	IF CC JUMP 0x56c4 <_uDNS_ReceiveMsg+0x270>;
    56b8:	72 a3       	R2 = [SP + 0x34];
    56ba:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    56bc:	2a e6 3b 00 	[P5 + 0xec] = R2;
    56c0:	a8 e6 48 01 	B[P5 + 0x148] = R0;
    56c4:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    56c6:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x0 <_FlushAddressCacheRecords> */
    56ca:	20 a3       	R0 = [P4 + 0x30];
    56cc:	08 30       	R1 = R0;
    56ce:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_FlushAddressCacheRecords> */
    56d2:	e2 a2       	R2 = [P4 + 0x2c];
    56d4:	09 64       	R1 += 0x1;		/* (  1) */
    56d6:	0d 95       	R5 = W[P1] (Z);
    56d8:	0a 08       	CC = R2 == R1;
    56da:	09 18       	IF CC JUMP 0x56ec <_uDNS_ReceiveMsg+0x298>;
    56dc:	f0 b0       	[SP + 0xc] = R0;
    56de:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x7(  7) */
    56e2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    56e4:	01 e1 90 2c 	R1.L = 0x2c90;		/* (11408)	R1=0x2c90(11408) */
    56e8:	ff e3 8c d4 	CALL 0x0 <_FlushAddressCacheRecords>;
    56ec:	18 91       	R0 = [P3];
    56ee:	00 0c       	CC = R0 == 0x0;
    56f0:	21 1c       	IF CC JUMP 0x5732 <_uDNS_ReceiveMsg+0x2de> (BP);
    56f2:	ab e4 f4 00 	R3 = B[P5 + 0xf4] (Z);
    56f6:	2a e5 39 00 	P2 = [P5 + 0xe4];
    56fa:	a8 e4 f5 00 	R0 = B[P5 + 0xf5] (Z);
    56fe:	43 4f       	R3 <<= 0x8;
    5700:	d8 56       	R3 = R0 | R3;
    5702:	69 a2       	R1 = [P5 + 0x24];
    5704:	45 30       	R0 = P5;
    5706:	54 30       	R2 = P4;
    5708:	21 64       	R1 += 0x4;		/* (  4) */
    570a:	ba 65       	R2 += 0x37;		/* ( 55) */
    570c:	b3 b2       	[SP + 0x28] = R3;
    570e:	72 be       	[SP + 0x24] = P2;
    5710:	20 64       	R0 += 0x4;		/* (  4) */
    5712:	ff e3 77 d4 	CALL 0x0 <_FlushAddressCacheRecords>;
    5716:	72 ae       	P2 = [SP + 0x24];
    5718:	b3 a2       	R3 = [SP + 0x28];
    571a:	70 b1       	[SP + 0x14] = R0;
    571c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2c90(11408) */
    5720:	f3 b0       	[SP + 0xc] = R3;
    5722:	32 bd       	[SP + 0x10] = P2;
    5724:	b5 bd       	[SP + 0x18] = P5;
    5726:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    5728:	01 e1 dc 2c 	R1.L = 0x2cdc;		/* (11484)	R1=0x2cdc(11484) */
    572c:	17 30       	R2 = R7;
    572e:	ff e3 69 d4 	CALL 0x0 <_FlushAddressCacheRecords>;
    5732:	44 30       	R0 = P4;
    5734:	2f e6 53 00 	[P5 + 0x14c] = R7;
    5738:	4d 30       	R1 = P5;
    573a:	b2 a3       	R2 = [SP + 0x38];
    573c:	ff e3 d2 da 	CALL 0xce0 <_SetRecordRetry>;
    5740:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    5744:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    5748:	10 95       	R0 = W[P2] (Z);
    574a:	2a e5 3f 00 	P2 = [P5 + 0xfc];
    574e:	68 e6 7a 00 	W[P5 + 0xf4] = R0;
    5752:	42 0c       	CC = P2 == 0x0;
    5754:	34 1c       	IF CC JUMP 0x57bc <_uDNS_ReceiveMsg+0x368> (BP);
    5756:	10 e4 cf 00 	R0 = [P2 + 0x33c];
    575a:	38 0c       	CC = R0 == -0x1;
    575c:	25 18       	IF CC JUMP 0x57a6 <_uDNS_ReceiveMsg+0x352>;
    575e:	45 30       	R0 = P5;
    5760:	54 30       	R2 = P4;
    5762:	ba 65       	R2 += 0x37;		/* ( 55) */
    5764:	69 a2       	R1 = [P5 + 0x24];
    5766:	21 64       	R1 += 0x4;		/* (  4) */
    5768:	20 64       	R0 += 0x4;		/* (  4) */
    576a:	ff e3 4b d4 	CALL 0x0 <_FlushAddressCacheRecords>;
    576e:	2d e4 3f 00 	R5 = [P5 + 0xfc];
    5772:	0d 32       	P1 = R5;
    5774:	10 30       	R2 = R0;
    5776:	48 e5 b0 02 	R0 = W[P1 + 0x560] (X);
    577a:	b2 b2       	[SP + 0x28] = R2;
    577c:	ff e3 42 d4 	CALL 0x0 <_FlushAddressCacheRecords>;
    5780:	0d 32       	P1 = R5;
    5782:	2a e1 60 04 	P2 = 0x460 (X);		/*		P2=0x460(1120) */
    5786:	30 b1       	[SP + 0x10] = R0;
    5788:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2cdc(11484) */
    578c:	01 e1 10 2d 	R1.L = 0x2d10;		/* (11536)	R1=0x2d10(11536) */
    5790:	91 5a       	P2 = P1 + P2;
    5792:	f2 bc       	[SP + 0xc] = P2;
    5794:	2a e5 3f 00 	P2 = [P5 + 0xfc];
    5798:	b2 a2       	R2 = [SP + 0x28];
    579a:	10 e4 cf 00 	R0 = [P2 + 0x33c];
    579e:	70 b1       	[SP + 0x14] = R0;
    57a0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    57a2:	ff e3 2f d4 	CALL 0x0 <_FlushAddressCacheRecords>;
    57a6:	29 e4 3f 00 	R1 = [P5 + 0xfc];
    57aa:	11 32       	P2 = R1;
    57ac:	44 30       	R0 = P4;
    57ae:	55 e5 85 01 	R5 = W[P2 + 0x30a] (X);
    57b2:	ff e3 27 d4 	CALL 0x0 <_FlushAddressCacheRecords>;
    57b6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    57b8:	28 e6 3f 00 	[P5 + 0xfc] = R0;
    57bc:	00 00       	NOP;
    57be:	a8 e4 04 00 	R0 = B[P5 + 0x4] (Z);
    57c2:	08 0c       	CC = R0 == 0x1;
    57c4:	1a 14       	IF !CC JUMP 0x57f8 <_uDNS_ReceiveMsg+0x3a4> (BP);
    57c6:	28 e4 39 00 	R0 = [P5 + 0xe4];
    57ca:	18 0c       	CC = R0 == 0x3;
    57cc:	16 14       	IF !CC JUMP 0x57f8 <_uDNS_ReceiveMsg+0x3a4> (BP);
    57ce:	07 0c       	CC = R7 == 0x0;
    57d0:	0c 1c       	IF CC JUMP 0x57e8 <_uDNS_ReceiveMsg+0x394> (BP);
    57d2:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    57d4:	2a a2       	R2 = [P5 + 0x20];
    57d6:	f0 b0       	[SP + 0xc] = R0;
    57d8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2d10(11536) */
    57dc:	37 b1       	[SP + 0x10] = R7;
    57de:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    57e0:	01 e1 6c 2d 	R1.L = 0x2d6c;		/* (11628)	R1=0x2d6c(11628) */
    57e4:	ff e3 0e d4 	CALL 0x0 <_FlushAddressCacheRecords>;
    57e8:	20 60       	R0 = 0x4 (X);		/*		R0=0x4(  4) */
    57ea:	28 e6 39 00 	[P5 + 0xe4] = R0;
    57ee:	44 30       	R0 = P4;
    57f0:	4d 30       	R1 = P5;
    57f2:	ff e3 07 d4 	CALL 0x0 <_FlushAddressCacheRecords>;
    57f6:	ea 21       	JUMP.S 0x5bca <_uDNS_ReceiveMsg+0x776>;
    57f8:	00 00       	NOP;
    57fa:	a0 e4 15 01 	R0 = B[P4 + 0x115] (Z);
    57fe:	00 0c       	CC = R0 == 0x0;
    5800:	0a 1c       	IF CC JUMP 0x5814 <_uDNS_ReceiveMsg+0x3c0> (BP);
    5802:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    5804:	09 61       	R1 = 0x21 (X);		/*		R1=0x21( 33) */
    5806:	08 08       	CC = R0 == R1;
    5808:	e1 15       	IF !CC JUMP 0x5bca <_uDNS_ReceiveMsg+0x776> (BP);
    580a:	28 e4 39 00 	R0 = [P5 + 0xe4];
    580e:	18 0c       	CC = R0 == 0x3;
    5810:	dd 15       	IF !CC JUMP 0x5bca <_uDNS_ReceiveMsg+0x776> (BP);
    5812:	36 21       	JUMP.S 0x5a7e <_uDNS_ReceiveMsg+0x62a>;
    5814:	3a 60       	R2 = 0x7 (X);		/*		R2=0x7(  7) */
    5816:	28 e4 39 00 	R0 = [P5 + 0xe4];
    581a:	10 08       	CC = R0 == R2;
    581c:	28 14       	IF !CC JUMP 0x586c <_uDNS_ReceiveMsg+0x418> (BP);
    581e:	07 0c       	CC = R7 == 0x0;
    5820:	0a 1c       	IF CC JUMP 0x5834 <_uDNS_ReceiveMsg+0x3e0> (BP);
    5822:	2a a2       	R2 = [P5 + 0x20];
    5824:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x21( 33) */
    5828:	f7 b0       	[SP + 0xc] = R7;
    582a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    582c:	01 e1 b0 2d 	R1.L = 0x2db0;		/* (11696)	R1=0x2db0(11696) */
    5830:	ff e3 e8 d3 	CALL 0x0 <_FlushAddressCacheRecords>;
    5834:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    5836:	2a e5 35 00 	P2 = [P5 + 0xd4];
    583a:	28 e6 39 00 	[P5 + 0xe4] = R0;
    583e:	42 0c       	CC = P2 == 0x0;
    5840:	09 1c       	IF CC JUMP 0x5852 <_uDNS_ReceiveMsg+0x3fe> (BP);
    5842:	4d 30       	R1 = P5;
    5844:	68 e5 aa 00 	R0 = W[P5 + 0x154] (X);
    5848:	2a e4 57 00 	R2 = [P5 + 0x15c];
    584c:	b0 b5       	W[SP + 0xc] = R0;
    584e:	44 30       	R0 = P4;
    5850:	62 00       	CALL (P2);
    5852:	45 30       	R0 = P5;
    5854:	20 64       	R0 += 0x4;		/* (  4) */
    5856:	29 e4 58 00 	R1 = [P5 + 0x160];
    585a:	6a e5 ab 00 	R2 = W[P5 + 0x156] (X);
    585e:	ff e3 d1 d3 	CALL 0x0 <_FlushAddressCacheRecords>;
    5862:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5864:	28 e6 57 00 	[P5 + 0x15c] = R0;
    5868:	28 e6 58 00 	[P5 + 0x160] = R0;
    586c:	00 00       	NOP;
    586e:	28 e4 50 00 	R0 = [P5 + 0x140];
    5872:	00 0c       	CC = R0 == 0x0;
    5874:	07 1d       	IF CC JUMP 0x5a82 <_uDNS_ReceiveMsg+0x62e> (BP);
    5876:	e8 a8       	R0 = W[P5 + 0x6] (X);
    5878:	c1 42       	R1 = R0.L (Z);
    587a:	0a 61       	R2 = 0x21 (X);		/*		R2=0x21( 33) */
    587c:	11 08       	CC = R1 == R2;
    587e:	d4 14       	IF !CC JUMP 0x5a26 <_uDNS_ReceiveMsg+0x5d2> (BP);
    5880:	44 30       	R0 = P4;
    5882:	4d 30       	R1 = P5;
    5884:	ff e3 d2 f0 	CALL 0x3a28 <_GetServiceTarget>;
    5888:	38 30       	R7 = R0;
    588a:	00 0c       	CC = R0 == 0x0;
    588c:	05 1c       	IF CC JUMP 0x5896 <_uDNS_ReceiveMsg+0x442> (BP);
    588e:	08 32       	P1 = R0;
    5890:	08 99       	R0 = B[P1] (Z);
    5892:	00 0c       	CC = R0 == 0x0;
    5894:	6c 14       	IF !CC JUMP 0x596c <_uDNS_ReceiveMsg+0x518> (BP);
    5896:	00 00       	NOP;
    5898:	28 e4 39 00 	R0 = [P5 + 0xe4];
    589c:	18 0c       	CC = R0 == 0x3;
    589e:	3e 14       	IF !CC JUMP 0x591a <_uDNS_ReceiveMsg+0x4c6> (BP);
    58a0:	18 91       	R0 = [P3];
    58a2:	00 0c       	CC = R0 == 0x0;
    58a4:	0a 1c       	IF CC JUMP 0x58b8 <_uDNS_ReceiveMsg+0x464> (BP);
    58a6:	2a a2       	R2 = [P5 + 0x20];
    58a8:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    58aa:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2db0(11696) */
    58ae:	f0 b0       	[SP + 0xc] = R0;
    58b0:	01 e1 d8 2d 	R1.L = 0x2dd8;		/* (11736)	R1=0x2dd8(11736) */
    58b4:	ff e3 a6 d3 	CALL 0x0 <_FlushAddressCacheRecords>;
    58b8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    58ba:	28 e6 50 00 	[P5 + 0x140] = R0;
    58be:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    58c0:	10 0c       	CC = R0 == 0x2;
    58c2:	0a 18       	IF CC JUMP 0x58d6 <_uDNS_ReceiveMsg+0x482>;
    58c4:	29 60       	R1 = 0x5 (X);		/*		R1=0x5(  5) */
    58c6:	08 08       	CC = R0 == R1;
    58c8:	07 18       	IF CC JUMP 0x58d6 <_uDNS_ReceiveMsg+0x482>;
    58ca:	62 60       	R2 = 0xc (X);		/*		R2=0xc( 12) */
    58cc:	10 08       	CC = R0 == R2;
    58ce:	04 18       	IF CC JUMP 0x58d6 <_uDNS_ReceiveMsg+0x482>;
    58d0:	39 61       	R1 = 0x27 (X);		/*		R1=0x27( 39) */
    58d2:	08 08       	CC = R0 == R1;
    58d4:	04 14       	IF !CC JUMP 0x58dc <_uDNS_ReceiveMsg+0x488> (BP);
    58d6:	6a ae       	P2 = [P5 + 0x24];
    58d8:	22 6c       	P2 += 0x4;		/* (  4) */
    58da:	15 20       	JUMP.S 0x5904 <_uDNS_ReceiveMsg+0x4b0>;
    58dc:	7a 60       	R2 = 0xf (X);		/*		R2=0xf( 15) */
    58de:	10 08       	CC = R0 == R2;
    58e0:	0a 18       	IF CC JUMP 0x58f4 <_uDNS_ReceiveMsg+0x4a0>;
    58e2:	91 60       	R1 = 0x12 (X);		/*		R1=0x12( 18) */
    58e4:	08 08       	CC = R0 == R1;
    58e6:	07 18       	IF CC JUMP 0x58f4 <_uDNS_ReceiveMsg+0x4a0>;
    58e8:	aa 60       	R2 = 0x15 (X);		/*		R2=0x15( 21) */
    58ea:	10 08       	CC = R0 == R2;
    58ec:	04 18       	IF CC JUMP 0x58f4 <_uDNS_ReceiveMsg+0x4a0>;
    58ee:	21 61       	R1 = 0x24 (X);		/*		R1=0x24( 36) */
    58f0:	08 08       	CC = R0 == R1;
    58f2:	04 14       	IF !CC JUMP 0x58fa <_uDNS_ReceiveMsg+0x4a6> (BP);
    58f4:	6a ae       	P2 = [P5 + 0x24];
    58f6:	32 6c       	P2 += 0x6;		/* (  6) */
    58f8:	06 20       	JUMP.S 0x5904 <_uDNS_ReceiveMsg+0x4b0>;
    58fa:	0a 61       	R2 = 0x21 (X);		/*		R2=0x21( 33) */
    58fc:	10 08       	CC = R0 == R2;
    58fe:	07 14       	IF !CC JUMP 0x590c <_uDNS_ReceiveMsg+0x4b8> (BP);
    5900:	6a ae       	P2 = [P5 + 0x24];
    5902:	52 6c       	P2 += 0xa;		/* ( 10) */
    5904:	42 0c       	CC = P2 == 0x0;
    5906:	03 18       	IF CC JUMP 0x590c <_uDNS_ReceiveMsg+0x4b8>;
    5908:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    590a:	10 9b       	B[P2] = R0;
    590c:	40 60       	R0 = 0x8 (X);		/*		R0=0x8(  8) */
    590e:	28 e6 39 00 	[P5 + 0xe4] = R0;
    5912:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5914:	68 b6       	W[P5 + 0x12] = R0;
    5916:	28 b6       	W[P5 + 0x10] = R0;
    5918:	59 21       	JUMP.S 0x5bca <_uDNS_ReceiveMsg+0x776>;
    591a:	08 0c       	CC = R0 == 0x1;
    591c:	1b 14       	IF !CC JUMP 0x5952 <_uDNS_ReceiveMsg+0x4fe> (BP);
    591e:	18 91       	R0 = [P3];
    5920:	00 0c       	CC = R0 == 0x0;
    5922:	0b 1c       	IF CC JUMP 0x5938 <_uDNS_ReceiveMsg+0x4e4> (BP);
    5924:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    5926:	2a a2       	R2 = [P5 + 0x20];
    5928:	f0 b0       	[SP + 0xc] = R0;
    592a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x24( 36) */
    592e:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    5930:	01 e1 24 2e 	R1.L = 0x2e24;		/* (11812)	R1=0x2e24(11812) */
    5934:	ff e3 66 d3 	CALL 0x0 <_FlushAddressCacheRecords>;
    5938:	0c 32       	P1 = R4;
    593a:	21 e4 37 00 	R1 = [P4 + 0xdc];
    593e:	08 91       	R0 = [P1];
    5940:	28 e6 2f 00 	[P5 + 0xbc] = R0;
    5944:	01 52       	R0 = R1 - R0;
    5946:	28 e6 30 00 	[P5 + 0xc0] = R0;
    594a:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    594c:	28 e6 39 00 	[P5 + 0xe4] = R0;
    5950:	3d 21       	JUMP.S 0x5bca <_uDNS_ReceiveMsg+0x776>;
    5952:	19 91       	R1 = [P3];
    5954:	01 0c       	CC = R1 == 0x0;
    5956:	64 1c       	IF CC JUMP 0x5a1e <_uDNS_ReceiveMsg+0x5ca> (BP);
    5958:	2a a2       	R2 = [P5 + 0x20];
    595a:	f0 b0       	[SP + 0xc] = R0;
    595c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2e24(11812) */
    5960:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    5962:	01 e1 70 2e 	R1.L = 0x2e70;		/* (11888)	R1=0x2e70(11888) */
    5966:	ff e3 4d d3 	CALL 0x0 <_FlushAddressCacheRecords>;
    596a:	5a 20       	JUMP.S 0x5a1e <_uDNS_ReceiveMsg+0x5ca>;
    596c:	00 00       	NOP;
    596e:	28 e4 39 00 	R0 = [P5 + 0xe4];
    5972:	18 0c       	CC = R0 == 0x3;
    5974:	0a 18       	IF CC JUMP 0x5988 <_uDNS_ReceiveMsg+0x534>;
    5976:	08 0c       	CC = R0 == 0x1;
    5978:	4b 14       	IF !CC JUMP 0x5a0e <_uDNS_ReceiveMsg+0x5ba> (BP);
    597a:	69 a2       	R1 = [P5 + 0x24];
    597c:	51 64       	R1 += 0xa;		/* ( 10) */
    597e:	07 30       	R0 = R7;
    5980:	ff e3 40 d3 	CALL 0x0 <_FlushAddressCacheRecords>;
    5984:	00 0c       	CC = R0 == 0x0;
    5986:	44 14       	IF !CC JUMP 0x5a0e <_uDNS_ReceiveMsg+0x5ba> (BP);
    5988:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    598a:	10 0c       	CC = R0 == 0x2;
    598c:	0a 18       	IF CC JUMP 0x59a0 <_uDNS_ReceiveMsg+0x54c>;
    598e:	29 60       	R1 = 0x5 (X);		/*		R1=0x5(  5) */
    5990:	08 08       	CC = R0 == R1;
    5992:	07 18       	IF CC JUMP 0x59a0 <_uDNS_ReceiveMsg+0x54c>;
    5994:	62 60       	R2 = 0xc (X);		/*		R2=0xc( 12) */
    5996:	10 08       	CC = R0 == R2;
    5998:	04 18       	IF CC JUMP 0x59a0 <_uDNS_ReceiveMsg+0x54c>;
    599a:	39 61       	R1 = 0x27 (X);		/*		R1=0x27( 39) */
    599c:	08 08       	CC = R0 == R1;
    599e:	04 14       	IF !CC JUMP 0x59a6 <_uDNS_ReceiveMsg+0x552> (BP);
    59a0:	6a ae       	P2 = [P5 + 0x24];
    59a2:	22 6c       	P2 += 0x4;		/* (  4) */
    59a4:	15 20       	JUMP.S 0x59ce <_uDNS_ReceiveMsg+0x57a>;
    59a6:	7a 60       	R2 = 0xf (X);		/*		R2=0xf( 15) */
    59a8:	10 08       	CC = R0 == R2;
    59aa:	0a 18       	IF CC JUMP 0x59be <_uDNS_ReceiveMsg+0x56a>;
    59ac:	91 60       	R1 = 0x12 (X);		/*		R1=0x12( 18) */
    59ae:	08 08       	CC = R0 == R1;
    59b0:	07 18       	IF CC JUMP 0x59be <_uDNS_ReceiveMsg+0x56a>;
    59b2:	aa 60       	R2 = 0x15 (X);		/*		R2=0x15( 21) */
    59b4:	10 08       	CC = R0 == R2;
    59b6:	04 18       	IF CC JUMP 0x59be <_uDNS_ReceiveMsg+0x56a>;
    59b8:	21 61       	R1 = 0x24 (X);		/*		R1=0x24( 36) */
    59ba:	08 08       	CC = R0 == R1;
    59bc:	04 14       	IF !CC JUMP 0x59c4 <_uDNS_ReceiveMsg+0x570> (BP);
    59be:	6a ae       	P2 = [P5 + 0x24];
    59c0:	32 6c       	P2 += 0x6;		/* (  6) */
    59c2:	06 20       	JUMP.S 0x59ce <_uDNS_ReceiveMsg+0x57a>;
    59c4:	0a 61       	R2 = 0x21 (X);		/*		R2=0x21( 33) */
    59c6:	10 08       	CC = R0 == R2;
    59c8:	07 14       	IF !CC JUMP 0x59d6 <_uDNS_ReceiveMsg+0x582> (BP);
    59ca:	6a ae       	P2 = [P5 + 0x24];
    59cc:	52 6c       	P2 += 0xa;		/* ( 10) */
    59ce:	42 0c       	CC = P2 == 0x0;
    59d0:	03 18       	IF CC JUMP 0x59d6 <_uDNS_ReceiveMsg+0x582>;
    59d2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    59d4:	10 9b       	B[P2] = R0;
    59d6:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    59d8:	69 b6       	W[P5 + 0x12] = R1;
    59da:	29 b6       	W[P5 + 0x10] = R1;
    59dc:	40 60       	R0 = 0x8 (X);		/*		R0=0x8(  8) */
    59de:	19 91       	R1 = [P3];
    59e0:	28 e6 39 00 	[P5 + 0xe4] = R0;
    59e4:	01 0c       	CC = R1 == 0x0;
    59e6:	0c 1c       	IF CC JUMP 0x59fe <_uDNS_ReceiveMsg+0x5aa> (BP);
    59e8:	29 a2       	R1 = [P5 + 0x20];
    59ea:	f1 b0       	[SP + 0xc] = R1;
    59ec:	30 b1       	[SP + 0x10] = R0;
    59ee:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_FlushAddressCacheRecords>(  0) */
    59f2:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    59f4:	01 e1 b8 2e 	R1.L = 0x2eb8;		/* (11960)	R1=0x2eb8(11960) */
    59f8:	17 30       	R2 = R7;
    59fa:	ff e3 03 d3 	CALL 0x0 <_FlushAddressCacheRecords>;
    59fe:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5a00:	28 e6 50 00 	[P5 + 0x140] = R0;
    5a04:	44 30       	R0 = P4;
    5a06:	4d 30       	R1 = P5;
    5a08:	ff e3 b6 f2 	CALL 0x3f74 <_UpdateOneSRVRecord>;
    5a0c:	df 20       	JUMP.S 0x5bca <_uDNS_ReceiveMsg+0x776>;
    5a0e:	00 00       	NOP;
    5a10:	28 e4 39 00 	R0 = [P5 + 0xe4];
    5a14:	08 0c       	CC = R0 == 0x1;
    5a16:	04 14       	IF !CC JUMP 0x5a1e <_uDNS_ReceiveMsg+0x5ca> (BP);
    5a18:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    5a1a:	28 e6 39 00 	[P5 + 0xe4] = R0;
    5a1e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5a20:	28 e6 50 00 	[P5 + 0x140] = R0;
    5a24:	d3 20       	JUMP.S 0x5bca <_uDNS_ReceiveMsg+0x776>;
    5a26:	19 91       	R1 = [P3];
    5a28:	01 0c       	CC = R1 == 0x0;
    5a2a:	10 1c       	IF CC JUMP 0x5a4a <_uDNS_ReceiveMsg+0x5f6> (BP);
    5a2c:	2f a2       	R7 = [P5 + 0x20];
    5a2e:	ff e3 e9 d2 	CALL 0x0 <_FlushAddressCacheRecords>;
    5a32:	f0 b0       	[SP + 0xc] = R0;
    5a34:	28 e4 39 00 	R0 = [P5 + 0xe4];
    5a38:	30 b1       	[SP + 0x10] = R0;
    5a3a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2eb8(11960) */
    5a3e:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    5a40:	01 e1 14 2f 	R1.L = 0x2f14;		/* (12052)	R1=0x2f14(12052) */
    5a44:	17 30       	R2 = R7;
    5a46:	ff e3 dd d2 	CALL 0x0 <_FlushAddressCacheRecords>;
    5a4a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5a4c:	28 e6 50 00 	[P5 + 0x140] = R0;
    5a50:	28 e4 39 00 	R0 = [P5 + 0xe4];
    5a54:	18 0c       	CC = R0 == 0x3;
    5a56:	14 18       	IF CC JUMP 0x5a7e <_uDNS_ReceiveMsg+0x62a>;
    5a58:	45 30       	R0 = P5;
    5a5a:	54 30       	R2 = P4;
    5a5c:	ba 65       	R2 += 0x37;		/* ( 55) */
    5a5e:	69 a2       	R1 = [P5 + 0x24];
    5a60:	21 64       	R1 += 0x4;		/* (  4) */
    5a62:	20 64       	R0 += 0x4;		/* (  4) */
    5a64:	ff e3 ce d2 	CALL 0x0 <_FlushAddressCacheRecords>;
    5a68:	10 30       	R2 = R0;
    5a6a:	28 e4 39 00 	R0 = [P5 + 0xe4];
    5a6e:	f0 b0       	[SP + 0xc] = R0;
    5a70:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2f14(12052) */
    5a74:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5a76:	01 e1 4c 2f 	R1.L = 0x2f4c;		/* (12108)	R1=0x2f4c(12108) */
    5a7a:	ff e3 c3 d2 	CALL 0x0 <_FlushAddressCacheRecords>;
    5a7e:	40 60       	R0 = 0x8 (X);		/*		R0=0x8(  8) */
    5a80:	66 2f       	JUMP.S 0x594c <_uDNS_ReceiveMsg+0x4f8>;
    5a82:	00 00       	NOP;
    5a84:	28 e4 39 00 	R0 = [P5 + 0xe4];
    5a88:	08 0c       	CC = R0 == 0x1;
    5a8a:	04 18       	IF CC JUMP 0x5a92 <_uDNS_ReceiveMsg+0x63e>;
    5a8c:	29 60       	R1 = 0x5 (X);		/*		R1=0x5(  5) */
    5a8e:	08 08       	CC = R0 == R1;
    5a90:	39 14       	IF !CC JUMP 0x5b02 <_uDNS_ReceiveMsg+0x6ae> (BP);
    5a92:	07 0c       	CC = R7 == 0x0;
    5a94:	09 10       	IF !CC JUMP 0x5aa6 <_uDNS_ReceiveMsg+0x652>;
    5a96:	2a 60       	R2 = 0x5 (X);		/*		R2=0x5(  5) */
    5a98:	10 08       	CC = R0 == R2;
    5a9a:	00 02       	R0 = CC;
    5a9c:	11 60       	R1 = 0x2 (X);		/*		R1=0x2(  2) */
    5a9e:	00 4b       	BITTGL (R0, 0x0);		/* bit  0 */
    5aa0:	29 e6 39 00 	[P5 + 0xe4] = R1;
    5aa4:	30 20       	JUMP.S 0x5b04 <_uDNS_ReceiveMsg+0x6b0>;
    5aa6:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    5aa8:	2a a2       	R2 = [P5 + 0x20];
    5aaa:	f0 b0       	[SP + 0xc] = R0;
    5aac:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2(  2) */
    5ab0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5ab2:	37 b1       	[SP + 0x10] = R7;
    5ab4:	01 e1 94 2f 	R1.L = 0x2f94;		/* (12180)	R1=0x2f94(12180) */
    5ab8:	ff e3 a4 d2 	CALL 0x0 <_FlushAddressCacheRecords>;
    5abc:	28 e4 3c 00 	R0 = [P5 + 0xf0];
    5ac0:	00 0c       	CC = R0 == 0x0;
    5ac2:	20 14       	IF !CC JUMP 0x5b02 <_uDNS_ReceiveMsg+0x6ae> (BP);
    5ac4:	28 e4 3a 00 	R0 = [P5 + 0xe8];
    5ac8:	00 0c       	CC = R0 == 0x0;
    5aca:	1c 1c       	IF CC JUMP 0x5b02 <_uDNS_ReceiveMsg+0x6ae> (BP);
    5acc:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
    5ace:	40 e1 fe ff 	R0.H = 0xfffe;		/* ( -2)	R0=0xfffeffff(-65537) */
    5ad2:	07 08       	CC = R7 == R0;
    5ad4:	17 14       	IF !CC JUMP 0x5b02 <_uDNS_ReceiveMsg+0x6ae> (BP);
    5ad6:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x0 <_FlushAddressCacheRecords> */
    5ada:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_FlushAddressCacheRecords> */
    5ade:	ed 42       	R5 = R5.L (Z);
    5ae0:	08 95       	R0 = W[P1] (Z);
    5ae2:	05 08       	CC = R5 == R0;
    5ae4:	0f 14       	IF !CC JUMP 0x5b02 <_uDNS_ReceiveMsg+0x6ae> (BP);
    5ae6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2f94(12180) */
    5aea:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5aec:	2a a2       	R2 = [P5 + 0x20];
    5aee:	01 e1 e4 2f 	R1.L = 0x2fe4;		/* (12260)	R1=0x2fe4(12260) */
    5af2:	ff e3 87 d2 	CALL 0x0 <_FlushAddressCacheRecords>;
    5af6:	14 32       	P2 = R4;
    5af8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5afa:	28 e6 3a 00 	[P5 + 0xe8] = R0;
    5afe:	10 91       	R0 = [P2];
    5b00:	1e 20       	JUMP.S 0x5b3c <_uDNS_ReceiveMsg+0x6e8>;
    5b02:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    5b04:	29 e4 59 00 	R1 = [P5 + 0x164];
    5b08:	01 0c       	CC = R1 == 0x0;
    5b0a:	21 1c       	IF CC JUMP 0x5b4c <_uDNS_ReceiveMsg+0x6f8> (BP);
    5b0c:	2a e4 39 00 	R2 = [P5 + 0xe4];
    5b10:	12 0c       	CC = R2 == 0x2;
    5b12:	1d 14       	IF !CC JUMP 0x5b4c <_uDNS_ReceiveMsg+0x6f8> (BP);
    5b14:	38 60       	R0 = 0x7 (X);		/*		R0=0x7(  7) */
    5b16:	28 e6 39 00 	[P5 + 0xe4] = R0;
    5b1a:	68 e5 ac 00 	R0 = W[P5 + 0x158] (X);
    5b1e:	68 e6 ab 00 	W[P5 + 0x156] = R0;
    5b22:	68 a2       	R0 = [P5 + 0x24];
    5b24:	28 e6 57 00 	[P5 + 0x15c] = R0;
    5b28:	0c 32       	P1 = R4;
    5b2a:	28 aa       	R0 = W[P5 + 0x10] (X);
    5b2c:	68 e6 aa 00 	W[P5 + 0x154] = R0;
    5b30:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5b32:	28 e6 59 00 	[P5 + 0x164] = R0;
    5b36:	29 e6 58 00 	[P5 + 0x160] = R1;
    5b3a:	08 91       	R0 = [P1];
    5b3c:	21 e4 37 00 	R1 = [P4 + 0xdc];
    5b40:	28 e6 2f 00 	[P5 + 0xbc] = R0;
    5b44:	01 52       	R0 = R1 - R0;
    5b46:	28 e6 30 00 	[P5 + 0xc0] = R0;
    5b4a:	40 20       	JUMP.S 0x5bca <_uDNS_ReceiveMsg+0x776>;
    5b4c:	07 0c       	CC = R7 == 0x0;
    5b4e:	3e 10       	IF !CC JUMP 0x5bca <_uDNS_ReceiveMsg+0x776>;
    5b50:	00 0c       	CC = R0 == 0x0;
    5b52:	3c 1c       	IF CC JUMP 0x5bca <_uDNS_ReceiveMsg+0x776> (BP);
    5b54:	e8 a3       	R0 = [P5 + 0x3c];
    5b56:	00 0c       	CC = R0 == 0x0;
    5b58:	39 18       	IF CC JUMP 0x5bca <_uDNS_ReceiveMsg+0x776>;
    5b5a:	18 91       	R0 = [P3];
    5b5c:	00 0c       	CC = R0 == 0x0;
    5b5e:	09 1c       	IF CC JUMP 0x5b70 <_uDNS_ReceiveMsg+0x71c> (BP);
    5b60:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2fe4(12260) */
    5b64:	2a a2       	R2 = [P5 + 0x20];
    5b66:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    5b68:	01 e1 34 30 	R1.L = 0x3034;		/* (12340)	R1=0x3034(12340) */
    5b6c:	ff e3 4a d2 	CALL 0x0 <_FlushAddressCacheRecords>;
    5b70:	00 00       	NOP;
    5b72:	20 a3       	R0 = [P4 + 0x30];
    5b74:	08 64       	R0 += 0x1;		/* (  1) */
    5b76:	e1 a2       	R1 = [P4 + 0x2c];
    5b78:	20 b3       	[P4 + 0x30] = R0;
    5b7a:	01 08       	CC = R1 == R0;
    5b7c:	0e 18       	IF CC JUMP 0x5b98 <_uDNS_ReceiveMsg+0x744>;
    5b7e:	f1 b0       	[SP + 0xc] = R1;
    5b80:	30 b1       	[SP + 0x10] = R0;
    5b82:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3034(12340) */
    5b86:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x5(  5) */
    5b8a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5b8c:	01 e1 54 22 	R1.L = 0x2254;		/* (8788)	R1=0x2254(8788) */
    5b90:	02 e1 e0 00 	R2.L = 0xe0;		/* (224)	R2=0xe0(224) */
    5b94:	ff e3 36 d2 	CALL 0x0 <_FlushAddressCacheRecords>;
    5b98:	ea af       	P2 = [P5 + 0x3c];
    5b9a:	44 30       	R0 = P4;
    5b9c:	4d 30       	R1 = P5;
    5b9e:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    5ba0:	62 00       	CALL (P2);
    5ba2:	e1 a2       	R1 = [P4 + 0x2c];
    5ba4:	20 a3       	R0 = [P4 + 0x30];
    5ba6:	01 08       	CC = R1 == R0;
    5ba8:	0e 18       	IF CC JUMP 0x5bc4 <_uDNS_ReceiveMsg+0x770>;
    5baa:	f1 b0       	[SP + 0xc] = R1;
    5bac:	30 b1       	[SP + 0x10] = R0;
    5bae:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2254(8788) */
    5bb2:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x0 <_FlushAddressCacheRecords>(  0) */
    5bb6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5bb8:	01 e1 00 23 	R1.L = 0x2300;		/* (8960)	R1=0x2300(8960) */
    5bbc:	02 e1 e0 00 	R2.L = 0xe0;		/* (224)	R2=0xe0(224) */
    5bc0:	ff e3 20 d2 	CALL 0x0 <_FlushAddressCacheRecords>;
    5bc4:	20 a3       	R0 = [P4 + 0x30];
    5bc6:	f8 67       	R0 += -0x1;		/* ( -1) */
    5bc8:	20 b3       	[P4 + 0x30] = R0;
    5bca:	00 00       	NOP;
    5bcc:	25 e5 f5 07 	P5 = [P4 + 0x1fd4];
    5bd0:	45 0c       	CC = P5 == 0x0;
    5bd2:	02 18       	IF CC JUMP 0x5bd6 <_uDNS_ReceiveMsg+0x782>;
    5bd4:	eb 2c       	JUMP.S 0x55aa <_uDNS_ReceiveMsg+0x156>;
    5bd6:	05 20       	JUMP.S 0x5be0 <_uDNS_ReceiveMsg+0x78c>;
    5bd8:	27 e1 fd bf 	R7 = -0x4003 (X);		/*		R7=0xffffbffd(-16387) */
    5bdc:	17 4f       	R7 <<= 0x2;
    5bde:	74 2d       	JUMP.S 0x56c6 <_uDNS_ReceiveMsg+0x272>;
    5be0:	e6 6d       	SP += 0x3c;		/* ( 60) */
    5be2:	26 6c       	SP += 0x4;		/* (  4) */
    5be4:	77 90       	FP = [SP++];
    5be6:	27 01       	RETS = [SP++];
    5be8:	a3 05       	(R7:4, P5:3) = [SP++];
    5bea:	10 00       	RTS;

00005bec <_sendLLQRefresh>:
_sendLLQRefresh():
    5bec:	eb 05       	[--SP] = (R7:5, P5:3);
    5bee:	29 32       	P5 = R1;
    5bf0:	20 32       	P4 = R0;
    5bf2:	00 e8 0f 00 	LINK 0x3c;		/* (60) */
    5bf6:	28 e4 41 00 	R0 = [P5 + 0x104];
    5bfa:	00 0c       	CC = R0 == 0x0;
    5bfc:	32 1c       	IF CC JUMP 0x5c60 <_sendLLQRefresh+0x74> (BP);
    5bfe:	28 e4 40 00 	R0 = [P5 + 0x100];
    5c02:	18 0c       	CC = R0 == 0x3;
    5c04:	05 14       	IF !CC JUMP 0x5c0e <_sendLLQRefresh+0x22> (BP);
    5c06:	68 e5 86 00 	R0 = W[P5 + 0x10c] (X);
    5c0a:	10 0d       	CC = R0 <= 0x2;
    5c0c:	09 14       	IF !CC JUMP 0x5c1e <_sendLLQRefresh+0x32> (BP);
    5c0e:	00 00       	NOP;
    5c10:	29 e4 42 00 	R1 = [P5 + 0x108];
    5c14:	20 e4 37 00 	R0 = [P4 + 0xdc];
    5c18:	01 52       	R0 = R1 - R0;
    5c1a:	80 0c       	CC = R0 < 0x0;
    5c1c:	22 14       	IF !CC JUMP 0x5c60 <_sendLLQRefresh+0x74> (BP);
    5c1e:	00 00       	NOP;
    5c20:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    5c24:	ff e3 ee d1 	CALL 0x0 <_FlushAddressCacheRecords>;
    5c28:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x460 */
    5c2c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    5c30:	11 91       	R1 = [P2];
    5c32:	f0 b0       	[SP + 0xc] = R0;
    5c34:	20 e1 84 03 	R0 = 0x384 (X);		/*		R0=0x384(900) */
    5c38:	c8 40       	R0 *= R1;
    5c3a:	2b e1 34 01 	P3 = 0x134 (X);		/*		P3=0x134(308) */
    5c3e:	ff e3 e1 d1 	CALL 0x0 <_FlushAddressCacheRecords>;
    5c42:	30 b1       	[SP + 0x10] = R0;
    5c44:	dd 5a       	P3 = P5 + P3;
    5c46:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2300(8960) */
    5c4a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5c4c:	01 e1 70 30 	R1.L = 0x3070;		/* (12400)	R1=0x3070(12400) */
    5c50:	53 30       	R2 = P3;
    5c52:	ff e3 d7 d1 	CALL 0x0 <_FlushAddressCacheRecords>;
    5c56:	44 30       	R0 = P4;
    5c58:	4d 30       	R1 = P5;
    5c5a:	ff e3 df d6 	CALL 0xa18 <_StartLLQPolling>;
    5c5e:	94 21       	JUMP.S 0x5f86 <_sendLLQRefresh+0x39a>;
    5c60:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    5c62:	70 e6 12 00 	W[SP + 0x24] = R0;
    5c66:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    5c68:	70 e6 13 00 	W[SP + 0x26] = R0;
    5c6c:	28 e4 3e 00 	R0 = [P5 + 0xf8];
    5c70:	00 0c       	CC = R0 == 0x0;
    5c72:	09 18       	IF CC JUMP 0x5c84 <_sendLLQRefresh+0x98>;
    5c74:	2a e1 e0 00 	P2 = 0xe0 (X);		/*		P2=0xe0(224) */
    5c78:	95 5a       	P2 = P5 + P2;
    5c7a:	4a 30       	R1 = P2;
    5c7c:	44 30       	R0 = P4;
    5c7e:	ff e3 9f d7 	CALL 0xbbc <_GetLLQEventPort>;
    5c82:	02 20       	JUMP.S 0x5c86 <_sendLLQRefresh+0x9a>;
    5c84:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5c86:	70 e6 14 00 	W[SP + 0x28] = R0;
    5c8a:	28 e4 44 00 	R0 = [P5 + 0x110];
    5c8e:	f0 b2       	[SP + 0x2c] = R0;
    5c90:	29 e4 45 00 	R1 = [P5 + 0x114];
    5c94:	28 e4 41 00 	R0 = [P5 + 0x104];
    5c98:	2b e1 8c 59 	P3 = 0x598c (X);		/*		P3=0x598c(22924) */
    5c9c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0xe0 */
    5ca0:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    5ca4:	31 b3       	[SP + 0x30] = R1;
    5ca6:	70 b3       	[SP + 0x34] = R0;
    5ca8:	dc 5a       	P3 = P4 + P3;
    5caa:	2f e1 98 59 	FP = 0x5998 (X);		/*		FP=0x5998(22936) */
    5cae:	fc 5b       	FP = P4 + FP;
    5cb0:	12 95       	R2 = W[P2] (Z);
    5cb2:	69 e5 99 00 	R1 = W[P5 + 0x132] (X);
    5cb6:	43 30       	R0 = P3;
    5cb8:	ff e3 a4 d1 	CALL 0x0 <_FlushAddressCacheRecords>;
    5cbc:	46 30       	R0 = SP;
    5cbe:	20 65       	R0 += 0x24;		/* ( 36) */
    5cc0:	f0 b0       	[SP + 0xc] = R0;
    5cc2:	55 30       	R2 = P5;
    5cc4:	43 30       	R0 = P3;
    5cc6:	4f 30       	R1 = FP;
    5cc8:	ff e3 40 d6 	CALL 0x948 <_putLLQ>;
    5ccc:	10 30       	R2 = R0;
    5cce:	b0 b3       	[SP + 0x38] = R0;
    5cd0:	00 0c       	CC = R0 == 0x0;
    5cd2:	10 14       	IF !CC JUMP 0x5cf2 <_sendLLQRefresh+0x106> (BP);
    5cd4:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    5cd8:	ff e3 94 d1 	CALL 0x0 <_FlushAddressCacheRecords>;
    5cdc:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    5ce0:	95 5a       	P2 = P5 + P2;
    5ce2:	f0 b0       	[SP + 0xc] = R0;
    5ce4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3070(12400) */
    5ce8:	52 30       	R2 = P2;
    5cea:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5cec:	01 e1 ac 30 	R1.L = 0x30ac;		/* (12460)	R1=0x30ac(12460) */
    5cf0:	bd 20       	JUMP.S 0x5e6a <_sendLLQRefresh+0x27e>;
    5cf2:	2a e1 ec 22 	P2 = 0x22ec (X);		/*		P2=0x22ec(8940) */
    5cf6:	68 a3       	R0 = [P5 + 0x34];
    5cf8:	f0 b0       	[SP + 0xc] = R0;
    5cfa:	d7 5b       	FP = FP + P2;
    5cfc:	37 bd       	[SP + 0x10] = FP;
    5cfe:	44 30       	R0 = P4;
    5d00:	4b 30       	R1 = P3;
    5d02:	ff e3 7f d1 	CALL 0x0 <_FlushAddressCacheRecords>;
    5d06:	b0 b3       	[SP + 0x38] = R0;
    5d08:	00 0c       	CC = R0 == 0x0;
    5d0a:	10 14       	IF !CC JUMP 0x5d2a <_sendLLQRefresh+0x13e> (BP);
    5d0c:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    5d10:	ff e3 78 d1 	CALL 0x0 <_FlushAddressCacheRecords>;
    5d14:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    5d18:	95 5a       	P2 = P5 + P2;
    5d1a:	f0 b0       	[SP + 0xc] = R0;
    5d1c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x30ac(12460) */
    5d20:	52 30       	R2 = P2;
    5d22:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5d24:	01 e1 d4 30 	R1.L = 0x30d4;		/* (12500)	R1=0x30d4(12500) */
    5d28:	a1 20       	JUMP.S 0x5e6a <_sendLLQRefresh+0x27e>;
    5d2a:	00 00       	NOP;
    5d2c:	6a af       	P2 = [P5 + 0x34];
    5d2e:	42 0c       	CC = P2 == 0x0;
    5d30:	68 1c       	IF CC JUMP 0x5e00 <_sendLLQRefresh+0x214> (BP);
    5d32:	90 a0       	R0 = [P2 + 0x8];
    5d34:	00 0c       	CC = R0 == 0x0;
    5d36:	65 18       	IF CC JUMP 0x5e00 <_sendLLQRefresh+0x214>;
    5d38:	2f e1 90 59 	FP = 0x5990 (X);		/*		FP=0x5990(22928) */
    5d3c:	fc 5b       	FP = P4 + FP;
    5d3e:	29 e1 92 59 	P1 = 0x5992 (X);		/*		P1=0x5992(22930) */
    5d42:	38 99       	R0 = B[FP] (Z);
    5d44:	b9 e4 01 00 	R1 = B[FP + 0x1] (Z);
    5d48:	40 4f       	R0 <<= 0x8;
    5d4a:	08 56       	R0 = R0 | R1;
    5d4c:	60 e6 c8 2c 	W[P4 + 0x5990] = R0;
    5d50:	4c 5a       	P1 = P4 + P1;
    5d52:	08 99       	R0 = B[P1] (Z);
    5d54:	89 e4 01 00 	R1 = B[P1 + 0x1] (Z);
    5d58:	79 30       	R7 = P1;
    5d5a:	40 4f       	R0 <<= 0x8;
    5d5c:	08 56       	R0 = R0 | R1;
    5d5e:	29 e1 94 59 	P1 = 0x5994 (X);		/*		P1=0x5994(22932) */
    5d62:	60 e6 c9 2c 	W[P4 + 0x5992] = R0;
    5d66:	4c 5a       	P1 = P4 + P1;
    5d68:	08 99       	R0 = B[P1] (Z);
    5d6a:	89 e4 01 00 	R1 = B[P1 + 0x1] (Z);
    5d6e:	71 30       	R6 = P1;
    5d70:	40 4f       	R0 <<= 0x8;
    5d72:	08 56       	R0 = R0 | R1;
    5d74:	29 e1 96 59 	P1 = 0x5996 (X);		/*		P1=0x5996(22934) */
    5d78:	4c 5a       	P1 = P4 + P1;
    5d7a:	60 e6 ca 2c 	W[P4 + 0x5994] = R0;
    5d7e:	08 99       	R0 = B[P1] (Z);
    5d80:	89 e4 01 00 	R1 = B[P1 + 0x1] (Z);
    5d84:	40 4f       	R0 <<= 0x8;
    5d86:	08 56       	R0 = R0 | R1;
    5d88:	60 e6 cb 2c 	W[P4 + 0x5996] = R0;
    5d8c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5d8e:	b0 b5       	W[SP + 0xc] = R0;
    5d90:	4e 30       	R1 = SP;
    5d92:	69 30       	R5 = P1;
    5d94:	43 30       	R0 = P3;
    5d96:	c1 65       	R1 += 0x38;		/* ( 56) */
    5d98:	52 30       	R2 = P2;
    5d9a:	ff e3 33 d1 	CALL 0x0 <_FlushAddressCacheRecords>;
    5d9e:	0f 32       	P1 = R7;
    5da0:	38 99       	R0 = B[FP] (Z);
    5da2:	b9 e4 01 00 	R1 = B[FP + 0x1] (Z);
    5da6:	40 4f       	R0 <<= 0x8;
    5da8:	08 56       	R0 = R0 | R1;
    5daa:	60 e6 c8 2c 	W[P4 + 0x5990] = R0;
    5dae:	16 32       	P2 = R6;
    5db0:	08 99       	R0 = B[P1] (Z);
    5db2:	89 e4 01 00 	R1 = B[P1 + 0x1] (Z);
    5db6:	40 4f       	R0 <<= 0x8;
    5db8:	08 56       	R0 = R0 | R1;
    5dba:	60 e6 c9 2c 	W[P4 + 0x5992] = R0;
    5dbe:	0d 32       	P1 = R5;
    5dc0:	10 99       	R0 = B[P2] (Z);
    5dc2:	91 e4 01 00 	R1 = B[P2 + 0x1] (Z);
    5dc6:	40 4f       	R0 <<= 0x8;
    5dc8:	08 56       	R0 = R0 | R1;
    5dca:	60 e6 ca 2c 	W[P4 + 0x5994] = R0;
    5dce:	08 99       	R0 = B[P1] (Z);
    5dd0:	89 e4 01 00 	R1 = B[P1 + 0x1] (Z);
    5dd4:	40 4f       	R0 <<= 0x8;
    5dd6:	08 56       	R0 = R0 | R1;
    5dd8:	60 e6 cb 2c 	W[P4 + 0x5996] = R0;
    5ddc:	b0 a3       	R0 = [SP + 0x38];
    5dde:	00 0c       	CC = R0 == 0x0;
    5de0:	10 14       	IF !CC JUMP 0x5e00 <_sendLLQRefresh+0x214> (BP);
    5de2:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    5de6:	ff e3 0d d1 	CALL 0x0 <_FlushAddressCacheRecords>;
    5dea:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    5dee:	95 5a       	P2 = P5 + P2;
    5df0:	f0 b0       	[SP + 0xc] = R0;
    5df2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x30d4(12500) */
    5df6:	52 30       	R2 = P2;
    5df8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5dfa:	01 e1 00 31 	R1.L = 0x3100;		/* (12544)	R1=0x3100(12544) */
    5dfe:	36 20       	JUMP.S 0x5e6a <_sendLLQRefresh+0x27e>;
    5e00:	00 00       	NOP;
    5e02:	6a af       	P2 = [P5 + 0x34];
    5e04:	42 0c       	CC = P2 == 0x0;
    5e06:	4d 1c       	IF CC JUMP 0x5ea0 <_sendLLQRefresh+0x2b4> (BP);
    5e08:	90 a0       	R0 = [P2 + 0x8];
    5e0a:	00 0c       	CC = R0 == 0x0;
    5e0c:	4a 1c       	IF CC JUMP 0x5ea0 <_sendLLQRefresh+0x2b4> (BP);
    5e0e:	28 e4 3e 00 	R0 = [P5 + 0xf8];
    5e12:	00 0c       	CC = R0 == 0x0;
    5e14:	46 14       	IF !CC JUMP 0x5ea0 <_sendLLQRefresh+0x2b4> (BP);
    5e16:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    5e1a:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    5e1e:	10 91       	R0 = [P2];
    5e20:	00 0c       	CC = R0 == 0x0;
    5e22:	11 1c       	IF CC JUMP 0x5e44 <_sendLLQRefresh+0x258> (BP);
    5e24:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    5e28:	ff e3 ec d0 	CALL 0x0 <_FlushAddressCacheRecords>;
    5e2c:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    5e30:	95 5a       	P2 = P5 + P2;
    5e32:	f0 b0       	[SP + 0xc] = R0;
    5e34:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3100(12544) */
    5e38:	52 30       	R2 = P2;
    5e3a:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    5e3c:	01 e1 38 31 	R1.L = 0x3138;		/* (12600)	R1=0x3138(12600) */
    5e40:	ff e3 e0 d0 	CALL 0x0 <_FlushAddressCacheRecords>;
    5e44:	00 00       	NOP;
    5e46:	2a e5 37 00 	P2 = [P5 + 0xdc];
    5e4a:	42 0c       	CC = P2 == 0x0;
    5e4c:	12 14       	IF !CC JUMP 0x5e70 <_sendLLQRefresh+0x284> (BP);
    5e4e:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    5e52:	ff e3 d7 d0 	CALL 0x0 <_FlushAddressCacheRecords>;
    5e56:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    5e5a:	95 5a       	P2 = P5 + P2;
    5e5c:	f0 b0       	[SP + 0xc] = R0;
    5e5e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3138(12600) */
    5e62:	52 30       	R2 = P2;
    5e64:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5e66:	01 e1 6c 31 	R1.L = 0x316c;		/* (12652)	R1=0x316c(12652) */
    5e6a:	ff e3 cb d0 	CALL 0x0 <_FlushAddressCacheRecords>;
    5e6e:	8c 20       	JUMP.S 0x5f86 <_sendLLQRefresh+0x39a>;
    5e70:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    5e72:	f0 b0       	[SP + 0xc] = R0;
    5e74:	29 e1 e0 00 	P1 = 0xe0 (X);		/*		P1=0xe0(224) */
    5e78:	68 e5 7a 00 	R0 = W[P5 + 0xf4] (X);
    5e7c:	4d 5a       	P1 = P5 + P1;
    5e7e:	31 bd       	[SP + 0x10] = P1;
    5e80:	b0 b6       	W[SP + 0x14] = R0;
    5e82:	29 e1 0a 02 	P1 = 0x20a (X);		/*		P1=0x20a(522) */
    5e86:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5e88:	8a 5a       	P2 = P2 + P1;
    5e8a:	30 b2       	[SP + 0x20] = R0;
    5e8c:	b2 bd       	[SP + 0x18] = P2;
    5e8e:	f5 bd       	[SP + 0x1c] = P5;
    5e90:	44 30       	R0 = P4;
    5e92:	4b 30       	R1 = P3;
    5e94:	b2 a3       	R2 = [SP + 0x38];
    5e96:	ff e3 bd e9 	CALL 0x3210 <_MakeTCPConn>;
    5e9a:	28 e6 3e 00 	[P5 + 0xf8] = R0;
    5e9e:	68 20       	JUMP.S 0x5f6e <_sendLLQRefresh+0x382>;
    5ea0:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x20a */
    5ea4:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_FlushAddressCacheRecords> */
    5ea8:	08 91       	R0 = [P1];
    5eaa:	00 0c       	CC = R0 == 0x0;
    5eac:	24 1c       	IF CC JUMP 0x5ef4 <_sendLLQRefresh+0x308> (BP);
    5eae:	42 0c       	CC = P2 == 0x0;
    5eb0:	0d 1c       	IF CC JUMP 0x5eca <_sendLLQRefresh+0x2de> (BP);
    5eb2:	47 e1 00 00 	R7.H = 0x0;		/* (  0)	R7=0xbffd(49149) */
    5eb6:	07 e1 6c 30 	R7.L = 0x306c;		/* (12396)	R7=0x306c(12396) */
    5eba:	90 a0       	R0 = [P2 + 0x8];
    5ebc:	00 0c       	CC = R0 == 0x0;
    5ebe:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_FlushAddressCacheRecords>(  0) */
    5ec2:	00 e1 f0 0d 	R0.L = 0xdf0;		/* (3568)	R0=0xdf0(3568) */
    5ec6:	38 07       	IF CC R7 = R0;
    5ec8:	05 20       	JUMP.S 0x5ed2 <_sendLLQRefresh+0x2e6>;
    5eca:	47 e1 00 00 	R7.H = 0x0;		/* (  0)	R7=0x306c(12396) */
    5ece:	07 e1 f0 0d 	R7.L = 0xdf0;		/* (3568)	R7=0xdf0(3568) */
    5ed2:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    5ed6:	ff e3 95 d0 	CALL 0x0 <_FlushAddressCacheRecords>;
    5eda:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    5ede:	95 5a       	P2 = P5 + P2;
    5ee0:	30 b1       	[SP + 0x10] = R0;
    5ee2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x316c(12652) */
    5ee6:	f2 bc       	[SP + 0xc] = P2;
    5ee8:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    5eea:	01 e1 a0 31 	R1.L = 0x31a0;		/* (12704)	R1=0x31a0(12704) */
    5eee:	17 30       	R2 = R7;
    5ef0:	ff e3 88 d0 	CALL 0x0 <_FlushAddressCacheRecords>;
    5ef4:	29 e1 e0 00 	P1 = 0xe0 (X);		/*		P1=0xe0(224) */
    5ef8:	2a e5 3e 00 	P2 = [P5 + 0xf8];
    5efc:	b2 a3       	R2 = [SP + 0x38];
    5efe:	29 e4 30 00 	R1 = [P5 + 0xc0];
    5f02:	4d 5a       	P1 = P5 + P1;
    5f04:	42 0c       	CC = P2 == 0x0;
    5f06:	03 1c       	IF CC JUMP 0x5f0c <_sendLLQRefresh+0x320> (BP);
    5f08:	50 a0       	R0 = [P2 + 0x4];
    5f0a:	02 20       	JUMP.S 0x5f0e <_sendLLQRefresh+0x322>;
    5f0c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5f0e:	31 b1       	[SP + 0x10] = R1;
    5f10:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    5f14:	69 e5 7a 00 	R1 = W[P5 + 0xf4] (X);
    5f18:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    5f1c:	13 91       	R3 = [P2];
    5f1e:	31 b7       	W[SP + 0x18] = R1;
    5f20:	f0 b1       	[SP + 0x1c] = R0;
    5f22:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    5f24:	f3 b0       	[SP + 0xc] = R3;
    5f26:	71 bd       	[SP + 0x14] = P1;
    5f28:	37 b2       	[SP + 0x20] = R7;
    5f2a:	44 30       	R0 = P4;
    5f2c:	4b 30       	R1 = P3;
    5f2e:	ff e3 69 d0 	CALL 0x0 <_FlushAddressCacheRecords>;
    5f32:	00 0c       	CC = R0 == 0x0;
    5f34:	1d 1c       	IF CC JUMP 0x5f6e <_sendLLQRefresh+0x382> (BP);
    5f36:	29 e4 3e 00 	R1 = [P5 + 0xf8];
    5f3a:	01 0c       	CC = R1 == 0x0;
    5f3c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x31a0(12704) */
    5f40:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0xe0(224) */
    5f44:	01 e1 00 04 	R1.L = 0x400;		/* (1024)	R1=0x400(1024) */
    5f48:	02 e1 08 04 	R2.L = 0x408;		/* (1032)	R2=0x408(1032) */
    5f4c:	11 06       	IF !CC R2 = R1;
    5f4e:	f0 b0       	[SP + 0xc] = R0;
    5f50:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x400(1024) */
    5f54:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    5f56:	01 e1 d4 31 	R1.L = 0x31d4;		/* (12756)	R1=0x31d4(12756) */
    5f5a:	ff e3 53 d0 	CALL 0x0 <_FlushAddressCacheRecords>;
    5f5e:	28 e4 3e 00 	R0 = [P5 + 0xf8];
    5f62:	00 0c       	CC = R0 == 0x0;
    5f64:	05 18       	IF CC JUMP 0x5f6e <_sendLLQRefresh+0x382>;
    5f66:	ff e3 69 e6 	CALL 0x2c38 <_DisposeTCPConn>;
    5f6a:	2f e6 3e 00 	[P5 + 0xf8] = R7;
    5f6e:	4d 30       	R1 = P5;
    5f70:	68 e5 86 00 	R0 = W[P5 + 0x10c] (X);
    5f74:	08 64       	R0 += 0x1;		/* (  1) */
    5f76:	68 e6 86 00 	W[P5 + 0x10c] = R0;
    5f7a:	20 e4 37 00 	R0 = [P4 + 0xdc];
    5f7e:	e8 b0       	[P5 + 0xc] = R0;
    5f80:	44 30       	R0 = P4;
    5f82:	ff e3 3f d0 	CALL 0x0 <_FlushAddressCacheRecords>;
    5f86:	e6 6d       	SP += 0x3c;		/* ( 60) */
    5f88:	77 90       	FP = [SP++];
    5f8a:	27 01       	RETS = [SP++];
    5f8c:	ab 05       	(R7:5, P5:3) = [SP++];
    5f8e:	10 00       	RTS;

00005f90 <_uDNS_DeregisterRecord>:
_uDNS_DeregisterRecord():
    5f90:	e3 05       	[--SP] = (R7:4, P5:3);
    5f92:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    5f96:	00 e8 05 00 	LINK 0x14;		/* (20) */
    5f9a:	20 32       	P4 = R0;
    5f9c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    5fa0:	10 91       	R0 = [P2];
    5fa2:	29 32       	P5 = R1;
    5fa4:	00 0c       	CC = R0 == 0x0;
    5fa6:	14 1c       	IF CC JUMP 0x5fce <_uDNS_DeregisterRecord+0x3e> (BP);
    5fa8:	01 30       	R0 = R1;
    5faa:	69 a2       	R1 = [P5 + 0x24];
    5fac:	54 30       	R2 = P4;
    5fae:	21 64       	R1 += 0x4;		/* (  4) */
    5fb0:	ba 65       	R2 += 0x37;		/* ( 55) */
    5fb2:	20 64       	R0 += 0x4;		/* (  4) */
    5fb4:	ff e3 26 d0 	CALL 0x0 <_FlushAddressCacheRecords>;
    5fb8:	10 30       	R2 = R0;
    5fba:	28 e4 39 00 	R0 = [P5 + 0xe4];
    5fbe:	f0 b0       	[SP + 0xc] = R0;
    5fc0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x31d4(12756) */
    5fc4:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    5fc6:	01 e1 04 32 	R1.L = 0x3204;		/* (12804)	R1=0x3204(12804) */
    5fca:	ff e3 1b d0 	CALL 0x0 <_FlushAddressCacheRecords>;
    5fce:	00 00       	NOP;
    5fd0:	2f e4 39 00 	R7 = [P5 + 0xe4];
    5fd4:	3f 0e       	CC = R7 <= 0x7 (IU);
    5fd6:	08 14       	IF !CC JUMP 0x5fe6 <_uDNS_DeregisterRecord+0x56> (BP);
    5fd8:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    5fda:	b8 40       	R0 <<= R7;
    5fdc:	21 e1 ae 00 	R1 = 0xae (X);		/*		R1=0xae(174) */
    5fe0:	08 54       	R0 = R0 & R1;
    5fe2:	00 0c       	CC = R0 == 0x0;
    5fe4:	20 14       	IF !CC JUMP 0x6024 <_uDNS_DeregisterRecord+0x94> (BP);
    5fe6:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    5fea:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    5fee:	10 91       	R0 = [P2];
    5ff0:	00 0c       	CC = R0 == 0x0;
    5ff2:	0f 1c       	IF CC JUMP 0x6010 <_uDNS_DeregisterRecord+0x80> (BP);
    5ff4:	2e a2       	R6 = [P5 + 0x20];
    5ff6:	e8 a8       	R0 = W[P5 + 0x6] (X);
    5ff8:	ff e3 04 d0 	CALL 0x0 <_FlushAddressCacheRecords>;
    5ffc:	30 b1       	[SP + 0x10] = R0;
    5ffe:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xae(174) */
    6002:	f6 b0       	[SP + 0xc] = R6;
    6004:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    6006:	01 e1 38 32 	R1.L = 0x3238;		/* (12856)	R1=0x3238(12856) */
    600a:	17 30       	R2 = R7;
    600c:	ff e3 fa cf 	CALL 0x0 <_FlushAddressCacheRecords>;
    6010:	00 00       	NOP;
    6012:	a8 e4 04 00 	R0 = B[P5 + 0x4] (Z);
    6016:	08 0c       	CC = R0 == 0x1;
    6018:	bb 14       	IF !CC JUMP 0x618e <_uDNS_DeregisterRecord+0x1fe> (BP);
    601a:	44 30       	R0 = P4;
    601c:	4d 30       	R1 = P5;
    601e:	ff e3 f1 cf 	CALL 0x0 <_FlushAddressCacheRecords>;
    6022:	b6 20       	JUMP.S 0x618e <_uDNS_DeregisterRecord+0x1fe>;
    6024:	00 00       	NOP;
    6026:	68 e4 7a 00 	R0 = W[P5 + 0xf4] (Z);
    602a:	00 0c       	CC = R0 == 0x0;
    602c:	70 1c       	IF CC JUMP 0x610c <_uDNS_DeregisterRecord+0x17c> (BP);
    602e:	4f e1 00 00 	FP.H = 0x0;		/* (  0)	FP=0x5990 */
    6032:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0x3c( 60) */
    6036:	6c 30       	R5 = P4;
    6038:	23 e5 f2 07 	P3 = [P4 + 0x1fc8];
    603c:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    603e:	0f e1 00 00 	FP.L = 0x0;		/* (  0)	FP=0x0 <_FlushAddressCacheRecords> */
    6042:	06 e1 00 00 	R6.L = 0x0;		/* (  0)	R6=0x0 <_FlushAddressCacheRecords>(  0) */
    6046:	04 60       	R4 = 0x0 (X);		/*		R4=0x0(  0) */
    6048:	bd 65       	R5 += 0x37;		/* ( 55) */
    604a:	46 20       	JUMP.S 0x60d6 <_uDNS_DeregisterRecord+0x146>;
    604c:	00 00       	NOP;
    604e:	e9 a1       	R1 = [P5 + 0x1c];
    6050:	38 91       	R0 = [FP];
    6052:	01 08       	CC = R1 == R0;
    6054:	3f 14       	IF !CC JUMP 0x60d2 <_uDNS_DeregisterRecord+0x142> (BP);
    6056:	a8 e4 46 00 	R0 = B[P5 + 0x46] (Z);
    605a:	00 0c       	CC = R0 == 0x0;
    605c:	3b 14       	IF !CC JUMP 0x60d2 <_uDNS_DeregisterRecord+0x142> (BP);
    605e:	28 a2       	R0 = [P5 + 0x20];
    6060:	ff e3 d0 cf 	CALL 0x0 <_FlushAddressCacheRecords>;
    6064:	00 0c       	CC = R0 == 0x0;
    6066:	36 14       	IF !CC JUMP 0x60d2 <_uDNS_DeregisterRecord+0x142> (BP);
    6068:	59 e4 7a 00 	R1 = W[P3 + 0xf4] (Z);
    606c:	68 e4 7a 00 	R0 = W[P5 + 0xf4] (Z);
    6070:	01 08       	CC = R1 == R0;
    6072:	30 14       	IF !CC JUMP 0x60d2 <_uDNS_DeregisterRecord+0x142> (BP);
    6074:	18 e4 40 00 	R0 = [P3 + 0x100];
    6078:	00 0c       	CC = R0 == 0x0;
    607a:	2c 18       	IF CC JUMP 0x60d2 <_uDNS_DeregisterRecord+0x142>;
    607c:	16 32       	P2 = R6;
    607e:	10 91       	R0 = [P2];
    6080:	00 0c       	CC = R0 == 0x0;
    6082:	10 1c       	IF CC JUMP 0x60a2 <_uDNS_DeregisterRecord+0x112> (BP);
    6084:	59 a2       	R1 = [P3 + 0x24];
    6086:	43 30       	R0 = P3;
    6088:	21 64       	R1 += 0x4;		/* (  4) */
    608a:	15 30       	R2 = R5;
    608c:	20 64       	R0 += 0x4;		/* (  4) */
    608e:	ff e3 b9 cf 	CALL 0x0 <_FlushAddressCacheRecords>;
    6092:	10 30       	R2 = R0;
    6094:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3238(12856) */
    6098:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    609a:	01 e1 6c 32 	R1.L = 0x326c;		/* (12908)	R1=0x326c(12908) */
    609e:	ff e3 b1 cf 	CALL 0x0 <_FlushAddressCacheRecords>;
    60a2:	07 0c       	CC = R7 == 0x0;
    60a4:	10 1c       	IF CC JUMP 0x60c4 <_uDNS_DeregisterRecord+0x134> (BP);
    60a6:	59 a2       	R1 = [P3 + 0x24];
    60a8:	43 30       	R0 = P3;
    60aa:	21 64       	R1 += 0x4;		/* (  4) */
    60ac:	15 30       	R2 = R5;
    60ae:	20 64       	R0 += 0x4;		/* (  4) */
    60b0:	ff e3 a8 cf 	CALL 0x0 <_FlushAddressCacheRecords>;
    60b4:	10 30       	R2 = R0;
    60b6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x326c(12908) */
    60ba:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    60bc:	01 e1 a4 32 	R1.L = 0x32a4;		/* (12964)	R1=0x32a4(12964) */
    60c0:	ff e3 a0 cf 	CALL 0x0 <_FlushAddressCacheRecords>;
    60c4:	0f 60       	R7 = 0x1 (X);		/*		R7=0x1(  1) */
    60c6:	18 e4 40 00 	R0 = [P3 + 0x100];
    60ca:	ff e3 b7 e5 	CALL 0x2c38 <_DisposeTCPConn>;
    60ce:	1c e6 40 00 	[P3 + 0x100] = R4;
    60d2:	00 00       	NOP;
    60d4:	5b 91       	P3 = [P3];
    60d6:	43 0c       	CC = P3 == 0x0;
    60d8:	ba 17       	IF !CC JUMP 0x604c <_uDNS_DeregisterRecord+0xbc> (BP);
    60da:	07 0c       	CC = R7 == 0x0;
    60dc:	18 14       	IF !CC JUMP 0x610c <_uDNS_DeregisterRecord+0x17c> (BP);
    60de:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    60e2:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    60e6:	10 91       	R0 = [P2];
    60e8:	00 0c       	CC = R0 == 0x0;
    60ea:	11 1c       	IF CC JUMP 0x610c <_uDNS_DeregisterRecord+0x17c> (BP);
    60ec:	69 a2       	R1 = [P5 + 0x24];
    60ee:	45 30       	R0 = P5;
    60f0:	54 30       	R2 = P4;
    60f2:	21 64       	R1 += 0x4;		/* (  4) */
    60f4:	ba 65       	R2 += 0x37;		/* ( 55) */
    60f6:	20 64       	R0 += 0x4;		/* (  4) */
    60f8:	ff e3 84 cf 	CALL 0x0 <_FlushAddressCacheRecords>;
    60fc:	10 30       	R2 = R0;
    60fe:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x32a4(12964) */
    6102:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    6104:	01 e1 dc 32 	R1.L = 0x32dc;		/* (13020)	R1=0x32dc(13020) */
    6108:	ff e3 7c cf 	CALL 0x0 <_FlushAddressCacheRecords>;
    610c:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    610e:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x598c */
    6112:	28 e6 39 00 	[P5 + 0xe4] = R0;
    6116:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_FlushAddressCacheRecords> */
    611a:	18 91       	R0 = [P3];
    611c:	21 e4 37 00 	R1 = [P4 + 0xdc];
    6120:	28 e6 2f 00 	[P5 + 0xbc] = R0;
    6124:	01 52       	R0 = R1 - R0;
    6126:	28 e6 30 00 	[P5 + 0xc0] = R0;
    612a:	29 a2       	R1 = [P5 + 0x20];
    612c:	44 30       	R0 = P4;
    612e:	ff e3 97 db 	CALL 0x185c <_GetAuthInfoForName_internal>;
    6132:	38 32       	FP = R0;
    6134:	20 e4 37 00 	R0 = [P4 + 0xdc];
    6138:	1a 91       	R2 = [P3];
    613a:	82 50       	R2 = R2 + R0;
    613c:	44 30       	R0 = P4;
    613e:	4d 30       	R1 = P5;
    6140:	ff e3 02 dc 	CALL 0x1944 <_IsRecordMergeable>;
    6144:	00 0c       	CC = R0 == 0x0;
    6146:	17 1c       	IF CC JUMP 0x6174 <_uDNS_DeregisterRecord+0x1e4> (BP);
    6148:	47 0c       	CC = FP == 0x0;
    614a:	0b 1c       	IF CC JUMP 0x6160 <_uDNS_DeregisterRecord+0x1d0> (BP);
    614c:	78 a0       	R0 = [FP + 0x4];
    614e:	00 0c       	CC = R0 == 0x0;
    6150:	08 1c       	IF CC JUMP 0x6160 <_uDNS_DeregisterRecord+0x1d0> (BP);
    6152:	2a e5 30 00 	P2 = [P5 + 0xc0];
    6156:	59 91       	P1 = [P3];
    6158:	8a 5c       	P2 = P2 + (P1 << 0x1);
    615a:	2a e7 30 00 	[P5 + 0xc0] = P2;
    615e:	0b 20       	JUMP.S 0x6174 <_uDNS_DeregisterRecord+0x1e4>;
    6160:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    6164:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    6168:	29 e4 30 00 	R1 = [P5 + 0xc0];
    616c:	10 91       	R0 = [P2];
    616e:	01 50       	R0 = R1 + R0;
    6170:	28 e6 30 00 	[P5 + 0xc0] = R0;
    6174:	00 00       	NOP;
    6176:	29 e4 2f 00 	R1 = [P5 + 0xbc];
    617a:	28 e4 30 00 	R0 = [P5 + 0xc0];
    617e:	01 50       	R0 = R1 + R0;
    6180:	21 e4 fb 07 	R1 = [P4 + 0x1fec];
    6184:	41 52       	R1 = R1 - R0;
    6186:	81 0c       	CC = R1 < 0x0;
    6188:	03 18       	IF CC JUMP 0x618e <_uDNS_DeregisterRecord+0x1fe>;
    618a:	20 e6 fb 07 	[P4 + 0x1fec] = R0;
    618e:	a6 6c       	SP += 0x14;		/* ( 20) */
    6190:	77 90       	FP = [SP++];
    6192:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    6194:	27 01       	RETS = [SP++];
    6196:	a3 05       	(R7:4, P5:3) = [SP++];
    6198:	10 00       	RTS;
	...

0000619c <_RecordRegistrationGotZoneData>:
_RecordRegistrationGotZoneData():
    619c:	f3 05       	[--SP] = (R7:6, P5:3);
    619e:	2a 32       	P5 = R2;
    61a0:	00 e8 06 00 	LINK 0x18;		/* (24) */
    61a4:	18 32       	P3 = R0;
    61a6:	39 30       	R7 = R1;
    61a8:	2c e5 ca 00 	P4 = [P5 + 0x328];
    61ac:	27 e5 3f 00 	FP = [P4 + 0xfc];
    61b0:	6f 08       	CC = FP == P5;
    61b2:	10 1c       	IF CC JUMP 0x61d2 <_RecordRegistrationGotZoneData+0x36> (BP);
    61b4:	26 a2       	R6 = [P4 + 0x20];
    61b6:	e0 a8       	R0 = W[P4 + 0x6] (X);
    61b8:	ff e3 24 cf 	CALL 0x0 <_FlushAddressCacheRecords>;
    61bc:	70 b1       	[SP + 0x14] = R0;
    61be:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x32dc(13020) */
    61c2:	f5 bc       	[SP + 0xc] = P5;
    61c4:	36 b1       	[SP + 0x10] = R6;
    61c6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    61c8:	01 e1 30 33 	R1.L = 0x3330;		/* (13104)	R1=0x3330(13104) */
    61cc:	57 30       	R2 = FP;
    61ce:	ff e3 19 cf 	CALL 0x0 <_FlushAddressCacheRecords>;
    61d2:	00 00       	NOP;
    61d4:	da a2       	R2 = [P3 + 0x2c];
    61d6:	18 a3       	R0 = [P3 + 0x30];
    61d8:	02 08       	CC = R2 == R0;
    61da:	09 18       	IF CC JUMP 0x61ec <_RecordRegistrationGotZoneData+0x50>;
    61dc:	f0 b0       	[SP + 0xc] = R0;
    61de:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3330(13104) */
    61e2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    61e4:	01 e1 74 33 	R1.L = 0x3374;		/* (13172)	R1=0x3374(13172) */
    61e8:	ff e3 0c cf 	CALL 0x0 <_FlushAddressCacheRecords>;
    61ec:	1a e5 f2 07 	P2 = [P3 + 0x1fc8];
    61f0:	04 20       	JUMP.S 0x61f8 <_RecordRegistrationGotZoneData+0x5c>;
    61f2:	62 08       	CC = P2 == P4;
    61f4:	05 1c       	IF CC JUMP 0x61fe <_RecordRegistrationGotZoneData+0x62> (BP);
    61f6:	52 91       	P2 = [P2];
    61f8:	42 0c       	CC = P2 == 0x0;
    61fa:	fc 17       	IF !CC JUMP 0x61f2 <_RecordRegistrationGotZoneData+0x56> (BP);
    61fc:	04 20       	JUMP.S 0x6204 <_RecordRegistrationGotZoneData+0x68>;
    61fe:	07 0c       	CC = R7 == 0x0;
    6200:	0a 14       	IF !CC JUMP 0x6214 <_RecordRegistrationGotZoneData+0x78> (BP);
    6202:	15 20       	JUMP.S 0x622c <_RecordRegistrationGotZoneData+0x90>;
    6204:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3374(13172) */
    6208:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    620a:	01 e1 bc 33 	R1.L = 0x33bc;		/* (13244)	R1=0x33bc(13244) */
    620e:	ff e3 f9 ce 	CALL 0x0 <_FlushAddressCacheRecords>;
    6212:	63 21       	JUMP.S 0x64d8 <_RecordRegistrationGotZoneData+0x33c>;
    6214:	f0 63       	R0 = -0x2 (X);		/*		R0=0xfffffffe( -2) */
    6216:	40 e1 fe ff 	R0.H = 0xfffe;		/* ( -2)	R0=0xfffefffe(-65538) */
    621a:	07 08       	CC = R7 == R0;
    621c:	5e 19       	IF CC JUMP 0x64d8 <_RecordRegistrationGotZoneData+0x33c>;
    621e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x33bc(13244) */
    6222:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    6224:	01 e1 00 34 	R1.L = 0x3400;		/* (13312)	R1=0x3400(13312) */
    6228:	17 30       	R2 = R7;
    622a:	7e 20       	JUMP.S 0x6326 <_RecordRegistrationGotZoneData+0x18a>;
    622c:	22 a5       	R2 = W[P4 + 0x8] (Z);
    622e:	68 e4 04 01 	R0 = W[P5 + 0x208] (Z);
    6232:	02 08       	CC = R2 == R0;
    6234:	08 1c       	IF CC JUMP 0x6244 <_RecordRegistrationGotZoneData+0xa8> (BP);
    6236:	f0 b0       	[SP + 0xc] = R0;
    6238:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3400(13312) */
    623c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    623e:	01 e1 28 34 	R1.L = 0x3428;		/* (13352)	R1=0x3428(13352) */
    6242:	29 20       	JUMP.S 0x6294 <_RecordRegistrationGotZoneData+0xf8>;
    6244:	00 00       	NOP;
    6246:	a8 e4 08 01 	R0 = B[P5 + 0x108] (Z);
    624a:	00 0c       	CC = R0 == 0x0;
    624c:	0f 10       	IF !CC JUMP 0x626a <_RecordRegistrationGotZoneData+0xce>;
    624e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    6252:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    6256:	10 91       	R0 = [P2];
    6258:	00 0c       	CC = R0 == 0x0;
    625a:	3f 1d       	IF CC JUMP 0x64d8 <_RecordRegistrationGotZoneData+0x33c> (BP);
    625c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3428(13352) */
    6260:	22 a2       	R2 = [P4 + 0x20];
    6262:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    6264:	01 e1 70 34 	R1.L = 0x3470;		/* (13424)	R1=0x3470(13424) */
    6268:	5f 20       	JUMP.S 0x6326 <_RecordRegistrationGotZoneData+0x18a>;
    626a:	20 a2       	R0 = [P4 + 0x20];
    626c:	ff e3 ca ce 	CALL 0x0 <_FlushAddressCacheRecords>;
    6270:	2f e1 08 01 	FP = 0x108 (X);		/*		FP=0x108(264) */
    6274:	38 30       	R7 = R0;
    6276:	fd 5b       	FP = P5 + FP;
    6278:	47 30       	R0 = FP;
    627a:	ff e3 c3 ce 	CALL 0x0 <_FlushAddressCacheRecords>;
    627e:	08 30       	R1 = R0;
    6280:	38 09       	CC = R0 <= R7;
    6282:	20 a2       	R0 = [P4 + 0x20];
    6284:	0b 1c       	IF CC JUMP 0x629a <_RecordRegistrationGotZoneData+0xfe> (BP);
    6286:	f0 b0       	[SP + 0xc] = R0;
    6288:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3470(13424) */
    628c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    628e:	01 e1 c8 34 	R1.L = 0x34c8;		/* (13512)	R1=0x34c8(13512) */
    6292:	57 30       	R2 = FP;
    6294:	ff e3 b6 ce 	CALL 0x0 <_FlushAddressCacheRecords>;
    6298:	20 21       	JUMP.S 0x64d8 <_RecordRegistrationGotZoneData+0x33c>;
    629a:	4f 52       	R1 = R7 - R1;
    629c:	ff e3 b2 ce 	CALL 0x0 <_FlushAddressCacheRecords>;
    62a0:	20 e6 3e 00 	[P4 + 0xf8] = R0;
    62a4:	4f 30       	R1 = FP;
    62a6:	ff e3 ad ce 	CALL 0x0 <_FlushAddressCacheRecords>;
    62aa:	00 0c       	CC = R0 == 0x0;
    62ac:	0e 14       	IF !CC JUMP 0x62c8 <_RecordRegistrationGotZoneData+0x12c> (BP);
    62ae:	22 e4 3e 00 	R2 = [P4 + 0xf8];
    62b2:	f7 bc       	[SP + 0xc] = FP;
    62b4:	20 a2       	R0 = [P4 + 0x20];
    62b6:	30 b1       	[SP + 0x10] = R0;
    62b8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x34c8(13512) */
    62bc:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    62be:	01 e1 0c 35 	R1.L = 0x350c;		/* (13580)	R1=0x350c(13580) */
    62c2:	ff e3 9f ce 	CALL 0x0 <_FlushAddressCacheRecords>;
    62c6:	09 21       	JUMP.S 0x64d8 <_RecordRegistrationGotZoneData+0x33c>;
    62c8:	00 00       	NOP;
    62ca:	68 e4 85 01 	R0 = W[P5 + 0x30a] (Z);
    62ce:	00 0c       	CC = R0 == 0x0;
    62d0:	1e 1c       	IF CC JUMP 0x630c <_RecordRegistrationGotZoneData+0x170> (BP);
    62d2:	28 e4 c3 00 	R0 = [P5 + 0x30c];
    62d6:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
    62d8:	08 08       	CC = R0 == R1;
    62da:	04 14       	IF !CC JUMP 0x62e2 <_RecordRegistrationGotZoneData+0x146> (BP);
    62dc:	28 e4 c4 00 	R0 = [P5 + 0x310];
    62e0:	0f 20       	JUMP.S 0x62fe <_RecordRegistrationGotZoneData+0x162>;
    62e2:	32 60       	R2 = 0x6 (X);		/*		R2=0x6(  6) */
    62e4:	10 08       	CC = R0 == R2;
    62e6:	0e 14       	IF !CC JUMP 0x6302 <_RecordRegistrationGotZoneData+0x166> (BP);
    62e8:	29 e4 c5 00 	R1 = [P5 + 0x314];
    62ec:	28 e4 c4 00 	R0 = [P5 + 0x310];
    62f0:	01 56       	R0 = R1 | R0;
    62f2:	29 e4 c6 00 	R1 = [P5 + 0x318];
    62f6:	08 56       	R0 = R0 | R1;
    62f8:	29 e4 c7 00 	R1 = [P5 + 0x31c];
    62fc:	08 56       	R0 = R0 | R1;
    62fe:	00 0c       	CC = R0 == 0x0;
    6300:	06 1c       	IF CC JUMP 0x630c <_RecordRegistrationGotZoneData+0x170> (BP);
    6302:	00 00       	NOP;
    6304:	a8 e4 0a 02 	R0 = B[P5 + 0x20a] (Z);
    6308:	00 0c       	CC = R0 == 0x0;
    630a:	11 14       	IF !CC JUMP 0x632c <_RecordRegistrationGotZoneData+0x190> (BP);
    630c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    6310:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    6314:	10 91       	R0 = [P2];
    6316:	00 0c       	CC = R0 == 0x0;
    6318:	e0 1c       	IF CC JUMP 0x64d8 <_RecordRegistrationGotZoneData+0x33c> (BP);
    631a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4(  4) */
    631e:	22 a2       	R2 = [P4 + 0x20];
    6320:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    6322:	01 e1 58 35 	R1.L = 0x3558;		/* (13656)	R1=0x3558(13656) */
    6326:	ff e3 6d ce 	CALL 0x0 <_FlushAddressCacheRecords>;
    632a:	d7 20       	JUMP.S 0x64d8 <_RecordRegistrationGotZoneData+0x33c>;
    632c:	00 00       	NOP;
    632e:	28 e4 c8 00 	R0 = [P5 + 0x320];
    6332:	20 e6 3c 00 	[P4 + 0xf0] = R0;
    6336:	20 e4 39 00 	R0 = [P4 + 0xe4];
    633a:	18 0c       	CC = R0 == 0x3;
    633c:	0d 14       	IF !CC JUMP 0x6356 <_RecordRegistrationGotZoneData+0x1ba> (BP);
    633e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3558(13656) */
    6342:	43 30       	R0 = P3;
    6344:	01 e1 98 00 	R1.L = 0x98;		/* (152)	R1=0x98(152) */
    6348:	ff e3 5c ce 	CALL 0x0 <_FlushAddressCacheRecords>;
    634c:	43 30       	R0 = P3;
    634e:	4c 30       	R1 = P4;
    6350:	ff e3 20 fe 	CALL 0x5f90 <_uDNS_DeregisterRecord>;
    6354:	b5 21       	JUMP.S 0x66be <_RecordRegistrationGotZoneData+0x522>;
    6356:	09 61       	R1 = 0x21 (X);		/*		R1=0x21( 33) */
    6358:	e0 a4       	R0 = W[P4 + 0x6] (Z);
    635a:	08 08       	CC = R0 == R1;
    635c:	4d 14       	IF !CC JUMP 0x63f6 <_RecordRegistrationGotZoneData+0x25a> (BP);
    635e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x21( 33) */
    6362:	43 30       	R0 = P3;
    6364:	01 e1 98 00 	R1.L = 0x98;		/* (152)	R1=0x98(152) */
    6368:	ff e3 4c ce 	CALL 0x0 <_FlushAddressCacheRecords>;
    636c:	4c 30       	R1 = P4;
    636e:	43 30       	R0 = P3;
    6370:	ff e3 5c eb 	CALL 0x3a28 <_GetServiceTarget>;
    6374:	28 32       	P5 = R0;
    6376:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x98(152) */
    637a:	43 30       	R0 = P3;
    637c:	01 e1 98 00 	R1.L = 0x98;		/* (152)	R1=0x98(152) */
    6380:	ff e3 40 ce 	CALL 0x0 <_FlushAddressCacheRecords>;
    6384:	45 0c       	CC = P5 == 0x0;
    6386:	04 1c       	IF CC JUMP 0x638e <_RecordRegistrationGotZoneData+0x1f2> (BP);
    6388:	28 99       	R0 = B[P5] (Z);
    638a:	00 0c       	CC = R0 == 0x0;
    638c:	35 14       	IF !CC JUMP 0x63f6 <_RecordRegistrationGotZoneData+0x25a> (BP);
    638e:	00 00       	NOP;
    6390:	e0 a4       	R0 = W[P4 + 0x6] (Z);
    6392:	10 0c       	CC = R0 == 0x2;
    6394:	0a 18       	IF CC JUMP 0x63a8 <_RecordRegistrationGotZoneData+0x20c>;
    6396:	2a 60       	R2 = 0x5 (X);		/*		R2=0x5(  5) */
    6398:	10 08       	CC = R0 == R2;
    639a:	07 18       	IF CC JUMP 0x63a8 <_RecordRegistrationGotZoneData+0x20c>;
    639c:	61 60       	R1 = 0xc (X);		/*		R1=0xc( 12) */
    639e:	08 08       	CC = R0 == R1;
    63a0:	04 18       	IF CC JUMP 0x63a8 <_RecordRegistrationGotZoneData+0x20c>;
    63a2:	3a 61       	R2 = 0x27 (X);		/*		R2=0x27( 39) */
    63a4:	10 08       	CC = R0 == R2;
    63a6:	04 14       	IF !CC JUMP 0x63ae <_RecordRegistrationGotZoneData+0x212> (BP);
    63a8:	65 ae       	P5 = [P4 + 0x24];
    63aa:	25 6c       	P5 += 0x4;		/* (  4) */
    63ac:	17 20       	JUMP.S 0x63da <_RecordRegistrationGotZoneData+0x23e>;
    63ae:	79 60       	R1 = 0xf (X);		/*		R1=0xf( 15) */
    63b0:	08 08       	CC = R0 == R1;
    63b2:	0a 18       	IF CC JUMP 0x63c6 <_RecordRegistrationGotZoneData+0x22a>;
    63b4:	92 60       	R2 = 0x12 (X);		/*		R2=0x12( 18) */
    63b6:	10 08       	CC = R0 == R2;
    63b8:	07 18       	IF CC JUMP 0x63c6 <_RecordRegistrationGotZoneData+0x22a>;
    63ba:	a9 60       	R1 = 0x15 (X);		/*		R1=0x15( 21) */
    63bc:	08 08       	CC = R0 == R1;
    63be:	04 18       	IF CC JUMP 0x63c6 <_RecordRegistrationGotZoneData+0x22a>;
    63c0:	22 61       	R2 = 0x24 (X);		/*		R2=0x24( 36) */
    63c2:	10 08       	CC = R0 == R2;
    63c4:	04 14       	IF !CC JUMP 0x63cc <_RecordRegistrationGotZoneData+0x230> (BP);
    63c6:	65 ae       	P5 = [P4 + 0x24];
    63c8:	35 6c       	P5 += 0x6;		/* (  6) */
    63ca:	08 20       	JUMP.S 0x63da <_RecordRegistrationGotZoneData+0x23e>;
    63cc:	09 61       	R1 = 0x21 (X);		/*		R1=0x21( 33) */
    63ce:	08 08       	CC = R0 == R1;
    63d0:	04 14       	IF !CC JUMP 0x63d8 <_RecordRegistrationGotZoneData+0x23c> (BP);
    63d2:	65 ae       	P5 = [P4 + 0x24];
    63d4:	55 6c       	P5 += 0xa;		/* ( 10) */
    63d6:	02 20       	JUMP.S 0x63da <_RecordRegistrationGotZoneData+0x23e>;
    63d8:	05 68       	P5 = 0x0 (X);		/*		P5=0x0(  0) */
    63da:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    63de:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    63e2:	10 91       	R0 = [P2];
    63e4:	00 0c       	CC = R0 == 0x0;
    63e6:	6f 1c       	IF CC JUMP 0x64c4 <_RecordRegistrationGotZoneData+0x328> (BP);
    63e8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x21( 33) */
    63ec:	22 a2       	R2 = [P4 + 0x20];
    63ee:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    63f0:	01 e1 a8 35 	R1.L = 0x35a8;		/* (13736)	R1=0x35a8(13736) */
    63f4:	66 20       	JUMP.S 0x64c0 <_RecordRegistrationGotZoneData+0x324>;
    63f6:	0a 61       	R2 = 0x21 (X);		/*		R2=0x21( 33) */
    63f8:	e0 a4       	R0 = W[P4 + 0x6] (Z);
    63fa:	10 08       	CC = R0 == R2;
    63fc:	1b 15       	IF !CC JUMP 0x6632 <_RecordRegistrationGotZoneData+0x496> (BP);
    63fe:	62 ae       	P2 = [P4 + 0x24];
    6400:	10 a5       	R0 = W[P2 + 0x8] (Z);
    6402:	00 0c       	CC = R0 == 0x0;
    6404:	17 1d       	IF CC JUMP 0x6632 <_RecordRegistrationGotZoneData+0x496> (BP);
    6406:	2a e1 14 20 	P2 = 0x2014 (X);		/*		P2=0x2014(8212) */
    640a:	93 5a       	P2 = P3 + P2;
    640c:	42 30       	R0 = P2;
    640e:	ff e3 f9 cd 	CALL 0x0 <_FlushAddressCacheRecords>;
    6412:	00 0c       	CC = R0 == 0x0;
    6414:	0f 1d       	IF CC JUMP 0x6632 <_RecordRegistrationGotZoneData+0x496> (BP);
    6416:	22 e5 3f 00 	P2 = [P4 + 0xfc];
    641a:	42 0c       	CC = P2 == 0x0;
    641c:	0b 1d       	IF CC JUMP 0x6632 <_RecordRegistrationGotZoneData+0x496> (BP);
    641e:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
    6420:	10 e4 c3 00 	R0 = [P2 + 0x30c];
    6424:	08 08       	CC = R0 == R1;
    6426:	09 14       	IF !CC JUMP 0x6438 <_RecordRegistrationGotZoneData+0x29c> (BP);
    6428:	29 e1 10 03 	P1 = 0x310 (X);		/*		P1=0x310(784) */
    642c:	4a 5a       	P1 = P2 + P1;
    642e:	41 30       	R0 = P1;
    6430:	ff e3 e8 cd 	CALL 0x0 <_FlushAddressCacheRecords>;
    6434:	00 0c       	CC = R0 == 0x0;
    6436:	fe 14       	IF !CC JUMP 0x6632 <_RecordRegistrationGotZoneData+0x496> (BP);
    6438:	00 00       	NOP;
    643a:	a0 e4 44 00 	R0 = B[P4 + 0x44] (Z);
    643e:	10 0c       	CC = R0 == 0x2;
    6440:	f9 14       	IF !CC JUMP 0x6632 <_RecordRegistrationGotZoneData+0x496> (BP);
    6442:	21 a2       	R1 = [P4 + 0x20];
    6444:	43 30       	R0 = P3;
    6446:	ff e3 01 db 	CALL 0x1a48 <_GetAuthInfoForName>;
    644a:	10 32       	P2 = R0;
    644c:	42 0c       	CC = P2 == 0x0;
    644e:	4e 1c       	IF CC JUMP 0x64ea <_RecordRegistrationGotZoneData+0x34e> (BP);
    6450:	90 a0       	R0 = [P2 + 0x8];
    6452:	00 0c       	CC = R0 == 0x0;
    6454:	4b 1c       	IF CC JUMP 0x64ea <_RecordRegistrationGotZoneData+0x34e> (BP);
    6456:	e1 a8       	R1 = W[P4 + 0x6] (X);
    6458:	c8 42       	R0 = R1.L (Z);
    645a:	10 0c       	CC = R0 == 0x2;
    645c:	0a 18       	IF CC JUMP 0x6470 <_RecordRegistrationGotZoneData+0x2d4>;
    645e:	2a 60       	R2 = 0x5 (X);		/*		R2=0x5(  5) */
    6460:	10 08       	CC = R0 == R2;
    6462:	07 18       	IF CC JUMP 0x6470 <_RecordRegistrationGotZoneData+0x2d4>;
    6464:	62 60       	R2 = 0xc (X);		/*		R2=0xc( 12) */
    6466:	10 08       	CC = R0 == R2;
    6468:	04 18       	IF CC JUMP 0x6470 <_RecordRegistrationGotZoneData+0x2d4>;
    646a:	3a 61       	R2 = 0x27 (X);		/*		R2=0x27( 39) */
    646c:	10 08       	CC = R0 == R2;
    646e:	04 14       	IF !CC JUMP 0x6476 <_RecordRegistrationGotZoneData+0x2da> (BP);
    6470:	65 ae       	P5 = [P4 + 0x24];
    6472:	25 6c       	P5 += 0x4;		/* (  4) */
    6474:	18 20       	JUMP.S 0x64a4 <_RecordRegistrationGotZoneData+0x308>;
    6476:	7a 60       	R2 = 0xf (X);		/*		R2=0xf( 15) */
    6478:	10 08       	CC = R0 == R2;
    647a:	0b 18       	IF CC JUMP 0x6490 <_RecordRegistrationGotZoneData+0x2f4>;
    647c:	92 60       	R2 = 0x12 (X);		/*		R2=0x12( 18) */
    647e:	10 08       	CC = R0 == R2;
    6480:	08 18       	IF CC JUMP 0x6490 <_RecordRegistrationGotZoneData+0x2f4>;
    6482:	aa 60       	R2 = 0x15 (X);		/*		R2=0x15( 21) */
    6484:	10 08       	CC = R0 == R2;
    6486:	05 18       	IF CC JUMP 0x6490 <_RecordRegistrationGotZoneData+0x2f4>;
    6488:	c8 42       	R0 = R1.L (Z);
    648a:	21 61       	R1 = 0x24 (X);		/*		R1=0x24( 36) */
    648c:	08 08       	CC = R0 == R1;
    648e:	04 14       	IF !CC JUMP 0x6496 <_RecordRegistrationGotZoneData+0x2fa> (BP);
    6490:	65 ae       	P5 = [P4 + 0x24];
    6492:	35 6c       	P5 += 0x6;		/* (  6) */
    6494:	08 20       	JUMP.S 0x64a4 <_RecordRegistrationGotZoneData+0x308>;
    6496:	0a 61       	R2 = 0x21 (X);		/*		R2=0x21( 33) */
    6498:	10 08       	CC = R0 == R2;
    649a:	04 14       	IF !CC JUMP 0x64a2 <_RecordRegistrationGotZoneData+0x306> (BP);
    649c:	65 ae       	P5 = [P4 + 0x24];
    649e:	55 6c       	P5 += 0xa;		/* ( 10) */
    64a0:	02 20       	JUMP.S 0x64a4 <_RecordRegistrationGotZoneData+0x308>;
    64a2:	05 68       	P5 = 0x0 (X);		/*		P5=0x0(  0) */
    64a4:	61 a2       	R1 = [P4 + 0x24];
    64a6:	44 30       	R0 = P4;
    64a8:	53 30       	R2 = P3;
    64aa:	21 64       	R1 += 0x4;		/* (  4) */
    64ac:	ba 65       	R2 += 0x37;		/* ( 55) */
    64ae:	20 64       	R0 += 0x4;		/* (  4) */
    64b0:	ff e3 a8 cd 	CALL 0x0 <_FlushAddressCacheRecords>;
    64b4:	10 30       	R2 = R0;
    64b6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x24( 36) */
    64ba:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    64bc:	01 e1 dc 35 	R1.L = 0x35dc;		/* (13788)	R1=0x35dc(13788) */
    64c0:	ff e3 a0 cd 	CALL 0x0 <_FlushAddressCacheRecords>;
    64c4:	45 0c       	CC = P5 == 0x0;
    64c6:	03 18       	IF CC JUMP 0x64cc <_RecordRegistrationGotZoneData+0x330>;
    64c8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    64ca:	28 9b       	B[P5] = R0;
    64cc:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    64ce:	60 b6       	W[P4 + 0x12] = R0;
    64d0:	20 b6       	W[P4 + 0x10] = R0;
    64d2:	40 60       	R0 = 0x8 (X);		/*		R0=0x8(  8) */
    64d4:	20 e6 39 00 	[P4 + 0xe4] = R0;
    64d8:	43 30       	R0 = P3;
    64da:	21 e4 3f 00 	R1 = [P4 + 0xfc];
    64de:	ff e3 91 cd 	CALL 0x0 <_FlushAddressCacheRecords>;
    64e2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    64e4:	20 e6 3f 00 	[P4 + 0xfc] = R0;
    64e8:	f6 20       	JUMP.S 0x66d4 <_RecordRegistrationGotZoneData+0x538>;
    64ea:	00 00       	NOP;
    64ec:	20 e4 4f 00 	R0 = [P4 + 0x13c];
    64f0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x2014 */
    64f4:	00 0c       	CC = R0 == 0x0;
    64f6:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    64fa:	83 14       	IF !CC JUMP 0x6600 <_RecordRegistrationGotZoneData+0x464> (BP);
    64fc:	10 91       	R0 = [P2];
    64fe:	00 0c       	CC = R0 == 0x0;
    6500:	11 1c       	IF CC JUMP 0x6522 <_RecordRegistrationGotZoneData+0x386> (BP);
    6502:	61 a2       	R1 = [P4 + 0x24];
    6504:	44 30       	R0 = P4;
    6506:	53 30       	R2 = P3;
    6508:	21 64       	R1 += 0x4;		/* (  4) */
    650a:	ba 65       	R2 += 0x37;		/* ( 55) */
    650c:	20 64       	R0 += 0x4;		/* (  4) */
    650e:	ff e3 79 cd 	CALL 0x0 <_FlushAddressCacheRecords>;
    6512:	10 30       	R2 = R0;
    6514:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x35dc(13788) */
    6518:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    651a:	01 e1 34 36 	R1.L = 0x3634;		/* (13876)	R1=0x3634(13876) */
    651e:	ff e3 71 cd 	CALL 0x0 <_FlushAddressCacheRecords>;
    6522:	30 60       	R0 = 0x6 (X);		/*		R0=0x6(  6) */
    6524:	20 e6 39 00 	[P4 + 0xe4] = R0;
    6528:	e0 a4       	R0 = W[P4 + 0x6] (Z);
    652a:	09 61       	R1 = 0x21 (X);		/*		R1=0x21( 33) */
    652c:	08 08       	CC = R0 == R1;
    652e:	12 18       	IF CC JUMP 0x6552 <_RecordRegistrationGotZoneData+0x3b6>;
    6530:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    6534:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    6538:	11 91       	R1 = [P2];
    653a:	01 0c       	CC = R1 == 0x0;
    653c:	cc 1c       	IF CC JUMP 0x66d4 <_RecordRegistrationGotZoneData+0x538> (BP);
    653e:	22 a2       	R2 = [P4 + 0x20];
    6540:	f0 b0       	[SP + 0xc] = R0;
    6542:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x21( 33) */
    6546:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    6548:	01 e1 68 36 	R1.L = 0x3668;		/* (13928)	R1=0x3668(13928) */
    654c:	ff e3 5a cd 	CALL 0x0 <_FlushAddressCacheRecords>;
    6550:	c2 20       	JUMP.S 0x66d4 <_RecordRegistrationGotZoneData+0x538>;
    6552:	25 ae       	P5 = [P4 + 0x20];
    6554:	28 99       	R0 = B[P5] (Z);
    6556:	00 0c       	CC = R0 == 0x0;
    6558:	0a 1c       	IF CC JUMP 0x656c <_RecordRegistrationGotZoneData+0x3d0> (BP);
    655a:	10 32       	P2 = R0;
    655c:	0a 6c       	P2 += 0x1;		/* (  1) */
    655e:	55 5b       	P5 = P5 + P2;
    6560:	28 99       	R0 = B[P5] (Z);
    6562:	00 0c       	CC = R0 == 0x0;
    6564:	04 1c       	IF CC JUMP 0x656c <_RecordRegistrationGotZoneData+0x3d0> (BP);
    6566:	10 32       	P2 = R0;
    6568:	0a 6c       	P2 += 0x1;		/* (  1) */
    656a:	55 5b       	P5 = P5 + P2;
    656c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3668(13928) */
    6570:	45 30       	R0 = P5;
    6572:	01 e1 a8 36 	R1.L = 0x36a8;		/* (13992)	R1=0x36a8(13992) */
    6576:	ff e3 45 cd 	CALL 0x0 <_FlushAddressCacheRecords>;
    657a:	00 0c       	CC = R0 == 0x0;
    657c:	15 14       	IF !CC JUMP 0x65a6 <_RecordRegistrationGotZoneData+0x40a> (BP);
    657e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x36a8(13992) */
    6582:	45 30       	R0 = P5;
    6584:	01 e1 b0 36 	R1.L = 0x36b0;		/* (14000)	R1=0x36b0(14000) */
    6588:	ff e3 3c cd 	CALL 0x0 <_FlushAddressCacheRecords>;
    658c:	00 0c       	CC = R0 == 0x0;
    658e:	0e 14       	IF !CC JUMP 0x65aa <_RecordRegistrationGotZoneData+0x40e> (BP);
    6590:	c6 6c       	SP += 0x18;		/* ( 24) */
    6592:	77 90       	FP = [SP++];
    6594:	22 a2       	R2 = [P4 + 0x20];
    6596:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x36b0(14000) */
    659a:	01 e1 b8 36 	R1.L = 0x36b8;		/* (14008)	R1=0x36b8(14008) */
    659e:	27 01       	RETS = [SP++];
    65a0:	b3 05       	(R7:6, P5:3) = [SP++];
    65a2:	ff e2 2f cd 	JUMP.L 0x0 <_FlushAddressCacheRecords>;
    65a6:	17 60       	R7 = 0x2 (X);		/*		R7=0x2(  2) */
    65a8:	02 20       	JUMP.S 0x65ac <_RecordRegistrationGotZoneData+0x410>;
    65aa:	0f 60       	R7 = 0x1 (X);		/*		R7=0x1(  1) */
    65ac:	20 e4 4f 00 	R0 = [P4 + 0x13c];
    65b0:	00 0c       	CC = R0 == 0x0;
    65b2:	08 18       	IF CC JUMP 0x65c2 <_RecordRegistrationGotZoneData+0x426>;
    65b4:	2a e1 04 01 	P2 = 0x104 (X);		/*		P2=0x104(260) */
    65b8:	94 5a       	P2 = P4 + P2;
    65ba:	4a 30       	R1 = P2;
    65bc:	43 30       	R0 = P3;
    65be:	ff e3 0f de 	CALL 0x21dc <_mDNS_StopNATOperation_internal>;
    65c2:	62 ae       	P2 = [P4 + 0x24];
    65c4:	a7 e6 2c 01 	B[P4 + 0x12c] = R7;
    65c8:	c6 6c       	SP += 0x18;		/* ( 24) */
    65ca:	10 a9       	R0 = W[P2 + 0x8] (X);
    65cc:	60 e6 97 00 	W[P4 + 0x12e] = R0;
    65d0:	10 a9       	R0 = W[P2 + 0x8] (X);
    65d2:	60 e6 98 00 	W[P4 + 0x130] = R0;
    65d6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    65d8:	20 e6 4d 00 	[P4 + 0x134] = R0;
    65dc:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x0 <_FlushAddressCacheRecords>(  0) */
    65e0:	00 e1 3c 3c 	R0.L = 0x3c3c;		/* (15420)	R0=0x3c3c <_CompleteRecordNatMap>(15420) */
    65e4:	20 e6 4e 00 	[P4 + 0x138] = R0;
    65e8:	24 e7 4f 00 	[P4 + 0x13c] = P4;
    65ec:	77 90       	FP = [SP++];
    65ee:	2a e1 04 01 	P2 = 0x104 (X);		/*		P2=0x104(260) */
    65f2:	94 5a       	P2 = P4 + P2;
    65f4:	43 30       	R0 = P3;
    65f6:	27 01       	RETS = [SP++];
    65f8:	4a 30       	R1 = P2;
    65fa:	b3 05       	(R7:6, P5:3) = [SP++];
    65fc:	ff e2 32 dd 	JUMP.L 0x2060 <_mDNS_StartNATOperation_internal>;
    6600:	10 91       	R0 = [P2];
    6602:	00 0c       	CC = R0 == 0x0;
    6604:	17 1c       	IF CC JUMP 0x6632 <_RecordRegistrationGotZoneData+0x496> (BP);
    6606:	61 a2       	R1 = [P4 + 0x24];
    6608:	44 30       	R0 = P4;
    660a:	53 30       	R2 = P3;
    660c:	21 64       	R1 += 0x4;		/* (  4) */
    660e:	ba 65       	R2 += 0x37;		/* ( 55) */
    6610:	20 64       	R0 += 0x4;		/* (  4) */
    6612:	ff e3 f7 cc 	CALL 0x0 <_FlushAddressCacheRecords>;
    6616:	10 30       	R2 = R0;
    6618:	20 e4 39 00 	R0 = [P4 + 0xe4];
    661c:	f0 b0       	[SP + 0xc] = R0;
    661e:	20 e4 4f 00 	R0 = [P4 + 0x13c];
    6622:	30 b1       	[SP + 0x10] = R0;
    6624:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x36b8(14008) */
    6628:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    662a:	01 e1 04 37 	R1.L = 0x3704;		/* (14084)	R1=0x3704(14084) */
    662e:	ff e3 e9 cc 	CALL 0x0 <_FlushAddressCacheRecords>;
    6632:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3704(14084) */
    6636:	43 30       	R0 = P3;
    6638:	01 e1 98 00 	R1.L = 0x98;		/* (152)	R1=0x98(152) */
    663c:	ff e3 e2 cc 	CALL 0x0 <_FlushAddressCacheRecords>;
    6640:	20 e4 53 00 	R0 = [P4 + 0x14c];
    6644:	00 0c       	CC = R0 == 0x0;
    6646:	0d 14       	IF !CC JUMP 0x6660 <_RecordRegistrationGotZoneData+0x4c4> (BP);
    6648:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x104 */
    664c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    6650:	10 91       	R0 = [P2];
    6652:	19 e4 37 00 	R1 = [P3 + 0xdc];
    6656:	20 e6 2f 00 	[P4 + 0xbc] = R0;
    665a:	01 52       	R0 = R1 - R0;
    665c:	20 e6 30 00 	[P4 + 0xc0] = R0;
    6660:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    6664:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    6668:	18 e4 37 00 	R0 = [P3 + 0xdc];
    666c:	12 91       	R2 = [P2];
    666e:	82 50       	R2 = R2 + R0;
    6670:	43 30       	R0 = P3;
    6672:	4c 30       	R1 = P4;
    6674:	ff e3 68 d9 	CALL 0x1944 <_IsRecordMergeable>;
    6678:	00 0c       	CC = R0 == 0x0;
    667a:	22 1c       	IF CC JUMP 0x66be <_RecordRegistrationGotZoneData+0x522> (BP);
    667c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    6680:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    6684:	10 91       	R0 = [P2];
    6686:	00 0c       	CC = R0 == 0x0;
    6688:	11 1c       	IF CC JUMP 0x66aa <_RecordRegistrationGotZoneData+0x50e> (BP);
    668a:	61 a2       	R1 = [P4 + 0x24];
    668c:	44 30       	R0 = P4;
    668e:	53 30       	R2 = P3;
    6690:	21 64       	R1 += 0x4;		/* (  4) */
    6692:	ba 65       	R2 += 0x37;		/* ( 55) */
    6694:	20 64       	R0 += 0x4;		/* (  4) */
    6696:	ff e3 b5 cc 	CALL 0x0 <_FlushAddressCacheRecords>;
    669a:	10 30       	R2 = R0;
    669c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x98(152) */
    66a0:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    66a2:	01 e1 54 37 	R1.L = 0x3754;		/* (14164)	R1=0x3754(14164) */
    66a6:	ff e3 ad cc 	CALL 0x0 <_FlushAddressCacheRecords>;
    66aa:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    66ae:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    66b2:	21 e4 30 00 	R1 = [P4 + 0xc0];
    66b6:	10 91       	R0 = [P2];
    66b8:	01 50       	R0 = R1 + R0;
    66ba:	20 e6 30 00 	[P4 + 0xc0] = R0;
    66be:	c6 6c       	SP += 0x18;		/* ( 24) */
    66c0:	77 90       	FP = [SP++];
    66c2:	43 30       	R0 = P3;
    66c4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3754(14164) */
    66c8:	01 e1 98 00 	R1.L = 0x98;		/* (152)	R1=0x98(152) */
    66cc:	27 01       	RETS = [SP++];
    66ce:	b3 05       	(R7:6, P5:3) = [SP++];
    66d0:	ff e2 98 cc 	JUMP.L 0x0 <_FlushAddressCacheRecords>;
    66d4:	c6 6c       	SP += 0x18;		/* ( 24) */
    66d6:	77 90       	FP = [SP++];
    66d8:	27 01       	RETS = [SP++];
    66da:	b3 05       	(R7:6, P5:3) = [SP++];
    66dc:	10 00       	RTS;
	...

000066e0 <_uDNS_UpdateRecord>:
_uDNS_UpdateRecord():
    66e0:	c4 04       	[--SP] = (P5:4);
    66e2:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    66e6:	67 01       	[--SP] = RETS;
    66e8:	20 32       	P4 = R0;
    66ea:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    66ee:	10 91       	R0 = [P2];
    66f0:	66 6f       	SP += -0x14;		/* (-20) */
    66f2:	29 32       	P5 = R1;
    66f4:	00 0c       	CC = R0 == 0x0;
    66f6:	0c 1c       	IF CC JUMP 0x670e <_uDNS_UpdateRecord+0x2e> (BP);
    66f8:	28 e4 39 00 	R0 = [P5 + 0xe4];
    66fc:	f0 b0       	[SP + 0xc] = R0;
    66fe:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x98(152) */
    6702:	2a a2       	R2 = [P5 + 0x20];
    6704:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    6706:	01 e1 90 37 	R1.L = 0x3790;		/* (14224)	R1=0x3790(14224) */
    670a:	ff e3 7b cc 	CALL 0x0 <_FlushAddressCacheRecords>;
    670e:	41 68       	P1 = 0x8 (X);		/*		P1=0x8(  8) */
    6710:	2a e4 39 00 	R2 = [P5 + 0xe4];
    6714:	12 32       	P2 = R2;
    6716:	fa 6f       	P2 += -0x1;		/* ( -1) */
    6718:	4a 0a       	CC = P2 <= P1 (IU);
    671a:	62 14       	IF !CC JUMP 0x67de <_uDNS_UpdateRecord+0xfe> (BP);
    671c:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x8 */
    6720:	09 e1 24 00 	P1.L = 0x24;		/* ( 36)	P1=0x24 */
    6724:	91 5e       	P2 = P1 + (P2 << 0x2);
    6726:	52 91       	P2 = [P2];
    6728:	52 00       	JUMP (P2);
    672a:	2a e5 35 00 	P2 = [P5 + 0xd4];
    672e:	42 0c       	CC = P2 == 0x0;
    6730:	07 1c       	IF CC JUMP 0x673e <_uDNS_UpdateRecord+0x5e> (BP);
    6732:	4d 30       	R1 = P5;
    6734:	28 aa       	R0 = W[P5 + 0x10] (X);
    6736:	b0 b5       	W[SP + 0xc] = R0;
    6738:	6a a2       	R2 = [P5 + 0x24];
    673a:	44 30       	R0 = P4;
    673c:	62 00       	CALL (P2);
    673e:	45 30       	R0 = P5;
    6740:	20 64       	R0 += 0x4;		/* (  4) */
    6742:	29 e4 33 00 	R1 = [P5 + 0xcc];
    6746:	6a e5 68 00 	R2 = W[P5 + 0xd0] (X);
    674a:	ff e3 5b cc 	CALL 0x0 <_FlushAddressCacheRecords>;
    674e:	18 20       	JUMP.S 0x677e <_uDNS_UpdateRecord+0x9e>;
    6750:	2a e4 59 00 	R2 = [P5 + 0x164];
    6754:	02 0c       	CC = R2 == 0x0;
    6756:	0b 1c       	IF CC JUMP 0x676c <_uDNS_UpdateRecord+0x8c> (BP);
    6758:	2a e5 35 00 	P2 = [P5 + 0xd4];
    675c:	42 0c       	CC = P2 == 0x0;
    675e:	07 1c       	IF CC JUMP 0x676c <_uDNS_UpdateRecord+0x8c> (BP);
    6760:	4d 30       	R1 = P5;
    6762:	68 e5 ac 00 	R0 = W[P5 + 0x158] (X);
    6766:	b0 b5       	W[SP + 0xc] = R0;
    6768:	44 30       	R0 = P4;
    676a:	62 00       	CALL (P2);
    676c:	00 00       	NOP;
    676e:	28 e4 33 00 	R0 = [P5 + 0xcc];
    6772:	28 e6 59 00 	[P5 + 0x164] = R0;
    6776:	68 e5 68 00 	R0 = W[P5 + 0xd0] (X);
    677a:	68 e6 ac 00 	W[P5 + 0x158] = R0;
    677e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    6780:	28 e6 33 00 	[P5 + 0xcc] = R0;
    6784:	46 20       	JUMP.S 0x6810 <_uDNS_UpdateRecord+0x130>;
    6786:	68 a2       	R0 = [P5 + 0x24];
    6788:	28 e6 57 00 	[P5 + 0x15c] = R0;
    678c:	28 aa       	R0 = W[P5 + 0x10] (X);
    678e:	68 e6 aa 00 	W[P5 + 0x154] = R0;
    6792:	28 e4 33 00 	R0 = [P5 + 0xcc];
    6796:	28 e6 58 00 	[P5 + 0x160] = R0;
    679a:	68 e5 68 00 	R0 = W[P5 + 0xd0] (X);
    679e:	68 e6 ab 00 	W[P5 + 0x156] = R0;
    67a2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    67a4:	28 e6 33 00 	[P5 + 0xcc] = R0;
    67a8:	38 60       	R0 = 0x7 (X);		/*		R0=0x7(  7) */
    67aa:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    67ae:	28 e6 39 00 	[P5 + 0xe4] = R0;
    67b2:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    67b6:	10 91       	R0 = [P2];
    67b8:	21 e4 37 00 	R1 = [P4 + 0xdc];
    67bc:	28 e6 2f 00 	[P5 + 0xbc] = R0;
    67c0:	01 52       	R0 = R1 - R0;
    67c2:	28 e6 30 00 	[P5 + 0xc0] = R0;
    67c6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    67c8:	24 20       	JUMP.S 0x6810 <_uDNS_UpdateRecord+0x130>;
    67ca:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3790(14224) */
    67ce:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    67d0:	2a a2       	R2 = [P5 + 0x20];
    67d2:	01 e1 c4 37 	R1.L = 0x37c4;		/* (14276)	R1=0x37c4(14276) */
    67d6:	ff e3 15 cc 	CALL 0x0 <_FlushAddressCacheRecords>;
    67da:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
    67dc:	18 20       	JUMP.S 0x680c <_uDNS_UpdateRecord+0x12c>;
    67de:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x37c4(14276) */
    67e2:	28 a2       	R0 = [P5 + 0x20];
    67e4:	f0 b0       	[SP + 0xc] = R0;
    67e6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    67e8:	01 e1 18 38 	R1.L = 0x3818;		/* (14360)	R1=0x3818(14360) */
    67ec:	ff e3 0a cc 	CALL 0x0 <_FlushAddressCacheRecords>;
    67f0:	e8 a4       	R0 = W[P5 + 0x6] (Z);
    67f2:	f0 b0       	[SP + 0xc] = R0;
    67f4:	28 e4 39 00 	R0 = [P5 + 0xe4];
    67f8:	30 b1       	[SP + 0x10] = R0;
    67fa:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3818(14360) */
    67fe:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    6800:	2a a2       	R2 = [P5 + 0x20];
    6802:	01 e1 48 38 	R1.L = 0x3848;		/* (14408)	R1=0x3848(14408) */
    6806:	ff e3 fd cb 	CALL 0x0 <_FlushAddressCacheRecords>;
    680a:	98 63       	R0 = -0xd (X);		/*		R0=0xfffffff3(-13) */
    680c:	40 e1 fe ff 	R0.H = 0xfffe;		/* ( -2)	R0=0xfffefff3(-65549) */
    6810:	a6 6c       	SP += 0x14;		/* ( 20) */
    6812:	27 01       	RETS = [SP++];
    6814:	84 04       	(P5:4) = [SP++];
    6816:	10 00       	RTS;

00006818 <_uDNS_CheckCurrentQuestion>:
_uDNS_CheckCurrentQuestion():
    6818:	e3 05       	[--SP] = (R7:4, P5:3);
    681a:	20 32       	P4 = R0;
    681c:	00 e8 0a 00 	LINK 0x28;		/* (40) */
    6820:	25 e5 4e 00 	P5 = [P4 + 0x138];
    6824:	28 a1       	R0 = [P5 + 0x10];
    6826:	e9 a0       	R1 = [P5 + 0xc];
    6828:	80 43       	R0 = -R0;
    682a:	08 52       	R0 = R0 - R1;
    682c:	21 e4 37 00 	R1 = [P4 + 0xdc];
    6830:	08 50       	R0 = R0 + R1;
    6832:	80 0c       	CC = R0 < 0x0;
    6834:	02 14       	IF !CC JUMP 0x6838 <_uDNS_CheckCurrentQuestion+0x20> (BP);
    6836:	41 23       	JUMP.S 0x6eb8 <_uDNS_CheckCurrentQuestion+0x6a0>;
    6838:	28 e4 8e 00 	R0 = [P5 + 0x238];
    683c:	00 0c       	CC = R0 == 0x0;
    683e:	1f 1c       	IF CC JUMP 0x687c <_uDNS_CheckCurrentQuestion+0x64> (BP);
    6840:	28 e4 40 00 	R0 = [P5 + 0x100];
    6844:	10 0c       	CC = R0 == 0x2;
    6846:	06 18       	IF CC JUMP 0x6852 <_uDNS_CheckCurrentQuestion+0x3a>;
    6848:	18 0c       	CC = R0 == 0x3;
    684a:	15 18       	IF CC JUMP 0x6874 <_uDNS_CheckCurrentQuestion+0x5c>;
    684c:	08 0c       	CC = R0 == 0x1;
    684e:	17 14       	IF !CC JUMP 0x687c <_uDNS_CheckCurrentQuestion+0x64> (BP);
    6850:	07 20       	JUMP.S 0x685e <_uDNS_CheckCurrentQuestion+0x46>;
    6852:	6a af       	P2 = [P5 + 0x34];
    6854:	42 0c       	CC = P2 == 0x0;
    6856:	09 1c       	IF CC JUMP 0x6868 <_uDNS_CheckCurrentQuestion+0x50> (BP);
    6858:	90 a0       	R0 = [P2 + 0x8];
    685a:	00 0c       	CC = R0 == 0x0;
    685c:	06 18       	IF CC JUMP 0x6868 <_uDNS_CheckCurrentQuestion+0x50>;
    685e:	44 30       	R0 = P4;
    6860:	4d 30       	R1 = P5;
    6862:	ff e3 3d ee 	CALL 0x44dc <_startLLQHandshake>;
    6866:	0b 20       	JUMP.S 0x687c <_uDNS_CheckCurrentQuestion+0x64>;
    6868:	44 30       	R0 = P4;
    686a:	4d 30       	R1 = P5;
    686c:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    686e:	ff e3 ed d0 	CALL 0xa48 <_sendChallengeResponse>;
    6872:	05 20       	JUMP.S 0x687c <_uDNS_CheckCurrentQuestion+0x64>;
    6874:	44 30       	R0 = P4;
    6876:	4d 30       	R1 = P5;
    6878:	ff e3 ba f9 	CALL 0x5bec <_sendLLQRefresh>;
    687c:	00 00       	NOP;
    687e:	28 e4 8e 00 	R0 = [P5 + 0x238];
    6882:	00 0c       	CC = R0 == 0x0;
    6884:	07 1c       	IF CC JUMP 0x6892 <_uDNS_CheckCurrentQuestion+0x7a> (BP);
    6886:	28 e4 40 00 	R0 = [P5 + 0x100];
    688a:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
    688c:	08 08       	CC = R0 == R1;
    688e:	02 18       	IF CC JUMP 0x6892 <_uDNS_CheckCurrentQuestion+0x7a>;
    6890:	14 23       	JUMP.S 0x6eb8 <_uDNS_CheckCurrentQuestion+0x6a0>;
    6892:	00 00       	NOP;
    6894:	af e4 d8 00 	R7 = B[P5 + 0xd8] (Z);
    6898:	0f 0e       	CC = R7 <= 0x1 (IU);
    689a:	30 1c       	IF CC JUMP 0x68fa <_uDNS_CheckCurrentQuestion+0xe2> (BP);
    689c:	2b e5 32 00 	P3 = [P5 + 0xc8];
    68a0:	43 0c       	CC = P3 == 0x0;
    68a2:	25 18       	IF CC JUMP 0x68ec <_uDNS_CheckCurrentQuestion+0xd4>;
    68a4:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    68a8:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    68ac:	10 91       	R0 = [P2];
    68ae:	00 0c       	CC = R0 == 0x0;
    68b0:	1e 1c       	IF CC JUMP 0x68ec <_uDNS_CheckCurrentQuestion+0xd4> (BP);
    68b2:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    68b6:	ff e3 a5 cb 	CALL 0x0 <_FlushAddressCacheRecords>;
    68ba:	30 b1       	[SP + 0x10] = R0;
    68bc:	43 30       	R0 = P3;
    68be:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    68c2:	40 64       	R0 += 0x8;		/* (  8) */
    68c4:	95 5a       	P2 = P5 + P2;
    68c6:	f2 bc       	[SP + 0xc] = P2;
    68c8:	70 b1       	[SP + 0x14] = R0;
    68ca:	98 e4 1c 00 	R0 = B[P3 + 0x1c] (Z);
    68ce:	99 e4 1d 00 	R1 = B[P3 + 0x1d] (Z);
    68d2:	40 4f       	R0 <<= 0x8;
    68d4:	01 56       	R0 = R1 | R0;
    68d6:	b0 b1       	[SP + 0x18] = R0;
    68d8:	63 6d       	P3 += 0x2c;		/* ( 44) */
    68da:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4(  4) */
    68de:	f3 bd       	[SP + 0x1c] = P3;
    68e0:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    68e2:	01 e1 9c 38 	R1.L = 0x389c;		/* (14492)	R1=0x389c(14492) */
    68e6:	17 30       	R2 = R7;
    68e8:	ff e3 8c cb 	CALL 0x0 <_FlushAddressCacheRecords>;
    68ec:	44 30       	R0 = P4;
    68ee:	4d 30       	R1 = P5;
    68f0:	ff e3 90 d6 	CALL 0x1610 <_PenalizeDNSServer>;
    68f4:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    68f6:	68 e6 6a 00 	W[P5 + 0xd4] = R0;
    68fa:	00 00       	NOP;
    68fc:	28 e4 32 00 	R0 = [P5 + 0xc8];
    6900:	00 0c       	CC = R0 == 0x0;
    6902:	52 14       	IF !CC JUMP 0x69a6 <_uDNS_CheckCurrentQuestion+0x18e> (BP);
    6904:	68 e4 6a 00 	R0 = W[P5 + 0xd4] (Z);
    6908:	00 0c       	CC = R0 == 0x0;
    690a:	4e 1c       	IF CC JUMP 0x69a6 <_uDNS_CheckCurrentQuestion+0x18e> (BP);
    690c:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    690e:	68 e6 6b 00 	W[P5 + 0xd6] = R0;
    6912:	4d 30       	R1 = P5;
    6914:	44 30       	R0 = P4;
    6916:	ff e3 75 cb 	CALL 0x0 <_FlushAddressCacheRecords>;
    691a:	44 30       	R0 = P4;
    691c:	4d 30       	R1 = P5;
    691e:	ff e3 71 cb 	CALL 0x0 <_FlushAddressCacheRecords>;
    6922:	18 32       	P3 = R0;
    6924:	43 0c       	CC = P3 == 0x0;
    6926:	2a 18       	IF CC JUMP 0x697a <_uDNS_CheckCurrentQuestion+0x162>;
    6928:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    692c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    6930:	10 91       	R0 = [P2];
    6932:	00 0c       	CC = R0 == 0x0;
    6934:	1e 1c       	IF CC JUMP 0x6970 <_uDNS_CheckCurrentQuestion+0x158> (BP);
    6936:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    693a:	ff e3 63 cb 	CALL 0x0 <_FlushAddressCacheRecords>;
    693e:	30 b1       	[SP + 0x10] = R0;
    6940:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    6944:	43 30       	R0 = P3;
    6946:	40 64       	R0 += 0x8;		/* (  8) */
    6948:	95 5a       	P2 = P5 + P2;
    694a:	f2 bc       	[SP + 0xc] = P2;
    694c:	70 b1       	[SP + 0x14] = R0;
    694e:	98 e4 1c 00 	R0 = B[P3 + 0x1c] (Z);
    6952:	99 e4 1d 00 	R1 = B[P3 + 0x1d] (Z);
    6956:	40 4f       	R0 <<= 0x8;
    6958:	01 56       	R0 = R1 | R0;
    695a:	b0 b1       	[SP + 0x18] = R0;
    695c:	28 a1       	R0 = [P5 + 0x10];
    695e:	f0 b1       	[SP + 0x1c] = R0;
    6960:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x389c(14492) */
    6964:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    6966:	01 e1 f4 38 	R1.L = 0x38f4;		/* (14580)	R1=0x38f4(14580) */
    696a:	55 30       	R2 = P5;
    696c:	ff e3 4a cb 	CALL 0x0 <_FlushAddressCacheRecords>;
    6970:	44 30       	R0 = P4;
    6972:	4d 30       	R1 = P5;
    6974:	53 30       	R2 = P3;
    6976:	ff e3 45 cb 	CALL 0x0 <_FlushAddressCacheRecords>;
    697a:	6a 91       	P2 = [P5];
    697c:	13 20       	JUMP.S 0x69a2 <_uDNS_CheckCurrentQuestion+0x18a>;
    697e:	00 00       	NOP;
    6980:	91 af       	P1 = [P2 + 0x38];
    6982:	69 08       	CC = P1 == P5;
    6984:	0d 14       	IF !CC JUMP 0x699e <_uDNS_CheckCurrentQuestion+0x186> (BP);
    6986:	28 e4 33 00 	R0 = [P5 + 0xcc];
    698a:	29 e4 34 00 	R1 = [P5 + 0xd0];
    698e:	10 e6 33 00 	[P2 + 0xcc] = R0;
    6992:	28 e4 32 00 	R0 = [P5 + 0xc8];
    6996:	11 e6 34 00 	[P2 + 0xd0] = R1;
    699a:	10 e6 32 00 	[P2 + 0xc8] = R0;
    699e:	00 00       	NOP;
    69a0:	52 91       	P2 = [P2];
    69a2:	42 0c       	CC = P2 == 0x0;
    69a4:	ed 17       	IF !CC JUMP 0x697e <_uDNS_CheckCurrentQuestion+0x166> (BP);
    69a6:	00 00       	NOP;
    69a8:	2a e5 32 00 	P2 = [P5 + 0xc8];
    69ac:	42 0c       	CC = P2 == 0x0;
    69ae:	5d 1d       	IF CC JUMP 0x6c68 <_uDNS_CheckCurrentQuestion+0x450> (BP);
    69b0:	50 a2       	R0 = [P2 + 0x24];
    69b2:	18 0c       	CC = R0 == 0x3;
    69b4:	5a 19       	IF CC JUMP 0x6c68 <_uDNS_CheckCurrentQuestion+0x450>;
    69b6:	2a e1 8c 59 	P2 = 0x598c (X);		/*		P2=0x598c(22924) */
    69ba:	94 5a       	P2 = P4 + P2;
    69bc:	42 30       	R0 = P2;
    69be:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x598c */
    69c2:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    69c6:	12 95       	R2 = W[P2] (Z);
    69c8:	69 e5 99 00 	R1 = W[P5 + 0x132] (X);
    69cc:	ff e3 1a cb 	CALL 0x0 <_FlushAddressCacheRecords>;
    69d0:	2a e5 32 00 	P2 = [P5 + 0xc8];
    69d4:	2b e1 98 59 	P3 = 0x5998 (X);		/*		P3=0x5998(22936) */
    69d8:	dc 5a       	P3 = P4 + P3;
    69da:	50 a2       	R0 = [P2 + 0x24];
    69dc:	00 0c       	CC = R0 == 0x0;
    69de:	06 14       	IF !CC JUMP 0x69ea <_uDNS_CheckCurrentQuestion+0x1d2> (BP);
    69e0:	45 30       	R0 = P5;
    69e2:	ff e3 65 cb 	CALL 0xac <_NoTestQuery>;
    69e6:	00 0c       	CC = R0 == 0x0;
    69e8:	1e 1c       	IF CC JUMP 0x6a24 <_uDNS_CheckCurrentQuestion+0x20c> (BP);
    69ea:	43 30       	R0 = P3;
    69ec:	22 e1 ec 22 	R2 = 0x22ec (X);		/*		R2=0x22ec(8940) */
    69f0:	2a e1 8c 59 	P2 = 0x598c (X);		/*		P2=0x598c(22924) */
    69f4:	90 50       	R2 = R0 + R2;
    69f6:	94 5a       	P2 = P4 + P2;
    69f8:	42 30       	R0 = P2;
    69fa:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    69fe:	95 5a       	P2 = P5 + P2;
    6a00:	f2 bc       	[SP + 0xc] = P2;
    6a02:	69 e5 1a 01 	R1 = W[P5 + 0x234] (X);
    6a06:	31 b6       	W[SP + 0x10] = R1;
    6a08:	69 e5 1b 01 	R1 = W[P5 + 0x236] (X);
    6a0c:	b1 b6       	W[SP + 0x14] = R1;
    6a0e:	4b 30       	R1 = P3;
    6a10:	ff e3 f8 ca 	CALL 0x0 <_FlushAddressCacheRecords>;
    6a14:	6a af       	P2 = [P5 + 0x34];
    6a16:	30 30       	R6 = R0;
    6a18:	42 0c       	CC = P2 == 0x0;
    6a1a:	52 1c       	IF CC JUMP 0x6abe <_uDNS_CheckCurrentQuestion+0x2a6> (BP);
    6a1c:	90 a0       	R0 = [P2 + 0x8];
    6a1e:	08 02       	CC = R0;
    6a20:	07 02       	R7 = CC;
    6a22:	4f 20       	JUMP.S 0x6ac0 <_uDNS_CheckCurrentQuestion+0x2a8>;
    6a24:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x24 */
    6a28:	2a e5 32 00 	P2 = [P5 + 0xc8];
    6a2c:	21 e4 37 00 	R1 = [P4 + 0xdc];
    6a30:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_FlushAddressCacheRecords> */
    6a34:	90 a2       	R0 = [P2 + 0x28];
    6a36:	41 52       	R1 = R1 - R0;
    6a38:	08 91       	R0 = [P1];
    6a3a:	82 c6 08 84 	R2 = R0 << 0x1;
    6a3e:	02 50       	R0 = R2 + R0;
    6a40:	81 08       	CC = R1 < R0;
    6a42:	02 10       	IF !CC JUMP 0x6a46 <_uDNS_CheckCurrentQuestion+0x22e>;
    6a44:	2d 22       	JUMP.S 0x6e9e <_uDNS_CheckCurrentQuestion+0x686>;
    6a46:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x0 <_FlushAddressCacheRecords> */
    6a4a:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_FlushAddressCacheRecords> */
    6a4e:	08 91       	R0 = [P1];
    6a50:	00 0c       	CC = R0 == 0x0;
    6a52:	11 1c       	IF CC JUMP 0x6a74 <_uDNS_CheckCurrentQuestion+0x25c> (BP);
    6a54:	90 e4 1c 00 	R0 = B[P2 + 0x1c] (Z);
    6a58:	91 e4 1d 00 	R1 = B[P2 + 0x1d] (Z);
    6a5c:	40 4f       	R0 <<= 0x8;
    6a5e:	01 56       	R0 = R1 | R0;
    6a60:	52 30       	R2 = P2;
    6a62:	f0 b0       	[SP + 0xc] = R0;
    6a64:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x38f4(14580) */
    6a68:	42 64       	R2 += 0x8;		/* (  8) */
    6a6a:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    6a6c:	01 e1 54 39 	R1.L = 0x3954;		/* (14676)	R1=0x3954(14676) */
    6a70:	ff e3 c8 ca 	CALL 0x0 <_FlushAddressCacheRecords>;
    6a74:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    6a78:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    6a7c:	10 91       	R0 = [P2];
    6a7e:	2a e5 32 00 	P2 = [P5 + 0xc8];
    6a82:	4b 30       	R1 = P3;
    6a84:	22 e1 ec 22 	R2 = 0x22ec (X);		/*		R2=0x22ec(8940) */
    6a88:	28 b1       	[P5 + 0x10] = R0;
    6a8a:	91 50       	R2 = R1 + R2;
    6a8c:	20 e4 37 00 	R0 = [P4 + 0xdc];
    6a90:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3954(14676) */
    6a94:	90 b2       	[P2 + 0x28] = R0;
    6a96:	01 e1 90 06 	R1.L = 0x690;		/* (1680)	R1=0x690(1680) */
    6a9a:	f1 b0       	[SP + 0xc] = R1;
    6a9c:	61 60       	R1 = 0xc (X);		/*		R1=0xc( 12) */
    6a9e:	31 b6       	W[SP + 0x10] = R1;
    6aa0:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    6aa2:	2a e1 8c 59 	P2 = 0x598c (X);		/*		P2=0x598c(22924) */
    6aa6:	94 5a       	P2 = P4 + P2;
    6aa8:	b1 b6       	W[SP + 0x14] = R1;
    6aaa:	42 30       	R0 = P2;
    6aac:	4b 30       	R1 = P3;
    6aae:	ff e3 a9 ca 	CALL 0x0 <_FlushAddressCacheRecords>;
    6ab2:	2a e5 32 00 	P2 = [P5 + 0xc8];
    6ab6:	30 30       	R6 = R0;
    6ab8:	60 e5 c6 2c 	R0 = W[P4 + 0x598c] (X);
    6abc:	d0 b7       	W[P2 + 0x1e] = R0;
    6abe:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    6ac0:	53 30       	R2 = P3;
    6ac2:	16 0a       	CC = R6 <= R2 (IU);
    6ac4:	70 1c       	IF CC JUMP 0x6ba4 <_uDNS_CheckCurrentQuestion+0x38c> (BP);
    6ac6:	2a e5 32 00 	P2 = [P5 + 0xc8];
    6aca:	50 a2       	R0 = [P2 + 0x24];
    6acc:	10 0c       	CC = R0 == 0x2;
    6ace:	06 14       	IF !CC JUMP 0x6ada <_uDNS_CheckCurrentQuestion+0x2c2> (BP);
    6ad0:	45 30       	R0 = P5;
    6ad2:	ff e3 ed ca 	CALL 0xac <_NoTestQuery>;
    6ad6:	00 0c       	CC = R0 == 0x0;
    6ad8:	66 1c       	IF CC JUMP 0x6ba4 <_uDNS_CheckCurrentQuestion+0x38c> (BP);
    6ada:	07 0c       	CC = R7 == 0x0;
    6adc:	39 1c       	IF CC JUMP 0x6b4e <_uDNS_CheckCurrentQuestion+0x336> (BP);
    6ade:	29 e4 37 00 	R1 = [P5 + 0xdc];
    6ae2:	01 0c       	CC = R1 == 0x0;
    6ae4:	04 18       	IF CC JUMP 0x6aec <_uDNS_CheckCurrentQuestion+0x2d4>;
    6ae6:	44 30       	R0 = P4;
    6ae8:	ff e3 8c ca 	CALL 0x0 <_FlushAddressCacheRecords>;
    6aec:	28 e4 8e 00 	R0 = [P5 + 0x238];
    6af0:	00 0c       	CC = R0 == 0x0;
    6af2:	10 60       	R0 = 0x2 (X);		/*		R0=0x2(  2) */
    6af4:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
    6af6:	10 06       	IF !CC R2 = R0;
    6af8:	40 e1 00 00 	R0.H = 0x0;		/* (  0)	R0=0x2(  2) */
    6afc:	00 e1 e4 37 	R0.L = 0x37e4;		/* (14308)	R0=0x37e4 <_PrivateQueryGotZoneData>(14308) */
    6b00:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    6b04:	95 5a       	P2 = P5 + P2;
    6b06:	f0 b0       	[SP + 0xc] = R0;
    6b08:	4a 30       	R1 = P2;
    6b0a:	35 bd       	[SP + 0x10] = P5;
    6b0c:	44 30       	R0 = P4;
    6b0e:	ff e3 a1 eb 	CALL 0x4250 <_StartGetZoneData>;
    6b12:	28 e6 37 00 	[P5 + 0xdc] = R0;
    6b16:	28 e4 40 00 	R0 = [P5 + 0x100];
    6b1a:	21 60       	R1 = 0x4 (X);		/*		R1=0x4(  4) */
    6b1c:	08 08       	CC = R0 == R1;
    6b1e:	c2 15       	IF !CC JUMP 0x6ea2 <_uDNS_CheckCurrentQuestion+0x68a> (BP);
    6b20:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    6b24:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    6b28:	17 91       	R7 = [P2];
    6b2a:	20 e1 5a 00 	R0 = 0x5a (X);		/*		R0=0x5a( 90) */
    6b2e:	f8 40       	R0 *= R7;
    6b30:	ff e3 68 ca 	CALL 0x0 <_FlushAddressCacheRecords>;
    6b34:	21 e1 84 03 	R1 = 0x384 (X);		/*		R1=0x384(900) */
    6b38:	f9 40       	R1 *= R7;
    6b3a:	08 50       	R0 = R0 + R1;
    6b3c:	41 e1 aa aa 	R1.H = 0xaaaa;		/* (-21846)	R1=0xaaaa0384(-1431698556) */
    6b40:	01 e1 ab aa 	R1.L = 0xaaab;		/* (-21845)	R1=0xaaaaaaab(-1431655765) */
    6b44:	ff e3 5e ca 	CALL 0x0 <_FlushAddressCacheRecords>;
    6b48:	08 4e       	R0 >>= 0x1;
    6b4a:	28 b1       	[P5 + 0x10] = R0;
    6b4c:	ab 21       	JUMP.S 0x6ea2 <_uDNS_CheckCurrentQuestion+0x68a>;
    6b4e:	00 00       	NOP;
    6b50:	28 e4 30 00 	R0 = [P5 + 0xc0];
    6b54:	00 0c       	CC = R0 == 0x0;
    6b56:	0b 14       	IF !CC JUMP 0x6b6c <_uDNS_CheckCurrentQuestion+0x354> (BP);
    6b58:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    6b5c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    6b60:	44 30       	R0 = P4;
    6b62:	11 95       	R1 = W[P2] (Z);
    6b64:	ff e3 4e ca 	CALL 0x0 <_FlushAddressCacheRecords>;
    6b68:	28 e6 30 00 	[P5 + 0xc0] = R0;
    6b6c:	00 00       	NOP;
    6b6e:	28 e4 30 00 	R0 = [P5 + 0xc0];
    6b72:	00 0c       	CC = R0 == 0x0;
    6b74:	6f 18       	IF CC JUMP 0x6c52 <_uDNS_CheckCurrentQuestion+0x43a>;
    6b76:	29 e1 8c 59 	P1 = 0x598c (X);		/*		P1=0x598c(22924) */
    6b7a:	4c 5a       	P1 = P4 + P1;
    6b7c:	49 30       	R1 = P1;
    6b7e:	2a e5 32 00 	P2 = [P5 + 0xc8];
    6b82:	52 a0       	R2 = [P2 + 0x4];
    6b84:	30 b1       	[SP + 0x10] = R0;
    6b86:	42 30       	R0 = P2;
    6b88:	40 64       	R0 += 0x8;		/* (  8) */
    6b8a:	f2 b0       	[SP + 0xc] = R2;
    6b8c:	70 b1       	[SP + 0x14] = R0;
    6b8e:	90 ab       	R0 = W[P2 + 0x1c] (X);
    6b90:	30 b7       	W[SP + 0x18] = R0;
    6b92:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    6b94:	f0 b1       	[SP + 0x1c] = R0;
    6b96:	30 b2       	[SP + 0x20] = R0;
    6b98:	44 30       	R0 = P4;
    6b9a:	16 30       	R2 = R6;
    6b9c:	ff e3 32 ca 	CALL 0x0 <_FlushAddressCacheRecords>;
    6ba0:	00 0c       	CC = R0 == 0x0;
    6ba2:	58 14       	IF !CC JUMP 0x6c52 <_uDNS_CheckCurrentQuestion+0x43a> (BP);
    6ba4:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    6ba8:	28 a1       	R0 = [P5 + 0x10];
    6baa:	82 c6 08 84 	R2 = R0 << 0x1;
    6bae:	82 50       	R2 = R2 + R0;
    6bb0:	a8 e5 d8 00 	R0 = B[P5 + 0xd8] (X);
    6bb4:	08 64       	R0 += 0x1;		/* (  1) */
    6bb6:	a8 e6 d8 00 	B[P5 + 0xd8] = R0;
    6bba:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    6bbe:	11 91       	R1 = [P2];
    6bc0:	20 e1 10 0e 	R0 = 0xe10 (X);		/*		R0=0xe10(3600) */
    6bc4:	c8 40       	R0 *= R1;
    6bc6:	2a b1       	[P5 + 0x10] = R2;
    6bc8:	02 09       	CC = R2 <= R0;
    6bca:	02 1c       	IF CC JUMP 0x6bce <_uDNS_CheckCurrentQuestion+0x3b6> (BP);
    6bcc:	28 b1       	[P5 + 0x10] = R0;
    6bce:	07 0c       	CC = R7 == 0x0;
    6bd0:	30 1c       	IF CC JUMP 0x6c30 <_uDNS_CheckCurrentQuestion+0x418> (BP);
    6bd2:	28 e4 40 00 	R0 = [P5 + 0x100];
    6bd6:	22 60       	R2 = 0x4 (X);		/*		R2=0x4(  4) */
    6bd8:	10 08       	CC = R0 == R2;
    6bda:	2b 1c       	IF CC JUMP 0x6c30 <_uDNS_CheckCurrentQuestion+0x418> (BP);
    6bdc:	82 c6 09 84 	R2 = R1 << 0x1;
    6be0:	8a 50       	R2 = R2 + R1;
    6be2:	28 a1       	R0 = [P5 + 0x10];
    6be4:	90 08       	CC = R0 < R2;
    6be6:	05 14       	IF !CC JUMP 0x6bf0 <_uDNS_CheckCurrentQuestion+0x3d8> (BP);
    6be8:	82 c6 08 84 	R2 = R0 << 0x1;
    6bec:	02 50       	R0 = R2 + R0;
    6bee:	28 b1       	[P5 + 0x10] = R0;
    6bf0:	20 e1 84 03 	R0 = 0x384 (X);		/*		R0=0x384(900) */
    6bf4:	c8 40       	R0 *= R1;
    6bf6:	29 a1       	R1 = [P5 + 0x10];
    6bf8:	01 09       	CC = R1 <= R0;
    6bfa:	02 1c       	IF CC JUMP 0x6bfe <_uDNS_CheckCurrentQuestion+0x3e6> (BP);
    6bfc:	28 b1       	[P5 + 0x10] = R0;
    6bfe:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    6c02:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    6c06:	10 91       	R0 = [P2];
    6c08:	00 0c       	CC = R0 == 0x0;
    6c0a:	13 1c       	IF CC JUMP 0x6c30 <_uDNS_CheckCurrentQuestion+0x418> (BP);
    6c0c:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    6c10:	ff e3 f8 c9 	CALL 0x0 <_FlushAddressCacheRecords>;
    6c14:	f0 b0       	[SP + 0xc] = R0;
    6c16:	28 a1       	R0 = [P5 + 0x10];
    6c18:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    6c1c:	95 5a       	P2 = P5 + P2;
    6c1e:	30 b1       	[SP + 0x10] = R0;
    6c20:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0xaaab(43691) */
    6c24:	52 30       	R2 = P2;
    6c26:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    6c28:	01 e1 78 39 	R1.L = 0x3978;		/* (14712)	R1=0x3978(14712) */
    6c2c:	ff e3 ea c9 	CALL 0x0 <_FlushAddressCacheRecords>;
    6c30:	00 00       	NOP;
    6c32:	2a e5 32 00 	P2 = [P5 + 0xc8];
    6c36:	10 e4 4e 00 	R0 = [P2 + 0x138];
    6c3a:	00 0c       	CC = R0 == 0x0;
    6c3c:	0b 18       	IF CC JUMP 0x6c52 <_uDNS_CheckCurrentQuestion+0x43a>;
    6c3e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    6c42:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    6c46:	10 91       	R0 = [P2];
    6c48:	08 4f       	R0 <<= 0x1;
    6c4a:	29 a1       	R1 = [P5 + 0x10];
    6c4c:	81 08       	CC = R1 < R0;
    6c4e:	02 14       	IF !CC JUMP 0x6c52 <_uDNS_CheckCurrentQuestion+0x43a> (BP);
    6c50:	28 b1       	[P5 + 0x10] = R0;
    6c52:	46 6d       	SP += 0x28;		/* ( 40) */
    6c54:	20 e4 37 00 	R0 = [P4 + 0xdc];
    6c58:	e8 b0       	[P5 + 0xc] = R0;
    6c5a:	77 90       	FP = [SP++];
    6c5c:	44 30       	R0 = P4;
    6c5e:	4d 30       	R1 = P5;
    6c60:	27 01       	RETS = [SP++];
    6c62:	a3 05       	(R7:4, P5:3) = [SP++];
    6c64:	ff e2 ce c9 	JUMP.L 0x0 <_FlushAddressCacheRecords>;
    6c68:	2f e1 34 01 	FP = 0x134 (X);		/*		FP=0x134(308) */
    6c6c:	fd 5b       	FP = P5 + FP;
    6c6e:	47 30       	R0 = FP;
    6c70:	ff e3 c8 c9 	CALL 0x0 <_FlushAddressCacheRecords>;
    6c74:	41 e1 d5 20 	R1.H = 0x20d5;		/* (8405)	R1=0x20d53978(550844792) */
    6c78:	38 30       	R7 = R0;
    6c7a:	01 e1 39 6b 	R1.L = 0x6b39;		/* (27449)	R1=0x20d56b39(550857529) */
    6c7e:	ff e3 c1 c9 	CALL 0x0 <_FlushAddressCacheRecords>;
    6c82:	82 c6 d0 8b 	R5 = R0 >> 0x6;
    6c86:	6a a0       	R2 = [P5 + 0x4];
    6c88:	20 e1 f3 01 	R0 = 0x1f3 (X);		/*		R0=0x1f3(499) */
    6c8c:	c5 40       	R5 *= R0;
    6c8e:	6f 53       	R5 = R7 - R5;
    6c90:	f7 bc       	[SP + 0xc] = FP;
    6c92:	44 30       	R0 = P4;
    6c94:	0d 30       	R1 = R5;
    6c96:	ff e3 b5 c9 	CALL 0x0 <_FlushAddressCacheRecords>;
    6c9a:	38 30       	R7 = R0;
    6c9c:	00 0c       	CC = R0 == 0x0;
    6c9e:	13 1c       	IF CC JUMP 0x6cc4 <_uDNS_CheckCurrentQuestion+0x4ac> (BP);
    6ca0:	10 32       	P2 = R0;
    6ca2:	93 ac       	P3 = [P2 + 0x8];
    6ca4:	0e 20       	JUMP.S 0x6cc0 <_uDNS_CheckCurrentQuestion+0x4a8>;
    6ca6:	43 30       	R0 = P3;
    6ca8:	20 64       	R0 += 0x4;		/* (  4) */
    6caa:	4d 30       	R1 = P5;
    6cac:	ff e3 aa c9 	CALL 0x0 <_FlushAddressCacheRecords>;
    6cb0:	00 0c       	CC = R0 == 0x0;
    6cb2:	05 1c       	IF CC JUMP 0x6cbc <_uDNS_CheckCurrentQuestion+0x4a4> (BP);
    6cb4:	44 30       	R0 = P4;
    6cb6:	4b 30       	R1 = P3;
    6cb8:	ff e3 a4 c9 	CALL 0x0 <_FlushAddressCacheRecords>;
    6cbc:	00 00       	NOP;
    6cbe:	5b 91       	P3 = [P3];
    6cc0:	43 0c       	CC = P3 == 0x0;
    6cc2:	f2 17       	IF !CC JUMP 0x6ca6 <_uDNS_CheckCurrentQuestion+0x48e> (BP);
    6cc4:	00 00       	NOP;
    6cc6:	2a e5 32 00 	P2 = [P5 + 0xc8];
    6cca:	42 0c       	CC = P2 == 0x0;
    6ccc:	95 14       	IF !CC JUMP 0x6df6 <_uDNS_CheckCurrentQuestion+0x5de> (BP);
    6cce:	2e e4 33 00 	R6 = [P5 + 0xcc];
    6cd2:	2c e4 34 00 	R4 = [P5 + 0xd0];
    6cd6:	34 56       	R0 = R4 | R6;
    6cd8:	00 0c       	CC = R0 == 0x0;
    6cda:	13 1c       	IF CC JUMP 0x6d00 <_uDNS_CheckCurrentQuestion+0x4e8> (BP);
    6cdc:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    6ce0:	ff e3 90 c9 	CALL 0x0 <_FlushAddressCacheRecords>;
    6ce4:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    6ce8:	95 5a       	P2 = P5 + P2;
    6cea:	70 b1       	[SP + 0x14] = R0;
    6cec:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x6b39(27449) */
    6cf0:	f6 b0       	[SP + 0xc] = R6;
    6cf2:	32 bd       	[SP + 0x10] = P2;
    6cf4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    6cf6:	01 e1 d8 39 	R1.L = 0x39d8;		/* (14808)	R1=0x39d8(14808) */
    6cfa:	14 30       	R2 = R4;
    6cfc:	ff e3 82 c9 	CALL 0x0 <_FlushAddressCacheRecords>;
    6d00:	4d 30       	R1 = P5;
    6d02:	44 30       	R0 = P4;
    6d04:	ff e3 7e c9 	CALL 0x0 <_FlushAddressCacheRecords>;
    6d08:	29 e4 34 00 	R1 = [P5 + 0xd0];
    6d0c:	28 e4 33 00 	R0 = [P5 + 0xcc];
    6d10:	01 56       	R0 = R1 | R0;
    6d12:	00 0c       	CC = R0 == 0x0;
    6d14:	1b 10       	IF !CC JUMP 0x6d4a <_uDNS_CheckCurrentQuestion+0x532>;
    6d16:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    6d1a:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    6d1e:	10 91       	R0 = [P2];
    6d20:	00 0c       	CC = R0 == 0x0;
    6d22:	11 1c       	IF CC JUMP 0x6d44 <_uDNS_CheckCurrentQuestion+0x52c> (BP);
    6d24:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    6d28:	ff e3 6c c9 	CALL 0x0 <_FlushAddressCacheRecords>;
    6d2c:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    6d30:	95 5a       	P2 = P5 + P2;
    6d32:	f0 b0       	[SP + 0xc] = R0;
    6d34:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x39d8(14808) */
    6d38:	52 30       	R2 = P2;
    6d3a:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    6d3c:	01 e1 3c 3a 	R1.L = 0x3a3c;		/* (14908)	R1=0x3a3c(14908) */
    6d40:	ff e3 60 c9 	CALL 0x0 <_FlushAddressCacheRecords>;
    6d44:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    6d46:	28 b1       	[P5 + 0x10] = R0;
    6d48:	6d 20       	JUMP.S 0x6e22 <_uDNS_CheckCurrentQuestion+0x60a>;
    6d4a:	28 a1       	R0 = [P5 + 0x10];
    6d4c:	82 c6 08 82 	R1 = R0 << 0x1;
    6d50:	01 50       	R0 = R1 + R0;
    6d52:	28 b1       	[P5 + 0x10] = R0;
    6d54:	20 e4 37 00 	R0 = [P4 + 0xdc];
    6d58:	e8 b0       	[P5 + 0xc] = R0;
    6d5a:	44 30       	R0 = P4;
    6d5c:	4d 30       	R1 = P5;
    6d5e:	ff e3 51 c9 	CALL 0x0 <_FlushAddressCacheRecords>;
    6d62:	44 30       	R0 = P4;
    6d64:	4d 30       	R1 = P5;
    6d66:	ff e3 4d c9 	CALL 0x0 <_FlushAddressCacheRecords>;
    6d6a:	28 e6 32 00 	[P5 + 0xc8] = R0;
    6d6e:	6a 91       	P2 = [P5];
    6d70:	13 20       	JUMP.S 0x6d96 <_uDNS_CheckCurrentQuestion+0x57e>;
    6d72:	00 00       	NOP;
    6d74:	91 af       	P1 = [P2 + 0x38];
    6d76:	69 08       	CC = P1 == P5;
    6d78:	0d 14       	IF !CC JUMP 0x6d92 <_uDNS_CheckCurrentQuestion+0x57a> (BP);
    6d7a:	28 e4 33 00 	R0 = [P5 + 0xcc];
    6d7e:	29 e4 34 00 	R1 = [P5 + 0xd0];
    6d82:	10 e6 33 00 	[P2 + 0xcc] = R0;
    6d86:	28 e4 32 00 	R0 = [P5 + 0xc8];
    6d8a:	11 e6 34 00 	[P2 + 0xd0] = R1;
    6d8e:	10 e6 32 00 	[P2 + 0xc8] = R0;
    6d92:	00 00       	NOP;
    6d94:	52 91       	P2 = [P2];
    6d96:	42 0c       	CC = P2 == 0x0;
    6d98:	ed 17       	IF !CC JUMP 0x6d72 <_uDNS_CheckCurrentQuestion+0x55a> (BP);
    6d9a:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    6d9e:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    6da2:	10 91       	R0 = [P2];
    6da4:	00 0c       	CC = R0 == 0x0;
    6da6:	3e 1c       	IF CC JUMP 0x6e22 <_uDNS_CheckCurrentQuestion+0x60a> (BP);
    6da8:	2e e4 92 00 	R6 = [P5 + 0x248];
    6dac:	68 e5 1a 01 	R0 = W[P5 + 0x234] (X);
    6db0:	ff e3 28 c9 	CALL 0x0 <_FlushAddressCacheRecords>;
    6db4:	2a e5 32 00 	P2 = [P5 + 0xc8];
    6db8:	2b e1 34 01 	P3 = 0x134 (X);		/*		P3=0x134(308) */
    6dbc:	dd 5a       	P3 = P5 + P3;
    6dbe:	42 0c       	CC = P2 == 0x0;
    6dc0:	73 1c       	IF CC JUMP 0x6ea6 <_uDNS_CheckCurrentQuestion+0x68e> (BP);
    6dc2:	4a 30       	R1 = P2;
    6dc4:	41 64       	R1 += 0x8;		/* (  8) */
    6dc6:	93 e5 1c 00 	R3 = B[P2 + 0x1c] (X);
    6dca:	92 e5 1d 00 	R2 = B[P2 + 0x1d] (X);
    6dce:	5b 43       	R3 = R3.B (Z);
    6dd0:	43 4f       	R3 <<= 0x8;
    6dd2:	52 43       	R2 = R2.B (Z);
    6dd4:	9a 56       	R2 = R2 | R3;
    6dd6:	b1 b1       	[SP + 0x18] = R1;
    6dd8:	f2 b1       	[SP + 0x1c] = R2;
    6dda:	f6 b0       	[SP + 0xc] = R6;
    6ddc:	33 bd       	[SP + 0x10] = P3;
    6dde:	70 b1       	[SP + 0x14] = R0;
    6de0:	28 a1       	R0 = [P5 + 0x10];
    6de2:	30 b2       	[SP + 0x20] = R0;
    6de4:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3a3c(14908) */
    6de8:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    6dea:	01 e1 74 3a 	R1.L = 0x3a74;		/* (14964)	R1=0x3a74(14964) */
    6dee:	55 30       	R2 = P5;
    6df0:	ff e3 08 c9 	CALL 0x0 <_FlushAddressCacheRecords>;
    6df4:	17 20       	JUMP.S 0x6e22 <_uDNS_CheckCurrentQuestion+0x60a>;
    6df6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    6df8:	28 b1       	[P5 + 0x10] = R0;
    6dfa:	90 e4 1c 00 	R0 = B[P2 + 0x1c] (Z);
    6dfe:	91 e4 1d 00 	R1 = B[P2 + 0x1d] (Z);
    6e02:	52 30       	R2 = P2;
    6e04:	40 4f       	R0 <<= 0x8;
    6e06:	01 56       	R0 = R1 | R0;
    6e08:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    6e0c:	f0 b0       	[SP + 0xc] = R0;
    6e0e:	95 5a       	P2 = P5 + P2;
    6e10:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3a74(14964) */
    6e14:	42 64       	R2 += 0x8;		/* (  8) */
    6e16:	32 bd       	[SP + 0x10] = P2;
    6e18:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    6e1a:	01 e1 10 3b 	R1.L = 0x3b10;		/* (15120)	R1=0x3b10(15120) */
    6e1e:	ff e3 f1 c8 	CALL 0x0 <_FlushAddressCacheRecords>;
    6e22:	2a e1 84 7c 	P2 = 0x7c84 (X);		/*		P2=0x7c84(31876) */
    6e26:	68 e5 1b 01 	R0 = W[P5 + 0x236] (X);
    6e2a:	6e a0       	R6 = [P5 + 0x4];
    6e2c:	6c e5 1a 01 	R4 = W[P5 + 0x234] (X);
    6e30:	94 5a       	P2 = P4 + P2;
    6e32:	18 32       	P3 = R0;
    6e34:	72 be       	[SP + 0x24] = P2;
    6e36:	47 30       	R0 = FP;
    6e38:	ff e3 e4 c8 	CALL 0x0 <_FlushAddressCacheRecords>;
    6e3c:	00 0c       	CC = R0 == 0x0;
    6e3e:	e2 61       	R2 = 0x3c (X);		/*		R2=0x3c( 60) */
    6e40:	20 e1 84 03 	R0 = 0x384 (X);		/*		R0=0x384(900) */
    6e44:	02 07       	IF CC R0 = R2;
    6e46:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x7c84 */
    6e4a:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    6e4e:	b0 b1       	[SP + 0x18] = R0;
    6e50:	10 91       	R0 = [P2];
    6e52:	53 30       	R2 = P3;
    6e54:	f6 b0       	[SP + 0xc] = R6;
    6e56:	34 b6       	W[SP + 0x10] = R4;
    6e58:	b2 b6       	W[SP + 0x14] = R2;
    6e5a:	f0 b1       	[SP + 0x1c] = R0;
    6e5c:	28 e4 32 00 	R0 = [P5 + 0xc8];
    6e60:	30 b2       	[SP + 0x20] = R0;
    6e62:	44 30       	R0 = P4;
    6e64:	71 a2       	R1 = [SP + 0x24];
    6e66:	57 30       	R2 = FP;
    6e68:	ff e3 cc c8 	CALL 0x0 <_FlushAddressCacheRecords>;
    6e6c:	04 60       	R4 = 0x0 (X);		/*		R4=0x0(  0) */
    6e6e:	ac e6 d8 00 	B[P5 + 0xd8] = R4;
    6e72:	20 e4 37 00 	R0 = [P4 + 0xdc];
    6e76:	00 0c       	CC = R0 == 0x0;
    6e78:	0e 60       	R6 = 0x1 (X);		/*		R6=0x1(  1) */
    6e7a:	06 07       	IF CC R0 = R6;
    6e7c:	f0 b0       	[SP + 0xc] = R0;
    6e7e:	0d 30       	R1 = R5;
    6e80:	17 30       	R2 = R7;
    6e82:	44 30       	R0 = P4;
    6e84:	ff e3 be c8 	CALL 0x0 <_FlushAddressCacheRecords>;
    6e88:	22 e4 37 00 	R2 = [P4 + 0xdc];
    6e8c:	02 0c       	CC = R2 == 0x0;
    6e8e:	16 07       	IF CC R2 = R6;
    6e90:	44 30       	R0 = P4;
    6e92:	0d 30       	R1 = R5;
    6e94:	ff e3 b6 c8 	CALL 0x0 <_FlushAddressCacheRecords>;
    6e98:	a4 e6 88 7c 	B[P4 + 0x7c88] = R4;
    6e9c:	0e 20       	JUMP.S 0x6eb8 <_uDNS_CheckCurrentQuestion+0x6a0>;
    6e9e:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    6ea0:	82 2e       	JUMP.S 0x6ba4 <_uDNS_CheckCurrentQuestion+0x38c>;
    6ea2:	0f 60       	R7 = 0x1 (X);		/*		R7=0x1(  1) */
    6ea4:	80 2e       	JUMP.S 0x6ba4 <_uDNS_CheckCurrentQuestion+0x38c>;
    6ea6:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    6eaa:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    6eae:	53 99       	R3 = B[P2] (X);
    6eb0:	92 e5 01 00 	R2 = B[P2 + 0x1] (X);
    6eb4:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    6eb6:	8c 2f       	JUMP.S 0x6dce <_uDNS_CheckCurrentQuestion+0x5b6>;
    6eb8:	46 6d       	SP += 0x28;		/* ( 40) */
    6eba:	77 90       	FP = [SP++];
    6ebc:	27 01       	RETS = [SP++];
    6ebe:	a3 05       	(R7:4, P5:3) = [SP++];
    6ec0:	10 00       	RTS;
	...

00006ec4 <_CheckNATMappings>:
_CheckNATMappings():
    6ec4:	e3 05       	[--SP] = (R7:4, P5:3);
    6ec6:	28 32       	P5 = R0;
    6ec8:	2a e1 14 20 	P2 = 0x2014 (X);		/*		P2=0x2014(8212) */
    6ecc:	00 e8 09 00 	LINK 0x24;		/* (36) */
    6ed0:	95 5a       	P2 = P5 + P2;
    6ed2:	42 30       	R0 = P2;
    6ed4:	ff e3 96 c8 	CALL 0x0 <_FlushAddressCacheRecords>;
    6ed8:	00 0c       	CC = R0 == 0x0;
    6eda:	07 14       	IF !CC JUMP 0x6ee8 <_CheckNATMappings+0x24> (BP);
    6edc:	29 e4 05 08 	R1 = [P5 + 0x2014];
    6ee0:	01 0c       	CC = R1 == 0x0;
    6ee2:	06 02       	R6 = CC;
    6ee4:	06 4b       	BITTGL (R6, 0x0);		/* bit  0 */
    6ee6:	02 20       	JUMP.S 0x6eea <_CheckNATMappings+0x26>;
    6ee8:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
    6eea:	29 e5 37 00 	P1 = [P5 + 0xdc];
    6eee:	4a e1 ff 3f 	P2.H = 0x3fff;		/* (16383)	P2=0x3fff2014 */
    6ef2:	0a e1 ff ff 	P2.L = 0xffff;		/* ( -1)	P2=0x3fffffff */
    6ef6:	06 0c       	CC = R6 == 0x0;
    6ef8:	91 5a       	P2 = P1 + P2;
    6efa:	2a e7 40 00 	[P5 + 0x100] = P2;
    6efe:	05 1c       	IF CC JUMP 0x6f08 <_CheckNATMappings+0x44> (BP);
    6f00:	29 e4 05 08 	R1 = [P5 + 0x2014];
    6f04:	29 e6 f4 09 	[P5 + 0x27d0] = R1;
    6f08:	00 00       	NOP;
    6f0a:	29 e4 f0 09 	R1 = [P5 + 0x27c0];
    6f0e:	01 0c       	CC = R1 == 0x0;
    6f10:	26 18       	IF CC JUMP 0x6f5c <_CheckNATMappings+0x98>;
    6f12:	00 0c       	CC = R0 == 0x0;
    6f14:	24 1c       	IF CC JUMP 0x6f5c <_CheckNATMappings+0x98> (BP);
    6f16:	28 e4 f5 09 	R0 = [P5 + 0x27d4];
    6f1a:	00 0c       	CC = R0 == 0x0;
    6f1c:	33 14       	IF !CC JUMP 0x6f82 <_CheckNATMappings+0xbe> (BP);
    6f1e:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0xffff */
    6f22:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    6f26:	45 30       	R0 = P5;
    6f28:	11 95       	R1 = W[P2] (Z);
    6f2a:	ff e3 6b c8 	CALL 0x0 <_FlushAddressCacheRecords>;
    6f2e:	4c e1 00 00 	P4.H = 0x0;		/* (  0)	P4=0x2704 */
    6f32:	28 e6 f5 09 	[P5 + 0x27d4] = R0;
    6f36:	00 0c       	CC = R0 == 0x0;
    6f38:	0c e1 00 00 	P4.L = 0x0;		/* (  0)	P4=0x0 <_FlushAddressCacheRecords> */
    6f3c:	0d 14       	IF !CC JUMP 0x6f56 <_CheckNATMappings+0x92> (BP);
    6f3e:	20 91       	R0 = [P4];
    6f40:	00 0c       	CC = R0 == 0x0;
    6f42:	20 1c       	IF CC JUMP 0x6f82 <_CheckNATMappings+0xbe> (BP);
    6f44:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_FlushAddressCacheRecords>(  0) */
    6f48:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    6f4a:	01 e1 54 3b 	R1.L = 0x3b54;		/* (15188)	R1=0x3b54(15188) */
    6f4e:	ff e3 59 c8 	CALL 0x0 <_FlushAddressCacheRecords>;
    6f52:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    6f54:	02 20       	JUMP.S 0x6f58 <_CheckNATMappings+0x94>;
    6f56:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    6f58:	20 93       	[P4] = R0;
    6f5a:	14 20       	JUMP.S 0x6f82 <_CheckNATMappings+0xbe>;
    6f5c:	00 00       	NOP;
    6f5e:	28 e4 f5 09 	R0 = [P5 + 0x27d4];
    6f62:	00 0c       	CC = R0 == 0x0;
    6f64:	06 18       	IF CC JUMP 0x6f70 <_CheckNATMappings+0xac>;
    6f66:	ff e3 4d c8 	CALL 0x0 <_FlushAddressCacheRecords>;
    6f6a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    6f6c:	28 e6 f5 09 	[P5 + 0x27d4] = R0;
    6f70:	28 e4 1d 0a 	R0 = [P5 + 0x2874];
    6f74:	00 0c       	CC = R0 == 0x0;
    6f76:	06 18       	IF CC JUMP 0x6f82 <_CheckNATMappings+0xbe>;
    6f78:	ff e3 44 c8 	CALL 0x0 <_FlushAddressCacheRecords>;
    6f7c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    6f7e:	28 e6 1d 0a 	[P5 + 0x2874] = R0;
    6f82:	00 00       	NOP;
    6f84:	28 e4 f0 09 	R0 = [P5 + 0x27c0];
    6f88:	00 0c       	CC = R0 == 0x0;
    6f8a:	2a e5 37 00 	P2 = [P5 + 0xdc];
    6f8e:	09 14       	IF !CC JUMP 0x6fa0 <_CheckNATMappings+0xdc> (BP);
    6f90:	49 e1 00 78 	P1.H = 0x7800;		/* (30720)	P1=0x7800598c */
    6f94:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x78000000 */
    6f98:	8a 5a       	P2 = P2 + P1;
    6f9a:	2a e7 f3 09 	[P5 + 0x27cc] = P2;
    6f9e:	4e 20       	JUMP.S 0x703a <_CheckNATMappings+0x176>;
    6fa0:	00 00       	NOP;
    6fa2:	28 e4 f3 09 	R0 = [P5 + 0x27cc];
    6fa6:	08 32       	P1 = R0;
    6fa8:	0a 44       	P2 -= P1;
    6faa:	c2 0c       	CC = P2 < 0x0;
    6fac:	3e 18       	IF CC JUMP 0x7028 <_CheckNATMappings+0x164>;
    6fae:	45 30       	R0 = P5;
    6fb0:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    6fb2:	ff e3 5b cf 	CALL 0xe68 <_uDNS_SendNATMsg>;
    6fb6:	10 30       	R2 = R0;
    6fb8:	00 0c       	CC = R0 == 0x0;
    6fba:	1e 14       	IF !CC JUMP 0x6ff6 <_CheckNATMappings+0x132> (BP);
    6fbc:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    6fc0:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    6fc4:	10 91       	R0 = [P2];
    6fc6:	18 30       	R3 = R0;
    6fc8:	80 0c       	CC = R0 < 0x0;
    6fca:	1b 64       	R3 += 0x3;		/* (  3) */
    6fcc:	18 06       	IF !CC R3 = R0;
    6fce:	29 e4 f2 09 	R1 = [P5 + 0x27c8];
    6fd2:	13 4d       	R3 >>>= 0x2;
    6fd4:	99 08       	CC = R1 < R3;
    6fd6:	04 14       	IF !CC JUMP 0x6fde <_CheckNATMappings+0x11a> (BP);
    6fd8:	2b e6 f2 09 	[P5 + 0x27c8] = R3;
    6fdc:	0d 20       	JUMP.S 0x6ff6 <_CheckNATMappings+0x132>;
    6fde:	23 e1 c2 01 	R3 = 0x1c2 (X);		/*		R3=0x1c2(450) */
    6fe2:	c3 40       	R3 *= R0;
    6fe4:	99 08       	CC = R1 < R3;
    6fe6:	03 14       	IF !CC JUMP 0x6fec <_CheckNATMappings+0x128> (BP);
    6fe8:	09 4f       	R1 <<= 0x1;
    6fea:	04 20       	JUMP.S 0x6ff2 <_CheckNATMappings+0x12e>;
    6fec:	21 e1 84 03 	R1 = 0x384 (X);		/*		R1=0x384(900) */
    6ff0:	c1 40       	R1 *= R0;
    6ff2:	29 e6 f2 09 	[P5 + 0x27c8] = R1;
    6ff6:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    6ffa:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    6ffe:	10 91       	R0 = [P2];
    7000:	00 0c       	CC = R0 == 0x0;
    7002:	0b 1c       	IF CC JUMP 0x7018 <_CheckNATMappings+0x154> (BP);
    7004:	28 e4 f2 09 	R0 = [P5 + 0x27c8];
    7008:	f0 b0       	[SP + 0xc] = R0;
    700a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x384(900) */
    700e:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    7010:	01 e1 b4 3b 	R1.L = 0x3bb4;		/* (15284)	R1=0x3bb4(15284) */
    7014:	ff e3 f6 c7 	CALL 0x0 <_FlushAddressCacheRecords>;
    7018:	00 00       	NOP;
    701a:	29 e4 f2 09 	R1 = [P5 + 0x27c8];
    701e:	28 e4 37 00 	R0 = [P5 + 0xdc];
    7022:	01 50       	R0 = R1 + R0;
    7024:	28 e6 f3 09 	[P5 + 0x27cc] = R0;
    7028:	28 e4 f3 09 	R0 = [P5 + 0x27cc];
    702c:	29 e4 40 00 	R1 = [P5 + 0x100];
    7030:	41 52       	R1 = R1 - R0;
    7032:	01 0d       	CC = R1 <= 0x0;
    7034:	03 1c       	IF CC JUMP 0x703a <_CheckNATMappings+0x176> (BP);
    7036:	28 e6 40 00 	[P5 + 0x100] = R0;
    703a:	00 00       	NOP;
    703c:	28 e4 f1 09 	R0 = [P5 + 0x27c4];
    7040:	00 0c       	CC = R0 == 0x0;
    7042:	08 18       	IF CC JUMP 0x7052 <_CheckNATMappings+0x18e>;
    7044:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3bb4(15284) */
    7048:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    704a:	01 e1 fc 3b 	R1.L = 0x3bfc;		/* (15356)	R1=0x3bfc(15356) */
    704e:	ff e3 d9 c7 	CALL 0x0 <_FlushAddressCacheRecords>;
    7052:	2a e1 fc 1f 	P2 = 0x1ffc (X);		/*		P2=0x1ffc(8188) */
    7056:	28 e4 f0 09 	R0 = [P5 + 0x27c0];
    705a:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x134 */
    705e:	95 5a       	P2 = P5 + P2;
    7060:	2f e1 d0 27 	FP = 0x27d0 (X);		/*		FP=0x27d0(10192) */
    7064:	44 e1 00 00 	R4.H = 0x0;		/* (  0)	R4=0x0 <_FlushAddressCacheRecords>(  0) */
    7068:	28 e6 f1 09 	[P5 + 0x27c4] = R0;
    706c:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_FlushAddressCacheRecords> */
    7070:	32 be       	[SP + 0x20] = P2;
    7072:	fd 5b       	FP = P5 + FP;
    7074:	04 e1 00 00 	R4.L = 0x0;		/* (  0)	R4=0x0 <_FlushAddressCacheRecords>(  0) */
    7078:	2e 21       	JUMP.S 0x72d4 <_CheckNATMappings+0x410>;
    707a:	06 0c       	CC = R6 == 0x0;
    707c:	20 91       	R0 = [P4];
    707e:	28 e6 f1 09 	[P5 + 0x27c4] = R0;
    7082:	05 1c       	IF CC JUMP 0x708c <_CheckNATMappings+0x1c8> (BP);
    7084:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7086:	60 b0       	[P4 + 0x4] = R0;
    7088:	20 b1       	[P4 + 0x10] = R0;
    708a:	57 20       	JUMP.S 0x7138 <_CheckNATMappings+0x274>;
    708c:	00 00       	NOP;
    708e:	a0 e4 28 00 	R0 = B[P4 + 0x28] (Z);
    7092:	00 0c       	CC = R0 == 0x0;
    7094:	52 1c       	IF CC JUMP 0x7138 <_CheckNATMappings+0x274> (BP);
    7096:	28 e4 37 00 	R0 = [P5 + 0xdc];
    709a:	e1 a0       	R1 = [P4 + 0xc];
    709c:	48 52       	R1 = R0 - R1;
    709e:	81 0c       	CC = R1 < 0x0;
    70a0:	43 1c       	IF CC JUMP 0x7126 <_CheckNATMappings+0x262> (BP);
    70a2:	61 a0       	R1 = [P4 + 0x4];
    70a4:	01 0c       	CC = R1 == 0x0;
    70a6:	0d 1c       	IF CC JUMP 0x70c0 <_CheckNATMappings+0x1fc> (BP);
    70a8:	01 52       	R0 = R1 - R0;
    70aa:	80 0c       	CC = R0 < 0x0;
    70ac:	0a 14       	IF !CC JUMP 0x70c0 <_CheckNATMappings+0x1fc> (BP);
    70ae:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    70b0:	60 b0       	[P4 + 0x4] = R0;
    70b2:	18 91       	R0 = [P3];
    70b4:	08 30       	R1 = R0;
    70b6:	80 0c       	CC = R0 < 0x0;
    70b8:	19 64       	R1 += 0x3;		/* (  3) */
    70ba:	01 07       	IF CC R0 = R1;
    70bc:	10 4d       	R0 >>>= 0x2;
    70be:	a0 b0       	[P4 + 0x8] = R0;
    70c0:	45 30       	R0 = P5;
    70c2:	4c 30       	R1 = P4;
    70c4:	ff e3 d2 ce 	CALL 0xe68 <_uDNS_SendNATMsg>;
    70c8:	62 a0       	R2 = [P4 + 0x4];
    70ca:	02 0c       	CC = R2 == 0x0;
    70cc:	11 1c       	IF CC JUMP 0x70ee <_CheckNATMappings+0x22a> (BP);
    70ce:	28 e4 37 00 	R0 = [P5 + 0xdc];
    70d2:	82 52       	R2 = R2 - R0;
    70d4:	82 c6 0a 83 	R1 = R2 >> 0x1f;
    70d8:	91 50       	R2 = R1 + R2;
    70da:	19 91       	R1 = [P3];
    70dc:	0a 4d       	R2 >>>= 0x1;
    70de:	09 4f       	R1 <<= 0x1;
    70e0:	a2 b0       	[P4 + 0x8] = R2;
    70e2:	8a 08       	CC = R2 < R1;
    70e4:	02 14       	IF !CC JUMP 0x70e8 <_CheckNATMappings+0x224> (BP);
    70e6:	a1 b0       	[P4 + 0x8] = R1;
    70e8:	00 00       	NOP;
    70ea:	a1 a0       	R1 = [P4 + 0x8];
    70ec:	1b 20       	JUMP.S 0x7122 <_CheckNATMappings+0x25e>;
    70ee:	18 91       	R0 = [P3];
    70f0:	10 30       	R2 = R0;
    70f2:	80 0c       	CC = R0 < 0x0;
    70f4:	1a 64       	R2 += 0x3;		/* (  3) */
    70f6:	10 06       	IF !CC R2 = R0;
    70f8:	a1 a0       	R1 = [P4 + 0x8];
    70fa:	12 4d       	R2 >>>= 0x2;
    70fc:	91 08       	CC = R1 < R2;
    70fe:	03 14       	IF !CC JUMP 0x7104 <_CheckNATMappings+0x240> (BP);
    7100:	a2 b0       	[P4 + 0x8] = R2;
    7102:	0d 20       	JUMP.S 0x711c <_CheckNATMappings+0x258>;
    7104:	22 e1 c2 01 	R2 = 0x1c2 (X);		/*		R2=0x1c2(450) */
    7108:	c2 40       	R2 *= R0;
    710a:	91 08       	CC = R1 < R2;
    710c:	04 14       	IF !CC JUMP 0x7114 <_CheckNATMappings+0x250> (BP);
    710e:	09 4f       	R1 <<= 0x1;
    7110:	a1 b0       	[P4 + 0x8] = R1;
    7112:	05 20       	JUMP.S 0x711c <_CheckNATMappings+0x258>;
    7114:	21 e1 84 03 	R1 = 0x384 (X);		/*		R1=0x384(900) */
    7118:	c8 40       	R0 *= R1;
    711a:	a0 b0       	[P4 + 0x8] = R0;
    711c:	a1 a0       	R1 = [P4 + 0x8];
    711e:	28 e4 37 00 	R0 = [P5 + 0xdc];
    7122:	01 50       	R0 = R1 + R0;
    7124:	e0 b0       	[P4 + 0xc] = R0;
    7126:	00 00       	NOP;
    7128:	e0 a0       	R0 = [P4 + 0xc];
    712a:	29 e4 40 00 	R1 = [P5 + 0x100];
    712e:	41 52       	R1 = R1 - R0;
    7130:	01 0d       	CC = R1 <= 0x0;
    7132:	03 1c       	IF CC JUMP 0x7138 <_CheckNATMappings+0x274> (BP);
    7134:	28 e6 40 00 	[P5 + 0x100] = R0;
    7138:	00 00       	NOP;
    713a:	28 e4 f4 09 	R0 = [P5 + 0x27d0];
    713e:	00 0c       	CC = R0 == 0x0;
    7140:	0c 14       	IF !CC JUMP 0x7158 <_CheckNATMappings+0x294> (BP);
    7142:	18 91       	R0 = [P3];
    7144:	08 30       	R1 = R0;
    7146:	80 0c       	CC = R0 < 0x0;
    7148:	19 64       	R1 += 0x3;		/* (  3) */
    714a:	01 07       	IF CC R0 = R1;
    714c:	10 4d       	R0 >>>= 0x2;
    714e:	18 4f       	R0 <<= 0x3;
    7150:	29 e4 f2 09 	R1 = [P5 + 0x27c8];
    7154:	01 09       	CC = R1 <= R0;
    7156:	bf 1c       	IF CC JUMP 0x72d4 <_CheckNATMappings+0x410> (BP);
    7158:	00 00       	NOP;
    715a:	27 a1       	R7 = [P4 + 0x10];
    715c:	07 0c       	CC = R7 == 0x0;
    715e:	09 14       	IF !CC JUMP 0x7170 <_CheckNATMappings+0x2ac> (BP);
    7160:	47 30       	R0 = FP;
    7162:	ff e3 4f c7 	CALL 0x0 <_FlushAddressCacheRecords>;
    7166:	00 0c       	CC = R0 == 0x0;
    7168:	50 63       	R0 = -0x16 (X);		/*		R0=0xffffffea(-22) */
    716a:	40 e1 fe ff 	R0.H = 0xfffe;		/* ( -2)	R0=0xfffeffea(-65558) */
    716e:	38 06       	IF !CC R7 = R0;
    7170:	06 0c       	CC = R6 == 0x0;
    7172:	04 1c       	IF CC JUMP 0x717a <_CheckNATMappings+0x2b6> (BP);
    7174:	65 e5 15 00 	R5 = W[P4 + 0x2a] (X);
    7178:	11 20       	JUMP.S 0x719a <_CheckNATMappings+0x2d6>;
    717a:	00 00       	NOP;
    717c:	28 e4 f4 09 	R0 = [P5 + 0x27d0];
    7180:	00 0c       	CC = R0 == 0x0;
    7182:	07 1c       	IF CC JUMP 0x7190 <_CheckNATMappings+0x2cc> (BP);
    7184:	60 a0       	R0 = [P4 + 0x4];
    7186:	00 0c       	CC = R0 == 0x0;
    7188:	04 1c       	IF CC JUMP 0x7190 <_CheckNATMappings+0x2cc> (BP);
    718a:	65 e5 16 00 	R5 = W[P4 + 0x2c] (X);
    718e:	06 20       	JUMP.S 0x719a <_CheckNATMappings+0x2d6>;
    7190:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x0 <_FlushAddressCacheRecords> */
    7194:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_FlushAddressCacheRecords> */
    7198:	0d 95       	R5 = W[P1] (Z);
    719a:	a1 e5 28 00 	R1 = B[P4 + 0x28] (X);
    719e:	48 43       	R0 = R1.B (Z);
    71a0:	00 0c       	CC = R0 == 0x0;
    71a2:	10 1c       	IF CC JUMP 0x71c2 <_CheckNATMappings+0x2fe> (BP);
    71a4:	06 0c       	CC = R6 == 0x0;
    71a6:	0e 14       	IF !CC JUMP 0x71c2 <_CheckNATMappings+0x2fe> (BP);
    71a8:	60 a0       	R0 = [P4 + 0x4];
    71aa:	00 0c       	CC = R0 == 0x0;
    71ac:	0b 14       	IF !CC JUMP 0x71c2 <_CheckNATMappings+0x2fe> (BP);
    71ae:	18 91       	R0 = [P3];
    71b0:	10 30       	R2 = R0;
    71b2:	80 0c       	CC = R0 < 0x0;
    71b4:	1a 64       	R2 += 0x3;		/* (  3) */
    71b6:	02 07       	IF CC R0 = R2;
    71b8:	10 4d       	R0 >>>= 0x2;
    71ba:	18 4f       	R0 <<= 0x3;
    71bc:	a2 a0       	R2 = [P4 + 0x8];
    71be:	02 09       	CC = R2 <= R0;
    71c0:	8a 1c       	IF CC JUMP 0x72d4 <_CheckNATMappings+0x410> (BP);
    71c2:	00 00       	NOP;
    71c4:	a2 a1       	R2 = [P4 + 0x18];
    71c6:	28 e4 f4 09 	R0 = [P5 + 0x27d0];
    71ca:	02 08       	CC = R2 == R0;
    71cc:	08 14       	IF !CC JUMP 0x71dc <_CheckNATMappings+0x318> (BP);
    71ce:	a2 a7       	R2 = W[P4 + 0x1c] (Z);
    71d0:	e8 42       	R0 = R5.L (Z);
    71d2:	02 08       	CC = R2 == R0;
    71d4:	04 14       	IF !CC JUMP 0x71dc <_CheckNATMappings+0x318> (BP);
    71d6:	60 a2       	R0 = [P4 + 0x24];
    71d8:	38 08       	CC = R0 == R7;
    71da:	7d 18       	IF CC JUMP 0x72d4 <_CheckNATMappings+0x410>;
    71dc:	49 43       	R1 = R1.B (Z);
    71de:	01 0c       	CC = R1 == 0x0;
    71e0:	33 1c       	IF CC JUMP 0x7246 <_CheckNATMappings+0x382> (BP);
    71e2:	e8 42       	R0 = R5.L (Z);
    71e4:	00 0c       	CC = R0 == 0x0;
    71e6:	30 14       	IF !CC JUMP 0x7246 <_CheckNATMappings+0x382> (BP);
    71e8:	28 e4 00 08 	R0 = [P5 + 0x2000];
    71ec:	00 0c       	CC = R0 == 0x0;
    71ee:	2c 1c       	IF CC JUMP 0x7246 <_CheckNATMappings+0x382> (BP);
    71f0:	07 0c       	CC = R7 == 0x0;
    71f2:	15 10       	IF !CC JUMP 0x721c <_CheckNATMappings+0x358>;
    71f4:	14 32       	P2 = R4;
    71f6:	10 91       	R0 = [P2];
    71f8:	00 0c       	CC = R0 == 0x0;
    71fa:	26 1c       	IF CC JUMP 0x7246 <_CheckNATMappings+0x382> (BP);
    71fc:	31 ae       	P1 = [SP + 0x20];
    71fe:	37 bd       	[SP + 0x10] = FP;
    7200:	f1 bc       	[SP + 0xc] = P1;
    7202:	a0 e4 2a 00 	R0 = B[P4 + 0x2a] (Z);
    7206:	a1 e4 2b 00 	R1 = B[P4 + 0x2b] (Z);
    720a:	40 4f       	R0 <<= 0x8;
    720c:	01 56       	R0 = R1 | R0;
    720e:	70 b1       	[SP + 0x14] = R0;
    7210:	a0 a0       	R0 = [P4 + 0x8];
    7212:	b0 b1       	[SP + 0x18] = R0;
    7214:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7216:	f0 b1       	[SP + 0x1c] = R0;
    7218:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    721a:	0f 20       	JUMP.S 0x7238 <_CheckNATMappings+0x374>;
    721c:	32 ae       	P2 = [SP + 0x20];
    721e:	37 bd       	[SP + 0x10] = FP;
    7220:	f2 bc       	[SP + 0xc] = P2;
    7222:	a0 e4 2a 00 	R0 = B[P4 + 0x2a] (Z);
    7226:	a1 e4 2b 00 	R1 = B[P4 + 0x2b] (Z);
    722a:	40 4f       	R0 <<= 0x8;
    722c:	01 56       	R0 = R1 | R0;
    722e:	70 b1       	[SP + 0x14] = R0;
    7230:	a0 a0       	R0 = [P4 + 0x8];
    7232:	b0 b1       	[SP + 0x18] = R0;
    7234:	f7 b1       	[SP + 0x1c] = R7;
    7236:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7238:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x384(900) */
    723c:	01 e1 2c 3c 	R1.L = 0x3c2c;		/* (15404)	R1=0x3c2c(15404) */
    7240:	54 30       	R2 = P4;
    7242:	ff e3 df c6 	CALL 0x0 <_FlushAddressCacheRecords>;
    7246:	00 00       	NOP;
    7248:	28 e4 f4 09 	R0 = [P5 + 0x27d0];
    724c:	a0 b1       	[P4 + 0x18] = R0;
    724e:	60 a0       	R0 = [P4 + 0x4];
    7250:	a5 b7       	W[P4 + 0x1c] = R5;
    7252:	00 0c       	CC = R0 == 0x0;
    7254:	10 1c       	IF CC JUMP 0x7274 <_CheckNATMappings+0x3b0> (BP);
    7256:	ed 42       	R5 = R5.L (Z);
    7258:	05 0c       	CC = R5 == 0x0;
    725a:	0d 1c       	IF CC JUMP 0x7274 <_CheckNATMappings+0x3b0> (BP);
    725c:	19 91       	R1 = [P3];
    725e:	82 c6 09 85 	R2 = R1 >> 0x1f;
    7262:	8a 50       	R2 = R2 + R1;
    7264:	2b e4 37 00 	R3 = [P5 + 0xdc];
    7268:	0a 4d       	R2 >>>= 0x1;
    726a:	9a 52       	R2 = R2 - R3;
    726c:	02 50       	R0 = R2 + R0;
    726e:	ff e3 c9 c6 	CALL 0x0 <_FlushAddressCacheRecords>;
    7272:	02 20       	JUMP.S 0x7276 <_CheckNATMappings+0x3b2>;
    7274:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7276:	20 b2       	[P4 + 0x20] = R0;
    7278:	28 a3       	R0 = [P5 + 0x30];
    727a:	08 64       	R0 += 0x1;		/* (  1) */
    727c:	67 b2       	[P4 + 0x24] = R7;
    727e:	e9 a2       	R1 = [P5 + 0x2c];
    7280:	28 b3       	[P5 + 0x30] = R0;
    7282:	01 08       	CC = R1 == R0;
    7284:	0e 18       	IF CC JUMP 0x72a0 <_CheckNATMappings+0x3dc>;
    7286:	f1 b0       	[SP + 0xc] = R1;
    7288:	30 b1       	[SP + 0x10] = R0;
    728a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3c2c(15404) */
    728e:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x1c2(450) */
    7292:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7294:	01 e1 54 22 	R1.L = 0x2254;		/* (8788)	R1=0x2254(8788) */
    7298:	02 e1 6c 00 	R2.L = 0x6c;		/* (108)	R2=0x6c(108) */
    729c:	ff e3 b2 c6 	CALL 0x0 <_FlushAddressCacheRecords>;
    72a0:	62 af       	P2 = [P4 + 0x34];
    72a2:	42 0c       	CC = P2 == 0x0;
    72a4:	04 18       	IF CC JUMP 0x72ac <_CheckNATMappings+0x3e8>;
    72a6:	45 30       	R0 = P5;
    72a8:	4c 30       	R1 = P4;
    72aa:	62 00       	CALL (P2);
    72ac:	e9 a2       	R1 = [P5 + 0x2c];
    72ae:	28 a3       	R0 = [P5 + 0x30];
    72b0:	01 08       	CC = R1 == R0;
    72b2:	0e 18       	IF CC JUMP 0x72ce <_CheckNATMappings+0x40a>;
    72b4:	f1 b0       	[SP + 0xc] = R1;
    72b6:	30 b1       	[SP + 0x10] = R0;
    72b8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x2254(8788) */
    72bc:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x6c(108) */
    72c0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    72c2:	01 e1 00 23 	R1.L = 0x2300;		/* (8960)	R1=0x2300(8960) */
    72c6:	02 e1 6c 00 	R2.L = 0x6c;		/* (108)	R2=0x6c(108) */
    72ca:	ff e3 9b c6 	CALL 0x0 <_FlushAddressCacheRecords>;
    72ce:	28 a3       	R0 = [P5 + 0x30];
    72d0:	f8 67       	R0 += -0x1;		/* ( -1) */
    72d2:	28 b3       	[P5 + 0x30] = R0;
    72d4:	00 00       	NOP;
    72d6:	2c e5 f1 09 	P4 = [P5 + 0x27c4];
    72da:	44 0c       	CC = P4 == 0x0;
    72dc:	cf 16       	IF !CC JUMP 0x707a <_CheckNATMappings+0x1b6> (BP);
    72de:	26 6d       	SP += 0x24;		/* ( 36) */
    72e0:	77 90       	FP = [SP++];
    72e2:	27 01       	RETS = [SP++];
    72e4:	a3 05       	(R7:4, P5:3) = [SP++];
    72e6:	10 00       	RTS;

000072e8 <_uDNS_Tasks>:
_uDNS_Tasks():
    72e8:	e3 05       	[--SP] = (R7:4, P5:3);
    72ea:	28 32       	P5 = R0;
    72ec:	2a e1 98 59 	P2 = 0x5998 (X);		/*		P2=0x5998(22936) */
    72f0:	00 e8 16 00 	LINK 0x58;		/* (88) */
    72f4:	f8 63       	R0 = -0x1 (X);		/*		R0=0xffffffff( -1) */
    72f6:	40 e1 ff 3f 	R0.H = 0x3fff;		/* (16383)	R0=0x3fffffff(1073741823) */
    72fa:	95 5a       	P2 = P5 + P2;
    72fc:	32 e7 13 00 	[SP + 0x4c] = P2;
    7300:	29 e4 37 00 	R1 = [P5 + 0xdc];
    7304:	2a e1 8c 59 	P2 = 0x598c (X);		/*		P2=0x598c(22924) */
    7308:	01 50       	R0 = R1 + R0;
    730a:	4f e1 00 00 	FP.H = 0x0;		/* (  0)	FP=0x27d0 */
    730e:	47 e1 00 00 	R7.H = 0x0;		/* (  0)	R7=0x1(  1) */
    7312:	95 5a       	P2 = P5 + P2;
    7314:	70 b3       	[SP + 0x34] = R0;
    7316:	28 e6 fb 07 	[P5 + 0x1fec] = R0;
    731a:	0f e1 00 00 	FP.L = 0x0;		/* (  0)	FP=0x0 <_FlushAddressCacheRecords> */
    731e:	07 e1 00 00 	R7.L = 0x0;		/* (  0)	R7=0x0 <_FlushAddressCacheRecords>(  0) */
    7322:	32 e7 14 00 	[SP + 0x50] = P2;
    7326:	e7 21       	JUMP.S 0x76f4 <_uDNS_Tasks+0x40c>;
    7328:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    732a:	30 e6 11 00 	[SP + 0x44] = R0;
    732e:	55 30       	R2 = P5;
    7330:	02 68       	P2 = 0x0 (X);		/*		P2=0x0(  0) */
    7332:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7334:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    7336:	ba 65       	R2 += 0x37;		/* ( 55) */
    7338:	2c e5 f2 07 	P4 = [P5 + 0x1fc8];
    733c:	36 e4 13 00 	R6 = [SP + 0x4c];
    7340:	04 60       	R4 = 0x0 (X);		/*		R4=0x0(  0) */
    7342:	32 e7 10 00 	[SP + 0x40] = P2;
    7346:	f0 b2       	[SP + 0x2c] = R0;
    7348:	03 68       	P3 = 0x0 (X);		/*		P3=0x0(  0) */
    734a:	b1 b2       	[SP + 0x28] = R1;
    734c:	f2 b3       	[SP + 0x3c] = R2;
    734e:	80 21       	JUMP.S 0x764e <_uDNS_Tasks+0x366>;
    7350:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7352:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    7354:	3a 91       	R2 = [FP];
    7356:	04 60       	R4 = 0x0 (X);		/*		R4=0x0(  0) */
    7358:	b0 b3       	[SP + 0x38] = R0;
    735a:	f1 b2       	[SP + 0x2c] = R1;
    735c:	03 68       	P3 = 0x0 (X);		/*		P3=0x0(  0) */
    735e:	32 e6 15 00 	[SP + 0x54] = R2;
    7362:	00 00       	NOP;
    7364:	20 e4 26 00 	R0 = [P4 + 0x98];
    7368:	31 e4 15 00 	R1 = [SP + 0x54];
    736c:	08 08       	CC = R0 == R1;
    736e:	6b 15       	IF !CC JUMP 0x7644 <_uDNS_Tasks+0x35c> (BP);
    7370:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7372:	20 e6 26 00 	[P4 + 0x98] = R0;
    7376:	43 0c       	CC = P3 == 0x0;
    7378:	6a 14       	IF !CC JUMP 0x744c <_uDNS_Tasks+0x164> (BP);
    737a:	21 e4 3e 00 	R1 = [P4 + 0xf8];
    737e:	45 30       	R0 = P5;
    7380:	ff e3 6e d2 	CALL 0x185c <_GetAuthInfoForName_internal>;
    7384:	20 30       	R4 = R0;
    7386:	00 0c       	CC = R0 == 0x0;
    7388:	0a 1c       	IF CC JUMP 0x739c <_uDNS_Tasks+0xb4> (BP);
    738a:	10 32       	P2 = R0;
    738c:	26 e1 ec 22 	R6 = 0x22ec (X);		/*		R6=0x22ec(8940) */
    7390:	90 a0       	R0 = [P2 + 0x8];
    7392:	00 0c       	CC = R0 == 0x0;
    7394:	20 e1 a0 05 	R0 = 0x5a0 (X);		/*		R0=0x5a0(1440) */
    7398:	30 07       	IF CC R6 = R0;
    739a:	03 20       	JUMP.S 0x73a0 <_uDNS_Tasks+0xb8>;
    739c:	26 e1 a0 05 	R6 = 0x5a0 (X);		/*		R6=0x5a0(1440) */
    73a0:	45 30       	R0 = P5;
    73a2:	0c 30       	R1 = R4;
    73a4:	ff e3 ce c6 	CALL 0x140 <_RRAdditionalSize>;
    73a8:	86 53       	R6 = R6 - R0;
    73aa:	06 0d       	CC = R6 <= 0x0;
    73ac:	07 14       	IF !CC JUMP 0x73ba <_uDNS_Tasks+0xd2> (BP);
    73ae:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_FlushAddressCacheRecords>(  0) */
    73b2:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    73b4:	01 e1 b0 3c 	R1.L = 0x3cb0;		/* (15536)	R1=0x3cb0(15536) */
    73b8:	46 20       	JUMP.S 0x7444 <_uDNS_Tasks+0x15c>;
    73ba:	45 30       	R0 = P5;
    73bc:	ff e3 22 c6 	CALL 0x0 <_FlushAddressCacheRecords>;
    73c0:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    73c4:	70 e6 24 00 	W[SP + 0x48] = R0;
    73c8:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    73cc:	12 95       	R2 = W[P2] (Z);
    73ce:	30 e4 14 00 	R0 = [SP + 0x50];
    73d2:	71 e5 24 00 	R1 = W[SP + 0x48] (X);
    73d6:	ff e3 15 c6 	CALL 0x0 <_FlushAddressCacheRecords>;
    73da:	20 e4 3e 00 	R0 = [P4 + 0xf8];
    73de:	22 e1 00 01 	R2 = 0x100 (X);		/*		R2=0x100(256) */
    73e2:	50 50       	R1 = R0 + R2;
    73e4:	ff e3 0e c6 	CALL 0x0 <_FlushAddressCacheRecords>;
    73e8:	c0 42       	R0 = R0.L (Z);
    73ea:	20 64       	R0 += 0x4;		/* (  4) */
    73ec:	b0 b3       	[SP + 0x38] = R0;
    73ee:	06 52       	R0 = R6 - R0;
    73f0:	b0 b2       	[SP + 0x28] = R0;
    73f2:	00 0d       	CC = R0 <= 0x0;
    73f4:	07 14       	IF !CC JUMP 0x7402 <_uDNS_Tasks+0x11a> (BP);
    73f6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3cb0(15536) */
    73fa:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    73fc:	01 e1 f0 3c 	R1.L = 0x3cf0;		/* (15600)	R1=0x3cf0(15600) */
    7400:	22 20       	JUMP.S 0x7444 <_uDNS_Tasks+0x15c>;
    7402:	06 34       	I0 = R6;
    7404:	a0 e4 08 00 	R0 = B[P4 + 0x8] (Z);
    7408:	34 e1 98 59 	M0 = 0x5998 (X);		/*		M0=0x5998(22936) */
    740c:	a2 e4 09 00 	R2 = B[P4 + 0x9] (Z);
    7410:	40 4f       	R0 <<= 0x8;
    7412:	60 9e       	I0 += M0;
    7414:	21 e4 3e 00 	R1 = [P4 + 0xf8];
    7418:	02 56       	R0 = R2 | R0;
    741a:	90 32       	P2 = I0;
    741c:	95 5a       	P2 = P5 + P2;
    741e:	f1 b0       	[SP + 0xc] = R1;
    7420:	30 b6       	W[SP + 0x10] = R0;
    7422:	32 e7 10 00 	[SP + 0x40] = P2;
    7426:	30 e4 14 00 	R0 = [SP + 0x50];
    742a:	31 e4 13 00 	R1 = [SP + 0x4c];
    742e:	52 30       	R2 = P2;
    7430:	ff e3 e8 c5 	CALL 0x0 <_FlushAddressCacheRecords>;
    7434:	30 30       	R6 = R0;
    7436:	00 0c       	CC = R0 == 0x0;
    7438:	09 14       	IF !CC JUMP 0x744a <_uDNS_Tasks+0x162> (BP);
    743a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3cf0(15600) */
    743e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7440:	01 e1 38 3d 	R1.L = 0x3d38;		/* (15672)	R1=0x3d38(15672) */
    7444:	ff e3 de c5 	CALL 0x0 <_FlushAddressCacheRecords>;
    7448:	c1 20       	JUMP.S 0x75ca <_uDNS_Tasks+0x2e2>;
    744a:	5c 32       	P3 = P4;
    744c:	b0 a3       	R0 = [SP + 0x38];
    744e:	e0 67       	R0 += -0x4;		/* ( -4) */
    7450:	30 b3       	[SP + 0x30] = R0;
    7452:	20 e4 39 00 	R0 = [P4 + 0xe4];
    7456:	39 60       	R1 = 0x7 (X);		/*		R1=0x7(  7) */
    7458:	08 08       	CC = R0 == R1;
    745a:	07 14       	IF !CC JUMP 0x7468 <_uDNS_Tasks+0x180> (BP);
    745c:	65 e4 ab 00 	R5 = W[P4 + 0x156] (Z);
    7460:	60 e4 aa 00 	R0 = W[P4 + 0x154] (Z);
    7464:	45 51       	R5 = R5 + R0;
    7466:	0e 20       	JUMP.S 0x7482 <_uDNS_Tasks+0x19a>;
    7468:	18 0c       	CC = R0 == 0x3;
    746a:	65 a6       	R5 = W[P4 + 0x12] (Z);
    746c:	0b 14       	IF !CC JUMP 0x7482 <_uDNS_Tasks+0x19a> (BP);
    746e:	20 a2       	R0 = [P4 + 0x20];
    7470:	22 e1 00 01 	R2 = 0x100 (X);		/*		R2=0x100(256) */
    7474:	50 50       	R1 = R0 + R2;
    7476:	ff e3 c5 c5 	CALL 0x0 <_FlushAddressCacheRecords>;
    747a:	65 64       	R5 += 0xc;		/* ( 12) */
    747c:	31 a3       	R1 = [SP + 0x30];
    747e:	4d 53       	R5 = R5 - R1;
    7480:	1c 20       	JUMP.S 0x74b8 <_uDNS_Tasks+0x1d0>;
    7482:	02 61       	R2 = 0x20 (X);		/*		R2=0x20( 32) */
    7484:	a0 e4 04 00 	R0 = B[P4 + 0x4] (Z);
    7488:	10 08       	CC = R0 == R2;
    748a:	04 18       	IF CC JUMP 0x7492 <_uDNS_Tasks+0x1aa>;
    748c:	81 60       	R1 = 0x10 (X);		/*		R1=0x10( 16) */
    748e:	08 08       	CC = R0 == R1;
    7490:	0b 14       	IF !CC JUMP 0x74a6 <_uDNS_Tasks+0x1be> (BP);
    7492:	20 a2       	R0 = [P4 + 0x20];
    7494:	22 e1 00 01 	R2 = 0x100 (X);		/*		R2=0x100(256) */
    7498:	50 50       	R1 = R0 + R2;
    749a:	ff e3 b3 c5 	CALL 0x0 <_FlushAddressCacheRecords>;
    749e:	31 a3       	R1 = [SP + 0x30];
    74a0:	4d 53       	R5 = R5 - R1;
    74a2:	c5 64       	R5 += 0x18;		/* ( 24) */
    74a4:	0a 20       	JUMP.S 0x74b8 <_uDNS_Tasks+0x1d0>;
    74a6:	22 e1 00 01 	R2 = 0x100 (X);		/*		R2=0x100(256) */
    74aa:	20 a2       	R0 = [P4 + 0x20];
    74ac:	50 50       	R1 = R0 + R2;
    74ae:	ff e3 a9 c5 	CALL 0x0 <_FlushAddressCacheRecords>;
    74b2:	31 a3       	R1 = [SP + 0x30];
    74b4:	4d 53       	R5 = R5 - R1;
    74b6:	65 64       	R5 += 0xc;		/* ( 12) */
    74b8:	c0 42       	R0 = R0.L (Z);
    74ba:	45 51       	R5 = R5 + R0;
    74bc:	b2 a2       	R2 = [SP + 0x28];
    74be:	aa 52       	R2 = R2 - R5;
    74c0:	32 b3       	[SP + 0x30] = R2;
    74c2:	82 0c       	CC = R2 < 0x0;
    74c4:	4f 14       	IF !CC JUMP 0x7562 <_uDNS_Tasks+0x27a> (BP);
    74c6:	f0 a2       	R0 = [SP + 0x2c];
    74c8:	00 0c       	CC = R0 == 0x0;
    74ca:	2e 14       	IF !CC JUMP 0x7526 <_uDNS_Tasks+0x23e> (BP);
    74cc:	17 32       	P2 = R7;
    74ce:	10 91       	R0 = [P2];
    74d0:	00 0c       	CC = R0 == 0x0;
    74d2:	13 1c       	IF CC JUMP 0x74f8 <_uDNS_Tasks+0x210> (BP);
    74d4:	61 a2       	R1 = [P4 + 0x24];
    74d6:	44 30       	R0 = P4;
    74d8:	21 64       	R1 += 0x4;		/* (  4) */
    74da:	f2 a3       	R2 = [SP + 0x3c];
    74dc:	20 64       	R0 += 0x4;		/* (  4) */
    74de:	ff e3 91 c5 	CALL 0x0 <_FlushAddressCacheRecords>;
    74e2:	10 30       	R2 = R0;
    74e4:	b0 a2       	R0 = [SP + 0x28];
    74e6:	f0 b0       	[SP + 0xc] = R0;
    74e8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x10( 16) */
    74ec:	35 b1       	[SP + 0x10] = R5;
    74ee:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    74f0:	01 e1 74 3d 	R1.L = 0x3d74;		/* (15732)	R1=0x3d74(15732) */
    74f4:	ff e3 86 c5 	CALL 0x0 <_FlushAddressCacheRecords>;
    74f8:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    74fc:	38 91       	R0 = [FP];
    74fe:	20 e6 26 00 	[P4 + 0x98] = R0;
    7502:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    7506:	10 91       	R0 = [P2];
    7508:	29 e4 37 00 	R1 = [P5 + 0xdc];
    750c:	20 e6 2f 00 	[P4 + 0xbc] = R0;
    7510:	01 52       	R0 = R1 - R0;
    7512:	20 e6 30 00 	[P4 + 0xc0] = R0;
    7516:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7518:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    751a:	64 91       	P4 = [P4];
    751c:	f0 b2       	[SP + 0x2c] = R0;
    751e:	31 e6 11 00 	[SP + 0x44] = R1;
    7522:	03 68       	P3 = 0x0 (X);		/*		P3=0x0(  0) */
    7524:	95 20       	JUMP.S 0x764e <_uDNS_Tasks+0x366>;
    7526:	17 32       	P2 = R7;
    7528:	10 91       	R0 = [P2];
    752a:	00 0c       	CC = R0 == 0x0;
    752c:	14 1c       	IF CC JUMP 0x7554 <_uDNS_Tasks+0x26c> (BP);
    752e:	59 a2       	R1 = [P3 + 0x24];
    7530:	43 30       	R0 = P3;
    7532:	21 64       	R1 += 0x4;		/* (  4) */
    7534:	f2 a3       	R2 = [SP + 0x3c];
    7536:	20 64       	R0 += 0x4;		/* (  4) */
    7538:	ff e3 64 c5 	CALL 0x0 <_FlushAddressCacheRecords>;
    753c:	f0 b0       	[SP + 0xc] = R0;
    753e:	b0 a2       	R0 = [SP + 0x28];
    7540:	30 b1       	[SP + 0x10] = R0;
    7542:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_FlushAddressCacheRecords>(  0) */
    7546:	75 b1       	[SP + 0x14] = R5;
    7548:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    754a:	01 e1 b4 3d 	R1.L = 0x3db4;		/* (15796)	R1=0x3db4(15796) */
    754e:	f2 a2       	R2 = [SP + 0x2c];
    7550:	ff e3 58 c5 	CALL 0x0 <_FlushAddressCacheRecords>;
    7554:	f4 b0       	[SP + 0xc] = R4;
    7556:	45 30       	R0 = P5;
    7558:	4b 30       	R1 = P3;
    755a:	16 30       	R2 = R6;
    755c:	ff e3 10 df 	CALL 0x337c <_SendGroupRRMessage>;
    7560:	77 20       	JUMP.S 0x764e <_uDNS_Tasks+0x366>;
    7562:	17 32       	P2 = R7;
    7564:	10 91       	R0 = [P2];
    7566:	00 0c       	CC = R0 == 0x0;
    7568:	16 1c       	IF CC JUMP 0x7594 <_uDNS_Tasks+0x2ac> (BP);
    756a:	61 a2       	R1 = [P4 + 0x24];
    756c:	44 30       	R0 = P4;
    756e:	21 64       	R1 += 0x4;		/* (  4) */
    7570:	f2 a3       	R2 = [SP + 0x3c];
    7572:	20 64       	R0 += 0x4;		/* (  4) */
    7574:	ff e3 46 c5 	CALL 0x0 <_FlushAddressCacheRecords>;
    7578:	f6 b0       	[SP + 0xc] = R6;
    757a:	10 30       	R2 = R0;
    757c:	20 e4 39 00 	R0 = [P4 + 0xe4];
    7580:	30 b1       	[SP + 0x10] = R0;
    7582:	e0 a0       	R0 = [P4 + 0xc];
    7584:	70 b1       	[SP + 0x14] = R0;
    7586:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3db4(15796) */
    758a:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    758c:	01 e1 08 3e 	R1.L = 0x3e08;		/* (15880)	R1=0x3e08(15880) */
    7590:	ff e3 38 c5 	CALL 0x0 <_FlushAddressCacheRecords>;
    7594:	45 30       	R0 = P5;
    7596:	32 e5 10 00 	P2 = [SP + 0x40];
    759a:	0e 30       	R1 = R6;
    759c:	54 30       	R2 = P4;
    759e:	f2 bc       	[SP + 0xc] = P2;
    75a0:	ff e3 0c c8 	CALL 0x5b8 <_BuildUpdateMessage>;
    75a4:	b0 b2       	[SP + 0x28] = R0;
    75a6:	00 0c       	CC = R0 == 0x0;
    75a8:	15 14       	IF !CC JUMP 0x75d2 <_uDNS_Tasks+0x2ea> (BP);
    75aa:	61 a2       	R1 = [P4 + 0x24];
    75ac:	44 30       	R0 = P4;
    75ae:	55 30       	R2 = P5;
    75b0:	21 64       	R1 += 0x4;		/* (  4) */
    75b2:	ba 65       	R2 += 0x37;		/* ( 55) */
    75b4:	20 64       	R0 += 0x4;		/* (  4) */
    75b6:	ff e3 25 c5 	CALL 0x0 <_FlushAddressCacheRecords>;
    75ba:	10 30       	R2 = R0;
    75bc:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3e08(15880) */
    75c0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    75c2:	01 e1 60 3e 	R1.L = 0x3e60;		/* (15968)	R1=0x3e60(15968) */
    75c6:	ff e3 1d c5 	CALL 0x0 <_FlushAddressCacheRecords>;
    75ca:	45 30       	R0 = P5;
    75cc:	ff e3 a2 c8 	CALL 0x710 <_RRMergeFailure>;
    75d0:	62 20       	JUMP.S 0x7694 <_uDNS_Tasks+0x3ac>;
    75d2:	b0 a2       	R0 = [SP + 0x28];
    75d4:	f0 52       	R3 = R0 - R6;
    75d6:	2b 09       	CC = R3 <= R5;
    75d8:	18 1c       	IF CC JUMP 0x7608 <_uDNS_Tasks+0x320> (BP);
    75da:	61 a2       	R1 = [P4 + 0x24];
    75dc:	44 30       	R0 = P4;
    75de:	f2 a3       	R2 = [SP + 0x3c];
    75e0:	73 b2       	[SP + 0x24] = R3;
    75e2:	21 64       	R1 += 0x4;		/* (  4) */
    75e4:	20 64       	R0 += 0x4;		/* (  4) */
    75e6:	ff e3 0d c5 	CALL 0x0 <_FlushAddressCacheRecords>;
    75ea:	73 a2       	R3 = [SP + 0x24];
    75ec:	10 30       	R2 = R0;
    75ee:	f5 b0       	[SP + 0xc] = R5;
    75f0:	33 b1       	[SP + 0x10] = R3;
    75f2:	20 e4 39 00 	R0 = [P4 + 0xe4];
    75f6:	70 b1       	[SP + 0x14] = R0;
    75f8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3e60(15968) */
    75fc:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    75fe:	01 e1 9c 3e 	R1.L = 0x3e9c;		/* (16028)	R1=0x3e9c(16028) */
    7602:	ff e3 ff c4 	CALL 0x0 <_FlushAddressCacheRecords>;
    7606:	07 20       	JUMP.S 0x7614 <_uDNS_Tasks+0x32c>;
    7608:	31 a3       	R1 = [SP + 0x30];
    760a:	ae 51       	R6 = R6 + R5;
    760c:	8e 51       	R6 = R6 + R1;
    760e:	b2 a2       	R2 = [SP + 0x28];
    7610:	96 53       	R6 = R6 - R2;
    7612:	36 b3       	[SP + 0x30] = R6;
    7614:	f2 ae       	P2 = [SP + 0x2c];
    7616:	20 e4 40 00 	R0 = [P4 + 0x100];
    761a:	00 0c       	CC = R0 == 0x0;
    761c:	0a 6c       	P2 += 0x1;		/* (  1) */
    761e:	f2 be       	[SP + 0x2c] = P2;
    7620:	06 18       	IF CC JUMP 0x762c <_uDNS_Tasks+0x344>;
    7622:	ff e3 0b db 	CALL 0x2c38 <_DisposeTCPConn>;
    7626:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7628:	20 e6 40 00 	[P4 + 0x100] = R0;
    762c:	70 e5 24 00 	R0 = W[SP + 0x48] (X);
    7630:	60 e6 7a 00 	W[P4 + 0xf4] = R0;
    7634:	4c 30       	R1 = P4;
    7636:	45 30       	R0 = P5;
    7638:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    763a:	ff e3 53 cb 	CALL 0xce0 <_SetRecordRetry>;
    763e:	b6 a2       	R6 = [SP + 0x28];
    7640:	31 a3       	R1 = [SP + 0x30];
    7642:	b1 b2       	[SP + 0x28] = R1;
    7644:	00 00       	NOP;
    7646:	64 91       	P4 = [P4];
    7648:	44 0c       	CC = P4 == 0x0;
    764a:	8c 16       	IF !CC JUMP 0x7362 <_uDNS_Tasks+0x7a> (BP);
    764c:	03 20       	JUMP.S 0x7652 <_uDNS_Tasks+0x36a>;
    764e:	44 0c       	CC = P4 == 0x0;
    7650:	80 16       	IF !CC JUMP 0x7350 <_uDNS_Tasks+0x68> (BP);
    7652:	43 0c       	CC = P3 == 0x0;
    7654:	1c 18       	IF CC JUMP 0x768c <_uDNS_Tasks+0x3a4>;
    7656:	17 32       	P2 = R7;
    7658:	10 91       	R0 = [P2];
    765a:	00 0c       	CC = R0 == 0x0;
    765c:	12 1c       	IF CC JUMP 0x7680 <_uDNS_Tasks+0x398> (BP);
    765e:	59 a2       	R1 = [P3 + 0x24];
    7660:	43 30       	R0 = P3;
    7662:	55 30       	R2 = P5;
    7664:	21 64       	R1 += 0x4;		/* (  4) */
    7666:	ba 65       	R2 += 0x37;		/* ( 55) */
    7668:	20 64       	R0 += 0x4;		/* (  4) */
    766a:	ff e3 cb c4 	CALL 0x0 <_FlushAddressCacheRecords>;
    766e:	f0 b0       	[SP + 0xc] = R0;
    7670:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3e9c(16028) */
    7674:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    7676:	01 e1 00 3f 	R1.L = 0x3f00;		/* (16128)	R1=0x3f00(16128) */
    767a:	f2 a2       	R2 = [SP + 0x2c];
    767c:	ff e3 c2 c4 	CALL 0x0 <_FlushAddressCacheRecords>;
    7680:	f4 b0       	[SP + 0xc] = R4;
    7682:	45 30       	R0 = P5;
    7684:	4b 30       	R1 = P3;
    7686:	16 30       	R2 = R6;
    7688:	ff e3 7a de 	CALL 0x337c <_SendGroupRRMessage>;
    768c:	30 e4 11 00 	R0 = [SP + 0x44];
    7690:	00 0c       	CC = R0 == 0x0;
    7692:	31 14       	IF !CC JUMP 0x76f4 <_uDNS_Tasks+0x40c> (BP);
    7694:	65 30       	R4 = P5;
    7696:	2a e5 f2 07 	P2 = [P5 + 0x1fc8];
    769a:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
    769c:	bc 65       	R4 += 0x37;		/* ( 55) */
    769e:	29 20       	JUMP.S 0x76f0 <_uDNS_Tasks+0x408>;
    76a0:	00 00       	NOP;
    76a2:	11 e4 26 00 	R1 = [P2 + 0x98];
    76a6:	38 91       	R0 = [FP];
    76a8:	15 91       	R5 = [P2];
    76aa:	01 08       	CC = R1 == R0;
    76ac:	21 14       	IF !CC JUMP 0x76ee <_uDNS_Tasks+0x406> (BP);
    76ae:	11 e4 2f 00 	R1 = [P2 + 0xbc];
    76b2:	10 e4 30 00 	R0 = [P2 + 0xc0];
    76b6:	01 50       	R0 = R1 + R0;
    76b8:	29 e4 37 00 	R1 = [P5 + 0xdc];
    76bc:	08 52       	R0 = R0 - R1;
    76be:	00 0d       	CC = R0 <= 0x0;
    76c0:	11 18       	IF CC JUMP 0x76e2 <_uDNS_Tasks+0x3fa>;
    76c2:	42 30       	R0 = P2;
    76c4:	14 30       	R2 = R4;
    76c6:	20 64       	R0 += 0x4;		/* (  4) */
    76c8:	51 a2       	R1 = [P2 + 0x24];
    76ca:	21 64       	R1 += 0x4;		/* (  4) */
    76cc:	ff e3 9a c4 	CALL 0x0 <_FlushAddressCacheRecords>;
    76d0:	10 30       	R2 = R0;
    76d2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3f00(16128) */
    76d6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    76d8:	01 e1 3c 3f 	R1.L = 0x3f3c;		/* (16188)	R1=0x3f3c(16188) */
    76dc:	ff e3 92 c4 	CALL 0x0 <_FlushAddressCacheRecords>;
    76e0:	07 20       	JUMP.S 0x76ee <_uDNS_Tasks+0x406>;
    76e2:	16 e6 26 00 	[P2 + 0x98] = R6;
    76e6:	45 30       	R0 = P5;
    76e8:	4a 30       	R1 = P2;
    76ea:	ff e3 33 df 	CALL 0x3550 <_SendRecordRegistration>;
    76ee:	15 32       	P2 = R5;
    76f0:	42 0c       	CC = P2 == 0x0;
    76f2:	d7 17       	IF !CC JUMP 0x76a0 <_uDNS_Tasks+0x3b8> (BP);
    76f4:	6d 30       	R5 = P5;
    76f6:	2c e5 f2 07 	P4 = [P5 + 0x1fc8];
    76fa:	06 60       	R6 = 0x0 (X);		/*		R6=0x0(  0) */
    76fc:	bd 65       	R5 += 0x37;		/* ( 55) */
    76fe:	39 20       	JUMP.S 0x7770 <_uDNS_Tasks+0x488>;
    7700:	06 0c       	CC = R6 == 0x0;
    7702:	28 e4 37 00 	R0 = [P5 + 0xdc];
    7706:	0f 14       	IF !CC JUMP 0x7724 <_uDNS_Tasks+0x43c> (BP);
    7708:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    770c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    7710:	12 91       	R2 = [P2];
    7712:	82 50       	R2 = R2 + R0;
    7714:	45 30       	R0 = P5;
    7716:	4c 30       	R1 = P4;
    7718:	ff e3 16 d1 	CALL 0x1944 <_IsRecordMergeable>;
    771c:	00 0c       	CC = R0 == 0x0;
    771e:	27 1c       	IF CC JUMP 0x776c <_uDNS_Tasks+0x484> (BP);
    7720:	74 30       	R6 = P4;
    7722:	0f 20       	JUMP.S 0x7740 <_uDNS_Tasks+0x458>;
    7724:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    7728:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    772c:	12 91       	R2 = [P2];
    772e:	02 50       	R0 = R2 + R0;
    7730:	f0 b0       	[SP + 0xc] = R0;
    7732:	45 30       	R0 = P5;
    7734:	0e 30       	R1 = R6;
    7736:	54 30       	R2 = P4;
    7738:	ff e3 5e d1 	CALL 0x19f4 <_AreRecordsMergeable>;
    773c:	00 0c       	CC = R0 == 0x0;
    773e:	17 1c       	IF CC JUMP 0x776c <_uDNS_Tasks+0x484> (BP);
    7740:	20 e4 26 00 	R0 = [P4 + 0x98];
    7744:	00 0c       	CC = R0 == 0x0;
    7746:	10 18       	IF CC JUMP 0x7766 <_uDNS_Tasks+0x47e>;
    7748:	44 30       	R0 = P4;
    774a:	15 30       	R2 = R5;
    774c:	20 64       	R0 += 0x4;		/* (  4) */
    774e:	61 a2       	R1 = [P4 + 0x24];
    7750:	21 64       	R1 += 0x4;		/* (  4) */
    7752:	ff e3 57 c4 	CALL 0x0 <_FlushAddressCacheRecords>;
    7756:	10 30       	R2 = R0;
    7758:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3f3c(16188) */
    775c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    775e:	01 e1 7c 3f 	R1.L = 0x3f7c;		/* (16252)	R1=0x3f7c(16252) */
    7762:	ff e3 4f c4 	CALL 0x0 <_FlushAddressCacheRecords>;
    7766:	38 91       	R0 = [FP];
    7768:	20 e6 26 00 	[P4 + 0x98] = R0;
    776c:	00 00       	NOP;
    776e:	64 91       	P4 = [P4];
    7770:	44 0c       	CC = P4 == 0x0;
    7772:	c7 17       	IF !CC JUMP 0x7700 <_uDNS_Tasks+0x418> (BP);
    7774:	06 0c       	CC = R6 == 0x0;
    7776:	3b 1c       	IF CC JUMP 0x77ec <_uDNS_Tasks+0x504> (BP);
    7778:	05 60       	R5 = 0x0 (X);		/*		R5=0x0(  0) */
    777a:	2c e5 f2 07 	P4 = [P5 + 0x1fc8];
    777e:	24 20       	JUMP.S 0x77c6 <_uDNS_Tasks+0x4de>;
    7780:	00 00       	NOP;
    7782:	20 e4 39 00 	R0 = [P4 + 0xe4];
    7786:	10 0c       	CC = R0 == 0x2;
    7788:	04 18       	IF CC JUMP 0x7790 <_uDNS_Tasks+0x4a8>;
    778a:	29 60       	R1 = 0x5 (X);		/*		R1=0x5(  5) */
    778c:	08 08       	CC = R0 == R1;
    778e:	1a 14       	IF !CC JUMP 0x77c2 <_uDNS_Tasks+0x4da> (BP);
    7790:	3c 91       	R4 = [FP];
    7792:	20 e4 26 00 	R0 = [P4 + 0x98];
    7796:	20 08       	CC = R0 == R4;
    7798:	15 1c       	IF CC JUMP 0x77c2 <_uDNS_Tasks+0x4da> (BP);
    779a:	54 30       	R2 = P4;
    779c:	20 e4 2f 00 	R0 = [P4 + 0xbc];
    77a0:	82 c6 08 83 	R1 = R0 >> 0x1f;
    77a4:	01 50       	R0 = R1 + R0;
    77a6:	29 e4 37 00 	R1 = [P5 + 0xdc];
    77aa:	08 4d       	R0 >>>= 0x1;
    77ac:	08 50       	R0 = R0 + R1;
    77ae:	f0 b0       	[SP + 0xc] = R0;
    77b0:	45 30       	R0 = P5;
    77b2:	0e 30       	R1 = R6;
    77b4:	ff e3 20 d1 	CALL 0x19f4 <_AreRecordsMergeable>;
    77b8:	00 0c       	CC = R0 == 0x0;
    77ba:	04 1c       	IF CC JUMP 0x77c2 <_uDNS_Tasks+0x4da> (BP);
    77bc:	24 e6 26 00 	[P4 + 0x98] = R4;
    77c0:	0d 64       	R5 += 0x1;		/* (  1) */
    77c2:	00 00       	NOP;
    77c4:	64 91       	P4 = [P4];
    77c6:	44 0c       	CC = P4 == 0x0;
    77c8:	dc 17       	IF !CC JUMP 0x7780 <_uDNS_Tasks+0x498> (BP);
    77ca:	05 0c       	CC = R5 == 0x0;
    77cc:	0d 18       	IF CC JUMP 0x77e6 <_uDNS_Tasks+0x4fe>;
    77ce:	17 32       	P2 = R7;
    77d0:	10 91       	R0 = [P2];
    77d2:	00 0c       	CC = R0 == 0x0;
    77d4:	09 1c       	IF CC JUMP 0x77e6 <_uDNS_Tasks+0x4fe> (BP);
    77d6:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x5(  5) */
    77da:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    77dc:	01 e1 bc 3f 	R1.L = 0x3fbc;		/* (16316)	R1=0x3fbc(16316) */
    77e0:	15 30       	R2 = R5;
    77e2:	ff e3 0f c4 	CALL 0x0 <_FlushAddressCacheRecords>;
    77e6:	06 0c       	CC = R6 == 0x0;
    77e8:	02 18       	IF CC JUMP 0x77ec <_uDNS_Tasks+0x504>;
    77ea:	9f 2d       	JUMP.S 0x7328 <_uDNS_Tasks+0x40>;
    77ec:	2a e1 98 59 	P2 = 0x5998 (X);		/*		P2=0x5998(22936) */
    77f0:	95 5a       	P2 = P5 + P2;
    77f2:	4a 30       	R1 = P2;
    77f4:	f2 be       	[SP + 0x2c] = P2;
    77f6:	20 e1 ec 22 	R0 = 0x22ec (X);		/*		R0=0x22ec(8940) */
    77fa:	2a e1 8c 59 	P2 = 0x598c (X);		/*		P2=0x598c(22924) */
    77fe:	45 e1 00 00 	R5.H = 0x0;		/* (  0)	R5=0x0 <_FlushAddressCacheRecords>(  0) */
    7802:	01 50       	R0 = R1 + R0;
    7804:	95 5a       	P2 = P5 + P2;
    7806:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x0 <_FlushAddressCacheRecords> */
    780a:	2c e5 f2 07 	P4 = [P5 + 0x1fc8];
    780e:	05 e1 00 00 	R5.L = 0x0;		/* (  0)	R5=0x0 <_FlushAddressCacheRecords>(  0) */
    7812:	b0 b2       	[SP + 0x28] = R0;
    7814:	7a 30       	R7 = P2;
    7816:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_FlushAddressCacheRecords> */
    781a:	83 21       	JUMP.S 0x7b20 <_uDNS_Tasks+0x838>;
    781c:	15 32       	P2 = R5;
    781e:	e4 a1       	R4 = [P4 + 0x1c];
    7820:	10 91       	R0 = [P2];
    7822:	04 08       	CC = R4 == R0;
    7824:	7c 15       	IF !CC JUMP 0x7b1c <_uDNS_Tasks+0x834> (BP);
    7826:	a0 e4 46 00 	R0 = B[P4 + 0x46] (Z);
    782a:	00 0c       	CC = R0 == 0x0;
    782c:	78 15       	IF !CC JUMP 0x7b1c <_uDNS_Tasks+0x834> (BP);
    782e:	20 a2       	R0 = [P4 + 0x20];
    7830:	ff e3 e8 c3 	CALL 0x0 <_FlushAddressCacheRecords>;
    7834:	00 0c       	CC = R0 == 0x0;
    7836:	73 15       	IF !CC JUMP 0x7b1c <_uDNS_Tasks+0x834> (BP);
    7838:	20 e4 39 00 	R0 = [P4 + 0xe4];
    783c:	41 60       	R1 = 0x8 (X);		/*		R1=0x8(  8) */
    783e:	08 08       	CC = R0 == R1;
    7840:	6e 19       	IF CC JUMP 0x7b1c <_uDNS_Tasks+0x834>;
    7842:	32 60       	R2 = 0x6 (X);		/*		R2=0x6(  6) */
    7844:	10 08       	CC = R0 == R2;
    7846:	6b 19       	IF CC JUMP 0x7b1c <_uDNS_Tasks+0x834>;
    7848:	08 0c       	CC = R0 == 0x1;
    784a:	0b 18       	IF CC JUMP 0x7860 <_uDNS_Tasks+0x578>;
    784c:	18 0c       	CC = R0 == 0x3;
    784e:	09 18       	IF CC JUMP 0x7860 <_uDNS_Tasks+0x578>;
    7850:	39 60       	R1 = 0x7 (X);		/*		R1=0x7(  7) */
    7852:	08 08       	CC = R0 == R1;
    7854:	06 18       	IF CC JUMP 0x7860 <_uDNS_Tasks+0x578>;
    7856:	2a 60       	R2 = 0x5 (X);		/*		R2=0x5(  5) */
    7858:	10 08       	CC = R0 == R2;
    785a:	03 18       	IF CC JUMP 0x7860 <_uDNS_Tasks+0x578>;
    785c:	10 0c       	CC = R0 == 0x2;
    785e:	55 15       	IF !CC JUMP 0x7b08 <_uDNS_Tasks+0x820> (BP);
    7860:	21 e4 2f 00 	R1 = [P4 + 0xbc];
    7864:	20 e4 30 00 	R0 = [P4 + 0xc0];
    7868:	01 50       	R0 = R1 + R0;
    786a:	29 e4 37 00 	R1 = [P5 + 0xdc];
    786e:	08 52       	R0 = R0 - R1;
    7870:	00 0d       	CC = R0 <= 0x0;
    7872:	4b 15       	IF !CC JUMP 0x7b08 <_uDNS_Tasks+0x820> (BP);
    7874:	20 e4 40 00 	R0 = [P4 + 0x100];
    7878:	00 0c       	CC = R0 == 0x0;
    787a:	06 18       	IF CC JUMP 0x7886 <_uDNS_Tasks+0x59e>;
    787c:	ff e3 de d9 	CALL 0x2c38 <_DisposeTCPConn>;
    7880:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7882:	20 e6 40 00 	[P4 + 0x100] = R0;
    7886:	22 e5 3f 00 	P2 = [P4 + 0xfc];
    788a:	42 0c       	CC = P2 == 0x0;
    788c:	10 1c       	IF CC JUMP 0x78ac <_uDNS_Tasks+0x5c4> (BP);
    788e:	10 e4 c4 00 	R0 = [P2 + 0x310];
    7892:	00 0c       	CC = R0 == 0x0;
    7894:	1a 14       	IF !CC JUMP 0x78c8 <_uDNS_Tasks+0x5e0> (BP);
    7896:	49 e1 00 00 	P1.H = 0x0;		/* (  0)	P1=0x0 <_FlushAddressCacheRecords> */
    789a:	09 e1 00 00 	P1.L = 0x0;		/* (  0)	P1=0x0 <_FlushAddressCacheRecords> */
    789e:	08 95       	R0 = W[P1] (Z);
    78a0:	60 e6 7a 00 	W[P4 + 0xf4] = R0;
    78a4:	45 30       	R0 = P5;
    78a6:	4a 30       	R1 = P2;
    78a8:	ff e3 ac c3 	CALL 0x0 <_FlushAddressCacheRecords>;
    78ac:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x598c */
    78b0:	21 a2       	R1 = [P4 + 0x20];
    78b2:	0a e1 9c 61 	P2.L = 0x619c;		/* (24988)	P2=0x619c <_RecordRegistrationGotZoneData> */
    78b6:	f2 bc       	[SP + 0xc] = P2;
    78b8:	34 bd       	[SP + 0x10] = P4;
    78ba:	45 30       	R0 = P5;
    78bc:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    78be:	ff e3 c9 e4 	CALL 0x4250 <_StartGetZoneData>;
    78c2:	20 e6 3f 00 	[P4 + 0xfc] = R0;
    78c6:	05 21       	JUMP.S 0x7ad0 <_uDNS_Tasks+0x7e8>;
    78c8:	00 00       	NOP;
    78ca:	20 e4 39 00 	R0 = [P4 + 0xe4];
    78ce:	18 0c       	CC = R0 == 0x3;
    78d0:	18 15       	IF !CC JUMP 0x7b00 <_uDNS_Tasks+0x818> (BP);
    78d2:	28 a3       	R0 = [P5 + 0x30];
    78d4:	08 30       	R1 = R0;
    78d6:	ea a2       	R2 = [P5 + 0x2c];
    78d8:	09 64       	R1 += 0x1;		/* (  1) */
    78da:	0a 08       	CC = R2 == R1;
    78dc:	09 18       	IF CC JUMP 0x78ee <_uDNS_Tasks+0x606>;
    78de:	f0 b0       	[SP + 0xc] = R0;
    78e0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x7(  7) */
    78e4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    78e6:	01 e1 e8 3f 	R1.L = 0x3fe8;		/* (16360)	R1=0x3fe8(16360) */
    78ea:	ff e3 8b c3 	CALL 0x0 <_FlushAddressCacheRecords>;
    78ee:	22 e5 3f 00 	P2 = [P4 + 0xfc];
    78f2:	42 0c       	CC = P2 == 0x0;
    78f4:	05 1c       	IF CC JUMP 0x78fe <_uDNS_Tasks+0x616> (BP);
    78f6:	10 e4 c4 00 	R0 = [P2 + 0x310];
    78fa:	00 0c       	CC = R0 == 0x0;
    78fc:	15 10       	IF !CC JUMP 0x7926 <_uDNS_Tasks+0x63e>;
    78fe:	44 30       	R0 = P4;
    7900:	55 30       	R2 = P5;
    7902:	ba 65       	R2 += 0x37;		/* ( 55) */
    7904:	61 a2       	R1 = [P4 + 0x24];
    7906:	21 64       	R1 += 0x4;		/* (  4) */
    7908:	20 64       	R0 += 0x4;		/* (  4) */
    790a:	ff e3 7b c3 	CALL 0x0 <_FlushAddressCacheRecords>;
    790e:	10 30       	R2 = R0;
    7910:	a0 e4 04 00 	R0 = B[P4 + 0x4] (Z);
    7914:	f0 b0       	[SP + 0xc] = R0;
    7916:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x3fe8(16360) */
    791a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    791c:	01 e1 38 40 	R1.L = 0x4038;		/* (16440)	R1=0x4038(16440) */
    7920:	ff e3 70 c3 	CALL 0x0 <_FlushAddressCacheRecords>;
    7924:	f2 20       	JUMP.S 0x7b08 <_uDNS_Tasks+0x820>;
    7926:	21 a2       	R1 = [P4 + 0x20];
    7928:	45 30       	R0 = P5;
    792a:	ff e3 99 cf 	CALL 0x185c <_GetAuthInfoForName_internal>;
    792e:	08 30       	R1 = R0;
    7930:	45 30       	R0 = P5;
    7932:	ff e3 07 c4 	CALL 0x140 <_RRAdditionalSize>;
    7936:	b1 a2       	R1 = [SP + 0x28];
    7938:	81 53       	R6 = R1 - R0;
    793a:	45 30       	R0 = P5;
    793c:	ff e3 62 c3 	CALL 0x0 <_FlushAddressCacheRecords>;
    7940:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x619c <_RecordRegistrationGotZoneData> */
    7944:	08 30       	R1 = R0;
    7946:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    794a:	60 e6 7a 00 	W[P4 + 0xf4] = R0;
    794e:	12 95       	R2 = W[P2] (Z);
    7950:	07 30       	R0 = R7;
    7952:	ff e3 57 c3 	CALL 0x0 <_FlushAddressCacheRecords>;
    7956:	a0 e4 08 00 	R0 = B[P4 + 0x8] (Z);
    795a:	a2 e4 09 00 	R2 = B[P4 + 0x9] (Z);
    795e:	40 4f       	R0 <<= 0x8;
    7960:	21 e4 3e 00 	R1 = [P4 + 0xf8];
    7964:	02 56       	R0 = R2 | R0;
    7966:	f1 b0       	[SP + 0xc] = R1;
    7968:	30 b6       	W[SP + 0x10] = R0;
    796a:	f1 a2       	R1 = [SP + 0x2c];
    796c:	07 30       	R0 = R7;
    796e:	16 30       	R2 = R6;
    7970:	ff e3 48 c3 	CALL 0x0 <_FlushAddressCacheRecords>;
    7974:	08 30       	R1 = R0;
    7976:	00 0c       	CC = R0 == 0x0;
    7978:	b2 18       	IF CC JUMP 0x7adc <_uDNS_Tasks+0x7f4>;
    797a:	f6 b0       	[SP + 0xc] = R6;
    797c:	45 30       	R0 = P5;
    797e:	54 30       	R2 = P4;
    7980:	ff e3 1c c6 	CALL 0x5b8 <_BuildUpdateMessage>;
    7984:	30 30       	R6 = R0;
    7986:	00 0c       	CC = R0 == 0x0;
    7988:	aa 1c       	IF CC JUMP 0x7adc <_uDNS_Tasks+0x7f4> (BP);
    798a:	20 e4 3c 00 	R0 = [P4 + 0xf0];
    798e:	00 0c       	CC = R0 == 0x0;
    7990:	64 1c       	IF CC JUMP 0x7a58 <_uDNS_Tasks+0x770> (BP);
    7992:	18 91       	R0 = [P3];
    7994:	00 0c       	CC = R0 == 0x0;
    7996:	14 1c       	IF CC JUMP 0x79be <_uDNS_Tasks+0x6d6> (BP);
    7998:	61 a2       	R1 = [P4 + 0x24];
    799a:	44 30       	R0 = P4;
    799c:	55 30       	R2 = P5;
    799e:	24 e4 40 00 	R4 = [P4 + 0x100];
    79a2:	21 64       	R1 += 0x4;		/* (  4) */
    79a4:	ba 65       	R2 += 0x37;		/* ( 55) */
    79a6:	20 64       	R0 += 0x4;		/* (  4) */
    79a8:	ff e3 2c c3 	CALL 0x0 <_FlushAddressCacheRecords>;
    79ac:	f0 b0       	[SP + 0xc] = R0;
    79ae:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4038(16440) */
    79b2:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    79b4:	01 e1 84 40 	R1.L = 0x4084;		/* (16516)	R1=0x4084(16516) */
    79b8:	14 30       	R2 = R4;
    79ba:	ff e3 23 c3 	CALL 0x0 <_FlushAddressCacheRecords>;
    79be:	00 00       	NOP;
    79c0:	20 e4 40 00 	R0 = [P4 + 0x100];
    79c4:	00 0c       	CC = R0 == 0x0;
    79c6:	14 18       	IF CC JUMP 0x79ee <_uDNS_Tasks+0x706>;
    79c8:	18 91       	R0 = [P3];
    79ca:	00 0c       	CC = R0 == 0x0;
    79cc:	11 1c       	IF CC JUMP 0x79ee <_uDNS_Tasks+0x706> (BP);
    79ce:	61 a2       	R1 = [P4 + 0x24];
    79d0:	44 30       	R0 = P4;
    79d2:	55 30       	R2 = P5;
    79d4:	21 64       	R1 += 0x4;		/* (  4) */
    79d6:	ba 65       	R2 += 0x37;		/* ( 55) */
    79d8:	20 64       	R0 += 0x4;		/* (  4) */
    79da:	ff e3 13 c3 	CALL 0x0 <_FlushAddressCacheRecords>;
    79de:	10 30       	R2 = R0;
    79e0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4084(16516) */
    79e4:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    79e6:	01 e1 a8 40 	R1.L = 0x40a8;		/* (16552)	R1=0x40a8(16552) */
    79ea:	ff e3 0b c3 	CALL 0x0 <_FlushAddressCacheRecords>;
    79ee:	00 00       	NOP;
    79f0:	20 e4 40 00 	R0 = [P4 + 0x100];
    79f4:	00 0c       	CC = R0 == 0x0;
    79f6:	06 18       	IF CC JUMP 0x7a02 <_uDNS_Tasks+0x71a>;
    79f8:	ff e3 20 d9 	CALL 0x2c38 <_DisposeTCPConn>;
    79fc:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    79fe:	20 e6 40 00 	[P4 + 0x100] = R0;
    7a02:	22 e5 3f 00 	P2 = [P4 + 0xfc];
    7a06:	42 0c       	CC = P2 == 0x0;
    7a08:	10 14       	IF !CC JUMP 0x7a28 <_uDNS_Tasks+0x740> (BP);
    7a0a:	61 a2       	R1 = [P4 + 0x24];
    7a0c:	44 30       	R0 = P4;
    7a0e:	55 30       	R2 = P5;
    7a10:	21 64       	R1 += 0x4;		/* (  4) */
    7a12:	ba 65       	R2 += 0x37;		/* ( 55) */
    7a14:	20 64       	R0 += 0x4;		/* (  4) */
    7a16:	ff e3 f5 c2 	CALL 0x0 <_FlushAddressCacheRecords>;
    7a1a:	10 30       	R2 = R0;
    7a1c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x40a8(16552) */
    7a20:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7a22:	01 e1 ec 40 	R1.L = 0x40ec;		/* (16620)	R1=0x40ec(16620) */
    7a26:	6a 20       	JUMP.S 0x7afa <_uDNS_Tasks+0x812>;
    7a28:	29 e1 0c 03 	P1 = 0x30c (X);		/*		P1=0x30c(780) */
    7a2c:	4a 5a       	P1 = P2 + P1;
    7a2e:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    7a30:	31 bd       	[SP + 0x10] = P1;
    7a32:	f0 b0       	[SP + 0xc] = R0;
    7a34:	50 e5 85 01 	R0 = W[P2 + 0x30a] (X);
    7a38:	b0 b6       	W[SP + 0x14] = R0;
    7a3a:	29 e1 0a 02 	P1 = 0x20a (X);		/*		P1=0x20a(522) */
    7a3e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7a40:	8a 5a       	P2 = P2 + P1;
    7a42:	f0 b1       	[SP + 0x1c] = R0;
    7a44:	b2 bd       	[SP + 0x18] = P2;
    7a46:	34 be       	[SP + 0x20] = P4;
    7a48:	45 30       	R0 = P5;
    7a4a:	0f 30       	R1 = R7;
    7a4c:	16 30       	R2 = R6;
    7a4e:	ff e3 e1 db 	CALL 0x3210 <_MakeTCPConn>;
    7a52:	20 e6 40 00 	[P4 + 0x100] = R0;
    7a56:	3d 20       	JUMP.S 0x7ad0 <_uDNS_Tasks+0x7e8>;
    7a58:	18 91       	R0 = [P3];
    7a5a:	00 0c       	CC = R0 == 0x0;
    7a5c:	11 1c       	IF CC JUMP 0x7a7e <_uDNS_Tasks+0x796> (BP);
    7a5e:	61 a2       	R1 = [P4 + 0x24];
    7a60:	44 30       	R0 = P4;
    7a62:	55 30       	R2 = P5;
    7a64:	21 64       	R1 += 0x4;		/* (  4) */
    7a66:	ba 65       	R2 += 0x37;		/* ( 55) */
    7a68:	20 64       	R0 += 0x4;		/* (  4) */
    7a6a:	ff e3 cb c2 	CALL 0x0 <_FlushAddressCacheRecords>;
    7a6e:	10 30       	R2 = R0;
    7a70:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x40ec(16620) */
    7a74:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    7a76:	01 e1 28 41 	R1.L = 0x4128;		/* (16680)	R1=0x4128(16680) */
    7a7a:	ff e3 c3 c2 	CALL 0x0 <_FlushAddressCacheRecords>;
    7a7e:	00 00       	NOP;
    7a80:	27 e5 3f 00 	FP = [P4 + 0xfc];
    7a84:	47 0c       	CC = FP == 0x0;
    7a86:	10 14       	IF !CC JUMP 0x7aa6 <_uDNS_Tasks+0x7be> (BP);
    7a88:	61 a2       	R1 = [P4 + 0x24];
    7a8a:	44 30       	R0 = P4;
    7a8c:	55 30       	R2 = P5;
    7a8e:	21 64       	R1 += 0x4;		/* (  4) */
    7a90:	ba 65       	R2 += 0x37;		/* ( 55) */
    7a92:	20 64       	R0 += 0x4;		/* (  4) */
    7a94:	ff e3 b6 c2 	CALL 0x0 <_FlushAddressCacheRecords>;
    7a98:	10 30       	R2 = R0;
    7a9a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4128(16680) */
    7a9e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7aa0:	01 e1 48 41 	R1.L = 0x4148;		/* (16712)	R1=0x4148(16712) */
    7aa4:	2b 20       	JUMP.S 0x7afa <_uDNS_Tasks+0x812>;
    7aa6:	45 30       	R0 = P5;
    7aa8:	21 a2       	R1 = [P4 + 0x20];
    7aaa:	ff e3 d9 ce 	CALL 0x185c <_GetAuthInfoForName_internal>;
    7aae:	2a e1 0c 03 	P2 = 0x30c (X);		/*		P2=0x30c(780) */
    7ab2:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    7ab4:	97 5a       	P2 = FP + P2;
    7ab6:	31 b1       	[SP + 0x10] = R1;
    7ab8:	f4 b0       	[SP + 0xc] = R4;
    7aba:	72 bd       	[SP + 0x14] = P2;
    7abc:	7a e5 85 01 	R2 = W[FP + 0x30a] (X);
    7ac0:	32 b7       	W[SP + 0x18] = R2;
    7ac2:	f1 b1       	[SP + 0x1c] = R1;
    7ac4:	30 b2       	[SP + 0x20] = R0;
    7ac6:	45 30       	R0 = P5;
    7ac8:	0f 30       	R1 = R7;
    7aca:	16 30       	R2 = R6;
    7acc:	ff e3 9a c2 	CALL 0x0 <_FlushAddressCacheRecords>;
    7ad0:	45 30       	R0 = P5;
    7ad2:	4c 30       	R1 = P4;
    7ad4:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    7ad6:	ff e3 05 c9 	CALL 0xce0 <_SetRecordRetry>;
    7ada:	17 20       	JUMP.S 0x7b08 <_uDNS_Tasks+0x820>;
    7adc:	00 00       	NOP;
    7ade:	61 a2       	R1 = [P4 + 0x24];
    7ae0:	44 30       	R0 = P4;
    7ae2:	55 30       	R2 = P5;
    7ae4:	21 64       	R1 += 0x4;		/* (  4) */
    7ae6:	ba 65       	R2 += 0x37;		/* ( 55) */
    7ae8:	20 64       	R0 += 0x4;		/* (  4) */
    7aea:	ff e3 8b c2 	CALL 0x0 <_FlushAddressCacheRecords>;
    7aee:	10 30       	R2 = R0;
    7af0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_FlushAddressCacheRecords>(  0) */
    7af4:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7af6:	01 e1 7c 41 	R1.L = 0x417c;		/* (16764)	R1=0x417c(16764) */
    7afa:	ff e3 83 c2 	CALL 0x0 <_FlushAddressCacheRecords>;
    7afe:	05 20       	JUMP.S 0x7b08 <_uDNS_Tasks+0x820>;
    7b00:	45 30       	R0 = P5;
    7b02:	4c 30       	R1 = P4;
    7b04:	ff e3 26 dd 	CALL 0x3550 <_SendRecordRegistration>;
    7b08:	72 a3       	R2 = [SP + 0x34];
    7b0a:	21 e4 2f 00 	R1 = [P4 + 0xbc];
    7b0e:	20 e4 30 00 	R0 = [P4 + 0xc0];
    7b12:	01 50       	R0 = R1 + R0;
    7b14:	42 52       	R1 = R2 - R0;
    7b16:	01 0d       	CC = R1 <= 0x0;
    7b18:	10 06       	IF !CC R2 = R0;
    7b1a:	72 b3       	[SP + 0x34] = R2;
    7b1c:	00 00       	NOP;
    7b1e:	64 91       	P4 = [P4];
    7b20:	44 0c       	CC = P4 == 0x0;
    7b22:	7d 16       	IF !CC JUMP 0x781c <_uDNS_Tasks+0x534> (BP);
    7b24:	28 e4 fb 07 	R0 = [P5 + 0x1fec];
    7b28:	71 a3       	R1 = [SP + 0x34];
    7b2a:	08 52       	R0 = R0 - R1;
    7b2c:	00 0d       	CC = R0 <= 0x0;
    7b2e:	03 1c       	IF CC JUMP 0x7b34 <_uDNS_Tasks+0x84c> (BP);
    7b30:	29 e6 fb 07 	[P5 + 0x1fec] = R1;
    7b34:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x0 <_FlushAddressCacheRecords> */
    7b38:	2c e5 fd 07 	P4 = [P5 + 0x1ff4];
    7b3c:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_FlushAddressCacheRecords> */
    7b40:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    7b42:	2a 20       	JUMP.S 0x7b96 <_uDNS_Tasks+0x8ae>;
    7b44:	00 00       	NOP;
    7b46:	20 e4 4b 00 	R0 = [P4 + 0x12c];
    7b4a:	00 0c       	CC = R0 == 0x0;
    7b4c:	23 1c       	IF CC JUMP 0x7b92 <_uDNS_Tasks+0x8aa> (BP);
    7b4e:	29 e4 37 00 	R1 = [P5 + 0xdc];
    7b52:	41 52       	R1 = R1 - R0;
    7b54:	81 0c       	CC = R1 < 0x0;
    7b56:	17 18       	IF CC JUMP 0x7b84 <_uDNS_Tasks+0x89c>;
    7b58:	18 91       	R0 = [P3];
    7b5a:	00 0c       	CC = R0 == 0x0;
    7b5c:	11 1c       	IF CC JUMP 0x7b7e <_uDNS_Tasks+0x896> (BP);
    7b5e:	a0 e4 1c 00 	R0 = B[P4 + 0x1c] (Z);
    7b62:	a1 e4 1d 00 	R1 = B[P4 + 0x1d] (Z);
    7b66:	40 4f       	R0 <<= 0x8;
    7b68:	01 56       	R0 = R1 | R0;
    7b6a:	54 30       	R2 = P4;
    7b6c:	f0 b0       	[SP + 0xc] = R0;
    7b6e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x417c(16764) */
    7b72:	42 64       	R2 += 0x8;		/* (  8) */
    7b74:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    7b76:	01 e1 b8 41 	R1.L = 0x41b8;		/* (16824)	R1=0x41b8(16824) */
    7b7a:	ff e3 43 c2 	CALL 0x0 <_FlushAddressCacheRecords>;
    7b7e:	27 e6 4b 00 	[P4 + 0x12c] = R7;
    7b82:	08 20       	JUMP.S 0x7b92 <_uDNS_Tasks+0x8aa>;
    7b84:	29 e4 fb 07 	R1 = [P5 + 0x1fec];
    7b88:	41 52       	R1 = R1 - R0;
    7b8a:	01 0d       	CC = R1 <= 0x0;
    7b8c:	03 1c       	IF CC JUMP 0x7b92 <_uDNS_Tasks+0x8aa> (BP);
    7b8e:	28 e6 fb 07 	[P5 + 0x1fec] = R0;
    7b92:	00 00       	NOP;
    7b94:	64 91       	P4 = [P4];
    7b96:	44 0c       	CC = P4 == 0x0;
    7b98:	d6 17       	IF !CC JUMP 0x7b44 <_uDNS_Tasks+0x85c> (BP);
    7b9a:	2c e5 4e 00 	P4 = [P5 + 0x138];
    7b9e:	44 0c       	CC = P4 == 0x0;
    7ba0:	11 1c       	IF CC JUMP 0x7bc2 <_uDNS_Tasks+0x8da> (BP);
    7ba2:	60 e5 1a 01 	R0 = W[P4 + 0x234] (X);
    7ba6:	ff e3 2d c2 	CALL 0x0 <_FlushAddressCacheRecords>;
    7baa:	2a e1 34 01 	P2 = 0x134 (X);		/*		P2=0x134(308) */
    7bae:	94 5a       	P2 = P4 + P2;
    7bb0:	f0 b0       	[SP + 0xc] = R0;
    7bb2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x41b8(16824) */
    7bb6:	52 30       	R2 = P2;
    7bb8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7bba:	01 e1 e0 41 	R1.L = 0x41e0;		/* (16864)	R1=0x41e0(16864) */
    7bbe:	ff e3 21 c2 	CALL 0x0 <_FlushAddressCacheRecords>;
    7bc2:	00 00       	NOP;
    7bc4:	28 e4 4c 00 	R0 = [P5 + 0x130];
    7bc8:	23 20       	JUMP.S 0x7c0e <_uDNS_Tasks+0x926>;
    7bca:	00 00       	NOP;
    7bcc:	20 a1       	R0 = [P4 + 0x10];
    7bce:	00 0d       	CC = R0 <= 0x0;
    7bd0:	19 1c       	IF CC JUMP 0x7c02 <_uDNS_Tasks+0x91a> (BP);
    7bd2:	a0 a3       	R0 = [P4 + 0x38];
    7bd4:	00 0c       	CC = R0 == 0x0;
    7bd6:	16 14       	IF !CC JUMP 0x7c02 <_uDNS_Tasks+0x91a> (BP);
    7bd8:	60 e4 99 00 	R0 = W[P4 + 0x132] (Z);
    7bdc:	00 0c       	CC = R0 == 0x0;
    7bde:	12 1c       	IF CC JUMP 0x7c02 <_uDNS_Tasks+0x91a> (BP);
    7be0:	45 30       	R0 = P5;
    7be2:	ff e3 1b f6 	CALL 0x6818 <_uDNS_CheckCurrentQuestion>;
    7be6:	2a e5 4e 00 	P2 = [P5 + 0x138];
    7bea:	54 08       	CC = P4 == P2;
    7bec:	0b 14       	IF !CC JUMP 0x7c02 <_uDNS_Tasks+0x91a> (BP);
    7bee:	21 a1       	R1 = [P4 + 0x10];
    7bf0:	e0 a0       	R0 = [P4 + 0xc];
    7bf2:	01 50       	R0 = R1 + R0;
    7bf4:	29 e4 fb 07 	R1 = [P5 + 0x1fec];
    7bf8:	41 52       	R1 = R1 - R0;
    7bfa:	01 0d       	CC = R1 <= 0x0;
    7bfc:	03 1c       	IF CC JUMP 0x7c02 <_uDNS_Tasks+0x91a> (BP);
    7bfe:	28 e6 fb 07 	[P5 + 0x1fec] = R0;
    7c02:	00 00       	NOP;
    7c04:	2a e5 4e 00 	P2 = [P5 + 0x138];
    7c08:	62 08       	CC = P2 == P4;
    7c0a:	04 14       	IF !CC JUMP 0x7c12 <_uDNS_Tasks+0x92a> (BP);
    7c0c:	10 91       	R0 = [P2];
    7c0e:	28 e6 4e 00 	[P5 + 0x138] = R0;
    7c12:	00 00       	NOP;
    7c14:	2c e5 4e 00 	P4 = [P5 + 0x138];
    7c18:	44 0c       	CC = P4 == 0x0;
    7c1a:	05 1c       	IF CC JUMP 0x7c24 <_uDNS_Tasks+0x93c> (BP);
    7c1c:	2a e5 4d 00 	P2 = [P5 + 0x134];
    7c20:	54 08       	CC = P4 == P2;
    7c22:	d4 17       	IF !CC JUMP 0x7bca <_uDNS_Tasks+0x8e2> (BP);
    7c24:	e6 6d       	SP += 0x3c;		/* ( 60) */
    7c26:	e6 6c       	SP += 0x1c;		/* ( 28) */
    7c28:	77 90       	FP = [SP++];
    7c2a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7c2c:	28 e6 4e 00 	[P5 + 0x138] = R0;
    7c30:	27 01       	RETS = [SP++];
    7c32:	a3 05       	(R7:4, P5:3) = [SP++];
    7c34:	10 00       	RTS;
	...

00007c38 <_SleepRecordRegistrations>:
_SleepRecordRegistrations():
    7c38:	eb 05       	[--SP] = (R7:5, P5:3);
    7c3a:	20 32       	P4 = R0;
    7c3c:	00 e8 04 00 	LINK 0x10;		/* (16) */
    7c40:	4f e1 00 00 	FP.H = 0x0;		/* (  0)	FP=0x0 <_FlushAddressCacheRecords> */
    7c44:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x0 <_FlushAddressCacheRecords> */
    7c48:	0f e1 00 00 	FP.L = 0x0;		/* (  0)	FP=0x0 <_FlushAddressCacheRecords> */
    7c4c:	25 e5 f2 07 	P5 = [P4 + 0x1fc8];
    7c50:	15 60       	R5 = 0x2 (X);		/*		R5=0x2(  2) */
    7c52:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    7c54:	26 e1 04 01 	R6 = 0x104 (X);		/*		R6=0x104(260) */
    7c58:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_FlushAddressCacheRecords> */
    7c5c:	4b 20       	JUMP.S 0x7cf2 <_SleepRecordRegistrations+0xba>;
    7c5e:	00 00       	NOP;
    7c60:	e9 a1       	R1 = [P5 + 0x1c];
    7c62:	38 91       	R0 = [FP];
    7c64:	01 08       	CC = R1 == R0;
    7c66:	44 14       	IF !CC JUMP 0x7cee <_SleepRecordRegistrations+0xb6> (BP);
    7c68:	a8 e4 46 00 	R0 = B[P5 + 0x46] (Z);
    7c6c:	00 0c       	CC = R0 == 0x0;
    7c6e:	40 14       	IF !CC JUMP 0x7cee <_SleepRecordRegistrations+0xb6> (BP);
    7c70:	28 a2       	R0 = [P5 + 0x20];
    7c72:	ff e3 c7 c1 	CALL 0x0 <_FlushAddressCacheRecords>;
    7c76:	00 0c       	CC = R0 == 0x0;
    7c78:	3b 14       	IF !CC JUMP 0x7cee <_SleepRecordRegistrations+0xb6> (BP);
    7c7a:	29 e4 3f 00 	R1 = [P5 + 0xfc];
    7c7e:	01 0c       	CC = R1 == 0x0;
    7c80:	09 18       	IF CC JUMP 0x7c92 <_SleepRecordRegistrations+0x5a>;
    7c82:	18 95       	R0 = W[P3] (Z);
    7c84:	68 e6 7a 00 	W[P5 + 0xf4] = R0;
    7c88:	44 30       	R0 = P4;
    7c8a:	ff e3 bb c1 	CALL 0x0 <_FlushAddressCacheRecords>;
    7c8e:	2f e6 3f 00 	[P5 + 0xfc] = R7;
    7c92:	28 e4 4f 00 	R0 = [P5 + 0x13c];
    7c96:	00 0c       	CC = R0 == 0x0;
    7c98:	08 18       	IF CC JUMP 0x7ca8 <_SleepRecordRegistrations+0x70>;
    7c9a:	45 30       	R0 = P5;
    7c9c:	70 50       	R1 = R0 + R6;
    7c9e:	44 30       	R0 = P4;
    7ca0:	ff e3 9e d2 	CALL 0x21dc <_mDNS_StopNATOperation_internal>;
    7ca4:	2f e6 4f 00 	[P5 + 0x13c] = R7;
    7ca8:	28 e4 39 00 	R0 = [P5 + 0xe4];
    7cac:	39 60       	R1 = 0x7 (X);		/*		R1=0x7(  7) */
    7cae:	08 08       	CC = R0 == R1;
    7cb0:	1b 14       	IF !CC JUMP 0x7ce6 <_SleepRecordRegistrations+0xae> (BP);
    7cb2:	2a e5 35 00 	P2 = [P5 + 0xd4];
    7cb6:	2d e6 39 00 	[P5 + 0xe4] = R5;
    7cba:	42 0c       	CC = P2 == 0x0;
    7cbc:	09 1c       	IF CC JUMP 0x7cce <_SleepRecordRegistrations+0x96> (BP);
    7cbe:	4d 30       	R1 = P5;
    7cc0:	68 e5 aa 00 	R0 = W[P5 + 0x154] (X);
    7cc4:	2a e4 57 00 	R2 = [P5 + 0x15c];
    7cc8:	b0 b5       	W[SP + 0xc] = R0;
    7cca:	44 30       	R0 = P4;
    7ccc:	62 00       	CALL (P2);
    7cce:	45 30       	R0 = P5;
    7cd0:	20 64       	R0 += 0x4;		/* (  4) */
    7cd2:	29 e4 58 00 	R1 = [P5 + 0x160];
    7cd6:	6a e5 ab 00 	R2 = W[P5 + 0x156] (X);
    7cda:	ff e3 93 c1 	CALL 0x0 <_FlushAddressCacheRecords>;
    7cde:	2f e6 57 00 	[P5 + 0x15c] = R7;
    7ce2:	2f e6 58 00 	[P5 + 0x160] = R7;
    7ce6:	44 30       	R0 = P4;
    7ce8:	4d 30       	R1 = P5;
    7cea:	ff e3 53 f1 	CALL 0x5f90 <_uDNS_DeregisterRecord>;
    7cee:	00 00       	NOP;
    7cf0:	6d 91       	P5 = [P5];
    7cf2:	45 0c       	CC = P5 == 0x0;
    7cf4:	b5 17       	IF !CC JUMP 0x7c5e <_SleepRecordRegistrations+0x26> (BP);
    7cf6:	86 6c       	SP += 0x10;		/* ( 16) */
    7cf8:	77 90       	FP = [SP++];
    7cfa:	27 01       	RETS = [SP++];
    7cfc:	ab 05       	(R7:5, P5:3) = [SP++];
    7cfe:	10 00       	RTS;

00007d00 <_mDNS_AddSearchDomain>:
_mDNS_AddSearchDomain():
    7d00:	f5 05       	[--SP] = (R7:6, P5:5);
    7d02:	67 01       	[--SP] = RETS;
    7d04:	4d e1 00 00 	P5.H = 0x0;		/* (  0)	P5=0x0 <_FlushAddressCacheRecords> */
    7d08:	86 6f       	SP += -0x10;		/* (-16) */
    7d0a:	38 30       	R7 = R0;
    7d0c:	31 30       	R6 = R1;
    7d0e:	0d e1 00 00 	P5.L = 0x0;		/* (  0)	P5=0x0 <_FlushAddressCacheRecords> */
    7d12:	2d 20       	JUMP.S 0x7d6c <_mDNS_AddSearchDomain+0x6c>;
    7d14:	00 00       	NOP;
    7d16:	10 e4 42 00 	R0 = [P2 + 0x108];
    7d1a:	30 08       	CC = R0 == R6;
    7d1c:	26 14       	IF !CC JUMP 0x7d68 <_mDNS_AddSearchDomain+0x68> (BP);
    7d1e:	42 30       	R0 = P2;
    7d20:	20 64       	R0 += 0x4;		/* (  4) */
    7d22:	0f 30       	R1 = R7;
    7d24:	ff e3 6e c1 	CALL 0x0 <_FlushAddressCacheRecords>;
    7d28:	00 0c       	CC = R0 == 0x0;
    7d2a:	1f 1c       	IF CC JUMP 0x7d68 <_mDNS_AddSearchDomain+0x68> (BP);
    7d2c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x134 */
    7d30:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    7d34:	10 91       	R0 = [P2];
    7d36:	00 0c       	CC = R0 == 0x0;
    7d38:	09 1c       	IF CC JUMP 0x7d4a <_mDNS_AddSearchDomain+0x4a> (BP);
    7d3a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x7(  7) */
    7d3e:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    7d40:	01 e1 1c 42 	R1.L = 0x421c;		/* (16924)	R1=0x421c(16924) */
    7d44:	17 30       	R2 = R7;
    7d46:	ff e3 5d c1 	CALL 0x0 <_FlushAddressCacheRecords>;
    7d4a:	00 00       	NOP;
    7d4c:	6a 91       	P2 = [P5];
    7d4e:	10 e4 41 00 	R0 = [P2 + 0x104];
    7d52:	00 48       	CC = !BITTST (R0, 0x0);		/* bit  0 */
    7d54:	04 1c       	IF CC JUMP 0x7d5c <_mDNS_AddSearchDomain+0x5c> (BP);
    7d56:	00 4c       	BITCLR (R0, 0x0);		/* bit  0 */
    7d58:	10 e6 41 00 	[P2 + 0x104] = R0;
    7d5c:	00 00       	NOP;
    7d5e:	10 91       	R0 = [P2];
    7d60:	28 93       	[P5] = R0;
    7d62:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7d64:	10 93       	[P2] = R0;
    7d66:	08 20       	JUMP.S 0x7d76 <_mDNS_AddSearchDomain+0x76>;
    7d68:	00 00       	NOP;
    7d6a:	6d 91       	P5 = [P5];
    7d6c:	6a 91       	P2 = [P5];
    7d6e:	42 0c       	CC = P2 == 0x0;
    7d70:	d2 17       	IF !CC JUMP 0x7d14 <_mDNS_AddSearchDomain+0x14> (BP);
    7d72:	02 20       	JUMP.S 0x7d76 <_mDNS_AddSearchDomain+0x76>;
    7d74:	28 32       	P5 = R0;
    7d76:	28 91       	R0 = [P5];
    7d78:	00 0c       	CC = R0 == 0x0;
    7d7a:	fd 17       	IF !CC JUMP 0x7d74 <_mDNS_AddSearchDomain+0x74> (BP);
    7d7c:	42 0c       	CC = P2 == 0x0;
    7d7e:	03 18       	IF CC JUMP 0x7d84 <_mDNS_AddSearchDomain+0x84>;
    7d80:	6a 93       	[P5] = P2;
    7d82:	40 20       	JUMP.S 0x7e02 <_mDNS_AddSearchDomain+0x102>;
    7d84:	20 e1 08 0d 	R0 = 0xd08 (X);		/*		R0=0xd08(3336) */
    7d88:	ff e3 3c c1 	CALL 0x0 <_FlushAddressCacheRecords>;
    7d8c:	28 93       	[P5] = R0;
    7d8e:	00 0c       	CC = R0 == 0x0;
    7d90:	0a 14       	IF !CC JUMP 0x7da4 <_mDNS_AddSearchDomain+0xa4> (BP);
    7d92:	86 6c       	SP += 0x10;		/* ( 16) */
    7d94:	27 01       	RETS = [SP++];
    7d96:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x421c(16924) */
    7d9a:	01 e1 48 42 	R1.L = 0x4248;		/* (16968)	R1=0x4248(16968) */
    7d9e:	b5 05       	(R7:6, P5:5) = [SP++];
    7da0:	ff e2 30 c1 	JUMP.L 0x0 <_FlushAddressCacheRecords>;
    7da4:	21 e1 08 0d 	R1 = 0xd08 (X);		/*		R1=0xd08(3336) */
    7da8:	ff e3 2c c1 	CALL 0x0 <_FlushAddressCacheRecords>;
    7dac:	21 e1 00 01 	R1 = 0x100 (X);		/*		R1=0x100(256) */
    7db0:	4f 50       	R1 = R7 + R1;
    7db2:	07 30       	R0 = R7;
    7db4:	ff e3 26 c1 	CALL 0x0 <_FlushAddressCacheRecords>;
    7db8:	c2 42       	R2 = R0.L (Z);
    7dba:	20 e1 00 01 	R0 = 0x100 (X);		/*		R0=0x100(256) */
    7dbe:	02 0a       	CC = R2 <= R0 (IU);
    7dc0:	6a 91       	P2 = [P5];
    7dc2:	07 14       	IF !CC JUMP 0x7dd0 <_mDNS_AddSearchDomain+0xd0> (BP);
    7dc4:	42 30       	R0 = P2;
    7dc6:	20 64       	R0 += 0x4;		/* (  4) */
    7dc8:	0f 30       	R1 = R7;
    7dca:	ff e3 1b c1 	CALL 0x0 <_FlushAddressCacheRecords>;
    7dce:	04 20       	JUMP.S 0x7dd6 <_mDNS_AddSearchDomain+0xd6>;
    7dd0:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7dd2:	90 e6 04 00 	B[P2 + 0x4] = R0;
    7dd6:	6a 91       	P2 = [P5];
    7dd8:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7dda:	10 93       	[P2] = R0;
    7ddc:	6a 91       	P2 = [P5];
    7dde:	16 e6 42 00 	[P2 + 0x108] = R6;
    7de2:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    7de6:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    7dea:	10 91       	R0 = [P2];
    7dec:	00 0c       	CC = R0 == 0x0;
    7dee:	0a 1c       	IF CC JUMP 0x7e02 <_mDNS_AddSearchDomain+0x102> (BP);
    7df0:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x100(256) */
    7df4:	f6 b0       	[SP + 0xc] = R6;
    7df6:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    7df8:	01 e1 70 42 	R1.L = 0x4270;		/* (17008)	R1=0x4270(17008) */
    7dfc:	17 30       	R2 = R7;
    7dfe:	ff e3 01 c1 	CALL 0x0 <_FlushAddressCacheRecords>;
    7e02:	86 6c       	SP += 0x10;		/* ( 16) */
    7e04:	27 01       	RETS = [SP++];
    7e06:	b5 05       	(R7:6, P5:5) = [SP++];
    7e08:	10 00       	RTS;
	...

00007e0c <_uDNS_SetupSearchDomains>:
_uDNS_SetupSearchDomains():
    7e0c:	e3 05       	[--SP] = (R7:4, P5:3);
    7e0e:	00 e8 0c 00 	LINK 0x30;		/* (48) */
    7e12:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    7e16:	20 32       	P4 = R0;
    7e18:	31 e6 16 00 	[SP + 0x58] = R1;
    7e1c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    7e20:	07 20       	JUMP.S 0x7e2e <_uDNS_SetupSearchDomains+0x22>;
    7e22:	00 00       	NOP;
    7e24:	10 e4 41 00 	R0 = [P2 + 0x104];
    7e28:	00 4a       	BITSET (R0, 0x0);		/* bit  0 */
    7e2a:	10 e6 41 00 	[P2 + 0x104] = R0;
    7e2e:	52 91       	P2 = [P2];
    7e30:	42 0c       	CC = P2 == 0x0;
    7e32:	f8 17       	IF !CC JUMP 0x7e22 <_uDNS_SetupSearchDomains+0x16> (BP);
    7e34:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4270(17008) */
    7e38:	44 30       	R0 = P4;
    7e3a:	01 e1 48 00 	R1.L = 0x48;		/* ( 72)	R1=0x48( 72) */
    7e3e:	ff e3 e1 c0 	CALL 0x0 <_FlushAddressCacheRecords>;
    7e42:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7e44:	f0 b0       	[SP + 0xc] = R0;
    7e46:	30 b1       	[SP + 0x10] = R0;
    7e48:	70 b1       	[SP + 0x14] = R0;
    7e4a:	44 30       	R0 = P4;
    7e4c:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    7e4e:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
    7e50:	ff e3 d8 c0 	CALL 0x0 <_FlushAddressCacheRecords>;
    7e54:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_FlushAddressCacheRecords>(  0) */
    7e58:	44 30       	R0 = P4;
    7e5a:	01 e1 48 00 	R1.L = 0x48;		/* ( 72)	R1=0x48( 72) */
    7e5e:	ff e3 d1 c0 	CALL 0x0 <_FlushAddressCacheRecords>;
    7e62:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    7e64:	31 e4 16 00 	R1 = [SP + 0x58];
    7e68:	41 54       	R1 = R1 & R0;
    7e6a:	f1 b2       	[SP + 0x2c] = R1;
    7e6c:	01 0c       	CC = R1 == 0x0;
    7e6e:	03 1c       	IF CC JUMP 0x7e74 <_uDNS_SetupSearchDomains+0x68> (BP);
    7e70:	20 e6 df 09 	[P4 + 0x277c] = R0;
    7e74:	4f e1 00 00 	FP.H = 0x0;		/* (  0)	FP=0x0 <_FlushAddressCacheRecords> */
    7e78:	45 e1 00 00 	R5.H = 0x0;		/* (  0)	R5=0x2(  2) */
    7e7c:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x0 <_FlushAddressCacheRecords> */
    7e80:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0x104(260) */
    7e84:	0f e1 00 00 	FP.L = 0x0;		/* (  0)	FP=0x0 <_FlushAddressCacheRecords> */
    7e88:	05 e1 00 00 	R5.L = 0x0;		/* (  0)	R5=0x0 <_FlushAddressCacheRecords>(  0) */
    7e8c:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_FlushAddressCacheRecords> */
    7e90:	24 e1 0c 01 	R4 = 0x10c (X);		/*		R4=0x10c(268) */
    7e94:	06 e1 2c 03 	R6.L = 0x32c;		/* (812)	R6=0x32c <_FoundDomain>(812) */
    7e98:	ef 20       	JUMP.S 0x8076 <_uDNS_SetupSearchDomains+0x26a>;
    7e9a:	15 32       	P2 = R5;
    7e9c:	10 91       	R0 = [P2];
    7e9e:	00 0c       	CC = R0 == 0x0;
    7ea0:	16 1c       	IF CC JUMP 0x7ecc <_uDNS_SetupSearchDomains+0xc0> (BP);
    7ea2:	28 e4 41 00 	R0 = [P5 + 0x104];
    7ea6:	f0 b0       	[SP + 0xc] = R0;
    7ea8:	28 e4 41 03 	R0 = [P5 + 0xd04];
    7eac:	30 b1       	[SP + 0x10] = R0;
    7eae:	28 e4 42 00 	R0 = [P5 + 0x108];
    7eb2:	70 b1       	[SP + 0x14] = R0;
    7eb4:	45 30       	R0 = P5;
    7eb6:	20 64       	R0 += 0x4;		/* (  4) */
    7eb8:	b0 b1       	[SP + 0x18] = R0;
    7eba:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x48( 72) */
    7ebe:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    7ec0:	01 e1 a8 42 	R1.L = 0x42a8;		/* (17064)	R1=0x42a8(17064) */
    7ec4:	32 e4 16 00 	R2 = [SP + 0x58];
    7ec8:	ff e3 9c c0 	CALL 0x0 <_FlushAddressCacheRecords>;
    7ecc:	00 00       	NOP;
    7ece:	28 e4 41 00 	R0 = [P5 + 0x104];
    7ed2:	00 48       	CC = !BITTST (R0, 0x0);		/* bit  0 */
    7ed4:	51 1c       	IF CC JUMP 0x7f76 <_uDNS_SetupSearchDomains+0x16a> (BP);
    7ed6:	2f e4 41 03 	R7 = [P5 + 0xd04];
    7eda:	01 60       	R1 = 0x0 (X);		/*		R1=0x0(  0) */
    7edc:	29 e6 41 03 	[P5 + 0xd04] = R1;
    7ee0:	29 91       	R1 = [P5];
    7ee2:	39 93       	[FP] = R1;
    7ee4:	08 48       	CC = !BITTST (R0, 0x1);		/* bit  1 */
    7ee6:	31 1c       	IF CC JUMP 0x7f48 <_uDNS_SetupSearchDomains+0x13c> (BP);
    7ee8:	45 30       	R0 = P5;
    7eea:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0 <_FlushAddressCacheRecords>(  0) */
    7eee:	20 64       	R0 += 0x4;		/* (  4) */
    7ef0:	01 e1 f8 42 	R1.L = 0x42f8;		/* (17144)	R1=0x42f8(17144) */
    7ef4:	ff e3 86 c0 	CALL 0x0 <_FlushAddressCacheRecords>;
    7ef8:	00 0c       	CC = R0 == 0x0;
    7efa:	27 14       	IF !CC JUMP 0x7f48 <_uDNS_SetupSearchDomains+0x13c> (BP);
    7efc:	29 e4 42 00 	R1 = [P5 + 0x108];
    7f00:	18 91       	R0 = [P3];
    7f02:	01 08       	CC = R1 == R0;
    7f04:	22 14       	IF !CC JUMP 0x7f48 <_uDNS_SetupSearchDomains+0x13c> (BP);
    7f06:	45 30       	R0 = P5;
    7f08:	60 50       	R1 = R0 + R4;
    7f0a:	44 30       	R0 = P4;
    7f0c:	ff e3 7a c0 	CALL 0x0 <_FlushAddressCacheRecords>;
    7f10:	55 30       	R2 = P5;
    7f12:	20 e1 38 08 	R0 = 0x838 (X);		/*		R0=0x838(2104) */
    7f16:	42 50       	R1 = R2 + R0;
    7f18:	44 30       	R0 = P4;
    7f1a:	ff e3 73 c0 	CALL 0x0 <_FlushAddressCacheRecords>;
    7f1e:	55 30       	R2 = P5;
    7f20:	20 e1 70 03 	R0 = 0x370 (X);		/*		R0=0x370(880) */
    7f24:	42 50       	R1 = R2 + R0;
    7f26:	44 30       	R0 = P4;
    7f28:	ff e3 6c c0 	CALL 0x0 <_FlushAddressCacheRecords>;
    7f2c:	55 30       	R2 = P5;
    7f2e:	20 e1 9c 0a 	R0 = 0xa9c (X);		/*		R0=0xa9c(2716) */
    7f32:	42 50       	R1 = R2 + R0;
    7f34:	44 30       	R0 = P4;
    7f36:	ff e3 65 c0 	CALL 0x0 <_FlushAddressCacheRecords>;
    7f3a:	2a e1 d4 05 	P2 = 0x5d4 (X);		/*		P2=0x5d4(1492) */
    7f3e:	95 5a       	P2 = P5 + P2;
    7f40:	4a 30       	R1 = P2;
    7f42:	44 30       	R0 = P4;
    7f44:	ff e3 5e c0 	CALL 0x0 <_FlushAddressCacheRecords>;
    7f48:	45 30       	R0 = P5;
    7f4a:	ff e3 5b c0 	CALL 0x0 <_FlushAddressCacheRecords>;
    7f4e:	11 20       	JUMP.S 0x7f70 <_uDNS_SetupSearchDomains+0x164>;
    7f50:	17 32       	P2 = R7;
    7f52:	44 30       	R0 = P4;
    7f54:	17 90       	R7 = [P2++];
    7f56:	4a 30       	R1 = P2;
    7f58:	ff e3 54 c0 	CALL 0x0 <_FlushAddressCacheRecords>;
    7f5c:	10 30       	R2 = R0;
    7f5e:	00 0c       	CC = R0 == 0x0;
    7f60:	08 1c       	IF CC JUMP 0x7f70 <_uDNS_SetupSearchDomains+0x164> (BP);
    7f62:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x42f8(17144) */
    7f66:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    7f68:	01 e1 00 43 	R1.L = 0x4300;		/* (17152)	R1=0x4300(17152) */
    7f6c:	ff e3 4a c0 	CALL 0x0 <_FlushAddressCacheRecords>;
    7f70:	07 0c       	CC = R7 == 0x0;
    7f72:	ef 17       	IF !CC JUMP 0x7f50 <_uDNS_SetupSearchDomains+0x144> (BP);
    7f74:	81 20       	JUMP.S 0x8076 <_uDNS_SetupSearchDomains+0x26a>;
    7f76:	f1 a2       	R1 = [SP + 0x2c];
    7f78:	01 0c       	CC = R1 == 0x0;
    7f7a:	7d 1c       	IF CC JUMP 0x8074 <_uDNS_SetupSearchDomains+0x268> (BP);
    7f7c:	08 48       	CC = !BITTST (R0, 0x1);		/* bit  1 */
    7f7e:	7b 14       	IF !CC JUMP 0x8074 <_uDNS_SetupSearchDomains+0x268> (BP);
    7f80:	7d 30       	R7 = P5;
    7f82:	27 64       	R7 += 0x4;		/* (  4) */
    7f84:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4300(17152) */
    7f88:	07 30       	R0 = R7;
    7f8a:	01 e1 f8 42 	R1.L = 0x42f8;		/* (17144)	R1=0x42f8(17144) */
    7f8e:	ff e3 39 c0 	CALL 0x0 <_FlushAddressCacheRecords>;
    7f92:	00 0c       	CC = R0 == 0x0;
    7f94:	70 14       	IF !CC JUMP 0x8074 <_uDNS_SetupSearchDomains+0x268> (BP);
    7f96:	28 e4 42 00 	R0 = [P5 + 0x108];
    7f9a:	19 91       	R1 = [P3];
    7f9c:	08 08       	CC = R0 == R1;
    7f9e:	6b 14       	IF !CC JUMP 0x8074 <_uDNS_SetupSearchDomains+0x268> (BP);
    7fa0:	55 30       	R2 = P5;
    7fa2:	62 50       	R1 = R2 + R4;
    7fa4:	30 b1       	[SP + 0x10] = R0;
    7fa6:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    7fa8:	f7 b0       	[SP + 0xc] = R7;
    7faa:	76 b1       	[SP + 0x14] = R6;
    7fac:	b5 bd       	[SP + 0x18] = P5;
    7fae:	44 30       	R0 = P4;
    7fb0:	ff e3 28 c0 	CALL 0x0 <_FlushAddressCacheRecords>;
    7fb4:	38 32       	FP = R0;
    7fb6:	45 30       	R0 = P5;
    7fb8:	22 e1 70 03 	R2 = 0x370 (X);		/*		R2=0x370(880) */
    7fbc:	50 50       	R1 = R0 + R2;
    7fbe:	f7 b0       	[SP + 0xc] = R7;
    7fc0:	28 e4 42 00 	R0 = [P5 + 0x108];
    7fc4:	30 b1       	[SP + 0x10] = R0;
    7fc6:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
    7fc8:	76 b1       	[SP + 0x14] = R6;
    7fca:	b5 bd       	[SP + 0x18] = P5;
    7fcc:	44 30       	R0 = P4;
    7fce:	ff e3 19 c0 	CALL 0x0 <_FlushAddressCacheRecords>;
    7fd2:	18 30       	R3 = R0;
    7fd4:	45 30       	R0 = P5;
    7fd6:	22 e1 38 08 	R2 = 0x838 (X);		/*		R2=0x838(2104) */
    7fda:	50 50       	R1 = R0 + R2;
    7fdc:	f7 b0       	[SP + 0xc] = R7;
    7fde:	28 e4 42 00 	R0 = [P5 + 0x108];
    7fe2:	30 b1       	[SP + 0x10] = R0;
    7fe4:	33 b2       	[SP + 0x20] = R3;
    7fe6:	1a 60       	R2 = 0x3 (X);		/*		R2=0x3(  3) */
    7fe8:	76 b1       	[SP + 0x14] = R6;
    7fea:	b5 bd       	[SP + 0x18] = P5;
    7fec:	44 30       	R0 = P4;
    7fee:	ff e3 09 c0 	CALL 0x0 <_FlushAddressCacheRecords>;
    7ff2:	10 32       	P2 = R0;
    7ff4:	45 30       	R0 = P5;
    7ff6:	22 e1 9c 0a 	R2 = 0xa9c (X);		/*		R2=0xa9c(2716) */
    7ffa:	50 50       	R1 = R0 + R2;
    7ffc:	f7 b0       	[SP + 0xc] = R7;
    7ffe:	28 e4 42 00 	R0 = [P5 + 0x108];
    8002:	30 b1       	[SP + 0x10] = R0;
    8004:	72 be       	[SP + 0x24] = P2;
    8006:	22 60       	R2 = 0x4 (X);		/*		R2=0x4(  4) */
    8008:	76 b1       	[SP + 0x14] = R6;
    800a:	b5 bd       	[SP + 0x18] = P5;
    800c:	44 30       	R0 = P4;
    800e:	ff e3 f9 bf 	CALL 0x0 <_FlushAddressCacheRecords>;
    8012:	08 32       	P1 = R0;
    8014:	f7 b0       	[SP + 0xc] = R7;
    8016:	28 e4 42 00 	R0 = [P5 + 0x108];
    801a:	28 e1 d4 05 	P0 = 0x5d4 (X);		/*		P0=0x5d4(1492) */
    801e:	05 5a       	P0 = P5 + P0;
    8020:	30 b1       	[SP + 0x10] = R0;
    8022:	b1 be       	[SP + 0x28] = P1;
    8024:	48 30       	R1 = P0;
    8026:	76 b1       	[SP + 0x14] = R6;
    8028:	b5 bd       	[SP + 0x18] = P5;
    802a:	44 30       	R0 = P4;
    802c:	12 60       	R2 = 0x2 (X);		/*		R2=0x2(  2) */
    802e:	ff e3 e9 bf 	CALL 0x0 <_FlushAddressCacheRecords>;
    8032:	47 0c       	CC = FP == 0x0;
    8034:	33 a2       	R3 = [SP + 0x20];
    8036:	b1 ae       	P1 = [SP + 0x28];
    8038:	72 ae       	P2 = [SP + 0x24];
    803a:	09 10       	IF !CC JUMP 0x804c <_uDNS_SetupSearchDomains+0x240>;
    803c:	03 0c       	CC = R3 == 0x0;
    803e:	07 14       	IF !CC JUMP 0x804c <_uDNS_SetupSearchDomains+0x240> (BP);
    8040:	42 0c       	CC = P2 == 0x0;
    8042:	05 14       	IF !CC JUMP 0x804c <_uDNS_SetupSearchDomains+0x240> (BP);
    8044:	41 0c       	CC = P1 == 0x0;
    8046:	03 14       	IF !CC JUMP 0x804c <_uDNS_SetupSearchDomains+0x240> (BP);
    8048:	00 0c       	CC = R0 == 0x0;
    804a:	0f 1c       	IF CC JUMP 0x8068 <_uDNS_SetupSearchDomains+0x25c> (BP);
    804c:	55 30       	R2 = P5;
    804e:	f0 b1       	[SP + 0x1c] = R0;
    8050:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x42f8(17144) */
    8054:	22 64       	R2 += 0x4;		/* (  4) */
    8056:	f7 bc       	[SP + 0xc] = FP;
    8058:	33 b1       	[SP + 0x10] = R3;
    805a:	72 bd       	[SP + 0x14] = P2;
    805c:	b1 bd       	[SP + 0x18] = P1;
    805e:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    8060:	01 e1 40 43 	R1.L = 0x4340;		/* (17216)	R1=0x4340(17216) */
    8064:	ff e3 ce bf 	CALL 0x0 <_FlushAddressCacheRecords>;
    8068:	00 00       	NOP;
    806a:	28 e4 41 00 	R0 = [P5 + 0x104];
    806e:	08 4a       	BITSET (R0, 0x1);		/* bit  1 */
    8070:	28 e6 41 00 	[P5 + 0x104] = R0;
    8074:	7d 32       	FP = P5;
    8076:	7d 91       	P5 = [FP];
    8078:	45 0c       	CC = P5 == 0x0;
    807a:	10 17       	IF !CC JUMP 0x7e9a <_uDNS_SetupSearchDomains+0x8e> (BP);
    807c:	86 6d       	SP += 0x30;		/* ( 48) */
    807e:	77 90       	FP = [SP++];
    8080:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    8082:	27 01       	RETS = [SP++];
    8084:	a3 05       	(R7:4, P5:3) = [SP++];
    8086:	10 00       	RTS;

00008088 <_uDNS_GetNextSearchDomain>:
_uDNS_GetNextSearchDomain():
    8088:	e3 05       	[--SP] = (R7:4, P5:3);
    808a:	22 32       	P4 = R2;
    808c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x5d4 */
    8090:	00 e8 05 00 	LINK 0x14;		/* (20) */
    8094:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    8098:	29 30       	R5 = R1;
    809a:	62 99       	R2 = B[P4] (X);
    809c:	55 91       	P5 = [P2];
    809e:	82 0c       	CC = R2 < 0x0;
    80a0:	0b 14       	IF !CC JUMP 0x80b6 <_uDNS_GetNextSearchDomain+0x2e> (BP);
    80a2:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4340(17216) */
    80a6:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    80a8:	01 e1 34 44 	R1.L = 0x4434;		/* (17460)	R1=0x4434(17460) */
    80ac:	ff e3 aa bf 	CALL 0x0 <_FlushAddressCacheRecords>;
    80b0:	94 20       	JUMP.S 0x81d8 <_uDNS_GetNextSearchDomain+0x150>;
    80b2:	6d 91       	P5 = [P5];
    80b4:	03 20       	JUMP.S 0x80ba <_uDNS_GetNextSearchDomain+0x32>;
    80b6:	12 32       	P2 = R2;
    80b8:	0a 6c       	P2 += 0x1;		/* (  1) */
    80ba:	fa 6f       	P2 += -0x1;		/* ( -1) */
    80bc:	42 0c       	CC = P2 == 0x0;
    80be:	fa 13       	IF !CC JUMP 0x80b2 <_uDNS_GetNextSearchDomain+0x2a>;
    80c0:	78 20       	JUMP.S 0x81b0 <_uDNS_GetNextSearchDomain+0x128>;
    80c2:	7d 30       	R7 = P5;
    80c4:	27 64       	R7 += 0x4;		/* (  4) */
    80c6:	07 30       	R0 = R7;
    80c8:	ff e3 9c bf 	CALL 0x0 <_FlushAddressCacheRecords>;
    80cc:	00 0d       	CC = R0 <= 0x0;
    80ce:	3b 18       	IF CC JUMP 0x8144 <_uDNS_GetNextSearchDomain+0xbc>;
    80d0:	08 30       	R1 = R0;
    80d2:	f9 67       	R1 += -0x1;		/* ( -1) */
    80d4:	07 30       	R0 = R7;
    80d6:	ff e3 95 bf 	CALL 0x0 <_FlushAddressCacheRecords>;
    80da:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4434(17460) */
    80de:	20 30       	R4 = R0;
    80e0:	01 e1 68 44 	R1.L = 0x4468;		/* (17512)	R1=0x4468(17512) */
    80e4:	ff e3 8e bf 	CALL 0x0 <_FlushAddressCacheRecords>;
    80e8:	00 0c       	CC = R0 == 0x0;
    80ea:	0d 1c       	IF CC JUMP 0x8104 <_uDNS_GetNextSearchDomain+0x7c> (BP);
    80ec:	18 91       	R0 = [P3];
    80ee:	00 0c       	CC = R0 == 0x0;
    80f0:	25 1c       	IF CC JUMP 0x813a <_uDNS_GetNextSearchDomain+0xb2> (BP);
    80f2:	28 e4 42 00 	R0 = [P5 + 0x108];
    80f6:	f0 b0       	[SP + 0xc] = R0;
    80f8:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4468(17512) */
    80fc:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    80fe:	01 e1 70 44 	R1.L = 0x4470;		/* (17520)	R1=0x4470(17520) */
    8102:	19 20       	JUMP.S 0x8134 <_uDNS_GetNextSearchDomain+0xac>;
    8104:	b0 e4 13 00 	R0 = B[SP + 0x13] (Z);
    8108:	08 02       	CC = R0;
    810a:	1d 1c       	IF CC JUMP 0x8144 <_uDNS_GetNextSearchDomain+0xbc> (BP);
    810c:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4470(17520) */
    8110:	04 30       	R0 = R4;
    8112:	01 e1 f8 42 	R1.L = 0x42f8;		/* (17144)	R1=0x42f8(17144) */
    8116:	ff e3 75 bf 	CALL 0x0 <_FlushAddressCacheRecords>;
    811a:	00 0c       	CC = R0 == 0x0;
    811c:	14 1c       	IF CC JUMP 0x8144 <_uDNS_GetNextSearchDomain+0xbc> (BP);
    811e:	18 91       	R0 = [P3];
    8120:	00 0c       	CC = R0 == 0x0;
    8122:	0c 1c       	IF CC JUMP 0x813a <_uDNS_GetNextSearchDomain+0xb2> (BP);
    8124:	28 e4 42 00 	R0 = [P5 + 0x108];
    8128:	f0 b0       	[SP + 0xc] = R0;
    812a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x42f8(17144) */
    812e:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    8130:	01 e1 b8 44 	R1.L = 0x44b8;		/* (17592)	R1=0x44b8(17592) */
    8134:	17 30       	R2 = R7;
    8136:	ff e3 65 bf 	CALL 0x0 <_FlushAddressCacheRecords>;
    813a:	00 00       	NOP;
    813c:	60 99       	R0 = B[P4] (X);
    813e:	08 64       	R0 += 0x1;		/* (  1) */
    8140:	20 9b       	B[P4] = R0;
    8142:	34 20       	JUMP.S 0x81aa <_uDNS_GetNextSearchDomain+0x122>;
    8144:	00 00       	NOP;
    8146:	60 99       	R0 = B[P4] (X);
    8148:	08 64       	R0 += 0x1;		/* (  1) */
    814a:	20 9b       	B[P4] = R0;
    814c:	38 91       	R0 = [FP];
    814e:	05 08       	CC = R5 == R0;
    8150:	07 14       	IF !CC JUMP 0x815e <_uDNS_GetNextSearchDomain+0xd6> (BP);
    8152:	16 32       	P2 = R6;
    8154:	29 e4 42 00 	R1 = [P5 + 0x108];
    8158:	10 91       	R0 = [P2];
    815a:	01 08       	CC = R1 == R0;
    815c:	06 1c       	IF CC JUMP 0x8168 <_uDNS_GetNextSearchDomain+0xe0> (BP);
    815e:	00 00       	NOP;
    8160:	28 e4 42 00 	R0 = [P5 + 0x108];
    8164:	28 08       	CC = R0 == R5;
    8166:	15 14       	IF !CC JUMP 0x8190 <_uDNS_GetNextSearchDomain+0x108> (BP);
    8168:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    816c:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    8170:	10 91       	R0 = [P2];
    8172:	00 0c       	CC = R0 == 0x0;
    8174:	33 1c       	IF CC JUMP 0x81da <_uDNS_GetNextSearchDomain+0x152> (BP);
    8176:	28 e4 42 00 	R0 = [P5 + 0x108];
    817a:	55 30       	R2 = P5;
    817c:	f0 b0       	[SP + 0xc] = R0;
    817e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x44b8(17592) */
    8182:	22 64       	R2 += 0x4;		/* (  4) */
    8184:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    8186:	01 e1 00 45 	R1.L = 0x4500;		/* (17664)	R1=0x4500(17664) */
    818a:	ff e3 3b bf 	CALL 0x0 <_FlushAddressCacheRecords>;
    818e:	26 20       	JUMP.S 0x81da <_uDNS_GetNextSearchDomain+0x152>;
    8190:	19 91       	R1 = [P3];
    8192:	01 0c       	CC = R1 == 0x0;
    8194:	0b 1c       	IF CC JUMP 0x81aa <_uDNS_GetNextSearchDomain+0x122> (BP);
    8196:	55 30       	R2 = P5;
    8198:	f0 b0       	[SP + 0xc] = R0;
    819a:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4500(17664) */
    819e:	22 64       	R2 += 0x4;		/* (  4) */
    81a0:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    81a2:	01 e1 40 45 	R1.L = 0x4540;		/* (17728)	R1=0x4540(17728) */
    81a6:	ff e3 2d bf 	CALL 0x0 <_FlushAddressCacheRecords>;
    81aa:	00 00       	NOP;
    81ac:	6d 91       	P5 = [P5];
    81ae:	13 20       	JUMP.S 0x81d4 <_uDNS_GetNextSearchDomain+0x14c>;
    81b0:	30 e4 11 00 	R0 = [SP + 0x44];
    81b4:	00 0c       	CC = R0 == 0x0;
    81b6:	4f e1 00 00 	FP.H = 0x0;		/* (  0)	FP=0x0 <_FlushAddressCacheRecords> */
    81ba:	4b e1 00 00 	P3.H = 0x0;		/* (  0)	P3=0x0 <_FlushAddressCacheRecords> */
    81be:	46 e1 00 00 	R6.H = 0x0;		/* (  0)	R6=0x32c <_FoundDomain>(812) */
    81c2:	01 02       	R1 = CC;
    81c4:	0f e1 00 00 	FP.L = 0x0;		/* (  0)	FP=0x0 <_FlushAddressCacheRecords> */
    81c8:	0b e1 00 00 	P3.L = 0x0;		/* (  0)	P3=0x0 <_FlushAddressCacheRecords> */
    81cc:	06 e1 00 00 	R6.L = 0x0;		/* (  0)	R6=0x0 <_FlushAddressCacheRecords>(  0) */
    81d0:	b1 e6 13 00 	B[SP + 0x13] = R1;
    81d4:	45 0c       	CC = P5 == 0x0;
    81d6:	76 17       	IF !CC JUMP 0x80c2 <_uDNS_GetNextSearchDomain+0x3a> (BP);
    81d8:	07 60       	R7 = 0x0 (X);		/*		R7=0x0(  0) */
    81da:	a6 6c       	SP += 0x14;		/* ( 20) */
    81dc:	77 90       	FP = [SP++];
    81de:	07 30       	R0 = R7;
    81e0:	27 01       	RETS = [SP++];
    81e2:	a3 05       	(R7:4, P5:3) = [SP++];
    81e4:	10 00       	RTS;
	...

000081e8 <_RetrySearchDomainQuestions>:
_RetrySearchDomainQuestions():
    81e8:	78 05       	[--SP] = (R7:7);
    81ea:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    81ee:	38 30       	R7 = R0;
    81f0:	0a e1 00 00 	P2.L = 0x0;		/* (  0)	P2=0x0 <_FlushAddressCacheRecords> */
    81f4:	67 01       	[--SP] = RETS;
    81f6:	10 91       	R0 = [P2];
    81f8:	66 6f       	SP += -0x14;		/* (-20) */
    81fa:	00 0c       	CC = R0 == 0x0;
    81fc:	08 1c       	IF CC JUMP 0x820c <_RetrySearchDomainQuestions+0x24> (BP);
    81fe:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x4540(17728) */
    8202:	18 60       	R0 = 0x3 (X);		/*		R0=0x3(  3) */
    8204:	01 e1 80 45 	R1.L = 0x4580;		/* (17792)	R1=0x4580(17792) */
    8208:	ff e3 fc be 	CALL 0x0 <_FlushAddressCacheRecords>;
    820c:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    820e:	f0 b0       	[SP + 0xc] = R0;
    8210:	30 b1       	[SP + 0x10] = R0;
    8212:	42 e1 00 00 	R2.H = 0x0;		/* (  0)	R2=0x2(  2) */
    8216:	07 30       	R0 = R7;
    8218:	09 60       	R1 = 0x1 (X);		/*		R1=0x1(  1) */
    821a:	02 e1 00 00 	R2.L = 0x0;		/* (  0)	R2=0x0 <_FlushAddressCacheRecords>(  0) */
    821e:	ff e3 f1 be 	CALL 0x0 <_FlushAddressCacheRecords>;
    8222:	a6 6c       	SP += 0x14;		/* ( 20) */
    8224:	27 01       	RETS = [SP++];
    8226:	38 05       	(R7:7) = [SP++];
    8228:	10 00       	RTS;
	...

lib_mdns_version.o:     file format elf32-dv10


Disassembly of section .text:

00000000 <_get_lib_mdns_version>:
_get_lib_mdns_version():
   0:	00 00       	NOP;
   2:	00 00       	NOP;
   4:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
   6:	80 4f       	R0 <<= 0x10;
   8:	10 00       	RTS;
	...
